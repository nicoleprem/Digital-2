

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Mar 06 21:46:20 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
     7                           	psect	clrtext,global,class=CODE,delta=2
     8                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    14                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    18                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text22,local,class=CODE,merge=1,delta=2
    34                           	psect	text23,local,class=CODE,merge=1,delta=2
    35                           	psect	text24,local,class=CODE,merge=1,delta=2
    36                           	psect	text25,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text26,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text27,local,class=CODE,merge=1,delta=2
    39                           	psect	text28,local,class=CODE,merge=1,delta=2
    40                           	psect	text29,local,class=CODE,merge=1,delta=2
    41                           	psect	text30,local,class=CODE,merge=1,delta=2
    42                           	psect	text31,local,class=CODE,merge=1,delta=2
    43                           	psect	text32,local,class=CODE,merge=1,delta=2
    44                           	psect	text33,local,class=CODE,merge=1,delta=2
    45                           	psect	text34,local,class=CODE,merge=1,delta=2
    46                           	psect	text35,local,class=CODE,merge=1,delta=2
    47                           	psect	text36,local,class=CODE,merge=1,delta=2,group=2
    48                           	psect	text37,local,class=CODE,merge=1,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	dabs	1,0x7E,2
    51  0000                     
    52                           ; Version 2.20
    53                           ; Generated 12/02/2020 GMT
    54                           ; 
    55                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    56                           ; All rights reserved.
    57                           ; 
    58                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    59                           ; 
    60                           ; Redistribution and use in source and binary forms, with or without modification, are
    61                           ; permitted provided that the following conditions are met:
    62                           ; 
    63                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    64                           ;        conditions and the following disclaimer.
    65                           ; 
    66                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    67                           ;        of conditions and the following disclaimer in the documentation and/or other
    68                           ;        materials provided with the distribution.
    69                           ; 
    70                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    71                           ;        software without specific prior written permission.
    72                           ; 
    73                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    74                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    75                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    76                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    77                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    78                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    79                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    80                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    81                           ; 
    82                           ; 
    83                           ; Code-generator required, PIC16F887 Definitions
    84                           ; 
    85                           ; SFR Addresses
    86  0000                     	;# 
    87  0001                     	;# 
    88  0002                     	;# 
    89  0003                     	;# 
    90  0004                     	;# 
    91  0005                     	;# 
    92  0006                     	;# 
    93  0007                     	;# 
    94  0008                     	;# 
    95  0009                     	;# 
    96  000A                     	;# 
    97  000B                     	;# 
    98  000C                     	;# 
    99  000D                     	;# 
   100  000E                     	;# 
   101  000E                     	;# 
   102  000F                     	;# 
   103  0010                     	;# 
   104  0011                     	;# 
   105  0012                     	;# 
   106  0013                     	;# 
   107  0014                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001B                     	;# 
   116  001B                     	;# 
   117  001C                     	;# 
   118  001D                     	;# 
   119  001E                     	;# 
   120  001F                     	;# 
   121  0081                     	;# 
   122  0085                     	;# 
   123  0086                     	;# 
   124  0087                     	;# 
   125  0088                     	;# 
   126  0089                     	;# 
   127  008C                     	;# 
   128  008D                     	;# 
   129  008E                     	;# 
   130  008F                     	;# 
   131  0090                     	;# 
   132  0091                     	;# 
   133  0092                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0094                     	;# 
   138  0095                     	;# 
   139  0096                     	;# 
   140  0097                     	;# 
   141  0098                     	;# 
   142  0099                     	;# 
   143  009A                     	;# 
   144  009B                     	;# 
   145  009C                     	;# 
   146  009D                     	;# 
   147  009E                     	;# 
   148  009F                     	;# 
   149  0105                     	;# 
   150  0107                     	;# 
   151  0108                     	;# 
   152  0109                     	;# 
   153  010C                     	;# 
   154  010C                     	;# 
   155  010D                     	;# 
   156  010E                     	;# 
   157  010F                     	;# 
   158  0185                     	;# 
   159  0187                     	;# 
   160  0188                     	;# 
   161  0189                     	;# 
   162  018C                     	;# 
   163  018D                     	;# 
   164  0000                     	;# 
   165  0001                     	;# 
   166  0002                     	;# 
   167  0003                     	;# 
   168  0004                     	;# 
   169  0005                     	;# 
   170  0006                     	;# 
   171  0007                     	;# 
   172  0008                     	;# 
   173  0009                     	;# 
   174  000A                     	;# 
   175  000B                     	;# 
   176  000C                     	;# 
   177  000D                     	;# 
   178  000E                     	;# 
   179  000E                     	;# 
   180  000F                     	;# 
   181  0010                     	;# 
   182  0011                     	;# 
   183  0012                     	;# 
   184  0013                     	;# 
   185  0014                     	;# 
   186  0015                     	;# 
   187  0015                     	;# 
   188  0016                     	;# 
   189  0017                     	;# 
   190  0018                     	;# 
   191  0019                     	;# 
   192  001A                     	;# 
   193  001B                     	;# 
   194  001B                     	;# 
   195  001C                     	;# 
   196  001D                     	;# 
   197  001E                     	;# 
   198  001F                     	;# 
   199  0081                     	;# 
   200  0085                     	;# 
   201  0086                     	;# 
   202  0087                     	;# 
   203  0088                     	;# 
   204  0089                     	;# 
   205  008C                     	;# 
   206  008D                     	;# 
   207  008E                     	;# 
   208  008F                     	;# 
   209  0090                     	;# 
   210  0091                     	;# 
   211  0092                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0094                     	;# 
   216  0095                     	;# 
   217  0096                     	;# 
   218  0097                     	;# 
   219  0098                     	;# 
   220  0099                     	;# 
   221  009A                     	;# 
   222  009B                     	;# 
   223  009C                     	;# 
   224  009D                     	;# 
   225  009E                     	;# 
   226  009F                     	;# 
   227  0105                     	;# 
   228  0107                     	;# 
   229  0108                     	;# 
   230  0109                     	;# 
   231  010C                     	;# 
   232  010C                     	;# 
   233  010D                     	;# 
   234  010E                     	;# 
   235  010F                     	;# 
   236  0185                     	;# 
   237  0187                     	;# 
   238  0188                     	;# 
   239  0189                     	;# 
   240  018C                     	;# 
   241  018D                     	;# 
   242  0000                     	;# 
   243  0001                     	;# 
   244  0002                     	;# 
   245  0003                     	;# 
   246  0004                     	;# 
   247  0005                     	;# 
   248  0006                     	;# 
   249  0007                     	;# 
   250  0008                     	;# 
   251  0009                     	;# 
   252  000A                     	;# 
   253  000B                     	;# 
   254  000C                     	;# 
   255  000D                     	;# 
   256  000E                     	;# 
   257  000E                     	;# 
   258  000F                     	;# 
   259  0010                     	;# 
   260  0011                     	;# 
   261  0012                     	;# 
   262  0013                     	;# 
   263  0014                     	;# 
   264  0015                     	;# 
   265  0015                     	;# 
   266  0016                     	;# 
   267  0017                     	;# 
   268  0018                     	;# 
   269  0019                     	;# 
   270  001A                     	;# 
   271  001B                     	;# 
   272  001B                     	;# 
   273  001C                     	;# 
   274  001D                     	;# 
   275  001E                     	;# 
   276  001F                     	;# 
   277  0081                     	;# 
   278  0085                     	;# 
   279  0086                     	;# 
   280  0087                     	;# 
   281  0088                     	;# 
   282  0089                     	;# 
   283  008C                     	;# 
   284  008D                     	;# 
   285  008E                     	;# 
   286  008F                     	;# 
   287  0090                     	;# 
   288  0091                     	;# 
   289  0092                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0094                     	;# 
   294  0095                     	;# 
   295  0096                     	;# 
   296  0097                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009A                     	;# 
   300  009B                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  009F                     	;# 
   305  0105                     	;# 
   306  0107                     	;# 
   307  0108                     	;# 
   308  0109                     	;# 
   309  010C                     	;# 
   310  010C                     	;# 
   311  010D                     	;# 
   312  010E                     	;# 
   313  010F                     	;# 
   314  0185                     	;# 
   315  0187                     	;# 
   316  0188                     	;# 
   317  0189                     	;# 
   318  018C                     	;# 
   319  018D                     	;# 
   320                           
   321                           	psect	strings
   322  1000                     __pstrings:
   323  1000                     stringtab:
   324  1000                     __stringtab:
   325  1000                     stringcode:	
   326                           ;	String table - string pointers are 1 byte each
   327                           
   328  1000                     stringdir:
   329  1000  3010               	movlw	high stringdir
   330  1001  008A               	movwf	10
   331  1002  0804               	movf	4,w
   332  1003  0A84               	incf	4,f
   333  1004  0782               	addwf	2,f
   334  1005                     __stringbase:
   335  1005  3400               	retlw	0
   336  1006                     __end_of__stringtab:
   337  1006                     __powers_:
   338  1006  3400               	retlw	0
   339  1007  3400               	retlw	0
   340  1008  3480               	retlw	128
   341  1009  343F               	retlw	63
   342  100A  3400               	retlw	0
   343  100B  3400               	retlw	0
   344  100C  3420               	retlw	32
   345  100D  3441               	retlw	65
   346  100E  3400               	retlw	0
   347  100F  3400               	retlw	0
   348  1010  34C8               	retlw	200
   349  1011  3442               	retlw	66
   350  1012  3400               	retlw	0
   351  1013  3400               	retlw	0
   352  1014  347A               	retlw	122
   353  1015  3444               	retlw	68
   354  1016  3400               	retlw	0
   355  1017  3440               	retlw	64
   356  1018  341C               	retlw	28
   357  1019  3446               	retlw	70
   358  101A  3400               	retlw	0
   359  101B  3450               	retlw	80
   360  101C  34C3               	retlw	195
   361  101D  3447               	retlw	71
   362  101E  3400               	retlw	0
   363  101F  3424               	retlw	36
   364  1020  3474               	retlw	116
   365  1021  3449               	retlw	73
   366  1022  3480               	retlw	128
   367  1023  3496               	retlw	150
   368  1024  3418               	retlw	24
   369  1025  344B               	retlw	75
   370  1026  3420               	retlw	32
   371  1027  34BC               	retlw	188
   372  1028  34BE               	retlw	190
   373  1029  344C               	retlw	76
   374  102A  3428               	retlw	40
   375  102B  346B               	retlw	107
   376  102C  346E               	retlw	110
   377  102D  344E               	retlw	78
   378  102E  34F9               	retlw	249
   379  102F  3402               	retlw	2
   380  1030  3415               	retlw	21
   381  1031  3450               	retlw	80
   382  1032  34EC               	retlw	236
   383  1033  3478               	retlw	120
   384  1034  34AD               	retlw	173
   385  1035  3460               	retlw	96
   386  1036  34CA               	retlw	202
   387  1037  34F2               	retlw	242
   388  1038  3449               	retlw	73
   389  1039  3471               	retlw	113
   390  103A                     __end_of__powers_:
   391  103A                     __npowers_:
   392  103A  3400               	retlw	0
   393  103B  3400               	retlw	0
   394  103C  3480               	retlw	128
   395  103D  343F               	retlw	63
   396  103E  34CD               	retlw	205
   397  103F  34CC               	retlw	204
   398  1040  34CC               	retlw	204
   399  1041  343D               	retlw	61
   400  1042  340A               	retlw	10
   401  1043  34D7               	retlw	215
   402  1044  3423               	retlw	35
   403  1045  343C               	retlw	60
   404  1046  346F               	retlw	111
   405  1047  3412               	retlw	18
   406  1048  3483               	retlw	131
   407  1049  343A               	retlw	58
   408  104A  3417               	retlw	23
   409  104B  34B7               	retlw	183
   410  104C  34D1               	retlw	209
   411  104D  3438               	retlw	56
   412  104E  34AC               	retlw	172
   413  104F  34C5               	retlw	197
   414  1050  3427               	retlw	39
   415  1051  3437               	retlw	55
   416  1052  34BD               	retlw	189
   417  1053  3437               	retlw	55
   418  1054  3486               	retlw	134
   419  1055  3435               	retlw	53
   420  1056  3495               	retlw	149
   421  1057  34BF               	retlw	191
   422  1058  34D6               	retlw	214
   423  1059  3433               	retlw	51
   424  105A  3477               	retlw	119
   425  105B  34CC               	retlw	204
   426  105C  342B               	retlw	43
   427  105D  3432               	retlw	50
   428  105E  345F               	retlw	95
   429  105F  3470               	retlw	112
   430  1060  3489               	retlw	137
   431  1061  3430               	retlw	48
   432  1062  34FF               	retlw	255
   433  1063  34E6               	retlw	230
   434  1064  34DB               	retlw	219
   435  1065  342E               	retlw	46
   436  1066  3408               	retlw	8
   437  1067  34E5               	retlw	229
   438  1068  343C               	retlw	60
   439  1069  341E               	retlw	30
   440  106A  3460               	retlw	96
   441  106B  3442               	retlw	66
   442  106C  34A2               	retlw	162
   443  106D  340D               	retlw	13
   444  106E                     __end_of__npowers_:
   445  106E                     _dpowers:
   446  106E  3401               	retlw	1
   447  106F  3400               	retlw	0
   448  1070  3400               	retlw	0
   449  1071  3400               	retlw	0
   450  1072  340A               	retlw	10
   451  1073  3400               	retlw	0
   452  1074  3400               	retlw	0
   453  1075  3400               	retlw	0
   454  1076  3464               	retlw	100
   455  1077  3400               	retlw	0
   456  1078  3400               	retlw	0
   457  1079  3400               	retlw	0
   458  107A  34E8               	retlw	232
   459  107B  3403               	retlw	3
   460  107C  3400               	retlw	0
   461  107D  3400               	retlw	0
   462  107E  3410               	retlw	16
   463  107F  3427               	retlw	39
   464  1080  3400               	retlw	0
   465  1081  3400               	retlw	0
   466  1082  34A0               	retlw	160
   467  1083  3486               	retlw	134
   468  1084  3401               	retlw	1
   469  1085  3400               	retlw	0
   470  1086  3440               	retlw	64
   471  1087  3442               	retlw	66
   472  1088  340F               	retlw	15
   473  1089  3400               	retlw	0
   474  108A  3480               	retlw	128
   475  108B  3496               	retlw	150
   476  108C  3498               	retlw	152
   477  108D  3400               	retlw	0
   478  108E  3400               	retlw	0
   479  108F  34E1               	retlw	225
   480  1090  34F5               	retlw	245
   481  1091  3405               	retlw	5
   482  1092  3400               	retlw	0
   483  1093  34CA               	retlw	202
   484  1094  349A               	retlw	154
   485  1095  343B               	retlw	59
   486  1096                     __end_of_dpowers:
   487  0019                     _TXREG	set	25
   488  000B                     _INTCONbits	set	11
   489  0018                     _RCSTAbits	set	24
   490  0008                     _PORTD	set	8
   491  0007                     _PORTC	set	7
   492  0006                     _PORTB	set	6
   493  0013                     _SSPBUF	set	19
   494  0014                     _SSPCON	set	20
   495  0063                     _SSPIF	set	99
   496  0099                     _SPBRG	set	153
   497  008C                     _PIE1bits	set	140
   498  0098                     _TXSTAbits	set	152
   499  0087                     _TRISCbits	set	135
   500  0088                     _TRISD	set	136
   501  0087                     _TRISC	set	135
   502  0086                     _TRISB	set	134
   503  0091                     _SSPCON2	set	145
   504  0094                     _SSPSTAT	set	148
   505  0093                     _SSPADD	set	147
   506  04C1                     _TRMT	set	1217
   507  04A2                     _R_W	set	1186
   508  048B                     _RCEN	set	1163
   509  048E                     _ACKSTAT	set	1166
   510  048C                     _ACKEN	set	1164
   511  048D                     _ACKDT	set	1165
   512  048A                     _PEN	set	1162
   513  0489                     _RSEN	set	1161
   514  0488                     _SEN	set	1160
   515  043C                     _TRISC4	set	1084
   516  043B                     _TRISC3	set	1083
   517  0187                     _BAUDCTLbits	set	391
   518  0189                     _ANSELH	set	393
   519  0188                     _ANSEL	set	392
   520  1096                     STR_1:
   521  1096  3425               	retlw	37	;'%'
   522  1097  3433               	retlw	51	;'3'
   523  1098  342E               	retlw	46	;'.'
   524  1099  3430               	retlw	48	;'0'
   525  109A  3466               	retlw	102	;'f'
   526  109B  3400               	retlw	0
   527                           
   528                           	psect	cinit
   529  07F3                     start_initialization:	
   530                           ; #config settings
   531                           
   532  07F3                     __initialization:
   533                           
   534                           ; Clear objects allocated to BANK1
   535  07F3  1383               	bcf	3,7	;select IRP bank0
   536  07F4  30D4               	movlw	low __pbssBANK1
   537  07F5  0084               	movwf	4
   538  07F6  30EC               	movlw	low (__pbssBANK1+24)
   539  07F7  160A  158A  2305  120A  118A  	fcall	clear_ram0
   540  07FC                     end_of_initialization:	
   541                           ;End of C runtime variable initialization code
   542                           
   543  07FC                     __end_of__initialization:
   544  07FC  0183               	clrf	3
   545  07FD  120A  118A  2809   	ljmp	_main	;jump to C main() function
   546                           
   547                           	psect	bssBANK1
   548  00D4                     __pbssBANK1:
   549  00D4                     _x:
   550  00D4                     	ds	4
   551  00D8                     _out:
   552  00D8                     	ds	20
   553                           
   554                           	psect	clrtext
   555  1B05                     clear_ram0:	
   556                           ;	Called with FSR containing the base address, and
   557                           ;	W with the last address+1
   558                           
   559  1B05  0064               	clrwdt	;clear the watchdog before getting into this loop
   560  1B06                     clrloop0:
   561  1B06  0180               	clrf	0	;clear RAM location pointed to by FSR
   562  1B07  0A84               	incf	4,f	;increment pointer
   563  1B08  0604               	xorwf	4,w	;XOR with final address
   564  1B09  1903               	btfsc	3,2	;have we reached the end yet?
   565  1B0A  3400               	retlw	0	;all done for this memory range, return
   566  1B0B  0604               	xorwf	4,w	;XOR again to restore value
   567  1B0C  2B06               	goto	clrloop0	;do the next byte
   568                           
   569                           	psect	cstackBANK1
   570  00A0                     __pcstackBANK1:
   571  00A0                     toFloat@isfraction:
   572                           
   573                           ; 1 bytes @ 0x0
   574  00A0                     	ds	1
   575  00A1                     toFloat@result:
   576                           
   577                           ; 4 bytes @ 0x1
   578  00A1                     	ds	4
   579  00A5                     ??_LM75_read:
   580                           
   581                           ; 1 bytes @ 0x5
   582  00A5                     	ds	2
   583  00A7                     LM75_read@MSB:
   584                           
   585                           ; 2 bytes @ 0x7
   586  00A7                     	ds	2
   587  00A9                     LM75_read@LSB:
   588                           
   589                           ; 2 bytes @ 0x9
   590  00A9                     	ds	2
   591  00AB                     LM75_read@regAddress:
   592                           
   593                           ; 1 bytes @ 0xB
   594  00AB                     	ds	1
   595  00AC                     ?_sprintf:
   596  00AC                     sprintf@f:	
   597                           ; 2 bytes @ 0xC
   598                           
   599                           
   600                           ; 1 bytes @ 0xC
   601  00AC                     	ds	5
   602  00B1                     ??_sprintf:
   603                           
   604                           ; 1 bytes @ 0x11
   605  00B1                     	ds	5
   606  00B6                     _sprintf$1044:
   607                           
   608                           ; 4 bytes @ 0x16
   609  00B6                     	ds	4
   610  00BA                     sprintf@ap:
   611                           
   612                           ; 1 bytes @ 0x1A
   613  00BA                     	ds	1
   614  00BB                     sprintf@val:
   615                           
   616                           ; 4 bytes @ 0x1B
   617  00BB                     	ds	4
   618  00BF                     sprintf@flag:
   619                           
   620                           ; 2 bytes @ 0x1F
   621  00BF                     	ds	2
   622  00C1                     sprintf@width:
   623                           
   624                           ; 2 bytes @ 0x21
   625  00C1                     	ds	2
   626  00C3                     sprintf@tmpval:
   627                           
   628                           ; 4 bytes @ 0x23
   629  00C3                     	ds	4
   630  00C7                     sprintf@eexp:
   631                           
   632                           ; 2 bytes @ 0x27
   633  00C7                     	ds	2
   634  00C9                     sprintf@fval:
   635                           
   636                           ; 4 bytes @ 0x29
   637  00C9                     	ds	4
   638  00CD                     sprintf@sp:
   639                           
   640                           ; 1 bytes @ 0x2D
   641  00CD                     	ds	1
   642  00CE                     sprintf@prec:
   643                           
   644                           ; 2 bytes @ 0x2E
   645  00CE                     	ds	2
   646  00D0                     sprintf@c:
   647                           
   648                           ; 1 bytes @ 0x30
   649  00D0                     	ds	1
   650  00D1                     ??_main:
   651                           
   652                           ; 1 bytes @ 0x31
   653  00D1                     	ds	3
   654                           
   655                           	psect	cstackCOMMON
   656  0070                     __pcstackCOMMON:
   657  0070                     ?_isdigit:
   658  0070                     ?___fleq:	
   659                           ; 1 bit 
   660                           
   661  0070                     ?___flge:	
   662                           ; 1 bit 
   663                           
   664  0070                     ?_INIT_UART:	
   665                           ; 1 bit 
   666                           
   667  0070                     ??_INIT_UART:	
   668                           ; 1 bytes @ 0x0
   669                           
   670  0070                     ?_write:	
   671                           ; 1 bytes @ 0x0
   672                           
   673  0070                     ??_isdigit:	
   674                           ; 1 bytes @ 0x0
   675                           
   676  0070                     ?_I2C_init:	
   677                           ; 1 bytes @ 0x0
   678                           
   679  0070                     ?_I2C_start:	
   680                           ; 1 bytes @ 0x0
   681                           
   682  0070                     ??_I2C_start:	
   683                           ; 1 bytes @ 0x0
   684                           
   685  0070                     ?_I2C_restart:	
   686                           ; 1 bytes @ 0x0
   687                           
   688  0070                     ??_I2C_restart:	
   689                           ; 1 bytes @ 0x0
   690                           
   691  0070                     ?_I2C_stop:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0070                     ??_I2C_stop:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0070                     ?_I2C_ack:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0070                     ??_I2C_ack:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0070                     ?_I2C_write:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0070                     ??_I2C_write:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0070                     ?_I2C_read:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0070                     ?_LM75_init:	
   713                           ; 1 bytes @ 0x0
   714                           
   715  0070                     ?_setup:	
   716                           ; 1 bytes @ 0x0
   717                           
   718  0070                     ??_setup:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0070                     ?_main:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0070                     ?__Umul8_16:	
   725                           ; 1 bytes @ 0x0
   726                           
   727  0070                     ?___wmul:	
   728                           ; 2 bytes @ 0x0
   729                           
   730  0070                     ?___awmod:	
   731                           ; 2 bytes @ 0x0
   732                           
   733  0070                     ?___lwmod:	
   734                           ; 2 bytes @ 0x0
   735                           
   736  0070                     ?__tdiv_to_l_:	
   737                           ; 2 bytes @ 0x0
   738                           
   739  0070                     ?__div_to_l_:	
   740                           ; 4 bytes @ 0x0
   741                           
   742  0070                     ?___lldiv:	
   743                           ; 4 bytes @ 0x0
   744                           
   745  0070                     ?___aldiv:	
   746                           ; 4 bytes @ 0x0
   747                           
   748  0070                     ?___flneg:	
   749                           ; 4 bytes @ 0x0
   750                           
   751  0070                     ?___llmod:	
   752                           ; 4 bytes @ 0x0
   753                           
   754  0070                     ?___xxtofl:	
   755                           ; 4 bytes @ 0x0
   756                           
   757  0070                     I2C_ack@acknowledge:	
   758                           ; 4 bytes @ 0x0
   759                           
   760  0070                     I2C_write@data:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0070                     __Umul8_16@multiplicand:	
   764                           ; 1 bytes @ 0x0
   765                           
   766  0070                     _isdigit$843:	
   767                           ; 1 bytes @ 0x0
   768                           
   769  0070                     write@entrada:	
   770                           ; 1 bytes @ 0x0
   771                           
   772  0070                     ___wmul@multiplier:	
   773                           ; 2 bytes @ 0x0
   774                           
   775  0070                     ___awmod@divisor:	
   776                           ; 2 bytes @ 0x0
   777                           
   778  0070                     ___lwmod@divisor:	
   779                           ; 2 bytes @ 0x0
   780                           
   781  0070                     ___lldiv@divisor:	
   782                           ; 2 bytes @ 0x0
   783                           
   784  0070                     ___aldiv@divisor:	
   785                           ; 4 bytes @ 0x0
   786                           
   787  0070                     __div_to_l_@f1:	
   788                           ; 4 bytes @ 0x0
   789                           
   790  0070                     ___fleq@ff1:	
   791                           ; 4 bytes @ 0x0
   792                           
   793  0070                     ___flge@ff1:	
   794                           ; 4 bytes @ 0x0
   795                           
   796  0070                     ___flneg@f1:	
   797                           ; 4 bytes @ 0x0
   798                           
   799  0070                     __tdiv_to_l_@f1:	
   800                           ; 4 bytes @ 0x0
   801                           
   802  0070                     ___llmod@divisor:	
   803                           ; 4 bytes @ 0x0
   804                           
   805  0070                     ___xxtofl@val:	
   806                           ; 4 bytes @ 0x0
   807                           
   808                           
   809                           ; 4 bytes @ 0x0
   810  0070                     	ds	1
   811  0071                     ?_LM75_set:
   812  0071                     ??_I2C_read:	
   813                           ; 1 bytes @ 0x1
   814                           
   815  0071                     I2C_read@acknowledge:	
   816                           ; 1 bytes @ 0x1
   817                           
   818  0071                     isdigit@c:	
   819                           ; 1 bytes @ 0x1
   820                           
   821  0071                     LM75_set@data:	
   822                           ; 1 bytes @ 0x1
   823                           
   824                           
   825                           ; 2 bytes @ 0x1
   826  0071                     	ds	1
   827  0072                     ??_write:
   828  0072                     ??__Umul8_16:	
   829                           ; 1 bytes @ 0x2
   830                           
   831  0072                     ___wmul@multiplicand:	
   832                           ; 1 bytes @ 0x2
   833                           
   834  0072                     ___awmod@dividend:	
   835                           ; 2 bytes @ 0x2
   836                           
   837  0072                     ___lwmod@dividend:	
   838                           ; 2 bytes @ 0x2
   839                           
   840                           
   841                           ; 2 bytes @ 0x2
   842  0072                     	ds	1
   843  0073                     ??_LM75_set:
   844  0073                     LM75_set@regAddress:	
   845                           ; 1 bytes @ 0x3
   846                           
   847                           
   848                           ; 1 bytes @ 0x3
   849  0073                     	ds	1
   850  0074                     ??___wmul:
   851  0074                     ??___awmod:	
   852                           ; 1 bytes @ 0x4
   853                           
   854  0074                     ??___flneg:	
   855                           ; 1 bytes @ 0x4
   856                           
   857  0074                     ??___lwmod:	
   858                           ; 1 bytes @ 0x4
   859                           
   860  0074                     ??___xxtofl:	
   861                           ; 1 bytes @ 0x4
   862                           
   863  0074                     ___wmul@product:	
   864                           ; 1 bytes @ 0x4
   865                           
   866  0074                     __Umul8_16@product:	
   867                           ; 2 bytes @ 0x4
   868                           
   869  0074                     ___lldiv@dividend:	
   870                           ; 2 bytes @ 0x4
   871                           
   872  0074                     ___aldiv@dividend:	
   873                           ; 4 bytes @ 0x4
   874                           
   875  0074                     __div_to_l_@f2:	
   876                           ; 4 bytes @ 0x4
   877                           
   878  0074                     ___fleq@ff2:	
   879                           ; 4 bytes @ 0x4
   880                           
   881  0074                     ___flge@ff2:	
   882                           ; 4 bytes @ 0x4
   883                           
   884  0074                     __tdiv_to_l_@f2:	
   885                           ; 4 bytes @ 0x4
   886                           
   887  0074                     ___llmod@dividend:	
   888                           ; 4 bytes @ 0x4
   889                           
   890                           
   891                           ; 4 bytes @ 0x4
   892  0074                     	ds	1
   893  0075                     ___awmod@counter:
   894  0075                     ___lwmod@counter:	
   895                           ; 1 bytes @ 0x5
   896                           
   897                           
   898                           ; 1 bytes @ 0x5
   899  0075                     	ds	1
   900  0076                     ?___lwdiv:
   901  0076                     ___awmod@sign:	
   902                           ; 2 bytes @ 0x6
   903                           
   904  0076                     ___lwdiv@divisor:	
   905                           ; 1 bytes @ 0x6
   906                           
   907  0076                     __Umul8_16@word_mpld:	
   908                           ; 2 bytes @ 0x6
   909                           
   910                           
   911                           ; 2 bytes @ 0x6
   912  0076                     	ds	1
   913  0077                     ?___awdiv:
   914  0077                     ___awdiv@divisor:	
   915                           ; 2 bytes @ 0x7
   916                           
   917                           
   918                           ; 2 bytes @ 0x7
   919  0077                     	ds	1
   920  0078                     ??__tdiv_to_l_:
   921  0078                     ??__div_to_l_:	
   922                           ; 1 bytes @ 0x8
   923                           
   924  0078                     ??___lldiv:	
   925                           ; 1 bytes @ 0x8
   926                           
   927  0078                     ??___aldiv:	
   928                           ; 1 bytes @ 0x8
   929                           
   930  0078                     ??___fleq:	
   931                           ; 1 bytes @ 0x8
   932                           
   933  0078                     ??___flge:	
   934                           ; 1 bytes @ 0x8
   935                           
   936  0078                     ??___llmod:	
   937                           ; 1 bytes @ 0x8
   938                           
   939  0078                     __Umul8_16@multiplier:	
   940                           ; 1 bytes @ 0x8
   941                           
   942  0078                     ___xxtofl@sign:	
   943                           ; 1 bytes @ 0x8
   944                           
   945  0078                     ___lwdiv@dividend:	
   946                           ; 1 bytes @ 0x8
   947                           
   948                           
   949                           ; 2 bytes @ 0x8
   950  0078                     	ds	1
   951  0079                     ??_I2C_init:
   952  0079                     ___llmod@counter:	
   953                           ; 1 bytes @ 0x9
   954                           
   955  0079                     ___xxtofl@exp:	
   956                           ; 1 bytes @ 0x9
   957                           
   958  0079                     ___awdiv@dividend:	
   959                           ; 1 bytes @ 0x9
   960                           
   961  0079                     ___lldiv@quotient:	
   962                           ; 2 bytes @ 0x9
   963                           
   964                           
   965                           ; 4 bytes @ 0x9
   966  0079                     	ds	1
   967  007A                     ??___lwdiv:
   968  007A                     ___xxtofl@arg:	
   969                           ; 1 bytes @ 0xA
   970                           
   971                           
   972                           ; 4 bytes @ 0xA
   973  007A                     	ds	1
   974  007B                     ??___awdiv:
   975  007B                     ___lwdiv@quotient:	
   976                           ; 1 bytes @ 0xB
   977                           
   978                           
   979                           ; 2 bytes @ 0xB
   980  007B                     	ds	2
   981  007D                     I2C_init@speed:
   982  007D                     ___lldiv@counter:	
   983                           ; 1 bytes @ 0xD
   984                           
   985  007D                     ___lwdiv@counter:	
   986                           ; 1 bytes @ 0xD
   987                           
   988                           
   989                           ; 1 bytes @ 0xD
   990  007D                     	ds	1
   991  007E                     ??_LM75_init:
   992  007E                     ??___flsub:	
   993                           ; 1 bytes @ 0xE
   994                           
   995                           
   996                           	psect	cstackBANK0
   997  0020                     __pcstackBANK0:	
   998                           ; 1 bytes @ 0xE
   999                           
  1000  0020                     ___aldiv@counter:
  1001  0020                     ___awdiv@counter:	
  1002                           ; 1 bytes @ 0x0
  1003                           
  1004  0020                     __div_to_l_@quot:	
  1005                           ; 1 bytes @ 0x0
  1006                           
  1007  0020                     __tdiv_to_l_@quot:	
  1008                           ; 4 bytes @ 0x0
  1009                           
  1010                           
  1011                           ; 4 bytes @ 0x0
  1012  0020                     	ds	1
  1013  0021                     ___aldiv@sign:
  1014  0021                     ___awdiv@sign:	
  1015                           ; 1 bytes @ 0x1
  1016                           
  1017                           
  1018                           ; 1 bytes @ 0x1
  1019  0021                     	ds	1
  1020  0022                     ___awdiv@quotient:
  1021  0022                     ___aldiv@quotient:	
  1022                           ; 2 bytes @ 0x2
  1023                           
  1024                           
  1025                           ; 4 bytes @ 0x2
  1026  0022                     	ds	2
  1027  0024                     ?___flmul:
  1028  0024                     __div_to_l_@cntr:	
  1029                           ; 4 bytes @ 0x4
  1030                           
  1031  0024                     __tdiv_to_l_@cntr:	
  1032                           ; 1 bytes @ 0x4
  1033                           
  1034  0024                     ___flmul@b:	
  1035                           ; 1 bytes @ 0x4
  1036                           
  1037                           
  1038                           ; 4 bytes @ 0x4
  1039  0024                     	ds	1
  1040  0025                     __div_to_l_@exp1:
  1041  0025                     __tdiv_to_l_@exp1:	
  1042                           ; 1 bytes @ 0x5
  1043                           
  1044                           
  1045                           ; 1 bytes @ 0x5
  1046  0025                     	ds	3
  1047  0028                     ___flmul@a:
  1048                           
  1049                           ; 4 bytes @ 0x8
  1050  0028                     	ds	4
  1051  002C                     ??___flmul:
  1052                           
  1053                           ; 1 bytes @ 0xC
  1054  002C                     	ds	5
  1055  0031                     ___flmul@sign:
  1056                           
  1057                           ; 1 bytes @ 0x11
  1058  0031                     	ds	1
  1059  0032                     ___flmul@grs:
  1060                           
  1061                           ; 4 bytes @ 0x12
  1062  0032                     	ds	4
  1063  0036                     ___flmul@aexp:
  1064                           
  1065                           ; 1 bytes @ 0x16
  1066  0036                     	ds	1
  1067  0037                     ___flmul@bexp:
  1068                           
  1069                           ; 1 bytes @ 0x17
  1070  0037                     	ds	1
  1071  0038                     ___flmul@prod:
  1072                           
  1073                           ; 4 bytes @ 0x18
  1074  0038                     	ds	4
  1075  003C                     ___flmul@temp:
  1076                           
  1077                           ; 2 bytes @ 0x1C
  1078  003C                     	ds	2
  1079  003E                     ?_fround:
  1080  003E                     ?_scale:	
  1081                           ; 4 bytes @ 0x1E
  1082                           
  1083                           
  1084                           ; 4 bytes @ 0x1E
  1085  003E                     	ds	4
  1086  0042                     ??_fround:
  1087  0042                     ??_scale:	
  1088                           ; 1 bytes @ 0x22
  1089                           
  1090                           
  1091                           ; 1 bytes @ 0x22
  1092  0042                     	ds	7
  1093  0049                     _fround$1042:
  1094                           
  1095                           ; 4 bytes @ 0x29
  1096  0049                     	ds	3
  1097  004C                     _scale$1043:
  1098                           
  1099                           ; 4 bytes @ 0x2C
  1100  004C                     	ds	1
  1101  004D                     _fround$1041:
  1102                           
  1103                           ; 4 bytes @ 0x2D
  1104  004D                     	ds	3
  1105  0050                     scale@scl:
  1106                           
  1107                           ; 1 bytes @ 0x30
  1108  0050                     	ds	1
  1109  0051                     ?___fltol:
  1110  0051                     fround@prec:	
  1111                           ; 4 bytes @ 0x31
  1112                           
  1113  0051                     ___fltol@f1:	
  1114                           ; 1 bytes @ 0x31
  1115                           
  1116                           
  1117                           ; 4 bytes @ 0x31
  1118  0051                     	ds	1
  1119  0052                     ?___fladd:
  1120  0052                     ___fladd@b:	
  1121                           ; 4 bytes @ 0x32
  1122                           
  1123                           
  1124                           ; 4 bytes @ 0x32
  1125  0052                     	ds	3
  1126  0055                     ??___fltol:
  1127                           
  1128                           ; 1 bytes @ 0x35
  1129  0055                     	ds	1
  1130  0056                     ___fladd@a:
  1131                           
  1132                           ; 4 bytes @ 0x36
  1133  0056                     	ds	4
  1134  005A                     ??___fladd:
  1135  005A                     ___fltol@sign1:	
  1136                           ; 1 bytes @ 0x3A
  1137                           
  1138                           
  1139                           ; 1 bytes @ 0x3A
  1140  005A                     	ds	1
  1141  005B                     ___fltol@exp1:
  1142                           
  1143                           ; 1 bytes @ 0x3B
  1144  005B                     	ds	7
  1145  0062                     ___fladd@signs:
  1146                           
  1147                           ; 1 bytes @ 0x42
  1148  0062                     	ds	1
  1149  0063                     ___fladd@aexp:
  1150                           
  1151                           ; 1 bytes @ 0x43
  1152  0063                     	ds	1
  1153  0064                     ___fladd@bexp:
  1154                           
  1155                           ; 1 bytes @ 0x44
  1156  0064                     	ds	1
  1157  0065                     ___fladd@grs:
  1158                           
  1159                           ; 1 bytes @ 0x45
  1160  0065                     	ds	1
  1161  0066                     ?_toFloat:
  1162  0066                     ?___flsub:	
  1163                           ; 4 bytes @ 0x46
  1164                           
  1165  0066                     toFloat@tempr:	
  1166                           ; 4 bytes @ 0x46
  1167                           
  1168  0066                     ___flsub@a:	
  1169                           ; 2 bytes @ 0x46
  1170                           
  1171                           
  1172                           ; 4 bytes @ 0x46
  1173  0066                     	ds	4
  1174  006A                     ??_toFloat:
  1175  006A                     ___flsub@b:	
  1176                           ; 1 bytes @ 0x4A
  1177                           
  1178                           
  1179                           ; 4 bytes @ 0x4A
  1180  006A                     	ds	2
  1181  006C                     ?_LM75_read:
  1182                           
  1183                           ; 4 bytes @ 0x4C
  1184  006C                     	ds	4
  1185                           
  1186                           	psect	maintext
  1187  0009                     __pmaintext:	
  1188 ;;
  1189 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
  1190 ;;
  1191 ;; *************** function _main *****************
  1192 ;; Defined at:
  1193 ;;		line 50 in file "main.c"
  1194 ;; Parameters:    Size  Location     Type
  1195 ;;		None
  1196 ;; Auto vars:     Size  Location     Type
  1197 ;;		None
  1198 ;; Return value:  Size  Location     Type
  1199 ;;                  1    wreg      void 
  1200 ;; Registers used:
  1201 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1202 ;; Tracked objects:
  1203 ;;		On entry : B00/0
  1204 ;;		On exit  : 0/0
  1205 ;;		Unchanged: 0/0
  1206 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1207 ;;      Params:         0       0       0       0       0
  1208 ;;      Locals:         0       0       0       0       0
  1209 ;;      Temps:          0       0       3       0       0
  1210 ;;      Totals:         0       0       3       0       0
  1211 ;;Total ram usage:        3 bytes
  1212 ;; Hardware stack levels required when called:    4
  1213 ;; This function calls:
  1214 ;;		_INIT_UART
  1215 ;;		_LM75_init
  1216 ;;		_LM75_read
  1217 ;;		_setup
  1218 ;;		_sprintf
  1219 ;;		_write
  1220 ;; This function is called by:
  1221 ;;		Startup code after reset
  1222 ;; This function uses a non-reentrant model
  1223 ;;
  1224                           
  1225                           
  1226                           ;psect for function _main
  1227  0009                     _main:
  1228  0009                     l3509:	
  1229                           ;incstack = 0
  1230                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1231                           
  1232                           
  1233                           ;main.c: 54:   setup ();
  1234  0009  160A  158A  238F  120A  118A  	fcall	_setup
  1235                           
  1236                           ;main.c: 55:   LM75_init();
  1237  000E  160A  118A  209C  120A  118A  	fcall	_LM75_init
  1238                           
  1239                           ;main.c: 56:   INIT_UART();
  1240  0013  160A  158A  237A  120A  118A  	fcall	_INIT_UART
  1241  0018                     l3511:
  1242                           
  1243                           ;main.c: 59:   {;main.c: 60:     sprintf(out,"%3.0f",LM75_read(0x00));
  1244  0018  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1245  0019  1683               	bsf	3,5	;RP0=1, select bank1
  1246  001A  1303               	bcf	3,6	;RP1=0, select bank1
  1247  001B  00D1               	movwf	??_main^(0+128)
  1248  001C  0851               	movf	??_main^(0+128),w
  1249  001D  00AC               	movwf	sprintf@f^(0+128)
  1250  001E  3000               	movlw	0
  1251  001F  160A  158A  26A4  120A  118A  	fcall	_LM75_read
  1252  0024  1283               	bcf	3,5	;RP0=0, select bank0
  1253  0025  1303               	bcf	3,6	;RP1=0, select bank0
  1254  0026  086F               	movf	?_LM75_read+3,w
  1255  0027  1683               	bsf	3,5	;RP0=1, select bank1
  1256  0028  1303               	bcf	3,6	;RP1=0, select bank1
  1257  0029  00B0               	movwf	((?_sprintf+3)^(0+128)+1)
  1258  002A  1283               	bcf	3,5	;RP0=0, select bank0
  1259  002B  1303               	bcf	3,6	;RP1=0, select bank0
  1260  002C  086E               	movf	?_LM75_read+2,w
  1261  002D  1683               	bsf	3,5	;RP0=1, select bank1
  1262  002E  1303               	bcf	3,6	;RP1=0, select bank1
  1263  002F  00AF               	movwf	((?_sprintf+2)^(0+128)+1)
  1264  0030  1283               	bcf	3,5	;RP0=0, select bank0
  1265  0031  1303               	bcf	3,6	;RP1=0, select bank0
  1266  0032  086D               	movf	?_LM75_read+1,w
  1267  0033  1683               	bsf	3,5	;RP0=1, select bank1
  1268  0034  1303               	bcf	3,6	;RP1=0, select bank1
  1269  0035  00AE               	movwf	((?_sprintf+1)^(0+128)+1)
  1270  0036  1283               	bcf	3,5	;RP0=0, select bank0
  1271  0037  1303               	bcf	3,6	;RP1=0, select bank0
  1272  0038  086C               	movf	?_LM75_read,w
  1273  0039  1683               	bsf	3,5	;RP0=1, select bank1
  1274  003A  1303               	bcf	3,6	;RP1=0, select bank1
  1275  003B  00AD               	movwf	(?_sprintf^(0+128)+1)
  1276  003C  30D8               	movlw	(low (_out| 0))& (0+255)
  1277  003D  120A  118A  2078  120A  118A  	fcall	_sprintf
  1278  0042                     l3513:
  1279                           
  1280                           ;main.c: 63:     _delay((unsigned long)((3000)*(4000000/4000.0)));
  1281  0042  3010               	movlw	16
  1282  0043  1683               	bsf	3,5	;RP0=1, select bank1
  1283  0044  1303               	bcf	3,6	;RP1=0, select bank1
  1284  0045  00D3               	movwf	(??_main^(0+128)+2)
  1285  0046  3039               	movlw	57
  1286  0047  00D2               	movwf	(??_main^(0+128)+1)
  1287  0048  300D               	movlw	13
  1288  0049  00D1               	movwf	??_main^(0+128)
  1289  004A                     u5917:
  1290  004A  0BD1               	decfsz	??_main^(0+128),f
  1291  004B  284A               	goto	u5917
  1292  004C  0BD2               	decfsz	(??_main^(0+128)+1),f
  1293  004D  284A               	goto	u5917
  1294  004E  0BD3               	decfsz	(??_main^(0+128)+2),f
  1295  004F  284A               	goto	u5917
  1296  0050                     l3515:
  1297                           
  1298                           ;main.c: 65:     write(out);
  1299  0050  30D8               	movlw	(low (_out| 0))& (0+255)
  1300  0051  00F0               	movwf	write@entrada
  1301  0052  3000               	movlw	0
  1302  0053  00F1               	movwf	write@entrada+1
  1303  0054  160A  158A  25DF  120A  118A  	fcall	_write
  1304  0059                     l3517:
  1305                           
  1306                           ;main.c: 66:     write(0xA);
  1307  0059  300A               	movlw	10
  1308  005A  00F0               	movwf	write@entrada
  1309  005B  3000               	movlw	0
  1310  005C  00F1               	movwf	write@entrada+1
  1311  005D  160A  158A  25DF  120A  118A  	fcall	_write
  1312  0062                     l3519:
  1313                           
  1314                           ;main.c: 68:      PORTD= 0b00000001;
  1315  0062  3001               	movlw	1
  1316  0063  1283               	bcf	3,5	;RP0=0, select bank0
  1317  0064  1303               	bcf	3,6	;RP1=0, select bank0
  1318  0065  0088               	movwf	8	;volatile
  1319  0066                     l3521:
  1320                           
  1321                           ;main.c: 69:         _delay((unsigned long)((1000)*(4000000/4000.0)));
  1322  0066  3006               	movlw	6
  1323  0067  1683               	bsf	3,5	;RP0=1, select bank1
  1324  0068  1303               	bcf	3,6	;RP1=0, select bank1
  1325  0069  00D3               	movwf	(??_main^(0+128)+2)
  1326  006A  3013               	movlw	19
  1327  006B  00D2               	movwf	(??_main^(0+128)+1)
  1328  006C  30AD               	movlw	173
  1329  006D  00D1               	movwf	??_main^(0+128)
  1330  006E                     u5927:
  1331  006E  0BD1               	decfsz	??_main^(0+128),f
  1332  006F  286E               	goto	u5927
  1333  0070  0BD2               	decfsz	(??_main^(0+128)+1),f
  1334  0071  286E               	goto	u5927
  1335  0072  0BD3               	decfsz	(??_main^(0+128)+2),f
  1336  0073  286E               	goto	u5927
  1337  0074  2818               	goto	l3511
  1338  0075  120A  118A  2800   	ljmp	start
  1339  0078                     __end_of_main:
  1340                           
  1341                           	psect	text1
  1342  1DDF                     __ptext1:	
  1343 ;; *************** function _write *****************
  1344 ;; Defined at:
  1345 ;;		line 24 in file "UART.c"
  1346 ;; Parameters:    Size  Location     Type
  1347 ;;  entrada         2    0[COMMON] PTR unsigned char 
  1348 ;;		 -> RAM(512), out(20), 
  1349 ;; Auto vars:     Size  Location     Type
  1350 ;;		None
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      void 
  1353 ;; Registers used:
  1354 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1360 ;;      Params:         2       0       0       0       0
  1361 ;;      Locals:         0       0       0       0       0
  1362 ;;      Temps:          2       0       0       0       0
  1363 ;;      Totals:         4       0       0       0       0
  1364 ;;Total ram usage:        4 bytes
  1365 ;; Hardware stack levels used:    1
  1366 ;; This function calls:
  1367 ;;		Nothing
  1368 ;; This function is called by:
  1369 ;;		_main
  1370 ;; This function uses a non-reentrant model
  1371 ;;
  1372                           
  1373                           
  1374                           ;psect for function _write
  1375  1DDF                     _write:
  1376  1DDF                     l3477:	
  1377                           ;incstack = 0
  1378                           ; Regs used in _write: [wreg-fsr0h+status,2+status,0]
  1379                           
  1380                           
  1381                           ;UART.c: 25:     TXREG = entrada[0];
  1382  1DDF  0870               	movf	write@entrada,w
  1383  1DE0  0084               	movwf	4
  1384  1DE1  1783               	bsf	3,7
  1385  1DE2  1C71               	btfss	write@entrada+1,0
  1386  1DE3  1383               	bcf	3,7
  1387  1DE4  0800               	movf	0,w
  1388  1DE5  1283               	bcf	3,5	;RP0=0, select bank0
  1389  1DE6  1303               	bcf	3,6	;RP1=0, select bank0
  1390  1DE7  0099               	movwf	25	;volatile
  1391  1DE8                     l160:	
  1392                           ;UART.c: 27:     }
  1393                           
  1394                           
  1395                           ;UART.c: 26:     while (TRMT == 0) {
  1396  1DE8  1683               	bsf	3,5	;RP0=1, select bank1
  1397  1DE9  1303               	bcf	3,6	;RP1=0, select bank1
  1398  1DEA  1C98               	btfss	24,1	;volatile
  1399  1DEB  2DED               	goto	u5861
  1400  1DEC  2DEE               	goto	u5860
  1401  1DED                     u5861:
  1402  1DED  2DE8               	goto	l160
  1403  1DEE                     u5860:
  1404  1DEE                     l3479:
  1405                           
  1406                           ;UART.c: 28:     TXREG = entrada[1];
  1407  1DEE  0870               	movf	write@entrada,w
  1408  1DEF  3E01               	addlw	1
  1409  1DF0  00F2               	movwf	??_write
  1410  1DF1  0871               	movf	write@entrada+1,w
  1411  1DF2  1803               	skipnc
  1412  1DF3  3E01               	addlw	1
  1413  1DF4  3E00               	addlw	0
  1414  1DF5  00F3               	movwf	??_write+1
  1415  1DF6  0872               	movf	??_write,w
  1416  1DF7  0084               	movwf	4
  1417  1DF8  1783               	bsf	3,7
  1418  1DF9  1C73               	btfss	??_write+1,0
  1419  1DFA  1383               	bcf	3,7
  1420  1DFB  0800               	movf	0,w
  1421  1DFC  1283               	bcf	3,5	;RP0=0, select bank0
  1422  1DFD  1303               	bcf	3,6	;RP1=0, select bank0
  1423  1DFE  0099               	movwf	25	;volatile
  1424  1DFF                     l163:	
  1425                           ;UART.c: 30:     }
  1426                           
  1427                           
  1428                           ;UART.c: 29:     while (TRMT == 0) {
  1429  1DFF  1683               	bsf	3,5	;RP0=1, select bank1
  1430  1E00  1303               	bcf	3,6	;RP1=0, select bank1
  1431  1E01  1C98               	btfss	24,1	;volatile
  1432  1E02  2E04               	goto	u5871
  1433  1E03  2E05               	goto	u5870
  1434  1E04                     u5871:
  1435  1E04  2DFF               	goto	l163
  1436  1E05                     u5870:
  1437  1E05                     l3481:
  1438                           
  1439                           ;UART.c: 31:     TXREG = entrada[2];
  1440  1E05  0870               	movf	write@entrada,w
  1441  1E06  3E02               	addlw	2
  1442  1E07  00F2               	movwf	??_write
  1443  1E08  0871               	movf	write@entrada+1,w
  1444  1E09  1803               	skipnc
  1445  1E0A  3E01               	addlw	1
  1446  1E0B  3E00               	addlw	0
  1447  1E0C  00F3               	movwf	??_write+1
  1448  1E0D  0872               	movf	??_write,w
  1449  1E0E  0084               	movwf	4
  1450  1E0F  1783               	bsf	3,7
  1451  1E10  1C73               	btfss	??_write+1,0
  1452  1E11  1383               	bcf	3,7
  1453  1E12  0800               	movf	0,w
  1454  1E13  1283               	bcf	3,5	;RP0=0, select bank0
  1455  1E14  1303               	bcf	3,6	;RP1=0, select bank0
  1456  1E15  0099               	movwf	25	;volatile
  1457  1E16                     l166:	
  1458                           ;UART.c: 33:     }
  1459                           
  1460                           
  1461                           ;UART.c: 32:     while (TRMT == 0) {
  1462  1E16  1683               	bsf	3,5	;RP0=1, select bank1
  1463  1E17  1303               	bcf	3,6	;RP1=0, select bank1
  1464  1E18  1C98               	btfss	24,1	;volatile
  1465  1E19  2E1B               	goto	u5881
  1466  1E1A  2E1C               	goto	u5880
  1467  1E1B                     u5881:
  1468  1E1B  2E16               	goto	l166
  1469  1E1C                     u5880:
  1470  1E1C                     l3483:
  1471                           
  1472                           ;UART.c: 34:     TXREG = entrada[3];
  1473  1E1C  0870               	movf	write@entrada,w
  1474  1E1D  3E03               	addlw	3
  1475  1E1E  00F2               	movwf	??_write
  1476  1E1F  0871               	movf	write@entrada+1,w
  1477  1E20  1803               	skipnc
  1478  1E21  3E01               	addlw	1
  1479  1E22  3E00               	addlw	0
  1480  1E23  00F3               	movwf	??_write+1
  1481  1E24  0872               	movf	??_write,w
  1482  1E25  0084               	movwf	4
  1483  1E26  1783               	bsf	3,7
  1484  1E27  1C73               	btfss	??_write+1,0
  1485  1E28  1383               	bcf	3,7
  1486  1E29  0800               	movf	0,w
  1487  1E2A  1283               	bcf	3,5	;RP0=0, select bank0
  1488  1E2B  1303               	bcf	3,6	;RP1=0, select bank0
  1489  1E2C  0099               	movwf	25	;volatile
  1490  1E2D                     l169:	
  1491                           ;UART.c: 36:     }
  1492                           
  1493                           
  1494                           ;UART.c: 35:     while (TRMT == 0) {
  1495  1E2D  1683               	bsf	3,5	;RP0=1, select bank1
  1496  1E2E  1303               	bcf	3,6	;RP1=0, select bank1
  1497  1E2F  1C98               	btfss	24,1	;volatile
  1498  1E30  2E32               	goto	u5891
  1499  1E31  2E33               	goto	u5890
  1500  1E32                     u5891:
  1501  1E32  2E2D               	goto	l169
  1502  1E33                     u5890:
  1503  1E33                     l3485:
  1504                           
  1505                           ;UART.c: 37:     TXREG = 0x20;
  1506  1E33  3020               	movlw	32
  1507  1E34  1283               	bcf	3,5	;RP0=0, select bank0
  1508  1E35  1303               	bcf	3,6	;RP1=0, select bank0
  1509  1E36  0099               	movwf	25	;volatile
  1510  1E37                     l172:	
  1511                           ;UART.c: 39:     }
  1512                           
  1513                           
  1514                           ;UART.c: 38:     while (TRMT == 0) {
  1515  1E37  1683               	bsf	3,5	;RP0=1, select bank1
  1516  1E38  1303               	bcf	3,6	;RP1=0, select bank1
  1517  1E39  1C98               	btfss	24,1	;volatile
  1518  1E3A  2E3C               	goto	u5901
  1519  1E3B  2E3D               	goto	u5900
  1520  1E3C                     u5901:
  1521  1E3C  2E37               	goto	l172
  1522  1E3D                     u5900:
  1523  1E3D                     l175:
  1524  1E3D  0008               	return
  1525  1E3E                     __end_of_write:
  1526                           
  1527                           	psect	text2
  1528  0078                     __ptext2:	
  1529 ;; *************** function _sprintf *****************
  1530 ;; Defined at:
  1531 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1532 ;; Parameters:    Size  Location     Type
  1533 ;;  sp              1    wreg     PTR unsigned char 
  1534 ;;		 -> out(20), 
  1535 ;;  f               1   12[BANK1 ] PTR const unsigned char 
  1536 ;;		 -> STR_1(6), 
  1537 ;; Auto vars:     Size  Location     Type
  1538 ;;  sp              1   45[BANK1 ] PTR unsigned char 
  1539 ;;		 -> out(20), 
  1540 ;;  fval            4   41[BANK1 ] PTR unsigned char 
  1541 ;;  tmpval          4   35[BANK1 ] struct .
  1542 ;;  val             4   27[BANK1 ] unsigned long 
  1543 ;;  prec            2   46[BANK1 ] int 
  1544 ;;  eexp            2   39[BANK1 ] int 
  1545 ;;  width           2   33[BANK1 ] int 
  1546 ;;  flag            2   31[BANK1 ] unsigned short 
  1547 ;;  cp              2    0        PTR const unsigned char 
  1548 ;;  len             2    0        unsigned int 
  1549 ;;  c               1   48[BANK1 ] unsigned char 
  1550 ;;  ap              1   26[BANK1 ] PTR void [1]
  1551 ;;		 -> ?_sprintf(2), 
  1552 ;;  d               1    0        unsigned char 
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  2   12[BANK1 ] int 
  1555 ;; Registers used:
  1556 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1562 ;;      Params:         0       0       5       0       0
  1563 ;;      Locals:         0       0      27       0       0
  1564 ;;      Temps:          0       0       5       0       0
  1565 ;;      Totals:         0       0      37       0       0
  1566 ;;Total ram usage:       37 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    3
  1569 ;; This function calls:
  1570 ;;		___awdiv
  1571 ;;		___fladd
  1572 ;;		___fleq
  1573 ;;		___flge
  1574 ;;		___flmul
  1575 ;;		___flneg
  1576 ;;		___flsub
  1577 ;;		___fltol
  1578 ;;		___lldiv
  1579 ;;		___llmod
  1580 ;;		___wmul
  1581 ;;		___xxtofl
  1582 ;;		__div_to_l_
  1583 ;;		__tdiv_to_l_
  1584 ;;		_fround
  1585 ;;		_isdigit
  1586 ;;		_scale
  1587 ;; This function is called by:
  1588 ;;		_main
  1589 ;; This function uses a non-reentrant model
  1590 ;;
  1591                           
  1592                           
  1593                           ;psect for function _sprintf
  1594  0078                     _sprintf:
  1595                           
  1596                           ;incstack = 0
  1597                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1598                           ;sprintf@sp stored from wreg
  1599  0078  1683               	bsf	3,5	;RP0=1, select bank1
  1600  0079  1303               	bcf	3,6	;RP1=0, select bank1
  1601  007A  00CD               	movwf	sprintf@sp^(0+128)
  1602  007B                     l3215:
  1603                           
  1604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1605  007B  30AD               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1606  007C  00B1               	movwf	??_sprintf^(0+128)
  1607  007D  0831               	movf	??_sprintf^(0+128),w
  1608  007E  00BA               	movwf	sprintf@ap^(0+128)
  1609                           
  1610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1611  007F  2FDC               	goto	l3465
  1612  0080                     l3217:
  1613                           
  1614                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1615  0080  3025               	movlw	37
  1616  0081  0650               	xorwf	sprintf@c^(0+128),w
  1617  0082  1903               	btfsc	3,2
  1618  0083  2885               	goto	u5391
  1619  0084  2886               	goto	u5390
  1620  0085                     u5391:
  1621  0085  2892               	goto	l3223
  1622  0086                     u5390:
  1623  0086                     l3219:
  1624                           
  1625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1626  0086  0850               	movf	sprintf@c^(0+128),w
  1627  0087  00B1               	movwf	??_sprintf^(0+128)
  1628  0088  084D               	movf	sprintf@sp^(0+128),w
  1629  0089  0084               	movwf	4
  1630  008A  0831               	movf	??_sprintf^(0+128),w
  1631  008B  1383               	bcf	3,7	;select IRP bank0
  1632  008C  0080               	movwf	0
  1633  008D                     l3221:
  1634  008D  3001               	movlw	1
  1635  008E  00B1               	movwf	??_sprintf^(0+128)
  1636  008F  0831               	movf	??_sprintf^(0+128),w
  1637  0090  07CD               	addwf	sprintf@sp^(0+128),f
  1638                           
  1639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1640  0091  2FDC               	goto	l3465
  1641  0092                     l3223:
  1642                           
  1643                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1644  0092  01C1               	clrf	sprintf@width^(0+128)
  1645  0093  01C2               	clrf	(sprintf@width+1)^(0+128)
  1646                           
  1647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1648  0094  01BF               	clrf	sprintf@flag^(0+128)
  1649  0095  01C0               	clrf	(sprintf@flag+1)^(0+128)
  1650  0096                     l3225:
  1651                           
  1652                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1653  0096  082C               	movf	sprintf@f^(0+128),w
  1654  0097  0084               	movwf	4
  1655  0098  160A  118A  2000  120A  118A  	fcall	stringdir
  1656  009D  160A  158A  2341  120A  118A  	fcall	_isdigit
  1657  00A2  1C03               	btfss	3,0
  1658  00A3  28A5               	goto	u5401
  1659  00A4  28A6               	goto	u5400
  1660  00A5                     u5401:
  1661  00A5  28E6               	goto	l3237
  1662  00A6                     u5400:
  1663  00A6                     l3227:
  1664                           
  1665                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1666  00A6  1683               	bsf	3,5	;RP0=1, select bank1
  1667  00A7  1303               	bcf	3,6	;RP1=0, select bank1
  1668  00A8  01C1               	clrf	sprintf@width^(0+128)
  1669  00A9  01C2               	clrf	(sprintf@width+1)^(0+128)
  1670  00AA                     l3229:
  1671                           
  1672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1673  00AA  300A               	movlw	10
  1674  00AB  00F0               	movwf	___wmul@multiplier
  1675  00AC  3000               	movlw	0
  1676  00AD  00F1               	movwf	___wmul@multiplier+1
  1677  00AE  1683               	bsf	3,5	;RP0=1, select bank1
  1678  00AF  1303               	bcf	3,6	;RP1=0, select bank1
  1679  00B0  0842               	movf	(sprintf@width+1)^(0+128),w
  1680  00B1  00F3               	movwf	___wmul@multiplicand+1
  1681  00B2  0841               	movf	sprintf@width^(0+128),w
  1682  00B3  00F2               	movwf	___wmul@multiplicand
  1683  00B4  160A  158A  23EF  120A  118A  	fcall	___wmul
  1684  00B9  0871               	movf	?___wmul+1,w
  1685  00BA  1683               	bsf	3,5	;RP0=1, select bank1
  1686  00BB  1303               	bcf	3,6	;RP1=0, select bank1
  1687  00BC  00C2               	movwf	(sprintf@width+1)^(0+128)
  1688  00BD  0870               	movf	?___wmul,w
  1689  00BE  00C1               	movwf	sprintf@width^(0+128)
  1690  00BF                     l3231:
  1691                           
  1692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1693  00BF  082C               	movf	sprintf@f^(0+128),w
  1694  00C0  0084               	movwf	4
  1695  00C1  160A  118A  2000  120A  118A  	fcall	stringdir
  1696  00C6  3ED0               	addlw	208
  1697  00C7  00B1               	movwf	??_sprintf^(0+128)
  1698  00C8  30FF               	movlw	255
  1699  00C9  1803               	skipnc
  1700  00CA  3000               	movlw	0
  1701  00CB  00B2               	movwf	(??_sprintf^(0+128)+1)
  1702  00CC  0831               	movf	??_sprintf^(0+128),w
  1703  00CD  07C1               	addwf	sprintf@width^(0+128),f
  1704  00CE  1803               	skipnc
  1705  00CF  0AC2               	incf	(sprintf@width+1)^(0+128),f
  1706  00D0  0832               	movf	(??_sprintf+1)^(0+128),w
  1707  00D1  07C2               	addwf	(sprintf@width+1)^(0+128),f
  1708  00D2                     l3233:
  1709  00D2  3001               	movlw	1
  1710  00D3  00B1               	movwf	??_sprintf^(0+128)
  1711  00D4  0831               	movf	??_sprintf^(0+128),w
  1712  00D5  07AC               	addwf	sprintf@f^(0+128),f
  1713  00D6                     l3235:
  1714                           
  1715                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1716  00D6  082C               	movf	sprintf@f^(0+128),w
  1717  00D7  0084               	movwf	4
  1718  00D8  160A  118A  2000  120A  118A  	fcall	stringdir
  1719  00DD  160A  158A  2341  120A  118A  	fcall	_isdigit
  1720  00E2  1803               	btfsc	3,0
  1721  00E3  28E5               	goto	u5411
  1722  00E4  28E6               	goto	u5410
  1723  00E5                     u5411:
  1724  00E5  28AA               	goto	l3229
  1725  00E6                     u5410:
  1726  00E6                     l3237:
  1727                           
  1728                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1729  00E6  1683               	bsf	3,5	;RP0=1, select bank1
  1730  00E7  1303               	bcf	3,6	;RP1=0, select bank1
  1731  00E8  082C               	movf	sprintf@f^(0+128),w
  1732  00E9  0084               	movwf	4
  1733  00EA  160A  118A  2000  120A  118A  	fcall	stringdir
  1734  00EF  3A2E               	xorlw	46
  1735  00F0  1D03               	skipz
  1736  00F1  28F3               	goto	u5421
  1737  00F2  28F4               	goto	u5420
  1738  00F3                     u5421:
  1739  00F3  2939               	goto	l3253
  1740  00F4                     u5420:
  1741  00F4                     l3239:
  1742                           
  1743                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1744  00F4  1740               	bsf	(sprintf@flag^(0+128)+1),6
  1745  00F5                     l3241:
  1746                           
  1747                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1748  00F5  3001               	movlw	1
  1749  00F6  00B1               	movwf	??_sprintf^(0+128)
  1750  00F7  0831               	movf	??_sprintf^(0+128),w
  1751  00F8  07AC               	addwf	sprintf@f^(0+128),f
  1752  00F9                     l3243:
  1753                           
  1754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1755  00F9  01CE               	clrf	sprintf@prec^(0+128)
  1756  00FA  01CF               	clrf	(sprintf@prec+1)^(0+128)
  1757                           
  1758                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1759  00FB  2928               	goto	l3251
  1760  00FC                     l3245:
  1761                           
  1762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1763  00FC  300A               	movlw	10
  1764  00FD  00F0               	movwf	___wmul@multiplier
  1765  00FE  3000               	movlw	0
  1766  00FF  00F1               	movwf	___wmul@multiplier+1
  1767  0100  1683               	bsf	3,5	;RP0=1, select bank1
  1768  0101  1303               	bcf	3,6	;RP1=0, select bank1
  1769  0102  084F               	movf	(sprintf@prec+1)^(0+128),w
  1770  0103  00F3               	movwf	___wmul@multiplicand+1
  1771  0104  084E               	movf	sprintf@prec^(0+128),w
  1772  0105  00F2               	movwf	___wmul@multiplicand
  1773  0106  160A  158A  23EF  120A  118A  	fcall	___wmul
  1774  010B  0871               	movf	?___wmul+1,w
  1775  010C  1683               	bsf	3,5	;RP0=1, select bank1
  1776  010D  1303               	bcf	3,6	;RP1=0, select bank1
  1777  010E  00CF               	movwf	(sprintf@prec+1)^(0+128)
  1778  010F  0870               	movf	?___wmul,w
  1779  0110  00CE               	movwf	sprintf@prec^(0+128)
  1780  0111                     l3247:
  1781                           
  1782                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1783  0111  082C               	movf	sprintf@f^(0+128),w
  1784  0112  0084               	movwf	4
  1785  0113  160A  118A  2000  120A  118A  	fcall	stringdir
  1786  0118  3ED0               	addlw	208
  1787  0119  00B1               	movwf	??_sprintf^(0+128)
  1788  011A  30FF               	movlw	255
  1789  011B  1803               	skipnc
  1790  011C  3000               	movlw	0
  1791  011D  00B2               	movwf	(??_sprintf^(0+128)+1)
  1792  011E  0831               	movf	??_sprintf^(0+128),w
  1793  011F  07CE               	addwf	sprintf@prec^(0+128),f
  1794  0120  1803               	skipnc
  1795  0121  0ACF               	incf	(sprintf@prec+1)^(0+128),f
  1796  0122  0832               	movf	(??_sprintf+1)^(0+128),w
  1797  0123  07CF               	addwf	(sprintf@prec+1)^(0+128),f
  1798  0124                     l3249:
  1799  0124  3001               	movlw	1
  1800  0125  00B1               	movwf	??_sprintf^(0+128)
  1801  0126  0831               	movf	??_sprintf^(0+128),w
  1802  0127  07AC               	addwf	sprintf@f^(0+128),f
  1803  0128                     l3251:
  1804                           
  1805                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1806  0128  082C               	movf	sprintf@f^(0+128),w
  1807  0129  0084               	movwf	4
  1808  012A  160A  118A  2000  120A  118A  	fcall	stringdir
  1809  012F  160A  158A  2341  120A  118A  	fcall	_isdigit
  1810  0134  1803               	btfsc	3,0
  1811  0135  2937               	goto	u5431
  1812  0136  2938               	goto	u5430
  1813  0137                     u5431:
  1814  0137  28FC               	goto	l3245
  1815  0138                     u5430:
  1816  0138  293F               	goto	l3259
  1817  0139                     l3253:
  1818                           
  1819                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1820  0139  01CE               	clrf	sprintf@prec^(0+128)
  1821  013A  01CF               	clrf	(sprintf@prec+1)^(0+128)
  1822  013B                     l3255:
  1823                           
  1824                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1825  013B  1640               	bsf	(sprintf@flag^(0+128)+1),4
  1826  013C  293F               	goto	l3259
  1827  013D                     l309:	
  1828                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1829                           
  1830                           
  1831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1832  013D  1540               	bsf	(sprintf@flag^(0+128)+1),2
  1833                           
  1834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1835  013E  295B               	goto	l3261
  1836  013F                     l3259:
  1837  013F  3001               	movlw	1
  1838  0140  1683               	bsf	3,5	;RP0=1, select bank1
  1839  0141  1303               	bcf	3,6	;RP1=0, select bank1
  1840  0142  07AC               	addwf	sprintf@f^(0+128),f
  1841  0143  30FF               	movlw	-1
  1842  0144  072C               	addwf	sprintf@f^(0+128),w
  1843  0145  0084               	movwf	4
  1844  0146  160A  118A  2000  120A  118A  	fcall	stringdir
  1845  014B  00D0               	movwf	sprintf@c^(0+128)
  1846  014C  00B1               	movwf	??_sprintf^(0+128)
  1847  014D  01B2               	clrf	(??_sprintf^(0+128)+1)
  1848                           
  1849                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1850                           ; Switch size 1, requested type "simple"
  1851                           ; Number of cases is 1, Range of values is 0 to 0
  1852                           ; switch strategies available:
  1853                           ; Name         Instructions Cycles
  1854                           ; simple_byte            4     3 (average)
  1855                           ; direct_byte           11     8 (fixed)
  1856                           ; jumptable            260     6 (fixed)
  1857                           ;	Chosen strategy is simple_byte
  1858  014E  0832               	movf	(??_sprintf+1)^(0+128),w
  1859  014F  3A00               	xorlw	0	; case 0
  1860  0150  1903               	skipnz
  1861  0151  2953               	goto	l3553
  1862  0152  2FDC               	goto	l3465
  1863  0153                     l3553:
  1864                           
  1865                           ; Switch size 1, requested type "simple"
  1866                           ; Number of cases is 2, Range of values is 0 to 102
  1867                           ; switch strategies available:
  1868                           ; Name         Instructions Cycles
  1869                           ; simple_byte            7     4 (average)
  1870                           ; jumptable            260     6 (fixed)
  1871                           ;	Chosen strategy is simple_byte
  1872  0153  0831               	movf	??_sprintf^(0+128),w
  1873  0154  3A00               	xorlw	0	; case 0
  1874  0155  1903               	skipnz
  1875  0156  2FEE               	goto	l3467
  1876  0157  3A66               	xorlw	102	; case 102
  1877  0158  1903               	skipnz
  1878  0159  293D               	goto	l309
  1879  015A  2FDC               	goto	l3465
  1880  015B                     l3261:
  1881                           
  1882                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1883  015B  3000               	movlw	0
  1884  015C  053F               	andwf	sprintf@flag^(0+128),w
  1885  015D  00B1               	movwf	??_sprintf^(0+128)
  1886  015E  3007               	movlw	7
  1887  015F  0540               	andwf	(sprintf@flag+1)^(0+128),w
  1888  0160  00B2               	movwf	(??_sprintf+1)^(0+128)
  1889  0161  0831               	movf	??_sprintf^(0+128),w
  1890  0162  0432               	iorwf	(??_sprintf^(0+128)+1),w
  1891  0163  1903               	btfsc	3,2
  1892  0164  2966               	goto	u5441
  1893  0165  2967               	goto	u5440
  1894  0166                     u5441:
  1895  0166  2F19               	goto	l3419
  1896  0167                     u5440:
  1897  0167                     l3263:
  1898                           
  1899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1900  0167  1E40               	btfss	(sprintf@flag+1)^(0+128),4
  1901  0168  296A               	goto	u5451
  1902  0169  296B               	goto	u5450
  1903  016A                     u5451:
  1904  016A  296F               	goto	l3267
  1905  016B                     u5450:
  1906  016B                     l3265:
  1907                           
  1908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1909  016B  3006               	movlw	6
  1910  016C  00CE               	movwf	sprintf@prec^(0+128)
  1911  016D  3000               	movlw	0
  1912  016E  00CF               	movwf	(sprintf@prec^(0+128)+1)
  1913  016F                     l3267:
  1914                           
  1915                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1916  016F  083A               	movf	sprintf@ap^(0+128),w
  1917  0170  0084               	movwf	4
  1918  0171  1383               	bcf	3,7	;select IRP bank0
  1919  0172  0800               	movf	0,w
  1920  0173  00C9               	movwf	sprintf@fval^(0+128)
  1921  0174  0A84               	incf	4,f
  1922  0175  0800               	movf	0,w
  1923  0176  00CA               	movwf	(sprintf@fval+1)^(0+128)
  1924  0177  0A84               	incf	4,f
  1925  0178  0800               	movf	0,w
  1926  0179  00CB               	movwf	(sprintf@fval+2)^(0+128)
  1927  017A  0A84               	incf	4,f
  1928  017B  0800               	movf	0,w
  1929  017C  00CC               	movwf	(sprintf@fval+3)^(0+128)
  1930  017D                     l3269:
  1931  017D  3004               	movlw	4
  1932  017E  00B1               	movwf	??_sprintf^(0+128)
  1933  017F  0831               	movf	??_sprintf^(0+128),w
  1934  0180  07BA               	addwf	sprintf@ap^(0+128),f
  1935  0181                     l3271:
  1936                           
  1937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1938  0181  084C               	movf	(sprintf@fval+3)^(0+128),w
  1939  0182  00F3               	movwf	___flge@ff1+3
  1940  0183  084B               	movf	(sprintf@fval+2)^(0+128),w
  1941  0184  00F2               	movwf	___flge@ff1+2
  1942  0185  084A               	movf	(sprintf@fval+1)^(0+128),w
  1943  0186  00F1               	movwf	___flge@ff1+1
  1944  0187  0849               	movf	sprintf@fval^(0+128),w
  1945  0188  00F0               	movwf	___flge@ff1
  1946  0189  3000               	movlw	0
  1947  018A  00F7               	movwf	___flge@ff2+3
  1948  018B  3000               	movlw	0
  1949  018C  00F6               	movwf	___flge@ff2+2
  1950  018D  3000               	movlw	0
  1951  018E  00F5               	movwf	___flge@ff2+1
  1952  018F  3000               	movlw	0
  1953  0190  00F4               	movwf	___flge@ff2
  1954  0191  160A  118A  2154  120A  118A  	fcall	___flge
  1955  0196  1803               	btfsc	3,0
  1956  0197  2999               	goto	u5461
  1957  0198  299A               	goto	u5460
  1958  0199                     u5461:
  1959  0199  29B7               	goto	l3277
  1960  019A                     u5460:
  1961  019A                     l3273:
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  1964  019A  1683               	bsf	3,5	;RP0=1, select bank1
  1965  019B  1303               	bcf	3,6	;RP1=0, select bank1
  1966  019C  084C               	movf	(sprintf@fval+3)^(0+128),w
  1967  019D  00F3               	movwf	___flneg@f1+3
  1968  019E  084B               	movf	(sprintf@fval+2)^(0+128),w
  1969  019F  00F2               	movwf	___flneg@f1+2
  1970  01A0  084A               	movf	(sprintf@fval+1)^(0+128),w
  1971  01A1  00F1               	movwf	___flneg@f1+1
  1972  01A2  0849               	movf	sprintf@fval^(0+128),w
  1973  01A3  00F0               	movwf	___flneg@f1
  1974  01A4  160A  158A  2336  120A  118A  	fcall	___flneg
  1975  01A9  0873               	movf	?___flneg+3,w
  1976  01AA  1683               	bsf	3,5	;RP0=1, select bank1
  1977  01AB  1303               	bcf	3,6	;RP1=0, select bank1
  1978  01AC  00CC               	movwf	(sprintf@fval+3)^(0+128)
  1979  01AD  0872               	movf	?___flneg+2,w
  1980  01AE  00CB               	movwf	(sprintf@fval+2)^(0+128)
  1981  01AF  0871               	movf	?___flneg+1,w
  1982  01B0  00CA               	movwf	(sprintf@fval+1)^(0+128)
  1983  01B1  0870               	movf	?___flneg,w
  1984  01B2  00C9               	movwf	sprintf@fval^(0+128)
  1985  01B3                     l3275:
  1986                           
  1987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  1988  01B3  3003               	movlw	3
  1989  01B4  04BF               	iorwf	sprintf@flag^(0+128),f
  1990  01B5  3000               	movlw	0
  1991  01B6  04C0               	iorwf	(sprintf@flag+1)^(0+128),f
  1992  01B7                     l3277:
  1993                           
  1994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  1995  01B7  1683               	bsf	3,5	;RP0=1, select bank1
  1996  01B8  1303               	bcf	3,6	;RP1=0, select bank1
  1997  01B9  01C7               	clrf	sprintf@eexp^(0+128)
  1998  01BA  01C8               	clrf	(sprintf@eexp+1)^(0+128)
  1999  01BB                     l3279:
  2000                           
  2001                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2002  01BB  084C               	movf	(sprintf@fval+3)^(0+128),w
  2003  01BC  00F3               	movwf	___fleq@ff1+3
  2004  01BD  084B               	movf	(sprintf@fval+2)^(0+128),w
  2005  01BE  00F2               	movwf	___fleq@ff1+2
  2006  01BF  084A               	movf	(sprintf@fval+1)^(0+128),w
  2007  01C0  00F1               	movwf	___fleq@ff1+1
  2008  01C1  0849               	movf	sprintf@fval^(0+128),w
  2009  01C2  00F0               	movwf	___fleq@ff1
  2010  01C3  3000               	movlw	0
  2011  01C4  00F7               	movwf	___fleq@ff2+3
  2012  01C5  3000               	movlw	0
  2013  01C6  00F6               	movwf	___fleq@ff2+2
  2014  01C7  3000               	movlw	0
  2015  01C8  00F5               	movwf	___fleq@ff2+1
  2016  01C9  3000               	movlw	0
  2017  01CA  00F4               	movwf	___fleq@ff2
  2018  01CB  160A  158A  24E4  120A  118A  	fcall	___fleq
  2019  01D0  1803               	btfsc	3,0
  2020  01D1  29D3               	goto	u5471
  2021  01D2  29D4               	goto	u5470
  2022  01D3                     u5471:
  2023  01D3  2AC4               	goto	l3305
  2024  01D4                     u5470:
  2025  01D4                     l3281:
  2026                           
  2027                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2028  01D4  1003               	clrc
  2029  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  2030  01D6  1303               	bcf	3,6	;RP1=0, select bank1
  2031  01D7  0D4B               	rlf	(sprintf@fval+2)^(0+128),w
  2032  01D8  0D4C               	rlf	(sprintf@fval+3)^(0+128),w
  2033  01D9  3E82               	addlw	130
  2034  01DA  00C7               	movwf	sprintf@eexp^(0+128)
  2035  01DB  30FF               	movlw	255
  2036  01DC  1803               	skipnc
  2037  01DD  3000               	movlw	0
  2038  01DE  00C8               	movwf	(sprintf@eexp^(0+128)+1)
  2039  01DF                     l3283:
  2040                           
  2041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2042  01DF  30FF               	movlw	255
  2043  01E0  07C7               	addwf	sprintf@eexp^(0+128),f
  2044  01E1  1803               	skipnc
  2045  01E2  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  2046  01E3  30FF               	movlw	255
  2047  01E4  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  2048  01E5                     l3285:
  2049                           
  2050                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2051  01E5  3003               	movlw	3
  2052  01E6  00F0               	movwf	___wmul@multiplier
  2053  01E7  3000               	movlw	0
  2054  01E8  00F1               	movwf	___wmul@multiplier+1
  2055  01E9  0848               	movf	(sprintf@eexp+1)^(0+128),w
  2056  01EA  00F3               	movwf	___wmul@multiplicand+1
  2057  01EB  0847               	movf	sprintf@eexp^(0+128),w
  2058  01EC  00F2               	movwf	___wmul@multiplicand
  2059  01ED  160A  158A  23EF  120A  118A  	fcall	___wmul
  2060  01F2  0871               	movf	?___wmul+1,w
  2061  01F3  1683               	bsf	3,5	;RP0=1, select bank1
  2062  01F4  1303               	bcf	3,6	;RP1=0, select bank1
  2063  01F5  00C8               	movwf	(sprintf@eexp+1)^(0+128)
  2064  01F6  0870               	movf	?___wmul,w
  2065  01F7  00C7               	movwf	sprintf@eexp^(0+128)
  2066  01F8                     l3287:
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2069  01F8  300A               	movlw	10
  2070  01F9  00F7               	movwf	___awdiv@divisor
  2071  01FA  3000               	movlw	0
  2072  01FB  00F8               	movwf	___awdiv@divisor+1
  2073  01FC  0848               	movf	(sprintf@eexp+1)^(0+128),w
  2074  01FD  00FA               	movwf	___awdiv@dividend+1
  2075  01FE  0847               	movf	sprintf@eexp^(0+128),w
  2076  01FF  00F9               	movwf	___awdiv@dividend
  2077  0200  160A  158A  270D  120A  118A  	fcall	___awdiv
  2078  0205  0878               	movf	?___awdiv+1,w
  2079  0206  1683               	bsf	3,5	;RP0=1, select bank1
  2080  0207  1303               	bcf	3,6	;RP1=0, select bank1
  2081  0208  00C8               	movwf	(sprintf@eexp+1)^(0+128)
  2082  0209  0877               	movf	?___awdiv,w
  2083  020A  00C7               	movwf	sprintf@eexp^(0+128)
  2084  020B                     l3289:
  2085                           
  2086                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2087  020B  1FC8               	btfss	(sprintf@eexp+1)^(0+128),7
  2088  020C  2A0E               	goto	u5481
  2089  020D  2A0F               	goto	u5480
  2090  020E                     u5481:
  2091  020E  2A15               	goto	l3293
  2092  020F                     u5480:
  2093  020F                     l3291:
  2094                           
  2095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2096  020F  30FF               	movlw	255
  2097  0210  07C7               	addwf	sprintf@eexp^(0+128),f
  2098  0211  1803               	skipnc
  2099  0212  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  2100  0213  30FF               	movlw	255
  2101  0214  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  2102  0215                     l3293:
  2103                           
  2104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2105  0215  0347               	decf	sprintf@eexp^(0+128),w
  2106  0216  3AFF               	xorlw	255
  2107  0217  120A  158A  2140  120A  118A  	fcall	_scale
  2108  021C  1283               	bcf	3,5	;RP0=0, select bank0
  2109  021D  1303               	bcf	3,6	;RP1=0, select bank0
  2110  021E  0841               	movf	?_scale+3,w
  2111  021F  1683               	bsf	3,5	;RP0=1, select bank1
  2112  0220  1303               	bcf	3,6	;RP1=0, select bank1
  2113  0221  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  2114  0222  1283               	bcf	3,5	;RP0=0, select bank0
  2115  0223  1303               	bcf	3,6	;RP1=0, select bank0
  2116  0224  0840               	movf	?_scale+2,w
  2117  0225  1683               	bsf	3,5	;RP0=1, select bank1
  2118  0226  1303               	bcf	3,6	;RP1=0, select bank1
  2119  0227  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  2120  0228  1283               	bcf	3,5	;RP0=0, select bank0
  2121  0229  1303               	bcf	3,6	;RP1=0, select bank0
  2122  022A  083F               	movf	?_scale+1,w
  2123  022B  1683               	bsf	3,5	;RP0=1, select bank1
  2124  022C  1303               	bcf	3,6	;RP1=0, select bank1
  2125  022D  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  2126  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2127  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2128  0230  083E               	movf	?_scale,w
  2129  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2130  0232  1303               	bcf	3,6	;RP1=0, select bank1
  2131  0233  00C3               	movwf	sprintf@tmpval^(0+128)
  2132  0234                     l3295:
  2133                           
  2134                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2135  0234  084C               	movf	(sprintf@fval+3)^(0+128),w
  2136  0235  1283               	bcf	3,5	;RP0=0, select bank0
  2137  0236  1303               	bcf	3,6	;RP1=0, select bank0
  2138  0237  00A7               	movwf	___flmul@b+3
  2139  0238  1683               	bsf	3,5	;RP0=1, select bank1
  2140  0239  1303               	bcf	3,6	;RP1=0, select bank1
  2141  023A  084B               	movf	(sprintf@fval+2)^(0+128),w
  2142  023B  1283               	bcf	3,5	;RP0=0, select bank0
  2143  023C  1303               	bcf	3,6	;RP1=0, select bank0
  2144  023D  00A6               	movwf	___flmul@b+2
  2145  023E  1683               	bsf	3,5	;RP0=1, select bank1
  2146  023F  1303               	bcf	3,6	;RP1=0, select bank1
  2147  0240  084A               	movf	(sprintf@fval+1)^(0+128),w
  2148  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2149  0242  1303               	bcf	3,6	;RP1=0, select bank0
  2150  0243  00A5               	movwf	___flmul@b+1
  2151  0244  1683               	bsf	3,5	;RP0=1, select bank1
  2152  0245  1303               	bcf	3,6	;RP1=0, select bank1
  2153  0246  0849               	movf	sprintf@fval^(0+128),w
  2154  0247  1283               	bcf	3,5	;RP0=0, select bank0
  2155  0248  1303               	bcf	3,6	;RP1=0, select bank0
  2156  0249  00A4               	movwf	___flmul@b
  2157  024A  1683               	bsf	3,5	;RP0=1, select bank1
  2158  024B  1303               	bcf	3,6	;RP1=0, select bank1
  2159  024C  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2160  024D  1283               	bcf	3,5	;RP0=0, select bank0
  2161  024E  1303               	bcf	3,6	;RP1=0, select bank0
  2162  024F  00AB               	movwf	___flmul@a+3
  2163  0250  1683               	bsf	3,5	;RP0=1, select bank1
  2164  0251  1303               	bcf	3,6	;RP1=0, select bank1
  2165  0252  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2166  0253  1283               	bcf	3,5	;RP0=0, select bank0
  2167  0254  1303               	bcf	3,6	;RP1=0, select bank0
  2168  0255  00AA               	movwf	___flmul@a+2
  2169  0256  1683               	bsf	3,5	;RP0=1, select bank1
  2170  0257  1303               	bcf	3,6	;RP1=0, select bank1
  2171  0258  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2172  0259  1283               	bcf	3,5	;RP0=0, select bank0
  2173  025A  1303               	bcf	3,6	;RP1=0, select bank0
  2174  025B  00A9               	movwf	___flmul@a+1
  2175  025C  1683               	bsf	3,5	;RP0=1, select bank1
  2176  025D  1303               	bcf	3,6	;RP1=0, select bank1
  2177  025E  0843               	movf	sprintf@tmpval^(0+128),w
  2178  025F  1283               	bcf	3,5	;RP0=0, select bank0
  2179  0260  1303               	bcf	3,6	;RP1=0, select bank0
  2180  0261  00A8               	movwf	___flmul@a
  2181  0262  120A  158A  249F  120A  118A  	fcall	___flmul
  2182  0267  1283               	bcf	3,5	;RP0=0, select bank0
  2183  0268  1303               	bcf	3,6	;RP1=0, select bank0
  2184  0269  0827               	movf	?___flmul+3,w
  2185  026A  1683               	bsf	3,5	;RP0=1, select bank1
  2186  026B  1303               	bcf	3,6	;RP1=0, select bank1
  2187  026C  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  2188  026D  1283               	bcf	3,5	;RP0=0, select bank0
  2189  026E  1303               	bcf	3,6	;RP1=0, select bank0
  2190  026F  0826               	movf	?___flmul+2,w
  2191  0270  1683               	bsf	3,5	;RP0=1, select bank1
  2192  0271  1303               	bcf	3,6	;RP1=0, select bank1
  2193  0272  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  2194  0273  1283               	bcf	3,5	;RP0=0, select bank0
  2195  0274  1303               	bcf	3,6	;RP1=0, select bank0
  2196  0275  0825               	movf	?___flmul+1,w
  2197  0276  1683               	bsf	3,5	;RP0=1, select bank1
  2198  0277  1303               	bcf	3,6	;RP1=0, select bank1
  2199  0278  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  2200  0279  1283               	bcf	3,5	;RP0=0, select bank0
  2201  027A  1303               	bcf	3,6	;RP1=0, select bank0
  2202  027B  0824               	movf	?___flmul,w
  2203  027C  1683               	bsf	3,5	;RP0=1, select bank1
  2204  027D  1303               	bcf	3,6	;RP1=0, select bank1
  2205  027E  00C3               	movwf	sprintf@tmpval^(0+128)
  2206  027F                     l3297:
  2207                           
  2208                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2209  027F  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2210  0280  00F3               	movwf	___flge@ff1+3
  2211  0281  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2212  0282  00F2               	movwf	___flge@ff1+2
  2213  0283  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2214  0284  00F1               	movwf	___flge@ff1+1
  2215  0285  0843               	movf	sprintf@tmpval^(0+128),w
  2216  0286  00F0               	movwf	___flge@ff1
  2217  0287  303F               	movlw	63
  2218  0288  00F7               	movwf	___flge@ff2+3
  2219  0289  3080               	movlw	128
  2220  028A  00F6               	movwf	___flge@ff2+2
  2221  028B  3000               	movlw	0
  2222  028C  00F5               	movwf	___flge@ff2+1
  2223  028D  3000               	movlw	0
  2224  028E  00F4               	movwf	___flge@ff2
  2225  028F  160A  118A  2154  120A  118A  	fcall	___flge
  2226  0294  1803               	btfsc	3,0
  2227  0295  2A97               	goto	u5491
  2228  0296  2A98               	goto	u5490
  2229  0297                     u5491:
  2230  0297  2AA1               	goto	l3301
  2231  0298                     u5490:
  2232  0298                     l3299:
  2233                           
  2234                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2235  0298  30FF               	movlw	255
  2236  0299  1683               	bsf	3,5	;RP0=1, select bank1
  2237  029A  1303               	bcf	3,6	;RP1=0, select bank1
  2238  029B  07C7               	addwf	sprintf@eexp^(0+128),f
  2239  029C  1803               	skipnc
  2240  029D  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  2241  029E  30FF               	movlw	255
  2242  029F  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  2243  02A0  2AC4               	goto	l3305
  2244  02A1                     l3301:
  2245  02A1  1683               	bsf	3,5	;RP0=1, select bank1
  2246  02A2  1303               	bcf	3,6	;RP1=0, select bank1
  2247  02A3  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2248  02A4  00F3               	movwf	___flge@ff1+3
  2249  02A5  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2250  02A6  00F2               	movwf	___flge@ff1+2
  2251  02A7  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2252  02A8  00F1               	movwf	___flge@ff1+1
  2253  02A9  0843               	movf	sprintf@tmpval^(0+128),w
  2254  02AA  00F0               	movwf	___flge@ff1
  2255  02AB  3041               	movlw	65
  2256  02AC  00F7               	movwf	___flge@ff2+3
  2257  02AD  3020               	movlw	32
  2258  02AE  00F6               	movwf	___flge@ff2+2
  2259  02AF  3000               	movlw	0
  2260  02B0  00F5               	movwf	___flge@ff2+1
  2261  02B1  3000               	movlw	0
  2262  02B2  00F4               	movwf	___flge@ff2
  2263  02B3  160A  118A  2154  120A  118A  	fcall	___flge
  2264  02B8  1C03               	btfss	3,0
  2265  02B9  2ABB               	goto	u5501
  2266  02BA  2ABC               	goto	u5500
  2267  02BB                     u5501:
  2268  02BB  2AC4               	goto	l3305
  2269  02BC                     u5500:
  2270  02BC                     l3303:
  2271                           
  2272                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2273  02BC  3001               	movlw	1
  2274  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  2275  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  2276  02BF  07C7               	addwf	sprintf@eexp^(0+128),f
  2277  02C0  1803               	skipnc
  2278  02C1  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  2279  02C2  3000               	movlw	0
  2280  02C3  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  2281  02C4                     l3305:
  2282                           
  2283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2284  02C4  1683               	bsf	3,5	;RP0=1, select bank1
  2285  02C5  1303               	bcf	3,6	;RP1=0, select bank1
  2286  02C6  084F               	movf	(sprintf@prec+1)^(0+128),w
  2287  02C7  3A80               	xorlw	128
  2288  02C8  00FF               	movwf	btemp+1
  2289  02C9  3080               	movlw	128
  2290  02CA  027F               	subwf	btemp+1,w
  2291  02CB  1D03               	skipz
  2292  02CC  2ACF               	goto	u5515
  2293  02CD  300D               	movlw	13
  2294  02CE  024E               	subwf	sprintf@prec^(0+128),w
  2295  02CF                     u5515:
  2296  02CF  1803               	skipnc
  2297  02D0  2AD2               	goto	u5511
  2298  02D1  2AD3               	goto	u5510
  2299  02D2                     u5511:
  2300  02D2  2B1A               	goto	l3309
  2301  02D3                     u5510:
  2302  02D3                     l3307:
  2303                           
  2304                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2305  02D3  1683               	bsf	3,5	;RP0=1, select bank1
  2306  02D4  1303               	bcf	3,6	;RP1=0, select bank1
  2307  02D5  084E               	movf	sprintf@prec^(0+128),w
  2308  02D6  160A  118A  236D  120A  118A  	fcall	_fround
  2309  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  2310  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  2311  02DD  0841               	movf	?_fround+3,w
  2312  02DE  00D5               	movwf	___fladd@b+3
  2313  02DF  0840               	movf	?_fround+2,w
  2314  02E0  00D4               	movwf	___fladd@b+2
  2315  02E1  083F               	movf	?_fround+1,w
  2316  02E2  00D3               	movwf	___fladd@b+1
  2317  02E3  083E               	movf	?_fround,w
  2318  02E4  00D2               	movwf	___fladd@b
  2319  02E5  1683               	bsf	3,5	;RP0=1, select bank1
  2320  02E6  1303               	bcf	3,6	;RP1=0, select bank1
  2321  02E7  084C               	movf	(sprintf@fval+3)^(0+128),w
  2322  02E8  1283               	bcf	3,5	;RP0=0, select bank0
  2323  02E9  1303               	bcf	3,6	;RP1=0, select bank0
  2324  02EA  00D9               	movwf	___fladd@a+3
  2325  02EB  1683               	bsf	3,5	;RP0=1, select bank1
  2326  02EC  1303               	bcf	3,6	;RP1=0, select bank1
  2327  02ED  084B               	movf	(sprintf@fval+2)^(0+128),w
  2328  02EE  1283               	bcf	3,5	;RP0=0, select bank0
  2329  02EF  1303               	bcf	3,6	;RP1=0, select bank0
  2330  02F0  00D8               	movwf	___fladd@a+2
  2331  02F1  1683               	bsf	3,5	;RP0=1, select bank1
  2332  02F2  1303               	bcf	3,6	;RP1=0, select bank1
  2333  02F3  084A               	movf	(sprintf@fval+1)^(0+128),w
  2334  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2335  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2336  02F6  00D7               	movwf	___fladd@a+1
  2337  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  2338  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  2339  02F9  0849               	movf	sprintf@fval^(0+128),w
  2340  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2341  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2342  02FC  00D6               	movwf	___fladd@a
  2343  02FD  160A  118A  2578  120A  118A  	fcall	___fladd
  2344  0302  1283               	bcf	3,5	;RP0=0, select bank0
  2345  0303  1303               	bcf	3,6	;RP1=0, select bank0
  2346  0304  0855               	movf	?___fladd+3,w
  2347  0305  1683               	bsf	3,5	;RP0=1, select bank1
  2348  0306  1303               	bcf	3,6	;RP1=0, select bank1
  2349  0307  00CC               	movwf	(sprintf@fval+3)^(0+128)
  2350  0308  1283               	bcf	3,5	;RP0=0, select bank0
  2351  0309  1303               	bcf	3,6	;RP1=0, select bank0
  2352  030A  0854               	movf	?___fladd+2,w
  2353  030B  1683               	bsf	3,5	;RP0=1, select bank1
  2354  030C  1303               	bcf	3,6	;RP1=0, select bank1
  2355  030D  00CB               	movwf	(sprintf@fval+2)^(0+128)
  2356  030E  1283               	bcf	3,5	;RP0=0, select bank0
  2357  030F  1303               	bcf	3,6	;RP1=0, select bank0
  2358  0310  0853               	movf	?___fladd+1,w
  2359  0311  1683               	bsf	3,5	;RP0=1, select bank1
  2360  0312  1303               	bcf	3,6	;RP1=0, select bank1
  2361  0313  00CA               	movwf	(sprintf@fval+1)^(0+128)
  2362  0314  1283               	bcf	3,5	;RP0=0, select bank0
  2363  0315  1303               	bcf	3,6	;RP1=0, select bank0
  2364  0316  0852               	movf	?___fladd,w
  2365  0317  1683               	bsf	3,5	;RP0=1, select bank1
  2366  0318  1303               	bcf	3,6	;RP1=0, select bank1
  2367  0319  00C9               	movwf	sprintf@fval^(0+128)
  2368  031A                     l3309:
  2369                           
  2370                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2371  031A  1683               	bsf	3,5	;RP0=1, select bank1
  2372  031B  1303               	bcf	3,6	;RP1=0, select bank1
  2373  031C  0848               	movf	(sprintf@eexp+1)^(0+128),w
  2374  031D  3A80               	xorlw	128
  2375  031E  00FF               	movwf	btemp+1
  2376  031F  3080               	movlw	128
  2377  0320  027F               	subwf	btemp+1,w
  2378  0321  1D03               	skipz
  2379  0322  2B25               	goto	u5525
  2380  0323  300A               	movlw	10
  2381  0324  0247               	subwf	sprintf@eexp^(0+128),w
  2382  0325                     u5525:
  2383  0325  1803               	skipnc
  2384  0326  2B28               	goto	u5521
  2385  0327  2B29               	goto	u5520
  2386  0328                     u5521:
  2387  0328  2B7A               	goto	l3317
  2388  0329                     u5520:
  2389  0329                     l3311:
  2390  0329  1683               	bsf	3,5	;RP0=1, select bank1
  2391  032A  1303               	bcf	3,6	;RP1=0, select bank1
  2392  032B  084C               	movf	(sprintf@fval+3)^(0+128),w
  2393  032C  00F3               	movwf	___fleq@ff1+3
  2394  032D  084B               	movf	(sprintf@fval+2)^(0+128),w
  2395  032E  00F2               	movwf	___fleq@ff1+2
  2396  032F  084A               	movf	(sprintf@fval+1)^(0+128),w
  2397  0330  00F1               	movwf	___fleq@ff1+1
  2398  0331  0849               	movf	sprintf@fval^(0+128),w
  2399  0332  00F0               	movwf	___fleq@ff1
  2400  0333  3000               	movlw	0
  2401  0334  00F7               	movwf	___fleq@ff2+3
  2402  0335  3000               	movlw	0
  2403  0336  00F6               	movwf	___fleq@ff2+2
  2404  0337  3000               	movlw	0
  2405  0338  00F5               	movwf	___fleq@ff2+1
  2406  0339  3000               	movlw	0
  2407  033A  00F4               	movwf	___fleq@ff2
  2408  033B  160A  158A  24E4  120A  118A  	fcall	___fleq
  2409  0340  1803               	btfsc	3,0
  2410  0341  2B43               	goto	u5531
  2411  0342  2B44               	goto	u5530
  2412  0343                     u5531:
  2413  0343  2BEC               	goto	l3331
  2414  0344                     u5530:
  2415  0344                     l3313:
  2416  0344  1683               	bsf	3,5	;RP0=1, select bank1
  2417  0345  1303               	bcf	3,6	;RP1=0, select bank1
  2418  0346  084C               	movf	(sprintf@fval+3)^(0+128),w
  2419  0347  1283               	bcf	3,5	;RP0=0, select bank0
  2420  0348  1303               	bcf	3,6	;RP1=0, select bank0
  2421  0349  00D4               	movwf	___fltol@f1+3
  2422  034A  1683               	bsf	3,5	;RP0=1, select bank1
  2423  034B  1303               	bcf	3,6	;RP1=0, select bank1
  2424  034C  084B               	movf	(sprintf@fval+2)^(0+128),w
  2425  034D  1283               	bcf	3,5	;RP0=0, select bank0
  2426  034E  1303               	bcf	3,6	;RP1=0, select bank0
  2427  034F  00D3               	movwf	___fltol@f1+2
  2428  0350  1683               	bsf	3,5	;RP0=1, select bank1
  2429  0351  1303               	bcf	3,6	;RP1=0, select bank1
  2430  0352  084A               	movf	(sprintf@fval+1)^(0+128),w
  2431  0353  1283               	bcf	3,5	;RP0=0, select bank0
  2432  0354  1303               	bcf	3,6	;RP1=0, select bank0
  2433  0355  00D2               	movwf	___fltol@f1+1
  2434  0356  1683               	bsf	3,5	;RP0=1, select bank1
  2435  0357  1303               	bcf	3,6	;RP1=0, select bank1
  2436  0358  0849               	movf	sprintf@fval^(0+128),w
  2437  0359  1283               	bcf	3,5	;RP0=0, select bank0
  2438  035A  1303               	bcf	3,6	;RP1=0, select bank0
  2439  035B  00D1               	movwf	___fltol@f1
  2440  035C  120A  158A  2006  120A  118A  	fcall	___fltol
  2441  0361  1283               	bcf	3,5	;RP0=0, select bank0
  2442  0362  1303               	bcf	3,6	;RP1=0, select bank0
  2443  0363  0854               	movf	?___fltol+3,w
  2444  0364  0453               	iorwf	?___fltol+2,w
  2445  0365  0452               	iorwf	?___fltol+1,w
  2446  0366  0451               	iorwf	?___fltol,w
  2447  0367  1D03               	skipz
  2448  0368  2B6A               	goto	u5541
  2449  0369  2B6B               	goto	u5540
  2450  036A                     u5541:
  2451  036A  2BEC               	goto	l3331
  2452  036B                     u5540:
  2453  036B                     l3315:
  2454  036B  1683               	bsf	3,5	;RP0=1, select bank1
  2455  036C  1303               	bcf	3,6	;RP1=0, select bank1
  2456  036D  0848               	movf	(sprintf@eexp+1)^(0+128),w
  2457  036E  3A80               	xorlw	128
  2458  036F  00FF               	movwf	btemp+1
  2459  0370  3080               	movlw	128
  2460  0371  027F               	subwf	btemp+1,w
  2461  0372  1D03               	skipz
  2462  0373  2B76               	goto	u5555
  2463  0374  3002               	movlw	2
  2464  0375  0247               	subwf	sprintf@eexp^(0+128),w
  2465  0376                     u5555:
  2466  0376  1C03               	skipc
  2467  0377  2B79               	goto	u5551
  2468  0378  2B7A               	goto	u5550
  2469  0379                     u5551:
  2470  0379  2BEC               	goto	l3331
  2471  037A                     u5550:
  2472  037A                     l3317:
  2473                           
  2474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2475  037A  1683               	bsf	3,5	;RP0=1, select bank1
  2476  037B  1303               	bcf	3,6	;RP1=0, select bank1
  2477  037C  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2478  037D  00F3               	movwf	___flge@ff1+3
  2479  037E  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2480  037F  00F2               	movwf	___flge@ff1+2
  2481  0380  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2482  0381  00F1               	movwf	___flge@ff1+1
  2483  0382  0843               	movf	sprintf@tmpval^(0+128),w
  2484  0383  00F0               	movwf	___flge@ff1
  2485  0384  3040               	movlw	64
  2486  0385  00F7               	movwf	___flge@ff2+3
  2487  0386  3089               	movlw	137
  2488  0387  00F6               	movwf	___flge@ff2+2
  2489  0388  3070               	movlw	112
  2490  0389  00F5               	movwf	___flge@ff2+1
  2491  038A  305F               	movlw	95
  2492  038B  00F4               	movwf	___flge@ff2
  2493  038C  160A  118A  2154  120A  118A  	fcall	___flge
  2494  0391  1803               	btfsc	3,0
  2495  0392  2B94               	goto	u5561
  2496  0393  2B95               	goto	u5560
  2497  0394                     u5561:
  2498  0394  2B9E               	goto	l3321
  2499  0395                     u5560:
  2500  0395                     l3319:
  2501                           
  2502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2503  0395  30F7               	movlw	247
  2504  0396  1683               	bsf	3,5	;RP0=1, select bank1
  2505  0397  1303               	bcf	3,6	;RP1=0, select bank1
  2506  0398  07C7               	addwf	sprintf@eexp^(0+128),f
  2507  0399  1803               	skipnc
  2508  039A  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  2509  039B  30FF               	movlw	255
  2510  039C  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2513  039D  2BA6               	goto	l3323
  2514  039E                     l3321:
  2515                           
  2516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2517  039E  30F8               	movlw	248
  2518  039F  1683               	bsf	3,5	;RP0=1, select bank1
  2519  03A0  1303               	bcf	3,6	;RP1=0, select bank1
  2520  03A1  07C7               	addwf	sprintf@eexp^(0+128),f
  2521  03A2  1803               	skipnc
  2522  03A3  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  2523  03A4  30FF               	movlw	255
  2524  03A5  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  2525  03A6                     l3323:
  2526                           
  2527                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2528  03A6  0847               	movf	sprintf@eexp^(0+128),w
  2529  03A7  120A  158A  2140  120A  118A  	fcall	_scale
  2530  03AC  1283               	bcf	3,5	;RP0=0, select bank0
  2531  03AD  1303               	bcf	3,6	;RP1=0, select bank0
  2532  03AE  0841               	movf	?_scale+3,w
  2533  03AF  1683               	bsf	3,5	;RP0=1, select bank1
  2534  03B0  1303               	bcf	3,6	;RP1=0, select bank1
  2535  03B1  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  2536  03B2  1283               	bcf	3,5	;RP0=0, select bank0
  2537  03B3  1303               	bcf	3,6	;RP1=0, select bank0
  2538  03B4  0840               	movf	?_scale+2,w
  2539  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2540  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  2541  03B7  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  2542  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  2543  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  2544  03BA  083F               	movf	?_scale+1,w
  2545  03BB  1683               	bsf	3,5	;RP0=1, select bank1
  2546  03BC  1303               	bcf	3,6	;RP1=0, select bank1
  2547  03BD  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  2548  03BE  1283               	bcf	3,5	;RP0=0, select bank0
  2549  03BF  1303               	bcf	3,6	;RP1=0, select bank0
  2550  03C0  083E               	movf	?_scale,w
  2551  03C1  1683               	bsf	3,5	;RP0=1, select bank1
  2552  03C2  1303               	bcf	3,6	;RP1=0, select bank1
  2553  03C3  00C3               	movwf	sprintf@tmpval^(0+128)
  2554  03C4                     l3325:
  2555  03C4  084C               	movf	(sprintf@fval+3)^(0+128),w
  2556  03C5  00F3               	movwf	__div_to_l_@f1+3
  2557  03C6  084B               	movf	(sprintf@fval+2)^(0+128),w
  2558  03C7  00F2               	movwf	__div_to_l_@f1+2
  2559  03C8  084A               	movf	(sprintf@fval+1)^(0+128),w
  2560  03C9  00F1               	movwf	__div_to_l_@f1+1
  2561  03CA  0849               	movf	sprintf@fval^(0+128),w
  2562  03CB  00F0               	movwf	__div_to_l_@f1
  2563  03CC  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2564  03CD  00F7               	movwf	__div_to_l_@f2+3
  2565  03CE  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2566  03CF  00F6               	movwf	__div_to_l_@f2+2
  2567  03D0  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2568  03D1  00F5               	movwf	__div_to_l_@f2+1
  2569  03D2  0843               	movf	sprintf@tmpval^(0+128),w
  2570  03D3  00F4               	movwf	__div_to_l_@f2
  2571  03D4  120A  158A  2082  120A  118A  	fcall	__div_to_l_
  2572  03D9  0873               	movf	?__div_to_l_+3,w
  2573  03DA  1683               	bsf	3,5	;RP0=1, select bank1
  2574  03DB  1303               	bcf	3,6	;RP1=0, select bank1
  2575  03DC  00BE               	movwf	(sprintf@val+3)^(0+128)
  2576  03DD  0872               	movf	?__div_to_l_+2,w
  2577  03DE  00BD               	movwf	(sprintf@val+2)^(0+128)
  2578  03DF  0871               	movf	?__div_to_l_+1,w
  2579  03E0  00BC               	movwf	(sprintf@val+1)^(0+128)
  2580  03E1  0870               	movf	?__div_to_l_,w
  2581  03E2  00BB               	movwf	sprintf@val^(0+128)
  2582  03E3                     l3329:
  2583                           
  2584                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2585  03E3  3000               	movlw	0
  2586  03E4  00CC               	movwf	(sprintf@fval+3)^(0+128)
  2587  03E5  3000               	movlw	0
  2588  03E6  00CB               	movwf	(sprintf@fval+2)^(0+128)
  2589  03E7  3000               	movlw	0
  2590  03E8  00CA               	movwf	(sprintf@fval+1)^(0+128)
  2591  03E9  3000               	movlw	0
  2592  03EA  00C9               	movwf	sprintf@fval^(0+128)
  2593                           
  2594                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2595  03EB  2C70               	goto	l3337
  2596  03EC                     l3331:
  2597                           
  2598                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2599  03EC  1683               	bsf	3,5	;RP0=1, select bank1
  2600  03ED  1303               	bcf	3,6	;RP1=0, select bank1
  2601  03EE  084C               	movf	(sprintf@fval+3)^(0+128),w
  2602  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  2603  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  2604  03F1  00D4               	movwf	___fltol@f1+3
  2605  03F2  1683               	bsf	3,5	;RP0=1, select bank1
  2606  03F3  1303               	bcf	3,6	;RP1=0, select bank1
  2607  03F4  084B               	movf	(sprintf@fval+2)^(0+128),w
  2608  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  2609  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  2610  03F7  00D3               	movwf	___fltol@f1+2
  2611  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  2612  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  2613  03FA  084A               	movf	(sprintf@fval+1)^(0+128),w
  2614  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  2615  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  2616  03FD  00D2               	movwf	___fltol@f1+1
  2617  03FE  1683               	bsf	3,5	;RP0=1, select bank1
  2618  03FF  1303               	bcf	3,6	;RP1=0, select bank1
  2619  0400  0849               	movf	sprintf@fval^(0+128),w
  2620  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2621  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2622  0403  00D1               	movwf	___fltol@f1
  2623  0404  120A  158A  2006  120A  118A  	fcall	___fltol
  2624  0409  1283               	bcf	3,5	;RP0=0, select bank0
  2625  040A  1303               	bcf	3,6	;RP1=0, select bank0
  2626  040B  0854               	movf	?___fltol+3,w
  2627  040C  1683               	bsf	3,5	;RP0=1, select bank1
  2628  040D  1303               	bcf	3,6	;RP1=0, select bank1
  2629  040E  00BE               	movwf	(sprintf@val+3)^(0+128)
  2630  040F  1283               	bcf	3,5	;RP0=0, select bank0
  2631  0410  1303               	bcf	3,6	;RP1=0, select bank0
  2632  0411  0853               	movf	?___fltol+2,w
  2633  0412  1683               	bsf	3,5	;RP0=1, select bank1
  2634  0413  1303               	bcf	3,6	;RP1=0, select bank1
  2635  0414  00BD               	movwf	(sprintf@val+2)^(0+128)
  2636  0415  1283               	bcf	3,5	;RP0=0, select bank0
  2637  0416  1303               	bcf	3,6	;RP1=0, select bank0
  2638  0417  0852               	movf	?___fltol+1,w
  2639  0418  1683               	bsf	3,5	;RP0=1, select bank1
  2640  0419  1303               	bcf	3,6	;RP1=0, select bank1
  2641  041A  00BC               	movwf	(sprintf@val+1)^(0+128)
  2642  041B  1283               	bcf	3,5	;RP0=0, select bank0
  2643  041C  1303               	bcf	3,6	;RP1=0, select bank0
  2644  041D  0851               	movf	?___fltol,w
  2645  041E  1683               	bsf	3,5	;RP0=1, select bank1
  2646  041F  1303               	bcf	3,6	;RP1=0, select bank1
  2647  0420  00BB               	movwf	sprintf@val^(0+128)
  2648  0421                     l3333:
  2649                           
  2650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2651  0421  083E               	movf	(sprintf@val+3)^(0+128),w
  2652  0422  00F3               	movwf	___xxtofl@val+3
  2653  0423  083D               	movf	(sprintf@val+2)^(0+128),w
  2654  0424  00F2               	movwf	___xxtofl@val+2
  2655  0425  083C               	movf	(sprintf@val+1)^(0+128),w
  2656  0426  00F1               	movwf	___xxtofl@val+1
  2657  0427  083B               	movf	sprintf@val^(0+128),w
  2658  0428  00F0               	movwf	___xxtofl@val
  2659  0429  3000               	movlw	0
  2660  042A  160A  118A  21F6  120A  118A  	fcall	___xxtofl
  2661  042F  0873               	movf	?___xxtofl+3,w
  2662  0430  1283               	bcf	3,5	;RP0=0, select bank0
  2663  0431  1303               	bcf	3,6	;RP1=0, select bank0
  2664  0432  00E9               	movwf	___flsub@a+3
  2665  0433  0872               	movf	?___xxtofl+2,w
  2666  0434  00E8               	movwf	___flsub@a+2
  2667  0435  0871               	movf	?___xxtofl+1,w
  2668  0436  00E7               	movwf	___flsub@a+1
  2669  0437  0870               	movf	?___xxtofl,w
  2670  0438  00E6               	movwf	___flsub@a
  2671  0439  1683               	bsf	3,5	;RP0=1, select bank1
  2672  043A  1303               	bcf	3,6	;RP1=0, select bank1
  2673  043B  084C               	movf	(sprintf@fval+3)^(0+128),w
  2674  043C  1283               	bcf	3,5	;RP0=0, select bank0
  2675  043D  1303               	bcf	3,6	;RP1=0, select bank0
  2676  043E  00ED               	movwf	___flsub@b+3
  2677  043F  1683               	bsf	3,5	;RP0=1, select bank1
  2678  0440  1303               	bcf	3,6	;RP1=0, select bank1
  2679  0441  084B               	movf	(sprintf@fval+2)^(0+128),w
  2680  0442  1283               	bcf	3,5	;RP0=0, select bank0
  2681  0443  1303               	bcf	3,6	;RP1=0, select bank0
  2682  0444  00EC               	movwf	___flsub@b+2
  2683  0445  1683               	bsf	3,5	;RP0=1, select bank1
  2684  0446  1303               	bcf	3,6	;RP1=0, select bank1
  2685  0447  084A               	movf	(sprintf@fval+1)^(0+128),w
  2686  0448  1283               	bcf	3,5	;RP0=0, select bank0
  2687  0449  1303               	bcf	3,6	;RP1=0, select bank0
  2688  044A  00EB               	movwf	___flsub@b+1
  2689  044B  1683               	bsf	3,5	;RP0=1, select bank1
  2690  044C  1303               	bcf	3,6	;RP1=0, select bank1
  2691  044D  0849               	movf	sprintf@fval^(0+128),w
  2692  044E  1283               	bcf	3,5	;RP0=0, select bank0
  2693  044F  1303               	bcf	3,6	;RP1=0, select bank0
  2694  0450  00EA               	movwf	___flsub@b
  2695  0451  160A  158A  23CB  120A  118A  	fcall	___flsub
  2696  0456  1283               	bcf	3,5	;RP0=0, select bank0
  2697  0457  1303               	bcf	3,6	;RP1=0, select bank0
  2698  0458  0869               	movf	?___flsub+3,w
  2699  0459  1683               	bsf	3,5	;RP0=1, select bank1
  2700  045A  1303               	bcf	3,6	;RP1=0, select bank1
  2701  045B  00CC               	movwf	(sprintf@fval+3)^(0+128)
  2702  045C  1283               	bcf	3,5	;RP0=0, select bank0
  2703  045D  1303               	bcf	3,6	;RP1=0, select bank0
  2704  045E  0868               	movf	?___flsub+2,w
  2705  045F  1683               	bsf	3,5	;RP0=1, select bank1
  2706  0460  1303               	bcf	3,6	;RP1=0, select bank1
  2707  0461  00CB               	movwf	(sprintf@fval+2)^(0+128)
  2708  0462  1283               	bcf	3,5	;RP0=0, select bank0
  2709  0463  1303               	bcf	3,6	;RP1=0, select bank0
  2710  0464  0867               	movf	?___flsub+1,w
  2711  0465  1683               	bsf	3,5	;RP0=1, select bank1
  2712  0466  1303               	bcf	3,6	;RP1=0, select bank1
  2713  0467  00CA               	movwf	(sprintf@fval+1)^(0+128)
  2714  0468  1283               	bcf	3,5	;RP0=0, select bank0
  2715  0469  1303               	bcf	3,6	;RP1=0, select bank0
  2716  046A  0866               	movf	?___flsub,w
  2717  046B  1683               	bsf	3,5	;RP0=1, select bank1
  2718  046C  1303               	bcf	3,6	;RP1=0, select bank1
  2719  046D  00C9               	movwf	sprintf@fval^(0+128)
  2720  046E                     l3335:
  2721                           
  2722                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2723  046E  01C7               	clrf	sprintf@eexp^(0+128)
  2724  046F  01C8               	clrf	(sprintf@eexp+1)^(0+128)
  2725  0470                     l3337:
  2726                           
  2727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2728  0470  01D0               	clrf	sprintf@c^(0+128)
  2729  0471  0AD0               	incf	sprintf@c^(0+128),f
  2730  0472                     l3343:
  2731                           
  2732                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2733  0472  0850               	movf	sprintf@c^(0+128),w
  2734  0473  00B1               	movwf	??_sprintf^(0+128)
  2735  0474  3001               	movlw	1
  2736  0475                     u5575:
  2737  0475  1003               	clrc
  2738  0476  0DB1               	rlf	??_sprintf^(0+128),f
  2739  0477  3EFF               	addlw	-1
  2740  0478  1D03               	skipz
  2741  0479  2C75               	goto	u5575
  2742  047A  1003               	clrc
  2743  047B  0D31               	rlf	??_sprintf^(0+128),w
  2744  047C  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2745  047D  0084               	movwf	4
  2746  047E  160A  118A  2000  120A  118A  	fcall	stringdir
  2747  0483  00B2               	movwf	(??_sprintf+1)^(0+128)
  2748  0484  160A  118A  2000  120A  118A  	fcall	stringdir
  2749  0489  00B3               	movwf	((??_sprintf+1)^(0+128)+1)
  2750  048A  160A  118A  2000  120A  118A  	fcall	stringdir
  2751  048F  00B4               	movwf	((??_sprintf+1)^(0+128)+2)
  2752  0490  160A  118A  2000  120A  118A  	fcall	stringdir
  2753  0495  00B5               	movwf	((??_sprintf+1)^(0+128)+3)
  2754  0496  0835               	movf	(??_sprintf+4)^(0+128),w
  2755  0497  023E               	subwf	(sprintf@val+3)^(0+128),w
  2756  0498  1D03               	skipz
  2757  0499  2CA4               	goto	u5585
  2758  049A  0834               	movf	(??_sprintf+3)^(0+128),w
  2759  049B  023D               	subwf	(sprintf@val+2)^(0+128),w
  2760  049C  1D03               	skipz
  2761  049D  2CA4               	goto	u5585
  2762  049E  0833               	movf	(??_sprintf+2)^(0+128),w
  2763  049F  023C               	subwf	(sprintf@val+1)^(0+128),w
  2764  04A0  1D03               	skipz
  2765  04A1  2CA4               	goto	u5585
  2766  04A2  0832               	movf	(??_sprintf+1)^(0+128),w
  2767  04A3  023B               	subwf	sprintf@val^(0+128),w
  2768  04A4                     u5585:
  2769  04A4  1803               	skipnc
  2770  04A5  2CA7               	goto	u5581
  2771  04A6  2CA8               	goto	u5580
  2772  04A7                     u5581:
  2773  04A7  2CA9               	goto	l3347
  2774  04A8                     u5580:
  2775  04A8  2CB3               	goto	l3349
  2776  04A9                     l3347:
  2777  04A9  3001               	movlw	1
  2778  04AA  00B1               	movwf	??_sprintf^(0+128)
  2779  04AB  0831               	movf	??_sprintf^(0+128),w
  2780  04AC  07D0               	addwf	sprintf@c^(0+128),f
  2781  04AD  300A               	movlw	10
  2782  04AE  0650               	xorwf	sprintf@c^(0+128),w
  2783  04AF  1D03               	btfss	3,2
  2784  04B0  2CB2               	goto	u5591
  2785  04B1  2CB3               	goto	u5590
  2786  04B2                     u5591:
  2787  04B2  2C72               	goto	l3343
  2788  04B3                     u5590:
  2789  04B3                     l3349:
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  2792  04B3  0850               	movf	sprintf@c^(0+128),w
  2793  04B4  074E               	addwf	sprintf@prec^(0+128),w
  2794  04B5  00B1               	movwf	??_sprintf^(0+128)
  2795  04B6  084F               	movf	(sprintf@prec+1)^(0+128),w
  2796  04B7  1803               	skipnc
  2797  04B8  0A4F               	incf	(sprintf@prec+1)^(0+128),w
  2798  04B9  00B2               	movwf	(??_sprintf^(0+128)+1)
  2799  04BA  0847               	movf	sprintf@eexp^(0+128),w
  2800  04BB  0731               	addwf	??_sprintf^(0+128),w
  2801  04BC  00B3               	movwf	(??_sprintf+2)^(0+128)
  2802  04BD  0848               	movf	(sprintf@eexp+1)^(0+128),w
  2803  04BE  1803               	skipnc
  2804  04BF  0A48               	incf	(sprintf@eexp+1)^(0+128),w
  2805  04C0  0732               	addwf	(??_sprintf+1)^(0+128),w
  2806  04C1  00B4               	movwf	(??_sprintf+3)^(0+128)
  2807  04C2  0833               	movf	(??_sprintf+2)^(0+128),w
  2808  04C3  02C1               	subwf	sprintf@width^(0+128),f
  2809  04C4  0834               	movf	(??_sprintf+3)^(0+128),w
  2810  04C5  1C03               	skipc
  2811  04C6  03C2               	decf	(sprintf@width+1)^(0+128),f
  2812  04C7  02C2               	subwf	(sprintf@width+1)^(0+128),f
  2813                           
  2814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  2815  04C8  084E               	movf	sprintf@prec^(0+128),w
  2816  04C9  044F               	iorwf	(sprintf@prec+1)^(0+128),w
  2817  04CA  1903               	btfsc	3,2
  2818  04CB  2CCD               	goto	u5601
  2819  04CC  2CCE               	goto	u5600
  2820  04CD                     u5601:
  2821  04CD  2CD4               	goto	l3353
  2822  04CE                     u5600:
  2823  04CE                     l3351:
  2824                           
  2825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  2826  04CE  30FF               	movlw	255
  2827  04CF  07C1               	addwf	sprintf@width^(0+128),f
  2828  04D0  1803               	skipnc
  2829  04D1  0AC2               	incf	(sprintf@width+1)^(0+128),f
  2830  04D2  30FF               	movlw	255
  2831  04D3  07C2               	addwf	(sprintf@width+1)^(0+128),f
  2832  04D4                     l3353:
  2833                           
  2834                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  2835  04D4  3003               	movlw	3
  2836  04D5  053F               	andwf	sprintf@flag^(0+128),w
  2837  04D6  00B1               	movwf	??_sprintf^(0+128)
  2838  04D7  3000               	movlw	0
  2839  04D8  0540               	andwf	(sprintf@flag+1)^(0+128),w
  2840  04D9  00B2               	movwf	(??_sprintf+1)^(0+128)
  2841  04DA  0831               	movf	??_sprintf^(0+128),w
  2842  04DB  0432               	iorwf	(??_sprintf^(0+128)+1),w
  2843  04DC  1903               	btfsc	3,2
  2844  04DD  2CDF               	goto	u5611
  2845  04DE  2CE0               	goto	u5610
  2846  04DF                     u5611:
  2847  04DF  2CF5               	goto	l3363
  2848  04E0                     u5610:
  2849  04E0                     l3355:
  2850                           
  2851                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  2852  04E0  30FF               	movlw	255
  2853  04E1  07C1               	addwf	sprintf@width^(0+128),f
  2854  04E2  1803               	skipnc
  2855  04E3  0AC2               	incf	(sprintf@width+1)^(0+128),f
  2856  04E4  30FF               	movlw	255
  2857  04E5  07C2               	addwf	(sprintf@width+1)^(0+128),f
  2858  04E6  2CF5               	goto	l3363
  2859  04E7                     l3357:
  2860                           
  2861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  2862  04E7  3020               	movlw	32
  2863  04E8  1683               	bsf	3,5	;RP0=1, select bank1
  2864  04E9  1303               	bcf	3,6	;RP1=0, select bank1
  2865  04EA  00B1               	movwf	??_sprintf^(0+128)
  2866  04EB  084D               	movf	sprintf@sp^(0+128),w
  2867  04EC  0084               	movwf	4
  2868  04ED  0831               	movf	??_sprintf^(0+128),w
  2869  04EE  1383               	bcf	3,7	;select IRP bank0
  2870  04EF  0080               	movwf	0
  2871  04F0                     l3359:
  2872  04F0  3001               	movlw	1
  2873  04F1  00B1               	movwf	??_sprintf^(0+128)
  2874  04F2  0831               	movf	??_sprintf^(0+128),w
  2875  04F3  07CD               	addwf	sprintf@sp^(0+128),f
  2876  04F4  2CE0               	goto	l3355
  2877  04F5                     l3363:
  2878                           
  2879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  2880  04F5  0842               	movf	(sprintf@width+1)^(0+128),w
  2881  04F6  3A80               	xorlw	128
  2882  04F7  00FF               	movwf	btemp+1
  2883  04F8  3080               	movlw	128
  2884  04F9  027F               	subwf	btemp+1,w
  2885  04FA  1D03               	skipz
  2886  04FB  2CFE               	goto	u5625
  2887  04FC  3001               	movlw	1
  2888  04FD  0241               	subwf	sprintf@width^(0+128),w
  2889  04FE                     u5625:
  2890  04FE  1803               	skipnc
  2891  04FF  2D01               	goto	u5621
  2892  0500  2D02               	goto	u5620
  2893  0501                     u5621:
  2894  0501  2CE7               	goto	l3357
  2895  0502                     u5620:
  2896  0502                     l3365:
  2897                           
  2898                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  2899  0502  3003               	movlw	3
  2900  0503  1683               	bsf	3,5	;RP0=1, select bank1
  2901  0504  1303               	bcf	3,6	;RP1=0, select bank1
  2902  0505  053F               	andwf	sprintf@flag^(0+128),w
  2903  0506  00B1               	movwf	??_sprintf^(0+128)
  2904  0507  3000               	movlw	0
  2905  0508  0540               	andwf	(sprintf@flag+1)^(0+128),w
  2906  0509  00B2               	movwf	(??_sprintf+1)^(0+128)
  2907  050A  0831               	movf	??_sprintf^(0+128),w
  2908  050B  0432               	iorwf	(??_sprintf^(0+128)+1),w
  2909  050C  1903               	btfsc	3,2
  2910  050D  2D0F               	goto	u5631
  2911  050E  2D10               	goto	u5630
  2912  050F                     u5631:
  2913  050F  2D82               	goto	l340
  2914  0510                     u5630:
  2915  0510                     l3367:
  2916                           
  2917                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  2918  0510  302D               	movlw	45
  2919  0511  00B1               	movwf	??_sprintf^(0+128)
  2920  0512  084D               	movf	sprintf@sp^(0+128),w
  2921  0513  0084               	movwf	4
  2922  0514  0831               	movf	??_sprintf^(0+128),w
  2923  0515  1383               	bcf	3,7	;select IRP bank0
  2924  0516  0080               	movwf	0
  2925  0517                     l3369:
  2926  0517  3001               	movlw	1
  2927  0518  00B1               	movwf	??_sprintf^(0+128)
  2928  0519  0831               	movf	??_sprintf^(0+128),w
  2929  051A  07CD               	addwf	sprintf@sp^(0+128),f
  2930  051B  2D82               	goto	l340
  2931  051C                     l3371:
  2932                           
  2933                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  2934  051C  0850               	movf	sprintf@c^(0+128),w
  2935  051D  00B1               	movwf	??_sprintf^(0+128)
  2936  051E  3001               	movlw	1
  2937  051F                     u5645:
  2938  051F  1003               	clrc
  2939  0520  0DB1               	rlf	??_sprintf^(0+128),f
  2940  0521  3EFF               	addlw	-1
  2941  0522  1D03               	skipz
  2942  0523  2D1F               	goto	u5645
  2943  0524  1003               	clrc
  2944  0525  0D31               	rlf	??_sprintf^(0+128),w
  2945  0526  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2946  0527  0084               	movwf	4
  2947  0528  160A  118A  2000  120A  118A  	fcall	stringdir
  2948  052D  00F0               	movwf	___lldiv@divisor
  2949  052E  160A  118A  2000  120A  118A  	fcall	stringdir
  2950  0533  00F1               	movwf	___lldiv@divisor+1
  2951  0534  160A  118A  2000  120A  118A  	fcall	stringdir
  2952  0539  00F2               	movwf	___lldiv@divisor+2
  2953  053A  160A  118A  2000  120A  118A  	fcall	stringdir
  2954  053F  00F3               	movwf	___lldiv@divisor+3
  2955  0540  083E               	movf	(sprintf@val+3)^(0+128),w
  2956  0541  00F7               	movwf	___lldiv@dividend+3
  2957  0542  083D               	movf	(sprintf@val+2)^(0+128),w
  2958  0543  00F6               	movwf	___lldiv@dividend+2
  2959  0544  083C               	movf	(sprintf@val+1)^(0+128),w
  2960  0545  00F5               	movwf	___lldiv@dividend+1
  2961  0546  083B               	movf	sprintf@val^(0+128),w
  2962  0547  00F4               	movwf	___lldiv@dividend
  2963  0548  160A  158A  263E  120A  118A  	fcall	___lldiv
  2964  054D  0873               	movf	?___lldiv+3,w
  2965  054E  1683               	bsf	3,5	;RP0=1, select bank1
  2966  054F  1303               	bcf	3,6	;RP1=0, select bank1
  2967  0550  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  2968  0551  0872               	movf	?___lldiv+2,w
  2969  0552  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  2970  0553  0871               	movf	?___lldiv+1,w
  2971  0554  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  2972  0555  0870               	movf	?___lldiv,w
  2973  0556  00C3               	movwf	sprintf@tmpval^(0+128)
  2974  0557                     l3373:
  2975                           
  2976                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  2977  0557  3000               	movlw	0
  2978  0558  00F3               	movwf	___llmod@divisor+3
  2979  0559  3000               	movlw	0
  2980  055A  00F2               	movwf	___llmod@divisor+2
  2981  055B  3000               	movlw	0
  2982  055C  00F1               	movwf	___llmod@divisor+1
  2983  055D  300A               	movlw	10
  2984  055E  00F0               	movwf	___llmod@divisor
  2985  055F  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  2986  0560  00F7               	movwf	___llmod@dividend+3
  2987  0561  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  2988  0562  00F6               	movwf	___llmod@dividend+2
  2989  0563  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  2990  0564  00F5               	movwf	___llmod@dividend+1
  2991  0565  0843               	movf	sprintf@tmpval^(0+128),w
  2992  0566  00F4               	movwf	___llmod@dividend
  2993  0567  160A  158A  2532  120A  118A  	fcall	___llmod
  2994  056C  0873               	movf	?___llmod+3,w
  2995  056D  1683               	bsf	3,5	;RP0=1, select bank1
  2996  056E  1303               	bcf	3,6	;RP1=0, select bank1
  2997  056F  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  2998  0570  0872               	movf	?___llmod+2,w
  2999  0571  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  3000  0572  0871               	movf	?___llmod+1,w
  3001  0573  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  3002  0574  0870               	movf	?___llmod,w
  3003  0575  00C3               	movwf	sprintf@tmpval^(0+128)
  3004  0576                     l3375:
  3005                           
  3006                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3007  0576  0843               	movf	sprintf@tmpval^(0+128),w
  3008  0577  3E30               	addlw	48
  3009  0578  00B1               	movwf	??_sprintf^(0+128)
  3010  0579  084D               	movf	sprintf@sp^(0+128),w
  3011  057A  0084               	movwf	4
  3012  057B  0831               	movf	??_sprintf^(0+128),w
  3013  057C  1383               	bcf	3,7	;select IRP bank0
  3014  057D  0080               	movwf	0
  3015  057E  3001               	movlw	1
  3016  057F  00B1               	movwf	??_sprintf^(0+128)
  3017  0580  0831               	movf	??_sprintf^(0+128),w
  3018  0581  07CD               	addwf	sprintf@sp^(0+128),f
  3019  0582                     l340:	
  3020                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3021                           
  3022                           
  3023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3024  0582  3001               	movlw	1
  3025  0583  02D0               	subwf	sprintf@c^(0+128),f
  3026  0584  0A50               	incf	sprintf@c^(0+128),w
  3027  0585  1D03               	btfss	3,2
  3028  0586  2D88               	goto	u5651
  3029  0587  2D89               	goto	u5650
  3030  0588                     u5651:
  3031  0588  2D1C               	goto	l3371
  3032  0589                     u5650:
  3033  0589  2D9D               	goto	l3383
  3034  058A                     l3377:
  3035                           
  3036                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3037  058A  3030               	movlw	48
  3038  058B  1683               	bsf	3,5	;RP0=1, select bank1
  3039  058C  1303               	bcf	3,6	;RP1=0, select bank1
  3040  058D  00B1               	movwf	??_sprintf^(0+128)
  3041  058E  084D               	movf	sprintf@sp^(0+128),w
  3042  058F  0084               	movwf	4
  3043  0590  0831               	movf	??_sprintf^(0+128),w
  3044  0591  1383               	bcf	3,7	;select IRP bank0
  3045  0592  0080               	movwf	0
  3046  0593                     l3379:
  3047  0593  3001               	movlw	1
  3048  0594  00B1               	movwf	??_sprintf^(0+128)
  3049  0595  0831               	movf	??_sprintf^(0+128),w
  3050  0596  07CD               	addwf	sprintf@sp^(0+128),f
  3051  0597                     l3381:
  3052                           
  3053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3054  0597  30FF               	movlw	255
  3055  0598  07C7               	addwf	sprintf@eexp^(0+128),f
  3056  0599  1803               	skipnc
  3057  059A  0AC8               	incf	(sprintf@eexp+1)^(0+128),f
  3058  059B  30FF               	movlw	255
  3059  059C  07C8               	addwf	(sprintf@eexp+1)^(0+128),f
  3060  059D                     l3383:
  3061                           
  3062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3063  059D  0848               	movf	(sprintf@eexp+1)^(0+128),w
  3064  059E  3A80               	xorlw	128
  3065  059F  00FF               	movwf	btemp+1
  3066  05A0  3080               	movlw	128
  3067  05A1  027F               	subwf	btemp+1,w
  3068  05A2  1D03               	skipz
  3069  05A3  2DA6               	goto	u5665
  3070  05A4  3001               	movlw	1
  3071  05A5  0247               	subwf	sprintf@eexp^(0+128),w
  3072  05A6                     u5665:
  3073  05A6  1803               	skipnc
  3074  05A7  2DA9               	goto	u5661
  3075  05A8  2DAA               	goto	u5660
  3076  05A9                     u5661:
  3077  05A9  2D8A               	goto	l3377
  3078  05AA                     u5660:
  3079  05AA                     l3385:
  3080                           
  3081                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3082  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  3083  05AB  1303               	bcf	3,6	;RP1=0, select bank1
  3084  05AC  084F               	movf	(sprintf@prec+1)^(0+128),w
  3085  05AD  3A80               	xorlw	128
  3086  05AE  00FF               	movwf	btemp+1
  3087  05AF  3080               	movlw	128
  3088  05B0  027F               	subwf	btemp+1,w
  3089  05B1  1D03               	skipz
  3090  05B2  2DB5               	goto	u5675
  3091  05B3  3009               	movlw	9
  3092  05B4  024E               	subwf	sprintf@prec^(0+128),w
  3093  05B5                     u5675:
  3094  05B5  1C03               	skipc
  3095  05B6  2DB8               	goto	u5671
  3096  05B7  2DB9               	goto	u5670
  3097  05B8                     u5671:
  3098  05B8  2DC0               	goto	l3389
  3099  05B9                     u5670:
  3100  05B9                     l3387:
  3101                           
  3102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3103  05B9  3008               	movlw	8
  3104  05BA  1683               	bsf	3,5	;RP0=1, select bank1
  3105  05BB  1303               	bcf	3,6	;RP1=0, select bank1
  3106  05BC  00B1               	movwf	??_sprintf^(0+128)
  3107  05BD  0831               	movf	??_sprintf^(0+128),w
  3108  05BE  00D0               	movwf	sprintf@c^(0+128)
  3109  05BF  2DC6               	goto	l347
  3110  05C0                     l3389:
  3111                           
  3112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3113  05C0  1683               	bsf	3,5	;RP0=1, select bank1
  3114  05C1  1303               	bcf	3,6	;RP1=0, select bank1
  3115  05C2  084E               	movf	sprintf@prec^(0+128),w
  3116  05C3  00B1               	movwf	??_sprintf^(0+128)
  3117  05C4  0831               	movf	??_sprintf^(0+128),w
  3118  05C5  00D0               	movwf	sprintf@c^(0+128)
  3119  05C6                     l347:
  3120                           
  3121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3122  05C6  0850               	movf	sprintf@c^(0+128),w
  3123  05C7  00B1               	movwf	??_sprintf^(0+128)
  3124  05C8  01B2               	clrf	(??_sprintf^(0+128)+1)
  3125  05C9  0831               	movf	??_sprintf^(0+128),w
  3126  05CA  02CE               	subwf	sprintf@prec^(0+128),f
  3127  05CB  0832               	movf	(??_sprintf+1)^(0+128),w
  3128  05CC  1C03               	skipc
  3129  05CD  03CF               	decf	(sprintf@prec+1)^(0+128),f
  3130  05CE  02CF               	subwf	(sprintf@prec+1)^(0+128),f
  3131  05CF                     l3391:
  3132                           
  3133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3134  05CF  0850               	movf	sprintf@c^(0+128),w
  3135  05D0  1903               	btfsc	3,2
  3136  05D1  2DD3               	goto	u5681
  3137  05D2  2DD4               	goto	u5680
  3138  05D3                     u5681:
  3139  05D3  2DDF               	goto	l3397
  3140  05D4                     u5680:
  3141  05D4                     l3393:
  3142                           
  3143                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3144  05D4  302E               	movlw	46
  3145  05D5  00B1               	movwf	??_sprintf^(0+128)
  3146  05D6  084D               	movf	sprintf@sp^(0+128),w
  3147  05D7  0084               	movwf	4
  3148  05D8  0831               	movf	??_sprintf^(0+128),w
  3149  05D9  1383               	bcf	3,7	;select IRP bank0
  3150  05DA  0080               	movwf	0
  3151  05DB                     l3395:
  3152  05DB  3001               	movlw	1
  3153  05DC  00B1               	movwf	??_sprintf^(0+128)
  3154  05DD  0831               	movf	??_sprintf^(0+128),w
  3155  05DE  07CD               	addwf	sprintf@sp^(0+128),f
  3156  05DF                     l3397:
  3157                           
  3158                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3159  05DF  0850               	movf	sprintf@c^(0+128),w
  3160  05E0  120A  158A  2140  120A  118A  	fcall	_scale
  3161  05E5  1283               	bcf	3,5	;RP0=0, select bank0
  3162  05E6  1303               	bcf	3,6	;RP1=0, select bank0
  3163  05E7  0841               	movf	?_scale+3,w
  3164  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  3165  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  3166  05EA  00B9               	movwf	(_sprintf$1044+3)^(0+128)
  3167  05EB  1283               	bcf	3,5	;RP0=0, select bank0
  3168  05EC  1303               	bcf	3,6	;RP1=0, select bank0
  3169  05ED  0840               	movf	?_scale+2,w
  3170  05EE  1683               	bsf	3,5	;RP0=1, select bank1
  3171  05EF  1303               	bcf	3,6	;RP1=0, select bank1
  3172  05F0  00B8               	movwf	(_sprintf$1044+2)^(0+128)
  3173  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  3174  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  3175  05F3  083F               	movf	?_scale+1,w
  3176  05F4  1683               	bsf	3,5	;RP0=1, select bank1
  3177  05F5  1303               	bcf	3,6	;RP1=0, select bank1
  3178  05F6  00B7               	movwf	(_sprintf$1044+1)^(0+128)
  3179  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3180  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  3181  05F9  083E               	movf	?_scale,w
  3182  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  3183  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  3184  05FC  00B6               	movwf	_sprintf$1044^(0+128)
  3185  05FD                     l3399:
  3186                           
  3187                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3188  05FD  0839               	movf	(_sprintf$1044+3)^(0+128),w
  3189  05FE  1283               	bcf	3,5	;RP0=0, select bank0
  3190  05FF  1303               	bcf	3,6	;RP1=0, select bank0
  3191  0600  00AB               	movwf	___flmul@a+3
  3192  0601  1683               	bsf	3,5	;RP0=1, select bank1
  3193  0602  1303               	bcf	3,6	;RP1=0, select bank1
  3194  0603  0838               	movf	(_sprintf$1044+2)^(0+128),w
  3195  0604  1283               	bcf	3,5	;RP0=0, select bank0
  3196  0605  1303               	bcf	3,6	;RP1=0, select bank0
  3197  0606  00AA               	movwf	___flmul@a+2
  3198  0607  1683               	bsf	3,5	;RP0=1, select bank1
  3199  0608  1303               	bcf	3,6	;RP1=0, select bank1
  3200  0609  0837               	movf	(_sprintf$1044+1)^(0+128),w
  3201  060A  1283               	bcf	3,5	;RP0=0, select bank0
  3202  060B  1303               	bcf	3,6	;RP1=0, select bank0
  3203  060C  00A9               	movwf	___flmul@a+1
  3204  060D  1683               	bsf	3,5	;RP0=1, select bank1
  3205  060E  1303               	bcf	3,6	;RP1=0, select bank1
  3206  060F  0836               	movf	_sprintf$1044^(0+128),w
  3207  0610  1283               	bcf	3,5	;RP0=0, select bank0
  3208  0611  1303               	bcf	3,6	;RP1=0, select bank0
  3209  0612  00A8               	movwf	___flmul@a
  3210  0613  1683               	bsf	3,5	;RP0=1, select bank1
  3211  0614  1303               	bcf	3,6	;RP1=0, select bank1
  3212  0615  084C               	movf	(sprintf@fval+3)^(0+128),w
  3213  0616  1283               	bcf	3,5	;RP0=0, select bank0
  3214  0617  1303               	bcf	3,6	;RP1=0, select bank0
  3215  0618  00A7               	movwf	___flmul@b+3
  3216  0619  1683               	bsf	3,5	;RP0=1, select bank1
  3217  061A  1303               	bcf	3,6	;RP1=0, select bank1
  3218  061B  084B               	movf	(sprintf@fval+2)^(0+128),w
  3219  061C  1283               	bcf	3,5	;RP0=0, select bank0
  3220  061D  1303               	bcf	3,6	;RP1=0, select bank0
  3221  061E  00A6               	movwf	___flmul@b+2
  3222  061F  1683               	bsf	3,5	;RP0=1, select bank1
  3223  0620  1303               	bcf	3,6	;RP1=0, select bank1
  3224  0621  084A               	movf	(sprintf@fval+1)^(0+128),w
  3225  0622  1283               	bcf	3,5	;RP0=0, select bank0
  3226  0623  1303               	bcf	3,6	;RP1=0, select bank0
  3227  0624  00A5               	movwf	___flmul@b+1
  3228  0625  1683               	bsf	3,5	;RP0=1, select bank1
  3229  0626  1303               	bcf	3,6	;RP1=0, select bank1
  3230  0627  0849               	movf	sprintf@fval^(0+128),w
  3231  0628  1283               	bcf	3,5	;RP0=0, select bank0
  3232  0629  1303               	bcf	3,6	;RP1=0, select bank0
  3233  062A  00A4               	movwf	___flmul@b
  3234  062B  120A  158A  249F  120A  118A  	fcall	___flmul
  3235  0630  1283               	bcf	3,5	;RP0=0, select bank0
  3236  0631  1303               	bcf	3,6	;RP1=0, select bank0
  3237  0632  0827               	movf	?___flmul+3,w
  3238  0633  00D4               	movwf	___fltol@f1+3
  3239  0634  0826               	movf	?___flmul+2,w
  3240  0635  00D3               	movwf	___fltol@f1+2
  3241  0636  0825               	movf	?___flmul+1,w
  3242  0637  00D2               	movwf	___fltol@f1+1
  3243  0638  0824               	movf	?___flmul,w
  3244  0639  00D1               	movwf	___fltol@f1
  3245  063A  120A  158A  2006  120A  118A  	fcall	___fltol
  3246  063F  1283               	bcf	3,5	;RP0=0, select bank0
  3247  0640  1303               	bcf	3,6	;RP1=0, select bank0
  3248  0641  0854               	movf	?___fltol+3,w
  3249  0642  1683               	bsf	3,5	;RP0=1, select bank1
  3250  0643  1303               	bcf	3,6	;RP1=0, select bank1
  3251  0644  00BE               	movwf	(sprintf@val+3)^(0+128)
  3252  0645  1283               	bcf	3,5	;RP0=0, select bank0
  3253  0646  1303               	bcf	3,6	;RP1=0, select bank0
  3254  0647  0853               	movf	?___fltol+2,w
  3255  0648  1683               	bsf	3,5	;RP0=1, select bank1
  3256  0649  1303               	bcf	3,6	;RP1=0, select bank1
  3257  064A  00BD               	movwf	(sprintf@val+2)^(0+128)
  3258  064B  1283               	bcf	3,5	;RP0=0, select bank0
  3259  064C  1303               	bcf	3,6	;RP1=0, select bank0
  3260  064D  0852               	movf	?___fltol+1,w
  3261  064E  1683               	bsf	3,5	;RP0=1, select bank1
  3262  064F  1303               	bcf	3,6	;RP1=0, select bank1
  3263  0650  00BC               	movwf	(sprintf@val+1)^(0+128)
  3264  0651  1283               	bcf	3,5	;RP0=0, select bank0
  3265  0652  1303               	bcf	3,6	;RP1=0, select bank0
  3266  0653  0851               	movf	?___fltol,w
  3267  0654  1683               	bsf	3,5	;RP0=1, select bank1
  3268  0655  1303               	bcf	3,6	;RP1=0, select bank1
  3269  0656  00BB               	movwf	sprintf@val^(0+128)
  3270                           
  3271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3272  0657  2EF9               	goto	l3409
  3273  0658                     l3401:
  3274                           
  3275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3276  0658  0850               	movf	sprintf@c^(0+128),w
  3277  0659  00B1               	movwf	??_sprintf^(0+128)
  3278  065A  3001               	movlw	1
  3279  065B                     u5695:
  3280  065B  1003               	clrc
  3281  065C  0DB1               	rlf	??_sprintf^(0+128),f
  3282  065D  3EFF               	addlw	-1
  3283  065E  1D03               	skipz
  3284  065F  2E5B               	goto	u5695
  3285  0660  1003               	clrc
  3286  0661  0D31               	rlf	??_sprintf^(0+128),w
  3287  0662  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3288  0663  0084               	movwf	4
  3289  0664  160A  118A  2000  120A  118A  	fcall	stringdir
  3290  0669  00F0               	movwf	___lldiv@divisor
  3291  066A  160A  118A  2000  120A  118A  	fcall	stringdir
  3292  066F  00F1               	movwf	___lldiv@divisor+1
  3293  0670  160A  118A  2000  120A  118A  	fcall	stringdir
  3294  0675  00F2               	movwf	___lldiv@divisor+2
  3295  0676  160A  118A  2000  120A  118A  	fcall	stringdir
  3296  067B  00F3               	movwf	___lldiv@divisor+3
  3297  067C  083E               	movf	(sprintf@val+3)^(0+128),w
  3298  067D  00F7               	movwf	___lldiv@dividend+3
  3299  067E  083D               	movf	(sprintf@val+2)^(0+128),w
  3300  067F  00F6               	movwf	___lldiv@dividend+2
  3301  0680  083C               	movf	(sprintf@val+1)^(0+128),w
  3302  0681  00F5               	movwf	___lldiv@dividend+1
  3303  0682  083B               	movf	sprintf@val^(0+128),w
  3304  0683  00F4               	movwf	___lldiv@dividend
  3305  0684  160A  158A  263E  120A  118A  	fcall	___lldiv
  3306  0689  0873               	movf	?___lldiv+3,w
  3307  068A  1683               	bsf	3,5	;RP0=1, select bank1
  3308  068B  1303               	bcf	3,6	;RP1=0, select bank1
  3309  068C  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  3310  068D  0872               	movf	?___lldiv+2,w
  3311  068E  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  3312  068F  0871               	movf	?___lldiv+1,w
  3313  0690  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  3314  0691  0870               	movf	?___lldiv,w
  3315  0692  00C3               	movwf	sprintf@tmpval^(0+128)
  3316  0693                     l3403:
  3317                           
  3318                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3319  0693  3000               	movlw	0
  3320  0694  00F3               	movwf	___llmod@divisor+3
  3321  0695  3000               	movlw	0
  3322  0696  00F2               	movwf	___llmod@divisor+2
  3323  0697  3000               	movlw	0
  3324  0698  00F1               	movwf	___llmod@divisor+1
  3325  0699  300A               	movlw	10
  3326  069A  00F0               	movwf	___llmod@divisor
  3327  069B  0846               	movf	(sprintf@tmpval+3)^(0+128),w
  3328  069C  00F7               	movwf	___llmod@dividend+3
  3329  069D  0845               	movf	(sprintf@tmpval+2)^(0+128),w
  3330  069E  00F6               	movwf	___llmod@dividend+2
  3331  069F  0844               	movf	(sprintf@tmpval+1)^(0+128),w
  3332  06A0  00F5               	movwf	___llmod@dividend+1
  3333  06A1  0843               	movf	sprintf@tmpval^(0+128),w
  3334  06A2  00F4               	movwf	___llmod@dividend
  3335  06A3  160A  158A  2532  120A  118A  	fcall	___llmod
  3336  06A8  0873               	movf	?___llmod+3,w
  3337  06A9  1683               	bsf	3,5	;RP0=1, select bank1
  3338  06AA  1303               	bcf	3,6	;RP1=0, select bank1
  3339  06AB  00C6               	movwf	(sprintf@tmpval+3)^(0+128)
  3340  06AC  0872               	movf	?___llmod+2,w
  3341  06AD  00C5               	movwf	(sprintf@tmpval+2)^(0+128)
  3342  06AE  0871               	movf	?___llmod+1,w
  3343  06AF  00C4               	movwf	(sprintf@tmpval+1)^(0+128)
  3344  06B0  0870               	movf	?___llmod,w
  3345  06B1  00C3               	movwf	sprintf@tmpval^(0+128)
  3346  06B2                     l3405:
  3347                           
  3348                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3349  06B2  0843               	movf	sprintf@tmpval^(0+128),w
  3350  06B3  3E30               	addlw	48
  3351  06B4  00B1               	movwf	??_sprintf^(0+128)
  3352  06B5  084D               	movf	sprintf@sp^(0+128),w
  3353  06B6  0084               	movwf	4
  3354  06B7  0831               	movf	??_sprintf^(0+128),w
  3355  06B8  1383               	bcf	3,7	;select IRP bank0
  3356  06B9  0080               	movwf	0
  3357  06BA  3001               	movlw	1
  3358  06BB  00B1               	movwf	??_sprintf^(0+128)
  3359  06BC  0831               	movf	??_sprintf^(0+128),w
  3360  06BD  07CD               	addwf	sprintf@sp^(0+128),f
  3361  06BE                     l3407:
  3362                           
  3363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3364  06BE  0850               	movf	sprintf@c^(0+128),w
  3365  06BF  00B1               	movwf	??_sprintf^(0+128)
  3366  06C0  3001               	movlw	1
  3367  06C1                     u5705:
  3368  06C1  1003               	clrc
  3369  06C2  0DB1               	rlf	??_sprintf^(0+128),f
  3370  06C3  3EFF               	addlw	-1
  3371  06C4  1D03               	skipz
  3372  06C5  2EC1               	goto	u5705
  3373  06C6  1003               	clrc
  3374  06C7  0D31               	rlf	??_sprintf^(0+128),w
  3375  06C8  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3376  06C9  0084               	movwf	4
  3377  06CA  160A  118A  2000  120A  118A  	fcall	stringdir
  3378  06CF  00F0               	movwf	___llmod@divisor
  3379  06D0  160A  118A  2000  120A  118A  	fcall	stringdir
  3380  06D5  00F1               	movwf	___llmod@divisor+1
  3381  06D6  160A  118A  2000  120A  118A  	fcall	stringdir
  3382  06DB  00F2               	movwf	___llmod@divisor+2
  3383  06DC  160A  118A  2000  120A  118A  	fcall	stringdir
  3384  06E1  00F3               	movwf	___llmod@divisor+3
  3385  06E2  083E               	movf	(sprintf@val+3)^(0+128),w
  3386  06E3  00F7               	movwf	___llmod@dividend+3
  3387  06E4  083D               	movf	(sprintf@val+2)^(0+128),w
  3388  06E5  00F6               	movwf	___llmod@dividend+2
  3389  06E6  083C               	movf	(sprintf@val+1)^(0+128),w
  3390  06E7  00F5               	movwf	___llmod@dividend+1
  3391  06E8  083B               	movf	sprintf@val^(0+128),w
  3392  06E9  00F4               	movwf	___llmod@dividend
  3393  06EA  160A  158A  2532  120A  118A  	fcall	___llmod
  3394  06EF  0873               	movf	?___llmod+3,w
  3395  06F0  1683               	bsf	3,5	;RP0=1, select bank1
  3396  06F1  1303               	bcf	3,6	;RP1=0, select bank1
  3397  06F2  00BE               	movwf	(sprintf@val+3)^(0+128)
  3398  06F3  0872               	movf	?___llmod+2,w
  3399  06F4  00BD               	movwf	(sprintf@val+2)^(0+128)
  3400  06F5  0871               	movf	?___llmod+1,w
  3401  06F6  00BC               	movwf	(sprintf@val+1)^(0+128)
  3402  06F7  0870               	movf	?___llmod,w
  3403  06F8  00BB               	movwf	sprintf@val^(0+128)
  3404  06F9                     l3409:
  3405                           
  3406                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3407  06F9  3001               	movlw	1
  3408  06FA  02D0               	subwf	sprintf@c^(0+128),f
  3409  06FB  0A50               	incf	sprintf@c^(0+128),w
  3410  06FC  1D03               	btfss	3,2
  3411  06FD  2EFF               	goto	u5711
  3412  06FE  2F00               	goto	u5710
  3413  06FF                     u5711:
  3414  06FF  2E58               	goto	l3401
  3415  0700                     u5710:
  3416  0700  2F12               	goto	l3417
  3417  0701                     l3411:
  3418                           
  3419                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3420  0701  3030               	movlw	48
  3421  0702  00B1               	movwf	??_sprintf^(0+128)
  3422  0703  084D               	movf	sprintf@sp^(0+128),w
  3423  0704  0084               	movwf	4
  3424  0705  0831               	movf	??_sprintf^(0+128),w
  3425  0706  1383               	bcf	3,7	;select IRP bank0
  3426  0707  0080               	movwf	0
  3427  0708                     l3413:
  3428  0708  3001               	movlw	1
  3429  0709  00B1               	movwf	??_sprintf^(0+128)
  3430  070A  0831               	movf	??_sprintf^(0+128),w
  3431  070B  07CD               	addwf	sprintf@sp^(0+128),f
  3432  070C                     l3415:
  3433                           
  3434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3435  070C  30FF               	movlw	255
  3436  070D  07CE               	addwf	sprintf@prec^(0+128),f
  3437  070E  1803               	skipnc
  3438  070F  0ACF               	incf	(sprintf@prec+1)^(0+128),f
  3439  0710  30FF               	movlw	255
  3440  0711  07CF               	addwf	(sprintf@prec+1)^(0+128),f
  3441  0712                     l3417:
  3442                           
  3443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3444  0712  084E               	movf	sprintf@prec^(0+128),w
  3445  0713  044F               	iorwf	(sprintf@prec+1)^(0+128),w
  3446  0714  1D03               	btfss	3,2
  3447  0715  2F17               	goto	u5721
  3448  0716  2F18               	goto	u5720
  3449  0717                     u5721:
  3450  0717  2F01               	goto	l3411
  3451  0718                     u5720:
  3452  0718  2FDC               	goto	l3465
  3453  0719                     l3419:
  3454                           
  3455                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3456  0719  084E               	movf	sprintf@prec^(0+128),w
  3457  071A  044F               	iorwf	(sprintf@prec+1)^(0+128),w
  3458  071B  1D03               	btfss	3,2
  3459  071C  2F1E               	goto	u5731
  3460  071D  2F1F               	goto	u5730
  3461  071E                     u5731:
  3462  071E  2F2D               	goto	l355
  3463  071F                     u5730:
  3464  071F                     l3421:
  3465  071F  083E               	movf	(sprintf@val+3)^(0+128),w
  3466  0720  043D               	iorwf	(sprintf@val+2)^(0+128),w
  3467  0721  043C               	iorwf	(sprintf@val+1)^(0+128),w
  3468  0722  043B               	iorwf	sprintf@val^(0+128),w
  3469  0723  1D03               	skipz
  3470  0724  2F26               	goto	u5741
  3471  0725  2F27               	goto	u5740
  3472  0726                     u5741:
  3473  0726  2F2D               	goto	l355
  3474  0727                     u5740:
  3475  0727                     l3423:
  3476                           
  3477                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3478  0727  3001               	movlw	1
  3479  0728  07CE               	addwf	sprintf@prec^(0+128),f
  3480  0729  1803               	skipnc
  3481  072A  0ACF               	incf	(sprintf@prec+1)^(0+128),f
  3482  072B  3000               	movlw	0
  3483  072C  07CF               	addwf	(sprintf@prec+1)^(0+128),f
  3484  072D                     l355:
  3485                           
  3486                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3487  072D  084F               	movf	(sprintf@prec+1)^(0+128),w
  3488  072E  3A80               	xorlw	128
  3489  072F  3C80               	sublw	128
  3490  0730  1D03               	skipz
  3491  0731  2F34               	goto	u5755
  3492  0732  084E               	movf	sprintf@prec^(0+128),w
  3493  0733  0250               	subwf	sprintf@c^(0+128),w
  3494  0734                     u5755:
  3495  0734  1803               	skipnc
  3496  0735  2F37               	goto	u5751
  3497  0736  2F38               	goto	u5750
  3498  0737                     u5751:
  3499  0737  2F3F               	goto	l3427
  3500  0738                     u5750:
  3501  0738                     l3425:
  3502                           
  3503                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  3504  0738  1683               	bsf	3,5	;RP0=1, select bank1
  3505  0739  1303               	bcf	3,6	;RP1=0, select bank1
  3506  073A  084E               	movf	sprintf@prec^(0+128),w
  3507  073B  00B1               	movwf	??_sprintf^(0+128)
  3508  073C  0831               	movf	??_sprintf^(0+128),w
  3509  073D  00D0               	movwf	sprintf@c^(0+128)
  3510  073E  2F57               	goto	l3431
  3511  073F                     l3427:
  3512  073F  1683               	bsf	3,5	;RP0=1, select bank1
  3513  0740  1303               	bcf	3,6	;RP1=0, select bank1
  3514  0741  084F               	movf	(sprintf@prec+1)^(0+128),w
  3515  0742  3A80               	xorlw	128
  3516  0743  00B1               	movwf	??_sprintf^(0+128)
  3517  0744  3080               	movlw	128
  3518  0745  0231               	subwf	??_sprintf^(0+128),w
  3519  0746  1D03               	skipz
  3520  0747  2F4A               	goto	u5765
  3521  0748  0850               	movf	sprintf@c^(0+128),w
  3522  0749  024E               	subwf	sprintf@prec^(0+128),w
  3523  074A                     u5765:
  3524  074A  1803               	skipnc
  3525  074B  2F4D               	goto	u5761
  3526  074C  2F4E               	goto	u5760
  3527  074D                     u5761:
  3528  074D  2F57               	goto	l3431
  3529  074E                     u5760:
  3530  074E                     l3429:
  3531                           
  3532                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3533  074E  1683               	bsf	3,5	;RP0=1, select bank1
  3534  074F  1303               	bcf	3,6	;RP1=0, select bank1
  3535  0750  0850               	movf	sprintf@c^(0+128),w
  3536  0751  00B1               	movwf	??_sprintf^(0+128)
  3537  0752  01B2               	clrf	(??_sprintf^(0+128)+1)
  3538  0753  0831               	movf	??_sprintf^(0+128),w
  3539  0754  00CE               	movwf	sprintf@prec^(0+128)
  3540  0755  0832               	movf	(??_sprintf+1)^(0+128),w
  3541  0756  00CF               	movwf	(sprintf@prec+1)^(0+128)
  3542  0757                     l3431:
  3543                           
  3544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3545  0757  1683               	bsf	3,5	;RP0=1, select bank1
  3546  0758  1303               	bcf	3,6	;RP1=0, select bank1
  3547  0759  0841               	movf	sprintf@width^(0+128),w
  3548  075A  0442               	iorwf	(sprintf@width+1)^(0+128),w
  3549  075B  1903               	btfsc	3,2
  3550  075C  2F5E               	goto	u5771
  3551  075D  2F5F               	goto	u5770
  3552  075E                     u5771:
  3553  075E  2F71               	goto	l3437
  3554  075F                     u5770:
  3555  075F                     l3433:
  3556  075F  3003               	movlw	3
  3557  0760  053F               	andwf	sprintf@flag^(0+128),w
  3558  0761  00B1               	movwf	??_sprintf^(0+128)
  3559  0762  3000               	movlw	0
  3560  0763  0540               	andwf	(sprintf@flag+1)^(0+128),w
  3561  0764  00B2               	movwf	(??_sprintf+1)^(0+128)
  3562  0765  0831               	movf	??_sprintf^(0+128),w
  3563  0766  0432               	iorwf	(??_sprintf^(0+128)+1),w
  3564  0767  1903               	btfsc	3,2
  3565  0768  2F6A               	goto	u5781
  3566  0769  2F6B               	goto	u5780
  3567  076A                     u5781:
  3568  076A  2F71               	goto	l3437
  3569  076B                     u5780:
  3570  076B                     l3435:
  3571                           
  3572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3573  076B  30FF               	movlw	255
  3574  076C  07C1               	addwf	sprintf@width^(0+128),f
  3575  076D  1803               	skipnc
  3576  076E  0AC2               	incf	(sprintf@width+1)^(0+128),f
  3577  076F  30FF               	movlw	255
  3578  0770  07C2               	addwf	(sprintf@width+1)^(0+128),f
  3579  0771                     l3437:
  3580                           
  3581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  3582  0771  1F40               	btfss	(sprintf@flag+1)^(0+128),6
  3583  0772  2F74               	goto	u5791
  3584  0773  2F75               	goto	u5790
  3585  0774                     u5791:
  3586  0774  2F90               	goto	l3445
  3587  0775                     u5790:
  3588  0775                     l3439:
  3589                           
  3590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  3591  0775  084F               	movf	(sprintf@prec+1)^(0+128),w
  3592  0776  3A80               	xorlw	128
  3593  0777  00B1               	movwf	??_sprintf^(0+128)
  3594  0778  0842               	movf	(sprintf@width+1)^(0+128),w
  3595  0779  3A80               	xorlw	128
  3596  077A  0231               	subwf	??_sprintf^(0+128),w
  3597  077B  1D03               	skipz
  3598  077C  2F7F               	goto	u5805
  3599  077D  0841               	movf	sprintf@width^(0+128),w
  3600  077E  024E               	subwf	sprintf@prec^(0+128),w
  3601  077F                     u5805:
  3602  077F  1803               	skipnc
  3603  0780  2F82               	goto	u5801
  3604  0781  2F83               	goto	u5800
  3605  0782                     u5801:
  3606  0782  2F8C               	goto	l3443
  3607  0783                     u5800:
  3608  0783                     l3441:
  3609                           
  3610                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  3611  0783  1683               	bsf	3,5	;RP0=1, select bank1
  3612  0784  1303               	bcf	3,6	;RP1=0, select bank1
  3613  0785  084E               	movf	sprintf@prec^(0+128),w
  3614  0786  02C1               	subwf	sprintf@width^(0+128),f
  3615  0787  084F               	movf	(sprintf@prec+1)^(0+128),w
  3616  0788  1C03               	skipc
  3617  0789  03C2               	decf	(sprintf@width+1)^(0+128),f
  3618  078A  02C2               	subwf	(sprintf@width+1)^(0+128),f
  3619  078B  2F90               	goto	l3445
  3620  078C                     l3443:
  3621                           
  3622                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  3623  078C  1683               	bsf	3,5	;RP0=1, select bank1
  3624  078D  1303               	bcf	3,6	;RP1=0, select bank1
  3625  078E  01C1               	clrf	sprintf@width^(0+128)
  3626  078F  01C2               	clrf	(sprintf@width+1)^(0+128)
  3627  0790                     l3445:
  3628                           
  3629                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3630  0790  0842               	movf	(sprintf@width+1)^(0+128),w
  3631  0791  3A80               	xorlw	128
  3632  0792  3C80               	sublw	128
  3633  0793  1D03               	skipz
  3634  0794  2F97               	goto	u5815
  3635  0795  0841               	movf	sprintf@width^(0+128),w
  3636  0796  0250               	subwf	sprintf@c^(0+128),w
  3637  0797                     u5815:
  3638  0797  1803               	skipnc
  3639  0798  2F9A               	goto	u5811
  3640  0799  2F9B               	goto	u5810
  3641  079A                     u5811:
  3642  079A  2FA7               	goto	l3449
  3643  079B                     u5810:
  3644  079B                     l3447:
  3645                           
  3646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3647  079B  1683               	bsf	3,5	;RP0=1, select bank1
  3648  079C  1303               	bcf	3,6	;RP1=0, select bank1
  3649  079D  0850               	movf	sprintf@c^(0+128),w
  3650  079E  00B1               	movwf	??_sprintf^(0+128)
  3651  079F  01B2               	clrf	(??_sprintf^(0+128)+1)
  3652  07A0  0831               	movf	??_sprintf^(0+128),w
  3653  07A1  02C1               	subwf	sprintf@width^(0+128),f
  3654  07A2  0832               	movf	(??_sprintf+1)^(0+128),w
  3655  07A3  1C03               	skipc
  3656  07A4  03C2               	decf	(sprintf@width+1)^(0+128),f
  3657  07A5  02C2               	subwf	(sprintf@width+1)^(0+128),f
  3658  07A6  2FAB               	goto	l3451
  3659  07A7                     l3449:
  3660                           
  3661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3662  07A7  1683               	bsf	3,5	;RP0=1, select bank1
  3663  07A8  1303               	bcf	3,6	;RP1=0, select bank1
  3664  07A9  01C1               	clrf	sprintf@width^(0+128)
  3665  07AA  01C2               	clrf	(sprintf@width+1)^(0+128)
  3666  07AB                     l3451:
  3667                           
  3668                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3669  07AB  0841               	movf	sprintf@width^(0+128),w
  3670  07AC  0442               	iorwf	(sprintf@width+1)^(0+128),w
  3671  07AD  1903               	btfsc	3,2
  3672  07AE  2FB0               	goto	u5821
  3673  07AF  2FB1               	goto	u5820
  3674  07B0                     u5821:
  3675  07B0  2FC8               	goto	l3459
  3676  07B1                     u5820:
  3677  07B1                     l3453:
  3678                           
  3679                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  3680  07B1  3020               	movlw	32
  3681  07B2  00B1               	movwf	??_sprintf^(0+128)
  3682  07B3  084D               	movf	sprintf@sp^(0+128),w
  3683  07B4  0084               	movwf	4
  3684  07B5  0831               	movf	??_sprintf^(0+128),w
  3685  07B6  1383               	bcf	3,7	;select IRP bank0
  3686  07B7  0080               	movwf	0
  3687  07B8                     l3455:
  3688  07B8  3001               	movlw	1
  3689  07B9  00B1               	movwf	??_sprintf^(0+128)
  3690  07BA  0831               	movf	??_sprintf^(0+128),w
  3691  07BB  07CD               	addwf	sprintf@sp^(0+128),f
  3692  07BC                     l3457:
  3693  07BC  30FF               	movlw	255
  3694  07BD  07C1               	addwf	sprintf@width^(0+128),f
  3695  07BE  1803               	skipnc
  3696  07BF  0AC2               	incf	(sprintf@width+1)^(0+128),f
  3697  07C0  30FF               	movlw	255
  3698  07C1  07C2               	addwf	(sprintf@width+1)^(0+128),f
  3699  07C2  0841               	movf	sprintf@width^(0+128),w
  3700  07C3  0442               	iorwf	(sprintf@width+1)^(0+128),w
  3701  07C4  1D03               	btfss	3,2
  3702  07C5  2FC7               	goto	u5831
  3703  07C6  2FC8               	goto	u5830
  3704  07C7                     u5831:
  3705  07C7  2FB1               	goto	l3453
  3706  07C8                     u5830:
  3707  07C8                     l3459:
  3708                           
  3709                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  3710  07C8  3003               	movlw	3
  3711  07C9  053F               	andwf	sprintf@flag^(0+128),w
  3712  07CA  00B1               	movwf	??_sprintf^(0+128)
  3713  07CB  3000               	movlw	0
  3714  07CC  0540               	andwf	(sprintf@flag+1)^(0+128),w
  3715  07CD  00B2               	movwf	(??_sprintf+1)^(0+128)
  3716  07CE  0831               	movf	??_sprintf^(0+128),w
  3717  07CF  0432               	iorwf	(??_sprintf^(0+128)+1),w
  3718  07D0  1903               	btfsc	3,2
  3719  07D1  2FD3               	goto	u5841
  3720  07D2  2FD4               	goto	u5840
  3721  07D3                     u5841:
  3722  07D3  2FDC               	goto	l3465
  3723  07D4                     u5840:
  3724  07D4                     l3461:
  3725                           
  3726                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3727  07D4  302D               	movlw	45
  3728  07D5  00B1               	movwf	??_sprintf^(0+128)
  3729  07D6  084D               	movf	sprintf@sp^(0+128),w
  3730  07D7  0084               	movwf	4
  3731  07D8  0831               	movf	??_sprintf^(0+128),w
  3732  07D9  1383               	bcf	3,7	;select IRP bank0
  3733  07DA  0080               	movwf	0
  3734  07DB  288D               	goto	l3221
  3735  07DC                     l3465:
  3736                           
  3737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3738  07DC  3001               	movlw	1
  3739  07DD  07AC               	addwf	sprintf@f^(0+128),f
  3740  07DE  30FF               	movlw	-1
  3741  07DF  072C               	addwf	sprintf@f^(0+128),w
  3742  07E0  0084               	movwf	4
  3743  07E1  160A  118A  2000  120A  118A  	fcall	stringdir
  3744  07E6  00B1               	movwf	??_sprintf^(0+128)
  3745  07E7  0831               	movf	??_sprintf^(0+128),w
  3746  07E8  00D0               	movwf	sprintf@c^(0+128)
  3747  07E9  0850               	movf	sprintf@c^(0+128),w
  3748  07EA  1D03               	btfss	3,2
  3749  07EB  2FED               	goto	u5851
  3750  07EC  2FEE               	goto	u5850
  3751  07ED                     u5851:
  3752  07ED  2880               	goto	l3217
  3753  07EE                     u5850:
  3754  07EE                     l3467:
  3755                           
  3756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3757  07EE  084D               	movf	sprintf@sp^(0+128),w
  3758  07EF  0084               	movwf	4
  3759  07F0  1383               	bcf	3,7	;select IRP bank0
  3760  07F1  0180               	clrf	0
  3761  07F2                     l370:
  3762  07F2  0008               	return
  3763  07F3                     __end_of_sprintf:
  3764                           
  3765                           	psect	text3
  3766  0940                     __ptext3:	
  3767 ;; *************** function _scale *****************
  3768 ;; Defined at:
  3769 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3770 ;; Parameters:    Size  Location     Type
  3771 ;;  scl             1    wreg     char 
  3772 ;; Auto vars:     Size  Location     Type
  3773 ;;  scl             1   48[BANK0 ] char 
  3774 ;; Return value:  Size  Location     Type
  3775 ;;                  4   30[BANK0 ] char 
  3776 ;; Registers used:
  3777 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3778 ;; Tracked objects:
  3779 ;;		On entry : 0/0
  3780 ;;		On exit  : 0/0
  3781 ;;		Unchanged: 0/0
  3782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3783 ;;      Params:         0       4       0       0       0
  3784 ;;      Locals:         0       5       0       0       0
  3785 ;;      Temps:          0      10       0       0       0
  3786 ;;      Totals:         0      19       0       0       0
  3787 ;;Total ram usage:       19 bytes
  3788 ;; Hardware stack levels used:    1
  3789 ;; Hardware stack levels required when called:    2
  3790 ;; This function calls:
  3791 ;;		___awdiv
  3792 ;;		___awmod
  3793 ;;		___flmul
  3794 ;; This function is called by:
  3795 ;;		_sprintf
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           
  3800                           ;psect for function _scale
  3801  0940                     _scale:
  3802                           
  3803                           ;incstack = 0
  3804                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3805                           ;scale@scl stored from wreg
  3806  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3807  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3808  0942  00D0               	movwf	scale@scl
  3809  0943                     l2885:
  3810                           
  3811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3812  0943  1FD0               	btfss	scale@scl,7
  3813  0944  2946               	goto	u4561
  3814  0945  2947               	goto	u4560
  3815  0946                     u4561:
  3816  0946  2AF4               	goto	l2907
  3817  0947                     u4560:
  3818  0947                     l2887:
  3819                           
  3820                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3821  0947  09D0               	comf	scale@scl,f
  3822  0948  0AD0               	incf	scale@scl,f
  3823  0949                     l2889:
  3824                           
  3825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3826  0949  0850               	movf	scale@scl,w
  3827  094A  3A80               	xorlw	128
  3828  094B  3E12               	addlw	-238
  3829  094C  1C03               	skipc
  3830  094D  294F               	goto	u4571
  3831  094E  2950               	goto	u4570
  3832  094F                     u4571:
  3833  094F  2A38               	goto	l2897
  3834  0950                     u4570:
  3835  0950                     l2891:
  3836                           
  3837                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3838  0950  300A               	movlw	10
  3839  0951  00F7               	movwf	___awdiv@divisor
  3840  0952  3000               	movlw	0
  3841  0953  00F8               	movwf	___awdiv@divisor+1
  3842  0954  0850               	movf	scale@scl,w
  3843  0955  00F2               	movwf	___awmod@dividend
  3844  0956  01F3               	clrf	___awmod@dividend+1
  3845  0957  1BF2               	btfsc	___awmod@dividend,7
  3846  0958  03F3               	decf	___awmod@dividend+1,f
  3847  0959  3064               	movlw	100
  3848  095A  00F0               	movwf	___awmod@divisor
  3849  095B  3000               	movlw	0
  3850  095C  00F1               	movwf	___awmod@divisor+1
  3851  095D  160A  158A  2586  120A  158A  	fcall	___awmod
  3852  0962  0871               	movf	?___awmod+1,w
  3853  0963  00FA               	movwf	___awdiv@dividend+1
  3854  0964  0870               	movf	?___awmod,w
  3855  0965  00F9               	movwf	___awdiv@dividend
  3856  0966  160A  158A  270D  120A  158A  	fcall	___awdiv
  3857  096B  0877               	movf	?___awdiv,w
  3858  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3859  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3860  096E  00C2               	movwf	??_scale
  3861  096F  3001               	movlw	1
  3862  0970                     u4585:
  3863  0970  1003               	clrc
  3864  0971  0DC2               	rlf	??_scale,f
  3865  0972  3EFF               	addlw	-1
  3866  0973  1D03               	skipz
  3867  0974  2970               	goto	u4585
  3868  0975  1003               	clrc
  3869  0976  0D42               	rlf	??_scale,w
  3870  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3871  0978  0084               	movwf	4
  3872  0979  160A  118A  2000  120A  158A  	fcall	stringdir
  3873  097E  00C3               	movwf	??_scale+1
  3874  097F  160A  118A  2000  120A  158A  	fcall	stringdir
  3875  0984  00C4               	movwf	??_scale+2
  3876  0985  160A  118A  2000  120A  158A  	fcall	stringdir
  3877  098A  00C5               	movwf	??_scale+3
  3878  098B  160A  118A  2000  120A  158A  	fcall	stringdir
  3879  0990  00C6               	movwf	??_scale+4
  3880  0991  0846               	movf	??_scale+4,w
  3881  0992  00A7               	movwf	___flmul@b+3
  3882  0993  0845               	movf	??_scale+3,w
  3883  0994  00A6               	movwf	___flmul@b+2
  3884  0995  0844               	movf	??_scale+2,w
  3885  0996  00A5               	movwf	___flmul@b+1
  3886  0997  0843               	movf	??_scale+1,w
  3887  0998  00A4               	movwf	___flmul@b
  3888  0999  3064               	movlw	100
  3889  099A  00F7               	movwf	___awdiv@divisor
  3890  099B  3000               	movlw	0
  3891  099C  00F8               	movwf	___awdiv@divisor+1
  3892  099D  0850               	movf	scale@scl,w
  3893  099E  00F9               	movwf	___awdiv@dividend
  3894  099F  01FA               	clrf	___awdiv@dividend+1
  3895  09A0  1BF9               	btfsc	___awdiv@dividend,7
  3896  09A1  03FA               	decf	___awdiv@dividend+1,f
  3897  09A2  160A  158A  270D  120A  158A  	fcall	___awdiv
  3898  09A7  0877               	movf	?___awdiv,w
  3899  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  3900  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  3901  09AA  00C7               	movwf	??_scale+5
  3902  09AB  3001               	movlw	1
  3903  09AC                     u4595:
  3904  09AC  1003               	clrc
  3905  09AD  0DC7               	rlf	??_scale+5,f
  3906  09AE  3EFF               	addlw	-1
  3907  09AF  1D03               	skipz
  3908  09B0  29AC               	goto	u4595
  3909  09B1  1003               	clrc
  3910  09B2  0D47               	rlf	??_scale+5,w
  3911  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3912  09B4  0084               	movwf	4
  3913  09B5  160A  118A  2000  120A  158A  	fcall	stringdir
  3914  09BA  00C8               	movwf	??_scale+6
  3915  09BB  160A  118A  2000  120A  158A  	fcall	stringdir
  3916  09C0  00C9               	movwf	??_scale+7
  3917  09C1  160A  118A  2000  120A  158A  	fcall	stringdir
  3918  09C6  00CA               	movwf	??_scale+8
  3919  09C7  160A  118A  2000  120A  158A  	fcall	stringdir
  3920  09CC  00CB               	movwf	??_scale+9
  3921  09CD  084B               	movf	??_scale+9,w
  3922  09CE  00AB               	movwf	___flmul@a+3
  3923  09CF  084A               	movf	??_scale+8,w
  3924  09D0  00AA               	movwf	___flmul@a+2
  3925  09D1  0849               	movf	??_scale+7,w
  3926  09D2  00A9               	movwf	___flmul@a+1
  3927  09D3  0848               	movf	??_scale+6,w
  3928  09D4  00A8               	movwf	___flmul@a
  3929  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  3930  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  3931  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  3932  09DC  0827               	movf	?___flmul+3,w
  3933  09DD  00CF               	movwf	_scale$1043+3
  3934  09DE  0826               	movf	?___flmul+2,w
  3935  09DF  00CE               	movwf	_scale$1043+2
  3936  09E0  0825               	movf	?___flmul+1,w
  3937  09E1  00CD               	movwf	_scale$1043+1
  3938  09E2  0824               	movf	?___flmul,w
  3939  09E3  00CC               	movwf	_scale$1043
  3940                           
  3941                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3942  09E4  300A               	movlw	10
  3943  09E5  00F0               	movwf	___awmod@divisor
  3944  09E6  3000               	movlw	0
  3945  09E7  00F1               	movwf	___awmod@divisor+1
  3946  09E8  0850               	movf	scale@scl,w
  3947  09E9  00F2               	movwf	___awmod@dividend
  3948  09EA  01F3               	clrf	___awmod@dividend+1
  3949  09EB  1BF2               	btfsc	___awmod@dividend,7
  3950  09EC  03F3               	decf	___awmod@dividend+1,f
  3951  09ED  160A  158A  2586  120A  158A  	fcall	___awmod
  3952  09F2  0870               	movf	?___awmod,w
  3953  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3954  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3955  09F5  00C2               	movwf	??_scale
  3956  09F6  3001               	movlw	1
  3957  09F7                     u4605:
  3958  09F7  1003               	clrc
  3959  09F8  0DC2               	rlf	??_scale,f
  3960  09F9  3EFF               	addlw	-1
  3961  09FA  1D03               	skipz
  3962  09FB  29F7               	goto	u4605
  3963  09FC  1003               	clrc
  3964  09FD  0D42               	rlf	??_scale,w
  3965  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3966  09FF  0084               	movwf	4
  3967  0A00  160A  118A  2000  120A  158A  	fcall	stringdir
  3968  0A05  00C3               	movwf	??_scale+1
  3969  0A06  160A  118A  2000  120A  158A  	fcall	stringdir
  3970  0A0B  00C4               	movwf	??_scale+2
  3971  0A0C  160A  118A  2000  120A  158A  	fcall	stringdir
  3972  0A11  00C5               	movwf	??_scale+3
  3973  0A12  160A  118A  2000  120A  158A  	fcall	stringdir
  3974  0A17  00C6               	movwf	??_scale+4
  3975  0A18  0846               	movf	??_scale+4,w
  3976  0A19  00A7               	movwf	___flmul@b+3
  3977  0A1A  0845               	movf	??_scale+3,w
  3978  0A1B  00A6               	movwf	___flmul@b+2
  3979  0A1C  0844               	movf	??_scale+2,w
  3980  0A1D  00A5               	movwf	___flmul@b+1
  3981  0A1E  0843               	movf	??_scale+1,w
  3982  0A1F  00A4               	movwf	___flmul@b
  3983  0A20  084F               	movf	_scale$1043+3,w
  3984  0A21  00AB               	movwf	___flmul@a+3
  3985  0A22  084E               	movf	_scale$1043+2,w
  3986  0A23  00AA               	movwf	___flmul@a+2
  3987  0A24  084D               	movf	_scale$1043+1,w
  3988  0A25  00A9               	movwf	___flmul@a+1
  3989  0A26  084C               	movf	_scale$1043,w
  3990  0A27  00A8               	movwf	___flmul@a
  3991  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  3992  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  3993  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  3994  0A2F  0827               	movf	?___flmul+3,w
  3995  0A30  00C1               	movwf	?_scale+3
  3996  0A31  0826               	movf	?___flmul+2,w
  3997  0A32  00C0               	movwf	?_scale+2
  3998  0A33  0825               	movf	?___flmul+1,w
  3999  0A34  00BF               	movwf	?_scale+1
  4000  0A35  0824               	movf	?___flmul,w
  4001  0A36  00BE               	movwf	?_scale
  4002  0A37  2C9E               	goto	l287
  4003  0A38                     l2897:
  4004  0A38  0850               	movf	scale@scl,w
  4005  0A39  3A80               	xorlw	128
  4006  0A3A  3E75               	addlw	-139
  4007  0A3B  1C03               	skipc
  4008  0A3C  2A3E               	goto	u4611
  4009  0A3D  2A3F               	goto	u4610
  4010  0A3E                     u4611:
  4011  0A3E  2AC7               	goto	l2903
  4012  0A3F                     u4610:
  4013  0A3F                     l2899:
  4014                           
  4015                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4016  0A3F  300A               	movlw	10
  4017  0A40  00F0               	movwf	___awmod@divisor
  4018  0A41  3000               	movlw	0
  4019  0A42  00F1               	movwf	___awmod@divisor+1
  4020  0A43  0850               	movf	scale@scl,w
  4021  0A44  00F2               	movwf	___awmod@dividend
  4022  0A45  01F3               	clrf	___awmod@dividend+1
  4023  0A46  1BF2               	btfsc	___awmod@dividend,7
  4024  0A47  03F3               	decf	___awmod@dividend+1,f
  4025  0A48  160A  158A  2586  120A  158A  	fcall	___awmod
  4026  0A4D  0870               	movf	?___awmod,w
  4027  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  4028  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  4029  0A50  00C2               	movwf	??_scale
  4030  0A51  3001               	movlw	1
  4031  0A52                     u4625:
  4032  0A52  1003               	clrc
  4033  0A53  0DC2               	rlf	??_scale,f
  4034  0A54  3EFF               	addlw	-1
  4035  0A55  1D03               	skipz
  4036  0A56  2A52               	goto	u4625
  4037  0A57  1003               	clrc
  4038  0A58  0D42               	rlf	??_scale,w
  4039  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4040  0A5A  0084               	movwf	4
  4041  0A5B  160A  118A  2000  120A  158A  	fcall	stringdir
  4042  0A60  00C3               	movwf	??_scale+1
  4043  0A61  160A  118A  2000  120A  158A  	fcall	stringdir
  4044  0A66  00C4               	movwf	??_scale+2
  4045  0A67  160A  118A  2000  120A  158A  	fcall	stringdir
  4046  0A6C  00C5               	movwf	??_scale+3
  4047  0A6D  160A  118A  2000  120A  158A  	fcall	stringdir
  4048  0A72  00C6               	movwf	??_scale+4
  4049  0A73  0846               	movf	??_scale+4,w
  4050  0A74  00A7               	movwf	___flmul@b+3
  4051  0A75  0845               	movf	??_scale+3,w
  4052  0A76  00A6               	movwf	___flmul@b+2
  4053  0A77  0844               	movf	??_scale+2,w
  4054  0A78  00A5               	movwf	___flmul@b+1
  4055  0A79  0843               	movf	??_scale+1,w
  4056  0A7A  00A4               	movwf	___flmul@b
  4057  0A7B  300A               	movlw	10
  4058  0A7C  00F7               	movwf	___awdiv@divisor
  4059  0A7D  3000               	movlw	0
  4060  0A7E  00F8               	movwf	___awdiv@divisor+1
  4061  0A7F  0850               	movf	scale@scl,w
  4062  0A80  00F9               	movwf	___awdiv@dividend
  4063  0A81  01FA               	clrf	___awdiv@dividend+1
  4064  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4065  0A83  03FA               	decf	___awdiv@dividend+1,f
  4066  0A84  160A  158A  270D  120A  158A  	fcall	___awdiv
  4067  0A89  0877               	movf	?___awdiv,w
  4068  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4069  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4070  0A8C  00C7               	movwf	??_scale+5
  4071  0A8D  3001               	movlw	1
  4072  0A8E                     u4635:
  4073  0A8E  1003               	clrc
  4074  0A8F  0DC7               	rlf	??_scale+5,f
  4075  0A90  3EFF               	addlw	-1
  4076  0A91  1D03               	skipz
  4077  0A92  2A8E               	goto	u4635
  4078  0A93  1003               	clrc
  4079  0A94  0D47               	rlf	??_scale+5,w
  4080  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4081  0A96  0084               	movwf	4
  4082  0A97  160A  118A  2000  120A  158A  	fcall	stringdir
  4083  0A9C  00C8               	movwf	??_scale+6
  4084  0A9D  160A  118A  2000  120A  158A  	fcall	stringdir
  4085  0AA2  00C9               	movwf	??_scale+7
  4086  0AA3  160A  118A  2000  120A  158A  	fcall	stringdir
  4087  0AA8  00CA               	movwf	??_scale+8
  4088  0AA9  160A  118A  2000  120A  158A  	fcall	stringdir
  4089  0AAE  00CB               	movwf	??_scale+9
  4090  0AAF  084B               	movf	??_scale+9,w
  4091  0AB0  00AB               	movwf	___flmul@a+3
  4092  0AB1  084A               	movf	??_scale+8,w
  4093  0AB2  00AA               	movwf	___flmul@a+2
  4094  0AB3  0849               	movf	??_scale+7,w
  4095  0AB4  00A9               	movwf	___flmul@a+1
  4096  0AB5  0848               	movf	??_scale+6,w
  4097  0AB6  00A8               	movwf	___flmul@a
  4098  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  4099  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4100  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4101  0ABE  0827               	movf	?___flmul+3,w
  4102  0ABF  00C1               	movwf	?_scale+3
  4103  0AC0  0826               	movf	?___flmul+2,w
  4104  0AC1  00C0               	movwf	?_scale+2
  4105  0AC2  0825               	movf	?___flmul+1,w
  4106  0AC3  00BF               	movwf	?_scale+1
  4107  0AC4  0824               	movf	?___flmul,w
  4108  0AC5  00BE               	movwf	?_scale
  4109  0AC6  2C9E               	goto	l287
  4110  0AC7                     l2903:
  4111                           
  4112                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4113  0AC7  0850               	movf	scale@scl,w
  4114  0AC8  00C2               	movwf	??_scale
  4115  0AC9  3001               	movlw	1
  4116  0ACA                     u4645:
  4117  0ACA  1003               	clrc
  4118  0ACB  0DC2               	rlf	??_scale,f
  4119  0ACC  3EFF               	addlw	-1
  4120  0ACD  1D03               	skipz
  4121  0ACE  2ACA               	goto	u4645
  4122  0ACF  1003               	clrc
  4123  0AD0  0D42               	rlf	??_scale,w
  4124  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4125  0AD2  0084               	movwf	4
  4126  0AD3  160A  118A  2000  120A  158A  	fcall	stringdir
  4127  0AD8  00C3               	movwf	??_scale+1
  4128  0AD9  160A  118A  2000  120A  158A  	fcall	stringdir
  4129  0ADE  00C4               	movwf	??_scale+2
  4130  0ADF  160A  118A  2000  120A  158A  	fcall	stringdir
  4131  0AE4  00C5               	movwf	??_scale+3
  4132  0AE5  160A  118A  2000  120A  158A  	fcall	stringdir
  4133  0AEA  00C6               	movwf	??_scale+4
  4134  0AEB  0846               	movf	??_scale+4,w
  4135  0AEC  00C1               	movwf	?_scale+3
  4136  0AED  0845               	movf	??_scale+3,w
  4137  0AEE  00C0               	movwf	?_scale+2
  4138  0AEF  0844               	movf	??_scale+2,w
  4139  0AF0  00BF               	movwf	?_scale+1
  4140  0AF1  0843               	movf	??_scale+1,w
  4141  0AF2  00BE               	movwf	?_scale
  4142  0AF3  2C9E               	goto	l287
  4143  0AF4                     l2907:
  4144                           
  4145                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4146  0AF4  0850               	movf	scale@scl,w
  4147  0AF5  3A80               	xorlw	128
  4148  0AF6  3E12               	addlw	-238
  4149  0AF7  1C03               	skipc
  4150  0AF8  2AFA               	goto	u4651
  4151  0AF9  2AFB               	goto	u4650
  4152  0AFA                     u4651:
  4153  0AFA  2BE3               	goto	l2915
  4154  0AFB                     u4650:
  4155  0AFB                     l2909:
  4156                           
  4157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4158  0AFB  300A               	movlw	10
  4159  0AFC  00F7               	movwf	___awdiv@divisor
  4160  0AFD  3000               	movlw	0
  4161  0AFE  00F8               	movwf	___awdiv@divisor+1
  4162  0AFF  0850               	movf	scale@scl,w
  4163  0B00  00F2               	movwf	___awmod@dividend
  4164  0B01  01F3               	clrf	___awmod@dividend+1
  4165  0B02  1BF2               	btfsc	___awmod@dividend,7
  4166  0B03  03F3               	decf	___awmod@dividend+1,f
  4167  0B04  3064               	movlw	100
  4168  0B05  00F0               	movwf	___awmod@divisor
  4169  0B06  3000               	movlw	0
  4170  0B07  00F1               	movwf	___awmod@divisor+1
  4171  0B08  160A  158A  2586  120A  158A  	fcall	___awmod
  4172  0B0D  0871               	movf	?___awmod+1,w
  4173  0B0E  00FA               	movwf	___awdiv@dividend+1
  4174  0B0F  0870               	movf	?___awmod,w
  4175  0B10  00F9               	movwf	___awdiv@dividend
  4176  0B11  160A  158A  270D  120A  158A  	fcall	___awdiv
  4177  0B16  0877               	movf	?___awdiv,w
  4178  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  4179  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4180  0B19  00C2               	movwf	??_scale
  4181  0B1A  3001               	movlw	1
  4182  0B1B                     u4665:
  4183  0B1B  1003               	clrc
  4184  0B1C  0DC2               	rlf	??_scale,f
  4185  0B1D  3EFF               	addlw	-1
  4186  0B1E  1D03               	skipz
  4187  0B1F  2B1B               	goto	u4665
  4188  0B20  1003               	clrc
  4189  0B21  0D42               	rlf	??_scale,w
  4190  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4191  0B23  0084               	movwf	4
  4192  0B24  160A  118A  2000  120A  158A  	fcall	stringdir
  4193  0B29  00C3               	movwf	??_scale+1
  4194  0B2A  160A  118A  2000  120A  158A  	fcall	stringdir
  4195  0B2F  00C4               	movwf	??_scale+2
  4196  0B30  160A  118A  2000  120A  158A  	fcall	stringdir
  4197  0B35  00C5               	movwf	??_scale+3
  4198  0B36  160A  118A  2000  120A  158A  	fcall	stringdir
  4199  0B3B  00C6               	movwf	??_scale+4
  4200  0B3C  0846               	movf	??_scale+4,w
  4201  0B3D  00A7               	movwf	___flmul@b+3
  4202  0B3E  0845               	movf	??_scale+3,w
  4203  0B3F  00A6               	movwf	___flmul@b+2
  4204  0B40  0844               	movf	??_scale+2,w
  4205  0B41  00A5               	movwf	___flmul@b+1
  4206  0B42  0843               	movf	??_scale+1,w
  4207  0B43  00A4               	movwf	___flmul@b
  4208  0B44  3064               	movlw	100
  4209  0B45  00F7               	movwf	___awdiv@divisor
  4210  0B46  3000               	movlw	0
  4211  0B47  00F8               	movwf	___awdiv@divisor+1
  4212  0B48  0850               	movf	scale@scl,w
  4213  0B49  00F9               	movwf	___awdiv@dividend
  4214  0B4A  01FA               	clrf	___awdiv@dividend+1
  4215  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4216  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4217  0B4D  160A  158A  270D  120A  158A  	fcall	___awdiv
  4218  0B52  0877               	movf	?___awdiv,w
  4219  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4220  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4221  0B55  00C7               	movwf	??_scale+5
  4222  0B56  3001               	movlw	1
  4223  0B57                     u4675:
  4224  0B57  1003               	clrc
  4225  0B58  0DC7               	rlf	??_scale+5,f
  4226  0B59  3EFF               	addlw	-1
  4227  0B5A  1D03               	skipz
  4228  0B5B  2B57               	goto	u4675
  4229  0B5C  1003               	clrc
  4230  0B5D  0D47               	rlf	??_scale+5,w
  4231  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4232  0B5F  0084               	movwf	4
  4233  0B60  160A  118A  2000  120A  158A  	fcall	stringdir
  4234  0B65  00C8               	movwf	??_scale+6
  4235  0B66  160A  118A  2000  120A  158A  	fcall	stringdir
  4236  0B6B  00C9               	movwf	??_scale+7
  4237  0B6C  160A  118A  2000  120A  158A  	fcall	stringdir
  4238  0B71  00CA               	movwf	??_scale+8
  4239  0B72  160A  118A  2000  120A  158A  	fcall	stringdir
  4240  0B77  00CB               	movwf	??_scale+9
  4241  0B78  084B               	movf	??_scale+9,w
  4242  0B79  00AB               	movwf	___flmul@a+3
  4243  0B7A  084A               	movf	??_scale+8,w
  4244  0B7B  00AA               	movwf	___flmul@a+2
  4245  0B7C  0849               	movf	??_scale+7,w
  4246  0B7D  00A9               	movwf	___flmul@a+1
  4247  0B7E  0848               	movf	??_scale+6,w
  4248  0B7F  00A8               	movwf	___flmul@a
  4249  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4250  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4251  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4252  0B87  0827               	movf	?___flmul+3,w
  4253  0B88  00CF               	movwf	_scale$1043+3
  4254  0B89  0826               	movf	?___flmul+2,w
  4255  0B8A  00CE               	movwf	_scale$1043+2
  4256  0B8B  0825               	movf	?___flmul+1,w
  4257  0B8C  00CD               	movwf	_scale$1043+1
  4258  0B8D  0824               	movf	?___flmul,w
  4259  0B8E  00CC               	movwf	_scale$1043
  4260                           
  4261                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4262  0B8F  300A               	movlw	10
  4263  0B90  00F0               	movwf	___awmod@divisor
  4264  0B91  3000               	movlw	0
  4265  0B92  00F1               	movwf	___awmod@divisor+1
  4266  0B93  0850               	movf	scale@scl,w
  4267  0B94  00F2               	movwf	___awmod@dividend
  4268  0B95  01F3               	clrf	___awmod@dividend+1
  4269  0B96  1BF2               	btfsc	___awmod@dividend,7
  4270  0B97  03F3               	decf	___awmod@dividend+1,f
  4271  0B98  160A  158A  2586  120A  158A  	fcall	___awmod
  4272  0B9D  0870               	movf	?___awmod,w
  4273  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4274  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4275  0BA0  00C2               	movwf	??_scale
  4276  0BA1  3001               	movlw	1
  4277  0BA2                     u4685:
  4278  0BA2  1003               	clrc
  4279  0BA3  0DC2               	rlf	??_scale,f
  4280  0BA4  3EFF               	addlw	-1
  4281  0BA5  1D03               	skipz
  4282  0BA6  2BA2               	goto	u4685
  4283  0BA7  1003               	clrc
  4284  0BA8  0D42               	rlf	??_scale,w
  4285  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4286  0BAA  0084               	movwf	4
  4287  0BAB  160A  118A  2000  120A  158A  	fcall	stringdir
  4288  0BB0  00C3               	movwf	??_scale+1
  4289  0BB1  160A  118A  2000  120A  158A  	fcall	stringdir
  4290  0BB6  00C4               	movwf	??_scale+2
  4291  0BB7  160A  118A  2000  120A  158A  	fcall	stringdir
  4292  0BBC  00C5               	movwf	??_scale+3
  4293  0BBD  160A  118A  2000  120A  158A  	fcall	stringdir
  4294  0BC2  00C6               	movwf	??_scale+4
  4295  0BC3  0846               	movf	??_scale+4,w
  4296  0BC4  00A7               	movwf	___flmul@b+3
  4297  0BC5  0845               	movf	??_scale+3,w
  4298  0BC6  00A6               	movwf	___flmul@b+2
  4299  0BC7  0844               	movf	??_scale+2,w
  4300  0BC8  00A5               	movwf	___flmul@b+1
  4301  0BC9  0843               	movf	??_scale+1,w
  4302  0BCA  00A4               	movwf	___flmul@b
  4303  0BCB  084F               	movf	_scale$1043+3,w
  4304  0BCC  00AB               	movwf	___flmul@a+3
  4305  0BCD  084E               	movf	_scale$1043+2,w
  4306  0BCE  00AA               	movwf	___flmul@a+2
  4307  0BCF  084D               	movf	_scale$1043+1,w
  4308  0BD0  00A9               	movwf	___flmul@a+1
  4309  0BD1  084C               	movf	_scale$1043,w
  4310  0BD2  00A8               	movwf	___flmul@a
  4311  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4312  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4313  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4314  0BDA  0827               	movf	?___flmul+3,w
  4315  0BDB  00C1               	movwf	?_scale+3
  4316  0BDC  0826               	movf	?___flmul+2,w
  4317  0BDD  00C0               	movwf	?_scale+2
  4318  0BDE  0825               	movf	?___flmul+1,w
  4319  0BDF  00BF               	movwf	?_scale+1
  4320  0BE0  0824               	movf	?___flmul,w
  4321  0BE1  00BE               	movwf	?_scale
  4322  0BE2  2C9E               	goto	l287
  4323  0BE3                     l2915:
  4324  0BE3  0850               	movf	scale@scl,w
  4325  0BE4  3A80               	xorlw	128
  4326  0BE5  3E75               	addlw	-139
  4327  0BE6  1C03               	skipc
  4328  0BE7  2BE9               	goto	u4691
  4329  0BE8  2BEA               	goto	u4690
  4330  0BE9                     u4691:
  4331  0BE9  2C72               	goto	l2921
  4332  0BEA                     u4690:
  4333  0BEA                     l2917:
  4334                           
  4335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4336  0BEA  300A               	movlw	10
  4337  0BEB  00F0               	movwf	___awmod@divisor
  4338  0BEC  3000               	movlw	0
  4339  0BED  00F1               	movwf	___awmod@divisor+1
  4340  0BEE  0850               	movf	scale@scl,w
  4341  0BEF  00F2               	movwf	___awmod@dividend
  4342  0BF0  01F3               	clrf	___awmod@dividend+1
  4343  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4344  0BF2  03F3               	decf	___awmod@dividend+1,f
  4345  0BF3  160A  158A  2586  120A  158A  	fcall	___awmod
  4346  0BF8  0870               	movf	?___awmod,w
  4347  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4348  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4349  0BFB  00C2               	movwf	??_scale
  4350  0BFC  3001               	movlw	1
  4351  0BFD                     u4705:
  4352  0BFD  1003               	clrc
  4353  0BFE  0DC2               	rlf	??_scale,f
  4354  0BFF  3EFF               	addlw	-1
  4355  0C00  1D03               	skipz
  4356  0C01  2BFD               	goto	u4705
  4357  0C02  1003               	clrc
  4358  0C03  0D42               	rlf	??_scale,w
  4359  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4360  0C05  0084               	movwf	4
  4361  0C06  160A  118A  2000  120A  158A  	fcall	stringdir
  4362  0C0B  00C3               	movwf	??_scale+1
  4363  0C0C  160A  118A  2000  120A  158A  	fcall	stringdir
  4364  0C11  00C4               	movwf	??_scale+2
  4365  0C12  160A  118A  2000  120A  158A  	fcall	stringdir
  4366  0C17  00C5               	movwf	??_scale+3
  4367  0C18  160A  118A  2000  120A  158A  	fcall	stringdir
  4368  0C1D  00C6               	movwf	??_scale+4
  4369  0C1E  0846               	movf	??_scale+4,w
  4370  0C1F  00A7               	movwf	___flmul@b+3
  4371  0C20  0845               	movf	??_scale+3,w
  4372  0C21  00A6               	movwf	___flmul@b+2
  4373  0C22  0844               	movf	??_scale+2,w
  4374  0C23  00A5               	movwf	___flmul@b+1
  4375  0C24  0843               	movf	??_scale+1,w
  4376  0C25  00A4               	movwf	___flmul@b
  4377  0C26  300A               	movlw	10
  4378  0C27  00F7               	movwf	___awdiv@divisor
  4379  0C28  3000               	movlw	0
  4380  0C29  00F8               	movwf	___awdiv@divisor+1
  4381  0C2A  0850               	movf	scale@scl,w
  4382  0C2B  00F9               	movwf	___awdiv@dividend
  4383  0C2C  01FA               	clrf	___awdiv@dividend+1
  4384  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4385  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4386  0C2F  160A  158A  270D  120A  158A  	fcall	___awdiv
  4387  0C34  0877               	movf	?___awdiv,w
  4388  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4389  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4390  0C37  00C7               	movwf	??_scale+5
  4391  0C38  3001               	movlw	1
  4392  0C39                     u4715:
  4393  0C39  1003               	clrc
  4394  0C3A  0DC7               	rlf	??_scale+5,f
  4395  0C3B  3EFF               	addlw	-1
  4396  0C3C  1D03               	skipz
  4397  0C3D  2C39               	goto	u4715
  4398  0C3E  1003               	clrc
  4399  0C3F  0D47               	rlf	??_scale+5,w
  4400  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4401  0C41  0084               	movwf	4
  4402  0C42  160A  118A  2000  120A  158A  	fcall	stringdir
  4403  0C47  00C8               	movwf	??_scale+6
  4404  0C48  160A  118A  2000  120A  158A  	fcall	stringdir
  4405  0C4D  00C9               	movwf	??_scale+7
  4406  0C4E  160A  118A  2000  120A  158A  	fcall	stringdir
  4407  0C53  00CA               	movwf	??_scale+8
  4408  0C54  160A  118A  2000  120A  158A  	fcall	stringdir
  4409  0C59  00CB               	movwf	??_scale+9
  4410  0C5A  084B               	movf	??_scale+9,w
  4411  0C5B  00AB               	movwf	___flmul@a+3
  4412  0C5C  084A               	movf	??_scale+8,w
  4413  0C5D  00AA               	movwf	___flmul@a+2
  4414  0C5E  0849               	movf	??_scale+7,w
  4415  0C5F  00A9               	movwf	___flmul@a+1
  4416  0C60  0848               	movf	??_scale+6,w
  4417  0C61  00A8               	movwf	___flmul@a
  4418  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4419  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4420  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4421  0C69  0827               	movf	?___flmul+3,w
  4422  0C6A  00C1               	movwf	?_scale+3
  4423  0C6B  0826               	movf	?___flmul+2,w
  4424  0C6C  00C0               	movwf	?_scale+2
  4425  0C6D  0825               	movf	?___flmul+1,w
  4426  0C6E  00BF               	movwf	?_scale+1
  4427  0C6F  0824               	movf	?___flmul,w
  4428  0C70  00BE               	movwf	?_scale
  4429  0C71  2C9E               	goto	l287
  4430  0C72                     l2921:
  4431                           
  4432                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4433  0C72  0850               	movf	scale@scl,w
  4434  0C73  00C2               	movwf	??_scale
  4435  0C74  3001               	movlw	1
  4436  0C75                     u4725:
  4437  0C75  1003               	clrc
  4438  0C76  0DC2               	rlf	??_scale,f
  4439  0C77  3EFF               	addlw	-1
  4440  0C78  1D03               	skipz
  4441  0C79  2C75               	goto	u4725
  4442  0C7A  1003               	clrc
  4443  0C7B  0D42               	rlf	??_scale,w
  4444  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4445  0C7D  0084               	movwf	4
  4446  0C7E  160A  118A  2000  120A  158A  	fcall	stringdir
  4447  0C83  00C3               	movwf	??_scale+1
  4448  0C84  160A  118A  2000  120A  158A  	fcall	stringdir
  4449  0C89  00C4               	movwf	??_scale+2
  4450  0C8A  160A  118A  2000  120A  158A  	fcall	stringdir
  4451  0C8F  00C5               	movwf	??_scale+3
  4452  0C90  160A  118A  2000  120A  158A  	fcall	stringdir
  4453  0C95  00C6               	movwf	??_scale+4
  4454  0C96  0846               	movf	??_scale+4,w
  4455  0C97  00C1               	movwf	?_scale+3
  4456  0C98  0845               	movf	??_scale+3,w
  4457  0C99  00C0               	movwf	?_scale+2
  4458  0C9A  0844               	movf	??_scale+2,w
  4459  0C9B  00BF               	movwf	?_scale+1
  4460  0C9C  0843               	movf	??_scale+1,w
  4461  0C9D  00BE               	movwf	?_scale
  4462  0C9E                     l287:
  4463  0C9E  0008               	return
  4464  0C9F                     __end_of_scale:
  4465                           
  4466                           	psect	text4
  4467  1D86                     __ptext4:	
  4468 ;; *************** function ___awmod *****************
  4469 ;; Defined at:
  4470 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;  divisor         2    0[COMMON] int 
  4473 ;;  dividend        2    2[COMMON] int 
  4474 ;; Auto vars:     Size  Location     Type
  4475 ;;  sign            1    6[COMMON] unsigned char 
  4476 ;;  counter         1    5[COMMON] unsigned char 
  4477 ;; Return value:  Size  Location     Type
  4478 ;;                  2    0[COMMON] int 
  4479 ;; Registers used:
  4480 ;;		wreg, status,2, status,0
  4481 ;; Tracked objects:
  4482 ;;		On entry : 0/0
  4483 ;;		On exit  : 0/0
  4484 ;;		Unchanged: 0/0
  4485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4486 ;;      Params:         4       0       0       0       0
  4487 ;;      Locals:         2       0       0       0       0
  4488 ;;      Temps:          1       0       0       0       0
  4489 ;;      Totals:         7       0       0       0       0
  4490 ;;Total ram usage:        7 bytes
  4491 ;; Hardware stack levels used:    1
  4492 ;; This function calls:
  4493 ;;		Nothing
  4494 ;; This function is called by:
  4495 ;;		_scale
  4496 ;; This function uses a non-reentrant model
  4497 ;;
  4498                           
  4499                           
  4500                           ;psect for function ___awmod
  4501  1D86                     ___awmod:
  4502  1D86                     l2363:	
  4503                           ;incstack = 0
  4504                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4505                           
  4506  1D86  01F6               	clrf	___awmod@sign
  4507  1D87                     l2365:
  4508  1D87  1FF3               	btfss	___awmod@dividend+1,7
  4509  1D88  2D8A               	goto	u3251
  4510  1D89  2D8B               	goto	u3250
  4511  1D8A                     u3251:
  4512  1D8A  2D92               	goto	l2371
  4513  1D8B                     u3250:
  4514  1D8B                     l2367:
  4515  1D8B  09F2               	comf	___awmod@dividend,f
  4516  1D8C  09F3               	comf	___awmod@dividend+1,f
  4517  1D8D  0AF2               	incf	___awmod@dividend,f
  4518  1D8E  1903               	skipnz
  4519  1D8F  0AF3               	incf	___awmod@dividend+1,f
  4520  1D90                     l2369:
  4521  1D90  01F6               	clrf	___awmod@sign
  4522  1D91  0AF6               	incf	___awmod@sign,f
  4523  1D92                     l2371:
  4524  1D92  1FF1               	btfss	___awmod@divisor+1,7
  4525  1D93  2D95               	goto	u3261
  4526  1D94  2D96               	goto	u3260
  4527  1D95                     u3261:
  4528  1D95  2D9B               	goto	l2375
  4529  1D96                     u3260:
  4530  1D96                     l2373:
  4531  1D96  09F0               	comf	___awmod@divisor,f
  4532  1D97  09F1               	comf	___awmod@divisor+1,f
  4533  1D98  0AF0               	incf	___awmod@divisor,f
  4534  1D99  1903               	skipnz
  4535  1D9A  0AF1               	incf	___awmod@divisor+1,f
  4536  1D9B                     l2375:
  4537  1D9B  0870               	movf	___awmod@divisor,w
  4538  1D9C  0471               	iorwf	___awmod@divisor+1,w
  4539  1D9D  1903               	btfsc	3,2
  4540  1D9E  2DA0               	goto	u3271
  4541  1D9F  2DA1               	goto	u3270
  4542  1DA0                     u3271:
  4543  1DA0  2DD0               	goto	l2393
  4544  1DA1                     u3270:
  4545  1DA1                     l2377:
  4546  1DA1  01F5               	clrf	___awmod@counter
  4547  1DA2  0AF5               	incf	___awmod@counter,f
  4548  1DA3  2DAF               	goto	l2383
  4549  1DA4                     l2379:
  4550  1DA4  3001               	movlw	1
  4551  1DA5                     u3285:
  4552  1DA5  1003               	clrc
  4553  1DA6  0DF0               	rlf	___awmod@divisor,f
  4554  1DA7  0DF1               	rlf	___awmod@divisor+1,f
  4555  1DA8  3EFF               	addlw	-1
  4556  1DA9  1D03               	skipz
  4557  1DAA  2DA5               	goto	u3285
  4558  1DAB                     l2381:
  4559  1DAB  3001               	movlw	1
  4560  1DAC  00F4               	movwf	??___awmod
  4561  1DAD  0874               	movf	??___awmod,w
  4562  1DAE  07F5               	addwf	___awmod@counter,f
  4563  1DAF                     l2383:
  4564  1DAF  1FF1               	btfss	___awmod@divisor+1,7
  4565  1DB0  2DB2               	goto	u3291
  4566  1DB1  2DB3               	goto	u3290
  4567  1DB2                     u3291:
  4568  1DB2  2DA4               	goto	l2379
  4569  1DB3                     u3290:
  4570  1DB3                     l2385:
  4571  1DB3  0871               	movf	___awmod@divisor+1,w
  4572  1DB4  0273               	subwf	___awmod@dividend+1,w
  4573  1DB5  1D03               	skipz
  4574  1DB6  2DB9               	goto	u3305
  4575  1DB7  0870               	movf	___awmod@divisor,w
  4576  1DB8  0272               	subwf	___awmod@dividend,w
  4577  1DB9                     u3305:
  4578  1DB9  1C03               	skipc
  4579  1DBA  2DBC               	goto	u3301
  4580  1DBB  2DBD               	goto	u3300
  4581  1DBC                     u3301:
  4582  1DBC  2DC3               	goto	l2389
  4583  1DBD                     u3300:
  4584  1DBD                     l2387:
  4585  1DBD  0870               	movf	___awmod@divisor,w
  4586  1DBE  02F2               	subwf	___awmod@dividend,f
  4587  1DBF  0871               	movf	___awmod@divisor+1,w
  4588  1DC0  1C03               	skipc
  4589  1DC1  03F3               	decf	___awmod@dividend+1,f
  4590  1DC2  02F3               	subwf	___awmod@dividend+1,f
  4591  1DC3                     l2389:
  4592  1DC3  3001               	movlw	1
  4593  1DC4                     u3315:
  4594  1DC4  1003               	clrc
  4595  1DC5  0CF1               	rrf	___awmod@divisor+1,f
  4596  1DC6  0CF0               	rrf	___awmod@divisor,f
  4597  1DC7  3EFF               	addlw	-1
  4598  1DC8  1D03               	skipz
  4599  1DC9  2DC4               	goto	u3315
  4600  1DCA                     l2391:
  4601  1DCA  3001               	movlw	1
  4602  1DCB  02F5               	subwf	___awmod@counter,f
  4603  1DCC  1D03               	btfss	3,2
  4604  1DCD  2DCF               	goto	u3321
  4605  1DCE  2DD0               	goto	u3320
  4606  1DCF                     u3321:
  4607  1DCF  2DB3               	goto	l2385
  4608  1DD0                     u3320:
  4609  1DD0                     l2393:
  4610  1DD0  0876               	movf	___awmod@sign,w
  4611  1DD1  1903               	btfsc	3,2
  4612  1DD2  2DD4               	goto	u3331
  4613  1DD3  2DD5               	goto	u3330
  4614  1DD4                     u3331:
  4615  1DD4  2DDA               	goto	l2397
  4616  1DD5                     u3330:
  4617  1DD5                     l2395:
  4618  1DD5  09F2               	comf	___awmod@dividend,f
  4619  1DD6  09F3               	comf	___awmod@dividend+1,f
  4620  1DD7  0AF2               	incf	___awmod@dividend,f
  4621  1DD8  1903               	skipnz
  4622  1DD9  0AF3               	incf	___awmod@dividend+1,f
  4623  1DDA                     l2397:
  4624  1DDA  0873               	movf	___awmod@dividend+1,w
  4625  1DDB  00F1               	movwf	?___awmod+1
  4626  1DDC  0872               	movf	___awmod@dividend,w
  4627  1DDD  00F0               	movwf	?___awmod
  4628  1DDE                     l540:
  4629  1DDE  0008               	return
  4630  1DDF                     __end_of___awmod:
  4631                           
  4632                           	psect	text5
  4633  1F0D                     __ptext5:	
  4634 ;; *************** function ___awdiv *****************
  4635 ;; Defined at:
  4636 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4637 ;; Parameters:    Size  Location     Type
  4638 ;;  divisor         2    7[COMMON] int 
  4639 ;;  dividend        2    9[COMMON] int 
  4640 ;; Auto vars:     Size  Location     Type
  4641 ;;  quotient        2    2[BANK0 ] int 
  4642 ;;  sign            1    1[BANK0 ] unsigned char 
  4643 ;;  counter         1    0[BANK0 ] unsigned char 
  4644 ;; Return value:  Size  Location     Type
  4645 ;;                  2    7[COMMON] int 
  4646 ;; Registers used:
  4647 ;;		wreg, status,2, status,0
  4648 ;; Tracked objects:
  4649 ;;		On entry : 0/0
  4650 ;;		On exit  : 0/0
  4651 ;;		Unchanged: 0/0
  4652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4653 ;;      Params:         4       0       0       0       0
  4654 ;;      Locals:         0       4       0       0       0
  4655 ;;      Temps:          1       0       0       0       0
  4656 ;;      Totals:         5       4       0       0       0
  4657 ;;Total ram usage:        9 bytes
  4658 ;; Hardware stack levels used:    1
  4659 ;; This function calls:
  4660 ;;		Nothing
  4661 ;; This function is called by:
  4662 ;;		_scale
  4663 ;;		_sprintf
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           
  4668                           ;psect for function ___awdiv
  4669  1F0D                     ___awdiv:
  4670  1F0D                     l2319:	
  4671                           ;incstack = 0
  4672                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4673                           
  4674  1F0D  1283               	bcf	3,5	;RP0=0, select bank0
  4675  1F0E  1303               	bcf	3,6	;RP1=0, select bank0
  4676  1F0F  01A1               	clrf	___awdiv@sign
  4677  1F10                     l2321:
  4678  1F10  1FF8               	btfss	___awdiv@divisor+1,7
  4679  1F11  2F13               	goto	u3151
  4680  1F12  2F14               	goto	u3150
  4681  1F13                     u3151:
  4682  1F13  2F1B               	goto	l2327
  4683  1F14                     u3150:
  4684  1F14                     l2323:
  4685  1F14  09F7               	comf	___awdiv@divisor,f
  4686  1F15  09F8               	comf	___awdiv@divisor+1,f
  4687  1F16  0AF7               	incf	___awdiv@divisor,f
  4688  1F17  1903               	skipnz
  4689  1F18  0AF8               	incf	___awdiv@divisor+1,f
  4690  1F19                     l2325:
  4691  1F19  01A1               	clrf	___awdiv@sign
  4692  1F1A  0AA1               	incf	___awdiv@sign,f
  4693  1F1B                     l2327:
  4694  1F1B  1FFA               	btfss	___awdiv@dividend+1,7
  4695  1F1C  2F1E               	goto	u3161
  4696  1F1D  2F1F               	goto	u3160
  4697  1F1E                     u3161:
  4698  1F1E  2F28               	goto	l2333
  4699  1F1F                     u3160:
  4700  1F1F                     l2329:
  4701  1F1F  09F9               	comf	___awdiv@dividend,f
  4702  1F20  09FA               	comf	___awdiv@dividend+1,f
  4703  1F21  0AF9               	incf	___awdiv@dividend,f
  4704  1F22  1903               	skipnz
  4705  1F23  0AFA               	incf	___awdiv@dividend+1,f
  4706  1F24                     l2331:
  4707  1F24  3001               	movlw	1
  4708  1F25  00FB               	movwf	??___awdiv
  4709  1F26  087B               	movf	??___awdiv,w
  4710  1F27  06A1               	xorwf	___awdiv@sign,f
  4711  1F28                     l2333:
  4712  1F28  01A2               	clrf	___awdiv@quotient
  4713  1F29  01A3               	clrf	___awdiv@quotient+1
  4714  1F2A                     l2335:
  4715  1F2A  0877               	movf	___awdiv@divisor,w
  4716  1F2B  0478               	iorwf	___awdiv@divisor+1,w
  4717  1F2C  1903               	btfsc	3,2
  4718  1F2D  2F2F               	goto	u3171
  4719  1F2E  2F30               	goto	u3170
  4720  1F2F                     u3171:
  4721  1F2F  2F67               	goto	l2355
  4722  1F30                     u3170:
  4723  1F30                     l2337:
  4724  1F30  01A0               	clrf	___awdiv@counter
  4725  1F31  0AA0               	incf	___awdiv@counter,f
  4726  1F32  2F3E               	goto	l2343
  4727  1F33                     l2339:
  4728  1F33  3001               	movlw	1
  4729  1F34                     u3185:
  4730  1F34  1003               	clrc
  4731  1F35  0DF7               	rlf	___awdiv@divisor,f
  4732  1F36  0DF8               	rlf	___awdiv@divisor+1,f
  4733  1F37  3EFF               	addlw	-1
  4734  1F38  1D03               	skipz
  4735  1F39  2F34               	goto	u3185
  4736  1F3A                     l2341:
  4737  1F3A  3001               	movlw	1
  4738  1F3B  00FB               	movwf	??___awdiv
  4739  1F3C  087B               	movf	??___awdiv,w
  4740  1F3D  07A0               	addwf	___awdiv@counter,f
  4741  1F3E                     l2343:
  4742  1F3E  1FF8               	btfss	___awdiv@divisor+1,7
  4743  1F3F  2F41               	goto	u3191
  4744  1F40  2F42               	goto	u3190
  4745  1F41                     u3191:
  4746  1F41  2F33               	goto	l2339
  4747  1F42                     u3190:
  4748  1F42                     l2345:
  4749  1F42  3001               	movlw	1
  4750  1F43                     u3205:
  4751  1F43  1003               	clrc
  4752  1F44  0DA2               	rlf	___awdiv@quotient,f
  4753  1F45  0DA3               	rlf	___awdiv@quotient+1,f
  4754  1F46  3EFF               	addlw	-1
  4755  1F47  1D03               	skipz
  4756  1F48  2F43               	goto	u3205
  4757  1F49  0878               	movf	___awdiv@divisor+1,w
  4758  1F4A  027A               	subwf	___awdiv@dividend+1,w
  4759  1F4B  1D03               	skipz
  4760  1F4C  2F4F               	goto	u3215
  4761  1F4D  0877               	movf	___awdiv@divisor,w
  4762  1F4E  0279               	subwf	___awdiv@dividend,w
  4763  1F4F                     u3215:
  4764  1F4F  1C03               	skipc
  4765  1F50  2F52               	goto	u3211
  4766  1F51  2F53               	goto	u3210
  4767  1F52                     u3211:
  4768  1F52  2F5A               	goto	l2351
  4769  1F53                     u3210:
  4770  1F53                     l2347:
  4771  1F53  0877               	movf	___awdiv@divisor,w
  4772  1F54  02F9               	subwf	___awdiv@dividend,f
  4773  1F55  0878               	movf	___awdiv@divisor+1,w
  4774  1F56  1C03               	skipc
  4775  1F57  03FA               	decf	___awdiv@dividend+1,f
  4776  1F58  02FA               	subwf	___awdiv@dividend+1,f
  4777  1F59                     l2349:
  4778  1F59  1422               	bsf	___awdiv@quotient,0
  4779  1F5A                     l2351:
  4780  1F5A  3001               	movlw	1
  4781  1F5B                     u3225:
  4782  1F5B  1003               	clrc
  4783  1F5C  0CF8               	rrf	___awdiv@divisor+1,f
  4784  1F5D  0CF7               	rrf	___awdiv@divisor,f
  4785  1F5E  3EFF               	addlw	-1
  4786  1F5F  1D03               	skipz
  4787  1F60  2F5B               	goto	u3225
  4788  1F61                     l2353:
  4789  1F61  3001               	movlw	1
  4790  1F62  02A0               	subwf	___awdiv@counter,f
  4791  1F63  1D03               	btfss	3,2
  4792  1F64  2F66               	goto	u3231
  4793  1F65  2F67               	goto	u3230
  4794  1F66                     u3231:
  4795  1F66  2F42               	goto	l2345
  4796  1F67                     u3230:
  4797  1F67                     l2355:
  4798  1F67  0821               	movf	___awdiv@sign,w
  4799  1F68  1903               	btfsc	3,2
  4800  1F69  2F6B               	goto	u3241
  4801  1F6A  2F6C               	goto	u3240
  4802  1F6B                     u3241:
  4803  1F6B  2F71               	goto	l2359
  4804  1F6C                     u3240:
  4805  1F6C                     l2357:
  4806  1F6C  09A2               	comf	___awdiv@quotient,f
  4807  1F6D  09A3               	comf	___awdiv@quotient+1,f
  4808  1F6E  0AA2               	incf	___awdiv@quotient,f
  4809  1F6F  1903               	skipnz
  4810  1F70  0AA3               	incf	___awdiv@quotient+1,f
  4811  1F71                     l2359:
  4812  1F71  0823               	movf	___awdiv@quotient+1,w
  4813  1F72  00F8               	movwf	?___awdiv+1
  4814  1F73  0822               	movf	___awdiv@quotient,w
  4815  1F74  00F7               	movwf	?___awdiv
  4816  1F75                     l527:
  4817  1F75  0008               	return
  4818  1F76                     __end_of___awdiv:
  4819                           
  4820                           	psect	text6
  4821  1B41                     __ptext6:	
  4822 ;; *************** function _isdigit *****************
  4823 ;; Defined at:
  4824 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4825 ;; Parameters:    Size  Location     Type
  4826 ;;  c               1    wreg     unsigned char 
  4827 ;; Auto vars:     Size  Location     Type
  4828 ;;  c               1    1[COMMON] unsigned char 
  4829 ;; Return value:  Size  Location     Type
  4830 ;;		None               void
  4831 ;; Registers used:
  4832 ;;		wreg, status,2, status,0
  4833 ;; Tracked objects:
  4834 ;;		On entry : 0/0
  4835 ;;		On exit  : 0/0
  4836 ;;		Unchanged: 0/0
  4837 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4838 ;;      Params:         0       0       0       0       0
  4839 ;;      Locals:         2       0       0       0       0
  4840 ;;      Temps:          0       0       0       0       0
  4841 ;;      Totals:         2       0       0       0       0
  4842 ;;Total ram usage:        2 bytes
  4843 ;; Hardware stack levels used:    1
  4844 ;; This function calls:
  4845 ;;		Nothing
  4846 ;; This function is called by:
  4847 ;;		_sprintf
  4848 ;; This function uses a non-reentrant model
  4849 ;;
  4850                           
  4851                           
  4852                           ;psect for function _isdigit
  4853  1B41                     _isdigit:
  4854                           
  4855                           ;incstack = 0
  4856                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4857                           ;isdigit@c stored from wreg
  4858  1B41  00F1               	movwf	isdigit@c
  4859  1B42                     l2925:
  4860  1B42  01F0               	clrf	_isdigit$843
  4861  1B43                     l2927:
  4862  1B43  303A               	movlw	58
  4863  1B44  0271               	subwf	isdigit@c,w
  4864  1B45  1803               	skipnc
  4865  1B46  2B48               	goto	u4731
  4866  1B47  2B49               	goto	u4730
  4867  1B48                     u4731:
  4868  1B48  2B51               	goto	l2933
  4869  1B49                     u4730:
  4870  1B49                     l2929:
  4871  1B49  3030               	movlw	48
  4872  1B4A  0271               	subwf	isdigit@c,w
  4873  1B4B  1C03               	skipc
  4874  1B4C  2B4E               	goto	u4741
  4875  1B4D  2B4F               	goto	u4740
  4876  1B4E                     u4741:
  4877  1B4E  2B51               	goto	l2933
  4878  1B4F                     u4740:
  4879  1B4F                     l2931:
  4880  1B4F  01F0               	clrf	_isdigit$843
  4881  1B50  0AF0               	incf	_isdigit$843,f
  4882  1B51                     l2933:
  4883  1B51  0C70               	rrf	_isdigit$843,w
  4884  1B52                     l861:
  4885  1B52  0008               	return
  4886  1B53                     __end_of_isdigit:
  4887                           
  4888                           	psect	text7
  4889  136D                     __ptext7:	
  4890 ;; *************** function _fround *****************
  4891 ;; Defined at:
  4892 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4893 ;; Parameters:    Size  Location     Type
  4894 ;;  prec            1    wreg     unsigned char 
  4895 ;; Auto vars:     Size  Location     Type
  4896 ;;  prec            1   49[BANK0 ] unsigned char 
  4897 ;; Return value:  Size  Location     Type
  4898 ;;                  4   30[BANK0 ] unsigned char 
  4899 ;; Registers used:
  4900 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4901 ;; Tracked objects:
  4902 ;;		On entry : 0/0
  4903 ;;		On exit  : 0/0
  4904 ;;		Unchanged: 0/0
  4905 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4906 ;;      Params:         0       4       0       0       0
  4907 ;;      Locals:         0       9       0       0       0
  4908 ;;      Temps:          0       7       0       0       0
  4909 ;;      Totals:         0      20       0       0       0
  4910 ;;Total ram usage:       20 bytes
  4911 ;; Hardware stack levels used:    1
  4912 ;; Hardware stack levels required when called:    2
  4913 ;; This function calls:
  4914 ;;		___flmul
  4915 ;;		___lwdiv
  4916 ;;		___lwmod
  4917 ;; This function is called by:
  4918 ;;		_sprintf
  4919 ;; This function uses a non-reentrant model
  4920 ;;
  4921                           
  4922                           
  4923                           ;psect for function _fround
  4924  136D                     _fround:
  4925                           
  4926                           ;incstack = 0
  4927                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4928                           ;fround@prec stored from wreg
  4929  136D  1283               	bcf	3,5	;RP0=0, select bank0
  4930  136E  1303               	bcf	3,6	;RP1=0, select bank0
  4931  136F  00D1               	movwf	fround@prec
  4932  1370                     l2867:
  4933                           
  4934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4935  1370  306E               	movlw	110
  4936  1371  0251               	subwf	fround@prec,w
  4937  1372  1C03               	skipc
  4938  1373  2B75               	goto	u4481
  4939  1374  2B76               	goto	u4480
  4940  1375                     u4481:
  4941  1375  2C83               	goto	l2875
  4942  1376                     u4480:
  4943  1376                     l2869:
  4944                           
  4945                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4946  1376  303F               	movlw	63
  4947  1377  00A7               	movwf	___flmul@b+3
  4948  1378  3000               	movlw	0
  4949  1379  00A6               	movwf	___flmul@b+2
  4950  137A  3000               	movlw	0
  4951  137B  00A5               	movwf	___flmul@b+1
  4952  137C  3000               	movlw	0
  4953  137D  00A4               	movwf	___flmul@b
  4954  137E  3064               	movlw	100
  4955  137F  00F6               	movwf	___lwdiv@divisor
  4956  1380  3000               	movlw	0
  4957  1381  00F7               	movwf	___lwdiv@divisor+1
  4958  1382  0851               	movf	fround@prec,w
  4959  1383  00C2               	movwf	??_fround
  4960  1384  01C3               	clrf	??_fround+1
  4961  1385  0842               	movf	??_fround,w
  4962  1386  00F8               	movwf	___lwdiv@dividend
  4963  1387  0843               	movf	??_fround+1,w
  4964  1388  00F9               	movwf	___lwdiv@dividend+1
  4965  1389  160A  158A  24A0  160A  118A  	fcall	___lwdiv
  4966  138E  0876               	movf	?___lwdiv,w
  4967  138F  1283               	bcf	3,5	;RP0=0, select bank0
  4968  1390  1303               	bcf	3,6	;RP1=0, select bank0
  4969  1391  00C4               	movwf	??_fround+2
  4970  1392  3001               	movlw	1
  4971  1393                     u4495:
  4972  1393  1003               	clrc
  4973  1394  0DC4               	rlf	??_fround+2,f
  4974  1395  3EFF               	addlw	-1
  4975  1396  1D03               	skipz
  4976  1397  2B93               	goto	u4495
  4977  1398  1003               	clrc
  4978  1399  0D44               	rlf	??_fround+2,w
  4979  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4980  139B  0084               	movwf	4
  4981  139C  160A  118A  2000  160A  118A  	fcall	stringdir
  4982  13A1  00C5               	movwf	??_fround+3
  4983  13A2  160A  118A  2000  160A  118A  	fcall	stringdir
  4984  13A7  00C6               	movwf	??_fround+4
  4985  13A8  160A  118A  2000  160A  118A  	fcall	stringdir
  4986  13AD  00C7               	movwf	??_fround+5
  4987  13AE  160A  118A  2000  160A  118A  	fcall	stringdir
  4988  13B3  00C8               	movwf	??_fround+6
  4989  13B4  0848               	movf	??_fround+6,w
  4990  13B5  00AB               	movwf	___flmul@a+3
  4991  13B6  0847               	movf	??_fround+5,w
  4992  13B7  00AA               	movwf	___flmul@a+2
  4993  13B8  0846               	movf	??_fround+4,w
  4994  13B9  00A9               	movwf	___flmul@a+1
  4995  13BA  0845               	movf	??_fround+3,w
  4996  13BB  00A8               	movwf	___flmul@a
  4997  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  4998  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  4999  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  5000  13C3  0827               	movf	?___flmul+3,w
  5001  13C4  00D0               	movwf	_fround$1041+3
  5002  13C5  0826               	movf	?___flmul+2,w
  5003  13C6  00CF               	movwf	_fround$1041+2
  5004  13C7  0825               	movf	?___flmul+1,w
  5005  13C8  00CE               	movwf	_fround$1041+1
  5006  13C9  0824               	movf	?___flmul,w
  5007  13CA  00CD               	movwf	_fround$1041
  5008                           
  5009                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5010  13CB  300A               	movlw	10
  5011  13CC  00F6               	movwf	___lwdiv@divisor
  5012  13CD  3000               	movlw	0
  5013  13CE  00F7               	movwf	___lwdiv@divisor+1
  5014  13CF  0851               	movf	fround@prec,w
  5015  13D0  00C2               	movwf	??_fround
  5016  13D1  01C3               	clrf	??_fround+1
  5017  13D2  0842               	movf	??_fround,w
  5018  13D3  00F2               	movwf	___lwmod@dividend
  5019  13D4  0843               	movf	??_fround+1,w
  5020  13D5  00F3               	movwf	___lwmod@dividend+1
  5021  13D6  3064               	movlw	100
  5022  13D7  00F0               	movwf	___lwmod@divisor
  5023  13D8  3000               	movlw	0
  5024  13D9  00F1               	movwf	___lwmod@divisor+1
  5025  13DA  160A  158A  2466  160A  118A  	fcall	___lwmod
  5026  13DF  0871               	movf	?___lwmod+1,w
  5027  13E0  00F9               	movwf	___lwdiv@dividend+1
  5028  13E1  0870               	movf	?___lwmod,w
  5029  13E2  00F8               	movwf	___lwdiv@dividend
  5030  13E3  160A  158A  24A0  160A  118A  	fcall	___lwdiv
  5031  13E8  0876               	movf	?___lwdiv,w
  5032  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  5033  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  5034  13EB  00C4               	movwf	??_fround+2
  5035  13EC  3001               	movlw	1
  5036  13ED                     u4505:
  5037  13ED  1003               	clrc
  5038  13EE  0DC4               	rlf	??_fround+2,f
  5039  13EF  3EFF               	addlw	-1
  5040  13F0  1D03               	skipz
  5041  13F1  2BED               	goto	u4505
  5042  13F2  1003               	clrc
  5043  13F3  0D44               	rlf	??_fround+2,w
  5044  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5045  13F5  0084               	movwf	4
  5046  13F6  160A  118A  2000  160A  118A  	fcall	stringdir
  5047  13FB  00C5               	movwf	??_fround+3
  5048  13FC  160A  118A  2000  160A  118A  	fcall	stringdir
  5049  1401  00C6               	movwf	??_fround+4
  5050  1402  160A  118A  2000  160A  118A  	fcall	stringdir
  5051  1407  00C7               	movwf	??_fround+5
  5052  1408  160A  118A  2000  160A  118A  	fcall	stringdir
  5053  140D  00C8               	movwf	??_fround+6
  5054  140E  0848               	movf	??_fround+6,w
  5055  140F  00A7               	movwf	___flmul@b+3
  5056  1410  0847               	movf	??_fround+5,w
  5057  1411  00A6               	movwf	___flmul@b+2
  5058  1412  0846               	movf	??_fround+4,w
  5059  1413  00A5               	movwf	___flmul@b+1
  5060  1414  0845               	movf	??_fround+3,w
  5061  1415  00A4               	movwf	___flmul@b
  5062  1416  0850               	movf	_fround$1041+3,w
  5063  1417  00AB               	movwf	___flmul@a+3
  5064  1418  084F               	movf	_fround$1041+2,w
  5065  1419  00AA               	movwf	___flmul@a+2
  5066  141A  084E               	movf	_fround$1041+1,w
  5067  141B  00A9               	movwf	___flmul@a+1
  5068  141C  084D               	movf	_fround$1041,w
  5069  141D  00A8               	movwf	___flmul@a
  5070  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  5071  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5072  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5073  1425  0827               	movf	?___flmul+3,w
  5074  1426  00CC               	movwf	_fround$1042+3
  5075  1427  0826               	movf	?___flmul+2,w
  5076  1428  00CB               	movwf	_fround$1042+2
  5077  1429  0825               	movf	?___flmul+1,w
  5078  142A  00CA               	movwf	_fround$1042+1
  5079  142B  0824               	movf	?___flmul,w
  5080  142C  00C9               	movwf	_fround$1042
  5081                           
  5082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5083  142D  300A               	movlw	10
  5084  142E  00F0               	movwf	___lwmod@divisor
  5085  142F  3000               	movlw	0
  5086  1430  00F1               	movwf	___lwmod@divisor+1
  5087  1431  0851               	movf	fround@prec,w
  5088  1432  00C2               	movwf	??_fround
  5089  1433  01C3               	clrf	??_fround+1
  5090  1434  0842               	movf	??_fround,w
  5091  1435  00F2               	movwf	___lwmod@dividend
  5092  1436  0843               	movf	??_fround+1,w
  5093  1437  00F3               	movwf	___lwmod@dividend+1
  5094  1438  160A  158A  2466  160A  118A  	fcall	___lwmod
  5095  143D  0870               	movf	?___lwmod,w
  5096  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5097  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5098  1440  00C4               	movwf	??_fround+2
  5099  1441  3001               	movlw	1
  5100  1442                     u4515:
  5101  1442  1003               	clrc
  5102  1443  0DC4               	rlf	??_fround+2,f
  5103  1444  3EFF               	addlw	-1
  5104  1445  1D03               	skipz
  5105  1446  2C42               	goto	u4515
  5106  1447  1003               	clrc
  5107  1448  0D44               	rlf	??_fround+2,w
  5108  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5109  144A  0084               	movwf	4
  5110  144B  160A  118A  2000  160A  118A  	fcall	stringdir
  5111  1450  00C5               	movwf	??_fround+3
  5112  1451  160A  118A  2000  160A  118A  	fcall	stringdir
  5113  1456  00C6               	movwf	??_fround+4
  5114  1457  160A  118A  2000  160A  118A  	fcall	stringdir
  5115  145C  00C7               	movwf	??_fround+5
  5116  145D  160A  118A  2000  160A  118A  	fcall	stringdir
  5117  1462  00C8               	movwf	??_fround+6
  5118  1463  0848               	movf	??_fround+6,w
  5119  1464  00A7               	movwf	___flmul@b+3
  5120  1465  0847               	movf	??_fround+5,w
  5121  1466  00A6               	movwf	___flmul@b+2
  5122  1467  0846               	movf	??_fround+4,w
  5123  1468  00A5               	movwf	___flmul@b+1
  5124  1469  0845               	movf	??_fround+3,w
  5125  146A  00A4               	movwf	___flmul@b
  5126  146B  084C               	movf	_fround$1042+3,w
  5127  146C  00AB               	movwf	___flmul@a+3
  5128  146D  084B               	movf	_fround$1042+2,w
  5129  146E  00AA               	movwf	___flmul@a+2
  5130  146F  084A               	movf	_fround$1042+1,w
  5131  1470  00A9               	movwf	___flmul@a+1
  5132  1471  0849               	movf	_fround$1042,w
  5133  1472  00A8               	movwf	___flmul@a
  5134  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  5135  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5136  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5137  147A  0827               	movf	?___flmul+3,w
  5138  147B  00C1               	movwf	?_fround+3
  5139  147C  0826               	movf	?___flmul+2,w
  5140  147D  00C0               	movwf	?_fround+2
  5141  147E  0825               	movf	?___flmul+1,w
  5142  147F  00BF               	movwf	?_fround+1
  5143  1480  0824               	movf	?___flmul,w
  5144  1481  00BE               	movwf	?_fround
  5145  1482  2D77               	goto	l280
  5146  1483                     l2875:
  5147  1483  300B               	movlw	11
  5148  1484  0251               	subwf	fround@prec,w
  5149  1485  1C03               	skipc
  5150  1486  2C88               	goto	u4521
  5151  1487  2C89               	goto	u4520
  5152  1488                     u4521:
  5153  1488  2D34               	goto	l2881
  5154  1489                     u4520:
  5155  1489                     l2877:
  5156                           
  5157                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5158  1489  303F               	movlw	63
  5159  148A  00A7               	movwf	___flmul@b+3
  5160  148B  3000               	movlw	0
  5161  148C  00A6               	movwf	___flmul@b+2
  5162  148D  3000               	movlw	0
  5163  148E  00A5               	movwf	___flmul@b+1
  5164  148F  3000               	movlw	0
  5165  1490  00A4               	movwf	___flmul@b
  5166  1491  300A               	movlw	10
  5167  1492  00F6               	movwf	___lwdiv@divisor
  5168  1493  3000               	movlw	0
  5169  1494  00F7               	movwf	___lwdiv@divisor+1
  5170  1495  0851               	movf	fround@prec,w
  5171  1496  00C2               	movwf	??_fround
  5172  1497  01C3               	clrf	??_fround+1
  5173  1498  0842               	movf	??_fround,w
  5174  1499  00F8               	movwf	___lwdiv@dividend
  5175  149A  0843               	movf	??_fround+1,w
  5176  149B  00F9               	movwf	___lwdiv@dividend+1
  5177  149C  160A  158A  24A0  160A  118A  	fcall	___lwdiv
  5178  14A1  0876               	movf	?___lwdiv,w
  5179  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  5180  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  5181  14A4  00C4               	movwf	??_fround+2
  5182  14A5  3001               	movlw	1
  5183  14A6                     u4535:
  5184  14A6  1003               	clrc
  5185  14A7  0DC4               	rlf	??_fround+2,f
  5186  14A8  3EFF               	addlw	-1
  5187  14A9  1D03               	skipz
  5188  14AA  2CA6               	goto	u4535
  5189  14AB  1003               	clrc
  5190  14AC  0D44               	rlf	??_fround+2,w
  5191  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5192  14AE  0084               	movwf	4
  5193  14AF  160A  118A  2000  160A  118A  	fcall	stringdir
  5194  14B4  00C5               	movwf	??_fround+3
  5195  14B5  160A  118A  2000  160A  118A  	fcall	stringdir
  5196  14BA  00C6               	movwf	??_fround+4
  5197  14BB  160A  118A  2000  160A  118A  	fcall	stringdir
  5198  14C0  00C7               	movwf	??_fround+5
  5199  14C1  160A  118A  2000  160A  118A  	fcall	stringdir
  5200  14C6  00C8               	movwf	??_fround+6
  5201  14C7  0848               	movf	??_fround+6,w
  5202  14C8  00AB               	movwf	___flmul@a+3
  5203  14C9  0847               	movf	??_fround+5,w
  5204  14CA  00AA               	movwf	___flmul@a+2
  5205  14CB  0846               	movf	??_fround+4,w
  5206  14CC  00A9               	movwf	___flmul@a+1
  5207  14CD  0845               	movf	??_fround+3,w
  5208  14CE  00A8               	movwf	___flmul@a
  5209  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5210  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5211  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5212  14D6  0827               	movf	?___flmul+3,w
  5213  14D7  00D0               	movwf	_fround$1041+3
  5214  14D8  0826               	movf	?___flmul+2,w
  5215  14D9  00CF               	movwf	_fround$1041+2
  5216  14DA  0825               	movf	?___flmul+1,w
  5217  14DB  00CE               	movwf	_fround$1041+1
  5218  14DC  0824               	movf	?___flmul,w
  5219  14DD  00CD               	movwf	_fround$1041
  5220                           
  5221                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5222  14DE  300A               	movlw	10
  5223  14DF  00F0               	movwf	___lwmod@divisor
  5224  14E0  3000               	movlw	0
  5225  14E1  00F1               	movwf	___lwmod@divisor+1
  5226  14E2  0851               	movf	fround@prec,w
  5227  14E3  00C2               	movwf	??_fround
  5228  14E4  01C3               	clrf	??_fround+1
  5229  14E5  0842               	movf	??_fround,w
  5230  14E6  00F2               	movwf	___lwmod@dividend
  5231  14E7  0843               	movf	??_fround+1,w
  5232  14E8  00F3               	movwf	___lwmod@dividend+1
  5233  14E9  160A  158A  2466  160A  118A  	fcall	___lwmod
  5234  14EE  0870               	movf	?___lwmod,w
  5235  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5236  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5237  14F1  00C4               	movwf	??_fround+2
  5238  14F2  3001               	movlw	1
  5239  14F3                     u4545:
  5240  14F3  1003               	clrc
  5241  14F4  0DC4               	rlf	??_fround+2,f
  5242  14F5  3EFF               	addlw	-1
  5243  14F6  1D03               	skipz
  5244  14F7  2CF3               	goto	u4545
  5245  14F8  1003               	clrc
  5246  14F9  0D44               	rlf	??_fround+2,w
  5247  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5248  14FB  0084               	movwf	4
  5249  14FC  160A  118A  2000  160A  118A  	fcall	stringdir
  5250  1501  00C5               	movwf	??_fround+3
  5251  1502  160A  118A  2000  160A  118A  	fcall	stringdir
  5252  1507  00C6               	movwf	??_fround+4
  5253  1508  160A  118A  2000  160A  118A  	fcall	stringdir
  5254  150D  00C7               	movwf	??_fround+5
  5255  150E  160A  118A  2000  160A  118A  	fcall	stringdir
  5256  1513  00C8               	movwf	??_fround+6
  5257  1514  0848               	movf	??_fround+6,w
  5258  1515  00A7               	movwf	___flmul@b+3
  5259  1516  0847               	movf	??_fround+5,w
  5260  1517  00A6               	movwf	___flmul@b+2
  5261  1518  0846               	movf	??_fround+4,w
  5262  1519  00A5               	movwf	___flmul@b+1
  5263  151A  0845               	movf	??_fround+3,w
  5264  151B  00A4               	movwf	___flmul@b
  5265  151C  0850               	movf	_fround$1041+3,w
  5266  151D  00AB               	movwf	___flmul@a+3
  5267  151E  084F               	movf	_fround$1041+2,w
  5268  151F  00AA               	movwf	___flmul@a+2
  5269  1520  084E               	movf	_fround$1041+1,w
  5270  1521  00A9               	movwf	___flmul@a+1
  5271  1522  084D               	movf	_fround$1041,w
  5272  1523  00A8               	movwf	___flmul@a
  5273  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  5274  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5275  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5276  152B  0827               	movf	?___flmul+3,w
  5277  152C  00C1               	movwf	?_fround+3
  5278  152D  0826               	movf	?___flmul+2,w
  5279  152E  00C0               	movwf	?_fround+2
  5280  152F  0825               	movf	?___flmul+1,w
  5281  1530  00BF               	movwf	?_fround+1
  5282  1531  0824               	movf	?___flmul,w
  5283  1532  00BE               	movwf	?_fround
  5284  1533  2D77               	goto	l280
  5285  1534                     l2881:
  5286                           
  5287                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5288  1534  303F               	movlw	63
  5289  1535  00A7               	movwf	___flmul@b+3
  5290  1536  3000               	movlw	0
  5291  1537  00A6               	movwf	___flmul@b+2
  5292  1538  3000               	movlw	0
  5293  1539  00A5               	movwf	___flmul@b+1
  5294  153A  3000               	movlw	0
  5295  153B  00A4               	movwf	___flmul@b
  5296  153C  0851               	movf	fround@prec,w
  5297  153D  00C2               	movwf	??_fround
  5298  153E  3001               	movlw	1
  5299  153F                     u4555:
  5300  153F  1003               	clrc
  5301  1540  0DC2               	rlf	??_fround,f
  5302  1541  3EFF               	addlw	-1
  5303  1542  1D03               	skipz
  5304  1543  2D3F               	goto	u4555
  5305  1544  1003               	clrc
  5306  1545  0D42               	rlf	??_fround,w
  5307  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5308  1547  0084               	movwf	4
  5309  1548  160A  118A  2000  160A  118A  	fcall	stringdir
  5310  154D  00C3               	movwf	??_fround+1
  5311  154E  160A  118A  2000  160A  118A  	fcall	stringdir
  5312  1553  00C4               	movwf	??_fround+2
  5313  1554  160A  118A  2000  160A  118A  	fcall	stringdir
  5314  1559  00C5               	movwf	??_fround+3
  5315  155A  160A  118A  2000  160A  118A  	fcall	stringdir
  5316  155F  00C6               	movwf	??_fround+4
  5317  1560  0846               	movf	??_fround+4,w
  5318  1561  00AB               	movwf	___flmul@a+3
  5319  1562  0845               	movf	??_fround+3,w
  5320  1563  00AA               	movwf	___flmul@a+2
  5321  1564  0844               	movf	??_fround+2,w
  5322  1565  00A9               	movwf	___flmul@a+1
  5323  1566  0843               	movf	??_fround+1,w
  5324  1567  00A8               	movwf	___flmul@a
  5325  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  5326  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5327  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5328  156F  0827               	movf	?___flmul+3,w
  5329  1570  00C1               	movwf	?_fround+3
  5330  1571  0826               	movf	?___flmul+2,w
  5331  1572  00C0               	movwf	?_fround+2
  5332  1573  0825               	movf	?___flmul+1,w
  5333  1574  00BF               	movwf	?_fround+1
  5334  1575  0824               	movf	?___flmul,w
  5335  1576  00BE               	movwf	?_fround
  5336  1577                     l280:
  5337  1577  0008               	return
  5338  1578                     __end_of_fround:
  5339                           
  5340                           	psect	text8
  5341  1C66                     __ptext8:	
  5342 ;; *************** function ___lwmod *****************
  5343 ;; Defined at:
  5344 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5345 ;; Parameters:    Size  Location     Type
  5346 ;;  divisor         2    0[COMMON] unsigned int 
  5347 ;;  dividend        2    2[COMMON] unsigned int 
  5348 ;; Auto vars:     Size  Location     Type
  5349 ;;  counter         1    5[COMMON] unsigned char 
  5350 ;; Return value:  Size  Location     Type
  5351 ;;                  2    0[COMMON] unsigned int 
  5352 ;; Registers used:
  5353 ;;		wreg, status,2, status,0
  5354 ;; Tracked objects:
  5355 ;;		On entry : 0/0
  5356 ;;		On exit  : 0/0
  5357 ;;		Unchanged: 0/0
  5358 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5359 ;;      Params:         4       0       0       0       0
  5360 ;;      Locals:         1       0       0       0       0
  5361 ;;      Temps:          1       0       0       0       0
  5362 ;;      Totals:         6       0       0       0       0
  5363 ;;Total ram usage:        6 bytes
  5364 ;; Hardware stack levels used:    1
  5365 ;; This function calls:
  5366 ;;		Nothing
  5367 ;; This function is called by:
  5368 ;;		_fround
  5369 ;; This function uses a non-reentrant model
  5370 ;;
  5371                           
  5372                           
  5373                           ;psect for function ___lwmod
  5374  1C66                     ___lwmod:
  5375  1C66                     l2427:	
  5376                           ;incstack = 0
  5377                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5378                           
  5379  1C66  0870               	movf	___lwmod@divisor,w
  5380  1C67  0471               	iorwf	___lwmod@divisor+1,w
  5381  1C68  1903               	btfsc	3,2
  5382  1C69  2C6B               	goto	u3411
  5383  1C6A  2C6C               	goto	u3410
  5384  1C6B                     u3411:
  5385  1C6B  2C9B               	goto	l2445
  5386  1C6C                     u3410:
  5387  1C6C                     l2429:
  5388  1C6C  01F5               	clrf	___lwmod@counter
  5389  1C6D  0AF5               	incf	___lwmod@counter,f
  5390  1C6E  2C7A               	goto	l2435
  5391  1C6F                     l2431:
  5392  1C6F  3001               	movlw	1
  5393  1C70                     u3425:
  5394  1C70  1003               	clrc
  5395  1C71  0DF0               	rlf	___lwmod@divisor,f
  5396  1C72  0DF1               	rlf	___lwmod@divisor+1,f
  5397  1C73  3EFF               	addlw	-1
  5398  1C74  1D03               	skipz
  5399  1C75  2C70               	goto	u3425
  5400  1C76                     l2433:
  5401  1C76  3001               	movlw	1
  5402  1C77  00F4               	movwf	??___lwmod
  5403  1C78  0874               	movf	??___lwmod,w
  5404  1C79  07F5               	addwf	___lwmod@counter,f
  5405  1C7A                     l2435:
  5406  1C7A  1FF1               	btfss	___lwmod@divisor+1,7
  5407  1C7B  2C7D               	goto	u3431
  5408  1C7C  2C7E               	goto	u3430
  5409  1C7D                     u3431:
  5410  1C7D  2C6F               	goto	l2431
  5411  1C7E                     u3430:
  5412  1C7E                     l2437:
  5413  1C7E  0871               	movf	___lwmod@divisor+1,w
  5414  1C7F  0273               	subwf	___lwmod@dividend+1,w
  5415  1C80  1D03               	skipz
  5416  1C81  2C84               	goto	u3445
  5417  1C82  0870               	movf	___lwmod@divisor,w
  5418  1C83  0272               	subwf	___lwmod@dividend,w
  5419  1C84                     u3445:
  5420  1C84  1C03               	skipc
  5421  1C85  2C87               	goto	u3441
  5422  1C86  2C88               	goto	u3440
  5423  1C87                     u3441:
  5424  1C87  2C8E               	goto	l2441
  5425  1C88                     u3440:
  5426  1C88                     l2439:
  5427  1C88  0870               	movf	___lwmod@divisor,w
  5428  1C89  02F2               	subwf	___lwmod@dividend,f
  5429  1C8A  0871               	movf	___lwmod@divisor+1,w
  5430  1C8B  1C03               	skipc
  5431  1C8C  03F3               	decf	___lwmod@dividend+1,f
  5432  1C8D  02F3               	subwf	___lwmod@dividend+1,f
  5433  1C8E                     l2441:
  5434  1C8E  3001               	movlw	1
  5435  1C8F                     u3455:
  5436  1C8F  1003               	clrc
  5437  1C90  0CF1               	rrf	___lwmod@divisor+1,f
  5438  1C91  0CF0               	rrf	___lwmod@divisor,f
  5439  1C92  3EFF               	addlw	-1
  5440  1C93  1D03               	skipz
  5441  1C94  2C8F               	goto	u3455
  5442  1C95                     l2443:
  5443  1C95  3001               	movlw	1
  5444  1C96  02F5               	subwf	___lwmod@counter,f
  5445  1C97  1D03               	btfss	3,2
  5446  1C98  2C9A               	goto	u3461
  5447  1C99  2C9B               	goto	u3460
  5448  1C9A                     u3461:
  5449  1C9A  2C7E               	goto	l2437
  5450  1C9B                     u3460:
  5451  1C9B                     l2445:
  5452  1C9B  0873               	movf	___lwmod@dividend+1,w
  5453  1C9C  00F1               	movwf	?___lwmod+1
  5454  1C9D  0872               	movf	___lwmod@dividend,w
  5455  1C9E  00F0               	movwf	?___lwmod
  5456  1C9F                     l690:
  5457  1C9F  0008               	return
  5458  1CA0                     __end_of___lwmod:
  5459                           
  5460                           	psect	text9
  5461  1CA0                     __ptext9:	
  5462 ;; *************** function ___lwdiv *****************
  5463 ;; Defined at:
  5464 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5465 ;; Parameters:    Size  Location     Type
  5466 ;;  divisor         2    6[COMMON] unsigned int 
  5467 ;;  dividend        2    8[COMMON] unsigned int 
  5468 ;; Auto vars:     Size  Location     Type
  5469 ;;  quotient        2   11[COMMON] unsigned int 
  5470 ;;  counter         1   13[COMMON] unsigned char 
  5471 ;; Return value:  Size  Location     Type
  5472 ;;                  2    6[COMMON] unsigned int 
  5473 ;; Registers used:
  5474 ;;		wreg, status,2, status,0
  5475 ;; Tracked objects:
  5476 ;;		On entry : 0/0
  5477 ;;		On exit  : 0/0
  5478 ;;		Unchanged: 0/0
  5479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5480 ;;      Params:         4       0       0       0       0
  5481 ;;      Locals:         3       0       0       0       0
  5482 ;;      Temps:          1       0       0       0       0
  5483 ;;      Totals:         8       0       0       0       0
  5484 ;;Total ram usage:        8 bytes
  5485 ;; Hardware stack levels used:    1
  5486 ;; This function calls:
  5487 ;;		Nothing
  5488 ;; This function is called by:
  5489 ;;		_fround
  5490 ;; This function uses a non-reentrant model
  5491 ;;
  5492                           
  5493                           
  5494                           ;psect for function ___lwdiv
  5495  1CA0                     ___lwdiv:
  5496  1CA0                     l2401:	
  5497                           ;incstack = 0
  5498                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5499                           
  5500  1CA0  01FB               	clrf	___lwdiv@quotient
  5501  1CA1  01FC               	clrf	___lwdiv@quotient+1
  5502  1CA2                     l2403:
  5503  1CA2  0876               	movf	___lwdiv@divisor,w
  5504  1CA3  0477               	iorwf	___lwdiv@divisor+1,w
  5505  1CA4  1903               	btfsc	3,2
  5506  1CA5  2CA7               	goto	u3341
  5507  1CA6  2CA8               	goto	u3340
  5508  1CA7                     u3341:
  5509  1CA7  2CDF               	goto	l2423
  5510  1CA8                     u3340:
  5511  1CA8                     l2405:
  5512  1CA8  01FD               	clrf	___lwdiv@counter
  5513  1CA9  0AFD               	incf	___lwdiv@counter,f
  5514  1CAA  2CB6               	goto	l2411
  5515  1CAB                     l2407:
  5516  1CAB  3001               	movlw	1
  5517  1CAC                     u3355:
  5518  1CAC  1003               	clrc
  5519  1CAD  0DF6               	rlf	___lwdiv@divisor,f
  5520  1CAE  0DF7               	rlf	___lwdiv@divisor+1,f
  5521  1CAF  3EFF               	addlw	-1
  5522  1CB0  1D03               	skipz
  5523  1CB1  2CAC               	goto	u3355
  5524  1CB2                     l2409:
  5525  1CB2  3001               	movlw	1
  5526  1CB3  00FA               	movwf	??___lwdiv
  5527  1CB4  087A               	movf	??___lwdiv,w
  5528  1CB5  07FD               	addwf	___lwdiv@counter,f
  5529  1CB6                     l2411:
  5530  1CB6  1FF7               	btfss	___lwdiv@divisor+1,7
  5531  1CB7  2CB9               	goto	u3361
  5532  1CB8  2CBA               	goto	u3360
  5533  1CB9                     u3361:
  5534  1CB9  2CAB               	goto	l2407
  5535  1CBA                     u3360:
  5536  1CBA                     l2413:
  5537  1CBA  3001               	movlw	1
  5538  1CBB                     u3375:
  5539  1CBB  1003               	clrc
  5540  1CBC  0DFB               	rlf	___lwdiv@quotient,f
  5541  1CBD  0DFC               	rlf	___lwdiv@quotient+1,f
  5542  1CBE  3EFF               	addlw	-1
  5543  1CBF  1D03               	skipz
  5544  1CC0  2CBB               	goto	u3375
  5545  1CC1  0877               	movf	___lwdiv@divisor+1,w
  5546  1CC2  0279               	subwf	___lwdiv@dividend+1,w
  5547  1CC3  1D03               	skipz
  5548  1CC4  2CC7               	goto	u3385
  5549  1CC5  0876               	movf	___lwdiv@divisor,w
  5550  1CC6  0278               	subwf	___lwdiv@dividend,w
  5551  1CC7                     u3385:
  5552  1CC7  1C03               	skipc
  5553  1CC8  2CCA               	goto	u3381
  5554  1CC9  2CCB               	goto	u3380
  5555  1CCA                     u3381:
  5556  1CCA  2CD2               	goto	l2419
  5557  1CCB                     u3380:
  5558  1CCB                     l2415:
  5559  1CCB  0876               	movf	___lwdiv@divisor,w
  5560  1CCC  02F8               	subwf	___lwdiv@dividend,f
  5561  1CCD  0877               	movf	___lwdiv@divisor+1,w
  5562  1CCE  1C03               	skipc
  5563  1CCF  03F9               	decf	___lwdiv@dividend+1,f
  5564  1CD0  02F9               	subwf	___lwdiv@dividend+1,f
  5565  1CD1                     l2417:
  5566  1CD1  147B               	bsf	___lwdiv@quotient,0
  5567  1CD2                     l2419:
  5568  1CD2  3001               	movlw	1
  5569  1CD3                     u3395:
  5570  1CD3  1003               	clrc
  5571  1CD4  0CF7               	rrf	___lwdiv@divisor+1,f
  5572  1CD5  0CF6               	rrf	___lwdiv@divisor,f
  5573  1CD6  3EFF               	addlw	-1
  5574  1CD7  1D03               	skipz
  5575  1CD8  2CD3               	goto	u3395
  5576  1CD9                     l2421:
  5577  1CD9  3001               	movlw	1
  5578  1CDA  02FD               	subwf	___lwdiv@counter,f
  5579  1CDB  1D03               	btfss	3,2
  5580  1CDC  2CDE               	goto	u3401
  5581  1CDD  2CDF               	goto	u3400
  5582  1CDE                     u3401:
  5583  1CDE  2CBA               	goto	l2413
  5584  1CDF                     u3400:
  5585  1CDF                     l2423:
  5586  1CDF  087C               	movf	___lwdiv@quotient+1,w
  5587  1CE0  00F7               	movwf	?___lwdiv+1
  5588  1CE1  087B               	movf	___lwdiv@quotient,w
  5589  1CE2  00F6               	movwf	?___lwdiv
  5590  1CE3                     l680:
  5591  1CE3  0008               	return
  5592  1CE4                     __end_of___lwdiv:
  5593                           
  5594                           	psect	text10
  5595  0C9F                     __ptext10:	
  5596 ;; *************** function ___flmul *****************
  5597 ;; Defined at:
  5598 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5599 ;; Parameters:    Size  Location     Type
  5600 ;;  b               4    4[BANK0 ] unsigned int 
  5601 ;;  a               4    8[BANK0 ] unsigned int 
  5602 ;; Auto vars:     Size  Location     Type
  5603 ;;  prod            4   24[BANK0 ] struct .
  5604 ;;  grs             4   18[BANK0 ] unsigned long 
  5605 ;;  temp            2   28[BANK0 ] struct .
  5606 ;;  bexp            1   23[BANK0 ] unsigned char 
  5607 ;;  aexp            1   22[BANK0 ] unsigned char 
  5608 ;;  sign            1   17[BANK0 ] unsigned char 
  5609 ;; Return value:  Size  Location     Type
  5610 ;;                  4    4[BANK0 ] unsigned char 
  5611 ;; Registers used:
  5612 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5613 ;; Tracked objects:
  5614 ;;		On entry : 0/0
  5615 ;;		On exit  : 0/0
  5616 ;;		Unchanged: 0/0
  5617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5618 ;;      Params:         0       8       0       0       0
  5619 ;;      Locals:         0      13       0       0       0
  5620 ;;      Temps:          0       5       0       0       0
  5621 ;;      Totals:         0      26       0       0       0
  5622 ;;Total ram usage:       26 bytes
  5623 ;; Hardware stack levels used:    1
  5624 ;; Hardware stack levels required when called:    1
  5625 ;; This function calls:
  5626 ;;		__Umul8_16
  5627 ;; This function is called by:
  5628 ;;		_fround
  5629 ;;		_scale
  5630 ;;		_sprintf
  5631 ;; This function uses a non-reentrant model
  5632 ;;
  5633                           
  5634                           
  5635                           ;psect for function ___flmul
  5636  0C9F                     ___flmul:
  5637  0C9F                     l2643:	
  5638                           ;incstack = 0
  5639                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5640                           
  5641  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  5642  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  5643  0CA1  0827               	movf	___flmul@b+3,w
  5644  0CA2  3980               	andlw	128
  5645  0CA3  00AC               	movwf	??___flmul
  5646  0CA4  082C               	movf	??___flmul,w
  5647  0CA5  00B1               	movwf	___flmul@sign
  5648  0CA6                     l2645:
  5649  0CA6  0827               	movf	___flmul@b+3,w
  5650  0CA7  00AC               	movwf	??___flmul
  5651  0CA8  072C               	addwf	??___flmul,w
  5652  0CA9  00AD               	movwf	??___flmul+1
  5653  0CAA  082D               	movf	??___flmul+1,w
  5654  0CAB  00B7               	movwf	___flmul@bexp
  5655  0CAC                     l2647:
  5656  0CAC  1FA6               	btfss	___flmul@b+2,7
  5657  0CAD  2CAF               	goto	u3931
  5658  0CAE  2CB0               	goto	u3930
  5659  0CAF                     u3931:
  5660  0CAF  2CB1               	goto	l2651
  5661  0CB0                     u3930:
  5662  0CB0                     l2649:
  5663  0CB0  1437               	bsf	___flmul@bexp,0
  5664  0CB1                     l2651:
  5665  0CB1  0837               	movf	___flmul@bexp,w
  5666  0CB2  1903               	btfsc	3,2
  5667  0CB3  2CB5               	goto	u3941
  5668  0CB4  2CB6               	goto	u3940
  5669  0CB5                     u3941:
  5670  0CB5  2CC5               	goto	l2659
  5671  0CB6                     u3940:
  5672  0CB6                     l2653:
  5673  0CB6  0A37               	incf	___flmul@bexp,w
  5674  0CB7  1D03               	btfss	3,2
  5675  0CB8  2CBA               	goto	u3951
  5676  0CB9  2CBB               	goto	u3950
  5677  0CBA                     u3951:
  5678  0CBA  2CC3               	goto	l2657
  5679  0CBB                     u3950:
  5680  0CBB                     l2655:
  5681  0CBB  3000               	movlw	0
  5682  0CBC  00A7               	movwf	___flmul@b+3
  5683  0CBD  3000               	movlw	0
  5684  0CBE  00A6               	movwf	___flmul@b+2
  5685  0CBF  3000               	movlw	0
  5686  0CC0  00A5               	movwf	___flmul@b+1
  5687  0CC1  3000               	movlw	0
  5688  0CC2  00A4               	movwf	___flmul@b
  5689  0CC3                     l2657:
  5690  0CC3  17A6               	bsf	___flmul@b+2,7
  5691  0CC4  2CCD               	goto	l2661
  5692  0CC5                     l2659:
  5693  0CC5  3000               	movlw	0
  5694  0CC6  00A7               	movwf	___flmul@b+3
  5695  0CC7  3000               	movlw	0
  5696  0CC8  00A6               	movwf	___flmul@b+2
  5697  0CC9  3000               	movlw	0
  5698  0CCA  00A5               	movwf	___flmul@b+1
  5699  0CCB  3000               	movlw	0
  5700  0CCC  00A4               	movwf	___flmul@b
  5701  0CCD                     l2661:
  5702  0CCD  082B               	movf	___flmul@a+3,w
  5703  0CCE  3980               	andlw	128
  5704  0CCF  00AC               	movwf	??___flmul
  5705  0CD0  082C               	movf	??___flmul,w
  5706  0CD1  06B1               	xorwf	___flmul@sign,f
  5707  0CD2                     l2663:
  5708  0CD2  082B               	movf	___flmul@a+3,w
  5709  0CD3  00AC               	movwf	??___flmul
  5710  0CD4  072C               	addwf	??___flmul,w
  5711  0CD5  00AD               	movwf	??___flmul+1
  5712  0CD6  082D               	movf	??___flmul+1,w
  5713  0CD7  00B6               	movwf	___flmul@aexp
  5714  0CD8                     l2665:
  5715  0CD8  1FAA               	btfss	___flmul@a+2,7
  5716  0CD9  2CDB               	goto	u3961
  5717  0CDA  2CDC               	goto	u3960
  5718  0CDB                     u3961:
  5719  0CDB  2CDD               	goto	l2669
  5720  0CDC                     u3960:
  5721  0CDC                     l2667:
  5722  0CDC  1436               	bsf	___flmul@aexp,0
  5723  0CDD                     l2669:
  5724  0CDD  0836               	movf	___flmul@aexp,w
  5725  0CDE  1903               	btfsc	3,2
  5726  0CDF  2CE1               	goto	u3971
  5727  0CE0  2CE2               	goto	u3970
  5728  0CE1                     u3971:
  5729  0CE1  2CF1               	goto	l2677
  5730  0CE2                     u3970:
  5731  0CE2                     l2671:
  5732  0CE2  0A36               	incf	___flmul@aexp,w
  5733  0CE3  1D03               	btfss	3,2
  5734  0CE4  2CE6               	goto	u3981
  5735  0CE5  2CE7               	goto	u3980
  5736  0CE6                     u3981:
  5737  0CE6  2CEF               	goto	l2675
  5738  0CE7                     u3980:
  5739  0CE7                     l2673:
  5740  0CE7  3000               	movlw	0
  5741  0CE8  00AB               	movwf	___flmul@a+3
  5742  0CE9  3000               	movlw	0
  5743  0CEA  00AA               	movwf	___flmul@a+2
  5744  0CEB  3000               	movlw	0
  5745  0CEC  00A9               	movwf	___flmul@a+1
  5746  0CED  3000               	movlw	0
  5747  0CEE  00A8               	movwf	___flmul@a
  5748  0CEF                     l2675:
  5749  0CEF  17AA               	bsf	___flmul@a+2,7
  5750  0CF0  2CF9               	goto	l2679
  5751  0CF1                     l2677:
  5752  0CF1  3000               	movlw	0
  5753  0CF2  00AB               	movwf	___flmul@a+3
  5754  0CF3  3000               	movlw	0
  5755  0CF4  00AA               	movwf	___flmul@a+2
  5756  0CF5  3000               	movlw	0
  5757  0CF6  00A9               	movwf	___flmul@a+1
  5758  0CF7  3000               	movlw	0
  5759  0CF8  00A8               	movwf	___flmul@a
  5760  0CF9                     l2679:
  5761  0CF9  0836               	movf	___flmul@aexp,w
  5762  0CFA  1903               	btfsc	3,2
  5763  0CFB  2CFD               	goto	u3991
  5764  0CFC  2CFE               	goto	u3990
  5765  0CFD                     u3991:
  5766  0CFD  2D03               	goto	l2683
  5767  0CFE                     u3990:
  5768  0CFE                     l2681:
  5769  0CFE  0837               	movf	___flmul@bexp,w
  5770  0CFF  1D03               	btfss	3,2
  5771  0D00  2D02               	goto	u4001
  5772  0D01  2D03               	goto	u4000
  5773  0D02                     u4001:
  5774  0D02  2D0C               	goto	l2687
  5775  0D03                     u4000:
  5776  0D03                     l2683:
  5777  0D03  3000               	movlw	0
  5778  0D04  00A7               	movwf	?___flmul+3
  5779  0D05  3000               	movlw	0
  5780  0D06  00A6               	movwf	?___flmul+2
  5781  0D07  3000               	movlw	0
  5782  0D08  00A5               	movwf	?___flmul+1
  5783  0D09  3000               	movlw	0
  5784  0D0A  00A4               	movwf	?___flmul
  5785  0D0B  2FFF               	goto	l797
  5786  0D0C                     l2687:
  5787  0D0C  0824               	movf	___flmul@b,w
  5788  0D0D  00AC               	movwf	??___flmul
  5789  0D0E  082C               	movf	??___flmul,w
  5790  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  5791  0D10  082A               	movf	___flmul@a+2,w
  5792  0D11  160A  158A  2414  120A  158A  	fcall	__Umul8_16
  5793  0D16  0871               	movf	?__Umul8_16+1,w
  5794  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  5795  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  5796  0D19  00BD               	movwf	___flmul@temp+1
  5797  0D1A  0870               	movf	?__Umul8_16,w
  5798  0D1B  00BC               	movwf	___flmul@temp
  5799  0D1C                     l2689:
  5800  0D1C  083C               	movf	___flmul@temp,w
  5801  0D1D  00AC               	movwf	??___flmul
  5802  0D1E  01AD               	clrf	??___flmul+1
  5803  0D1F  01AE               	clrf	??___flmul+2
  5804  0D20  01AF               	clrf	??___flmul+3
  5805  0D21  082F               	movf	??___flmul+3,w
  5806  0D22  00B5               	movwf	___flmul@grs+3
  5807  0D23  082E               	movf	??___flmul+2,w
  5808  0D24  00B4               	movwf	___flmul@grs+2
  5809  0D25  082D               	movf	??___flmul+1,w
  5810  0D26  00B3               	movwf	___flmul@grs+1
  5811  0D27  082C               	movf	??___flmul,w
  5812  0D28  00B2               	movwf	___flmul@grs
  5813  0D29                     l2691:
  5814  0D29  083D               	movf	___flmul@temp+1,w
  5815  0D2A  00AC               	movwf	??___flmul
  5816  0D2B  01AD               	clrf	??___flmul+1
  5817  0D2C  01AE               	clrf	??___flmul+2
  5818  0D2D  01AF               	clrf	??___flmul+3
  5819  0D2E  082F               	movf	??___flmul+3,w
  5820  0D2F  00BB               	movwf	___flmul@prod+3
  5821  0D30  082E               	movf	??___flmul+2,w
  5822  0D31  00BA               	movwf	___flmul@prod+2
  5823  0D32  082D               	movf	??___flmul+1,w
  5824  0D33  00B9               	movwf	___flmul@prod+1
  5825  0D34  082C               	movf	??___flmul,w
  5826  0D35  00B8               	movwf	___flmul@prod
  5827  0D36  0825               	movf	___flmul@b+1,w
  5828  0D37  00AC               	movwf	??___flmul
  5829  0D38  082C               	movf	??___flmul,w
  5830  0D39  00F0               	movwf	__Umul8_16@multiplicand
  5831  0D3A  0829               	movf	___flmul@a+1,w
  5832  0D3B  160A  158A  2414  120A  158A  	fcall	__Umul8_16
  5833  0D40  0871               	movf	?__Umul8_16+1,w
  5834  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  5835  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  5836  0D43  00BD               	movwf	___flmul@temp+1
  5837  0D44  0870               	movf	?__Umul8_16,w
  5838  0D45  00BC               	movwf	___flmul@temp
  5839  0D46                     l2693:
  5840  0D46  083C               	movf	___flmul@temp,w
  5841  0D47  00AC               	movwf	??___flmul
  5842  0D48  01AD               	clrf	??___flmul+1
  5843  0D49  01AE               	clrf	??___flmul+2
  5844  0D4A  01AF               	clrf	??___flmul+3
  5845  0D4B  082C               	movf	??___flmul,w
  5846  0D4C  07B2               	addwf	___flmul@grs,f
  5847  0D4D  082D               	movf	??___flmul+1,w
  5848  0D4E  1103               	clrz
  5849  0D4F  1803               	skipnc
  5850  0D50  3E01               	addlw	1
  5851  0D51  1903               	skipnz
  5852  0D52  2D54               	goto	u4011
  5853  0D53  07B3               	addwf	___flmul@grs+1,f
  5854  0D54                     u4011:
  5855  0D54  082E               	movf	??___flmul+2,w
  5856  0D55  1103               	clrz
  5857  0D56  1803               	skipnc
  5858  0D57  3E01               	addlw	1
  5859  0D58  1903               	skipnz
  5860  0D59  2D5B               	goto	u4012
  5861  0D5A  07B4               	addwf	___flmul@grs+2,f
  5862  0D5B                     u4012:
  5863  0D5B  082F               	movf	??___flmul+3,w
  5864  0D5C  1103               	clrz
  5865  0D5D  1803               	skipnc
  5866  0D5E  3E01               	addlw	1
  5867  0D5F  1903               	skipnz
  5868  0D60  2D62               	goto	u4013
  5869  0D61  07B5               	addwf	___flmul@grs+3,f
  5870  0D62                     u4013:
  5871  0D62                     l2695:
  5872  0D62  083D               	movf	___flmul@temp+1,w
  5873  0D63  00AC               	movwf	??___flmul
  5874  0D64  01AD               	clrf	??___flmul+1
  5875  0D65  01AE               	clrf	??___flmul+2
  5876  0D66  01AF               	clrf	??___flmul+3
  5877  0D67  082C               	movf	??___flmul,w
  5878  0D68  07B8               	addwf	___flmul@prod,f
  5879  0D69  082D               	movf	??___flmul+1,w
  5880  0D6A  1103               	clrz
  5881  0D6B  1803               	skipnc
  5882  0D6C  3E01               	addlw	1
  5883  0D6D  1903               	skipnz
  5884  0D6E  2D70               	goto	u4021
  5885  0D6F  07B9               	addwf	___flmul@prod+1,f
  5886  0D70                     u4021:
  5887  0D70  082E               	movf	??___flmul+2,w
  5888  0D71  1103               	clrz
  5889  0D72  1803               	skipnc
  5890  0D73  3E01               	addlw	1
  5891  0D74  1903               	skipnz
  5892  0D75  2D77               	goto	u4022
  5893  0D76  07BA               	addwf	___flmul@prod+2,f
  5894  0D77                     u4022:
  5895  0D77  082F               	movf	??___flmul+3,w
  5896  0D78  1103               	clrz
  5897  0D79  1803               	skipnc
  5898  0D7A  3E01               	addlw	1
  5899  0D7B  1903               	skipnz
  5900  0D7C  2D7E               	goto	u4023
  5901  0D7D  07BB               	addwf	___flmul@prod+3,f
  5902  0D7E                     u4023:
  5903  0D7E  0826               	movf	___flmul@b+2,w
  5904  0D7F  00AC               	movwf	??___flmul
  5905  0D80  082C               	movf	??___flmul,w
  5906  0D81  00F0               	movwf	__Umul8_16@multiplicand
  5907  0D82  0828               	movf	___flmul@a,w
  5908  0D83  160A  158A  2414  120A  158A  	fcall	__Umul8_16
  5909  0D88  0871               	movf	?__Umul8_16+1,w
  5910  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  5911  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  5912  0D8B  00BD               	movwf	___flmul@temp+1
  5913  0D8C  0870               	movf	?__Umul8_16,w
  5914  0D8D  00BC               	movwf	___flmul@temp
  5915  0D8E                     l2697:
  5916  0D8E  083C               	movf	___flmul@temp,w
  5917  0D8F  00AC               	movwf	??___flmul
  5918  0D90  01AD               	clrf	??___flmul+1
  5919  0D91  01AE               	clrf	??___flmul+2
  5920  0D92  01AF               	clrf	??___flmul+3
  5921  0D93  082C               	movf	??___flmul,w
  5922  0D94  07B2               	addwf	___flmul@grs,f
  5923  0D95  082D               	movf	??___flmul+1,w
  5924  0D96  1103               	clrz
  5925  0D97  1803               	skipnc
  5926  0D98  3E01               	addlw	1
  5927  0D99  1903               	skipnz
  5928  0D9A  2D9C               	goto	u4031
  5929  0D9B  07B3               	addwf	___flmul@grs+1,f
  5930  0D9C                     u4031:
  5931  0D9C  082E               	movf	??___flmul+2,w
  5932  0D9D  1103               	clrz
  5933  0D9E  1803               	skipnc
  5934  0D9F  3E01               	addlw	1
  5935  0DA0  1903               	skipnz
  5936  0DA1  2DA3               	goto	u4032
  5937  0DA2  07B4               	addwf	___flmul@grs+2,f
  5938  0DA3                     u4032:
  5939  0DA3  082F               	movf	??___flmul+3,w
  5940  0DA4  1103               	clrz
  5941  0DA5  1803               	skipnc
  5942  0DA6  3E01               	addlw	1
  5943  0DA7  1903               	skipnz
  5944  0DA8  2DAA               	goto	u4033
  5945  0DA9  07B5               	addwf	___flmul@grs+3,f
  5946  0DAA                     u4033:
  5947  0DAA                     l2699:
  5948  0DAA  083D               	movf	___flmul@temp+1,w
  5949  0DAB  00AC               	movwf	??___flmul
  5950  0DAC  01AD               	clrf	??___flmul+1
  5951  0DAD  01AE               	clrf	??___flmul+2
  5952  0DAE  01AF               	clrf	??___flmul+3
  5953  0DAF  082C               	movf	??___flmul,w
  5954  0DB0  07B8               	addwf	___flmul@prod,f
  5955  0DB1  082D               	movf	??___flmul+1,w
  5956  0DB2  1103               	clrz
  5957  0DB3  1803               	skipnc
  5958  0DB4  3E01               	addlw	1
  5959  0DB5  1903               	skipnz
  5960  0DB6  2DB8               	goto	u4041
  5961  0DB7  07B9               	addwf	___flmul@prod+1,f
  5962  0DB8                     u4041:
  5963  0DB8  082E               	movf	??___flmul+2,w
  5964  0DB9  1103               	clrz
  5965  0DBA  1803               	skipnc
  5966  0DBB  3E01               	addlw	1
  5967  0DBC  1903               	skipnz
  5968  0DBD  2DBF               	goto	u4042
  5969  0DBE  07BA               	addwf	___flmul@prod+2,f
  5970  0DBF                     u4042:
  5971  0DBF  082F               	movf	??___flmul+3,w
  5972  0DC0  1103               	clrz
  5973  0DC1  1803               	skipnc
  5974  0DC2  3E01               	addlw	1
  5975  0DC3  1903               	skipnz
  5976  0DC4  2DC6               	goto	u4043
  5977  0DC5  07BB               	addwf	___flmul@prod+3,f
  5978  0DC6                     u4043:
  5979  0DC6                     l2701:
  5980  0DC6  3008               	movlw	8
  5981  0DC7  00AC               	movwf	??___flmul
  5982  0DC8                     u4055:
  5983  0DC8  1003               	clrc
  5984  0DC9  0DB2               	rlf	___flmul@grs,f
  5985  0DCA  0DB3               	rlf	___flmul@grs+1,f
  5986  0DCB  0DB4               	rlf	___flmul@grs+2,f
  5987  0DCC  0DB5               	rlf	___flmul@grs+3,f
  5988  0DCD  0BAC               	decfsz	??___flmul,f
  5989  0DCE  2DC8               	goto	u4055
  5990  0DCF                     l2703:
  5991  0DCF  0825               	movf	___flmul@b+1,w
  5992  0DD0  00AC               	movwf	??___flmul
  5993  0DD1  082C               	movf	??___flmul,w
  5994  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  5995  0DD3  0828               	movf	___flmul@a,w
  5996  0DD4  160A  158A  2414  120A  158A  	fcall	__Umul8_16
  5997  0DD9  0871               	movf	?__Umul8_16+1,w
  5998  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  5999  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  6000  0DDC  00BD               	movwf	___flmul@temp+1
  6001  0DDD  0870               	movf	?__Umul8_16,w
  6002  0DDE  00BC               	movwf	___flmul@temp
  6003  0DDF                     l2705:
  6004  0DDF  083C               	movf	___flmul@temp,w
  6005  0DE0  00AC               	movwf	??___flmul
  6006  0DE1  083D               	movf	___flmul@temp+1,w
  6007  0DE2  00AD               	movwf	??___flmul+1
  6008  0DE3  01AE               	clrf	??___flmul+2
  6009  0DE4  01AF               	clrf	??___flmul+3
  6010  0DE5  082C               	movf	??___flmul,w
  6011  0DE6  07B2               	addwf	___flmul@grs,f
  6012  0DE7  082D               	movf	??___flmul+1,w
  6013  0DE8  1103               	clrz
  6014  0DE9  1803               	skipnc
  6015  0DEA  3E01               	addlw	1
  6016  0DEB  1903               	skipnz
  6017  0DEC  2DEE               	goto	u4061
  6018  0DED  07B3               	addwf	___flmul@grs+1,f
  6019  0DEE                     u4061:
  6020  0DEE  082E               	movf	??___flmul+2,w
  6021  0DEF  1103               	clrz
  6022  0DF0  1803               	skipnc
  6023  0DF1  3E01               	addlw	1
  6024  0DF2  1903               	skipnz
  6025  0DF3  2DF5               	goto	u4062
  6026  0DF4  07B4               	addwf	___flmul@grs+2,f
  6027  0DF5                     u4062:
  6028  0DF5  082F               	movf	??___flmul+3,w
  6029  0DF6  1103               	clrz
  6030  0DF7  1803               	skipnc
  6031  0DF8  3E01               	addlw	1
  6032  0DF9  1903               	skipnz
  6033  0DFA  2DFC               	goto	u4063
  6034  0DFB  07B5               	addwf	___flmul@grs+3,f
  6035  0DFC                     u4063:
  6036  0DFC                     l2707:
  6037  0DFC  0824               	movf	___flmul@b,w
  6038  0DFD  00AC               	movwf	??___flmul
  6039  0DFE  082C               	movf	??___flmul,w
  6040  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  6041  0E00  0829               	movf	___flmul@a+1,w
  6042  0E01  160A  158A  2414  120A  158A  	fcall	__Umul8_16
  6043  0E06  0871               	movf	?__Umul8_16+1,w
  6044  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  6045  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  6046  0E09  00BD               	movwf	___flmul@temp+1
  6047  0E0A  0870               	movf	?__Umul8_16,w
  6048  0E0B  00BC               	movwf	___flmul@temp
  6049  0E0C                     l2709:
  6050  0E0C  083C               	movf	___flmul@temp,w
  6051  0E0D  00AC               	movwf	??___flmul
  6052  0E0E  083D               	movf	___flmul@temp+1,w
  6053  0E0F  00AD               	movwf	??___flmul+1
  6054  0E10  01AE               	clrf	??___flmul+2
  6055  0E11  01AF               	clrf	??___flmul+3
  6056  0E12  082C               	movf	??___flmul,w
  6057  0E13  07B2               	addwf	___flmul@grs,f
  6058  0E14  082D               	movf	??___flmul+1,w
  6059  0E15  1103               	clrz
  6060  0E16  1803               	skipnc
  6061  0E17  3E01               	addlw	1
  6062  0E18  1903               	skipnz
  6063  0E19  2E1B               	goto	u4071
  6064  0E1A  07B3               	addwf	___flmul@grs+1,f
  6065  0E1B                     u4071:
  6066  0E1B  082E               	movf	??___flmul+2,w
  6067  0E1C  1103               	clrz
  6068  0E1D  1803               	skipnc
  6069  0E1E  3E01               	addlw	1
  6070  0E1F  1903               	skipnz
  6071  0E20  2E22               	goto	u4072
  6072  0E21  07B4               	addwf	___flmul@grs+2,f
  6073  0E22                     u4072:
  6074  0E22  082F               	movf	??___flmul+3,w
  6075  0E23  1103               	clrz
  6076  0E24  1803               	skipnc
  6077  0E25  3E01               	addlw	1
  6078  0E26  1903               	skipnz
  6079  0E27  2E29               	goto	u4073
  6080  0E28  07B5               	addwf	___flmul@grs+3,f
  6081  0E29                     u4073:
  6082  0E29                     l2711:
  6083  0E29  3008               	movlw	8
  6084  0E2A  00AC               	movwf	??___flmul
  6085  0E2B                     u4085:
  6086  0E2B  1003               	clrc
  6087  0E2C  0DB2               	rlf	___flmul@grs,f
  6088  0E2D  0DB3               	rlf	___flmul@grs+1,f
  6089  0E2E  0DB4               	rlf	___flmul@grs+2,f
  6090  0E2F  0DB5               	rlf	___flmul@grs+3,f
  6091  0E30  0BAC               	decfsz	??___flmul,f
  6092  0E31  2E2B               	goto	u4085
  6093  0E32  0824               	movf	___flmul@b,w
  6094  0E33  00AC               	movwf	??___flmul
  6095  0E34  082C               	movf	??___flmul,w
  6096  0E35  00F0               	movwf	__Umul8_16@multiplicand
  6097  0E36  0828               	movf	___flmul@a,w
  6098  0E37  160A  158A  2414  120A  158A  	fcall	__Umul8_16
  6099  0E3C  0871               	movf	?__Umul8_16+1,w
  6100  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  6101  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  6102  0E3F  00BD               	movwf	___flmul@temp+1
  6103  0E40  0870               	movf	?__Umul8_16,w
  6104  0E41  00BC               	movwf	___flmul@temp
  6105  0E42                     l2713:
  6106  0E42  083C               	movf	___flmul@temp,w
  6107  0E43  00AC               	movwf	??___flmul
  6108  0E44  083D               	movf	___flmul@temp+1,w
  6109  0E45  00AD               	movwf	??___flmul+1
  6110  0E46  01AE               	clrf	??___flmul+2
  6111  0E47  01AF               	clrf	??___flmul+3
  6112  0E48  082C               	movf	??___flmul,w
  6113  0E49  07B2               	addwf	___flmul@grs,f
  6114  0E4A  082D               	movf	??___flmul+1,w
  6115  0E4B  1103               	clrz
  6116  0E4C  1803               	skipnc
  6117  0E4D  3E01               	addlw	1
  6118  0E4E  1903               	skipnz
  6119  0E4F  2E51               	goto	u4091
  6120  0E50  07B3               	addwf	___flmul@grs+1,f
  6121  0E51                     u4091:
  6122  0E51  082E               	movf	??___flmul+2,w
  6123  0E52  1103               	clrz
  6124  0E53  1803               	skipnc
  6125  0E54  3E01               	addlw	1
  6126  0E55  1903               	skipnz
  6127  0E56  2E58               	goto	u4092
  6128  0E57  07B4               	addwf	___flmul@grs+2,f
  6129  0E58                     u4092:
  6130  0E58  082F               	movf	??___flmul+3,w
  6131  0E59  1103               	clrz
  6132  0E5A  1803               	skipnc
  6133  0E5B  3E01               	addlw	1
  6134  0E5C  1903               	skipnz
  6135  0E5D  2E5F               	goto	u4093
  6136  0E5E  07B5               	addwf	___flmul@grs+3,f
  6137  0E5F                     u4093:
  6138  0E5F                     l2715:
  6139  0E5F  0825               	movf	___flmul@b+1,w
  6140  0E60  00AC               	movwf	??___flmul
  6141  0E61  082C               	movf	??___flmul,w
  6142  0E62  00F0               	movwf	__Umul8_16@multiplicand
  6143  0E63  082A               	movf	___flmul@a+2,w
  6144  0E64  160A  158A  2414  120A  158A  	fcall	__Umul8_16
  6145  0E69  0871               	movf	?__Umul8_16+1,w
  6146  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  6147  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  6148  0E6C  00BD               	movwf	___flmul@temp+1
  6149  0E6D  0870               	movf	?__Umul8_16,w
  6150  0E6E  00BC               	movwf	___flmul@temp
  6151  0E6F  083C               	movf	___flmul@temp,w
  6152  0E70  00AC               	movwf	??___flmul
  6153  0E71  083D               	movf	___flmul@temp+1,w
  6154  0E72  00AD               	movwf	??___flmul+1
  6155  0E73  01AE               	clrf	??___flmul+2
  6156  0E74  01AF               	clrf	??___flmul+3
  6157  0E75  082C               	movf	??___flmul,w
  6158  0E76  07B8               	addwf	___flmul@prod,f
  6159  0E77  082D               	movf	??___flmul+1,w
  6160  0E78  1103               	clrz
  6161  0E79  1803               	skipnc
  6162  0E7A  3E01               	addlw	1
  6163  0E7B  1903               	skipnz
  6164  0E7C  2E7E               	goto	u4101
  6165  0E7D  07B9               	addwf	___flmul@prod+1,f
  6166  0E7E                     u4101:
  6167  0E7E  082E               	movf	??___flmul+2,w
  6168  0E7F  1103               	clrz
  6169  0E80  1803               	skipnc
  6170  0E81  3E01               	addlw	1
  6171  0E82  1903               	skipnz
  6172  0E83  2E85               	goto	u4102
  6173  0E84  07BA               	addwf	___flmul@prod+2,f
  6174  0E85                     u4102:
  6175  0E85  082F               	movf	??___flmul+3,w
  6176  0E86  1103               	clrz
  6177  0E87  1803               	skipnc
  6178  0E88  3E01               	addlw	1
  6179  0E89  1903               	skipnz
  6180  0E8A  2E8C               	goto	u4103
  6181  0E8B  07BB               	addwf	___flmul@prod+3,f
  6182  0E8C                     u4103:
  6183  0E8C                     l2717:
  6184  0E8C  0826               	movf	___flmul@b+2,w
  6185  0E8D  00AC               	movwf	??___flmul
  6186  0E8E  082C               	movf	??___flmul,w
  6187  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  6188  0E90  0829               	movf	___flmul@a+1,w
  6189  0E91  160A  158A  2414  120A  158A  	fcall	__Umul8_16
  6190  0E96  0871               	movf	?__Umul8_16+1,w
  6191  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  6192  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  6193  0E99  00BD               	movwf	___flmul@temp+1
  6194  0E9A  0870               	movf	?__Umul8_16,w
  6195  0E9B  00BC               	movwf	___flmul@temp
  6196  0E9C                     l2719:
  6197  0E9C  083C               	movf	___flmul@temp,w
  6198  0E9D  00AC               	movwf	??___flmul
  6199  0E9E  083D               	movf	___flmul@temp+1,w
  6200  0E9F  00AD               	movwf	??___flmul+1
  6201  0EA0  01AE               	clrf	??___flmul+2
  6202  0EA1  01AF               	clrf	??___flmul+3
  6203  0EA2  082C               	movf	??___flmul,w
  6204  0EA3  07B8               	addwf	___flmul@prod,f
  6205  0EA4  082D               	movf	??___flmul+1,w
  6206  0EA5  1103               	clrz
  6207  0EA6  1803               	skipnc
  6208  0EA7  3E01               	addlw	1
  6209  0EA8  1903               	skipnz
  6210  0EA9  2EAB               	goto	u4111
  6211  0EAA  07B9               	addwf	___flmul@prod+1,f
  6212  0EAB                     u4111:
  6213  0EAB  082E               	movf	??___flmul+2,w
  6214  0EAC  1103               	clrz
  6215  0EAD  1803               	skipnc
  6216  0EAE  3E01               	addlw	1
  6217  0EAF  1903               	skipnz
  6218  0EB0  2EB2               	goto	u4112
  6219  0EB1  07BA               	addwf	___flmul@prod+2,f
  6220  0EB2                     u4112:
  6221  0EB2  082F               	movf	??___flmul+3,w
  6222  0EB3  1103               	clrz
  6223  0EB4  1803               	skipnc
  6224  0EB5  3E01               	addlw	1
  6225  0EB6  1903               	skipnz
  6226  0EB7  2EB9               	goto	u4113
  6227  0EB8  07BB               	addwf	___flmul@prod+3,f
  6228  0EB9                     u4113:
  6229  0EB9  0826               	movf	___flmul@b+2,w
  6230  0EBA  00AC               	movwf	??___flmul
  6231  0EBB  082C               	movf	??___flmul,w
  6232  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  6233  0EBD  082A               	movf	___flmul@a+2,w
  6234  0EBE  160A  158A  2414  120A  158A  	fcall	__Umul8_16
  6235  0EC3  0871               	movf	?__Umul8_16+1,w
  6236  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  6237  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  6238  0EC6  00BD               	movwf	___flmul@temp+1
  6239  0EC7  0870               	movf	?__Umul8_16,w
  6240  0EC8  00BC               	movwf	___flmul@temp
  6241  0EC9                     l2721:
  6242  0EC9  083C               	movf	___flmul@temp,w
  6243  0ECA  00AC               	movwf	??___flmul
  6244  0ECB  083D               	movf	___flmul@temp+1,w
  6245  0ECC  00AD               	movwf	??___flmul+1
  6246  0ECD  01AE               	clrf	??___flmul+2
  6247  0ECE  01AF               	clrf	??___flmul+3
  6248  0ECF  3008               	movlw	8
  6249  0ED0                     u4125:
  6250  0ED0  1003               	clrc
  6251  0ED1  0DAC               	rlf	??___flmul,f
  6252  0ED2  0DAD               	rlf	??___flmul+1,f
  6253  0ED3  0DAE               	rlf	??___flmul+2,f
  6254  0ED4  0DAF               	rlf	??___flmul+3,f
  6255  0ED5                     u4120:
  6256  0ED5  3EFF               	addlw	-1
  6257  0ED6  1D03               	skipz
  6258  0ED7  2ED0               	goto	u4125
  6259  0ED8  082C               	movf	??___flmul,w
  6260  0ED9  07B8               	addwf	___flmul@prod,f
  6261  0EDA  082D               	movf	??___flmul+1,w
  6262  0EDB  1103               	clrz
  6263  0EDC  1803               	skipnc
  6264  0EDD  3E01               	addlw	1
  6265  0EDE  1903               	skipnz
  6266  0EDF  2EE1               	goto	u4131
  6267  0EE0  07B9               	addwf	___flmul@prod+1,f
  6268  0EE1                     u4131:
  6269  0EE1  082E               	movf	??___flmul+2,w
  6270  0EE2  1103               	clrz
  6271  0EE3  1803               	skipnc
  6272  0EE4  3E01               	addlw	1
  6273  0EE5  1903               	skipnz
  6274  0EE6  2EE8               	goto	u4132
  6275  0EE7  07BA               	addwf	___flmul@prod+2,f
  6276  0EE8                     u4132:
  6277  0EE8  082F               	movf	??___flmul+3,w
  6278  0EE9  1103               	clrz
  6279  0EEA  1803               	skipnc
  6280  0EEB  3E01               	addlw	1
  6281  0EEC  1903               	skipnz
  6282  0EED  2EEF               	goto	u4133
  6283  0EEE  07BB               	addwf	___flmul@prod+3,f
  6284  0EEF                     u4133:
  6285  0EEF                     l2723:
  6286  0EEF  0832               	movf	___flmul@grs,w
  6287  0EF0  00AC               	movwf	??___flmul
  6288  0EF1  0833               	movf	___flmul@grs+1,w
  6289  0EF2  00AD               	movwf	??___flmul+1
  6290  0EF3  0834               	movf	___flmul@grs+2,w
  6291  0EF4  00AE               	movwf	??___flmul+2
  6292  0EF5  0835               	movf	___flmul@grs+3,w
  6293  0EF6  00AF               	movwf	??___flmul+3
  6294  0EF7  3018               	movlw	24
  6295  0EF8                     u4145:
  6296  0EF8  1003               	clrc
  6297  0EF9  0CAF               	rrf	??___flmul+3,f
  6298  0EFA  0CAE               	rrf	??___flmul+2,f
  6299  0EFB  0CAD               	rrf	??___flmul+1,f
  6300  0EFC  0CAC               	rrf	??___flmul,f
  6301  0EFD                     u4140:
  6302  0EFD  3EFF               	addlw	-1
  6303  0EFE  1D03               	skipz
  6304  0EFF  2EF8               	goto	u4145
  6305  0F00  082C               	movf	??___flmul,w
  6306  0F01  07B8               	addwf	___flmul@prod,f
  6307  0F02  082D               	movf	??___flmul+1,w
  6308  0F03  1103               	clrz
  6309  0F04  1803               	skipnc
  6310  0F05  3E01               	addlw	1
  6311  0F06  1903               	skipnz
  6312  0F07  2F09               	goto	u4151
  6313  0F08  07B9               	addwf	___flmul@prod+1,f
  6314  0F09                     u4151:
  6315  0F09  082E               	movf	??___flmul+2,w
  6316  0F0A  1103               	clrz
  6317  0F0B  1803               	skipnc
  6318  0F0C  3E01               	addlw	1
  6319  0F0D  1903               	skipnz
  6320  0F0E  2F10               	goto	u4152
  6321  0F0F  07BA               	addwf	___flmul@prod+2,f
  6322  0F10                     u4152:
  6323  0F10  082F               	movf	??___flmul+3,w
  6324  0F11  1103               	clrz
  6325  0F12  1803               	skipnc
  6326  0F13  3E01               	addlw	1
  6327  0F14  1903               	skipnz
  6328  0F15  2F17               	goto	u4153
  6329  0F16  07BB               	addwf	___flmul@prod+3,f
  6330  0F17                     u4153:
  6331  0F17                     l2725:
  6332  0F17  3008               	movlw	8
  6333  0F18  00AC               	movwf	??___flmul
  6334  0F19                     u4165:
  6335  0F19  1003               	clrc
  6336  0F1A  0DB2               	rlf	___flmul@grs,f
  6337  0F1B  0DB3               	rlf	___flmul@grs+1,f
  6338  0F1C  0DB4               	rlf	___flmul@grs+2,f
  6339  0F1D  0DB5               	rlf	___flmul@grs+3,f
  6340  0F1E  0BAC               	decfsz	??___flmul,f
  6341  0F1F  2F19               	goto	u4165
  6342  0F20                     l2727:
  6343  0F20  0837               	movf	___flmul@bexp,w
  6344  0F21  0736               	addwf	___flmul@aexp,w
  6345  0F22  00AC               	movwf	??___flmul
  6346  0F23  01AD               	clrf	??___flmul+1
  6347  0F24  0DAD               	rlf	??___flmul+1,f
  6348  0F25  082C               	movf	??___flmul,w
  6349  0F26  3E82               	addlw	130
  6350  0F27  00BC               	movwf	___flmul@temp
  6351  0F28  082D               	movf	??___flmul+1,w
  6352  0F29  1803               	skipnc
  6353  0F2A  3E01               	addlw	1
  6354  0F2B  3EFF               	addlw	255
  6355  0F2C  00BD               	movwf	___flmul@temp+1
  6356  0F2D  2F4B               	goto	l2739
  6357  0F2E                     l2729:
  6358  0F2E  3001               	movlw	1
  6359  0F2F  00AC               	movwf	??___flmul
  6360  0F30                     u4175:
  6361  0F30  1003               	clrc
  6362  0F31  0DB8               	rlf	___flmul@prod,f
  6363  0F32  0DB9               	rlf	___flmul@prod+1,f
  6364  0F33  0DBA               	rlf	___flmul@prod+2,f
  6365  0F34  0DBB               	rlf	___flmul@prod+3,f
  6366  0F35  0BAC               	decfsz	??___flmul,f
  6367  0F36  2F30               	goto	u4175
  6368  0F37                     l2731:
  6369  0F37  1FB5               	btfss	___flmul@grs+3,7
  6370  0F38  2F3A               	goto	u4181
  6371  0F39  2F3B               	goto	u4180
  6372  0F3A                     u4181:
  6373  0F3A  2F3C               	goto	l2735
  6374  0F3B                     u4180:
  6375  0F3B                     l2733:
  6376  0F3B  1438               	bsf	___flmul@prod,0
  6377  0F3C                     l2735:
  6378  0F3C  3001               	movlw	1
  6379  0F3D  00AC               	movwf	??___flmul
  6380  0F3E                     u4195:
  6381  0F3E  1003               	clrc
  6382  0F3F  0DB2               	rlf	___flmul@grs,f
  6383  0F40  0DB3               	rlf	___flmul@grs+1,f
  6384  0F41  0DB4               	rlf	___flmul@grs+2,f
  6385  0F42  0DB5               	rlf	___flmul@grs+3,f
  6386  0F43  0BAC               	decfsz	??___flmul,f
  6387  0F44  2F3E               	goto	u4195
  6388  0F45                     l2737:
  6389  0F45  30FF               	movlw	255
  6390  0F46  07BC               	addwf	___flmul@temp,f
  6391  0F47  1803               	skipnc
  6392  0F48  0ABD               	incf	___flmul@temp+1,f
  6393  0F49  30FF               	movlw	255
  6394  0F4A  07BD               	addwf	___flmul@temp+1,f
  6395  0F4B                     l2739:
  6396  0F4B  1FBA               	btfss	___flmul@prod+2,7
  6397  0F4C  2F4E               	goto	u4201
  6398  0F4D  2F4F               	goto	u4200
  6399  0F4E                     u4201:
  6400  0F4E  2F2E               	goto	l2729
  6401  0F4F                     u4200:
  6402  0F4F                     l2741:
  6403  0F4F  01B6               	clrf	___flmul@aexp
  6404  0F50                     l2743:
  6405  0F50  1FB5               	btfss	___flmul@grs+3,7
  6406  0F51  2F53               	goto	u4211
  6407  0F52  2F54               	goto	u4210
  6408  0F53                     u4211:
  6409  0F53  2F70               	goto	l2751
  6410  0F54                     u4210:
  6411  0F54                     l2745:
  6412  0F54  30FF               	movlw	255
  6413  0F55  0532               	andwf	___flmul@grs,w
  6414  0F56  00AC               	movwf	??___flmul
  6415  0F57  30FF               	movlw	255
  6416  0F58  0533               	andwf	___flmul@grs+1,w
  6417  0F59  00AD               	movwf	??___flmul+1
  6418  0F5A  30FF               	movlw	255
  6419  0F5B  0534               	andwf	___flmul@grs+2,w
  6420  0F5C  00AE               	movwf	??___flmul+2
  6421  0F5D  307F               	movlw	127
  6422  0F5E  0535               	andwf	___flmul@grs+3,w
  6423  0F5F  00AF               	movwf	??___flmul+3
  6424  0F60  082F               	movf	??___flmul+3,w
  6425  0F61  042E               	iorwf	??___flmul+2,w
  6426  0F62  042D               	iorwf	??___flmul+1,w
  6427  0F63  042C               	iorwf	??___flmul,w
  6428  0F64  1903               	skipnz
  6429  0F65  2F67               	goto	u4221
  6430  0F66  2F68               	goto	u4220
  6431  0F67                     u4221:
  6432  0F67  2F6B               	goto	l803
  6433  0F68                     u4220:
  6434  0F68                     l2747:
  6435  0F68  01B6               	clrf	___flmul@aexp
  6436  0F69  0AB6               	incf	___flmul@aexp,f
  6437  0F6A  2F70               	goto	l2751
  6438  0F6B                     l803:
  6439  0F6B  1C38               	btfss	___flmul@prod,0
  6440  0F6C  2F6E               	goto	u4231
  6441  0F6D  2F6F               	goto	u4230
  6442  0F6E                     u4231:
  6443  0F6E  2F70               	goto	l2751
  6444  0F6F                     u4230:
  6445  0F6F  2F68               	goto	l2747
  6446  0F70                     l2751:
  6447  0F70  0836               	movf	___flmul@aexp,w
  6448  0F71  1903               	btfsc	3,2
  6449  0F72  2F74               	goto	u4241
  6450  0F73  2F75               	goto	u4240
  6451  0F74                     u4241:
  6452  0F74  2FA6               	goto	l2761
  6453  0F75                     u4240:
  6454  0F75                     l2753:
  6455  0F75  3001               	movlw	1
  6456  0F76  07B8               	addwf	___flmul@prod,f
  6457  0F77  3000               	movlw	0
  6458  0F78  1803               	skipnc
  6459  0F79  3001               	movlw	1
  6460  0F7A  07B9               	addwf	___flmul@prod+1,f
  6461  0F7B  3000               	movlw	0
  6462  0F7C  1803               	skipnc
  6463  0F7D  3001               	movlw	1
  6464  0F7E  07BA               	addwf	___flmul@prod+2,f
  6465  0F7F  3000               	movlw	0
  6466  0F80  1803               	skipnc
  6467  0F81  3001               	movlw	1
  6468  0F82  07BB               	addwf	___flmul@prod+3,f
  6469  0F83                     l2755:
  6470  0F83  1C3B               	btfss	___flmul@prod+3,0
  6471  0F84  2F86               	goto	u4251
  6472  0F85  2F87               	goto	u4250
  6473  0F86                     u4251:
  6474  0F86  2FA6               	goto	l2761
  6475  0F87                     u4250:
  6476  0F87                     l2757:
  6477  0F87  0838               	movf	___flmul@prod,w
  6478  0F88  00AC               	movwf	??___flmul
  6479  0F89  0839               	movf	___flmul@prod+1,w
  6480  0F8A  00AD               	movwf	??___flmul+1
  6481  0F8B  083A               	movf	___flmul@prod+2,w
  6482  0F8C  00AE               	movwf	??___flmul+2
  6483  0F8D  083B               	movf	___flmul@prod+3,w
  6484  0F8E  00AF               	movwf	??___flmul+3
  6485  0F8F  3001               	movlw	1
  6486  0F90  00B0               	movwf	??___flmul+4
  6487  0F91                     u4265:
  6488  0F91  0D2F               	rlf	??___flmul+3,w
  6489  0F92  0CAF               	rrf	??___flmul+3,f
  6490  0F93  0CAE               	rrf	??___flmul+2,f
  6491  0F94  0CAD               	rrf	??___flmul+1,f
  6492  0F95  0CAC               	rrf	??___flmul,f
  6493  0F96                     u4260:
  6494  0F96  0BB0               	decfsz	??___flmul+4,f
  6495  0F97  2F91               	goto	u4265
  6496  0F98  082F               	movf	??___flmul+3,w
  6497  0F99  00BB               	movwf	___flmul@prod+3
  6498  0F9A  082E               	movf	??___flmul+2,w
  6499  0F9B  00BA               	movwf	___flmul@prod+2
  6500  0F9C  082D               	movf	??___flmul+1,w
  6501  0F9D  00B9               	movwf	___flmul@prod+1
  6502  0F9E  082C               	movf	??___flmul,w
  6503  0F9F  00B8               	movwf	___flmul@prod
  6504  0FA0                     l2759:
  6505  0FA0  3001               	movlw	1
  6506  0FA1  07BC               	addwf	___flmul@temp,f
  6507  0FA2  1803               	skipnc
  6508  0FA3  0ABD               	incf	___flmul@temp+1,f
  6509  0FA4  3000               	movlw	0
  6510  0FA5  07BD               	addwf	___flmul@temp+1,f
  6511  0FA6                     l2761:
  6512  0FA6  083D               	movf	___flmul@temp+1,w
  6513  0FA7  3A80               	xorlw	128
  6514  0FA8  00FF               	movwf	btemp+1
  6515  0FA9  3080               	movlw	128
  6516  0FAA  027F               	subwf	btemp+1,w
  6517  0FAB  1D03               	skipz
  6518  0FAC  2FAF               	goto	u4275
  6519  0FAD  30FF               	movlw	255
  6520  0FAE  023C               	subwf	___flmul@temp,w
  6521  0FAF                     u4275:
  6522  0FAF  1C03               	skipc
  6523  0FB0  2FB2               	goto	u4271
  6524  0FB1  2FB3               	goto	u4270
  6525  0FB2                     u4271:
  6526  0FB2  2FBE               	goto	l2765
  6527  0FB3                     u4270:
  6528  0FB3                     l2763:
  6529  0FB3  307F               	movlw	127
  6530  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  6531  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  6532  0FB6  00BB               	movwf	___flmul@prod+3
  6533  0FB7  3080               	movlw	128
  6534  0FB8  00BA               	movwf	___flmul@prod+2
  6535  0FB9  3000               	movlw	0
  6536  0FBA  00B9               	movwf	___flmul@prod+1
  6537  0FBB  3000               	movlw	0
  6538  0FBC  00B8               	movwf	___flmul@prod
  6539  0FBD  2FF3               	goto	l809
  6540  0FBE                     l2765:
  6541  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  6542  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  6543  0FC0  083D               	movf	___flmul@temp+1,w
  6544  0FC1  3A80               	xorlw	128
  6545  0FC2  00FF               	movwf	btemp+1
  6546  0FC3  3080               	movlw	128
  6547  0FC4  027F               	subwf	btemp+1,w
  6548  0FC5  1D03               	skipz
  6549  0FC6  2FC9               	goto	u4285
  6550  0FC7  3001               	movlw	1
  6551  0FC8  023C               	subwf	___flmul@temp,w
  6552  0FC9                     u4285:
  6553  0FC9  1803               	skipnc
  6554  0FCA  2FCC               	goto	u4281
  6555  0FCB  2FCD               	goto	u4280
  6556  0FCC                     u4281:
  6557  0FCC  2FD9               	goto	l2771
  6558  0FCD                     u4280:
  6559  0FCD                     l2767:
  6560  0FCD  3000               	movlw	0
  6561  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  6562  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  6563  0FD0  00BB               	movwf	___flmul@prod+3
  6564  0FD1  3000               	movlw	0
  6565  0FD2  00BA               	movwf	___flmul@prod+2
  6566  0FD3  3000               	movlw	0
  6567  0FD4  00B9               	movwf	___flmul@prod+1
  6568  0FD5  3000               	movlw	0
  6569  0FD6  00B8               	movwf	___flmul@prod
  6570  0FD7                     l2769:
  6571  0FD7  01B1               	clrf	___flmul@sign
  6572  0FD8  2FF3               	goto	l809
  6573  0FD9                     l2771:
  6574  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  6575  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  6576  0FDB  083C               	movf	___flmul@temp,w
  6577  0FDC  00AC               	movwf	??___flmul
  6578  0FDD  082C               	movf	??___flmul,w
  6579  0FDE  00B7               	movwf	___flmul@bexp
  6580  0FDF  30FF               	movlw	255
  6581  0FE0  05B8               	andwf	___flmul@prod,f
  6582  0FE1  30FF               	movlw	255
  6583  0FE2  05B9               	andwf	___flmul@prod+1,f
  6584  0FE3  307F               	movlw	127
  6585  0FE4  05BA               	andwf	___flmul@prod+2,f
  6586  0FE5  3000               	movlw	0
  6587  0FE6  05BB               	andwf	___flmul@prod+3,f
  6588  0FE7                     l2773:
  6589  0FE7  1C37               	btfss	___flmul@bexp,0
  6590  0FE8  2FEA               	goto	u4291
  6591  0FE9  2FEB               	goto	u4290
  6592  0FEA                     u4291:
  6593  0FEA  2FEC               	goto	l2777
  6594  0FEB                     u4290:
  6595  0FEB                     l2775:
  6596  0FEB  17BA               	bsf	___flmul@prod+2,7
  6597  0FEC                     l2777:
  6598  0FEC  0837               	movf	___flmul@bexp,w
  6599  0FED  00AC               	movwf	??___flmul
  6600  0FEE  1003               	clrc
  6601  0FEF  0C2C               	rrf	??___flmul,w
  6602  0FF0  00AD               	movwf	??___flmul+1
  6603  0FF1  082D               	movf	??___flmul+1,w
  6604  0FF2  00BB               	movwf	___flmul@prod+3
  6605  0FF3                     l809:
  6606  0FF3  0831               	movf	___flmul@sign,w
  6607  0FF4  00AC               	movwf	??___flmul
  6608  0FF5  082C               	movf	??___flmul,w
  6609  0FF6  04BB               	iorwf	___flmul@prod+3,f
  6610  0FF7                     l2779:
  6611  0FF7  083B               	movf	___flmul@prod+3,w
  6612  0FF8  00A7               	movwf	?___flmul+3
  6613  0FF9  083A               	movf	___flmul@prod+2,w
  6614  0FFA  00A6               	movwf	?___flmul+2
  6615  0FFB  0839               	movf	___flmul@prod+1,w
  6616  0FFC  00A5               	movwf	?___flmul+1
  6617  0FFD  0838               	movf	___flmul@prod,w
  6618  0FFE  00A4               	movwf	?___flmul
  6619  0FFF                     l797:
  6620  0FFF  0008               	return
  6621  1000                     __end_of___flmul:
  6622                           
  6623                           	psect	text11
  6624  1C14                     __ptext11:	
  6625 ;; *************** function __Umul8_16 *****************
  6626 ;; Defined at:
  6627 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6628 ;; Parameters:    Size  Location     Type
  6629 ;;  multiplier      1    wreg     unsigned char 
  6630 ;;  multiplicand    1    0[COMMON] unsigned char 
  6631 ;; Auto vars:     Size  Location     Type
  6632 ;;  multiplier      1    8[COMMON] unsigned char 
  6633 ;;  word_mpld       2    6[COMMON] unsigned int 
  6634 ;;  product         2    4[COMMON] unsigned int 
  6635 ;; Return value:  Size  Location     Type
  6636 ;;                  2    0[COMMON] unsigned int 
  6637 ;; Registers used:
  6638 ;;		wreg, status,2, status,0
  6639 ;; Tracked objects:
  6640 ;;		On entry : 0/0
  6641 ;;		On exit  : 0/0
  6642 ;;		Unchanged: 0/0
  6643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6644 ;;      Params:         2       0       0       0       0
  6645 ;;      Locals:         5       0       0       0       0
  6646 ;;      Temps:          2       0       0       0       0
  6647 ;;      Totals:         9       0       0       0       0
  6648 ;;Total ram usage:        9 bytes
  6649 ;; Hardware stack levels used:    1
  6650 ;; This function calls:
  6651 ;;		Nothing
  6652 ;; This function is called by:
  6653 ;;		___flmul
  6654 ;; This function uses a non-reentrant model
  6655 ;;
  6656                           
  6657                           
  6658                           ;psect for function __Umul8_16
  6659  1C14                     __Umul8_16:
  6660                           
  6661                           ;incstack = 0
  6662                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6663                           ;__Umul8_16@multiplier stored from wreg
  6664  1C14  00F8               	movwf	__Umul8_16@multiplier
  6665  1C15                     l2257:
  6666  1C15  01F4               	clrf	__Umul8_16@product
  6667  1C16  01F5               	clrf	__Umul8_16@product+1
  6668  1C17                     l2259:
  6669  1C17  0870               	movf	__Umul8_16@multiplicand,w
  6670  1C18  00F2               	movwf	??__Umul8_16
  6671  1C19  01F3               	clrf	??__Umul8_16+1
  6672  1C1A  0872               	movf	??__Umul8_16,w
  6673  1C1B  00F6               	movwf	__Umul8_16@word_mpld
  6674  1C1C  0873               	movf	??__Umul8_16+1,w
  6675  1C1D  00F7               	movwf	__Umul8_16@word_mpld+1
  6676  1C1E                     l2261:
  6677  1C1E  1C78               	btfss	__Umul8_16@multiplier,0
  6678  1C1F  2C21               	goto	u2961
  6679  1C20  2C22               	goto	u2960
  6680  1C21                     u2961:
  6681  1C21  2C28               	goto	l816
  6682  1C22                     u2960:
  6683  1C22                     l2263:
  6684  1C22  0876               	movf	__Umul8_16@word_mpld,w
  6685  1C23  07F4               	addwf	__Umul8_16@product,f
  6686  1C24  1803               	skipnc
  6687  1C25  0AF5               	incf	__Umul8_16@product+1,f
  6688  1C26  0877               	movf	__Umul8_16@word_mpld+1,w
  6689  1C27  07F5               	addwf	__Umul8_16@product+1,f
  6690  1C28                     l816:
  6691  1C28  3001               	movlw	1
  6692  1C29                     u2975:
  6693  1C29  1003               	clrc
  6694  1C2A  0DF6               	rlf	__Umul8_16@word_mpld,f
  6695  1C2B  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6696  1C2C  3EFF               	addlw	-1
  6697  1C2D  1D03               	skipz
  6698  1C2E  2C29               	goto	u2975
  6699  1C2F  1003               	clrc
  6700  1C30  0CF8               	rrf	__Umul8_16@multiplier,f
  6701  1C31                     l2265:
  6702  1C31  0878               	movf	__Umul8_16@multiplier,w
  6703  1C32  1D03               	btfss	3,2
  6704  1C33  2C35               	goto	u2981
  6705  1C34  2C36               	goto	u2980
  6706  1C35                     u2981:
  6707  1C35  2C1E               	goto	l2261
  6708  1C36                     u2980:
  6709  1C36                     l2267:
  6710  1C36  0875               	movf	__Umul8_16@product+1,w
  6711  1C37  00F1               	movwf	?__Umul8_16+1
  6712  1C38  0874               	movf	__Umul8_16@product,w
  6713  1C39  00F0               	movwf	?__Umul8_16
  6714  1C3A                     l818:
  6715  1C3A  0008               	return
  6716  1C3B                     __end_of__Umul8_16:
  6717                           
  6718                           	psect	text12
  6719  12B0                     __ptext12:	
  6720 ;; *************** function __tdiv_to_l_ *****************
  6721 ;; Defined at:
  6722 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  f1              4    0[COMMON] float 
  6725 ;;  f2              4    4[COMMON] float 
  6726 ;; Auto vars:     Size  Location     Type
  6727 ;;  quot            4    0[BANK0 ] unsigned long 
  6728 ;;  exp1            1    5[BANK0 ] unsigned char 
  6729 ;;  cntr            1    4[BANK0 ] unsigned char 
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  4    0[COMMON] unsigned long 
  6732 ;; Registers used:
  6733 ;;		wreg, status,2, status,0
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6739 ;;      Params:         8       0       0       0       0
  6740 ;;      Locals:         0       6       0       0       0
  6741 ;;      Temps:          4       0       0       0       0
  6742 ;;      Totals:        12       6       0       0       0
  6743 ;;Total ram usage:       18 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; This function calls:
  6746 ;;		Nothing
  6747 ;; This function is called by:
  6748 ;;		_sprintf
  6749 ;; This function uses a non-reentrant model
  6750 ;;
  6751                           
  6752                           
  6753                           ;psect for function __tdiv_to_l_
  6754  12B0                     __tdiv_to_l_:
  6755  12B0                     l2937:	
  6756                           ;incstack = 0
  6757                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6758                           
  6759  12B0  0870               	movf	__tdiv_to_l_@f1,w
  6760  12B1  00F8               	movwf	??__tdiv_to_l_
  6761  12B2  0871               	movf	__tdiv_to_l_@f1+1,w
  6762  12B3  00F9               	movwf	??__tdiv_to_l_+1
  6763  12B4  0872               	movf	__tdiv_to_l_@f1+2,w
  6764  12B5  00FA               	movwf	??__tdiv_to_l_+2
  6765  12B6  1003               	clrc
  6766  12B7  0D79               	rlf	??__tdiv_to_l_+1,w
  6767  12B8  0D7A               	rlf	??__tdiv_to_l_+2,w
  6768  12B9  00FB               	movwf	??__tdiv_to_l_+3
  6769  12BA  087B               	movf	??__tdiv_to_l_+3,w
  6770  12BB  1283               	bcf	3,5	;RP0=0, select bank0
  6771  12BC  1303               	bcf	3,6	;RP1=0, select bank0
  6772  12BD  00A5               	movwf	__tdiv_to_l_@exp1
  6773  12BE  0825               	movf	__tdiv_to_l_@exp1,w
  6774  12BF  1D03               	btfss	3,2
  6775  12C0  2AC2               	goto	u4751
  6776  12C1  2AC3               	goto	u4750
  6777  12C2                     u4751:
  6778  12C2  2ACC               	goto	l2943
  6779  12C3                     u4750:
  6780  12C3                     l2939:
  6781  12C3  3000               	movlw	0
  6782  12C4  00F3               	movwf	?__tdiv_to_l_+3
  6783  12C5  3000               	movlw	0
  6784  12C6  00F2               	movwf	?__tdiv_to_l_+2
  6785  12C7  3000               	movlw	0
  6786  12C8  00F1               	movwf	?__tdiv_to_l_+1
  6787  12C9  3000               	movlw	0
  6788  12CA  00F0               	movwf	?__tdiv_to_l_
  6789  12CB  2B6C               	goto	l591
  6790  12CC                     l2943:
  6791  12CC  0874               	movf	__tdiv_to_l_@f2,w
  6792  12CD  00F8               	movwf	??__tdiv_to_l_
  6793  12CE  0875               	movf	__tdiv_to_l_@f2+1,w
  6794  12CF  00F9               	movwf	??__tdiv_to_l_+1
  6795  12D0  0876               	movf	__tdiv_to_l_@f2+2,w
  6796  12D1  00FA               	movwf	??__tdiv_to_l_+2
  6797  12D2  1003               	clrc
  6798  12D3  0D79               	rlf	??__tdiv_to_l_+1,w
  6799  12D4  0D7A               	rlf	??__tdiv_to_l_+2,w
  6800  12D5  00FB               	movwf	??__tdiv_to_l_+3
  6801  12D6  087B               	movf	??__tdiv_to_l_+3,w
  6802  12D7  00A4               	movwf	__tdiv_to_l_@cntr
  6803  12D8  0824               	movf	__tdiv_to_l_@cntr,w
  6804  12D9  1D03               	btfss	3,2
  6805  12DA  2ADC               	goto	u4761
  6806  12DB  2ADD               	goto	u4760
  6807  12DC                     u4761:
  6808  12DC  2ADE               	goto	l592
  6809  12DD                     u4760:
  6810  12DD  2AC3               	goto	l2939
  6811  12DE                     l592:
  6812  12DE  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6813  12DF                     l2949:
  6814  12DF  30FF               	movlw	255
  6815  12E0  05F0               	andwf	__tdiv_to_l_@f1,f
  6816  12E1  30FF               	movlw	255
  6817  12E2  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6818  12E3  3000               	movlw	0
  6819  12E4  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6820  12E5                     l2951:
  6821  12E5  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6822  12E6  30FF               	movlw	255
  6823  12E7  05F4               	andwf	__tdiv_to_l_@f2,f
  6824  12E8  30FF               	movlw	255
  6825  12E9  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6826  12EA  3000               	movlw	0
  6827  12EB  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6828  12EC  3000               	movlw	0
  6829  12ED  00A3               	movwf	__tdiv_to_l_@quot+3
  6830  12EE  3000               	movlw	0
  6831  12EF  00A2               	movwf	__tdiv_to_l_@quot+2
  6832  12F0  3000               	movlw	0
  6833  12F1  00A1               	movwf	__tdiv_to_l_@quot+1
  6834  12F2  3000               	movlw	0
  6835  12F3  00A0               	movwf	__tdiv_to_l_@quot
  6836  12F4                     l2953:
  6837  12F4  307F               	movlw	127
  6838  12F5  02A5               	subwf	__tdiv_to_l_@exp1,f
  6839  12F6                     l2955:
  6840  12F6  3098               	movlw	152
  6841  12F7  0724               	addwf	__tdiv_to_l_@cntr,w
  6842  12F8  00F8               	movwf	??__tdiv_to_l_
  6843  12F9  0878               	movf	??__tdiv_to_l_,w
  6844  12FA  02A5               	subwf	__tdiv_to_l_@exp1,f
  6845  12FB  3018               	movlw	24
  6846  12FC  00F8               	movwf	??__tdiv_to_l_
  6847  12FD  0878               	movf	??__tdiv_to_l_,w
  6848  12FE  00A4               	movwf	__tdiv_to_l_@cntr
  6849  12FF                     l2957:
  6850  12FF  3001               	movlw	1
  6851  1300  00F8               	movwf	??__tdiv_to_l_
  6852  1301                     u4775:
  6853  1301  1003               	clrc
  6854  1302  0DA0               	rlf	__tdiv_to_l_@quot,f
  6855  1303  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6856  1304  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6857  1305  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6858  1306  0BF8               	decfsz	??__tdiv_to_l_,f
  6859  1307  2B01               	goto	u4775
  6860  1308                     l2959:
  6861  1308  0876               	movf	__tdiv_to_l_@f2+2,w
  6862  1309  0272               	subwf	__tdiv_to_l_@f1+2,w
  6863  130A  1D03               	skipz
  6864  130B  2B12               	goto	u4785
  6865  130C  0875               	movf	__tdiv_to_l_@f2+1,w
  6866  130D  0271               	subwf	__tdiv_to_l_@f1+1,w
  6867  130E  1D03               	skipz
  6868  130F  2B12               	goto	u4785
  6869  1310  0874               	movf	__tdiv_to_l_@f2,w
  6870  1311  0270               	subwf	__tdiv_to_l_@f1,w
  6871  1312                     u4785:
  6872  1312  1C03               	skipc
  6873  1313  2B15               	goto	u4781
  6874  1314  2B16               	goto	u4780
  6875  1315                     u4781:
  6876  1315  2B21               	goto	l2965
  6877  1316                     u4780:
  6878  1316                     l2961:
  6879  1316  0874               	movf	__tdiv_to_l_@f2,w
  6880  1317  02F0               	subwf	__tdiv_to_l_@f1,f
  6881  1318  0875               	movf	__tdiv_to_l_@f2+1,w
  6882  1319  1C03               	skipc
  6883  131A  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6884  131B  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6885  131C  0876               	movf	__tdiv_to_l_@f2+2,w
  6886  131D  1C03               	skipc
  6887  131E  0A76               	incf	__tdiv_to_l_@f2+2,w
  6888  131F  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6889  1320                     l2963:
  6890  1320  1420               	bsf	__tdiv_to_l_@quot,0
  6891  1321                     l2965:
  6892  1321  3001               	movlw	1
  6893  1322                     u4795:
  6894  1322  1003               	clrc
  6895  1323  0DF0               	rlf	__tdiv_to_l_@f1,f
  6896  1324  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6897  1325  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6898  1326  3EFF               	addlw	-1
  6899  1327  1D03               	skipz
  6900  1328  2B22               	goto	u4795
  6901  1329                     l2967:
  6902  1329  3001               	movlw	1
  6903  132A  02A4               	subwf	__tdiv_to_l_@cntr,f
  6904  132B  1D03               	btfss	3,2
  6905  132C  2B2E               	goto	u4801
  6906  132D  2B2F               	goto	u4800
  6907  132E                     u4801:
  6908  132E  2AFF               	goto	l2957
  6909  132F                     u4800:
  6910  132F                     l595:
  6911  132F  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6912  1330  2B32               	goto	u4811
  6913  1331  2B33               	goto	u4810
  6914  1332                     u4811:
  6915  1332  2B4D               	goto	l2977
  6916  1333                     u4810:
  6917  1333                     l2969:
  6918  1333  0825               	movf	__tdiv_to_l_@exp1,w
  6919  1334  3A80               	xorlw	128
  6920  1335  3E97               	addlw	151
  6921  1336  1803               	skipnc
  6922  1337  2B39               	goto	u4821
  6923  1338  2B3A               	goto	u4820
  6924  1339                     u4821:
  6925  1339  2B3B               	goto	l2975
  6926  133A                     u4820:
  6927  133A  2AC3               	goto	l2939
  6928  133B                     l2975:
  6929  133B  3001               	movlw	1
  6930  133C                     u4835:
  6931  133C  1003               	clrc
  6932  133D  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6933  133E  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6934  133F  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6935  1340  0CA0               	rrf	__tdiv_to_l_@quot,f
  6936  1341  3EFF               	addlw	-1
  6937  1342  1D03               	skipz
  6938  1343  2B3C               	goto	u4835
  6939  1344  3001               	movlw	1
  6940  1345  00F8               	movwf	??__tdiv_to_l_
  6941  1346  0878               	movf	??__tdiv_to_l_,w
  6942  1347  07A5               	addwf	__tdiv_to_l_@exp1,f
  6943  1348  1D03               	btfss	3,2
  6944  1349  2B4B               	goto	u4841
  6945  134A  2B4C               	goto	u4840
  6946  134B                     u4841:
  6947  134B  2B3B               	goto	l2975
  6948  134C                     u4840:
  6949  134C  2B64               	goto	l2985
  6950  134D                     l2977:
  6951  134D  3018               	movlw	24
  6952  134E  0225               	subwf	__tdiv_to_l_@exp1,w
  6953  134F  1C03               	skipc
  6954  1350  2B52               	goto	u4851
  6955  1351  2B53               	goto	u4850
  6956  1352                     u4851:
  6957  1352  2B5F               	goto	l602
  6958  1353                     u4850:
  6959  1353  2AC3               	goto	l2939
  6960  1354                     l2983:
  6961  1354  3001               	movlw	1
  6962  1355  00F8               	movwf	??__tdiv_to_l_
  6963  1356                     u4865:
  6964  1356  1003               	clrc
  6965  1357  0DA0               	rlf	__tdiv_to_l_@quot,f
  6966  1358  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6967  1359  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6968  135A  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6969  135B  0BF8               	decfsz	??__tdiv_to_l_,f
  6970  135C  2B56               	goto	u4865
  6971  135D  3001               	movlw	1
  6972  135E  02A5               	subwf	__tdiv_to_l_@exp1,f
  6973  135F                     l602:
  6974  135F  0825               	movf	__tdiv_to_l_@exp1,w
  6975  1360  1D03               	btfss	3,2
  6976  1361  2B63               	goto	u4871
  6977  1362  2B64               	goto	u4870
  6978  1363                     u4871:
  6979  1363  2B54               	goto	l2983
  6980  1364                     u4870:
  6981  1364                     l2985:
  6982  1364  0823               	movf	__tdiv_to_l_@quot+3,w
  6983  1365  00F3               	movwf	?__tdiv_to_l_+3
  6984  1366  0822               	movf	__tdiv_to_l_@quot+2,w
  6985  1367  00F2               	movwf	?__tdiv_to_l_+2
  6986  1368  0821               	movf	__tdiv_to_l_@quot+1,w
  6987  1369  00F1               	movwf	?__tdiv_to_l_+1
  6988  136A  0820               	movf	__tdiv_to_l_@quot,w
  6989  136B  00F0               	movwf	?__tdiv_to_l_
  6990  136C                     l591:
  6991  136C  0008               	return
  6992  136D                     __end_of__tdiv_to_l_:
  6993                           
  6994                           	psect	text13
  6995  0882                     __ptext13:	
  6996 ;; *************** function __div_to_l_ *****************
  6997 ;; Defined at:
  6998 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6999 ;; Parameters:    Size  Location     Type
  7000 ;;  f1              4    0[COMMON] unsigned long 
  7001 ;;  f2              4    4[COMMON] unsigned long 
  7002 ;; Auto vars:     Size  Location     Type
  7003 ;;  quot            4    0[BANK0 ] unsigned long 
  7004 ;;  exp1            1    5[BANK0 ] unsigned char 
  7005 ;;  cntr            1    4[BANK0 ] unsigned char 
  7006 ;; Return value:  Size  Location     Type
  7007 ;;                  4    0[COMMON] unsigned long 
  7008 ;; Registers used:
  7009 ;;		wreg, status,2, status,0
  7010 ;; Tracked objects:
  7011 ;;		On entry : 0/0
  7012 ;;		On exit  : 0/0
  7013 ;;		Unchanged: 0/0
  7014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7015 ;;      Params:         8       0       0       0       0
  7016 ;;      Locals:         0       6       0       0       0
  7017 ;;      Temps:          1       0       0       0       0
  7018 ;;      Totals:         9       6       0       0       0
  7019 ;;Total ram usage:       15 bytes
  7020 ;; Hardware stack levels used:    1
  7021 ;; This function calls:
  7022 ;;		Nothing
  7023 ;; This function is called by:
  7024 ;;		_sprintf
  7025 ;; This function uses a non-reentrant model
  7026 ;;
  7027                           
  7028                           
  7029                           ;psect for function __div_to_l_
  7030  0882                     __div_to_l_:
  7031  0882                     l2989:	
  7032                           ;incstack = 0
  7033                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7034                           
  7035  0882  1003               	clrc
  7036  0883  0D72               	rlf	__div_to_l_@f1+2,w
  7037  0884  0D73               	rlf	__div_to_l_@f1+3,w
  7038  0885  00F8               	movwf	??__div_to_l_
  7039  0886  0878               	movf	??__div_to_l_,w
  7040  0887  1283               	bcf	3,5	;RP0=0, select bank0
  7041  0888  1303               	bcf	3,6	;RP1=0, select bank0
  7042  0889  00A5               	movwf	__div_to_l_@exp1
  7043  088A  0825               	movf	__div_to_l_@exp1,w
  7044  088B  1D03               	btfss	3,2
  7045  088C  288E               	goto	u4881
  7046  088D  288F               	goto	u4880
  7047  088E                     u4881:
  7048  088E  2898               	goto	l2995
  7049  088F                     u4880:
  7050  088F                     l2991:
  7051  088F  3000               	movlw	0
  7052  0890  00F3               	movwf	?__div_to_l_+3
  7053  0891  3000               	movlw	0
  7054  0892  00F2               	movwf	?__div_to_l_+2
  7055  0893  3000               	movlw	0
  7056  0894  00F1               	movwf	?__div_to_l_+1
  7057  0895  3000               	movlw	0
  7058  0896  00F0               	movwf	?__div_to_l_
  7059  0897  293F               	goto	l544
  7060  0898                     l2995:
  7061  0898  1003               	clrc
  7062  0899  0D76               	rlf	__div_to_l_@f2+2,w
  7063  089A  0D77               	rlf	__div_to_l_@f2+3,w
  7064  089B  00F8               	movwf	??__div_to_l_
  7065  089C  0878               	movf	??__div_to_l_,w
  7066  089D  00A4               	movwf	__div_to_l_@cntr
  7067  089E  0824               	movf	__div_to_l_@cntr,w
  7068  089F  1D03               	btfss	3,2
  7069  08A0  28A2               	goto	u4891
  7070  08A1  28A3               	goto	u4890
  7071  08A2                     u4891:
  7072  08A2  28A4               	goto	l545
  7073  08A3                     u4890:
  7074  08A3  288F               	goto	l2991
  7075  08A4                     l545:
  7076  08A4  17F2               	bsf	__div_to_l_@f1+2,7
  7077  08A5                     l3001:
  7078  08A5  30FF               	movlw	255
  7079  08A6  05F0               	andwf	__div_to_l_@f1,f
  7080  08A7  30FF               	movlw	255
  7081  08A8  05F1               	andwf	__div_to_l_@f1+1,f
  7082  08A9  30FF               	movlw	255
  7083  08AA  05F2               	andwf	__div_to_l_@f1+2,f
  7084  08AB  3000               	movlw	0
  7085  08AC  05F3               	andwf	__div_to_l_@f1+3,f
  7086  08AD                     l3003:
  7087  08AD  17F6               	bsf	__div_to_l_@f2+2,7
  7088  08AE  30FF               	movlw	255
  7089  08AF  05F4               	andwf	__div_to_l_@f2,f
  7090  08B0  30FF               	movlw	255
  7091  08B1  05F5               	andwf	__div_to_l_@f2+1,f
  7092  08B2  30FF               	movlw	255
  7093  08B3  05F6               	andwf	__div_to_l_@f2+2,f
  7094  08B4  3000               	movlw	0
  7095  08B5  05F7               	andwf	__div_to_l_@f2+3,f
  7096  08B6  3000               	movlw	0
  7097  08B7  00A3               	movwf	__div_to_l_@quot+3
  7098  08B8  3000               	movlw	0
  7099  08B9  00A2               	movwf	__div_to_l_@quot+2
  7100  08BA  3000               	movlw	0
  7101  08BB  00A1               	movwf	__div_to_l_@quot+1
  7102  08BC  3000               	movlw	0
  7103  08BD  00A0               	movwf	__div_to_l_@quot
  7104  08BE                     l3005:
  7105  08BE  307F               	movlw	127
  7106  08BF  02A5               	subwf	__div_to_l_@exp1,f
  7107  08C0                     l3007:
  7108  08C0  30A0               	movlw	160
  7109  08C1  0724               	addwf	__div_to_l_@cntr,w
  7110  08C2  00F8               	movwf	??__div_to_l_
  7111  08C3  0878               	movf	??__div_to_l_,w
  7112  08C4  02A5               	subwf	__div_to_l_@exp1,f
  7113  08C5  3020               	movlw	32
  7114  08C6  00F8               	movwf	??__div_to_l_
  7115  08C7  0878               	movf	??__div_to_l_,w
  7116  08C8  00A4               	movwf	__div_to_l_@cntr
  7117  08C9                     l3009:
  7118  08C9  3001               	movlw	1
  7119  08CA  00F8               	movwf	??__div_to_l_
  7120  08CB                     u4905:
  7121  08CB  1003               	clrc
  7122  08CC  0DA0               	rlf	__div_to_l_@quot,f
  7123  08CD  0DA1               	rlf	__div_to_l_@quot+1,f
  7124  08CE  0DA2               	rlf	__div_to_l_@quot+2,f
  7125  08CF  0DA3               	rlf	__div_to_l_@quot+3,f
  7126  08D0  0BF8               	decfsz	??__div_to_l_,f
  7127  08D1  28CB               	goto	u4905
  7128  08D2                     l3011:
  7129  08D2  0877               	movf	__div_to_l_@f2+3,w
  7130  08D3  0273               	subwf	__div_to_l_@f1+3,w
  7131  08D4  1D03               	skipz
  7132  08D5  28E0               	goto	u4915
  7133  08D6  0876               	movf	__div_to_l_@f2+2,w
  7134  08D7  0272               	subwf	__div_to_l_@f1+2,w
  7135  08D8  1D03               	skipz
  7136  08D9  28E0               	goto	u4915
  7137  08DA  0875               	movf	__div_to_l_@f2+1,w
  7138  08DB  0271               	subwf	__div_to_l_@f1+1,w
  7139  08DC  1D03               	skipz
  7140  08DD  28E0               	goto	u4915
  7141  08DE  0874               	movf	__div_to_l_@f2,w
  7142  08DF  0270               	subwf	__div_to_l_@f1,w
  7143  08E0                     u4915:
  7144  08E0  1C03               	skipc
  7145  08E1  28E3               	goto	u4911
  7146  08E2  28E4               	goto	u4910
  7147  08E3                     u4911:
  7148  08E3  28F3               	goto	l3017
  7149  08E4                     u4910:
  7150  08E4                     l3013:
  7151  08E4  0874               	movf	__div_to_l_@f2,w
  7152  08E5  02F0               	subwf	__div_to_l_@f1,f
  7153  08E6  0875               	movf	__div_to_l_@f2+1,w
  7154  08E7  1C03               	skipc
  7155  08E8  0F75               	incfsz	__div_to_l_@f2+1,w
  7156  08E9  02F1               	subwf	__div_to_l_@f1+1,f
  7157  08EA  0876               	movf	__div_to_l_@f2+2,w
  7158  08EB  1C03               	skipc
  7159  08EC  0F76               	incfsz	__div_to_l_@f2+2,w
  7160  08ED  02F2               	subwf	__div_to_l_@f1+2,f
  7161  08EE  0877               	movf	__div_to_l_@f2+3,w
  7162  08EF  1C03               	skipc
  7163  08F0  0F77               	incfsz	__div_to_l_@f2+3,w
  7164  08F1  02F3               	subwf	__div_to_l_@f1+3,f
  7165  08F2                     l3015:
  7166  08F2  1420               	bsf	__div_to_l_@quot,0
  7167  08F3                     l3017:
  7168  08F3  3001               	movlw	1
  7169  08F4  00F8               	movwf	??__div_to_l_
  7170  08F5                     u4925:
  7171  08F5  1003               	clrc
  7172  08F6  0DF0               	rlf	__div_to_l_@f1,f
  7173  08F7  0DF1               	rlf	__div_to_l_@f1+1,f
  7174  08F8  0DF2               	rlf	__div_to_l_@f1+2,f
  7175  08F9  0DF3               	rlf	__div_to_l_@f1+3,f
  7176  08FA  0BF8               	decfsz	??__div_to_l_,f
  7177  08FB  28F5               	goto	u4925
  7178  08FC                     l3019:
  7179  08FC  3001               	movlw	1
  7180  08FD  02A4               	subwf	__div_to_l_@cntr,f
  7181  08FE  1D03               	btfss	3,2
  7182  08FF  2901               	goto	u4931
  7183  0900  2902               	goto	u4930
  7184  0901                     u4931:
  7185  0901  28C9               	goto	l3009
  7186  0902                     u4930:
  7187  0902                     l548:
  7188  0902  1FA5               	btfss	__div_to_l_@exp1,7
  7189  0903  2905               	goto	u4941
  7190  0904  2906               	goto	u4940
  7191  0905                     u4941:
  7192  0905  2920               	goto	l3029
  7193  0906                     u4940:
  7194  0906                     l3021:
  7195  0906  0825               	movf	__div_to_l_@exp1,w
  7196  0907  3A80               	xorlw	128
  7197  0908  3E9F               	addlw	159
  7198  0909  1803               	skipnc
  7199  090A  290C               	goto	u4951
  7200  090B  290D               	goto	u4950
  7201  090C                     u4951:
  7202  090C  290E               	goto	l3027
  7203  090D                     u4950:
  7204  090D  288F               	goto	l2991
  7205  090E                     l3027:
  7206  090E  3001               	movlw	1
  7207  090F                     u4965:
  7208  090F  1003               	clrc
  7209  0910  0CA3               	rrf	__div_to_l_@quot+3,f
  7210  0911  0CA2               	rrf	__div_to_l_@quot+2,f
  7211  0912  0CA1               	rrf	__div_to_l_@quot+1,f
  7212  0913  0CA0               	rrf	__div_to_l_@quot,f
  7213  0914  3EFF               	addlw	-1
  7214  0915  1D03               	skipz
  7215  0916  290F               	goto	u4965
  7216  0917  3001               	movlw	1
  7217  0918  00F8               	movwf	??__div_to_l_
  7218  0919  0878               	movf	??__div_to_l_,w
  7219  091A  07A5               	addwf	__div_to_l_@exp1,f
  7220  091B  1D03               	btfss	3,2
  7221  091C  291E               	goto	u4971
  7222  091D  291F               	goto	u4970
  7223  091E                     u4971:
  7224  091E  290E               	goto	l3027
  7225  091F                     u4970:
  7226  091F  2937               	goto	l3037
  7227  0920                     l3029:
  7228  0920  3020               	movlw	32
  7229  0921  0225               	subwf	__div_to_l_@exp1,w
  7230  0922  1C03               	skipc
  7231  0923  2925               	goto	u4981
  7232  0924  2926               	goto	u4980
  7233  0925                     u4981:
  7234  0925  2932               	goto	l555
  7235  0926                     u4980:
  7236  0926  288F               	goto	l2991
  7237  0927                     l3035:
  7238  0927  3001               	movlw	1
  7239  0928  00F8               	movwf	??__div_to_l_
  7240  0929                     u4995:
  7241  0929  1003               	clrc
  7242  092A  0DA0               	rlf	__div_to_l_@quot,f
  7243  092B  0DA1               	rlf	__div_to_l_@quot+1,f
  7244  092C  0DA2               	rlf	__div_to_l_@quot+2,f
  7245  092D  0DA3               	rlf	__div_to_l_@quot+3,f
  7246  092E  0BF8               	decfsz	??__div_to_l_,f
  7247  092F  2929               	goto	u4995
  7248  0930  3001               	movlw	1
  7249  0931  02A5               	subwf	__div_to_l_@exp1,f
  7250  0932                     l555:
  7251  0932  0825               	movf	__div_to_l_@exp1,w
  7252  0933  1D03               	btfss	3,2
  7253  0934  2936               	goto	u5001
  7254  0935  2937               	goto	u5000
  7255  0936                     u5001:
  7256  0936  2927               	goto	l3035
  7257  0937                     u5000:
  7258  0937                     l3037:
  7259  0937  0823               	movf	__div_to_l_@quot+3,w
  7260  0938  00F3               	movwf	?__div_to_l_+3
  7261  0939  0822               	movf	__div_to_l_@quot+2,w
  7262  093A  00F2               	movwf	?__div_to_l_+2
  7263  093B  0821               	movf	__div_to_l_@quot+1,w
  7264  093C  00F1               	movwf	?__div_to_l_+1
  7265  093D  0820               	movf	__div_to_l_@quot,w
  7266  093E  00F0               	movwf	?__div_to_l_
  7267  093F                     l544:
  7268  093F  0008               	return
  7269  0940                     __end_of__div_to_l_:
  7270                           
  7271                           	psect	text14
  7272  1BEF                     __ptext14:	
  7273 ;; *************** function ___wmul *****************
  7274 ;; Defined at:
  7275 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  7276 ;; Parameters:    Size  Location     Type
  7277 ;;  multiplier      2    0[COMMON] unsigned int 
  7278 ;;  multiplicand    2    2[COMMON] unsigned int 
  7279 ;; Auto vars:     Size  Location     Type
  7280 ;;  product         2    4[COMMON] unsigned int 
  7281 ;; Return value:  Size  Location     Type
  7282 ;;                  2    0[COMMON] unsigned int 
  7283 ;; Registers used:
  7284 ;;		wreg, status,2, status,0
  7285 ;; Tracked objects:
  7286 ;;		On entry : 0/0
  7287 ;;		On exit  : 0/0
  7288 ;;		Unchanged: 0/0
  7289 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7290 ;;      Params:         4       0       0       0       0
  7291 ;;      Locals:         2       0       0       0       0
  7292 ;;      Temps:          0       0       0       0       0
  7293 ;;      Totals:         6       0       0       0       0
  7294 ;;Total ram usage:        6 bytes
  7295 ;; Hardware stack levels used:    1
  7296 ;; This function calls:
  7297 ;;		Nothing
  7298 ;; This function is called by:
  7299 ;;		_sprintf
  7300 ;; This function uses a non-reentrant model
  7301 ;;
  7302                           
  7303                           
  7304                           ;psect for function ___wmul
  7305  1BEF                     ___wmul:
  7306  1BEF                     l3041:	
  7307                           ;incstack = 0
  7308                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7309                           
  7310  1BEF  01F4               	clrf	___wmul@product
  7311  1BF0  01F5               	clrf	___wmul@product+1
  7312  1BF1                     l3043:
  7313  1BF1  1C70               	btfss	___wmul@multiplier,0
  7314  1BF2  2BF4               	goto	u5011
  7315  1BF3  2BF5               	goto	u5010
  7316  1BF4                     u5011:
  7317  1BF4  2BFB               	goto	l374
  7318  1BF5                     u5010:
  7319  1BF5                     l3045:
  7320  1BF5  0872               	movf	___wmul@multiplicand,w
  7321  1BF6  07F4               	addwf	___wmul@product,f
  7322  1BF7  1803               	skipnc
  7323  1BF8  0AF5               	incf	___wmul@product+1,f
  7324  1BF9  0873               	movf	___wmul@multiplicand+1,w
  7325  1BFA  07F5               	addwf	___wmul@product+1,f
  7326  1BFB                     l374:
  7327  1BFB  3001               	movlw	1
  7328  1BFC                     u5025:
  7329  1BFC  1003               	clrc
  7330  1BFD  0DF2               	rlf	___wmul@multiplicand,f
  7331  1BFE  0DF3               	rlf	___wmul@multiplicand+1,f
  7332  1BFF  3EFF               	addlw	-1
  7333  1C00  1D03               	skipz
  7334  1C01  2BFC               	goto	u5025
  7335  1C02                     l3047:
  7336  1C02  3001               	movlw	1
  7337  1C03                     u5035:
  7338  1C03  1003               	clrc
  7339  1C04  0CF1               	rrf	___wmul@multiplier+1,f
  7340  1C05  0CF0               	rrf	___wmul@multiplier,f
  7341  1C06  3EFF               	addlw	-1
  7342  1C07  1D03               	skipz
  7343  1C08  2C03               	goto	u5035
  7344  1C09                     l3049:
  7345  1C09  0870               	movf	___wmul@multiplier,w
  7346  1C0A  0471               	iorwf	___wmul@multiplier+1,w
  7347  1C0B  1D03               	btfss	3,2
  7348  1C0C  2C0E               	goto	u5041
  7349  1C0D  2C0F               	goto	u5040
  7350  1C0E                     u5041:
  7351  1C0E  2BF1               	goto	l3043
  7352  1C0F                     u5040:
  7353  1C0F                     l3051:
  7354  1C0F  0875               	movf	___wmul@product+1,w
  7355  1C10  00F1               	movwf	?___wmul+1
  7356  1C11  0874               	movf	___wmul@product,w
  7357  1C12  00F0               	movwf	?___wmul
  7358  1C13                     l376:
  7359  1C13  0008               	return
  7360  1C14                     __end_of___wmul:
  7361                           
  7362                           	psect	text15
  7363  1D32                     __ptext15:	
  7364 ;; *************** function ___llmod *****************
  7365 ;; Defined at:
  7366 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  7367 ;; Parameters:    Size  Location     Type
  7368 ;;  divisor         4    0[COMMON] unsigned long 
  7369 ;;  dividend        4    4[COMMON] unsigned long 
  7370 ;; Auto vars:     Size  Location     Type
  7371 ;;  counter         1    9[COMMON] unsigned char 
  7372 ;; Return value:  Size  Location     Type
  7373 ;;                  4    0[COMMON] unsigned long 
  7374 ;; Registers used:
  7375 ;;		wreg, status,2, status,0
  7376 ;; Tracked objects:
  7377 ;;		On entry : 0/0
  7378 ;;		On exit  : 0/0
  7379 ;;		Unchanged: 0/0
  7380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7381 ;;      Params:         8       0       0       0       0
  7382 ;;      Locals:         1       0       0       0       0
  7383 ;;      Temps:          1       0       0       0       0
  7384 ;;      Totals:        10       0       0       0       0
  7385 ;;Total ram usage:       10 bytes
  7386 ;; Hardware stack levels used:    1
  7387 ;; This function calls:
  7388 ;;		Nothing
  7389 ;; This function is called by:
  7390 ;;		_sprintf
  7391 ;; This function uses a non-reentrant model
  7392 ;;
  7393                           
  7394                           
  7395                           ;psect for function ___llmod
  7396  1D32                     ___llmod:
  7397  1D32                     l3155:	
  7398                           ;incstack = 0
  7399                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7400                           
  7401  1D32  0873               	movf	___llmod@divisor+3,w
  7402  1D33  0472               	iorwf	___llmod@divisor+2,w
  7403  1D34  0471               	iorwf	___llmod@divisor+1,w
  7404  1D35  0470               	iorwf	___llmod@divisor,w
  7405  1D36  1903               	skipnz
  7406  1D37  2D39               	goto	u5331
  7407  1D38  2D3A               	goto	u5330
  7408  1D39                     u5331:
  7409  1D39  2D7D               	goto	l3171
  7410  1D3A                     u5330:
  7411  1D3A                     l3157:
  7412  1D3A  01F9               	clrf	___llmod@counter
  7413  1D3B  0AF9               	incf	___llmod@counter,f
  7414  1D3C  2D4A               	goto	l3161
  7415  1D3D                     l3159:
  7416  1D3D  3001               	movlw	1
  7417  1D3E  00F8               	movwf	??___llmod
  7418  1D3F                     u5345:
  7419  1D3F  1003               	clrc
  7420  1D40  0DF0               	rlf	___llmod@divisor,f
  7421  1D41  0DF1               	rlf	___llmod@divisor+1,f
  7422  1D42  0DF2               	rlf	___llmod@divisor+2,f
  7423  1D43  0DF3               	rlf	___llmod@divisor+3,f
  7424  1D44  0BF8               	decfsz	??___llmod,f
  7425  1D45  2D3F               	goto	u5345
  7426  1D46  3001               	movlw	1
  7427  1D47  00F8               	movwf	??___llmod
  7428  1D48  0878               	movf	??___llmod,w
  7429  1D49  07F9               	addwf	___llmod@counter,f
  7430  1D4A                     l3161:
  7431  1D4A  1FF3               	btfss	___llmod@divisor+3,7
  7432  1D4B  2D4D               	goto	u5351
  7433  1D4C  2D4E               	goto	u5350
  7434  1D4D                     u5351:
  7435  1D4D  2D3D               	goto	l3159
  7436  1D4E                     u5350:
  7437  1D4E                     l3163:
  7438  1D4E  0873               	movf	___llmod@divisor+3,w
  7439  1D4F  0277               	subwf	___llmod@dividend+3,w
  7440  1D50  1D03               	skipz
  7441  1D51  2D5C               	goto	u5365
  7442  1D52  0872               	movf	___llmod@divisor+2,w
  7443  1D53  0276               	subwf	___llmod@dividend+2,w
  7444  1D54  1D03               	skipz
  7445  1D55  2D5C               	goto	u5365
  7446  1D56  0871               	movf	___llmod@divisor+1,w
  7447  1D57  0275               	subwf	___llmod@dividend+1,w
  7448  1D58  1D03               	skipz
  7449  1D59  2D5C               	goto	u5365
  7450  1D5A  0870               	movf	___llmod@divisor,w
  7451  1D5B  0274               	subwf	___llmod@dividend,w
  7452  1D5C                     u5365:
  7453  1D5C  1C03               	skipc
  7454  1D5D  2D5F               	goto	u5361
  7455  1D5E  2D60               	goto	u5360
  7456  1D5F                     u5361:
  7457  1D5F  2D6E               	goto	l3167
  7458  1D60                     u5360:
  7459  1D60                     l3165:
  7460  1D60  0870               	movf	___llmod@divisor,w
  7461  1D61  02F4               	subwf	___llmod@dividend,f
  7462  1D62  0871               	movf	___llmod@divisor+1,w
  7463  1D63  1C03               	skipc
  7464  1D64  0F71               	incfsz	___llmod@divisor+1,w
  7465  1D65  02F5               	subwf	___llmod@dividend+1,f
  7466  1D66  0872               	movf	___llmod@divisor+2,w
  7467  1D67  1C03               	skipc
  7468  1D68  0F72               	incfsz	___llmod@divisor+2,w
  7469  1D69  02F6               	subwf	___llmod@dividend+2,f
  7470  1D6A  0873               	movf	___llmod@divisor+3,w
  7471  1D6B  1C03               	skipc
  7472  1D6C  0F73               	incfsz	___llmod@divisor+3,w
  7473  1D6D  02F7               	subwf	___llmod@dividend+3,f
  7474  1D6E                     l3167:
  7475  1D6E  3001               	movlw	1
  7476  1D6F                     u5375:
  7477  1D6F  1003               	clrc
  7478  1D70  0CF3               	rrf	___llmod@divisor+3,f
  7479  1D71  0CF2               	rrf	___llmod@divisor+2,f
  7480  1D72  0CF1               	rrf	___llmod@divisor+1,f
  7481  1D73  0CF0               	rrf	___llmod@divisor,f
  7482  1D74  3EFF               	addlw	-1
  7483  1D75  1D03               	skipz
  7484  1D76  2D6F               	goto	u5375
  7485  1D77                     l3169:
  7486  1D77  3001               	movlw	1
  7487  1D78  02F9               	subwf	___llmod@counter,f
  7488  1D79  1D03               	btfss	3,2
  7489  1D7A  2D7C               	goto	u5381
  7490  1D7B  2D7D               	goto	u5380
  7491  1D7C                     u5381:
  7492  1D7C  2D4E               	goto	l3163
  7493  1D7D                     u5380:
  7494  1D7D                     l3171:
  7495  1D7D  0877               	movf	___llmod@dividend+3,w
  7496  1D7E  00F3               	movwf	?___llmod+3
  7497  1D7F  0876               	movf	___llmod@dividend+2,w
  7498  1D80  00F2               	movwf	?___llmod+2
  7499  1D81  0875               	movf	___llmod@dividend+1,w
  7500  1D82  00F1               	movwf	?___llmod+1
  7501  1D83  0874               	movf	___llmod@dividend,w
  7502  1D84  00F0               	movwf	?___llmod
  7503  1D85                     l630:
  7504  1D85  0008               	return
  7505  1D86                     __end_of___llmod:
  7506                           
  7507                           	psect	text16
  7508  1E3E                     __ptext16:	
  7509 ;; *************** function ___lldiv *****************
  7510 ;; Defined at:
  7511 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  7512 ;; Parameters:    Size  Location     Type
  7513 ;;  divisor         4    0[COMMON] unsigned long 
  7514 ;;  dividend        4    4[COMMON] unsigned long 
  7515 ;; Auto vars:     Size  Location     Type
  7516 ;;  quotient        4    9[COMMON] unsigned long 
  7517 ;;  counter         1   13[COMMON] unsigned char 
  7518 ;; Return value:  Size  Location     Type
  7519 ;;                  4    0[COMMON] unsigned long 
  7520 ;; Registers used:
  7521 ;;		wreg, status,2, status,0
  7522 ;; Tracked objects:
  7523 ;;		On entry : 0/0
  7524 ;;		On exit  : 0/0
  7525 ;;		Unchanged: 0/0
  7526 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7527 ;;      Params:         8       0       0       0       0
  7528 ;;      Locals:         5       0       0       0       0
  7529 ;;      Temps:          1       0       0       0       0
  7530 ;;      Totals:        14       0       0       0       0
  7531 ;;Total ram usage:       14 bytes
  7532 ;; Hardware stack levels used:    1
  7533 ;; This function calls:
  7534 ;;		Nothing
  7535 ;; This function is called by:
  7536 ;;		_sprintf
  7537 ;; This function uses a non-reentrant model
  7538 ;;
  7539                           
  7540                           
  7541                           ;psect for function ___lldiv
  7542  1E3E                     ___lldiv:
  7543  1E3E                     l3055:	
  7544                           ;incstack = 0
  7545                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7546                           
  7547  1E3E  3000               	movlw	0
  7548  1E3F  00FC               	movwf	___lldiv@quotient+3
  7549  1E40  3000               	movlw	0
  7550  1E41  00FB               	movwf	___lldiv@quotient+2
  7551  1E42  3000               	movlw	0
  7552  1E43  00FA               	movwf	___lldiv@quotient+1
  7553  1E44  3000               	movlw	0
  7554  1E45  00F9               	movwf	___lldiv@quotient
  7555  1E46  0873               	movf	___lldiv@divisor+3,w
  7556  1E47  0472               	iorwf	___lldiv@divisor+2,w
  7557  1E48  0471               	iorwf	___lldiv@divisor+1,w
  7558  1E49  0470               	iorwf	___lldiv@divisor,w
  7559  1E4A  1903               	skipnz
  7560  1E4B  2E4D               	goto	u5051
  7561  1E4C  2E4E               	goto	u5050
  7562  1E4D                     u5051:
  7563  1E4D  2E9B               	goto	l3075
  7564  1E4E                     u5050:
  7565  1E4E                     l3057:
  7566  1E4E  01FD               	clrf	___lldiv@counter
  7567  1E4F  0AFD               	incf	___lldiv@counter,f
  7568  1E50  2E5E               	goto	l3061
  7569  1E51                     l3059:
  7570  1E51  3001               	movlw	1
  7571  1E52  00F8               	movwf	??___lldiv
  7572  1E53                     u5065:
  7573  1E53  1003               	clrc
  7574  1E54  0DF0               	rlf	___lldiv@divisor,f
  7575  1E55  0DF1               	rlf	___lldiv@divisor+1,f
  7576  1E56  0DF2               	rlf	___lldiv@divisor+2,f
  7577  1E57  0DF3               	rlf	___lldiv@divisor+3,f
  7578  1E58  0BF8               	decfsz	??___lldiv,f
  7579  1E59  2E53               	goto	u5065
  7580  1E5A  3001               	movlw	1
  7581  1E5B  00F8               	movwf	??___lldiv
  7582  1E5C  0878               	movf	??___lldiv,w
  7583  1E5D  07FD               	addwf	___lldiv@counter,f
  7584  1E5E                     l3061:
  7585  1E5E  1FF3               	btfss	___lldiv@divisor+3,7
  7586  1E5F  2E61               	goto	u5071
  7587  1E60  2E62               	goto	u5070
  7588  1E61                     u5071:
  7589  1E61  2E51               	goto	l3059
  7590  1E62                     u5070:
  7591  1E62                     l3063:
  7592  1E62  3001               	movlw	1
  7593  1E63  00F8               	movwf	??___lldiv
  7594  1E64                     u5085:
  7595  1E64  1003               	clrc
  7596  1E65  0DF9               	rlf	___lldiv@quotient,f
  7597  1E66  0DFA               	rlf	___lldiv@quotient+1,f
  7598  1E67  0DFB               	rlf	___lldiv@quotient+2,f
  7599  1E68  0DFC               	rlf	___lldiv@quotient+3,f
  7600  1E69  0BF8               	decfsz	??___lldiv,f
  7601  1E6A  2E64               	goto	u5085
  7602  1E6B                     l3065:
  7603  1E6B  0873               	movf	___lldiv@divisor+3,w
  7604  1E6C  0277               	subwf	___lldiv@dividend+3,w
  7605  1E6D  1D03               	skipz
  7606  1E6E  2E79               	goto	u5095
  7607  1E6F  0872               	movf	___lldiv@divisor+2,w
  7608  1E70  0276               	subwf	___lldiv@dividend+2,w
  7609  1E71  1D03               	skipz
  7610  1E72  2E79               	goto	u5095
  7611  1E73  0871               	movf	___lldiv@divisor+1,w
  7612  1E74  0275               	subwf	___lldiv@dividend+1,w
  7613  1E75  1D03               	skipz
  7614  1E76  2E79               	goto	u5095
  7615  1E77  0870               	movf	___lldiv@divisor,w
  7616  1E78  0274               	subwf	___lldiv@dividend,w
  7617  1E79                     u5095:
  7618  1E79  1C03               	skipc
  7619  1E7A  2E7C               	goto	u5091
  7620  1E7B  2E7D               	goto	u5090
  7621  1E7C                     u5091:
  7622  1E7C  2E8C               	goto	l3071
  7623  1E7D                     u5090:
  7624  1E7D                     l3067:
  7625  1E7D  0870               	movf	___lldiv@divisor,w
  7626  1E7E  02F4               	subwf	___lldiv@dividend,f
  7627  1E7F  0871               	movf	___lldiv@divisor+1,w
  7628  1E80  1C03               	skipc
  7629  1E81  0F71               	incfsz	___lldiv@divisor+1,w
  7630  1E82  02F5               	subwf	___lldiv@dividend+1,f
  7631  1E83  0872               	movf	___lldiv@divisor+2,w
  7632  1E84  1C03               	skipc
  7633  1E85  0F72               	incfsz	___lldiv@divisor+2,w
  7634  1E86  02F6               	subwf	___lldiv@dividend+2,f
  7635  1E87  0873               	movf	___lldiv@divisor+3,w
  7636  1E88  1C03               	skipc
  7637  1E89  0F73               	incfsz	___lldiv@divisor+3,w
  7638  1E8A  02F7               	subwf	___lldiv@dividend+3,f
  7639  1E8B                     l3069:
  7640  1E8B  1479               	bsf	___lldiv@quotient,0
  7641  1E8C                     l3071:
  7642  1E8C  3001               	movlw	1
  7643  1E8D                     u5105:
  7644  1E8D  1003               	clrc
  7645  1E8E  0CF3               	rrf	___lldiv@divisor+3,f
  7646  1E8F  0CF2               	rrf	___lldiv@divisor+2,f
  7647  1E90  0CF1               	rrf	___lldiv@divisor+1,f
  7648  1E91  0CF0               	rrf	___lldiv@divisor,f
  7649  1E92  3EFF               	addlw	-1
  7650  1E93  1D03               	skipz
  7651  1E94  2E8D               	goto	u5105
  7652  1E95                     l3073:
  7653  1E95  3001               	movlw	1
  7654  1E96  02FD               	subwf	___lldiv@counter,f
  7655  1E97  1D03               	btfss	3,2
  7656  1E98  2E9A               	goto	u5111
  7657  1E99  2E9B               	goto	u5110
  7658  1E9A                     u5111:
  7659  1E9A  2E62               	goto	l3063
  7660  1E9B                     u5110:
  7661  1E9B                     l3075:
  7662  1E9B  087C               	movf	___lldiv@quotient+3,w
  7663  1E9C  00F3               	movwf	?___lldiv+3
  7664  1E9D  087B               	movf	___lldiv@quotient+2,w
  7665  1E9E  00F2               	movwf	?___lldiv+2
  7666  1E9F  087A               	movf	___lldiv@quotient+1,w
  7667  1EA0  00F1               	movwf	?___lldiv+1
  7668  1EA1  0879               	movf	___lldiv@quotient,w
  7669  1EA2  00F0               	movwf	?___lldiv
  7670  1EA3                     l410:
  7671  1EA3  0008               	return
  7672  1EA4                     __end_of___lldiv:
  7673                           
  7674                           	psect	text17
  7675  0806                     __ptext17:	
  7676 ;; *************** function ___fltol *****************
  7677 ;; Defined at:
  7678 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7679 ;; Parameters:    Size  Location     Type
  7680 ;;  f1              4   49[BANK0 ] unsigned long 
  7681 ;; Auto vars:     Size  Location     Type
  7682 ;;  exp1            1   59[BANK0 ] unsigned char 
  7683 ;;  sign1           1   58[BANK0 ] unsigned char 
  7684 ;; Return value:  Size  Location     Type
  7685 ;;                  4   49[BANK0 ] long 
  7686 ;; Registers used:
  7687 ;;		wreg, status,2, status,0
  7688 ;; Tracked objects:
  7689 ;;		On entry : 0/0
  7690 ;;		On exit  : 0/0
  7691 ;;		Unchanged: 0/0
  7692 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7693 ;;      Params:         0       4       0       0       0
  7694 ;;      Locals:         0       2       0       0       0
  7695 ;;      Temps:          0       5       0       0       0
  7696 ;;      Totals:         0      11       0       0       0
  7697 ;;Total ram usage:       11 bytes
  7698 ;; Hardware stack levels used:    1
  7699 ;; This function calls:
  7700 ;;		Nothing
  7701 ;; This function is called by:
  7702 ;;		_sprintf
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           
  7707                           ;psect for function ___fltol
  7708  0806                     ___fltol:
  7709  0806                     l3119:	
  7710                           ;incstack = 0
  7711                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7712                           
  7713  0806  1003               	clrc
  7714  0807  1283               	bcf	3,5	;RP0=0, select bank0
  7715  0808  1303               	bcf	3,6	;RP1=0, select bank0
  7716  0809  0D53               	rlf	___fltol@f1+2,w
  7717  080A  0D54               	rlf	___fltol@f1+3,w
  7718  080B  00D5               	movwf	??___fltol
  7719  080C  0855               	movf	??___fltol,w
  7720  080D  00DB               	movwf	___fltol@exp1
  7721  080E  085B               	movf	___fltol@exp1,w
  7722  080F  1D03               	btfss	3,2
  7723  0810  2812               	goto	u5231
  7724  0811  2813               	goto	u5230
  7725  0812                     u5231:
  7726  0812  281C               	goto	l3125
  7727  0813                     u5230:
  7728  0813                     l3121:
  7729  0813  3000               	movlw	0
  7730  0814  00D4               	movwf	?___fltol+3
  7731  0815  3000               	movlw	0
  7732  0816  00D3               	movwf	?___fltol+2
  7733  0817  3000               	movlw	0
  7734  0818  00D2               	movwf	?___fltol+1
  7735  0819  3000               	movlw	0
  7736  081A  00D1               	movwf	?___fltol
  7737  081B  2881               	goto	l577
  7738  081C                     l3125:
  7739  081C  0851               	movf	___fltol@f1,w
  7740  081D  00D5               	movwf	??___fltol
  7741  081E  0852               	movf	___fltol@f1+1,w
  7742  081F  00D6               	movwf	??___fltol+1
  7743  0820  0853               	movf	___fltol@f1+2,w
  7744  0821  00D7               	movwf	??___fltol+2
  7745  0822  0854               	movf	___fltol@f1+3,w
  7746  0823  00D8               	movwf	??___fltol+3
  7747  0824  301F               	movlw	31
  7748  0825                     u5245:
  7749  0825  1003               	clrc
  7750  0826  0CD8               	rrf	??___fltol+3,f
  7751  0827  0CD7               	rrf	??___fltol+2,f
  7752  0828  0CD6               	rrf	??___fltol+1,f
  7753  0829  0CD5               	rrf	??___fltol,f
  7754  082A                     u5240:
  7755  082A  3EFF               	addlw	-1
  7756  082B  1D03               	skipz
  7757  082C  2825               	goto	u5245
  7758  082D  0855               	movf	??___fltol,w
  7759  082E  00D9               	movwf	??___fltol+4
  7760  082F  0859               	movf	??___fltol+4,w
  7761  0830  00DA               	movwf	___fltol@sign1
  7762  0831                     l3127:
  7763  0831  17D3               	bsf	___fltol@f1+2,7
  7764  0832                     l3129:
  7765  0832  30FF               	movlw	255
  7766  0833  05D1               	andwf	___fltol@f1,f
  7767  0834  30FF               	movlw	255
  7768  0835  05D2               	andwf	___fltol@f1+1,f
  7769  0836  30FF               	movlw	255
  7770  0837  05D3               	andwf	___fltol@f1+2,f
  7771  0838  3000               	movlw	0
  7772  0839  05D4               	andwf	___fltol@f1+3,f
  7773  083A                     l3131:
  7774  083A  3096               	movlw	150
  7775  083B  02DB               	subwf	___fltol@exp1,f
  7776  083C                     l3133:
  7777  083C  1FDB               	btfss	___fltol@exp1,7
  7778  083D  283F               	goto	u5251
  7779  083E  2840               	goto	u5250
  7780  083F                     u5251:
  7781  083F  285A               	goto	l3143
  7782  0840                     u5250:
  7783  0840                     l3135:
  7784  0840  085B               	movf	___fltol@exp1,w
  7785  0841  3A80               	xorlw	128
  7786  0842  3E97               	addlw	151
  7787  0843  1803               	skipnc
  7788  0844  2846               	goto	u5261
  7789  0845  2847               	goto	u5260
  7790  0846                     u5261:
  7791  0846  2848               	goto	l3141
  7792  0847                     u5260:
  7793  0847  2813               	goto	l3121
  7794  0848                     l3141:
  7795  0848  3001               	movlw	1
  7796  0849                     u5275:
  7797  0849  1003               	clrc
  7798  084A  0CD4               	rrf	___fltol@f1+3,f
  7799  084B  0CD3               	rrf	___fltol@f1+2,f
  7800  084C  0CD2               	rrf	___fltol@f1+1,f
  7801  084D  0CD1               	rrf	___fltol@f1,f
  7802  084E  3EFF               	addlw	-1
  7803  084F  1D03               	skipz
  7804  0850  2849               	goto	u5275
  7805  0851  3001               	movlw	1
  7806  0852  00D5               	movwf	??___fltol
  7807  0853  0855               	movf	??___fltol,w
  7808  0854  07DB               	addwf	___fltol@exp1,f
  7809  0855  1D03               	btfss	3,2
  7810  0856  2858               	goto	u5281
  7811  0857  2859               	goto	u5280
  7812  0858                     u5281:
  7813  0858  2848               	goto	l3141
  7814  0859                     u5280:
  7815  0859  2871               	goto	l3151
  7816  085A                     l3143:
  7817  085A  3020               	movlw	32
  7818  085B  025B               	subwf	___fltol@exp1,w
  7819  085C  1C03               	skipc
  7820  085D  285F               	goto	u5291
  7821  085E  2860               	goto	u5290
  7822  085F                     u5291:
  7823  085F  286C               	goto	l584
  7824  0860                     u5290:
  7825  0860  2813               	goto	l3121
  7826  0861                     l3149:
  7827  0861  3001               	movlw	1
  7828  0862  00D5               	movwf	??___fltol
  7829  0863                     u5305:
  7830  0863  1003               	clrc
  7831  0864  0DD1               	rlf	___fltol@f1,f
  7832  0865  0DD2               	rlf	___fltol@f1+1,f
  7833  0866  0DD3               	rlf	___fltol@f1+2,f
  7834  0867  0DD4               	rlf	___fltol@f1+3,f
  7835  0868  0BD5               	decfsz	??___fltol,f
  7836  0869  2863               	goto	u5305
  7837  086A  3001               	movlw	1
  7838  086B  02DB               	subwf	___fltol@exp1,f
  7839  086C                     l584:
  7840  086C  085B               	movf	___fltol@exp1,w
  7841  086D  1D03               	btfss	3,2
  7842  086E  2870               	goto	u5311
  7843  086F  2871               	goto	u5310
  7844  0870                     u5311:
  7845  0870  2861               	goto	l3149
  7846  0871                     u5310:
  7847  0871                     l3151:
  7848  0871  085A               	movf	___fltol@sign1,w
  7849  0872  1903               	btfsc	3,2
  7850  0873  2875               	goto	u5321
  7851  0874  2876               	goto	u5320
  7852  0875                     u5321:
  7853  0875  2881               	goto	l587
  7854  0876                     u5320:
  7855  0876                     l3153:
  7856  0876  09D1               	comf	___fltol@f1,f
  7857  0877  09D2               	comf	___fltol@f1+1,f
  7858  0878  09D3               	comf	___fltol@f1+2,f
  7859  0879  09D4               	comf	___fltol@f1+3,f
  7860  087A  0AD1               	incf	___fltol@f1,f
  7861  087B  1903               	skipnz
  7862  087C  0AD2               	incf	___fltol@f1+1,f
  7863  087D  1903               	skipnz
  7864  087E  0AD3               	incf	___fltol@f1+2,f
  7865  087F  1903               	skipnz
  7866  0880  0AD4               	incf	___fltol@f1+3,f
  7867  0881                     l587:
  7868  0881                     l577:
  7869  0881  0008               	return
  7870  0882                     __end_of___fltol:
  7871                           
  7872                           	psect	text18
  7873  1BCB                     __ptext18:	
  7874 ;; *************** function ___flsub *****************
  7875 ;; Defined at:
  7876 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7877 ;; Parameters:    Size  Location     Type
  7878 ;;  a               4   70[BANK0 ] long 
  7879 ;;  b               4   74[BANK0 ] long 
  7880 ;; Auto vars:     Size  Location     Type
  7881 ;;		None
  7882 ;; Return value:  Size  Location     Type
  7883 ;;                  4   70[BANK0 ] long 
  7884 ;; Registers used:
  7885 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7886 ;; Tracked objects:
  7887 ;;		On entry : 0/0
  7888 ;;		On exit  : 0/0
  7889 ;;		Unchanged: 0/0
  7890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7891 ;;      Params:         0       8       0       0       0
  7892 ;;      Locals:         0       0       0       0       0
  7893 ;;      Temps:          0       0       0       0       0
  7894 ;;      Totals:         0       8       0       0       0
  7895 ;;Total ram usage:        8 bytes
  7896 ;; Hardware stack levels used:    1
  7897 ;; Hardware stack levels required when called:    1
  7898 ;; This function calls:
  7899 ;;		___fladd
  7900 ;; This function is called by:
  7901 ;;		_sprintf
  7902 ;; This function uses a non-reentrant model
  7903 ;;
  7904                           
  7905                           
  7906                           ;psect for function ___flsub
  7907  1BCB                     ___flsub:
  7908  1BCB                     l3175:	
  7909                           ;incstack = 0
  7910                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7911                           
  7912  1BCB  3080               	movlw	128
  7913  1BCC  1283               	bcf	3,5	;RP0=0, select bank0
  7914  1BCD  1303               	bcf	3,6	;RP1=0, select bank0
  7915  1BCE  06E9               	xorwf	___flsub@a+3,f
  7916  1BCF                     l3177:
  7917  1BCF  086D               	movf	___flsub@b+3,w
  7918  1BD0  00D5               	movwf	___fladd@b+3
  7919  1BD1  086C               	movf	___flsub@b+2,w
  7920  1BD2  00D4               	movwf	___fladd@b+2
  7921  1BD3  086B               	movf	___flsub@b+1,w
  7922  1BD4  00D3               	movwf	___fladd@b+1
  7923  1BD5  086A               	movf	___flsub@b,w
  7924  1BD6  00D2               	movwf	___fladd@b
  7925  1BD7  0869               	movf	___flsub@a+3,w
  7926  1BD8  00D9               	movwf	___fladd@a+3
  7927  1BD9  0868               	movf	___flsub@a+2,w
  7928  1BDA  00D8               	movwf	___fladd@a+2
  7929  1BDB  0867               	movf	___flsub@a+1,w
  7930  1BDC  00D7               	movwf	___fladd@a+1
  7931  1BDD  0866               	movf	___flsub@a,w
  7932  1BDE  00D6               	movwf	___fladd@a
  7933  1BDF  160A  118A  2578  160A  158A  	fcall	___fladd
  7934  1BE4  1283               	bcf	3,5	;RP0=0, select bank0
  7935  1BE5  1303               	bcf	3,6	;RP1=0, select bank0
  7936  1BE6  0855               	movf	?___fladd+3,w
  7937  1BE7  00E9               	movwf	?___flsub+3
  7938  1BE8  0854               	movf	?___fladd+2,w
  7939  1BE9  00E8               	movwf	?___flsub+2
  7940  1BEA  0853               	movf	?___fladd+1,w
  7941  1BEB  00E7               	movwf	?___flsub+1
  7942  1BEC  0852               	movf	?___fladd,w
  7943  1BED  00E6               	movwf	?___flsub
  7944  1BEE                     l747:
  7945  1BEE  0008               	return
  7946  1BEF                     __end_of___flsub:
  7947                           
  7948                           	psect	text19
  7949  1B36                     __ptext19:	
  7950 ;; *************** function ___flneg *****************
  7951 ;; Defined at:
  7952 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7953 ;; Parameters:    Size  Location     Type
  7954 ;;  f1              4    0[COMMON] long 
  7955 ;; Auto vars:     Size  Location     Type
  7956 ;;		None
  7957 ;; Return value:  Size  Location     Type
  7958 ;;                  4    0[COMMON] long 
  7959 ;; Registers used:
  7960 ;;		wreg
  7961 ;; Tracked objects:
  7962 ;;		On entry : 0/0
  7963 ;;		On exit  : 0/0
  7964 ;;		Unchanged: 0/0
  7965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7966 ;;      Params:         4       0       0       0       0
  7967 ;;      Locals:         0       0       0       0       0
  7968 ;;      Temps:          0       0       0       0       0
  7969 ;;      Totals:         4       0       0       0       0
  7970 ;;Total ram usage:        4 bytes
  7971 ;; Hardware stack levels used:    1
  7972 ;; This function calls:
  7973 ;;		Nothing
  7974 ;; This function is called by:
  7975 ;;		_sprintf
  7976 ;; This function uses a non-reentrant model
  7977 ;;
  7978                           
  7979                           
  7980                           ;psect for function ___flneg
  7981  1B36                     ___flneg:
  7982  1B36                     l3111:	
  7983                           ;incstack = 0
  7984                           ; Regs used in ___flneg: [wreg]
  7985                           
  7986  1B36  0873               	movf	___flneg@f1+3,w
  7987  1B37  0472               	iorwf	___flneg@f1+2,w
  7988  1B38  0471               	iorwf	___flneg@f1+1,w
  7989  1B39  0470               	iorwf	___flneg@f1,w
  7990  1B3A  1903               	skipnz
  7991  1B3B  2B3D               	goto	u5221
  7992  1B3C  2B3E               	goto	u5220
  7993  1B3D                     u5221:
  7994  1B3D  2B40               	goto	l3115
  7995  1B3E                     u5220:
  7996  1B3E                     l3113:
  7997  1B3E  3080               	movlw	128
  7998  1B3F  06F3               	xorwf	___flneg@f1+3,f
  7999  1B40                     l3115:
  8000  1B40                     l573:
  8001  1B40  0008               	return
  8002  1B41                     __end_of___flneg:
  8003                           
  8004                           	psect	text20
  8005  1154                     __ptext20:	
  8006 ;; *************** function ___flge *****************
  8007 ;; Defined at:
  8008 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8009 ;; Parameters:    Size  Location     Type
  8010 ;;  ff1             4    0[COMMON] long 
  8011 ;;  ff2             4    4[COMMON] long 
  8012 ;; Auto vars:     Size  Location     Type
  8013 ;;		None
  8014 ;; Return value:  Size  Location     Type
  8015 ;;		None               void
  8016 ;; Registers used:
  8017 ;;		wreg, status,2, status,0
  8018 ;; Tracked objects:
  8019 ;;		On entry : 0/0
  8020 ;;		On exit  : 0/0
  8021 ;;		Unchanged: 0/0
  8022 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8023 ;;      Params:         8       0       0       0       0
  8024 ;;      Locals:         0       0       0       0       0
  8025 ;;      Temps:          4       0       0       0       0
  8026 ;;      Totals:        12       0       0       0       0
  8027 ;;Total ram usage:       12 bytes
  8028 ;; Hardware stack levels used:    1
  8029 ;; This function calls:
  8030 ;;		Nothing
  8031 ;; This function is called by:
  8032 ;;		_sprintf
  8033 ;; This function uses a non-reentrant model
  8034 ;;
  8035                           
  8036                           
  8037                           ;psect for function ___flge
  8038  1154                     ___flge:
  8039  1154                     l3091:	
  8040                           ;incstack = 0
  8041                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8042                           
  8043  1154  3000               	movlw	0
  8044  1155  0570               	andwf	___flge@ff1,w
  8045  1156  00F8               	movwf	??___flge
  8046  1157  3000               	movlw	0
  8047  1158  0571               	andwf	___flge@ff1+1,w
  8048  1159  00F9               	movwf	??___flge+1
  8049  115A  3080               	movlw	128
  8050  115B  0572               	andwf	___flge@ff1+2,w
  8051  115C  00FA               	movwf	??___flge+2
  8052  115D  307F               	movlw	127
  8053  115E  0573               	andwf	___flge@ff1+3,w
  8054  115F  00FB               	movwf	??___flge+3
  8055  1160  087B               	movf	??___flge+3,w
  8056  1161  047A               	iorwf	??___flge+2,w
  8057  1162  0479               	iorwf	??___flge+1,w
  8058  1163  0478               	iorwf	??___flge,w
  8059  1164  1D03               	skipz
  8060  1165  2967               	goto	u5151
  8061  1166  2968               	goto	u5150
  8062  1167                     u5151:
  8063  1167  2970               	goto	l565
  8064  1168                     u5150:
  8065  1168                     l3093:
  8066  1168  3000               	movlw	0
  8067  1169  00F3               	movwf	___flge@ff1+3
  8068  116A  3000               	movlw	0
  8069  116B  00F2               	movwf	___flge@ff1+2
  8070  116C  3000               	movlw	0
  8071  116D  00F1               	movwf	___flge@ff1+1
  8072  116E  3000               	movlw	0
  8073  116F  00F0               	movwf	___flge@ff1
  8074  1170                     l565:
  8075  1170  3000               	movlw	0
  8076  1171  0574               	andwf	___flge@ff2,w
  8077  1172  00F8               	movwf	??___flge
  8078  1173  3000               	movlw	0
  8079  1174  0575               	andwf	___flge@ff2+1,w
  8080  1175  00F9               	movwf	??___flge+1
  8081  1176  3080               	movlw	128
  8082  1177  0576               	andwf	___flge@ff2+2,w
  8083  1178  00FA               	movwf	??___flge+2
  8084  1179  307F               	movlw	127
  8085  117A  0577               	andwf	___flge@ff2+3,w
  8086  117B  00FB               	movwf	??___flge+3
  8087  117C  087B               	movf	??___flge+3,w
  8088  117D  047A               	iorwf	??___flge+2,w
  8089  117E  0479               	iorwf	??___flge+1,w
  8090  117F  0478               	iorwf	??___flge,w
  8091  1180  1D03               	skipz
  8092  1181  2983               	goto	u5161
  8093  1182  2984               	goto	u5160
  8094  1183                     u5161:
  8095  1183  298C               	goto	l3097
  8096  1184                     u5160:
  8097  1184                     l3095:
  8098  1184  3000               	movlw	0
  8099  1185  00F7               	movwf	___flge@ff2+3
  8100  1186  3000               	movlw	0
  8101  1187  00F6               	movwf	___flge@ff2+2
  8102  1188  3000               	movlw	0
  8103  1189  00F5               	movwf	___flge@ff2+1
  8104  118A  3000               	movlw	0
  8105  118B  00F4               	movwf	___flge@ff2
  8106  118C                     l3097:
  8107  118C  1FF3               	btfss	___flge@ff1+3,7
  8108  118D  298F               	goto	u5171
  8109  118E  2990               	goto	u5170
  8110  118F                     u5171:
  8111  118F  29B4               	goto	l3101
  8112  1190                     u5170:
  8113  1190                     l3099:
  8114  1190  3000               	movlw	0
  8115  1191  00F8               	movwf	??___flge
  8116  1192  3000               	movlw	0
  8117  1193  00F9               	movwf	??___flge+1
  8118  1194  3000               	movlw	0
  8119  1195  00FA               	movwf	??___flge+2
  8120  1196  3080               	movlw	128
  8121  1197  00FB               	movwf	??___flge+3
  8122  1198  0870               	movf	___flge@ff1,w
  8123  1199  02F8               	subwf	??___flge,f
  8124  119A  0871               	movf	___flge@ff1+1,w
  8125  119B  1C03               	skipc
  8126  119C  0F71               	incfsz	___flge@ff1+1,w
  8127  119D  299F               	goto	u5181
  8128  119E  29A0               	goto	u5182
  8129  119F                     u5181:
  8130  119F  02F9               	subwf	??___flge+1,f
  8131  11A0                     u5182:
  8132  11A0  0872               	movf	___flge@ff1+2,w
  8133  11A1  1C03               	skipc
  8134  11A2  0F72               	incfsz	___flge@ff1+2,w
  8135  11A3  29A5               	goto	u5183
  8136  11A4  29A6               	goto	u5184
  8137  11A5                     u5183:
  8138  11A5  02FA               	subwf	??___flge+2,f
  8139  11A6                     u5184:
  8140  11A6  0873               	movf	___flge@ff1+3,w
  8141  11A7  1C03               	skipc
  8142  11A8  0F73               	incfsz	___flge@ff1+3,w
  8143  11A9  29AB               	goto	u5185
  8144  11AA  29AC               	goto	u5186
  8145  11AB                     u5185:
  8146  11AB  02FB               	subwf	??___flge+3,f
  8147  11AC                     u5186:
  8148  11AC  087B               	movf	??___flge+3,w
  8149  11AD  00F3               	movwf	___flge@ff1+3
  8150  11AE  087A               	movf	??___flge+2,w
  8151  11AF  00F2               	movwf	___flge@ff1+2
  8152  11B0  0879               	movf	??___flge+1,w
  8153  11B1  00F1               	movwf	___flge@ff1+1
  8154  11B2  0878               	movf	??___flge,w
  8155  11B3  00F0               	movwf	___flge@ff1
  8156  11B4                     l3101:
  8157  11B4  1FF7               	btfss	___flge@ff2+3,7
  8158  11B5  29B7               	goto	u5191
  8159  11B6  29B8               	goto	u5190
  8160  11B7                     u5191:
  8161  11B7  29DC               	goto	l568
  8162  11B8                     u5190:
  8163  11B8                     l3103:
  8164  11B8  3000               	movlw	0
  8165  11B9  00F8               	movwf	??___flge
  8166  11BA  3000               	movlw	0
  8167  11BB  00F9               	movwf	??___flge+1
  8168  11BC  3000               	movlw	0
  8169  11BD  00FA               	movwf	??___flge+2
  8170  11BE  3080               	movlw	128
  8171  11BF  00FB               	movwf	??___flge+3
  8172  11C0  0874               	movf	___flge@ff2,w
  8173  11C1  02F8               	subwf	??___flge,f
  8174  11C2  0875               	movf	___flge@ff2+1,w
  8175  11C3  1C03               	skipc
  8176  11C4  0F75               	incfsz	___flge@ff2+1,w
  8177  11C5  29C7               	goto	u5201
  8178  11C6  29C8               	goto	u5202
  8179  11C7                     u5201:
  8180  11C7  02F9               	subwf	??___flge+1,f
  8181  11C8                     u5202:
  8182  11C8  0876               	movf	___flge@ff2+2,w
  8183  11C9  1C03               	skipc
  8184  11CA  0F76               	incfsz	___flge@ff2+2,w
  8185  11CB  29CD               	goto	u5203
  8186  11CC  29CE               	goto	u5204
  8187  11CD                     u5203:
  8188  11CD  02FA               	subwf	??___flge+2,f
  8189  11CE                     u5204:
  8190  11CE  0877               	movf	___flge@ff2+3,w
  8191  11CF  1C03               	skipc
  8192  11D0  0F77               	incfsz	___flge@ff2+3,w
  8193  11D1  29D3               	goto	u5205
  8194  11D2  29D4               	goto	u5206
  8195  11D3                     u5205:
  8196  11D3  02FB               	subwf	??___flge+3,f
  8197  11D4                     u5206:
  8198  11D4  087B               	movf	??___flge+3,w
  8199  11D5  00F7               	movwf	___flge@ff2+3
  8200  11D6  087A               	movf	??___flge+2,w
  8201  11D7  00F6               	movwf	___flge@ff2+2
  8202  11D8  0879               	movf	??___flge+1,w
  8203  11D9  00F5               	movwf	___flge@ff2+1
  8204  11DA  0878               	movf	??___flge,w
  8205  11DB  00F4               	movwf	___flge@ff2
  8206  11DC                     l568:
  8207  11DC  3080               	movlw	128
  8208  11DD  06F3               	xorwf	___flge@ff1+3,f
  8209  11DE  3080               	movlw	128
  8210  11DF  06F7               	xorwf	___flge@ff2+3,f
  8211  11E0  0877               	movf	___flge@ff2+3,w
  8212  11E1  0273               	subwf	___flge@ff1+3,w
  8213  11E2  1D03               	skipz
  8214  11E3  29EE               	goto	u5215
  8215  11E4  0876               	movf	___flge@ff2+2,w
  8216  11E5  0272               	subwf	___flge@ff1+2,w
  8217  11E6  1D03               	skipz
  8218  11E7  29EE               	goto	u5215
  8219  11E8  0875               	movf	___flge@ff2+1,w
  8220  11E9  0271               	subwf	___flge@ff1+1,w
  8221  11EA  1D03               	skipz
  8222  11EB  29EE               	goto	u5215
  8223  11EC  0874               	movf	___flge@ff2,w
  8224  11ED  0270               	subwf	___flge@ff1,w
  8225  11EE                     u5215:
  8226  11EE  1803               	skipnc
  8227  11EF  29F1               	goto	u5211
  8228  11F0  29F2               	goto	u5210
  8229  11F1                     u5211:
  8230  11F1  29F4               	goto	l3107
  8231  11F2                     u5210:
  8232  11F2                     l3105:
  8233  11F2  1003               	clrc
  8234  11F3  29F5               	goto	l569
  8235  11F4                     l3107:
  8236  11F4  1403               	setc
  8237  11F5                     l569:
  8238  11F5  0008               	return
  8239  11F6                     __end_of___flge:
  8240                           
  8241                           	psect	text21
  8242  1CE4                     __ptext21:	
  8243 ;; *************** function ___fleq *****************
  8244 ;; Defined at:
  8245 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8246 ;; Parameters:    Size  Location     Type
  8247 ;;  ff1             4    0[COMMON] long 
  8248 ;;  ff2             4    4[COMMON] long 
  8249 ;; Auto vars:     Size  Location     Type
  8250 ;;		None
  8251 ;; Return value:  Size  Location     Type
  8252 ;;		None               void
  8253 ;; Registers used:
  8254 ;;		wreg, status,2, status,0
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8260 ;;      Params:         8       0       0       0       0
  8261 ;;      Locals:         0       0       0       0       0
  8262 ;;      Temps:          4       0       0       0       0
  8263 ;;      Totals:        12       0       0       0       0
  8264 ;;Total ram usage:       12 bytes
  8265 ;; Hardware stack levels used:    1
  8266 ;; This function calls:
  8267 ;;		Nothing
  8268 ;; This function is called by:
  8269 ;;		_sprintf
  8270 ;; This function uses a non-reentrant model
  8271 ;;
  8272                           
  8273                           
  8274                           ;psect for function ___fleq
  8275  1CE4                     ___fleq:
  8276  1CE4                     l3079:	
  8277                           ;incstack = 0
  8278                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8279                           
  8280  1CE4  3000               	movlw	0
  8281  1CE5  0570               	andwf	___fleq@ff1,w
  8282  1CE6  00F8               	movwf	??___fleq
  8283  1CE7  3000               	movlw	0
  8284  1CE8  0571               	andwf	___fleq@ff1+1,w
  8285  1CE9  00F9               	movwf	??___fleq+1
  8286  1CEA  3080               	movlw	128
  8287  1CEB  0572               	andwf	___fleq@ff1+2,w
  8288  1CEC  00FA               	movwf	??___fleq+2
  8289  1CED  307F               	movlw	127
  8290  1CEE  0573               	andwf	___fleq@ff1+3,w
  8291  1CEF  00FB               	movwf	??___fleq+3
  8292  1CF0  087B               	movf	??___fleq+3,w
  8293  1CF1  047A               	iorwf	??___fleq+2,w
  8294  1CF2  0479               	iorwf	??___fleq+1,w
  8295  1CF3  0478               	iorwf	??___fleq,w
  8296  1CF4  1D03               	skipz
  8297  1CF5  2CF7               	goto	u5121
  8298  1CF6  2CF8               	goto	u5120
  8299  1CF7                     u5121:
  8300  1CF7  2D00               	goto	l560
  8301  1CF8                     u5120:
  8302  1CF8                     l3081:
  8303  1CF8  3000               	movlw	0
  8304  1CF9  00F3               	movwf	___fleq@ff1+3
  8305  1CFA  3000               	movlw	0
  8306  1CFB  00F2               	movwf	___fleq@ff1+2
  8307  1CFC  3000               	movlw	0
  8308  1CFD  00F1               	movwf	___fleq@ff1+1
  8309  1CFE  3000               	movlw	0
  8310  1CFF  00F0               	movwf	___fleq@ff1
  8311  1D00                     l560:
  8312  1D00  3000               	movlw	0
  8313  1D01  0574               	andwf	___fleq@ff2,w
  8314  1D02  00F8               	movwf	??___fleq
  8315  1D03  3000               	movlw	0
  8316  1D04  0575               	andwf	___fleq@ff2+1,w
  8317  1D05  00F9               	movwf	??___fleq+1
  8318  1D06  3080               	movlw	128
  8319  1D07  0576               	andwf	___fleq@ff2+2,w
  8320  1D08  00FA               	movwf	??___fleq+2
  8321  1D09  307F               	movlw	127
  8322  1D0A  0577               	andwf	___fleq@ff2+3,w
  8323  1D0B  00FB               	movwf	??___fleq+3
  8324  1D0C  087B               	movf	??___fleq+3,w
  8325  1D0D  047A               	iorwf	??___fleq+2,w
  8326  1D0E  0479               	iorwf	??___fleq+1,w
  8327  1D0F  0478               	iorwf	??___fleq,w
  8328  1D10  1D03               	skipz
  8329  1D11  2D13               	goto	u5131
  8330  1D12  2D14               	goto	u5130
  8331  1D13                     u5131:
  8332  1D13  2D1C               	goto	l561
  8333  1D14                     u5130:
  8334  1D14                     l3083:
  8335  1D14  3000               	movlw	0
  8336  1D15  00F7               	movwf	___fleq@ff2+3
  8337  1D16  3000               	movlw	0
  8338  1D17  00F6               	movwf	___fleq@ff2+2
  8339  1D18  3000               	movlw	0
  8340  1D19  00F5               	movwf	___fleq@ff2+1
  8341  1D1A  3000               	movlw	0
  8342  1D1B  00F4               	movwf	___fleq@ff2
  8343  1D1C                     l561:
  8344  1D1C  0877               	movf	___fleq@ff2+3,w
  8345  1D1D  0673               	xorwf	___fleq@ff1+3,w
  8346  1D1E  1D03               	skipz
  8347  1D1F  2D2A               	goto	u5145
  8348  1D20  0876               	movf	___fleq@ff2+2,w
  8349  1D21  0672               	xorwf	___fleq@ff1+2,w
  8350  1D22  1D03               	skipz
  8351  1D23  2D2A               	goto	u5145
  8352  1D24  0875               	movf	___fleq@ff2+1,w
  8353  1D25  0671               	xorwf	___fleq@ff1+1,w
  8354  1D26  1D03               	skipz
  8355  1D27  2D2A               	goto	u5145
  8356  1D28  0874               	movf	___fleq@ff2,w
  8357  1D29  0670               	xorwf	___fleq@ff1,w
  8358  1D2A                     u5145:
  8359  1D2A  1903               	skipnz
  8360  1D2B  2D2D               	goto	u5141
  8361  1D2C  2D2E               	goto	u5140
  8362  1D2D                     u5141:
  8363  1D2D  2D30               	goto	l3087
  8364  1D2E                     u5140:
  8365  1D2E                     l3085:
  8366  1D2E  1003               	clrc
  8367  1D2F  2D31               	goto	l562
  8368  1D30                     l3087:
  8369  1D30  1403               	setc
  8370  1D31                     l562:
  8371  1D31  0008               	return
  8372  1D32                     __end_of___fleq:
  8373                           
  8374                           	psect	text22
  8375  1B8F                     __ptext22:	
  8376 ;; *************** function _setup *****************
  8377 ;; Defined at:
  8378 ;;		line 38 in file "main.c"
  8379 ;; Parameters:    Size  Location     Type
  8380 ;;		None
  8381 ;; Auto vars:     Size  Location     Type
  8382 ;;		None
  8383 ;; Return value:  Size  Location     Type
  8384 ;;                  1    wreg      void 
  8385 ;; Registers used:
  8386 ;;		wreg, status,2
  8387 ;; Tracked objects:
  8388 ;;		On entry : 0/0
  8389 ;;		On exit  : 0/0
  8390 ;;		Unchanged: 0/0
  8391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8392 ;;      Params:         0       0       0       0       0
  8393 ;;      Locals:         0       0       0       0       0
  8394 ;;      Temps:          0       0       0       0       0
  8395 ;;      Totals:         0       0       0       0       0
  8396 ;;Total ram usage:        0 bytes
  8397 ;; Hardware stack levels used:    1
  8398 ;; This function calls:
  8399 ;;		Nothing
  8400 ;; This function is called by:
  8401 ;;		_main
  8402 ;; This function uses a non-reentrant model
  8403 ;;
  8404                           
  8405                           
  8406                           ;psect for function _setup
  8407  1B8F                     _setup:
  8408  1B8F                     l3201:	
  8409                           ;incstack = 0
  8410                           ; Regs used in _setup: [wreg+status,2]
  8411                           
  8412                           
  8413                           ;main.c: 39:     ANSEL = 0;
  8414  1B8F  1683               	bsf	3,5	;RP0=1, select bank3
  8415  1B90  1703               	bsf	3,6	;RP1=1, select bank3
  8416  1B91  0188               	clrf	8	;volatile
  8417                           
  8418                           ;main.c: 40:     ANSELH = 0;
  8419  1B92  0189               	clrf	9	;volatile
  8420                           
  8421                           ;main.c: 41:     TRISB = 0;
  8422  1B93  1683               	bsf	3,5	;RP0=1, select bank1
  8423  1B94  1303               	bcf	3,6	;RP1=0, select bank1
  8424  1B95  0186               	clrf	6	;volatile
  8425                           
  8426                           ;main.c: 42:     PORTB = 0;
  8427  1B96  1283               	bcf	3,5	;RP0=0, select bank0
  8428  1B97  1303               	bcf	3,6	;RP1=0, select bank0
  8429  1B98  0186               	clrf	6	;volatile
  8430  1B99                     l3203:
  8431                           
  8432                           ;main.c: 44:     TRISC = 0b10000000;
  8433  1B99  3080               	movlw	128
  8434  1B9A  1683               	bsf	3,5	;RP0=1, select bank1
  8435  1B9B  1303               	bcf	3,6	;RP1=0, select bank1
  8436  1B9C  0087               	movwf	7	;volatile
  8437  1B9D                     l3205:
  8438                           
  8439                           ;main.c: 45:     PORTC = 0;
  8440  1B9D  1283               	bcf	3,5	;RP0=0, select bank0
  8441  1B9E  1303               	bcf	3,6	;RP1=0, select bank0
  8442  1B9F  0187               	clrf	7	;volatile
  8443  1BA0                     l3207:
  8444                           
  8445                           ;main.c: 46:     TRISD = 0b00000000;
  8446  1BA0  1683               	bsf	3,5	;RP0=1, select bank1
  8447  1BA1  1303               	bcf	3,6	;RP1=0, select bank1
  8448  1BA2  0188               	clrf	8	;volatile
  8449  1BA3                     l3209:
  8450                           
  8451                           ;main.c: 47:     PORTD = 0b00000000;
  8452  1BA3  1283               	bcf	3,5	;RP0=0, select bank0
  8453  1BA4  1303               	bcf	3,6	;RP1=0, select bank0
  8454  1BA5  0188               	clrf	8	;volatile
  8455  1BA6                     l128:
  8456  1BA6  0008               	return
  8457  1BA7                     __end_of_setup:
  8458                           
  8459                           	psect	text23
  8460  1EA4                     __ptext23:	
  8461 ;; *************** function _LM75_read *****************
  8462 ;; Defined at:
  8463 ;;		line 17 in file "./LM75.h"
  8464 ;; Parameters:    Size  Location     Type
  8465 ;;  regAddress      1    wreg     unsigned char 
  8466 ;; Auto vars:     Size  Location     Type
  8467 ;;  regAddress      1   11[BANK1 ] unsigned char 
  8468 ;;  LSB             2    9[BANK1 ] int 
  8469 ;;  MSB             2    7[BANK1 ] int 
  8470 ;; Return value:  Size  Location     Type
  8471 ;;                  4   76[BANK0 ] float 
  8472 ;; Registers used:
  8473 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8474 ;; Tracked objects:
  8475 ;;		On entry : 0/0
  8476 ;;		On exit  : 0/0
  8477 ;;		Unchanged: 0/0
  8478 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8479 ;;      Params:         0       4       0       0       0
  8480 ;;      Locals:         0       0       5       0       0
  8481 ;;      Temps:          0       0       2       0       0
  8482 ;;      Totals:         0       4       7       0       0
  8483 ;;Total ram usage:       11 bytes
  8484 ;; Hardware stack levels used:    1
  8485 ;; Hardware stack levels required when called:    2
  8486 ;; This function calls:
  8487 ;;		_I2C_read
  8488 ;;		_I2C_restart
  8489 ;;		_I2C_start
  8490 ;;		_I2C_stop
  8491 ;;		_I2C_write
  8492 ;;		_toFloat
  8493 ;; This function is called by:
  8494 ;;		_main
  8495 ;; This function uses a non-reentrant model
  8496 ;;
  8497                           
  8498                           
  8499                           ;psect for function _LM75_read
  8500  1EA4                     _LM75_read:
  8501                           
  8502                           ;incstack = 0
  8503                           ; Regs used in _LM75_read: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8504                           ;LM75_read@regAddress stored from wreg
  8505  1EA4  1683               	bsf	3,5	;RP0=1, select bank1
  8506  1EA5  1303               	bcf	3,6	;RP1=0, select bank1
  8507  1EA6  00AB               	movwf	LM75_read@regAddress^(0+128)
  8508  1EA7                     l3183:
  8509                           
  8510                           ;./LM75.h: 17: float LM75_read(char regAddress);./LM75.h: 18: {;./LM75.h: 19:   signed i
      +                          nt MSB,LSB;;./LM75.h: 21:   I2C_start();
  8511  1EA7  160A  158A  230D  160A  158A  	fcall	_I2C_start
  8512  1EAC                     l3185:
  8513                           
  8514                           ;./LM75.h: 23:   I2C_write(0x90 + 0);
  8515  1EAC  3090               	movlw	144
  8516  1EAD  160A  158A  232B  160A  158A  	fcall	_I2C_write
  8517  1EB2                     l3187:
  8518                           
  8519                           ;./LM75.h: 24:   I2C_write(regAddress);
  8520  1EB2  1683               	bsf	3,5	;RP0=1, select bank1
  8521  1EB3  1303               	bcf	3,6	;RP1=0, select bank1
  8522  1EB4  082B               	movf	LM75_read@regAddress^(0+128),w
  8523  1EB5  160A  158A  232B  160A  158A  	fcall	_I2C_write
  8524                           
  8525                           ;./LM75.h: 25:   I2C_restart();
  8526  1EBA  160A  158A  2321  160A  158A  	fcall	_I2C_restart
  8527  1EBF                     l3189:
  8528                           
  8529                           ;./LM75.h: 26:   I2C_write(0x90 + 1);
  8530  1EBF  3091               	movlw	145
  8531  1EC0  160A  158A  232B  160A  158A  	fcall	_I2C_write
  8532  1EC5                     l3191:
  8533                           
  8534                           ;./LM75.h: 27:   MSB = I2C_read(0);
  8535  1EC5  3000               	movlw	0
  8536  1EC6  160A  158A  2366  160A  158A  	fcall	_I2C_read
  8537  1ECB  1683               	bsf	3,5	;RP0=1, select bank1
  8538  1ECC  1303               	bcf	3,6	;RP1=0, select bank1
  8539  1ECD  00A5               	movwf	??_LM75_read^(0+128)
  8540  1ECE  01A6               	clrf	(??_LM75_read^(0+128)+1)
  8541  1ECF  0825               	movf	??_LM75_read^(0+128),w
  8542  1ED0  00A7               	movwf	LM75_read@MSB^(0+128)
  8543  1ED1  0826               	movf	(??_LM75_read+1)^(0+128),w
  8544  1ED2  00A8               	movwf	(LM75_read@MSB+1)^(0+128)
  8545  1ED3                     l3193:
  8546                           
  8547                           ;./LM75.h: 28:   LSB = I2C_read(1);
  8548  1ED3  3001               	movlw	1
  8549  1ED4  160A  158A  2366  160A  158A  	fcall	_I2C_read
  8550  1ED9  1683               	bsf	3,5	;RP0=1, select bank1
  8551  1EDA  1303               	bcf	3,6	;RP1=0, select bank1
  8552  1EDB  00A5               	movwf	??_LM75_read^(0+128)
  8553  1EDC  01A6               	clrf	(??_LM75_read^(0+128)+1)
  8554  1EDD  0825               	movf	??_LM75_read^(0+128),w
  8555  1EDE  00A9               	movwf	LM75_read@LSB^(0+128)
  8556  1EDF  0826               	movf	(??_LM75_read+1)^(0+128),w
  8557  1EE0  00AA               	movwf	(LM75_read@LSB+1)^(0+128)
  8558  1EE1                     l3195:
  8559                           
  8560                           ;./LM75.h: 30:   I2C_stop();
  8561  1EE1  160A  158A  2317  160A  158A  	fcall	_I2C_stop
  8562  1EE6                     l3197:
  8563                           
  8564                           ;./LM75.h: 32:   return toFloat((MSB << 8) + LSB);
  8565  1EE6  1683               	bsf	3,5	;RP0=1, select bank1
  8566  1EE7  1303               	bcf	3,6	;RP1=0, select bank1
  8567  1EE8  0828               	movf	(LM75_read@MSB+1)^(0+128),w
  8568  1EE9  00A6               	movwf	(??_LM75_read^(0+128)+1)
  8569  1EEA  0827               	movf	LM75_read@MSB^(0+128),w
  8570  1EEB  00A5               	movwf	??_LM75_read^(0+128)
  8571  1EEC  0825               	movf	??_LM75_read^(0+128),w
  8572  1EED  00A6               	movwf	(??_LM75_read^(0+128)+1)
  8573  1EEE  01A5               	clrf	??_LM75_read^(0+128)
  8574  1EEF  0829               	movf	LM75_read@LSB^(0+128),w
  8575  1EF0  0725               	addwf	??_LM75_read^(0+128),w
  8576  1EF1  1283               	bcf	3,5	;RP0=0, select bank0
  8577  1EF2  1303               	bcf	3,6	;RP1=0, select bank0
  8578  1EF3  00E6               	movwf	toFloat@tempr
  8579  1EF4  1683               	bsf	3,5	;RP0=1, select bank1
  8580  1EF5  1303               	bcf	3,6	;RP1=0, select bank1
  8581  1EF6  082A               	movf	(LM75_read@LSB+1)^(0+128),w
  8582  1EF7  1803               	skipnc
  8583  1EF8  0A2A               	incf	(LM75_read@LSB+1)^(0+128),w
  8584  1EF9  0726               	addwf	(??_LM75_read+1)^(0+128),w
  8585  1EFA  1283               	bcf	3,5	;RP0=0, select bank0
  8586  1EFB  1303               	bcf	3,6	;RP1=0, select bank0
  8587  1EFC  00E7               	movwf	toFloat@tempr+1
  8588  1EFD  160A  158A  2776  160A  158A  	fcall	_toFloat
  8589  1F02  1283               	bcf	3,5	;RP0=0, select bank0
  8590  1F03  1303               	bcf	3,6	;RP1=0, select bank0
  8591  1F04  0869               	movf	?_toFloat+3,w
  8592  1F05  00EF               	movwf	?_LM75_read+3
  8593  1F06  0868               	movf	?_toFloat+2,w
  8594  1F07  00EE               	movwf	?_LM75_read+2
  8595  1F08  0867               	movf	?_toFloat+1,w
  8596  1F09  00ED               	movwf	?_LM75_read+1
  8597  1F0A  0866               	movf	?_toFloat,w
  8598  1F0B  00EC               	movwf	?_LM75_read
  8599  1F0C                     l108:
  8600  1F0C  0008               	return
  8601  1F0D                     __end_of_LM75_read:
  8602                           
  8603                           	psect	text24
  8604  1F76                     __ptext24:	
  8605 ;; *************** function _toFloat *****************
  8606 ;; Defined at:
  8607 ;;		line 73 in file "./LM75.h"
  8608 ;; Parameters:    Size  Location     Type
  8609 ;;  tempr           2   70[BANK0 ] int 
  8610 ;; Auto vars:     Size  Location     Type
  8611 ;;  result          4    1[BANK1 ] float 
  8612 ;;  isfraction      1    0[BANK1 ] unsigned char 
  8613 ;; Return value:  Size  Location     Type
  8614 ;;                  4   70[BANK0 ] float 
  8615 ;; Registers used:
  8616 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8617 ;; Tracked objects:
  8618 ;;		On entry : 0/0
  8619 ;;		On exit  : 0/0
  8620 ;;		Unchanged: 0/0
  8621 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8622 ;;      Params:         0       4       0       0       0
  8623 ;;      Locals:         0       0       5       0       0
  8624 ;;      Temps:          0       2       0       0       0
  8625 ;;      Totals:         0       6       5       0       0
  8626 ;;Total ram usage:       11 bytes
  8627 ;; Hardware stack levels used:    1
  8628 ;; Hardware stack levels required when called:    1
  8629 ;; This function calls:
  8630 ;;		___fladd
  8631 ;;		___xxtofl
  8632 ;; This function is called by:
  8633 ;;		_LM75_read
  8634 ;; This function uses a non-reentrant model
  8635 ;;
  8636                           
  8637                           
  8638                           ;psect for function _toFloat
  8639  1F76                     _toFloat:
  8640  1F76                     l2855:	
  8641                           ;incstack = 0
  8642                           ; Regs used in _toFloat: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8643                           
  8644                           
  8645                           ;./LM75.h: 73: float toFloat(signed int tempr);./LM75.h: 74: {;./LM75.h: 75:   float res
      +                          ult = (float)(tempr>>8);
  8646  1F76  1283               	bcf	3,5	;RP0=0, select bank0
  8647  1F77  1303               	bcf	3,6	;RP1=0, select bank0
  8648  1F78  0867               	movf	toFloat@tempr+1,w
  8649  1F79  00EB               	movwf	??_toFloat+1
  8650  1F7A  0866               	movf	toFloat@tempr,w
  8651  1F7B  00EA               	movwf	??_toFloat
  8652  1F7C  3008               	movlw	8
  8653  1F7D  00FF               	movwf	btemp+1
  8654  1F7E                     u4465:
  8655  1F7E  0D6B               	rlf	??_toFloat+1,w
  8656  1F7F  0CEB               	rrf	??_toFloat+1,f
  8657  1F80  0CEA               	rrf	??_toFloat,f
  8658  1F81  0BFF               	decfsz	btemp+1,f
  8659  1F82  2F7E               	goto	u4465
  8660  1F83  086A               	movf	??_toFloat,w
  8661  1F84  00F0               	movwf	___xxtofl@val
  8662  1F85  086B               	movf	??_toFloat+1,w
  8663  1F86  00F1               	movwf	___xxtofl@val+1
  8664  1F87  3000               	movlw	0
  8665  1F88  1BF1               	btfsc	___xxtofl@val+1,7
  8666  1F89  30FF               	movlw	255
  8667  1F8A  00F2               	movwf	___xxtofl@val+2
  8668  1F8B  00F3               	movwf	___xxtofl@val+3
  8669  1F8C  3001               	movlw	1
  8670  1F8D  160A  118A  21F6  160A  158A  	fcall	___xxtofl
  8671  1F92  0873               	movf	?___xxtofl+3,w
  8672  1F93  1683               	bsf	3,5	;RP0=1, select bank1
  8673  1F94  1303               	bcf	3,6	;RP1=0, select bank1
  8674  1F95  00A4               	movwf	(toFloat@result+3)^(0+128)
  8675  1F96  0872               	movf	?___xxtofl+2,w
  8676  1F97  00A3               	movwf	(toFloat@result+2)^(0+128)
  8677  1F98  0871               	movf	?___xxtofl+1,w
  8678  1F99  00A2               	movwf	(toFloat@result+1)^(0+128)
  8679  1F9A  0870               	movf	?___xxtofl,w
  8680  1F9B  00A1               	movwf	toFloat@result^(0+128)
  8681  1F9C                     l2857:
  8682                           
  8683                           ;./LM75.h: 76:   char isfraction = tempr & 0x0080;
  8684  1F9C  1283               	bcf	3,5	;RP0=0, select bank0
  8685  1F9D  1303               	bcf	3,6	;RP1=0, select bank0
  8686  1F9E  0866               	movf	toFloat@tempr,w
  8687  1F9F  3980               	andlw	128
  8688  1FA0  00EA               	movwf	??_toFloat
  8689  1FA1  086A               	movf	??_toFloat,w
  8690  1FA2  1683               	bsf	3,5	;RP0=1, select bank1
  8691  1FA3  1303               	bcf	3,6	;RP1=0, select bank1
  8692  1FA4  00A0               	movwf	toFloat@isfraction^(0+128)
  8693  1FA5                     l2859:
  8694                           
  8695                           ;./LM75.h: 78:   if(isfraction)
  8696  1FA5  0820               	movf	toFloat@isfraction^(0+128),w
  8697  1FA6  1903               	btfsc	3,2
  8698  1FA7  2FA9               	goto	u4471
  8699  1FA8  2FAA               	goto	u4470
  8700  1FA9                     u4471:
  8701  1FA9  2FE9               	goto	l2863
  8702  1FAA                     u4470:
  8703  1FAA                     l2861:
  8704                           
  8705                           ;./LM75.h: 79:   {;./LM75.h: 80:     result = result + 0.5;
  8706  1FAA  303F               	movlw	63
  8707  1FAB  1283               	bcf	3,5	;RP0=0, select bank0
  8708  1FAC  1303               	bcf	3,6	;RP1=0, select bank0
  8709  1FAD  00D5               	movwf	___fladd@b+3
  8710  1FAE  3000               	movlw	0
  8711  1FAF  00D4               	movwf	___fladd@b+2
  8712  1FB0  3000               	movlw	0
  8713  1FB1  00D3               	movwf	___fladd@b+1
  8714  1FB2  3000               	movlw	0
  8715  1FB3  00D2               	movwf	___fladd@b
  8716  1FB4  1683               	bsf	3,5	;RP0=1, select bank1
  8717  1FB5  1303               	bcf	3,6	;RP1=0, select bank1
  8718  1FB6  0824               	movf	(toFloat@result+3)^(0+128),w
  8719  1FB7  1283               	bcf	3,5	;RP0=0, select bank0
  8720  1FB8  1303               	bcf	3,6	;RP1=0, select bank0
  8721  1FB9  00D9               	movwf	___fladd@a+3
  8722  1FBA  1683               	bsf	3,5	;RP0=1, select bank1
  8723  1FBB  1303               	bcf	3,6	;RP1=0, select bank1
  8724  1FBC  0823               	movf	(toFloat@result+2)^(0+128),w
  8725  1FBD  1283               	bcf	3,5	;RP0=0, select bank0
  8726  1FBE  1303               	bcf	3,6	;RP1=0, select bank0
  8727  1FBF  00D8               	movwf	___fladd@a+2
  8728  1FC0  1683               	bsf	3,5	;RP0=1, select bank1
  8729  1FC1  1303               	bcf	3,6	;RP1=0, select bank1
  8730  1FC2  0822               	movf	(toFloat@result+1)^(0+128),w
  8731  1FC3  1283               	bcf	3,5	;RP0=0, select bank0
  8732  1FC4  1303               	bcf	3,6	;RP1=0, select bank0
  8733  1FC5  00D7               	movwf	___fladd@a+1
  8734  1FC6  1683               	bsf	3,5	;RP0=1, select bank1
  8735  1FC7  1303               	bcf	3,6	;RP1=0, select bank1
  8736  1FC8  0821               	movf	toFloat@result^(0+128),w
  8737  1FC9  1283               	bcf	3,5	;RP0=0, select bank0
  8738  1FCA  1303               	bcf	3,6	;RP1=0, select bank0
  8739  1FCB  00D6               	movwf	___fladd@a
  8740  1FCC  160A  118A  2578  160A  158A  	fcall	___fladd
  8741  1FD1  1283               	bcf	3,5	;RP0=0, select bank0
  8742  1FD2  1303               	bcf	3,6	;RP1=0, select bank0
  8743  1FD3  0855               	movf	?___fladd+3,w
  8744  1FD4  1683               	bsf	3,5	;RP0=1, select bank1
  8745  1FD5  1303               	bcf	3,6	;RP1=0, select bank1
  8746  1FD6  00A4               	movwf	(toFloat@result+3)^(0+128)
  8747  1FD7  1283               	bcf	3,5	;RP0=0, select bank0
  8748  1FD8  1303               	bcf	3,6	;RP1=0, select bank0
  8749  1FD9  0854               	movf	?___fladd+2,w
  8750  1FDA  1683               	bsf	3,5	;RP0=1, select bank1
  8751  1FDB  1303               	bcf	3,6	;RP1=0, select bank1
  8752  1FDC  00A3               	movwf	(toFloat@result+2)^(0+128)
  8753  1FDD  1283               	bcf	3,5	;RP0=0, select bank0
  8754  1FDE  1303               	bcf	3,6	;RP1=0, select bank0
  8755  1FDF  0853               	movf	?___fladd+1,w
  8756  1FE0  1683               	bsf	3,5	;RP0=1, select bank1
  8757  1FE1  1303               	bcf	3,6	;RP1=0, select bank1
  8758  1FE2  00A2               	movwf	(toFloat@result+1)^(0+128)
  8759  1FE3  1283               	bcf	3,5	;RP0=0, select bank0
  8760  1FE4  1303               	bcf	3,6	;RP1=0, select bank0
  8761  1FE5  0852               	movf	?___fladd,w
  8762  1FE6  1683               	bsf	3,5	;RP0=1, select bank1
  8763  1FE7  1303               	bcf	3,6	;RP1=0, select bank1
  8764  1FE8  00A1               	movwf	toFloat@result^(0+128)
  8765  1FE9                     l2863:
  8766                           
  8767                           ;./LM75.h: 83:   return (result);
  8768  1FE9  0824               	movf	(toFloat@result+3)^(0+128),w
  8769  1FEA  1283               	bcf	3,5	;RP0=0, select bank0
  8770  1FEB  1303               	bcf	3,6	;RP1=0, select bank0
  8771  1FEC  00E9               	movwf	?_toFloat+3
  8772  1FED  1683               	bsf	3,5	;RP0=1, select bank1
  8773  1FEE  1303               	bcf	3,6	;RP1=0, select bank1
  8774  1FEF  0823               	movf	(toFloat@result+2)^(0+128),w
  8775  1FF0  1283               	bcf	3,5	;RP0=0, select bank0
  8776  1FF1  1303               	bcf	3,6	;RP1=0, select bank0
  8777  1FF2  00E8               	movwf	?_toFloat+2
  8778  1FF3  1683               	bsf	3,5	;RP0=1, select bank1
  8779  1FF4  1303               	bcf	3,6	;RP1=0, select bank1
  8780  1FF5  0822               	movf	(toFloat@result+1)^(0+128),w
  8781  1FF6  1283               	bcf	3,5	;RP0=0, select bank0
  8782  1FF7  1303               	bcf	3,6	;RP1=0, select bank0
  8783  1FF8  00E7               	movwf	?_toFloat+1
  8784  1FF9  1683               	bsf	3,5	;RP0=1, select bank1
  8785  1FFA  1303               	bcf	3,6	;RP1=0, select bank1
  8786  1FFB  0821               	movf	toFloat@result^(0+128),w
  8787  1FFC  1283               	bcf	3,5	;RP0=0, select bank0
  8788  1FFD  1303               	bcf	3,6	;RP1=0, select bank0
  8789  1FFE  00E6               	movwf	?_toFloat
  8790  1FFF                     l121:
  8791  1FFF  0008               	return
  8792  2000                     __end_of_toFloat:
  8793                           
  8794                           	psect	text25
  8795  11F6                     __ptext25:	
  8796 ;; *************** function ___xxtofl *****************
  8797 ;; Defined at:
  8798 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  8799 ;; Parameters:    Size  Location     Type
  8800 ;;  sign            1    wreg     unsigned char 
  8801 ;;  val             4    0[COMMON] long 
  8802 ;; Auto vars:     Size  Location     Type
  8803 ;;  sign            1    8[COMMON] unsigned char 
  8804 ;;  arg             4   10[COMMON] unsigned long 
  8805 ;;  exp             1    9[COMMON] unsigned char 
  8806 ;; Return value:  Size  Location     Type
  8807 ;;                  4    0[COMMON] unsigned char 
  8808 ;; Registers used:
  8809 ;;		wreg, status,2, status,0
  8810 ;; Tracked objects:
  8811 ;;		On entry : 0/0
  8812 ;;		On exit  : 0/0
  8813 ;;		Unchanged: 0/0
  8814 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8815 ;;      Params:         4       0       0       0       0
  8816 ;;      Locals:         6       0       0       0       0
  8817 ;;      Temps:          4       0       0       0       0
  8818 ;;      Totals:        14       0       0       0       0
  8819 ;;Total ram usage:       14 bytes
  8820 ;; Hardware stack levels used:    1
  8821 ;; This function calls:
  8822 ;;		Nothing
  8823 ;; This function is called by:
  8824 ;;		_toFloat
  8825 ;;		_sprintf
  8826 ;; This function uses a non-reentrant model
  8827 ;;
  8828                           
  8829                           
  8830                           ;psect for function ___xxtofl
  8831  11F6                     ___xxtofl:
  8832                           
  8833                           ;incstack = 0
  8834                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  8835                           ;___xxtofl@sign stored from wreg
  8836  11F6  00F8               	movwf	___xxtofl@sign
  8837  11F7                     l2783:
  8838  11F7  0878               	movf	___xxtofl@sign,w
  8839  11F8  1903               	btfsc	3,2
  8840  11F9  29FB               	goto	u4301
  8841  11FA  29FC               	goto	u4300
  8842  11FB                     u4301:
  8843  11FB  2A10               	goto	l2789
  8844  11FC                     u4300:
  8845  11FC                     l2785:
  8846  11FC  1FF3               	btfss	___xxtofl@val+3,7
  8847  11FD  29FF               	goto	u4311
  8848  11FE  2A00               	goto	u4310
  8849  11FF                     u4311:
  8850  11FF  2A10               	goto	l2789
  8851  1200                     u4310:
  8852  1200                     l2787:
  8853  1200  0970               	comf	___xxtofl@val,w
  8854  1201  00FA               	movwf	___xxtofl@arg
  8855  1202  0971               	comf	___xxtofl@val+1,w
  8856  1203  00FB               	movwf	___xxtofl@arg+1
  8857  1204  0972               	comf	___xxtofl@val+2,w
  8858  1205  00FC               	movwf	___xxtofl@arg+2
  8859  1206  0973               	comf	___xxtofl@val+3,w
  8860  1207  00FD               	movwf	___xxtofl@arg+3
  8861  1208  0AFA               	incf	___xxtofl@arg,f
  8862  1209  1903               	skipnz
  8863  120A  0AFB               	incf	___xxtofl@arg+1,f
  8864  120B  1903               	skipnz
  8865  120C  0AFC               	incf	___xxtofl@arg+2,f
  8866  120D  1903               	skipnz
  8867  120E  0AFD               	incf	___xxtofl@arg+3,f
  8868  120F  2A18               	goto	l841
  8869  1210                     l2789:
  8870  1210  0873               	movf	___xxtofl@val+3,w
  8871  1211  00FD               	movwf	___xxtofl@arg+3
  8872  1212  0872               	movf	___xxtofl@val+2,w
  8873  1213  00FC               	movwf	___xxtofl@arg+2
  8874  1214  0871               	movf	___xxtofl@val+1,w
  8875  1215  00FB               	movwf	___xxtofl@arg+1
  8876  1216  0870               	movf	___xxtofl@val,w
  8877  1217  00FA               	movwf	___xxtofl@arg
  8878  1218                     l841:
  8879  1218  0873               	movf	___xxtofl@val+3,w
  8880  1219  0472               	iorwf	___xxtofl@val+2,w
  8881  121A  0471               	iorwf	___xxtofl@val+1,w
  8882  121B  0470               	iorwf	___xxtofl@val,w
  8883  121C  1D03               	skipz
  8884  121D  2A1F               	goto	u4321
  8885  121E  2A20               	goto	u4320
  8886  121F                     u4321:
  8887  121F  2A29               	goto	l2795
  8888  1220                     u4320:
  8889  1220                     l2791:
  8890  1220  3000               	movlw	0
  8891  1221  00F3               	movwf	?___xxtofl+3
  8892  1222  3000               	movlw	0
  8893  1223  00F2               	movwf	?___xxtofl+2
  8894  1224  3000               	movlw	0
  8895  1225  00F1               	movwf	?___xxtofl+1
  8896  1226  3000               	movlw	0
  8897  1227  00F0               	movwf	?___xxtofl
  8898  1228  2AAF               	goto	l843
  8899  1229                     l2795:
  8900  1229  3096               	movlw	150
  8901  122A  00F4               	movwf	??___xxtofl
  8902  122B  0874               	movf	??___xxtofl,w
  8903  122C  00F9               	movwf	___xxtofl@exp
  8904  122D  2A3B               	goto	l2799
  8905  122E                     l2797:
  8906  122E  3001               	movlw	1
  8907  122F  00F4               	movwf	??___xxtofl
  8908  1230  0874               	movf	??___xxtofl,w
  8909  1231  07F9               	addwf	___xxtofl@exp,f
  8910  1232  3001               	movlw	1
  8911  1233                     u4335:
  8912  1233  1003               	clrc
  8913  1234  0CFD               	rrf	___xxtofl@arg+3,f
  8914  1235  0CFC               	rrf	___xxtofl@arg+2,f
  8915  1236  0CFB               	rrf	___xxtofl@arg+1,f
  8916  1237  0CFA               	rrf	___xxtofl@arg,f
  8917  1238  3EFF               	addlw	-1
  8918  1239  1D03               	skipz
  8919  123A  2A33               	goto	u4335
  8920  123B                     l2799:
  8921  123B  30FE               	movlw	254
  8922  123C  057D               	andwf	___xxtofl@arg+3,w
  8923  123D  1D03               	btfss	3,2
  8924  123E  2A40               	goto	u4341
  8925  123F  2A41               	goto	u4340
  8926  1240                     u4341:
  8927  1240  2A2E               	goto	l2797
  8928  1241                     u4340:
  8929  1241  2A5D               	goto	l847
  8930  1242                     l2801:
  8931  1242  3001               	movlw	1
  8932  1243  00F4               	movwf	??___xxtofl
  8933  1244  0874               	movf	??___xxtofl,w
  8934  1245  07F9               	addwf	___xxtofl@exp,f
  8935  1246                     l2803:
  8936  1246  3001               	movlw	1
  8937  1247  07FA               	addwf	___xxtofl@arg,f
  8938  1248  3000               	movlw	0
  8939  1249  1803               	skipnc
  8940  124A  3001               	movlw	1
  8941  124B  07FB               	addwf	___xxtofl@arg+1,f
  8942  124C  3000               	movlw	0
  8943  124D  1803               	skipnc
  8944  124E  3001               	movlw	1
  8945  124F  07FC               	addwf	___xxtofl@arg+2,f
  8946  1250  3000               	movlw	0
  8947  1251  1803               	skipnc
  8948  1252  3001               	movlw	1
  8949  1253  07FD               	addwf	___xxtofl@arg+3,f
  8950  1254                     l2805:
  8951  1254  3001               	movlw	1
  8952  1255                     u4355:
  8953  1255  1003               	clrc
  8954  1256  0CFD               	rrf	___xxtofl@arg+3,f
  8955  1257  0CFC               	rrf	___xxtofl@arg+2,f
  8956  1258  0CFB               	rrf	___xxtofl@arg+1,f
  8957  1259  0CFA               	rrf	___xxtofl@arg,f
  8958  125A  3EFF               	addlw	-1
  8959  125B  1D03               	skipz
  8960  125C  2A55               	goto	u4355
  8961  125D                     l847:
  8962  125D  30FF               	movlw	255
  8963  125E  057D               	andwf	___xxtofl@arg+3,w
  8964  125F  1D03               	btfss	3,2
  8965  1260  2A62               	goto	u4361
  8966  1261  2A63               	goto	u4360
  8967  1262                     u4361:
  8968  1262  2A42               	goto	l2801
  8969  1263                     u4360:
  8970  1263  2A6F               	goto	l2809
  8971  1264                     l2807:
  8972  1264  3001               	movlw	1
  8973  1265  02F9               	subwf	___xxtofl@exp,f
  8974  1266  3001               	movlw	1
  8975  1267  00F4               	movwf	??___xxtofl
  8976  1268                     u4375:
  8977  1268  1003               	clrc
  8978  1269  0DFA               	rlf	___xxtofl@arg,f
  8979  126A  0DFB               	rlf	___xxtofl@arg+1,f
  8980  126B  0DFC               	rlf	___xxtofl@arg+2,f
  8981  126C  0DFD               	rlf	___xxtofl@arg+3,f
  8982  126D  0BF4               	decfsz	??___xxtofl,f
  8983  126E  2A68               	goto	u4375
  8984  126F                     l2809:
  8985  126F  1BFC               	btfsc	___xxtofl@arg+2,7
  8986  1270  2A72               	goto	u4381
  8987  1271  2A73               	goto	u4380
  8988  1272                     u4381:
  8989  1272  2A79               	goto	l854
  8990  1273                     u4380:
  8991  1273                     l2811:
  8992  1273  3002               	movlw	2
  8993  1274  0279               	subwf	___xxtofl@exp,w
  8994  1275  1803               	skipnc
  8995  1276  2A78               	goto	u4391
  8996  1277  2A79               	goto	u4390
  8997  1278                     u4391:
  8998  1278  2A64               	goto	l2807
  8999  1279                     u4390:
  9000  1279                     l854:
  9001  1279  1879               	btfsc	___xxtofl@exp,0
  9002  127A  2A7C               	goto	u4401
  9003  127B  2A7D               	goto	u4400
  9004  127C                     u4401:
  9005  127C  2A85               	goto	l855
  9006  127D                     u4400:
  9007  127D                     l2813:
  9008  127D  30FF               	movlw	255
  9009  127E  05FA               	andwf	___xxtofl@arg,f
  9010  127F  30FF               	movlw	255
  9011  1280  05FB               	andwf	___xxtofl@arg+1,f
  9012  1281  307F               	movlw	127
  9013  1282  05FC               	andwf	___xxtofl@arg+2,f
  9014  1283  30FF               	movlw	255
  9015  1284  05FD               	andwf	___xxtofl@arg+3,f
  9016  1285                     l855:
  9017  1285  1003               	clrc
  9018  1286  0CF9               	rrf	___xxtofl@exp,f
  9019  1287                     l2815:
  9020  1287  0879               	movf	___xxtofl@exp,w
  9021  1288  00F4               	movwf	??___xxtofl
  9022  1289  01F5               	clrf	??___xxtofl+1
  9023  128A  01F6               	clrf	??___xxtofl+2
  9024  128B  01F7               	clrf	??___xxtofl+3
  9025  128C  3018               	movlw	24
  9026  128D                     u4415:
  9027  128D  1003               	clrc
  9028  128E  0DF4               	rlf	??___xxtofl,f
  9029  128F  0DF5               	rlf	??___xxtofl+1,f
  9030  1290  0DF6               	rlf	??___xxtofl+2,f
  9031  1291  0DF7               	rlf	??___xxtofl+3,f
  9032  1292                     u4410:
  9033  1292  3EFF               	addlw	-1
  9034  1293  1D03               	skipz
  9035  1294  2A8D               	goto	u4415
  9036  1295  0874               	movf	??___xxtofl,w
  9037  1296  04FA               	iorwf	___xxtofl@arg,f
  9038  1297  0875               	movf	??___xxtofl+1,w
  9039  1298  04FB               	iorwf	___xxtofl@arg+1,f
  9040  1299  0876               	movf	??___xxtofl+2,w
  9041  129A  04FC               	iorwf	___xxtofl@arg+2,f
  9042  129B  0877               	movf	??___xxtofl+3,w
  9043  129C  04FD               	iorwf	___xxtofl@arg+3,f
  9044  129D                     l2817:
  9045  129D  0878               	movf	___xxtofl@sign,w
  9046  129E  1903               	btfsc	3,2
  9047  129F  2AA1               	goto	u4421
  9048  12A0  2AA2               	goto	u4420
  9049  12A1                     u4421:
  9050  12A1  2AA7               	goto	l2823
  9051  12A2                     u4420:
  9052  12A2                     l2819:
  9053  12A2  1FF3               	btfss	___xxtofl@val+3,7
  9054  12A3  2AA5               	goto	u4431
  9055  12A4  2AA6               	goto	u4430
  9056  12A5                     u4431:
  9057  12A5  2AA7               	goto	l2823
  9058  12A6                     u4430:
  9059  12A6                     l2821:
  9060  12A6  17FD               	bsf	___xxtofl@arg+3,7
  9061  12A7                     l2823:
  9062  12A7  087D               	movf	___xxtofl@arg+3,w
  9063  12A8  00F3               	movwf	?___xxtofl+3
  9064  12A9  087C               	movf	___xxtofl@arg+2,w
  9065  12AA  00F2               	movwf	?___xxtofl+2
  9066  12AB  087B               	movf	___xxtofl@arg+1,w
  9067  12AC  00F1               	movwf	?___xxtofl+1
  9068  12AD  087A               	movf	___xxtofl@arg,w
  9069  12AE  00F0               	movwf	?___xxtofl
  9070  12AF                     l843:
  9071  12AF  0008               	return
  9072  12B0                     __end_of___xxtofl:
  9073                           
  9074                           	psect	text26
  9075  1578                     __ptext26:	
  9076 ;; *************** function ___fladd *****************
  9077 ;; Defined at:
  9078 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  9079 ;; Parameters:    Size  Location     Type
  9080 ;;  b               4   50[BANK0 ] unsigned char 
  9081 ;;  a               4   54[BANK0 ] unsigned char 
  9082 ;; Auto vars:     Size  Location     Type
  9083 ;;  grs             1   69[BANK0 ] unsigned char 
  9084 ;;  bexp            1   68[BANK0 ] unsigned char 
  9085 ;;  aexp            1   67[BANK0 ] unsigned char 
  9086 ;;  signs           1   66[BANK0 ] unsigned char 
  9087 ;; Return value:  Size  Location     Type
  9088 ;;                  4   50[BANK0 ] unsigned char 
  9089 ;; Registers used:
  9090 ;;		wreg, status,2, status,0, btemp+1
  9091 ;; Tracked objects:
  9092 ;;		On entry : 0/0
  9093 ;;		On exit  : 0/0
  9094 ;;		Unchanged: 0/0
  9095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9096 ;;      Params:         0       8       0       0       0
  9097 ;;      Locals:         0       4       0       0       0
  9098 ;;      Temps:          0       8       0       0       0
  9099 ;;      Totals:         0      20       0       0       0
  9100 ;;Total ram usage:       20 bytes
  9101 ;; Hardware stack levels used:    1
  9102 ;; This function calls:
  9103 ;;		Nothing
  9104 ;; This function is called by:
  9105 ;;		_toFloat
  9106 ;;		_sprintf
  9107 ;;		___flsub
  9108 ;; This function uses a non-reentrant model
  9109 ;;
  9110                           
  9111                           
  9112                           ;psect for function ___fladd
  9113  1578                     ___fladd:
  9114  1578                     l2449:	
  9115                           ;incstack = 0
  9116                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  9117                           
  9118  1578  1283               	bcf	3,5	;RP0=0, select bank0
  9119  1579  1303               	bcf	3,6	;RP1=0, select bank0
  9120  157A  0855               	movf	___fladd@b+3,w
  9121  157B  3980               	andlw	128
  9122  157C  00DA               	movwf	??___fladd
  9123  157D  085A               	movf	??___fladd,w
  9124  157E  00E2               	movwf	___fladd@signs
  9125  157F                     l2451:
  9126  157F  0855               	movf	___fladd@b+3,w
  9127  1580  00DA               	movwf	??___fladd
  9128  1581  075A               	addwf	??___fladd,w
  9129  1582  00DB               	movwf	??___fladd+1
  9130  1583  085B               	movf	??___fladd+1,w
  9131  1584  00E4               	movwf	___fladd@bexp
  9132  1585                     l2453:
  9133  1585  1FD4               	btfss	___fladd@b+2,7
  9134  1586  2D88               	goto	u3471
  9135  1587  2D89               	goto	u3470
  9136  1588                     u3471:
  9137  1588  2D8A               	goto	l2457
  9138  1589                     u3470:
  9139  1589                     l2455:
  9140  1589  1464               	bsf	___fladd@bexp,0
  9141  158A                     l2457:
  9142  158A  0864               	movf	___fladd@bexp,w
  9143  158B  1903               	btfsc	3,2
  9144  158C  2D8E               	goto	u3481
  9145  158D  2D8F               	goto	u3480
  9146  158E                     u3481:
  9147  158E  2D9F               	goto	l2467
  9148  158F                     u3480:
  9149  158F                     l2459:
  9150  158F  0A64               	incf	___fladd@bexp,w
  9151  1590  1D03               	btfss	3,2
  9152  1591  2D93               	goto	u3491
  9153  1592  2D94               	goto	u3490
  9154  1593                     u3491:
  9155  1593  2D9C               	goto	l2463
  9156  1594                     u3490:
  9157  1594                     l2461:
  9158  1594  3000               	movlw	0
  9159  1595  00D5               	movwf	___fladd@b+3
  9160  1596  3000               	movlw	0
  9161  1597  00D4               	movwf	___fladd@b+2
  9162  1598  3000               	movlw	0
  9163  1599  00D3               	movwf	___fladd@b+1
  9164  159A  3000               	movlw	0
  9165  159B  00D2               	movwf	___fladd@b
  9166  159C                     l2463:
  9167  159C  17D4               	bsf	___fladd@b+2,7
  9168  159D                     l2465:
  9169  159D  01D5               	clrf	___fladd@b+3
  9170  159E  2DA7               	goto	l2469
  9171  159F                     l2467:
  9172  159F  3000               	movlw	0
  9173  15A0  00D5               	movwf	___fladd@b+3
  9174  15A1  3000               	movlw	0
  9175  15A2  00D4               	movwf	___fladd@b+2
  9176  15A3  3000               	movlw	0
  9177  15A4  00D3               	movwf	___fladd@b+1
  9178  15A5  3000               	movlw	0
  9179  15A6  00D2               	movwf	___fladd@b
  9180  15A7                     l2469:
  9181  15A7  0859               	movf	___fladd@a+3,w
  9182  15A8  3980               	andlw	128
  9183  15A9  00DA               	movwf	??___fladd
  9184  15AA  085A               	movf	??___fladd,w
  9185  15AB  00E3               	movwf	___fladd@aexp
  9186  15AC                     l2471:
  9187  15AC  0863               	movf	___fladd@aexp,w
  9188  15AD  0662               	xorwf	___fladd@signs,w
  9189  15AE  1903               	skipnz
  9190  15AF  2DB1               	goto	u3501
  9191  15B0  2DB2               	goto	u3500
  9192  15B1                     u3501:
  9193  15B1  2DB3               	goto	l2475
  9194  15B2                     u3500:
  9195  15B2                     l2473:
  9196  15B2  1762               	bsf	___fladd@signs,6
  9197  15B3                     l2475:
  9198  15B3  0859               	movf	___fladd@a+3,w
  9199  15B4  00DA               	movwf	??___fladd
  9200  15B5  075A               	addwf	??___fladd,w
  9201  15B6  00DB               	movwf	??___fladd+1
  9202  15B7  085B               	movf	??___fladd+1,w
  9203  15B8  00E3               	movwf	___fladd@aexp
  9204  15B9                     l2477:
  9205  15B9  1FD8               	btfss	___fladd@a+2,7
  9206  15BA  2DBC               	goto	u3511
  9207  15BB  2DBD               	goto	u3510
  9208  15BC                     u3511:
  9209  15BC  2DBE               	goto	l2481
  9210  15BD                     u3510:
  9211  15BD                     l2479:
  9212  15BD  1463               	bsf	___fladd@aexp,0
  9213  15BE                     l2481:
  9214  15BE  0863               	movf	___fladd@aexp,w
  9215  15BF  1903               	btfsc	3,2
  9216  15C0  2DC2               	goto	u3521
  9217  15C1  2DC3               	goto	u3520
  9218  15C2                     u3521:
  9219  15C2  2DD3               	goto	l2491
  9220  15C3                     u3520:
  9221  15C3                     l2483:
  9222  15C3  0A63               	incf	___fladd@aexp,w
  9223  15C4  1D03               	btfss	3,2
  9224  15C5  2DC7               	goto	u3531
  9225  15C6  2DC8               	goto	u3530
  9226  15C7                     u3531:
  9227  15C7  2DD0               	goto	l2487
  9228  15C8                     u3530:
  9229  15C8                     l2485:
  9230  15C8  3000               	movlw	0
  9231  15C9  00D9               	movwf	___fladd@a+3
  9232  15CA  3000               	movlw	0
  9233  15CB  00D8               	movwf	___fladd@a+2
  9234  15CC  3000               	movlw	0
  9235  15CD  00D7               	movwf	___fladd@a+1
  9236  15CE  3000               	movlw	0
  9237  15CF  00D6               	movwf	___fladd@a
  9238  15D0                     l2487:
  9239  15D0  17D8               	bsf	___fladd@a+2,7
  9240  15D1                     l2489:
  9241  15D1  01D9               	clrf	___fladd@a+3
  9242  15D2  2DDB               	goto	l701
  9243  15D3                     l2491:
  9244  15D3  3000               	movlw	0
  9245  15D4  00D9               	movwf	___fladd@a+3
  9246  15D5  3000               	movlw	0
  9247  15D6  00D8               	movwf	___fladd@a+2
  9248  15D7  3000               	movlw	0
  9249  15D8  00D7               	movwf	___fladd@a+1
  9250  15D9  3000               	movlw	0
  9251  15DA  00D6               	movwf	___fladd@a
  9252  15DB                     l701:
  9253  15DB  0864               	movf	___fladd@bexp,w
  9254  15DC  0263               	subwf	___fladd@aexp,w
  9255  15DD  1803               	skipnc
  9256  15DE  2DE0               	goto	u3541
  9257  15DF  2DE1               	goto	u3540
  9258  15E0                     u3541:
  9259  15E0  2E25               	goto	l2527
  9260  15E1                     u3540:
  9261  15E1                     l2493:
  9262  15E1  1F62               	btfss	___fladd@signs,6
  9263  15E2  2DE4               	goto	u3551
  9264  15E3  2DE5               	goto	u3550
  9265  15E4                     u3551:
  9266  15E4  2DE9               	goto	l2497
  9267  15E5                     u3550:
  9268  15E5                     l2495:
  9269  15E5  3080               	movlw	128
  9270  15E6  00DA               	movwf	??___fladd
  9271  15E7  085A               	movf	??___fladd,w
  9272  15E8  06E2               	xorwf	___fladd@signs,f
  9273  15E9                     l2497:
  9274  15E9  0864               	movf	___fladd@bexp,w
  9275  15EA  00DA               	movwf	??___fladd
  9276  15EB  085A               	movf	??___fladd,w
  9277  15EC  00E5               	movwf	___fladd@grs
  9278  15ED                     l2499:
  9279  15ED  0863               	movf	___fladd@aexp,w
  9280  15EE  00DA               	movwf	??___fladd
  9281  15EF  085A               	movf	??___fladd,w
  9282  15F0  00E4               	movwf	___fladd@bexp
  9283  15F1                     l2501:
  9284  15F1  0865               	movf	___fladd@grs,w
  9285  15F2  00DA               	movwf	??___fladd
  9286  15F3  085A               	movf	??___fladd,w
  9287  15F4  00E3               	movwf	___fladd@aexp
  9288  15F5                     l2503:
  9289  15F5  0852               	movf	___fladd@b,w
  9290  15F6  00DA               	movwf	??___fladd
  9291  15F7  085A               	movf	??___fladd,w
  9292  15F8  00E5               	movwf	___fladd@grs
  9293  15F9                     l2505:
  9294  15F9  0856               	movf	___fladd@a,w
  9295  15FA  00DA               	movwf	??___fladd
  9296  15FB  085A               	movf	??___fladd,w
  9297  15FC  00D2               	movwf	___fladd@b
  9298  15FD                     l2507:
  9299  15FD  0865               	movf	___fladd@grs,w
  9300  15FE  00DA               	movwf	??___fladd
  9301  15FF  085A               	movf	??___fladd,w
  9302  1600  00D6               	movwf	___fladd@a
  9303  1601                     l2509:
  9304  1601  0853               	movf	___fladd@b+1,w
  9305  1602  00DA               	movwf	??___fladd
  9306  1603  085A               	movf	??___fladd,w
  9307  1604  00E5               	movwf	___fladd@grs
  9308  1605                     l2511:
  9309  1605  0857               	movf	___fladd@a+1,w
  9310  1606  00DA               	movwf	??___fladd
  9311  1607  085A               	movf	??___fladd,w
  9312  1608  00D3               	movwf	___fladd@b+1
  9313  1609                     l2513:
  9314  1609  0865               	movf	___fladd@grs,w
  9315  160A  00DA               	movwf	??___fladd
  9316  160B  085A               	movf	??___fladd,w
  9317  160C  00D7               	movwf	___fladd@a+1
  9318  160D                     l2515:
  9319  160D  0854               	movf	___fladd@b+2,w
  9320  160E  00DA               	movwf	??___fladd
  9321  160F  085A               	movf	??___fladd,w
  9322  1610  00E5               	movwf	___fladd@grs
  9323  1611                     l2517:
  9324  1611  0858               	movf	___fladd@a+2,w
  9325  1612  00DA               	movwf	??___fladd
  9326  1613  085A               	movf	??___fladd,w
  9327  1614  00D4               	movwf	___fladd@b+2
  9328  1615                     l2519:
  9329  1615  0865               	movf	___fladd@grs,w
  9330  1616  00DA               	movwf	??___fladd
  9331  1617  085A               	movf	??___fladd,w
  9332  1618  00D8               	movwf	___fladd@a+2
  9333  1619                     l2521:
  9334  1619  0855               	movf	___fladd@b+3,w
  9335  161A  00DA               	movwf	??___fladd
  9336  161B  085A               	movf	??___fladd,w
  9337  161C  00E5               	movwf	___fladd@grs
  9338  161D                     l2523:
  9339  161D  0859               	movf	___fladd@a+3,w
  9340  161E  00DA               	movwf	??___fladd
  9341  161F  085A               	movf	??___fladd,w
  9342  1620  00D5               	movwf	___fladd@b+3
  9343  1621                     l2525:
  9344  1621  0865               	movf	___fladd@grs,w
  9345  1622  00DA               	movwf	??___fladd
  9346  1623  085A               	movf	??___fladd,w
  9347  1624  00D9               	movwf	___fladd@a+3
  9348  1625                     l2527:
  9349  1625  01E5               	clrf	___fladd@grs
  9350  1626                     l2529:
  9351  1626  0863               	movf	___fladd@aexp,w
  9352  1627  00DA               	movwf	??___fladd
  9353  1628  01DB               	clrf	??___fladd+1
  9354  1629  085B               	movf	??___fladd+1,w
  9355  162A  00DD               	movwf	??___fladd+3
  9356  162B  0864               	movf	___fladd@bexp,w
  9357  162C  025A               	subwf	??___fladd,w
  9358  162D  00DC               	movwf	??___fladd+2
  9359  162E  1C03               	skipc
  9360  162F  03DD               	decf	??___fladd+3,f
  9361  1630  085D               	movf	??___fladd+3,w
  9362  1631  3A80               	xorlw	128
  9363  1632  00FF               	movwf	btemp+1
  9364  1633  3080               	movlw	128
  9365  1634  027F               	subwf	btemp+1,w
  9366  1635  1D03               	skipz
  9367  1636  2E39               	goto	u3565
  9368  1637  301A               	movlw	26
  9369  1638  025C               	subwf	??___fladd+2,w
  9370  1639                     u3565:
  9371  1639  1C03               	skipc
  9372  163A  2E3C               	goto	u3561
  9373  163B  2E3D               	goto	u3560
  9374  163C                     u3561:
  9375  163C  2E7A               	goto	l2545
  9376  163D                     u3560:
  9377  163D                     l2531:
  9378  163D  1283               	bcf	3,5	;RP0=0, select bank0
  9379  163E  1303               	bcf	3,6	;RP1=0, select bank0
  9380  163F  0855               	movf	___fladd@b+3,w
  9381  1640  0454               	iorwf	___fladd@b+2,w
  9382  1641  0453               	iorwf	___fladd@b+1,w
  9383  1642  0452               	iorwf	___fladd@b,w
  9384  1643  1D03               	skipz
  9385  1644  2E46               	goto	u3571
  9386  1645  2E48               	goto	u3570
  9387  1646                     u3571:
  9388  1646  3001               	movlw	1
  9389  1647  2E49               	goto	u3580
  9390  1648                     u3570:
  9391  1648  3000               	movlw	0
  9392  1649                     u3580:
  9393  1649  00DA               	movwf	??___fladd
  9394  164A  085A               	movf	??___fladd,w
  9395  164B  00E5               	movwf	___fladd@grs
  9396  164C  3000               	movlw	0
  9397  164D  00D5               	movwf	___fladd@b+3
  9398  164E  3000               	movlw	0
  9399  164F  00D4               	movwf	___fladd@b+2
  9400  1650  3000               	movlw	0
  9401  1651  00D3               	movwf	___fladd@b+1
  9402  1652  3000               	movlw	0
  9403  1653  00D2               	movwf	___fladd@b
  9404  1654  0863               	movf	___fladd@aexp,w
  9405  1655  00DA               	movwf	??___fladd
  9406  1656  085A               	movf	??___fladd,w
  9407  1657  00E4               	movwf	___fladd@bexp
  9408  1658  2E82               	goto	l705
  9409  1659                     l707:
  9410  1659  1C65               	btfss	___fladd@grs,0
  9411  165A  2E5C               	goto	u3591
  9412  165B  2E5D               	goto	u3590
  9413  165C                     u3591:
  9414  165C  2E66               	goto	l2535
  9415  165D                     u3590:
  9416  165D                     l2533:
  9417  165D  0865               	movf	___fladd@grs,w
  9418  165E  00DA               	movwf	??___fladd
  9419  165F  1003               	clrc
  9420  1660  0C5A               	rrf	??___fladd,w
  9421  1661  3801               	iorlw	1
  9422  1662  00DB               	movwf	??___fladd+1
  9423  1663  085B               	movf	??___fladd+1,w
  9424  1664  00E5               	movwf	___fladd@grs
  9425  1665  2E68               	goto	l2537
  9426  1666                     l2535:
  9427  1666  1003               	clrc
  9428  1667  0CE5               	rrf	___fladd@grs,f
  9429  1668                     l2537:
  9430  1668  1C52               	btfss	___fladd@b,0
  9431  1669  2E6B               	goto	u3601
  9432  166A  2E6C               	goto	u3600
  9433  166B                     u3601:
  9434  166B  2E6D               	goto	l2541
  9435  166C                     u3600:
  9436  166C                     l2539:
  9437  166C  17E5               	bsf	___fladd@grs,7
  9438  166D                     l2541:
  9439  166D  3001               	movlw	1
  9440  166E  00DA               	movwf	??___fladd
  9441  166F                     u3615:
  9442  166F  0D55               	rlf	___fladd@b+3,w
  9443  1670  0CD5               	rrf	___fladd@b+3,f
  9444  1671  0CD4               	rrf	___fladd@b+2,f
  9445  1672  0CD3               	rrf	___fladd@b+1,f
  9446  1673  0CD2               	rrf	___fladd@b,f
  9447  1674  0BDA               	decfsz	??___fladd& (0+127),f
  9448  1675  2E6F               	goto	u3615
  9449  1676                     l2543:
  9450  1676  3001               	movlw	1
  9451  1677  00DA               	movwf	??___fladd
  9452  1678  085A               	movf	??___fladd,w
  9453  1679  07E4               	addwf	___fladd@bexp,f
  9454  167A                     l2545:
  9455  167A  1283               	bcf	3,5	;RP0=0, select bank0
  9456  167B  1303               	bcf	3,6	;RP1=0, select bank0
  9457  167C  0863               	movf	___fladd@aexp,w
  9458  167D  0264               	subwf	___fladd@bexp,w
  9459  167E  1C03               	skipc
  9460  167F  2E81               	goto	u3621
  9461  1680  2E82               	goto	u3620
  9462  1681                     u3621:
  9463  1681  2E59               	goto	l707
  9464  1682                     u3620:
  9465  1682                     l705:
  9466  1682  1B62               	btfsc	___fladd@signs,6
  9467  1683  2E85               	goto	u3631
  9468  1684  2E86               	goto	u3630
  9469  1685                     u3631:
  9470  1685  2ED1               	goto	l2571
  9471  1686                     u3630:
  9472  1686                     l2547:
  9473  1686  0864               	movf	___fladd@bexp,w
  9474  1687  1D03               	btfss	3,2
  9475  1688  2E8A               	goto	u3641
  9476  1689  2E8B               	goto	u3640
  9477  168A                     u3641:
  9478  168A  2E94               	goto	l2553
  9479  168B                     u3640:
  9480  168B                     l2549:
  9481  168B  3000               	movlw	0
  9482  168C  00D5               	movwf	?___fladd+3
  9483  168D  3000               	movlw	0
  9484  168E  00D4               	movwf	?___fladd+2
  9485  168F  3000               	movlw	0
  9486  1690  00D3               	movwf	?___fladd+1
  9487  1691  3000               	movlw	0
  9488  1692  00D2               	movwf	?___fladd
  9489  1693  2FFF               	goto	l714
  9490  1694                     l2553:
  9491  1694  0856               	movf	___fladd@a,w
  9492  1695  07D2               	addwf	___fladd@b,f
  9493  1696  0857               	movf	___fladd@a+1,w
  9494  1697  1103               	clrz
  9495  1698  1803               	skipnc
  9496  1699  3E01               	addlw	1
  9497  169A  1903               	skipnz
  9498  169B  2E9D               	goto	u3651
  9499  169C  07D3               	addwf	___fladd@b+1,f
  9500  169D                     u3651:
  9501  169D  0858               	movf	___fladd@a+2,w
  9502  169E  1103               	clrz
  9503  169F  1803               	skipnc
  9504  16A0  3E01               	addlw	1
  9505  16A1  1903               	skipnz
  9506  16A2  2EA4               	goto	u3652
  9507  16A3  07D4               	addwf	___fladd@b+2,f
  9508  16A4                     u3652:
  9509  16A4  0859               	movf	___fladd@a+3,w
  9510  16A5  1103               	clrz
  9511  16A6  1803               	skipnc
  9512  16A7  3E01               	addlw	1
  9513  16A8  1903               	skipnz
  9514  16A9  2EAB               	goto	u3653
  9515  16AA  07D5               	addwf	___fladd@b+3,f
  9516  16AB                     u3653:
  9517  16AB                     l2555:
  9518  16AB  1C55               	btfss	___fladd@b+3,0
  9519  16AC  2EAE               	goto	u3661
  9520  16AD  2EAF               	goto	u3660
  9521  16AE                     u3661:
  9522  16AE  2F85               	goto	l2605
  9523  16AF                     u3660:
  9524  16AF                     l2557:
  9525  16AF  1C65               	btfss	___fladd@grs,0
  9526  16B0  2EB2               	goto	u3671
  9527  16B1  2EB3               	goto	u3670
  9528  16B2                     u3671:
  9529  16B2  2EBC               	goto	l2561
  9530  16B3                     u3670:
  9531  16B3                     l2559:
  9532  16B3  0865               	movf	___fladd@grs,w
  9533  16B4  00DA               	movwf	??___fladd
  9534  16B5  1003               	clrc
  9535  16B6  0C5A               	rrf	??___fladd,w
  9536  16B7  3801               	iorlw	1
  9537  16B8  00DB               	movwf	??___fladd+1
  9538  16B9  085B               	movf	??___fladd+1,w
  9539  16BA  00E5               	movwf	___fladd@grs
  9540  16BB  2EBE               	goto	l2563
  9541  16BC                     l2561:
  9542  16BC  1003               	clrc
  9543  16BD  0CE5               	rrf	___fladd@grs,f
  9544  16BE                     l2563:
  9545  16BE  1C52               	btfss	___fladd@b,0
  9546  16BF  2EC1               	goto	u3681
  9547  16C0  2EC2               	goto	u3680
  9548  16C1                     u3681:
  9549  16C1  2EC3               	goto	l2567
  9550  16C2                     u3680:
  9551  16C2                     l2565:
  9552  16C2  17E5               	bsf	___fladd@grs,7
  9553  16C3                     l2567:
  9554  16C3  3001               	movlw	1
  9555  16C4  00DA               	movwf	??___fladd
  9556  16C5                     u3695:
  9557  16C5  0D55               	rlf	___fladd@b+3,w
  9558  16C6  0CD5               	rrf	___fladd@b+3,f
  9559  16C7  0CD4               	rrf	___fladd@b+2,f
  9560  16C8  0CD3               	rrf	___fladd@b+1,f
  9561  16C9  0CD2               	rrf	___fladd@b,f
  9562  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  9563  16CB  2EC5               	goto	u3695
  9564  16CC                     l2569:
  9565  16CC  3001               	movlw	1
  9566  16CD  00DA               	movwf	??___fladd
  9567  16CE  085A               	movf	??___fladd,w
  9568  16CF  07E4               	addwf	___fladd@bexp,f
  9569  16D0  2F85               	goto	l2605
  9570  16D1                     l2571:
  9571  16D1  0855               	movf	___fladd@b+3,w
  9572  16D2  3A80               	xorlw	128
  9573  16D3  00FF               	movwf	btemp+1
  9574  16D4  0859               	movf	___fladd@a+3,w
  9575  16D5  3A80               	xorlw	128
  9576  16D6  027F               	subwf	btemp+1,w
  9577  16D7  1D03               	skipz
  9578  16D8  2EE3               	goto	u3703
  9579  16D9  0858               	movf	___fladd@a+2,w
  9580  16DA  0254               	subwf	___fladd@b+2,w
  9581  16DB  1D03               	skipz
  9582  16DC  2EE3               	goto	u3703
  9583  16DD  0857               	movf	___fladd@a+1,w
  9584  16DE  0253               	subwf	___fladd@b+1,w
  9585  16DF  1D03               	skipz
  9586  16E0  2EE3               	goto	u3703
  9587  16E1  0856               	movf	___fladd@a,w
  9588  16E2  0252               	subwf	___fladd@b,w
  9589  16E3                     u3703:
  9590  16E3  1803               	skipnc
  9591  16E4  2EE6               	goto	u3701
  9592  16E5  2EE7               	goto	u3700
  9593  16E6                     u3701:
  9594  16E6  2F3F               	goto	l2581
  9595  16E7                     u3700:
  9596  16E7                     l2573:
  9597  16E7  30FF               	movlw	255
  9598  16E8  00DA               	movwf	??___fladd
  9599  16E9  30FF               	movlw	255
  9600  16EA  00DB               	movwf	??___fladd+1
  9601  16EB  30FF               	movlw	255
  9602  16EC  00DC               	movwf	??___fladd+2
  9603  16ED  30FF               	movlw	255
  9604  16EE  00DD               	movwf	??___fladd+3
  9605  16EF  0856               	movf	___fladd@a,w
  9606  16F0  00DE               	movwf	??___fladd+4
  9607  16F1  0857               	movf	___fladd@a+1,w
  9608  16F2  00DF               	movwf	??___fladd+5
  9609  16F3  0858               	movf	___fladd@a+2,w
  9610  16F4  00E0               	movwf	??___fladd+6
  9611  16F5  0859               	movf	___fladd@a+3,w
  9612  16F6  00E1               	movwf	??___fladd+7
  9613  16F7  0852               	movf	___fladd@b,w
  9614  16F8  02DE               	subwf	??___fladd+4,f
  9615  16F9  0853               	movf	___fladd@b+1,w
  9616  16FA  1C03               	skipc
  9617  16FB  0F53               	incfsz	___fladd@b+1,w
  9618  16FC  2EFE               	goto	u3711
  9619  16FD  2EFF               	goto	u3712
  9620  16FE                     u3711:
  9621  16FE  02DF               	subwf	??___fladd+5,f
  9622  16FF                     u3712:
  9623  16FF  0854               	movf	___fladd@b+2,w
  9624  1700  1C03               	skipc
  9625  1701  0F54               	incfsz	___fladd@b+2,w
  9626  1702  2F04               	goto	u3713
  9627  1703  2F05               	goto	u3714
  9628  1704                     u3713:
  9629  1704  02E0               	subwf	??___fladd+6,f
  9630  1705                     u3714:
  9631  1705  0855               	movf	___fladd@b+3,w
  9632  1706  1C03               	skipc
  9633  1707  0F55               	incfsz	___fladd@b+3,w
  9634  1708  2F0A               	goto	u3715
  9635  1709  2F0B               	goto	u3716
  9636  170A                     u3715:
  9637  170A  02E1               	subwf	??___fladd+7,f
  9638  170B                     u3716:
  9639  170B  085E               	movf	??___fladd+4,w
  9640  170C  07DA               	addwf	??___fladd,f
  9641  170D  085F               	movf	??___fladd+5,w
  9642  170E  1803               	skipnc
  9643  170F  0F5F               	incfsz	??___fladd+5,w
  9644  1710  2F12               	goto	u3720
  9645  1711  2F13               	goto	u3721
  9646  1712                     u3720:
  9647  1712  07DB               	addwf	??___fladd+1,f
  9648  1713                     u3721:
  9649  1713  0860               	movf	??___fladd+6,w
  9650  1714  1803               	skipnc
  9651  1715  0F60               	incfsz	??___fladd+6,w
  9652  1716  2F18               	goto	u3722
  9653  1717  2F19               	goto	u3723
  9654  1718                     u3722:
  9655  1718  07DC               	addwf	??___fladd+2,f
  9656  1719                     u3723:
  9657  1719  0861               	movf	??___fladd+7,w
  9658  171A  1803               	skipnc
  9659  171B  0A61               	incf	??___fladd+7,w
  9660  171C  07DD               	addwf	??___fladd+3,f
  9661  171D  085D               	movf	??___fladd+3,w
  9662  171E  00D5               	movwf	___fladd@b+3
  9663  171F  085C               	movf	??___fladd+2,w
  9664  1720  00D4               	movwf	___fladd@b+2
  9665  1721  085B               	movf	??___fladd+1,w
  9666  1722  00D3               	movwf	___fladd@b+1
  9667  1723  085A               	movf	??___fladd,w
  9668  1724  00D2               	movwf	___fladd@b
  9669  1725                     l2575:
  9670  1725  3080               	movlw	128
  9671  1726  00DA               	movwf	??___fladd
  9672  1727  085A               	movf	??___fladd,w
  9673  1728  06E2               	xorwf	___fladd@signs,f
  9674  1729  09E5               	comf	___fladd@grs,f
  9675  172A  0AE5               	incf	___fladd@grs,f
  9676  172B                     l2577:
  9677  172B  0865               	movf	___fladd@grs,w
  9678  172C  1D03               	btfss	3,2
  9679  172D  2F2F               	goto	u3731
  9680  172E  2F30               	goto	u3730
  9681  172F                     u3731:
  9682  172F  2F4D               	goto	l722
  9683  1730                     u3730:
  9684  1730                     l2579:
  9685  1730  3001               	movlw	1
  9686  1731  07D2               	addwf	___fladd@b,f
  9687  1732  3000               	movlw	0
  9688  1733  1803               	skipnc
  9689  1734  3001               	movlw	1
  9690  1735  07D3               	addwf	___fladd@b+1,f
  9691  1736  3000               	movlw	0
  9692  1737  1803               	skipnc
  9693  1738  3001               	movlw	1
  9694  1739  07D4               	addwf	___fladd@b+2,f
  9695  173A  3000               	movlw	0
  9696  173B  1803               	skipnc
  9697  173C  3001               	movlw	1
  9698  173D  07D5               	addwf	___fladd@b+3,f
  9699  173E  2F4D               	goto	l722
  9700  173F                     l2581:
  9701  173F  0856               	movf	___fladd@a,w
  9702  1740  02D2               	subwf	___fladd@b,f
  9703  1741  0857               	movf	___fladd@a+1,w
  9704  1742  1C03               	skipc
  9705  1743  0F57               	incfsz	___fladd@a+1,w
  9706  1744  02D3               	subwf	___fladd@b+1,f
  9707  1745  0858               	movf	___fladd@a+2,w
  9708  1746  1C03               	skipc
  9709  1747  0F58               	incfsz	___fladd@a+2,w
  9710  1748  02D4               	subwf	___fladd@b+2,f
  9711  1749  0859               	movf	___fladd@a+3,w
  9712  174A  1C03               	skipc
  9713  174B  0F59               	incfsz	___fladd@a+3,w
  9714  174C  02D5               	subwf	___fladd@b+3,f
  9715  174D                     l722:
  9716  174D  0855               	movf	___fladd@b+3,w
  9717  174E  0454               	iorwf	___fladd@b+2,w
  9718  174F  0453               	iorwf	___fladd@b+1,w
  9719  1750  0452               	iorwf	___fladd@b,w
  9720  1751  1D03               	skipz
  9721  1752  2F54               	goto	u3741
  9722  1753  2F55               	goto	u3740
  9723  1754                     u3741:
  9724  1754  2F81               	goto	l2603
  9725  1755                     u3740:
  9726  1755                     l2583:
  9727  1755  0865               	movf	___fladd@grs,w
  9728  1756  1D03               	btfss	3,2
  9729  1757  2F59               	goto	u3751
  9730  1758  2F5A               	goto	u3750
  9731  1759                     u3751:
  9732  1759  2F81               	goto	l2603
  9733  175A                     u3750:
  9734  175A                     l2585:
  9735  175A  3000               	movlw	0
  9736  175B  00D5               	movwf	?___fladd+3
  9737  175C  3000               	movlw	0
  9738  175D  00D4               	movwf	?___fladd+2
  9739  175E  3000               	movlw	0
  9740  175F  00D3               	movwf	?___fladd+1
  9741  1760  3000               	movlw	0
  9742  1761  00D2               	movwf	?___fladd
  9743  1762  2FFF               	goto	l714
  9744  1763                     l2589:
  9745  1763  3001               	movlw	1
  9746  1764  00DA               	movwf	??___fladd
  9747  1765                     u3765:
  9748  1765  1003               	clrc
  9749  1766  0DD2               	rlf	___fladd@b,f
  9750  1767  0DD3               	rlf	___fladd@b+1,f
  9751  1768  0DD4               	rlf	___fladd@b+2,f
  9752  1769  0DD5               	rlf	___fladd@b+3,f
  9753  176A  0BDA               	decfsz	??___fladd,f
  9754  176B  2F65               	goto	u3765
  9755  176C                     l2591:
  9756  176C  1FE5               	btfss	___fladd@grs,7
  9757  176D  2F6F               	goto	u3771
  9758  176E  2F70               	goto	u3770
  9759  176F                     u3771:
  9760  176F  2F71               	goto	l726
  9761  1770                     u3770:
  9762  1770                     l2593:
  9763  1770  1452               	bsf	___fladd@b,0
  9764  1771                     l726:
  9765  1771  1C65               	btfss	___fladd@grs,0
  9766  1772  2F74               	goto	u3781
  9767  1773  2F75               	goto	u3780
  9768  1774                     u3781:
  9769  1774  2F78               	goto	l2597
  9770  1775                     u3780:
  9771  1775                     l2595:
  9772  1775  1403               	setc
  9773  1776  0DE5               	rlf	___fladd@grs,f
  9774  1777  2F7A               	goto	l2599
  9775  1778                     l2597:
  9776  1778  1003               	clrc
  9777  1779  0DE5               	rlf	___fladd@grs,f
  9778  177A                     l2599:
  9779  177A  0864               	movf	___fladd@bexp,w
  9780  177B  1903               	btfsc	3,2
  9781  177C  2F7E               	goto	u3791
  9782  177D  2F7F               	goto	u3790
  9783  177E                     u3791:
  9784  177E  2F81               	goto	l2603
  9785  177F                     u3790:
  9786  177F                     l2601:
  9787  177F  3001               	movlw	1
  9788  1780  02E4               	subwf	___fladd@bexp,f
  9789  1781                     l2603:
  9790  1781  1FD4               	btfss	___fladd@b+2,7
  9791  1782  2F84               	goto	u3801
  9792  1783  2F85               	goto	u3800
  9793  1784                     u3801:
  9794  1784  2F63               	goto	l2589
  9795  1785                     u3800:
  9796  1785                     l2605:
  9797  1785  01E3               	clrf	___fladd@aexp
  9798  1786                     l2607:
  9799  1786  1FE5               	btfss	___fladd@grs,7
  9800  1787  2F89               	goto	u3811
  9801  1788  2F8A               	goto	u3810
  9802  1789                     u3811:
  9803  1789  2F98               	goto	l2615
  9804  178A                     u3810:
  9805  178A                     l2609:
  9806  178A  0865               	movf	___fladd@grs,w
  9807  178B  397F               	andlw	127
  9808  178C  1903               	btfsc	3,2
  9809  178D  2F8F               	goto	u3821
  9810  178E  2F90               	goto	u3820
  9811  178F                     u3821:
  9812  178F  2F93               	goto	l732
  9813  1790                     u3820:
  9814  1790                     l2611:
  9815  1790  01E3               	clrf	___fladd@aexp
  9816  1791  0AE3               	incf	___fladd@aexp,f
  9817  1792  2F98               	goto	l2615
  9818  1793                     l732:
  9819  1793  1C52               	btfss	___fladd@b,0
  9820  1794  2F96               	goto	u3831
  9821  1795  2F97               	goto	u3830
  9822  1796                     u3831:
  9823  1796  2F98               	goto	l2615
  9824  1797                     u3830:
  9825  1797  2F90               	goto	l2611
  9826  1798                     l2615:
  9827  1798  0863               	movf	___fladd@aexp,w
  9828  1799  1903               	btfsc	3,2
  9829  179A  2F9C               	goto	u3841
  9830  179B  2F9D               	goto	u3840
  9831  179C                     u3841:
  9832  179C  2FD1               	goto	l735
  9833  179D                     u3840:
  9834  179D                     l2617:
  9835  179D  3001               	movlw	1
  9836  179E  07D2               	addwf	___fladd@b,f
  9837  179F  3000               	movlw	0
  9838  17A0  1803               	skipnc
  9839  17A1  3001               	movlw	1
  9840  17A2  07D3               	addwf	___fladd@b+1,f
  9841  17A3  3000               	movlw	0
  9842  17A4  1803               	skipnc
  9843  17A5  3001               	movlw	1
  9844  17A6  07D4               	addwf	___fladd@b+2,f
  9845  17A7  3000               	movlw	0
  9846  17A8  1803               	skipnc
  9847  17A9  3001               	movlw	1
  9848  17AA  07D5               	addwf	___fladd@b+3,f
  9849  17AB                     l2619:
  9850  17AB  1C55               	btfss	___fladd@b+3,0
  9851  17AC  2FAE               	goto	u3851
  9852  17AD  2FAF               	goto	u3850
  9853  17AE                     u3851:
  9854  17AE  2FD1               	goto	l735
  9855  17AF                     u3850:
  9856  17AF                     l2621:
  9857  17AF  0852               	movf	___fladd@b,w
  9858  17B0  00DA               	movwf	??___fladd
  9859  17B1  0853               	movf	___fladd@b+1,w
  9860  17B2  00DB               	movwf	??___fladd+1
  9861  17B3  0854               	movf	___fladd@b+2,w
  9862  17B4  00DC               	movwf	??___fladd+2
  9863  17B5  0855               	movf	___fladd@b+3,w
  9864  17B6  00DD               	movwf	??___fladd+3
  9865  17B7  3001               	movlw	1
  9866  17B8  00DE               	movwf	??___fladd+4
  9867  17B9                     u3865:
  9868  17B9  0D5D               	rlf	??___fladd+3,w
  9869  17BA  0CDD               	rrf	??___fladd+3,f
  9870  17BB  0CDC               	rrf	??___fladd+2,f
  9871  17BC  0CDB               	rrf	??___fladd+1,f
  9872  17BD  0CDA               	rrf	??___fladd,f
  9873  17BE                     u3860:
  9874  17BE  0BDE               	decfsz	??___fladd+4,f
  9875  17BF  2FB9               	goto	u3865
  9876  17C0  085D               	movf	??___fladd+3,w
  9877  17C1  00D5               	movwf	___fladd@b+3
  9878  17C2  085C               	movf	??___fladd+2,w
  9879  17C3  00D4               	movwf	___fladd@b+2
  9880  17C4  085B               	movf	??___fladd+1,w
  9881  17C5  00D3               	movwf	___fladd@b+1
  9882  17C6  085A               	movf	??___fladd,w
  9883  17C7  00D2               	movwf	___fladd@b
  9884  17C8  0A64               	incf	___fladd@bexp,w
  9885  17C9  1903               	btfsc	3,2
  9886  17CA  2FCC               	goto	u3871
  9887  17CB  2FCD               	goto	u3870
  9888  17CC                     u3871:
  9889  17CC  2FD1               	goto	l735
  9890  17CD                     u3870:
  9891  17CD                     l2623:
  9892  17CD  3001               	movlw	1
  9893  17CE  00DA               	movwf	??___fladd
  9894  17CF  085A               	movf	??___fladd,w
  9895  17D0  07E4               	addwf	___fladd@bexp,f
  9896  17D1                     l735:
  9897  17D1  0A64               	incf	___fladd@bexp,w
  9898  17D2  1903               	btfsc	3,2
  9899  17D3  2FD5               	goto	u3881
  9900  17D4  2FD6               	goto	u3880
  9901  17D5                     u3881:
  9902  17D5  2FDB               	goto	l2627
  9903  17D6                     u3880:
  9904  17D6                     l2625:
  9905  17D6  0864               	movf	___fladd@bexp,w
  9906  17D7  1D03               	btfss	3,2
  9907  17D8  2FDA               	goto	u3891
  9908  17D9  2FDB               	goto	u3890
  9909  17DA                     u3891:
  9910  17DA  2FE9               	goto	l2633
  9911  17DB                     u3890:
  9912  17DB                     l2627:
  9913  17DB  3000               	movlw	0
  9914  17DC  00D5               	movwf	___fladd@b+3
  9915  17DD  3000               	movlw	0
  9916  17DE  00D4               	movwf	___fladd@b+2
  9917  17DF  3000               	movlw	0
  9918  17E0  00D3               	movwf	___fladd@b+1
  9919  17E1  3000               	movlw	0
  9920  17E2  00D2               	movwf	___fladd@b
  9921  17E3                     l2629:
  9922  17E3  0864               	movf	___fladd@bexp,w
  9923  17E4  1D03               	btfss	3,2
  9924  17E5  2FE7               	goto	u3901
  9925  17E6  2FE8               	goto	u3900
  9926  17E7                     u3901:
  9927  17E7  2FE9               	goto	l2633
  9928  17E8                     u3900:
  9929  17E8                     l2631:
  9930  17E8  01E2               	clrf	___fladd@signs
  9931  17E9                     l2633:
  9932  17E9  1C64               	btfss	___fladd@bexp,0
  9933  17EA  2FEC               	goto	u3911
  9934  17EB  2FED               	goto	u3910
  9935  17EC                     u3911:
  9936  17EC  2FEF               	goto	l2637
  9937  17ED                     u3910:
  9938  17ED                     l2635:
  9939  17ED  17D4               	bsf	___fladd@b+2,7
  9940  17EE  2FF3               	goto	l743
  9941  17EF                     l2637:
  9942  17EF  307F               	movlw	127
  9943  17F0  00DA               	movwf	??___fladd
  9944  17F1  085A               	movf	??___fladd,w
  9945  17F2  05D4               	andwf	___fladd@b+2,f
  9946  17F3                     l743:
  9947  17F3  0864               	movf	___fladd@bexp,w
  9948  17F4  00DA               	movwf	??___fladd
  9949  17F5  1003               	clrc
  9950  17F6  0C5A               	rrf	??___fladd,w
  9951  17F7  00DB               	movwf	??___fladd+1
  9952  17F8  085B               	movf	??___fladd+1,w
  9953  17F9  00D5               	movwf	___fladd@b+3
  9954  17FA                     l2639:
  9955  17FA  1FE2               	btfss	___fladd@signs,7
  9956  17FB  2FFD               	goto	u3921
  9957  17FC  2FFE               	goto	u3920
  9958  17FD                     u3921:
  9959  17FD  2FFF               	goto	l744
  9960  17FE                     u3920:
  9961  17FE                     l2641:
  9962  17FE  17D5               	bsf	___fladd@b+3,7
  9963  17FF                     l744:
  9964  17FF                     l714:
  9965  17FF  0008               	return
  9966  1800                     __end_of___fladd:
  9967                           
  9968                           	psect	text27
  9969  1B21                     __ptext27:	
  9970 ;; *************** function _I2C_restart *****************
  9971 ;; Defined at:
  9972 ;;		line 27 in file "./I2C.h"
  9973 ;; Parameters:    Size  Location     Type
  9974 ;;		None
  9975 ;; Auto vars:     Size  Location     Type
  9976 ;;		None
  9977 ;; Return value:  Size  Location     Type
  9978 ;;                  1    wreg      void 
  9979 ;; Registers used:
  9980 ;;		None
  9981 ;; Tracked objects:
  9982 ;;		On entry : 0/0
  9983 ;;		On exit  : 0/0
  9984 ;;		Unchanged: 0/0
  9985 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9986 ;;      Params:         0       0       0       0       0
  9987 ;;      Locals:         0       0       0       0       0
  9988 ;;      Temps:          0       0       0       0       0
  9989 ;;      Totals:         0       0       0       0       0
  9990 ;;Total ram usage:        0 bytes
  9991 ;; Hardware stack levels used:    1
  9992 ;; This function calls:
  9993 ;;		Nothing
  9994 ;; This function is called by:
  9995 ;;		_LM75_read
  9996 ;;		_LM75_readConfig
  9997 ;; This function uses a non-reentrant model
  9998 ;;
  9999                           
 10000                           
 10001                           ;psect for function _I2C_restart
 10002  1B21                     _I2C_restart:
 10003  1B21                     l2835:	
 10004                           ;incstack = 0
 10005                           ; Regs used in _I2C_restart: []
 10006                           
 10007                           
 10008                           ;./I2C.h: 29:   RSEN = 1;
 10009  1B21  1683               	bsf	3,5	;RP0=1, select bank1
 10010  1B22  1303               	bcf	3,6	;RP1=0, select bank1
 10011  1B23  1491               	bsf	17,1	;volatile
 10012  1B24                     l72:	
 10013                           ;./I2C.h: 30:   while(!SSPIF);
 10014                           
 10015  1B24  1283               	bcf	3,5	;RP0=0, select bank0
 10016  1B25  1D8C               	btfss	12,3	;volatile
 10017  1B26  2B28               	goto	u4441
 10018  1B27  2B29               	goto	u4440
 10019  1B28                     u4441:
 10020  1B28  2B24               	goto	l72
 10021  1B29                     u4440:
 10022  1B29                     l74:
 10023                           
 10024                           ;./I2C.h: 31:   SSPIF = 0;
 10025  1B29  118C               	bcf	12,3	;volatile
 10026  1B2A                     l75:
 10027  1B2A  0008               	return
 10028  1B2B                     __end_of_I2C_restart:
 10029                           
 10030                           	psect	text28
 10031  1B66                     __ptext28:	
 10032 ;; *************** function _I2C_read *****************
 10033 ;; Defined at:
 10034 ;;		line 58 in file "./I2C.h"
 10035 ;; Parameters:    Size  Location     Type
 10036 ;;  acknowledge     1    wreg     unsigned char 
 10037 ;; Auto vars:     Size  Location     Type
 10038 ;;  acknowledge     1    1[COMMON] unsigned char 
 10039 ;; Return value:  Size  Location     Type
 10040 ;;                  1    wreg      unsigned char 
 10041 ;; Registers used:
 10042 ;;		wreg, status,2, status,0, pclath, cstack
 10043 ;; Tracked objects:
 10044 ;;		On entry : 0/0
 10045 ;;		On exit  : 0/0
 10046 ;;		Unchanged: 0/0
 10047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10048 ;;      Params:         0       0       0       0       0
 10049 ;;      Locals:         1       0       0       0       0
 10050 ;;      Temps:          0       0       0       0       0
 10051 ;;      Totals:         1       0       0       0       0
 10052 ;;Total ram usage:        1 bytes
 10053 ;; Hardware stack levels used:    1
 10054 ;; Hardware stack levels required when called:    1
 10055 ;; This function calls:
 10056 ;;		_I2C_ack
 10057 ;; This function is called by:
 10058 ;;		_LM75_read
 10059 ;;		_LM75_readConfig
 10060 ;; This function uses a non-reentrant model
 10061 ;;
 10062                           
 10063                           
 10064                           ;psect for function _I2C_read
 10065  1B66                     _I2C_read:
 10066                           
 10067                           ;incstack = 0
 10068                           ; Regs used in _I2C_read: [wreg+status,2+status,0+pclath+cstack]
 10069                           ;I2C_read@acknowledge stored from wreg
 10070  1B66  00F1               	movwf	I2C_read@acknowledge
 10071  1B67                     l2837:
 10072                           
 10073                           ;./I2C.h: 58: unsigned char I2C_read(char acknowledge);./I2C.h: 59: {;./I2C.h: 60:    RC
      +                          EN = 1;
 10074  1B67  1683               	bsf	3,5	;RP0=1, select bank1
 10075  1B68  1303               	bcf	3,6	;RP1=0, select bank1
 10076  1B69  1591               	bsf	17,3	;volatile
 10077  1B6A                     l96:	
 10078                           ;./I2C.h: 61:    while(!SSPIF);
 10079                           
 10080  1B6A  1283               	bcf	3,5	;RP0=0, select bank0
 10081  1B6B  1D8C               	btfss	12,3	;volatile
 10082  1B6C  2B6E               	goto	u4451
 10083  1B6D  2B6F               	goto	u4450
 10084  1B6E                     u4451:
 10085  1B6E  2B6A               	goto	l96
 10086  1B6F                     u4450:
 10087  1B6F                     l98:
 10088                           
 10089                           ;./I2C.h: 62:    SSPIF = 0;
 10090  1B6F  118C               	bcf	12,3	;volatile
 10091  1B70                     l2839:
 10092                           
 10093                           ;./I2C.h: 63:    I2C_ack(acknowledge);
 10094  1B70  0871               	movf	I2C_read@acknowledge,w
 10095  1B71  160A  158A  2353  160A  158A  	fcall	_I2C_ack
 10096  1B76                     l2841:
 10097                           
 10098                           ;./I2C.h: 65:    return SSPBUF;
 10099  1B76  1283               	bcf	3,5	;RP0=0, select bank0
 10100  1B77  1303               	bcf	3,6	;RP1=0, select bank0
 10101  1B78  0813               	movf	19,w	;volatile
 10102  1B79                     l99:
 10103  1B79  0008               	return
 10104  1B7A                     __end_of_I2C_read:
 10105                           
 10106                           	psect	text29
 10107  1B53                     __ptext29:	
 10108 ;; *************** function _I2C_ack *****************
 10109 ;; Defined at:
 10110 ;;		line 41 in file "./I2C.h"
 10111 ;; Parameters:    Size  Location     Type
 10112 ;;  acknowledge     1    wreg     unsigned char 
 10113 ;; Auto vars:     Size  Location     Type
 10114 ;;  acknowledge     1    0[COMMON] unsigned char 
 10115 ;; Return value:  Size  Location     Type
 10116 ;;                  1    wreg      void 
 10117 ;; Registers used:
 10118 ;;		wreg
 10119 ;; Tracked objects:
 10120 ;;		On entry : 0/0
 10121 ;;		On exit  : 0/0
 10122 ;;		Unchanged: 0/0
 10123 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10124 ;;      Params:         0       0       0       0       0
 10125 ;;      Locals:         1       0       0       0       0
 10126 ;;      Temps:          0       0       0       0       0
 10127 ;;      Totals:         1       0       0       0       0
 10128 ;;Total ram usage:        1 bytes
 10129 ;; Hardware stack levels used:    1
 10130 ;; This function calls:
 10131 ;;		Nothing
 10132 ;; This function is called by:
 10133 ;;		_I2C_read
 10134 ;; This function uses a non-reentrant model
 10135 ;;
 10136                           
 10137                           
 10138                           ;psect for function _I2C_ack
 10139  1B53                     _I2C_ack:
 10140                           
 10141                           ;incstack = 0
 10142                           ; Regs used in _I2C_ack: [wreg]
 10143                           ;I2C_ack@acknowledge stored from wreg
 10144  1B53  00F0               	movwf	I2C_ack@acknowledge
 10145  1B54                     l2275:
 10146                           
 10147                           ;./I2C.h: 41: void I2C_ack(char acknowledge);./I2C.h: 42: {;./I2C.h: 43:   ACKDT = ackno
      +                          wledge;
 10148  1B54  1870               	btfsc	I2C_ack@acknowledge,0
 10149  1B55  2B57               	goto	u3011
 10150  1B56  2B5B               	goto	u3010
 10151  1B57                     u3011:
 10152  1B57  1683               	bsf	3,5	;RP0=1, select bank1
 10153  1B58  1303               	bcf	3,6	;RP1=0, select bank1
 10154  1B59  1691               	bsf	17,5	;volatile
 10155  1B5A  2B5E               	goto	u3024
 10156  1B5B                     u3010:
 10157  1B5B  1683               	bsf	3,5	;RP0=1, select bank1
 10158  1B5C  1303               	bcf	3,6	;RP1=0, select bank1
 10159  1B5D  1291               	bcf	17,5	;volatile
 10160  1B5E                     u3024:
 10161                           
 10162                           ;./I2C.h: 44:   ACKEN = 1;
 10163  1B5E  1611               	bsf	17,4	;volatile
 10164  1B5F                     l84:	
 10165                           ;./I2C.h: 45:   while(!SSPIF);
 10166                           
 10167  1B5F  1283               	bcf	3,5	;RP0=0, select bank0
 10168  1B60  1D8C               	btfss	12,3	;volatile
 10169  1B61  2B63               	goto	u3031
 10170  1B62  2B64               	goto	u3030
 10171  1B63                     u3031:
 10172  1B63  2B5F               	goto	l84
 10173  1B64                     u3030:
 10174  1B64                     l86:
 10175                           
 10176                           ;./I2C.h: 46:   SSPIF = 0;
 10177  1B64  118C               	bcf	12,3	;volatile
 10178  1B65                     l87:
 10179  1B65  0008               	return
 10180  1B66                     __end_of_I2C_ack:
 10181                           
 10182                           	psect	text30
 10183  109C                     __ptext30:	
 10184 ;; *************** function _LM75_init *****************
 10185 ;; Defined at:
 10186 ;;		line 8 in file "./LM75.h"
 10187 ;; Parameters:    Size  Location     Type
 10188 ;;		None
 10189 ;; Auto vars:     Size  Location     Type
 10190 ;;		None
 10191 ;; Return value:  Size  Location     Type
 10192 ;;                  1    wreg      void 
 10193 ;; Registers used:
 10194 ;;		wreg, status,2, status,0, pclath, cstack
 10195 ;; Tracked objects:
 10196 ;;		On entry : 0/0
 10197 ;;		On exit  : 0/0
 10198 ;;		Unchanged: 0/0
 10199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10200 ;;      Params:         0       0       0       0       0
 10201 ;;      Locals:         0       0       0       0       0
 10202 ;;      Temps:          0       0       0       0       0
 10203 ;;      Totals:         0       0       0       0       0
 10204 ;;Total ram usage:        0 bytes
 10205 ;; Hardware stack levels used:    1
 10206 ;; Hardware stack levels required when called:    2
 10207 ;; This function calls:
 10208 ;;		_I2C_init
 10209 ;;		_LM75_set
 10210 ;; This function is called by:
 10211 ;;		_main
 10212 ;; This function uses a non-reentrant model
 10213 ;;
 10214                           
 10215                           
 10216                           ;psect for function _LM75_init
 10217  109C                     _LM75_init:
 10218  109C                     l3181:	
 10219                           ;incstack = 0
 10220                           ; Regs used in _LM75_init: [wreg+status,2+status,0+pclath+cstack]
 10221                           
 10222                           
 10223                           ;./LM75.h: 10:   I2C_init(100000);
 10224  109C  30A0               	movlw	160
 10225  109D  160A  158A  243B  160A  118A  	fcall	_I2C_init
 10226                           
 10227                           ;./LM75.h: 13:   LM75_set(0x03,0x2380);
 10228  10A2  3080               	movlw	128
 10229  10A3  00F1               	movwf	LM75_set@data
 10230  10A4  3023               	movlw	35
 10231  10A5  00F2               	movwf	LM75_set@data+1
 10232  10A6  3003               	movlw	3
 10233  10A7  160A  158A  23A7  160A  118A  	fcall	_LM75_set
 10234                           
 10235                           ;./LM75.h: 14:   LM75_set(0x02,0x1E80);
 10236  10AC  3080               	movlw	128
 10237  10AD  00F1               	movwf	LM75_set@data
 10238  10AE  301E               	movlw	30
 10239  10AF  00F2               	movwf	LM75_set@data+1
 10240  10B0  3002               	movlw	2
 10241  10B1  160A  158A  23A7  160A  118A  	fcall	_LM75_set
 10242  10B6                     l105:
 10243  10B6  0008               	return
 10244  10B7                     __end_of_LM75_init:
 10245                           
 10246                           	psect	text31
 10247  1BA7                     __ptext31:	
 10248 ;; *************** function _LM75_set *****************
 10249 ;; Defined at:
 10250 ;;		line 61 in file "./LM75.h"
 10251 ;; Parameters:    Size  Location     Type
 10252 ;;  regAddress      1    wreg     unsigned char 
 10253 ;;  data            2    1[COMMON] int 
 10254 ;; Auto vars:     Size  Location     Type
 10255 ;;  regAddress      1    3[COMMON] unsigned char 
 10256 ;; Return value:  Size  Location     Type
 10257 ;;                  1    wreg      void 
 10258 ;; Registers used:
 10259 ;;		wreg, status,2, status,0, pclath, cstack
 10260 ;; Tracked objects:
 10261 ;;		On entry : 0/0
 10262 ;;		On exit  : 0/0
 10263 ;;		Unchanged: 0/0
 10264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10265 ;;      Params:         2       0       0       0       0
 10266 ;;      Locals:         1       0       0       0       0
 10267 ;;      Temps:          0       0       0       0       0
 10268 ;;      Totals:         3       0       0       0       0
 10269 ;;Total ram usage:        3 bytes
 10270 ;; Hardware stack levels used:    1
 10271 ;; Hardware stack levels required when called:    1
 10272 ;; This function calls:
 10273 ;;		_I2C_start
 10274 ;;		_I2C_stop
 10275 ;;		_I2C_write
 10276 ;; This function is called by:
 10277 ;;		_LM75_init
 10278 ;; This function uses a non-reentrant model
 10279 ;;
 10280                           
 10281                           
 10282                           ;psect for function _LM75_set
 10283  1BA7                     _LM75_set:
 10284                           
 10285                           ;incstack = 0
 10286                           ; Regs used in _LM75_set: [wreg+status,2+status,0+pclath+cstack]
 10287                           ;LM75_set@regAddress stored from wreg
 10288  1BA7  00F3               	movwf	LM75_set@regAddress
 10289  1BA8                     l2845:
 10290                           
 10291                           ;./LM75.h: 61: void LM75_set(char regAddress, int data);./LM75.h: 62: {;./LM75.h: 63:   
      +                          I2C_start();
 10292  1BA8  160A  158A  230D  160A  158A  	fcall	_I2C_start
 10293  1BAD                     l2847:
 10294                           
 10295                           ;./LM75.h: 65:   I2C_write(0x90);
 10296  1BAD  3090               	movlw	144
 10297  1BAE  160A  158A  232B  160A  158A  	fcall	_I2C_write
 10298  1BB3                     l2849:
 10299                           
 10300                           ;./LM75.h: 66:   I2C_write(regAddress);
 10301  1BB3  0873               	movf	LM75_set@regAddress,w
 10302  1BB4  160A  158A  232B  160A  158A  	fcall	_I2C_write
 10303  1BB9                     l2851:
 10304                           
 10305                           ;./LM75.h: 67:   I2C_write(data>>8);
 10306  1BB9  0872               	movf	LM75_set@data+1,w
 10307  1BBA  160A  158A  232B  160A  158A  	fcall	_I2C_write
 10308  1BBF                     l2853:
 10309                           
 10310                           ;./LM75.h: 68:   I2C_write(data);
 10311  1BBF  0871               	movf	LM75_set@data,w
 10312  1BC0  160A  158A  232B  160A  158A  	fcall	_I2C_write
 10313                           
 10314                           ;./LM75.h: 70:   I2C_stop();
 10315  1BC5  160A  158A  2317  160A  158A  	fcall	_I2C_stop
 10316  1BCA                     l117:
 10317  1BCA  0008               	return
 10318  1BCB                     __end_of_LM75_set:
 10319                           
 10320                           	psect	text32
 10321  1B2B                     __ptext32:	
 10322 ;; *************** function _I2C_write *****************
 10323 ;; Defined at:
 10324 ;;		line 49 in file "./I2C.h"
 10325 ;; Parameters:    Size  Location     Type
 10326 ;;  data            1    wreg     unsigned char 
 10327 ;; Auto vars:     Size  Location     Type
 10328 ;;  data            1    0[COMMON] unsigned char 
 10329 ;; Return value:  Size  Location     Type
 10330 ;;                  1    wreg      unsigned char 
 10331 ;; Registers used:
 10332 ;;		wreg
 10333 ;; Tracked objects:
 10334 ;;		On entry : 0/0
 10335 ;;		On exit  : 0/0
 10336 ;;		Unchanged: 0/0
 10337 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10338 ;;      Params:         0       0       0       0       0
 10339 ;;      Locals:         1       0       0       0       0
 10340 ;;      Temps:          0       0       0       0       0
 10341 ;;      Totals:         1       0       0       0       0
 10342 ;;Total ram usage:        1 bytes
 10343 ;; Hardware stack levels used:    1
 10344 ;; This function calls:
 10345 ;;		Nothing
 10346 ;; This function is called by:
 10347 ;;		_LM75_read
 10348 ;;		_LM75_set
 10349 ;;		_LM75_setConfig
 10350 ;;		_LM75_readConfig
 10351 ;; This function uses a non-reentrant model
 10352 ;;
 10353                           
 10354                           
 10355                           ;psect for function _I2C_write
 10356  1B2B                     _I2C_write:
 10357                           
 10358                           ;incstack = 0
 10359                           ; Regs used in _I2C_write: [wreg]
 10360                           ;I2C_write@data stored from wreg
 10361  1B2B  00F0               	movwf	I2C_write@data
 10362  1B2C                     l2277:
 10363                           
 10364                           ;./I2C.h: 49: unsigned char I2C_write(unsigned char data);./I2C.h: 50: {;./I2C.h: 51:   
      +                          SSPBUF = data;
 10365  1B2C  0870               	movf	I2C_write@data,w
 10366  1B2D  1283               	bcf	3,5	;RP0=0, select bank0
 10367  1B2E  1303               	bcf	3,6	;RP1=0, select bank0
 10368  1B2F  0093               	movwf	19	;volatile
 10369  1B30                     l90:	
 10370                           ;./I2C.h: 52:   while(!SSPIF);
 10371                           
 10372  1B30  1D8C               	btfss	12,3	;volatile
 10373  1B31  2B33               	goto	u3041
 10374  1B32  2B34               	goto	u3040
 10375  1B33                     u3041:
 10376  1B33  2B30               	goto	l90
 10377  1B34                     u3040:
 10378  1B34                     l92:
 10379                           
 10380                           ;./I2C.h: 53:   SSPIF = 0;
 10381  1B34  118C               	bcf	12,3	;volatile
 10382  1B35                     l93:	
 10383                           ;./I2C.h: 55:   return ACKSTAT;;	Return value of _I2C_write is never used
 10384                           
 10385  1B35  0008               	return
 10386  1B36                     __end_of_I2C_write:
 10387                           
 10388                           	psect	text33
 10389  1B17                     __ptext33:	
 10390 ;; *************** function _I2C_stop *****************
 10391 ;; Defined at:
 10392 ;;		line 34 in file "./I2C.h"
 10393 ;; Parameters:    Size  Location     Type
 10394 ;;		None
 10395 ;; Auto vars:     Size  Location     Type
 10396 ;;		None
 10397 ;; Return value:  Size  Location     Type
 10398 ;;                  1    wreg      void 
 10399 ;; Registers used:
 10400 ;;		None
 10401 ;; Tracked objects:
 10402 ;;		On entry : 0/0
 10403 ;;		On exit  : 0/0
 10404 ;;		Unchanged: 0/0
 10405 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10406 ;;      Params:         0       0       0       0       0
 10407 ;;      Locals:         0       0       0       0       0
 10408 ;;      Temps:          0       0       0       0       0
 10409 ;;      Totals:         0       0       0       0       0
 10410 ;;Total ram usage:        0 bytes
 10411 ;; Hardware stack levels used:    1
 10412 ;; This function calls:
 10413 ;;		Nothing
 10414 ;; This function is called by:
 10415 ;;		_LM75_read
 10416 ;;		_LM75_set
 10417 ;;		_LM75_setConfig
 10418 ;;		_LM75_readConfig
 10419 ;; This function uses a non-reentrant model
 10420 ;;
 10421                           
 10422                           
 10423                           ;psect for function _I2C_stop
 10424  1B17                     _I2C_stop:
 10425  1B17                     l2273:	
 10426                           ;incstack = 0
 10427                           ; Regs used in _I2C_stop: []
 10428                           
 10429                           
 10430                           ;./I2C.h: 36:   PEN = 1;
 10431  1B17  1683               	bsf	3,5	;RP0=1, select bank1
 10432  1B18  1303               	bcf	3,6	;RP1=0, select bank1
 10433  1B19  1511               	bsf	17,2	;volatile
 10434  1B1A                     l78:	
 10435                           ;./I2C.h: 37:   while(!SSPIF);
 10436                           
 10437  1B1A  1283               	bcf	3,5	;RP0=0, select bank0
 10438  1B1B  1D8C               	btfss	12,3	;volatile
 10439  1B1C  2B1E               	goto	u3001
 10440  1B1D  2B1F               	goto	u3000
 10441  1B1E                     u3001:
 10442  1B1E  2B1A               	goto	l78
 10443  1B1F                     u3000:
 10444  1B1F                     l80:
 10445                           
 10446                           ;./I2C.h: 38:   SSPIF = 0;
 10447  1B1F  118C               	bcf	12,3	;volatile
 10448  1B20                     l81:
 10449  1B20  0008               	return
 10450  1B21                     __end_of_I2C_stop:
 10451                           
 10452                           	psect	text34
 10453  1B0D                     __ptext34:	
 10454 ;; *************** function _I2C_start *****************
 10455 ;; Defined at:
 10456 ;;		line 20 in file "./I2C.h"
 10457 ;; Parameters:    Size  Location     Type
 10458 ;;		None
 10459 ;; Auto vars:     Size  Location     Type
 10460 ;;		None
 10461 ;; Return value:  Size  Location     Type
 10462 ;;                  1    wreg      void 
 10463 ;; Registers used:
 10464 ;;		None
 10465 ;; Tracked objects:
 10466 ;;		On entry : 0/0
 10467 ;;		On exit  : 0/0
 10468 ;;		Unchanged: 0/0
 10469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10470 ;;      Params:         0       0       0       0       0
 10471 ;;      Locals:         0       0       0       0       0
 10472 ;;      Temps:          0       0       0       0       0
 10473 ;;      Totals:         0       0       0       0       0
 10474 ;;Total ram usage:        0 bytes
 10475 ;; Hardware stack levels used:    1
 10476 ;; This function calls:
 10477 ;;		Nothing
 10478 ;; This function is called by:
 10479 ;;		_LM75_read
 10480 ;;		_LM75_set
 10481 ;;		_LM75_setConfig
 10482 ;;		_LM75_readConfig
 10483 ;; This function uses a non-reentrant model
 10484 ;;
 10485                           
 10486                           
 10487                           ;psect for function _I2C_start
 10488  1B0D                     _I2C_start:
 10489  1B0D                     l2271:	
 10490                           ;incstack = 0
 10491                           ; Regs used in _I2C_start: []
 10492                           
 10493                           
 10494                           ;./I2C.h: 22:   SEN = 1;
 10495  1B0D  1683               	bsf	3,5	;RP0=1, select bank1
 10496  1B0E  1303               	bcf	3,6	;RP1=0, select bank1
 10497  1B0F  1411               	bsf	17,0	;volatile
 10498  1B10                     l66:	
 10499                           ;./I2C.h: 23:   while(!SSPIF);
 10500                           
 10501  1B10  1283               	bcf	3,5	;RP0=0, select bank0
 10502  1B11  1D8C               	btfss	12,3	;volatile
 10503  1B12  2B14               	goto	u2991
 10504  1B13  2B15               	goto	u2990
 10505  1B14                     u2991:
 10506  1B14  2B10               	goto	l66
 10507  1B15                     u2990:
 10508  1B15                     l68:
 10509                           
 10510                           ;./I2C.h: 24:   SSPIF = 0;
 10511  1B15  118C               	bcf	12,3	;volatile
 10512  1B16                     l69:
 10513  1B16  0008               	return
 10514  1B17                     __end_of_I2C_start:
 10515                           
 10516                           	psect	text35
 10517  1C3B                     __ptext35:	
 10518 ;; *************** function _I2C_init *****************
 10519 ;; Defined at:
 10520 ;;		line 10 in file "./I2C.h"
 10521 ;; Parameters:    Size  Location     Type
 10522 ;;  speed           1    wreg     unsigned char 
 10523 ;; Auto vars:     Size  Location     Type
 10524 ;;  speed           1   13[COMMON] unsigned char 
 10525 ;; Return value:  Size  Location     Type
 10526 ;;                  1    wreg      void 
 10527 ;; Registers used:
 10528 ;;		wreg, status,2, status,0, pclath, cstack
 10529 ;; Tracked objects:
 10530 ;;		On entry : 0/0
 10531 ;;		On exit  : 0/0
 10532 ;;		Unchanged: 0/0
 10533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10534 ;;      Params:         0       0       0       0       0
 10535 ;;      Locals:         1       0       0       0       0
 10536 ;;      Temps:          4       0       0       0       0
 10537 ;;      Totals:         5       0       0       0       0
 10538 ;;Total ram usage:        5 bytes
 10539 ;; Hardware stack levels used:    1
 10540 ;; Hardware stack levels required when called:    1
 10541 ;; This function calls:
 10542 ;;		___aldiv
 10543 ;; This function is called by:
 10544 ;;		_LM75_init
 10545 ;; This function uses a non-reentrant model
 10546 ;;
 10547                           
 10548                           
 10549                           ;psect for function _I2C_init
 10550  1C3B                     _I2C_init:
 10551                           
 10552                           ;incstack = 0
 10553                           ; Regs used in _I2C_init: [wreg+status,2+status,0+pclath+cstack]
 10554                           ;I2C_init@speed stored from wreg
 10555  1C3B  00FD               	movwf	I2C_init@speed
 10556  1C3C                     l2827:
 10557                           
 10558                           ;./I2C.h: 10: void I2C_init(unsigned char speed);./I2C.h: 11: {;./I2C.h: 12:   TRISC3 = 
      +                          1;
 10559  1C3C  1683               	bsf	3,5	;RP0=1, select bank1
 10560  1C3D  1303               	bcf	3,6	;RP1=0, select bank1
 10561  1C3E  1587               	bsf	7,3	;volatile
 10562                           
 10563                           ;./I2C.h: 13:   TRISC4 = 1;
 10564  1C3F  1607               	bsf	7,4	;volatile
 10565  1C40                     l2829:
 10566                           
 10567                           ;./I2C.h: 15:   SSPADD = ((4000000/4000)/speed) - 1;
 10568  1C40  087D               	movf	I2C_init@speed,w
 10569  1C41  00F9               	movwf	??_I2C_init
 10570  1C42  01FA               	clrf	??_I2C_init+1
 10571  1C43  01FB               	clrf	??_I2C_init+2
 10572  1C44  01FC               	clrf	??_I2C_init+3
 10573  1C45  087C               	movf	??_I2C_init+3,w
 10574  1C46  00F3               	movwf	___aldiv@divisor+3
 10575  1C47  087B               	movf	??_I2C_init+2,w
 10576  1C48  00F2               	movwf	___aldiv@divisor+2
 10577  1C49  087A               	movf	??_I2C_init+1,w
 10578  1C4A  00F1               	movwf	___aldiv@divisor+1
 10579  1C4B  0879               	movf	??_I2C_init,w
 10580  1C4C  00F0               	movwf	___aldiv@divisor
 10581  1C4D  3000               	movlw	0
 10582  1C4E  00F7               	movwf	___aldiv@dividend+3
 10583  1C4F  3000               	movlw	0
 10584  1C50  00F6               	movwf	___aldiv@dividend+2
 10585  1C51  3003               	movlw	3
 10586  1C52  00F5               	movwf	___aldiv@dividend+1
 10587  1C53  30E8               	movlw	232
 10588  1C54  00F4               	movwf	___aldiv@dividend
 10589  1C55  160A  118A  20B7  160A  158A  	fcall	___aldiv
 10590  1C5A  0870               	movf	?___aldiv,w
 10591  1C5B  3EFF               	addlw	255
 10592  1C5C  1683               	bsf	3,5	;RP0=1, select bank1
 10593  1C5D  1303               	bcf	3,6	;RP1=0, select bank1
 10594  1C5E  0093               	movwf	19	;volatile
 10595  1C5F                     l2831:
 10596                           
 10597                           ;./I2C.h: 16:   SSPSTAT = 0x80;
 10598  1C5F  3080               	movlw	128
 10599  1C60  0094               	movwf	20	;volatile
 10600  1C61                     l2833:
 10601                           
 10602                           ;./I2C.h: 17:   SSPCON = 0x28;
 10603  1C61  3028               	movlw	40
 10604  1C62  1283               	bcf	3,5	;RP0=0, select bank0
 10605  1C63  1303               	bcf	3,6	;RP1=0, select bank0
 10606  1C64  0094               	movwf	20	;volatile
 10607  1C65                     l63:
 10608  1C65  0008               	return
 10609  1C66                     __end_of_I2C_init:
 10610                           
 10611                           	psect	text36
 10612  10B7                     __ptext36:	
 10613 ;; *************** function ___aldiv *****************
 10614 ;; Defined at:
 10615 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\aldiv.c"
 10616 ;; Parameters:    Size  Location     Type
 10617 ;;  divisor         4    0[COMMON] long 
 10618 ;;  dividend        4    4[COMMON] long 
 10619 ;; Auto vars:     Size  Location     Type
 10620 ;;  quotient        4    2[BANK0 ] long 
 10621 ;;  sign            1    1[BANK0 ] unsigned char 
 10622 ;;  counter         1    0[BANK0 ] unsigned char 
 10623 ;; Return value:  Size  Location     Type
 10624 ;;                  4    0[COMMON] long 
 10625 ;; Registers used:
 10626 ;;		wreg, status,2, status,0
 10627 ;; Tracked objects:
 10628 ;;		On entry : 0/0
 10629 ;;		On exit  : 0/0
 10630 ;;		Unchanged: 0/0
 10631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10632 ;;      Params:         8       0       0       0       0
 10633 ;;      Locals:         0       6       0       0       0
 10634 ;;      Temps:          1       0       0       0       0
 10635 ;;      Totals:         9       6       0       0       0
 10636 ;;Total ram usage:       15 bytes
 10637 ;; Hardware stack levels used:    1
 10638 ;; This function calls:
 10639 ;;		Nothing
 10640 ;; This function is called by:
 10641 ;;		_I2C_init
 10642 ;; This function uses a non-reentrant model
 10643 ;;
 10644                           
 10645                           
 10646                           ;psect for function ___aldiv
 10647  10B7                     ___aldiv:
 10648  10B7                     l2279:	
 10649                           ;incstack = 0
 10650                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10651                           
 10652  10B7  1283               	bcf	3,5	;RP0=0, select bank0
 10653  10B8  1303               	bcf	3,6	;RP1=0, select bank0
 10654  10B9  01A1               	clrf	___aldiv@sign
 10655  10BA                     l2281:
 10656  10BA  1FF3               	btfss	___aldiv@divisor+3,7
 10657  10BB  28BD               	goto	u3051
 10658  10BC  28BE               	goto	u3050
 10659  10BD                     u3051:
 10660  10BD  28CB               	goto	l439
 10661  10BE                     u3050:
 10662  10BE                     l2283:
 10663  10BE  09F0               	comf	___aldiv@divisor,f
 10664  10BF  09F1               	comf	___aldiv@divisor+1,f
 10665  10C0  09F2               	comf	___aldiv@divisor+2,f
 10666  10C1  09F3               	comf	___aldiv@divisor+3,f
 10667  10C2  0AF0               	incf	___aldiv@divisor,f
 10668  10C3  1903               	skipnz
 10669  10C4  0AF1               	incf	___aldiv@divisor+1,f
 10670  10C5  1903               	skipnz
 10671  10C6  0AF2               	incf	___aldiv@divisor+2,f
 10672  10C7  1903               	skipnz
 10673  10C8  0AF3               	incf	___aldiv@divisor+3,f
 10674  10C9  01A1               	clrf	___aldiv@sign
 10675  10CA  0AA1               	incf	___aldiv@sign,f
 10676  10CB                     l439:
 10677  10CB  1FF7               	btfss	___aldiv@dividend+3,7
 10678  10CC  28CE               	goto	u3061
 10679  10CD  28CF               	goto	u3060
 10680  10CE                     u3061:
 10681  10CE  28DE               	goto	l2289
 10682  10CF                     u3060:
 10683  10CF                     l2285:
 10684  10CF  09F4               	comf	___aldiv@dividend,f
 10685  10D0  09F5               	comf	___aldiv@dividend+1,f
 10686  10D1  09F6               	comf	___aldiv@dividend+2,f
 10687  10D2  09F7               	comf	___aldiv@dividend+3,f
 10688  10D3  0AF4               	incf	___aldiv@dividend,f
 10689  10D4  1903               	skipnz
 10690  10D5  0AF5               	incf	___aldiv@dividend+1,f
 10691  10D6  1903               	skipnz
 10692  10D7  0AF6               	incf	___aldiv@dividend+2,f
 10693  10D8  1903               	skipnz
 10694  10D9  0AF7               	incf	___aldiv@dividend+3,f
 10695  10DA                     l2287:
 10696  10DA  3001               	movlw	1
 10697  10DB  00F8               	movwf	??___aldiv
 10698  10DC  0878               	movf	??___aldiv,w
 10699  10DD  06A1               	xorwf	___aldiv@sign,f
 10700  10DE                     l2289:
 10701  10DE  3000               	movlw	0
 10702  10DF  00A5               	movwf	___aldiv@quotient+3
 10703  10E0  3000               	movlw	0
 10704  10E1  00A4               	movwf	___aldiv@quotient+2
 10705  10E2  3000               	movlw	0
 10706  10E3  00A3               	movwf	___aldiv@quotient+1
 10707  10E4  3000               	movlw	0
 10708  10E5  00A2               	movwf	___aldiv@quotient
 10709  10E6                     l2291:
 10710  10E6  0873               	movf	___aldiv@divisor+3,w
 10711  10E7  0472               	iorwf	___aldiv@divisor+2,w
 10712  10E8  0471               	iorwf	___aldiv@divisor+1,w
 10713  10E9  0470               	iorwf	___aldiv@divisor,w
 10714  10EA  1903               	skipnz
 10715  10EB  28ED               	goto	u3071
 10716  10EC  28EE               	goto	u3070
 10717  10ED                     u3071:
 10718  10ED  293B               	goto	l2311
 10719  10EE                     u3070:
 10720  10EE                     l2293:
 10721  10EE  01A0               	clrf	___aldiv@counter
 10722  10EF  0AA0               	incf	___aldiv@counter,f
 10723  10F0  28FE               	goto	l2297
 10724  10F1                     l2295:
 10725  10F1  3001               	movlw	1
 10726  10F2  00F8               	movwf	??___aldiv
 10727  10F3                     u3085:
 10728  10F3  1003               	clrc
 10729  10F4  0DF0               	rlf	___aldiv@divisor,f
 10730  10F5  0DF1               	rlf	___aldiv@divisor+1,f
 10731  10F6  0DF2               	rlf	___aldiv@divisor+2,f
 10732  10F7  0DF3               	rlf	___aldiv@divisor+3,f
 10733  10F8  0BF8               	decfsz	??___aldiv,f
 10734  10F9  28F3               	goto	u3085
 10735  10FA  3001               	movlw	1
 10736  10FB  00F8               	movwf	??___aldiv
 10737  10FC  0878               	movf	??___aldiv,w
 10738  10FD  07A0               	addwf	___aldiv@counter,f
 10739  10FE                     l2297:
 10740  10FE  1FF3               	btfss	___aldiv@divisor+3,7
 10741  10FF  2901               	goto	u3091
 10742  1100  2902               	goto	u3090
 10743  1101                     u3091:
 10744  1101  28F1               	goto	l2295
 10745  1102                     u3090:
 10746  1102                     l2299:
 10747  1102  3001               	movlw	1
 10748  1103  00F8               	movwf	??___aldiv
 10749  1104                     u3105:
 10750  1104  1003               	clrc
 10751  1105  0DA2               	rlf	___aldiv@quotient,f
 10752  1106  0DA3               	rlf	___aldiv@quotient+1,f
 10753  1107  0DA4               	rlf	___aldiv@quotient+2,f
 10754  1108  0DA5               	rlf	___aldiv@quotient+3,f
 10755  1109  0BF8               	decfsz	??___aldiv,f
 10756  110A  2904               	goto	u3105
 10757  110B                     l2301:
 10758  110B  0873               	movf	___aldiv@divisor+3,w
 10759  110C  0277               	subwf	___aldiv@dividend+3,w
 10760  110D  1D03               	skipz
 10761  110E  2919               	goto	u3115
 10762  110F  0872               	movf	___aldiv@divisor+2,w
 10763  1110  0276               	subwf	___aldiv@dividend+2,w
 10764  1111  1D03               	skipz
 10765  1112  2919               	goto	u3115
 10766  1113  0871               	movf	___aldiv@divisor+1,w
 10767  1114  0275               	subwf	___aldiv@dividend+1,w
 10768  1115  1D03               	skipz
 10769  1116  2919               	goto	u3115
 10770  1117  0870               	movf	___aldiv@divisor,w
 10771  1118  0274               	subwf	___aldiv@dividend,w
 10772  1119                     u3115:
 10773  1119  1C03               	skipc
 10774  111A  291C               	goto	u3111
 10775  111B  291D               	goto	u3110
 10776  111C                     u3111:
 10777  111C  292C               	goto	l2307
 10778  111D                     u3110:
 10779  111D                     l2303:
 10780  111D  0870               	movf	___aldiv@divisor,w
 10781  111E  02F4               	subwf	___aldiv@dividend,f
 10782  111F  0871               	movf	___aldiv@divisor+1,w
 10783  1120  1C03               	skipc
 10784  1121  0F71               	incfsz	___aldiv@divisor+1,w
 10785  1122  02F5               	subwf	___aldiv@dividend+1,f
 10786  1123  0872               	movf	___aldiv@divisor+2,w
 10787  1124  1C03               	skipc
 10788  1125  0F72               	incfsz	___aldiv@divisor+2,w
 10789  1126  02F6               	subwf	___aldiv@dividend+2,f
 10790  1127  0873               	movf	___aldiv@divisor+3,w
 10791  1128  1C03               	skipc
 10792  1129  0F73               	incfsz	___aldiv@divisor+3,w
 10793  112A  02F7               	subwf	___aldiv@dividend+3,f
 10794  112B                     l2305:
 10795  112B  1422               	bsf	___aldiv@quotient,0
 10796  112C                     l2307:
 10797  112C  3001               	movlw	1
 10798  112D                     u3125:
 10799  112D  1003               	clrc
 10800  112E  0CF3               	rrf	___aldiv@divisor+3,f
 10801  112F  0CF2               	rrf	___aldiv@divisor+2,f
 10802  1130  0CF1               	rrf	___aldiv@divisor+1,f
 10803  1131  0CF0               	rrf	___aldiv@divisor,f
 10804  1132  3EFF               	addlw	-1
 10805  1133  1D03               	skipz
 10806  1134  292D               	goto	u3125
 10807  1135                     l2309:
 10808  1135  3001               	movlw	1
 10809  1136  02A0               	subwf	___aldiv@counter,f
 10810  1137  1D03               	btfss	3,2
 10811  1138  293A               	goto	u3131
 10812  1139  293B               	goto	u3130
 10813  113A                     u3131:
 10814  113A  2902               	goto	l2299
 10815  113B                     u3130:
 10816  113B                     l2311:
 10817  113B  0821               	movf	___aldiv@sign,w
 10818  113C  1903               	btfsc	3,2
 10819  113D  293F               	goto	u3141
 10820  113E  2940               	goto	u3140
 10821  113F                     u3141:
 10822  113F  294B               	goto	l2315
 10823  1140                     u3140:
 10824  1140                     l2313:
 10825  1140  09A2               	comf	___aldiv@quotient,f
 10826  1141  09A3               	comf	___aldiv@quotient+1,f
 10827  1142  09A4               	comf	___aldiv@quotient+2,f
 10828  1143  09A5               	comf	___aldiv@quotient+3,f
 10829  1144  0AA2               	incf	___aldiv@quotient,f
 10830  1145  1903               	skipnz
 10831  1146  0AA3               	incf	___aldiv@quotient+1,f
 10832  1147  1903               	skipnz
 10833  1148  0AA4               	incf	___aldiv@quotient+2,f
 10834  1149  1903               	skipnz
 10835  114A  0AA5               	incf	___aldiv@quotient+3,f
 10836  114B                     l2315:
 10837  114B  0825               	movf	___aldiv@quotient+3,w
 10838  114C  00F3               	movwf	?___aldiv+3
 10839  114D  0824               	movf	___aldiv@quotient+2,w
 10840  114E  00F2               	movwf	?___aldiv+2
 10841  114F  0823               	movf	___aldiv@quotient+1,w
 10842  1150  00F1               	movwf	?___aldiv+1
 10843  1151  0822               	movf	___aldiv@quotient,w
 10844  1152  00F0               	movwf	?___aldiv
 10845  1153                     l449:
 10846  1153  0008               	return
 10847  1154                     __end_of___aldiv:
 10848                           
 10849                           	psect	text37
 10850  1B7A                     __ptext37:	
 10851 ;; *************** function _INIT_UART *****************
 10852 ;; Defined at:
 10853 ;;		line 10 in file "UART.c"
 10854 ;; Parameters:    Size  Location     Type
 10855 ;;		None
 10856 ;; Auto vars:     Size  Location     Type
 10857 ;;		None
 10858 ;; Return value:  Size  Location     Type
 10859 ;;                  1    wreg      void 
 10860 ;; Registers used:
 10861 ;;		wreg
 10862 ;; Tracked objects:
 10863 ;;		On entry : 0/0
 10864 ;;		On exit  : 0/0
 10865 ;;		Unchanged: 0/0
 10866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10867 ;;      Params:         0       0       0       0       0
 10868 ;;      Locals:         0       0       0       0       0
 10869 ;;      Temps:          0       0       0       0       0
 10870 ;;      Totals:         0       0       0       0       0
 10871 ;;Total ram usage:        0 bytes
 10872 ;; Hardware stack levels used:    1
 10873 ;; This function calls:
 10874 ;;		Nothing
 10875 ;; This function is called by:
 10876 ;;		_main
 10877 ;; This function uses a non-reentrant model
 10878 ;;
 10879                           
 10880                           
 10881                           ;psect for function _INIT_UART
 10882  1B7A                     _INIT_UART:
 10883  1B7A                     l3211:	
 10884                           ;incstack = 0
 10885                           ; Regs used in _INIT_UART: [wreg]
 10886                           
 10887                           
 10888                           ;UART.c: 11:     TRISCbits.TRISC7=1 ;
 10889  1B7A  1683               	bsf	3,5	;RP0=1, select bank1
 10890  1B7B  1303               	bcf	3,6	;RP1=0, select bank1
 10891  1B7C  1787               	bsf	7,7	;volatile
 10892                           
 10893                           ;UART.c: 12:     TXSTAbits.SYNC = 0;
 10894  1B7D  1218               	bcf	24,4	;volatile
 10895                           
 10896                           ;UART.c: 13:     RCSTAbits.SPEN = 1;
 10897  1B7E  1283               	bcf	3,5	;RP0=0, select bank0
 10898  1B7F  1303               	bcf	3,6	;RP1=0, select bank0
 10899  1B80  1798               	bsf	24,7	;volatile
 10900                           
 10901                           ;UART.c: 14:     PIE1bits.RCIE = 1;
 10902  1B81  1683               	bsf	3,5	;RP0=1, select bank1
 10903  1B82  1303               	bcf	3,6	;RP1=0, select bank1
 10904  1B83  168C               	bsf	12,5	;volatile
 10905                           
 10906                           ;UART.c: 15:     INTCONbits.GIE = 1;
 10907  1B84  178B               	bsf	11,7	;volatile
 10908                           
 10909                           ;UART.c: 16:     TXSTAbits.BRGH = 0;
 10910  1B85  1118               	bcf	24,2	;volatile
 10911                           
 10912                           ;UART.c: 17:     BAUDCTLbits.BRG16 = 1;
 10913  1B86  1683               	bsf	3,5	;RP0=1, select bank3
 10914  1B87  1703               	bsf	3,6	;RP1=1, select bank3
 10915  1B88  1587               	bsf	7,3	;volatile
 10916                           
 10917                           ;UART.c: 18:     TXSTAbits.TXEN = 1;
 10918  1B89  1683               	bsf	3,5	;RP0=1, select bank1
 10919  1B8A  1303               	bcf	3,6	;RP1=0, select bank1
 10920  1B8B  1698               	bsf	24,5	;volatile
 10921  1B8C                     l3213:
 10922                           
 10923                           ;UART.c: 19:     SPBRG = 25;
 10924  1B8C  3019               	movlw	25
 10925  1B8D  0099               	movwf	25	;volatile
 10926  1B8E                     l157:
 10927  1B8E  0008               	return
 10928  1B8F                     __end_of_INIT_UART:
 10929  007E                     btemp	set	126	;btemp
 10930  007E                     wtemp0	set	126
 10931                           
 10932                           	psect	config
 10933                           
 10934                           ;Config register CONFIG1 @ 0x2007
 10935                           ;	Oscillator Selection bits
 10936                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
 10937                           ;	Watchdog Timer Enable bit
 10938                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10939                           ;	Power-up Timer Enable bit
 10940                           ;	PWRTE = OFF, PWRT disabled
 10941                           ;	RE3/MCLR pin function select bit
 10942                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10943                           ;	Code Protection bit
 10944                           ;	CP = OFF, Program memory code protection is disabled
 10945                           ;	Data Code Protection bit
 10946                           ;	CPD = OFF, Data memory code protection is disabled
 10947                           ;	Brown Out Reset Selection bits
 10948                           ;	BOREN = OFF, BOR disabled
 10949                           ;	Internal External Switchover bit
 10950                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10951                           ;	Fail-Safe Clock Monitor Enabled bit
 10952                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10953                           ;	Low Voltage Programming Enable bit
 10954                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10955                           ;	In-Circuit Debugger Mode bit
 10956                           ;	DEBUG = 0x1, unprogrammed default
 10957  2007                     	org	8199
 10958  2007  20D5               	dw	8405
 10959                           
 10960                           ;Config register CONFIG2 @ 0x2008
 10961                           ;	Brown-out Reset Selection bit
 10962                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10963                           ;	Flash Program Memory Self Write Enable bits
 10964                           ;	WRT = OFF, Write protection off
 10965  2008                     	org	8200
 10966  2008  3FFF               	dw	16383

Data Sizes:
    Strings     6
    Constant    144
    Data        0
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     80      80
    BANK1            80     52      76
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_1(CODE[6]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> out(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    write@entrada	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), out(BANK1[20]), 


Critical Paths under _main in COMMON

    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flsub->___xxtofl
    _toFloat->___xxtofl
    _I2C_read->_I2C_ack
    _LM75_init->_I2C_init
    _LM75_set->_I2C_write
    _I2C_init->___aldiv

Critical Paths under _main in BANK0

    _main->_LM75_read
    _sprintf->_LM75_read
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    _LM75_read->_toFloat
    _toFloat->___fladd
    ___fladd->_fround
    _I2C_init->___aldiv

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->_LM75_read
    _LM75_read->_toFloat

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0   35667
                                             49 BANK1      3     3      0
                          _INIT_UART
                          _LM75_init
                          _LM75_read
                              _setup
                            _sprintf
                              _write
 ---------------------------------------------------------------------------------
 (1) _write                                                4     2      2     240
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   31476
                                             12 BANK1     37    32      5
                          _LM75_read (ARG)
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7408
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    5871
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4393
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2637
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LM75_read                                           11     7      4    3237
                                             76 BANK0      4     0      4
                                              5 BANK1      7     7      0
                           _I2C_read
                        _I2C_restart
                          _I2C_start
                           _I2C_stop
                          _I2C_write
                            _toFloat
 ---------------------------------------------------------------------------------
 (2) _toFloat                                             11     7      4    3103
                                             70 BANK0      6     2      4
                                              0 BANK1      5     5      0
                            ___fladd
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2440
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) _I2C_restart                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_read                                             1     1      0      44
                                              1 COMMON     1     1      0
                            _I2C_ack
 ---------------------------------------------------------------------------------
 (3) _I2C_ack                                              1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _LM75_init                                            0     0      0     714
                           _I2C_init
                           _LM75_set
 ---------------------------------------------------------------------------------
 (2) _LM75_set                                             3     1      2     240
                                              1 COMMON     3     1      2
                          _I2C_start
                           _I2C_stop
                          _I2C_write
 ---------------------------------------------------------------------------------
 (2) _I2C_write                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _I2C_stop                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_start                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _I2C_init                                             5     5      0     474
                                              9 COMMON     5     5      0
                            ___aldiv
 ---------------------------------------------------------------------------------
 (3) ___aldiv                                             15     7      8     452
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (1) _INIT_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INIT_UART
   _LM75_init
     _I2C_init
       ___aldiv
     _LM75_set
       _I2C_start
       _I2C_stop
       _I2C_write
   _LM75_read
     _I2C_read
       _I2C_ack
     _I2C_restart
     _I2C_start
     _I2C_stop
     _I2C_write
     _toFloat
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl
   _setup
   _sprintf
     _LM75_read (ARG)
       _I2C_read
         _I2C_ack
       _I2C_restart
       _I2C_start
       _I2C_stop
       _I2C_write
       _toFloat
         ___fladd
           _fround (ARG)
             ___flmul
               __Umul8_16
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
               ___lwdiv (ARG)
                 ___lwmod (ARG)
               ___lwmod (ARG)
             ___lwdiv
               ___lwmod (ARG)
             ___lwmod
         ___xxtofl
     ___awdiv (ARG)
       ___awmod (ARG)
     ___fladd (ARG)
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq (ARG)
     ___flge (ARG)
     ___flmul (ARG)
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
     ___flneg (ARG)
     ___flsub (ARG)
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol (ARG)
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
     ___lldiv (ARG)
     ___llmod (ARG)
     ___wmul (ARG)
     ___xxtofl (ARG)
     __div_to_l_ (ARG)
     __tdiv_to_l_ (ARG)
     _fround (ARG)
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit (ARG)
     _scale (ARG)
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
   _write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      AA       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     50      50       5      100.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50     34      4C       7       95.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      AA      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Mar 06 21:46:20 2021

                      _x 00D4                        pc 0002                       l63 1C65  
                     l80 1B1F                       l72 1B24                       l81 1B20  
                     l66 1B10                       l90 1B30                       l74 1B29  
                     l75 1B2A                       l68 1B15                       l92 1B34  
                     l84 1B5F                       l69 1B16                       l93 1B35  
                     l78 1B1A                       l86 1B64                       l87 1B65  
                     l96 1B6A                       l98 1B6F                       l99 1B79  
           ___awdiv@sign 0021                       fsr 0004      ___wmul@multiplicand 0072  
     __size_of_I2C_start 000A      __Umul8_16@word_mpld 0076       __size_of_I2C_write 000B  
                    l105 10B6                      l121 1FFF                      l108 1F0C  
                    l117 1BCA                      l128 1BA6                      l160 1DE8  
                    l410 1EA3                      l163 1DFF                      l340 0582  
                    l172 1E37                      l157 1B8E                      l309 013D  
                    l166 1E16                      l175 1E3D                      l280 1577  
                    l169 1E2D                      l602 135F                      l370 07F2  
                    l355 072D                      l347 05C6                      l540 1DDE  
                    l701 15DB                      l630 1D85                      l374 1BFB  
                    l439 10CB                      l527 1F75                      l287 0C9E  
                    l560 1D00                      l376 1C13                      l544 093F  
                    l449 1153                      l705 1682                      l561 1D1C  
                    l545 08A4                      l722 174D                      l714 17FF  
                    l562 1D31                      l707 1659                      l555 0932  
                    l803 0F6B                      l732 1793                      l548 0902  
                    l565 1170                      l573 1B40                      l726 1771  
                    l743 17F3                      l735 17D1                      l591 136C  
                    l744 17FF                      l568 11DC                      l584 086C  
                    l592 12DE                      l816 1C28                      l680 1CE3  
                    l841 1218                      l569 11F5                      l577 0881  
                    l809 0FF3                      l818 1C3A                      l690 1C9F  
                    l843 12AF                      l747 1BEE                      l587 0881  
                    l595 132F                      l861 1B52                      l854 1279  
                    l855 1285                      l847 125D                      l797 0FFF  
                    _PEN 048A                      _SEN 0488                      _R_W 04A2  
                    fsr0 0004                      _out 00D8                      indf 0000  
        __end_of_I2C_ack 1B66             ___awmod@sign 0076      I2C_read@acknowledge 0071  
           ___flmul@aexp 0036             ___flmul@bexp 0037             ___flmul@sign 0031  
           ___flmul@temp 003C             ___flmul@prod 0038             ___fltol@exp1 005B  
                   l3001 08A5                     l3011 08D2                     l3003 08AD  
                   l2301 110B                     l3101 11B4                     l3021 0906  
                   l3013 08E4                     l3005 08BE                     l2303 111D  
                   l2311 113B                     l3103 11B8                     l3111 1B36  
                   l3015 08F2                     l3007 08C0                     l2313 1140  
                   l2305 112B                     l3201 1B8F                     l3105 11F2  
                   l3113 1B3E                     l3121 0813                     l3041 1BEF  
                   l3017 08F3                     l3009 08C9                     l2401 1CA0  
                   l2321 1F10                     l3211 1B7A                     l2315 114B  
                   l2307 112C                     l3203 1B99                     l3107 11F4  
                   l3115 1B40                     l3131 083A                     l3051 1C0F  
                   l3043 1BF1                     l3035 0927                     l3027 090E  
                   l3019 08FC                     l2411 1CB6                     l2403 1CA2  
                   l2331 1F24                     l2323 1F14                     l3213 1B8C  
                   l2309 1135                     l2501 15F1                     l3205 1B9D  
                   l3141 0848                     l3133 083C                     l3125 081C  
                   l3061 1E5E                     l3045 1BF5                     l3037 0937  
                   l3029 0920                     l2261 1C1E                     l2421 1CD9  
                   l2413 1CBA                     l2405 1CA8                     l2341 1F3A  
                   l2333 1F28                     l2325 1F19                     l3301 02A1  
                   l3221 008D                     l2271 1B0D                     l2511 1605  
                   l2503 15F5                     l3207 1BA0                     l3151 0871  
                   l3135 0840                     l3143 085A                     l3127 0831  
                   l3119 0806                     l3071 1E8C                     l3063 1E62  
                   l3055 1E3E                     l3047 1C02                     l2263 1C22  
                   l2415 1CCB                     l2407 1CAB                     l2423 1CDF  
                   l2431 1C6F                     l2351 1F5A                     l2343 1F3E  
                   l2335 1F2A                     l2327 1F1B                     l2319 1F0D  
                   l3311 0329                     l3303 02BC                     l3231 00BF  
                   l3223 0092                     l3215 007B                     l2281 10BA  
                   l2273 1B17                     l2601 177F                     l2521 1619  
                   l2513 1609                     l2505 15F9                     l3209 1BA3  
                   l3081 1CF8                     l3153 0876                     l3129 0832  
                   l3073 1E95                     l3065 1E6B                     l3057 1E4E  
                   l3161 1D4A                     l3049 1C09                     l2265 1C31  
                   l2257 1C15                     l2417 1CD1                     l2409 1CB2  
                   l2441 1C8E                     l2433 1C76                     l2353 1F61  
                   l2345 1F42                     l2337 1F30                     l2329 1F1F  
                   l3401 0658                     l3321 039E                     l3313 0344  
                   l3305 02C4                     l3241 00F5                     l3233 00D2  
                   l3225 0096                     l3217 0080                     l2291 10E6  
                   l2283 10BE                     l2275 1B54                     l2611 1790  
                   l2603 1781                     l2531 163D                     l2523 161D  
                   l2515 160D                     l2507 15FD                     l2451 157F  
                   l3083 1D14                     l3091 1154                     l3067 1E7D  
                   l3059 1E51                     l3075 1E9B                     l3163 1D4E  
                   l3171 1D7D                     l3155 1D32                     l2267 1C36  
                   l2259 1C17                     l2419 1CD2                     l2443 1C95  
                   l2435 1C7A                     l2427 1C66                     l2347 1F53  
                   l2339 1F33                     l2355 1F67                     l2371 1D92  
                   l2363 1D86                     l3411 0701                     l3403 0693  
                   l3323 03A6                     l3315 036B                     l3331 03EC  
                   l3307 02D3                     l3251 0128                     l3243 00F9  
                   l3235 00D6                     l3227 00A6                     l3219 0086  
                   l2293 10EE                     l2285 10CF                     l2277 1B2C  
                   l3181 109C                     l2621 17AF                     l2605 1785  
                   l2541 166D                     l2533 165D                     l2525 1621  
                   l2517 1611                     l2509 1601                     l2461 1594  
                   l2453 1585                     l3085 1D2E                     l3093 1168  
                   l3149 0861                     l3069 1E8B                     l3165 1D60  
                   l3157 1D3A                     l2701 0DC6                     l2437 1C7E  
                   l2429 1C6C                     l2445 1C9B                     l2357 1F6C  
                   l2349 1F59                     l2381 1DAB                     l2373 1D96  
                   l2365 1D87                     l3421 071F                     l3413 0708  
                   l3405 06B2                     l3333 0421                     l3325 03C4  
                   l3317 037A                     l3309 031A                     l3261 015B  
                   l3245 00FC                     l3253 0139                     l3229 00AA  
                   l3237 00E6                     l2295 10F1                     l2287 10DA  
                   l2279 10B7                     l2631 17E8                     l2623 17CD  
                   l2615 1798                     l2607 1786                     l2543 1676  
                   l2535 1666                     l2519 1615                     l2527 1625  
                   l2471 15AC                     l2463 159C                     l2455 1589  
                   l3191 1EC5                     l3183 1EA7                     l3087 1D30  
                   l3079 1CE4                     l3095 1184                     l3175 1BCB  
                   l3167 1D6E                     l3159 1D3D                     l2711 0E29  
                   l2703 0DCF                     l2439 1C88                     l2359 1F71  
                   l2391 1DCA                     l2383 1DAF                     l2375 1D9B  
                   l2367 1D8B                     l3431 0757                     l3423 0727  
                   l3415 070C                     l3407 06BE                     l3351 04CE  
                   l3343 0472                     l3335 046E                     l3319 0395  
                   l3271 0181                     l3263 0167                     l3255 013B  
                   l3247 0111                     l3239 00F4                     l3511 0018  
                   l2297 10FE                     l2289 10DE                     l2641 17FE  
                   l2633 17E9                     l2625 17D6                     l2617 179D  
                   l2609 178A                     l2561 16BC                     l2553 1694  
                   l2537 1668                     l2545 167A                     l2529 1626  
                   l2481 15BE                     l2473 15B2                     l2465 159D  
                   l2457 158A                     l2449 1578                     l2801 1242  
                   l3193 1ED3                     l3185 1EAC                     l3097 118C  
                   l3177 1BCF                     l3169 1D77                     l2721 0EC9  
                   l2713 0E42                     l2705 0DDF                     l2385 1DB3  
                   l2377 1DA1                     l2393 1DD0                     l2369 1D90  
                   l3441 0783                     l3433 075F                     l3425 0738  
                   l3417 0712                     l3409 06F9                     l3353 04D4  
                   l3337 0470                     l3329 03E3                     l3281 01D4  
                   l3273 019A                     l3265 016B                     l3249 0124  
                   l3521 0066                     l3513 0042                     l2299 1102  
                   l2635 17ED                     l2627 17DB                     l2619 17AB  
                   l2563 16BE                     l2555 16AB                     l2547 1686  
                   l2571 16D1                     l2539 166C                     l2483 15C3  
                   l2491 15D3                     l2475 15B3                     l2459 158F  
                   l2467 159F                     l2811 1273                     l2803 1246  
                   l3195 1EE1                     l3187 1EB2                     l3099 1190  
                   l2731 0F37                     l2723 0EEF                     l2715 0E5F  
                   l2707 0DFC                     l2651 0CB1                     l2643 0C9F  
                   l2395 1DD5                     l2387 1DBD                     l2379 1DA4  
                   l3451 07AB                     l3443 078C                     l3435 076B  
                   l3427 073F                     l3371 051C                     l3355 04E0  
                   l3363 04F5                     l3347 04A9                     l3291 020F  
                   l3283 01DF                     l3275 01B3                     l3267 016F  
                   l3419 0719                     l3259 013F                     l3515 0050  
                   l2637 17EF                     l2629 17E3                     l2573 16E7  
                   l2581 173F                     l2565 16C2                     l2557 16AF  
                   l2549 168B                     l2493 15E1                     l2485 15C8  
                   l2477 15B9                     l2469 15A7                     l2821 12A6  
                   l2813 127D                     l2805 1254                     l3197 1EE6  
                   l3189 1EBF                     l2741 0F4F                     l2733 0F3B  
                   l2725 0F17                     l2717 0E8C                     l2709 0E0C  
                   l2661 0CCD                     l2653 0CB6                     l2645 0CA6  
                   l2397 1DDA                     l2389 1DC3                     l3461 07D4  
                   l3453 07B1                     l3445 0790                     l3437 0771  
                   l3429 074E                     l3381 0597                     l3373 0557  
                   l3365 0502                     l3357 04E7                     l3349 04B3  
                   l3293 0215                     l3285 01E5                     l3277 01B7  
                   l3269 017D                     l3517 0059                     l3509 0009  
                   l2831 1C5F                     l2639 17FA                     l2591 176C  
                   l2583 1755                     l2575 1725                     l2567 16C3  
                   l2559 16B3                     l2495 15E5                     l2487 15D0  
                   l2479 15BD                     l2823 12A7                     l2815 1287  
                   l2807 1264                     l2751 0F70                     l2743 0F50  
                   l2735 0F3C                     l2727 0F20                     l2719 0E9C  
                   l2671 0CE2                     l2663 0CD2                     l2655 0CBB  
                   l2647 0CAC                     l2903 0AC7                     l3455 07B8  
                   l3447 079B                     l3439 0775                     l3391 05CF  
                   l3383 059D                     l3375 0576                     l3367 0510  
                   l3359 04F0                     l3295 0234                     l3287 01F8  
                   l3279 01BB                     l3519 0062                     l2833 1C61  
                   l2841 1B76                     l2593 1770                     l2585 175A  
                   l2577 172B                     l2569 16CC                     l2497 15E9  
                   l2489 15D1                     l2817 129D                     l2809 126F  
                   l2753 0F75                     l2761 0FA6                     l2745 0F54  
                   l2737 0F45                     l2729 0F2E                     l2681 0CFE  
                   l2673 0CE7                     l2665 0CD8                     l2657 0CC3  
                   l2649 0CB0                     l2921 0C72                     l3457 07BC  
                   l3449 07A7                     l3393 05D4                     l3385 05AA  
                   l3377 058A                     l3369 0517                     l3297 027F  
                   l3289 020B                     l3553 0153                     l3465 07DC  
                   l3481 1E05                     l2827 1C3C                     l2851 1BB9  
                   l2835 1B21                     l2595 1775                     l2579 1730  
                   l2499 15ED                     l2819 12A2                     l2771 0FD9  
                   l2763 0FB3                     l2755 0F83                     l2747 0F68  
                   l2739 0F4B                     l2691 0D29                     l2683 0D03  
                   l2675 0CEF                     l2667 0CDC                     l2659 0CC5  
                   l2931 1B4F                     l2915 0BE3                     l2907 0AF4  
                   l3459 07C8                     l3395 05DB                     l3387 05B9  
                   l3379 0593                     l3299 0298                     l3467 07EE  
                   l3483 1E1C                     l2829 1C40                     l2853 1BBF  
                   l2845 1BA8                     l2837 1B67                     l2597 1778  
                   l2589 1763                     l2861 1FAA                     l2773 0FE7  
                   l2765 0FBE                     l2757 0F87                     l2693 0D46  
                   l2677 0CF1                     l2669 0CDD                     l2933 1B51  
                   l2925 1B42                     l2917 0BEA                     l2909 0AFB  
                   l3397 05DF                     l3389 05C0                     l3485 1E33  
                   l3477 1DDF                     l2847 1BAD                     l2839 1B70  
                   l2599 177A                     l2791 1220                     l2783 11F7  
                   l2863 1FE9                     l2855 1F76                     l2951 12E5  
                   l2943 12CC                     l2775 0FEB                     l2767 0FCD  
                   l2759 0FA0                     l2695 0D62                     l2687 0D0C  
                   l2679 0CF9                     l2927 1B43                     l3399 05FD  
                   l3479 1DEE                     l2849 1BB3                     l2785 11FC  
                   l2857 1F9C                     l2961 1316                     l2953 12F4  
                   l2937 12B0                     l2777 0FEC                     l2769 0FD7  
                   l2697 0D8E                     l2689 0D1C                     l2881 1534  
                   l2929 1B49                     l2795 1229                     l2787 1200  
                   l2859 1FA5                     l2963 1320                     l2955 12F6  
                   l2939 12C3                     l2779 0FF7                     l2699 0DAA  
                   l2875 1483                     l2867 1370                     l2891 0950  
                   l2797 122E                     l2789 1210                     l2965 1321  
                   l2957 12FF                     l2949 12DF                     l2877 1489  
                   l2869 1376                     l2885 0943                     l2799 123B  
                   l2991 088F                     l2983 1354                     l2975 133B  
                   l2967 1329                     l2959 1308                     l2887 0947  
                   l2985 1364                     l2969 1333                     l2977 134D  
                   l2897 0A38                     l2889 0949                     l2995 0898  
                   l2899 0A3F                     l2989 0882                     STR_1 1096  
                   u3000 1B1F                     u3001 1B1E                     u3010 1B5B  
                   u3011 1B57                     u3110 111D                     u3030 1B64  
                   u3111 111C                     u3031 1B63                     u3040 1B34  
                   u3024 1B5E                     u4000 0D03                     u3105 1104  
                   u3041 1B33                     u4001 0D02                     u3130 113B  
                   u3050 10BE                     u3210 1F53                     u3131 113A  
                   u3115 1119                     u3051 10BD                     u4011 0D54  
                   u3211 1F52                     u3140 1140                     u3060 10CF  
                   u4012 0D5B                     u3300 1DBD                     u3141 113F  
                   u3125 112D                     u3061 10CE                     u4101 0E7E  
                   u4021 0D70                     u4013 0D62                     u3205 1F43  
                   u3301 1DBC                     u3070 10EE                     u4102 0E85  
                   u4022 0D77                     u3230 1F67                     u3150 1F14  
                   u3071 10ED                     u4111 0EAB                     u4103 0E8C  
                   u4031 0D9C                     u4023 0D7E                     u3231 1F66  
                   u3215 1F4F                     u3151 1F13                     u5000 0937  
                   u4200 0F4F                     u4120 0ED5                     u4112 0EB2  
                   u4032 0DA3                     u3400 1CDF                     u3240 1F6C  
                   u3160 1F1F                     u3320 1DD0                     u5001 0936  
                   u4201 0F4E                     u4113 0EB9                     u4041 0DB8  
                   u4033 0DAA                     u3401 1CDE                     u3241 1F6B  
                   u3225 1F5B                     u3161 1F1E                     u3321 1DCF  
                   u3305 1DB9                     u3090 1102                     u5010 1BF5  
                   u4210 0F54                     u4042 0DBF                     u3410 1C6C  
                   u3170 1F30                     u3330 1DD5                     u3250 1D8B  
                   u3091 1101                     u5011 1BF4                     u4211 0F53  
                   u4131 0EE1                     u4043 0DC6                     u3411 1C6B  
                   u3171 1F2F                     u3331 1DD4                     u3315 1DC4  
                   u3251 1D8A                     u3500 15B2                     u4300 11FC  
                   u4220 0F68                     u4140 0EFD                     u4132 0EE8  
                   u3340 1CA8                     u3260 1D96                     u3085 10F3  
                   u3501 15B1                     u4301 11FB                     u4221 0F67  
                   u4133 0EEF                     u4125 0ED0                     u4061 0DEE  
                   u3341 1CA7                     u3261 1D95                     u3510 15BD  
                   u4310 1200                     u5110 1E9B                     u4230 0F6F  
                   u4062 0DF5                     u3430 1C7E                     u3190 1F42  
                   u3270 1DA1                     u3511 15BC                     u4311 11FF  
                   u5111 1E9A                     u4231 0F6E                     u4151 0F09  
                   u4071 0E1B                     u4063 0DFC                     u4055 0DC8  
                   u3431 1C7D                     u3191 1F41                     u3271 1DA0  
                   u3600 166C                     u3520 15C3                     u4400 127D  
                   u4320 1220                     u5120 1CF8                     u5040 1C0F  
                   u4240 0F75                     u4152 0F10                     u4072 0E22  
                   u3360 1CBA                     u3440 1C88                     u3601 166B  
                   u3521 15C2                     u4401 127C                     u4321 121F  
                   u5121 1CF7                     u5201 11C7                     u5105 1E8D  
                   u5041 1C0E                     u5025 1BFC                     u4241 0F74  
                   u4153 0F17                     u4145 0EF8                     u4073 0E29  
                   u3361 1CB9                     u3441 1C87                     u3425 1C70  
                   u3185 1F34                     u3530 15C8                     u4410 1292  
                   u5130 1D14                     u5210 11F2                     u5202 11C8  
                   u5050 1E4E                     u4250 0F87                     u3290 1DB3  
                   u3531 15C7                     u5131 1D13                     u5211 11F1  
                   u5203 11CD                     u5051 1E4D                     u5035 1C03  
                   u4251 0F86                     u4091 0E51                     u3355 1CAC  
                   u3291 1DB2                     u3700 16E7                     u3620 1682  
                   u3540 15E1                     u4420 12A2                     u4340 1241  
                   u5140 1D2E                     u5204 11CE                     u5220 1B3E  
                   u4260 0F96                     u4180 0F3B                     u4092 0E58  
                   u3380 1CCB                     u3460 1C9B                     u3701 16E6  
                   u3621 1681                     u3541 15E0                     u4421 12A1  
                   u4341 1240                     u5141 1D2D                     u5205 11D3  
                   u5221 1B3D                     u4181 0F3A                     u4165 0F19  
                   u4093 0E5F                     u4085 0E2B                     u3381 1CCA  
                   u3461 1C9A                     u3445 1C84                     u3285 1DA5  
                   u3630 1686                     u3550 15E5                     u3470 1589  
                   u4430 12A6                     u5206 11D4                     u5150 1168  
                   u5310 0871                     u5230 0813                     u5070 1E62  
                   u4270 0FB3                     u3711 16FE                     u3703 16E3  
                   u3631 1685                     u3615 166F                     u3551 15E4  
                   u3471 1588                     u4431 12A5                     u4415 128D  
                   u4335 1233                     u5215 11EE                     u5151 1167  
                   u5311 0870                     u5231 0812                     u5071 1E61  
                   u4271 0FB2                     u4175 0F30                     u3375 1CBB  
                   u3455 1C8F                     u4440 1B29                     u3800 1785  
                   u3720 1712                     u3712 16FF                     u3640 168B  
                   u3560 163D                     u3480 158F                     u4360 1263  
                   u5160 1184                     u5320 0876                     u5240 082A  
                   u4280 0FCD                     u4520 1489                     u5400 00A6  
                   u4441 1B28                     u3801 1784                     u3721 1713  
                   u3713 1704                     u3641 168A                     u3561 163C  
                   u3481 158E                     u4361 1262                     u5145 1D2A  
                   u5161 1183                     u5321 0875                     u5305 0863  
                   u5065 1E53                     u4281 0FCC                     u4265 0F91  
                   u3385 1CC7                     u4521 1488                     u4505 13ED  
                   u5401 00A5                     u4450 1B6F                     u3810 178A  
                   u3730 1730                     u3722 1718                     u3714 1705  
                   u3570 1648                     u3490 1594                     u5170 1190  
                   u5250 0840                     u5090 1E7D                     u5330 1D3A  
                   u4290 0FEB                     u4610 0A3F                     u5410 00E6  
                   u4451 1B6E                     u3811 1789                     u3731 172F  
                   u3723 1719                     u3715 170A                     u3651 169D  
                   u3571 1646                     u3491 1593                     u4355 1255  
                   u5171 118F                     u5251 083F                     u5091 1E7C  
                   u5331 1D39                     u4291 0FEA                     u4275 0FAF  
                   u4195 0F3E                     u3395 1CD3                     u4515 1442  
                   u4611 0A3E                     u5411 00E5                     u3900 17E8  
                   u3820 1790                     u3740 1755                     u3716 170B  
                   u3660 16AF                     u3652 16A4                     u3580 1649  
                   u4380 1273                     u5260 0847                     u5500 02BC  
                   u5420 00F4                     u3901 17E7                     u3821 178F  
                   u3741 1754                     u3661 16AE                     u3653 16AB  
                   u3565 1639                     u4381 1272                     u5181 119F  
                   u5261 0846                     u5245 0825                     u5085 1E64  
                   u4285 0FC9                     u4605 09F7                     u5501 02BB  
                   u5421 00F3                     u3910 17ED                     u3830 1797  
                   u3750 175A                     u3670 16B3                     u3590 165D  
                   u4390 1279                     u4470 1FAA                     u5190 11B8  
                   u5182 11A0                     u5350 1D4E                     u5510 02D3  
                   u5430 0138                     u3911 17EC                     u3831 1796  
                   u3751 1759                     u3671 16B2                     u3591 165C  
                   u4391 1278                     u4375 1268                     u4471 1FA9  
                   u5191 11B7                     u5183 11A5                     u5095 1E79  
                   u5351 1D4D                     u4535 14A6                     u5511 02D2  
                   u5431 0137                     u3920 17FE                     u3840 179D  
                   u3680 16C2                     u5184 11A6                     u5280 0859  
                   u5360 1D60                     u4800 132F                     u2960 1C22  
                   u4480 1376                     u4560 0947                     u5600 04CE  
                   u5520 0329                     u5440 0167                     u3921 17FD  
                   u3841 179C                     u3681 16C1                     u4465 1F7E  
                   u5185 11AB                     u5281 0858                     u5361 1D5F  
                   u5345 1D3F                     u4801 132E                     u2961 1C21  
                   u4545 14F3                     u4481 1375                     u4705 0BFD  
                   u4625 0A52                     u4561 0946                     u5601 04CD  
                   u5521 0328                     u5441 0166                     u3850 17AF  
                   u3770 1770                     u5186 11AC                     u5290 0860  
                   u4810 1333                     u3930 0CB0                     u4730 1B49  
                   u4650 0AFB                     u4570 0950                     u5610 04E0  
                   u5530 0344                     u5450 016B                     u3851 17AE  
                   u3771 176F                     u5291 085F                     u5275 0849  
                   u4811 1332                     u3931 0CAF                     u4555 153F  
                   u4731 1B48                     u4715 0C39                     u4651 0AFA  
                   u4635 0A8E                     u4571 094F                     u5611 04DF  
                   u5531 0343                     u5515 02CF                     u5451 016A  
                   u3860 17BE                     u3780 1775                     u5380 1D7D  
                   u4820 133A                     u2980 1C36                     u3940 0CB6  
                   u4740 1B4F                     u5620 0502                     u5540 036B  
                   u5460 019A                     _RCEN 048B                     u3781 1774  
                   u3765 1765                     u5381 1D7C                     u5365 1D5C  
                   u4821 1339                     u2981 1C35                     u3941 0CB5  
                   u4741 1B4E                     u4725 0C75                     u4645 0ACA  
                   u5621 0501                     u5541 036A                     u5525 0325  
                   u5461 0199                     u2990 1B15                     u3870 17CD  
                   u3790 177F                     u4910 08E4                     u4750 12C3  
                   u3950 0CBB                     u5710 0700                     u5630 0510  
                   u5550 037A                     u5470 01D4                     u5390 0086  
                   u2991 1B14                     u3871 17CC                     u3791 177E  
                   u3695 16C5                     u5375 1D6F                     u4911 08E3  
                   u4751 12C2                     u2975 1C29                     u3951 0CBA  
                   u4495 1393                     u5711 06FF                     u5631 050F  
                   u5551 0379                     u5471 01D3                     u5391 0085  
                   u3880 17D6                     u4840 134C                     u4760 12DD  
                   u3960 0CDC                     u5800 0783                     u5720 0718  
                   u5560 0395                     u5480 020F                     u3881 17D5  
                   u3865 17B9                     u4905 08CB                     u4841 134B  
                   u4761 12DC                     u3961 0CDB                     u4665 0B1B  
                   u4585 0970                     u5801 0782                     u5721 0717  
                   u5705 06C1                     u5625 04FE                     u5561 0394  
                   u5481 020E                     u3890 17DB                     u4930 0902  
                   u4850 1353                     u3970 0CE2                     u4690 0BEA  
                   u5810 079B                     u5730 071F                     u5650 0589  
                   u5490 0298                     u3891 17DA                     u4931 0901  
                   u4915 08E0                     u4851 1352                     u4835 133C  
                   u3971 0CE1                     u4691 0BE9                     u4675 0B57  
                   u4595 09AC                     u5811 079A                     u5731 071E  
                   u5651 0588                     u5555 0376                     u5491 0297  
                   u4940 0906                     u4780 1316                     u3980 0CE7  
                   u5820 07B1                     u5740 0727                     u5660 05AA  
                   u5580 04A8                     u5900 1E3D                     u4941 0905  
                   u4925 08F5                     u4781 1315                     u3981 0CE6  
                   u4685 0BA2                     u5821 07B0                     u5805 077F  
                   u5741 0726                     u5661 05A9                     u5645 051F  
                   u5581 04A7                     u5901 1E3C                     u4950 090D  
                   u4870 1364                     u3990 0CFE                     u5830 07C8  
                   u5750 0738                     u5670 05B9                     u5590 04B3  
                   u4951 090C                     u4871 1363                     u4775 1301  
                   u3991 0CFD                     u5831 07C7                     u5815 0797  
                   u5751 0737                     u5671 05B8                     u5591 04B2  
                   u5575 0475                     u4880 088F                     u5840 07D4  
                   u5760 074E                     u5680 05D4                     u4881 088E  
                   u4865 1356                     u4785 1312                     u5841 07D3  
                   u5761 074D                     u5681 05D3                     u5665 05A6  
                   u5585 04A4                     u4970 091F                     u4890 08A3  
                   u5850 07EE                     u5770 075F                     u4971 091E  
                   u4891 08A2                     u4795 1322                     u5851 07ED  
                   u5771 075E                     u5755 0734                     u5675 05B5  
                   u4980 0926                     u5780 076B                     u5860 1DEE  
                   u4981 0925                     u4965 090F                     u5781 076A  
                   u5765 074A                     u5861 1DED                     u5917 004A  
                   u5790 0775                     u5870 1E05                     u5791 0774  
                   u5695 065B                     u5871 1E04                     u5927 006E  
                   u5880 1E1C                     u5881 1E1B                     u5890 1E33  
                   u4995 0929                     u5891 1E32                     _RSEN 0489  
     __size_of_LM75_init 001B       __size_of_LM75_read 0069                     _TRMT 04C1  
                   _main 0009                     btemp 007E         __end_of_I2C_init 1C66  
       __end_of_I2C_read 1B7A                     start 0000         __end_of_I2C_stop 1B21  
           _sprintf$1044 00B6       __size_of_INIT_UART 0015     __size_of_I2C_restart 000A  
       __end_of_LM75_set 1BCB            I2C_write@data 0070            ___fltol@sign1 005A  
        __end_of___aldiv 1154          __end_of___fladd 1800                    ?_main 0070  
                  _ACKEN 048C                    _ACKDT 048D          __end_of___awdiv 1F76  
        __end_of___flneg 1B41          __end_of___awmod 1DDF          __end_of___flmul 1000  
        __end_of___flsub 1BEF          __end_of___fltol 0882                    _ANSEL 0188  
        __end_of___lldiv 1EA4          ___awdiv@divisor 0077          __end_of___llmod 1D86  
        __end_of___lwdiv 1CE4          __end_of___lwmod 1CA0          ___awdiv@counter 0020  
                  _SPBRG 0099                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _SSPIF 0063                    _TXREG 0019  
        __end_of_dpowers 1096                    _scale 0940          __end_of_isdigit 1B53  
                  _setup 1B8F          __end_of_toFloat 2000                    _write 1DDF  
                  pclath 000A                    status 0003        __end_of_I2C_start 1B17  
                  wtemp0 007E          __end_of_sprintf 07F3        __end_of_I2C_write 1B36  
        __initialization 07F3             __end_of_main 0078                ??_I2C_ack 0070  
      __end_of_LM75_init 10B7        __end_of_LM75_read 1F0D                   ??_main 00D1  
   __size_of__tdiv_to_l_ 00BD        __end_of_INIT_UART 1B8F         ___llmod@dividend 0074  
                 ?_scale 003E         ___awdiv@dividend 0079                   ?_setup 0070  
                 _ANSELH 0189                   ?_write 0070                   _SSPADD 0093  
                 _TRISC3 043B                   _TRISC4 043C                   _SSPCON 0014  
                 _SSPBUF 0013         __end_of___xxtofl 12B0        toFloat@isfraction 00A0  
       __end_of__powers_ 103A            toFloat@result 00A1                   ___flge 1154  
                 ___fleq 1CE4                ??___aldiv 0078                ??___fladd 005A  
                 ___wmul 1BEF                ??___awdiv 007B                ??___flneg 0074  
              ??___awmod 0074                ??___flmul 002C                ??___flsub 007E  
              ??___fltol 0055                ??___lldiv 0078                ??___llmod 0078  
              ??___lwdiv 007A                ??___lwmod 0074                   _fround 136D  
       ___awdiv@quotient 0022       I2C_ack@acknowledge 0070          ___awmod@divisor 0070  
        ___awmod@counter 0075                ??_isdigit 0070       __size_of__Umul8_16 0027  
              ??_toFloat 006A                ?_I2C_init 0070                ?_I2C_read 0070  
              ?_I2C_stop 0070                ??_sprintf 00B1               ___flge@ff1 0070  
             ___flge@ff2 0074                ?_LM75_set 0071             ___xxtofl@arg 007A  
           ___xxtofl@exp 0079             ___xxtofl@val 0070               ___fleq@ff1 0070  
             ___fleq@ff2 0074  __end_of__initialization 07FC               ___flneg@f1 0070  
             ___fltol@f1 0051           __pcstackCOMMON 0070            __end_of_scale 0C9F  
          __end_of_setup 1BA7            __end_of_write 1E3E               __div_to_l_ 0882  
             ??_I2C_init 0079               ??_I2C_read 0071               ??_I2C_stop 0070  
        __div_to_l_@exp1 0025          __div_to_l_@cntr 0024                  ??_scale 0042  
        __div_to_l_@quot 0020             sprintf@width 00C1                  ??_setup 0070  
                ??_write 0072               __pbssBANK1 00D4               ??_LM75_set 0073  
          __div_to_l_@f1 0070            __div_to_l_@f2 0074        __end_of__Umul8_16 1C3B  
             __pmaintext 0009                  ?___flge 0070                  ?___fleq 0070  
                ?___wmul 0070                  _ACKSTAT 048E                  ?_fround 003E  
                _I2C_ack 1B53                ?___xxtofl 0070                  _SSPCON2 0091  
                _SSPSTAT 0094               __stringtab 1000            ??_I2C_restart 0070  
      __end_of__npowers_ 106E               _scale$1043 004C                _I2C_start 1B0D  
              _I2C_write 1B2B                  ___aldiv 10B7          __size_of___flge 00A2  
        __size_of___fleq 004E                  ___fladd 1578                  ___awdiv 1F0D  
                ___flneg 1B36                  ___awmod 1D86                  ___flmul 0C9F  
                ___flsub 1BCB                  ___fltol 0806                  ___lldiv 1E3E  
        __size_of___wmul 0025                  ___llmod 1D32                  ___lwdiv 1CA0  
                ___lwmod 1C66       LM75_set@regAddress 0073          __size_of_fround 020B  
                __ptext1 1DDF                  __ptext2 0078                  __ptext3 0940  
                __ptext4 1D86                  __ptext5 1F0D                  __ptext6 1B41  
                __ptext7 136D                  __ptext8 1C66                  __ptext9 1CA0  
            ?__div_to_l_ 0070                  _dpowers 106E                  _isdigit 1B41  
             ??___xxtofl 0074                _LM75_init 109C                _LM75_read 1EA4  
       ___awmod@dividend 0072                  _toFloat 1F76         ___aldiv@dividend 0074  
                _sprintf 0078                  clrloop0 1B06     end_of_initialization 07FC  
              _INIT_UART 1B7A          ___lldiv@divisor 0070             write@entrada 0070  
        ___lldiv@counter 007D               ?_I2C_start 0070               ?_I2C_write 0070  
              _RCSTAbits 0018         ___aldiv@quotient 0022      __end_of_I2C_restart 1B2B  
         __tdiv_to_l_@f1 0070           __tdiv_to_l_@f2 0074            ??__tdiv_to_l_ 0078  
            ___fladd@grs 0065               ?_LM75_init 0070               ?_LM75_read 006C  
          ___xxtofl@sign 0078                _TRISCbits 0087        __size_of_I2C_init 002B  
      __size_of_I2C_read 0014        __size_of_I2C_stop 000A               ?_INIT_UART 0070  
            ___flmul@grs 0032                _TXSTAbits 0098        __size_of_LM75_set 0024  
    __size_of__div_to_l_ 00BE           __end_of___flge 11F6           __end_of___fleq 1D32  
         __end_of___wmul 1C14              _BAUDCTLbits 0187           __end_of_fround 1578  
    start_initialization 07F3      __end_of__tdiv_to_l_ 136D          ___llmod@divisor 0070  
        ___llmod@counter 0079              _I2C_restart 1B21              ??_I2C_start 0070  
            ??_I2C_write 0070             toFloat@tempr 0066                 ??___flge 0078  
               ??___fleq 0078                 ??___wmul 0074                __Umul8_16 1C14  
               ??_fround 0042                 ?_I2C_ack 0070            sprintf@tmpval 00C3  
              ___fladd@a 0056                ___fladd@b 0052               fround@prec 0051  
            ??_LM75_init 007E              ??_LM75_read 00A5                ___flmul@a 0028  
              ___flmul@b 0024                ___flsub@a 0066                ___flsub@b 006A  
              ___latbits 0002            __pcstackBANK0 0020            __pcstackBANK1 00A0  
      __size_of___xxtofl 00BA              ??_INIT_UART 0070              sprintf@flag 00BF  
            sprintf@eexp 00C7              sprintf@fval 00C9              sprintf@prec 00CE  
       ___lwdiv@dividend 0078                 ?___aldiv 0070                 ?___fladd 0052  
               ?___awdiv 0077                 ?___flneg 0070                 ?___awmod 0070  
               ?___flmul 0024                 ?___flsub 0066                 ?___fltol 0051  
               ?___lldiv 0070                 ?___llmod 0070                __npowers_ 103A  
             ?__Umul8_16 0070                 ?___lwdiv 0076                 ?___lwmod 0070  
              __pstrings 1000              __tdiv_to_l_ 12B0             ??__div_to_l_ 0078  
               ?_isdigit 0070                 ?_toFloat 0066                 _I2C_init 1C3B  
               _I2C_read 1B66                 _I2C_stop 1B17         ___lwdiv@quotient 007B  
               ?_sprintf 00AC           __size_of_scale 035F           __size_of_setup 0018  
         __size_of_write 005F                 _LM75_set 1BA7          ___aldiv@divisor 0070  
        ___aldiv@counter 0020           ___wmul@product 0074                clear_ram0 1B05  
               _PIE1bits 008C       __end_of__div_to_l_ 0940         __size_of_I2C_ack 0013  
            __stringbase 1005        ___wmul@multiplier 0070      LM75_read@regAddress 00AB  
            ??__Umul8_16 0072         __size_of___aldiv 009D         __size_of___fladd 0288  
       __size_of___awdiv 0069         __size_of___flneg 000B         __size_of___awmod 0059  
       __size_of___flmul 0361         __size_of___flsub 0024         __size_of___fltol 007C  
       __size_of___lldiv 0066         __size_of___llmod 0054         __size_of___lwdiv 0044  
       __size_of___lwmod 003A              _fround$1041 004D              _fround$1042 0049  
     __end_of__stringtab 1006              _isdigit$843 0070               sprintf@val 00BB  
               ___xxtofl 11F6         __size_of_isdigit 0012          ___lwdiv@divisor 0076  
       __size_of_toFloat 008A          ___lwdiv@counter 007D                 __ptext10 0C9F  
               __ptext11 1C14                 __ptext20 1154                 __ptext12 12B0  
               __ptext21 1CE4                 __ptext13 0882                 __ptext30 109C  
               __ptext22 1B8F                 __ptext14 1BEF                 __ptext31 1BA7  
               __ptext23 1EA4                 __ptext15 1D32                 __ptext32 1B2B  
               __ptext24 1F76                 __ptext16 1E3E                 __ptext33 1B17  
               __ptext25 11F6                 __ptext17 0806                 __ptext34 1B0D  
               __ptext26 1578                 __ptext18 1BCB                 __ptext35 1C3B  
               __ptext27 1B21                 __ptext19 1B36                 __ptext36 10B7  
               __ptext28 1B66                 __ptext37 1B7A                 __ptext29 1B53  
               __powers_ 1006         __size_of_sprintf 077B            __size_of_main 006F  
           ?_I2C_restart 0070               _INTCONbits 000B                 isdigit@c 0071  
               scale@scl 0050                sprintf@ap 00BA         __tdiv_to_l_@exp1 0025  
       __tdiv_to_l_@cntr 0024                sprintf@sp 00CD         __tdiv_to_l_@quot 0020  
       ___lwmod@dividend 0072         ___lldiv@dividend 0074                stringcode 1000  
          I2C_init@speed 007D             ?__tdiv_to_l_ 0070   __Umul8_16@multiplicand 0070  
               sprintf@c 00D0                 sprintf@f 00AC         ___lldiv@quotient 0079  
        ___lwmod@divisor 0070          ___lwmod@counter 0075                 stringdir 1000  
               stringtab 1000             ___aldiv@sign 0021            ___fladd@signs 0062  
           LM75_read@LSB 00A9             LM75_read@MSB 00A7             ___fladd@aexp 0063  
           ___fladd@bexp 0064     __Umul8_16@multiplier 0078             LM75_set@data 0071  
      __Umul8_16@product 0074  
