

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Thu Feb 04 15:05:32 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	intentry,global,class=CODE,delta=2
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.20
    21                           ; Generated 12/02/2020 GMT
    22                           ; 
    23                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution.
    37                           ; 
    38                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    39                           ;        software without specific prior written permission.
    40                           ; 
    41                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    42                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    43                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    44                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    45                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    46                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    47                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    48                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    49                           ; 
    50                           ; 
    51                           ; Code-generator required, PIC16F887 Definitions
    52                           ; 
    53                           ; SFR Addresses
    54  0000                     	;# 
    55  0001                     	;# 
    56  0002                     	;# 
    57  0003                     	;# 
    58  0004                     	;# 
    59  0005                     	;# 
    60  0006                     	;# 
    61  0007                     	;# 
    62  0008                     	;# 
    63  0009                     	;# 
    64  000A                     	;# 
    65  000B                     	;# 
    66  000C                     	;# 
    67  000D                     	;# 
    68  000E                     	;# 
    69  000E                     	;# 
    70  000F                     	;# 
    71  0010                     	;# 
    72  0011                     	;# 
    73  0012                     	;# 
    74  0013                     	;# 
    75  0014                     	;# 
    76  0015                     	;# 
    77  0015                     	;# 
    78  0016                     	;# 
    79  0017                     	;# 
    80  0018                     	;# 
    81  0019                     	;# 
    82  001A                     	;# 
    83  001B                     	;# 
    84  001B                     	;# 
    85  001C                     	;# 
    86  001D                     	;# 
    87  001E                     	;# 
    88  001F                     	;# 
    89  0081                     	;# 
    90  0085                     	;# 
    91  0086                     	;# 
    92  0087                     	;# 
    93  0088                     	;# 
    94  0089                     	;# 
    95  008C                     	;# 
    96  008D                     	;# 
    97  008E                     	;# 
    98  008F                     	;# 
    99  0090                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0094                     	;# 
   106  0095                     	;# 
   107  0096                     	;# 
   108  0097                     	;# 
   109  0098                     	;# 
   110  0099                     	;# 
   111  009A                     	;# 
   112  009B                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  0105                     	;# 
   118  0107                     	;# 
   119  0108                     	;# 
   120  0109                     	;# 
   121  010C                     	;# 
   122  010C                     	;# 
   123  010D                     	;# 
   124  010E                     	;# 
   125  010F                     	;# 
   126  0185                     	;# 
   127  0187                     	;# 
   128  0188                     	;# 
   129  0189                     	;# 
   130  018C                     	;# 
   131  018D                     	;# 
   132  0000                     	;# 
   133  0001                     	;# 
   134  0002                     	;# 
   135  0003                     	;# 
   136  0004                     	;# 
   137  0005                     	;# 
   138  0006                     	;# 
   139  0007                     	;# 
   140  0008                     	;# 
   141  0009                     	;# 
   142  000A                     	;# 
   143  000B                     	;# 
   144  000C                     	;# 
   145  000D                     	;# 
   146  000E                     	;# 
   147  000E                     	;# 
   148  000F                     	;# 
   149  0010                     	;# 
   150  0011                     	;# 
   151  0012                     	;# 
   152  0013                     	;# 
   153  0014                     	;# 
   154  0015                     	;# 
   155  0015                     	;# 
   156  0016                     	;# 
   157  0017                     	;# 
   158  0018                     	;# 
   159  0019                     	;# 
   160  001A                     	;# 
   161  001B                     	;# 
   162  001B                     	;# 
   163  001C                     	;# 
   164  001D                     	;# 
   165  001E                     	;# 
   166  001F                     	;# 
   167  0081                     	;# 
   168  0085                     	;# 
   169  0086                     	;# 
   170  0087                     	;# 
   171  0088                     	;# 
   172  0089                     	;# 
   173  008C                     	;# 
   174  008D                     	;# 
   175  008E                     	;# 
   176  008F                     	;# 
   177  0090                     	;# 
   178  0091                     	;# 
   179  0092                     	;# 
   180  0093                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0094                     	;# 
   184  0095                     	;# 
   185  0096                     	;# 
   186  0097                     	;# 
   187  0098                     	;# 
   188  0099                     	;# 
   189  009A                     	;# 
   190  009B                     	;# 
   191  009C                     	;# 
   192  009D                     	;# 
   193  009E                     	;# 
   194  009F                     	;# 
   195  0105                     	;# 
   196  0107                     	;# 
   197  0108                     	;# 
   198  0109                     	;# 
   199  010C                     	;# 
   200  010C                     	;# 
   201  010D                     	;# 
   202  010E                     	;# 
   203  010F                     	;# 
   204  0185                     	;# 
   205  0187                     	;# 
   206  0188                     	;# 
   207  0189                     	;# 
   208  018C                     	;# 
   209  018D                     	;# 
   210  0000                     	;# 
   211  0001                     	;# 
   212  0002                     	;# 
   213  0003                     	;# 
   214  0004                     	;# 
   215  0005                     	;# 
   216  0006                     	;# 
   217  0007                     	;# 
   218  0008                     	;# 
   219  0009                     	;# 
   220  000A                     	;# 
   221  000B                     	;# 
   222  000C                     	;# 
   223  000D                     	;# 
   224  000E                     	;# 
   225  000E                     	;# 
   226  000F                     	;# 
   227  0010                     	;# 
   228  0011                     	;# 
   229  0012                     	;# 
   230  0013                     	;# 
   231  0014                     	;# 
   232  0015                     	;# 
   233  0015                     	;# 
   234  0016                     	;# 
   235  0017                     	;# 
   236  0018                     	;# 
   237  0019                     	;# 
   238  001A                     	;# 
   239  001B                     	;# 
   240  001B                     	;# 
   241  001C                     	;# 
   242  001D                     	;# 
   243  001E                     	;# 
   244  001F                     	;# 
   245  0081                     	;# 
   246  0085                     	;# 
   247  0086                     	;# 
   248  0087                     	;# 
   249  0088                     	;# 
   250  0089                     	;# 
   251  008C                     	;# 
   252  008D                     	;# 
   253  008E                     	;# 
   254  008F                     	;# 
   255  0090                     	;# 
   256  0091                     	;# 
   257  0092                     	;# 
   258  0093                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0094                     	;# 
   262  0095                     	;# 
   263  0096                     	;# 
   264  0097                     	;# 
   265  0098                     	;# 
   266  0099                     	;# 
   267  009A                     	;# 
   268  009B                     	;# 
   269  009C                     	;# 
   270  009D                     	;# 
   271  009E                     	;# 
   272  009F                     	;# 
   273  0105                     	;# 
   274  0107                     	;# 
   275  0108                     	;# 
   276  0109                     	;# 
   277  010C                     	;# 
   278  010C                     	;# 
   279  010D                     	;# 
   280  010E                     	;# 
   281  010F                     	;# 
   282  0185                     	;# 
   283  0187                     	;# 
   284  0188                     	;# 
   285  0189                     	;# 
   286  018C                     	;# 
   287  018D                     	;# 
   288  0000                     	;# 
   289  0001                     	;# 
   290  0002                     	;# 
   291  0003                     	;# 
   292  0004                     	;# 
   293  0005                     	;# 
   294  0006                     	;# 
   295  0007                     	;# 
   296  0008                     	;# 
   297  0009                     	;# 
   298  000A                     	;# 
   299  000B                     	;# 
   300  000C                     	;# 
   301  000D                     	;# 
   302  000E                     	;# 
   303  000E                     	;# 
   304  000F                     	;# 
   305  0010                     	;# 
   306  0011                     	;# 
   307  0012                     	;# 
   308  0013                     	;# 
   309  0014                     	;# 
   310  0015                     	;# 
   311  0015                     	;# 
   312  0016                     	;# 
   313  0017                     	;# 
   314  0018                     	;# 
   315  0019                     	;# 
   316  001A                     	;# 
   317  001B                     	;# 
   318  001B                     	;# 
   319  001C                     	;# 
   320  001D                     	;# 
   321  001E                     	;# 
   322  001F                     	;# 
   323  0081                     	;# 
   324  0085                     	;# 
   325  0086                     	;# 
   326  0087                     	;# 
   327  0088                     	;# 
   328  0089                     	;# 
   329  008C                     	;# 
   330  008D                     	;# 
   331  008E                     	;# 
   332  008F                     	;# 
   333  0090                     	;# 
   334  0091                     	;# 
   335  0092                     	;# 
   336  0093                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0094                     	;# 
   340  0095                     	;# 
   341  0096                     	;# 
   342  0097                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009A                     	;# 
   346  009B                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  0105                     	;# 
   352  0107                     	;# 
   353  0108                     	;# 
   354  0109                     	;# 
   355  010C                     	;# 
   356  010C                     	;# 
   357  010D                     	;# 
   358  010E                     	;# 
   359  010F                     	;# 
   360  0185                     	;# 
   361  0187                     	;# 
   362  0188                     	;# 
   363  0189                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366                           
   367                           	psect	idataBANK0
   368  00FD                     __pidataBANK0:
   369                           
   370                           ;initializer for _tabla_segmentos
   371  00FD  343F               	retlw	63
   372  00FE  3406               	retlw	6
   373  00FF  345B               	retlw	91
   374  0100  344F               	retlw	79
   375  0101  3466               	retlw	102
   376  0102  346D               	retlw	109
   377  0103  347D               	retlw	125
   378  0104  3407               	retlw	7
   379  0105  347F               	retlw	127
   380  0106  346F               	retlw	111
   381  0107  3477               	retlw	119
   382  0108  347C               	retlw	124
   383  0109  3439               	retlw	57
   384  010A  345E               	retlw	94
   385  010B  3479               	retlw	121
   386  010C  3471               	retlw	113
   387                           
   388                           	psect	nvCOMMON
   389  007D                     __pnvCOMMON:
   390  007D                     _banderaADC:
   391  007D                     	ds	1
   392  001F                     _ADCON0bits	set	31
   393  001F                     _ADCON0	set	31
   394  0007                     _PORTC	set	7
   395  0001                     _TMR0	set	1
   396  001E                     _ADRESH	set	30
   397  000C                     _PIR1bits	set	12
   398  0006                     _PORTBbits	set	6
   399  000B                     _INTCONbits	set	11
   400  0009                     _PORTEbits	set	9
   401  0005                     _PORTA	set	5
   402  0009                     _PORTE	set	9
   403  0008                     _PORTD	set	8
   404  0006                     _PORTB	set	6
   405  000B                     _INTCON	set	11
   406  0081                     _OPTION_REG	set	129
   407  008C                     _PIE1bits	set	140
   408  009F                     _ADCON1bits	set	159
   409  0096                     _IOCBbits	set	150
   410  0087                     _TRISC	set	135
   411  0089                     _TRISE	set	137
   412  0088                     _TRISD	set	136
   413  0086                     _TRISB	set	134
   414  0189                     _ANSELH	set	393
   415  0188                     _ANSEL	set	392
   416                           
   417                           	psect	cinit
   418  000F                     start_initialization:	
   419                           ; #config settings
   420                           
   421  000F                     __initialization:
   422                           
   423                           ; Initialize objects allocated to BANK0
   424  000F  1383               	bcf	3,7	;select IRP bank0
   425  0010  3030               	movlw	low (__pdataBANK0+16)
   426  0011  00FD               	movwf	btemp+-1
   427  0012  3000               	movlw	high __pidataBANK0
   428  0013  00FE               	movwf	btemp
   429  0014  30FD               	movlw	low __pidataBANK0
   430  0015  00FF               	movwf	btemp+1
   431  0016  3020               	movlw	low __pdataBANK0
   432  0017  0084               	movwf	4
   433  0018  120A  118A  20EE  120A  118A  	fcall	init_ram0
   434                           
   435                           ; Clear objects allocated to COMMON
   436  001D  01F7               	clrf	__pbssCOMMON& (0+127)
   437  001E  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   438  001F  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   439  0020  01FA               	clrf	(__pbssCOMMON+3)& (0+127)
   440  0021  01FB               	clrf	(__pbssCOMMON+4)& (0+127)
   441  0022  01FC               	clrf	(__pbssCOMMON+5)& (0+127)
   442  0023                     end_of_initialization:	
   443                           ;End of C runtime variable initialization code
   444                           
   445  0023                     __end_of__initialization:
   446  0023  0183               	clrf	3
   447  0024  120A  118A  287A   	ljmp	_main	;jump to C main() function
   448                           
   449                           	psect	bssCOMMON
   450  0077                     __pbssCOMMON:
   451  0077                     _adc:
   452  0077                     	ds	1
   453  0078                     _valorI:
   454  0078                     	ds	1
   455  0079                     _valorD:
   456  0079                     	ds	1
   457  007A                     _segmentoI:
   458  007A                     	ds	1
   459  007B                     _segmentoD:
   460  007B                     	ds	1
   461  007C                     _count:
   462  007C                     	ds	1
   463                           
   464                           	psect	dataBANK0
   465  0020                     __pdataBANK0:
   466  0020                     _tabla_segmentos:
   467  0020                     	ds	16
   468                           
   469                           	psect	inittext
   470  00EA                     init_fetch0:	
   471                           ;	Called with low address in FSR and high address in W
   472                           
   473  00EA  087E               	movf	btemp,w
   474  00EB  008A               	movwf	10
   475  00EC  087F               	movf	btemp+1,w
   476  00ED  0082               	movwf	2
   477  00EE                     init_ram0:	
   478                           ;Called with:
   479                           ;	high address of idata address in btemp 
   480                           ;	low address of idata address in btemp+1 
   481                           ;	low address of data in FSR
   482                           ;	high address + 1 of data in btemp-1
   483                           
   484  00EE  120A  118A  20EA  120A  118A  	fcall	init_fetch0
   485  00F3  0080               	movwf	0
   486  00F4  0A84               	incf	4,f
   487  00F5  0804               	movf	4,w
   488  00F6  067D               	xorwf	btemp+-1,w
   489  00F7  1903               	btfsc	3,2
   490  00F8  3400               	retlw	0
   491  00F9  0AFF               	incf	btemp+1,f
   492  00FA  1903               	btfsc	3,2
   493  00FB  0AFE               	incf	btemp,f
   494  00FC  28EE               	goto	init_ram0
   495                           
   496                           	psect	cstackCOMMON
   497  0070                     __pcstackCOMMON:
   498  0070                     ?_Segmentos:
   499  0070                     ?_AADC:	
   500                           ; 1 bytes @ 0x0
   501                           
   502  0070                     ?_setup:	
   503                           ; 1 bytes @ 0x0
   504                           
   505  0070                     ?_ISR:	
   506                           ; 1 bytes @ 0x0
   507                           
   508  0070                     ??_ISR:	
   509                           ; 1 bytes @ 0x0
   510                           
   511  0070                     ?_main:	
   512                           ; 1 bytes @ 0x0
   513                           
   514                           
   515                           ; 1 bytes @ 0x0
   516  0070                     	ds	4
   517  0074                     ??_Segmentos:
   518  0074                     ??_AADC:	
   519                           ; 1 bytes @ 0x4
   520                           
   521  0074                     ??_setup:	
   522                           ; 1 bytes @ 0x4
   523                           
   524                           
   525                           ; 1 bytes @ 0x4
   526  0074                     	ds	1
   527  0075                     AADC@banderaADC:
   528                           
   529                           ; 1 bytes @ 0x5
   530  0075                     	ds	1
   531  0076                     ??_main:
   532                           
   533                           ; 1 bytes @ 0x6
   534  0076                     	ds	1
   535                           
   536                           	psect	maintext
   537  007A                     __pmaintext:	
   538 ;;
   539 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   540 ;;
   541 ;; *************** function _main *****************
   542 ;; Defined at:
   543 ;;		line 126 in file "main.c"
   544 ;; Parameters:    Size  Location     Type
   545 ;;		None
   546 ;; Auto vars:     Size  Location     Type
   547 ;;		None
   548 ;; Return value:  Size  Location     Type
   549 ;;                  1    wreg      void 
   550 ;; Registers used:
   551 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   552 ;; Tracked objects:
   553 ;;		On entry : B00/0
   554 ;;		On exit  : 0/0
   555 ;;		Unchanged: 0/0
   556 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   557 ;;      Params:         0       0       0       0       0
   558 ;;      Locals:         0       0       0       0       0
   559 ;;      Temps:          1       0       0       0       0
   560 ;;      Totals:         1       0       0       0       0
   561 ;;Total ram usage:        1 bytes
   562 ;; Hardware stack levels required when called:    2
   563 ;; This function calls:
   564 ;;		_AADC
   565 ;;		_Segmentos
   566 ;;		_setup
   567 ;; This function is called by:
   568 ;;		Startup code after reset
   569 ;; This function uses a non-reentrant model
   570 ;;
   571                           
   572                           
   573                           ;psect for function _main
   574  007A                     _main:
   575  007A                     l790:	
   576                           ;incstack = 0
   577                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   578                           
   579                           
   580                           ;main.c: 127:     setup();
   581  007A  120A  118A  20CE  120A  118A  	fcall	_setup
   582  007F                     l792:
   583                           
   584                           ;main.c: 128:     count = 0;
   585  007F  01FC               	clrf	_count
   586  0080                     l794:
   587                           
   588                           ;main.c: 129:     banderaADC = 1;
   589  0080  01FD               	clrf	_banderaADC
   590  0081  0AFD               	incf	_banderaADC,f
   591  0082                     l796:
   592                           
   593                           ;main.c: 130:     Segmentos();
   594  0082  120A  118A  210D  120A  118A  	fcall	_Segmentos
   595  0087                     l798:
   596                           
   597                           ;main.c: 132:         AADC(banderaADC);
   598  0087  087D               	movf	_banderaADC,w
   599  0088  120A  118A  20AD  120A  118A  	fcall	_AADC
   600  008D                     l800:
   601                           
   602                           ;main.c: 133:         PORTD = count;
   603  008D  087C               	movf	_count,w
   604  008E  1283               	bcf	3,5	;RP0=0, select bank0
   605  008F  1303               	bcf	3,6	;RP1=0, select bank0
   606  0090  0088               	movwf	8	;volatile
   607  0091                     l802:
   608                           
   609                           ;main.c: 134:         segmentoI = tabla_segmentos[valorI];
   610  0091  0878               	movf	_valorI,w
   611  0092  3E20               	addlw	(low (_tabla_segmentos| 0))& (0+255)
   612  0093  0084               	movwf	4
   613  0094  1383               	bcf	3,7	;select IRP bank0
   614  0095  0800               	movf	0,w
   615  0096  00F6               	movwf	??_main
   616  0097  0876               	movf	??_main,w
   617  0098  00FA               	movwf	_segmentoI
   618  0099                     l804:
   619                           
   620                           ;main.c: 135:         segmentoD = tabla_segmentos[valorD];
   621  0099  0879               	movf	_valorD,w
   622  009A  3E20               	addlw	(low (_tabla_segmentos| 0))& (0+255)
   623  009B  0084               	movwf	4
   624  009C  0800               	movf	0,w
   625  009D  00F6               	movwf	??_main
   626  009E  0876               	movf	??_main,w
   627  009F  00FB               	movwf	_segmentoD
   628  00A0                     l806:
   629                           
   630                           ;main.c: 136:         if (adc > count) {
   631  00A0  0877               	movf	_adc,w
   632  00A1  027C               	subwf	_count,w
   633  00A2  1803               	skipnc
   634  00A3  28A5               	goto	u101
   635  00A4  28A6               	goto	u100
   636  00A5                     u101:
   637  00A5  28A8               	goto	l81
   638  00A6                     u100:
   639  00A6                     l808:
   640                           
   641                           ;main.c: 137:             PORTEbits.RE2 = 1;
   642  00A6  1509               	bsf	9,2	;volatile
   643                           
   644                           ;main.c: 138:         } else {
   645  00A7  2887               	goto	l798
   646  00A8                     l81:
   647                           
   648                           ;main.c: 139:             PORTEbits.RE2 = 0;
   649  00A8  1109               	bcf	9,2	;volatile
   650  00A9  2887               	goto	l798
   651  00AA  120A  118A  280C   	ljmp	start
   652  00AD                     __end_of_main:
   653                           
   654                           	psect	text1
   655  00CE                     __ptext1:	
   656 ;; *************** function _setup *****************
   657 ;; Defined at:
   658 ;;		line 58 in file "main.c"
   659 ;; Parameters:    Size  Location     Type
   660 ;;		None
   661 ;; Auto vars:     Size  Location     Type
   662 ;;		None
   663 ;; Return value:  Size  Location     Type
   664 ;;                  1    wreg      void 
   665 ;; Registers used:
   666 ;;		wreg, status,2
   667 ;; Tracked objects:
   668 ;;		On entry : 0/0
   669 ;;		On exit  : 0/0
   670 ;;		Unchanged: 0/0
   671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   672 ;;      Params:         0       0       0       0       0
   673 ;;      Locals:         0       0       0       0       0
   674 ;;      Temps:          0       0       0       0       0
   675 ;;      Totals:         0       0       0       0       0
   676 ;;Total ram usage:        0 bytes
   677 ;; Hardware stack levels used:    1
   678 ;; Hardware stack levels required when called:    1
   679 ;; This function calls:
   680 ;;		Nothing
   681 ;; This function is called by:
   682 ;;		_main
   683 ;; This function uses a non-reentrant model
   684 ;;
   685                           
   686                           
   687                           ;psect for function _setup
   688  00CE                     _setup:
   689  00CE                     l706:	
   690                           ;incstack = 0
   691                           ; Regs used in _setup: [wreg+status,2]
   692                           
   693                           
   694                           ;main.c: 59:     ANSEL = 0x01;
   695  00CE  3001               	movlw	1
   696  00CF  1683               	bsf	3,5	;RP0=1, select bank3
   697  00D0  1703               	bsf	3,6	;RP1=1, select bank3
   698  00D1  0088               	movwf	8	;volatile
   699  00D2                     l708:
   700                           
   701                           ;main.c: 60:     ANSELH = 0;
   702  00D2  0189               	clrf	9	;volatile
   703  00D3                     l710:
   704                           
   705                           ;main.c: 61:     TRISB = 0x03;
   706  00D3  3003               	movlw	3
   707  00D4  1683               	bsf	3,5	;RP0=1, select bank1
   708  00D5  1303               	bcf	3,6	;RP1=0, select bank1
   709  00D6  0086               	movwf	6	;volatile
   710  00D7                     l712:
   711                           
   712                           ;main.c: 62:     INTCON = 0xE8;
   713  00D7  30E8               	movlw	232
   714  00D8  008B               	movwf	11	;volatile
   715  00D9                     l714:
   716                           
   717                           ;main.c: 65:     TRISD = 0;
   718  00D9  0188               	clrf	8	;volatile
   719  00DA                     l716:
   720                           
   721                           ;main.c: 66:     TRISE = 0b00000000;;
   722  00DA  0189               	clrf	9	;volatile
   723  00DB                     l718:
   724                           
   725                           ;main.c: 67:     TRISC = 0b00000000;;
   726  00DB  0187               	clrf	7	;volatile
   727  00DC                     l720:
   728                           
   729                           ;main.c: 70:     PORTB = 0;
   730  00DC  1283               	bcf	3,5	;RP0=0, select bank0
   731  00DD  1303               	bcf	3,6	;RP1=0, select bank0
   732  00DE  0186               	clrf	6	;volatile
   733  00DF                     l722:
   734                           
   735                           ;main.c: 71:     PORTD = 0;
   736  00DF  0188               	clrf	8	;volatile
   737  00E0                     l724:
   738                           
   739                           ;main.c: 72:     PORTE = 0;
   740  00E0  0189               	clrf	9	;volatile
   741  00E1                     l726:
   742                           
   743                           ;main.c: 74:     PORTA = 0;
   744  00E1  0185               	clrf	5	;volatile
   745  00E2                     l728:
   746                           
   747                           ;main.c: 76:     IOCBbits.IOCB0 = 1;
   748  00E2  1683               	bsf	3,5	;RP0=1, select bank1
   749  00E3  1303               	bcf	3,6	;RP1=0, select bank1
   750  00E4  1416               	bsf	22,0	;volatile
   751  00E5                     l730:
   752                           
   753                           ;main.c: 77:     IOCBbits.IOCB1 = 1;
   754  00E5  1496               	bsf	22,1	;volatile
   755  00E6                     l732:
   756                           
   757                           ;main.c: 78:     PORTEbits.RE0 = 1;
   758  00E6  1283               	bcf	3,5	;RP0=0, select bank0
   759  00E7  1303               	bcf	3,6	;RP1=0, select bank0
   760  00E8  1409               	bsf	9,0	;volatile
   761  00E9                     l61:
   762  00E9  0008               	return
   763  00EA                     __end_of_setup:
   764                           
   765                           	psect	text2
   766  010D                     __ptext2:	
   767 ;; *************** function _Segmentos *****************
   768 ;; Defined at:
   769 ;;		line 12 in file "7segmentos.c"
   770 ;; Parameters:    Size  Location     Type
   771 ;;		None
   772 ;; Auto vars:     Size  Location     Type
   773 ;;		None
   774 ;; Return value:  Size  Location     Type
   775 ;;                  1    wreg      void 
   776 ;; Registers used:
   777 ;;		wreg
   778 ;; Tracked objects:
   779 ;;		On entry : 0/0
   780 ;;		On exit  : 0/0
   781 ;;		Unchanged: 0/0
   782 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   783 ;;      Params:         0       0       0       0       0
   784 ;;      Locals:         0       0       0       0       0
   785 ;;      Temps:          0       0       0       0       0
   786 ;;      Totals:         0       0       0       0       0
   787 ;;Total ram usage:        0 bytes
   788 ;; Hardware stack levels used:    1
   789 ;; Hardware stack levels required when called:    1
   790 ;; This function calls:
   791 ;;		Nothing
   792 ;; This function is called by:
   793 ;;		_main
   794 ;; This function uses a non-reentrant model
   795 ;;
   796                           
   797                           
   798                           ;psect for function _Segmentos
   799  010D                     _Segmentos:
   800  010D                     l734:	
   801                           ;incstack = 0
   802                           ; Regs used in _Segmentos: [wreg]
   803                           
   804  010D  3087               	movlw	135
   805  010E  1683               	bsf	3,5	;RP0=1, select bank1
   806  010F  1303               	bcf	3,6	;RP1=0, select bank1
   807  0110  0081               	movwf	1	;volatile
   808  0111  300A               	movlw	10
   809  0112  1283               	bcf	3,5	;RP0=0, select bank0
   810  0113  1303               	bcf	3,6	;RP1=0, select bank0
   811  0114  0081               	movwf	1	;volatile
   812  0115                     l114:
   813  0115  0008               	return
   814  0116                     __end_of_Segmentos:
   815                           
   816                           	psect	text3
   817  00AD                     __ptext3:	
   818 ;; *************** function _AADC *****************
   819 ;; Defined at:
   820 ;;		line 15 in file "ADC.c"
   821 ;; Parameters:    Size  Location     Type
   822 ;;  banderaADC      1    wreg     unsigned char 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  banderaADC      1    5[COMMON] unsigned char 
   825 ;; Return value:  Size  Location     Type
   826 ;;                  1    wreg      void 
   827 ;; Registers used:
   828 ;;		wreg, status,2, status,0
   829 ;; Tracked objects:
   830 ;;		On entry : 0/0
   831 ;;		On exit  : 0/0
   832 ;;		Unchanged: 0/0
   833 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   834 ;;      Params:         0       0       0       0       0
   835 ;;      Locals:         1       0       0       0       0
   836 ;;      Temps:          1       0       0       0       0
   837 ;;      Totals:         2       0       0       0       0
   838 ;;Total ram usage:        2 bytes
   839 ;; Hardware stack levels used:    1
   840 ;; Hardware stack levels required when called:    1
   841 ;; This function calls:
   842 ;;		Nothing
   843 ;; This function is called by:
   844 ;;		_main
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           
   848                           
   849                           ;psect for function _AADC
   850  00AD                     _AADC:
   851                           
   852                           ;incstack = 0
   853                           ; Regs used in _AADC: [wreg+status,2+status,0]
   854                           ;AADC@banderaADC stored from wreg
   855  00AD  00F5               	movwf	AADC@banderaADC
   856  00AE                     l736:
   857                           
   858                           ;ADC.c: 16:     ADCON1bits.ADFM = 0;
   859  00AE  1683               	bsf	3,5	;RP0=1, select bank1
   860  00AF  1303               	bcf	3,6	;RP1=0, select bank1
   861  00B0  139F               	bcf	31,7	;volatile
   862  00B1                     l738:
   863                           
   864                           ;ADC.c: 17:     INTCON = 0b11101000;
   865  00B1  30E8               	movlw	232
   866  00B2  008B               	movwf	11	;volatile
   867                           
   868                           ;ADC.c: 18:     ANSEL = 0b00000001;
   869  00B3  3001               	movlw	1
   870  00B4  1683               	bsf	3,5	;RP0=1, select bank3
   871  00B5  1703               	bsf	3,6	;RP1=1, select bank3
   872  00B6  0088               	movwf	8	;volatile
   873                           
   874                           ;ADC.c: 19:     ADCON0 = 0b01000001;
   875  00B7  3041               	movlw	65
   876  00B8  1283               	bcf	3,5	;RP0=0, select bank0
   877  00B9  1303               	bcf	3,6	;RP1=0, select bank0
   878  00BA  009F               	movwf	31	;volatile
   879  00BB                     l740:
   880                           
   881                           ;ADC.c: 20:     PIE1bits.ADIE = 1;
   882  00BB  1683               	bsf	3,5	;RP0=1, select bank1
   883  00BC  1303               	bcf	3,6	;RP1=0, select bank1
   884  00BD  170C               	bsf	12,6	;volatile
   885  00BE                     l742:
   886                           
   887                           ;ADC.c: 21:     PIR1bits.ADIF = 0;
   888  00BE  1283               	bcf	3,5	;RP0=0, select bank0
   889  00BF  1303               	bcf	3,6	;RP1=0, select bank0
   890  00C0  130C               	bcf	12,6	;volatile
   891  00C1                     l744:
   892                           
   893                           ;ADC.c: 22:     if (banderaADC == 1){
   894  00C1  0375               	decf	AADC@banderaADC,w
   895  00C2  1D03               	btfss	3,2
   896  00C3  28C5               	goto	u11
   897  00C4  28C6               	goto	u10
   898  00C5                     u11:
   899  00C5  28CD               	goto	l107
   900  00C6                     u10:
   901  00C6                     l746:
   902                           
   903                           ;ADC.c: 23:         _delay((unsigned long)((20)*(8000000/4000000.0)));
   904  00C6  300D               	movlw	13
   905  00C7  00F4               	movwf	??_AADC
   906  00C8                     u117:
   907  00C8  0BF4               	decfsz	??_AADC,f
   908  00C9  28C8               	goto	u117
   909  00CA                     l748:
   910                           
   911                           ;ADC.c: 24:         ADCON0bits.GO = 1;
   912  00CA  1283               	bcf	3,5	;RP0=0, select bank0
   913  00CB  1303               	bcf	3,6	;RP1=0, select bank0
   914  00CC  149F               	bsf	31,1	;volatile
   915  00CD                     l750:
   916  00CD                     l107:
   917  00CD  0008               	return
   918  00CE                     __end_of_AADC:
   919                           
   920                           	psect	text4
   921  0027                     __ptext4:	
   922 ;; *************** function _ISR *****************
   923 ;; Defined at:
   924 ;;		line 86 in file "main.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;		None
   927 ;; Auto vars:     Size  Location     Type
   928 ;;		None
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		wreg, status,2, status,0
   933 ;; Tracked objects:
   934 ;;		On entry : 0/0
   935 ;;		On exit  : 0/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   938 ;;      Params:         0       0       0       0       0
   939 ;;      Locals:         0       0       0       0       0
   940 ;;      Temps:          4       0       0       0       0
   941 ;;      Totals:         4       0       0       0       0
   942 ;;Total ram usage:        4 bytes
   943 ;; Hardware stack levels used:    1
   944 ;; This function calls:
   945 ;;		Nothing
   946 ;; This function is called by:
   947 ;;		Interrupt level 1
   948 ;; This function uses a non-reentrant model
   949 ;;
   950                           
   951                           
   952                           ;psect for function _ISR
   953  0027                     _ISR:
   954  0027                     i1l752:
   955                           
   956                           ;main.c: 88:     if (INTCONbits.RBIF == 1) {
   957  0027  1C0B               	btfss	11,0	;volatile
   958  0028  282A               	goto	u2_21
   959  0029  282B               	goto	u2_20
   960  002A                     u2_21:
   961  002A  283D               	goto	i1l762
   962  002B                     u2_20:
   963  002B                     i1l754:
   964                           
   965                           ;main.c: 89:         if (PORTBbits.RB0 == 0) {
   966  002B  1283               	bcf	3,5	;RP0=0, select bank0
   967  002C  1303               	bcf	3,6	;RP1=0, select bank0
   968  002D  1806               	btfsc	6,0	;volatile
   969  002E  2830               	goto	u3_21
   970  002F  2831               	goto	u3_20
   971  0030                     u3_21:
   972  0030  2836               	goto	i1l67
   973  0031                     u3_20:
   974  0031                     i1l756:
   975                           
   976                           ;main.c: 90:             count++;
   977  0031  3001               	movlw	1
   978  0032  00F0               	movwf	??_ISR
   979  0033  0870               	movf	??_ISR,w
   980  0034  07FC               	addwf	_count,f
   981                           
   982                           ;main.c: 91:         } else if (PORTBbits.RB1 == 0) {
   983  0035  283C               	goto	i1l760
   984  0036                     i1l67:
   985  0036  1886               	btfsc	6,1	;volatile
   986  0037  2839               	goto	u4_21
   987  0038  283A               	goto	u4_20
   988  0039                     u4_21:
   989  0039  283C               	goto	i1l760
   990  003A                     u4_20:
   991  003A                     i1l758:
   992                           
   993                           ;main.c: 92:             count--;
   994  003A  3001               	movlw	1
   995  003B  02FC               	subwf	_count,f
   996  003C                     i1l760:
   997                           
   998                           ;main.c: 94:         INTCONbits.RBIF = 0;
   999  003C  100B               	bcf	11,0	;volatile
  1000  003D                     i1l762:
  1001                           
  1002                           ;main.c: 97:     if (PIR1bits.ADIF == 1) {
  1003  003D  1283               	bcf	3,5	;RP0=0, select bank0
  1004  003E  1303               	bcf	3,6	;RP1=0, select bank0
  1005  003F  1F0C               	btfss	12,6	;volatile
  1006  0040  2842               	goto	u5_21
  1007  0041  2843               	goto	u5_20
  1008  0042                     u5_21:
  1009  0042  285B               	goto	i1l774
  1010  0043                     u5_20:
  1011  0043                     i1l764:
  1012                           
  1013                           ;main.c: 98:         banderaADC = 1;
  1014  0043  01FD               	clrf	_banderaADC
  1015  0044  0AFD               	incf	_banderaADC,f
  1016  0045                     i1l766:
  1017                           
  1018                           ;main.c: 99:         valorI = ADRESH >> 4;
  1019  0045  081E               	movf	30,w	;volatile
  1020  0046  00F0               	movwf	??_ISR
  1021  0047  3004               	movlw	4
  1022  0048                     u6_25:
  1023  0048  1003               	clrc
  1024  0049  0CF0               	rrf	??_ISR,f
  1025  004A  3EFF               	addlw	-1
  1026  004B  1D03               	skipz
  1027  004C  2848               	goto	u6_25
  1028  004D  0870               	movf	??_ISR,w
  1029  004E  00F1               	movwf	??_ISR+1
  1030  004F  0871               	movf	??_ISR+1,w
  1031  0050  00F8               	movwf	_valorI
  1032  0051                     i1l768:
  1033                           
  1034                           ;main.c: 100:         valorD = ADRESH & 0b00001111;
  1035  0051  081E               	movf	30,w	;volatile
  1036  0052  390F               	andlw	15
  1037  0053  00F0               	movwf	??_ISR
  1038  0054  0870               	movf	??_ISR,w
  1039  0055  00F9               	movwf	_valorD
  1040  0056                     i1l770:
  1041                           
  1042                           ;main.c: 101:         adc = ADRESH;
  1043  0056  081E               	movf	30,w	;volatile
  1044  0057  00F0               	movwf	??_ISR
  1045  0058  0870               	movf	??_ISR,w
  1046  0059  00F7               	movwf	_adc
  1047  005A                     i1l772:
  1048                           
  1049                           ;main.c: 102:         PIR1bits.ADIF = 0;
  1050  005A  130C               	bcf	12,6	;volatile
  1051  005B                     i1l774:
  1052                           
  1053                           ;main.c: 106:     if (INTCONbits.T0IF == 1) {
  1054  005B  1D0B               	btfss	11,2	;volatile
  1055  005C  285E               	goto	u7_21
  1056  005D  285F               	goto	u7_20
  1057  005E                     u7_21:
  1058  005E  2873               	goto	i1l75
  1059  005F                     u7_20:
  1060  005F                     i1l776:
  1061                           
  1062                           ;main.c: 107:         TMR0 = 10;
  1063  005F  300A               	movlw	10
  1064  0060  0081               	movwf	1	;volatile
  1065  0061                     i1l778:
  1066                           
  1067                           ;main.c: 108:         if (PORTEbits.RE0 == 1) {
  1068  0061  1C09               	btfss	9,0	;volatile
  1069  0062  2864               	goto	u8_21
  1070  0063  2865               	goto	u8_20
  1071  0064                     u8_21:
  1072  0064  286A               	goto	i1l72
  1073  0065                     u8_20:
  1074  0065                     i1l780:
  1075                           
  1076                           ;main.c: 109:             PORTEbits.RE0 = 0;
  1077  0065  1009               	bcf	9,0	;volatile
  1078                           
  1079                           ;main.c: 110:             PORTEbits.RE1 = 1;
  1080  0066  1489               	bsf	9,1	;volatile
  1081  0067                     i1l782:
  1082                           
  1083                           ;main.c: 111:             PORTC = segmentoD;
  1084  0067  087B               	movf	_segmentoD,w
  1085  0068  0087               	movwf	7	;volatile
  1086                           
  1087                           ;main.c: 112:         } else if (PORTEbits.RE1 == 1) {
  1088  0069  2872               	goto	i1l788
  1089  006A                     i1l72:
  1090  006A  1C89               	btfss	9,1	;volatile
  1091  006B  286D               	goto	u9_21
  1092  006C  286E               	goto	u9_20
  1093  006D                     u9_21:
  1094  006D  2872               	goto	i1l788
  1095  006E                     u9_20:
  1096  006E                     i1l784:
  1097                           
  1098                           ;main.c: 113:             PORTEbits.RE1 = 0;
  1099  006E  1089               	bcf	9,1	;volatile
  1100                           
  1101                           ;main.c: 114:             PORTEbits.RE0 = 1;
  1102  006F  1409               	bsf	9,0	;volatile
  1103  0070                     i1l786:
  1104                           
  1105                           ;main.c: 115:             PORTC = segmentoI;
  1106  0070  087A               	movf	_segmentoI,w
  1107  0071  0087               	movwf	7	;volatile
  1108  0072                     i1l788:
  1109                           
  1110                           ;main.c: 118:         INTCONbits.T0IF = 0;
  1111  0072  110B               	bcf	11,2	;volatile
  1112  0073                     i1l75:
  1113  0073  0873               	movf	??_ISR+3,w
  1114  0074  008A               	movwf	10
  1115  0075  0E72               	swapf	??_ISR+2,w
  1116  0076  0083               	movwf	3
  1117  0077  0EFE               	swapf	btemp,f
  1118  0078  0E7E               	swapf	btemp,w
  1119  0079  0009               	retfie
  1120  007A                     __end_of_ISR:
  1121  007E                     btemp	set	126	;btemp
  1122  007E                     wtemp0	set	126
  1123                           
  1124                           	psect	intentry
  1125  0004                     __pintentry:	
  1126                           ;incstack = 0
  1127                           ; Regs used in _ISR: [wreg+status,2+status,0]
  1128                           
  1129  0004                     interrupt_function:
  1130  007E                     saved_w	set	btemp
  1131  0004  00FE               	movwf	btemp
  1132  0005  0E03               	swapf	3,w
  1133  0006  00F2               	movwf	??_ISR+2
  1134  0007  080A               	movf	10,w
  1135  0008  00F3               	movwf	??_ISR+3
  1136  0009  120A  118A  2827   	ljmp	_ISR
  1137                           
  1138                           	psect	config
  1139                           
  1140                           ;Config register CONFIG1 @ 0x2007
  1141                           ;	Oscillator Selection bits
  1142                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1143                           ;	Watchdog Timer Enable bit
  1144                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1145                           ;	Power-up Timer Enable bit
  1146                           ;	PWRTE = OFF, PWRT disabled
  1147                           ;	RE3/MCLR pin function select bit
  1148                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1149                           ;	Code Protection bit
  1150                           ;	CP = OFF, Program memory code protection is disabled
  1151                           ;	Data Code Protection bit
  1152                           ;	CPD = OFF, Data memory code protection is disabled
  1153                           ;	Brown Out Reset Selection bits
  1154                           ;	BOREN = OFF, BOR disabled
  1155                           ;	Internal External Switchover bit
  1156                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1157                           ;	Fail-Safe Clock Monitor Enabled bit
  1158                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1159                           ;	Low Voltage Programming Enable bit
  1160                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1161                           ;	In-Circuit Debugger Mode bit
  1162                           ;	DEBUG = 0x1, unprogrammed default
  1163  2007                     	org	8199
  1164  2007  20D5               	dw	8405
  1165                           
  1166                           ;Config register CONFIG2 @ 0x2008
  1167                           ;	Brown-out Reset Selection bit
  1168                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1169                           ;	Flash Program Memory Self Write Enable bits
  1170                           ;	WRT = OFF, Write protection off
  1171  2008                     	org	8200
  1172  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        16
    BSS         6
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_AADC

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      15
                                              6 COMMON     1     1      0
                               _AADC
                          _Segmentos
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Segmentos                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AADC                                                 2     2      0      15
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AADC
   _Segmentos
   _setup

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      7       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1E      12        0.0%
ABS                  0      0      1E       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Thu Feb 04 15:05:32 2021

                      pc 0002                       l61 00E9                       l81 00A8  
                     u10 00C6                       u11 00C5                       fsr 0004  
                    l114 0115                      l107 00CD                      l710 00D3  
                    l720 00DC                      l712 00D7                      l800 008D  
                    l730 00E5                      l722 00DF                      l714 00D9  
                    l706 00CE                      l802 0091                      l740 00BB  
                    l732 00E6                      l724 00E0                      l716 00DA  
                    l708 00D2                      l804 0099                      l750 00CD  
                    l742 00BE                      l734 010D                      l726 00E1  
                    l718 00DB                      l806 00A0                      l744 00C1  
                    l736 00AE                      l728 00E2                      l808 00A6  
                    l746 00C6                      l738 00B1                      l748 00CA  
                    l790 007A                      l792 007F                      l794 0080  
                    l796 0082                      l798 0087                      u100 00A6  
                    u101 00A5                      u117 00C8                      _ISR 0027  
                    _adc 0077                      fsr0 0004                      indf 0000  
                   ?_ISR 0070                     _AADC 00AD                     i1l72 006A  
                   i1l75 0073                     i1l67 0036                     _TMR0 0001  
         AADC@banderaADC 0075                     u2_20 002B                     u2_21 002A  
                   u3_20 0031                     u3_21 0030                     u4_20 003A  
                   u4_21 0039                     u5_20 0043                     u5_21 0042  
                   u6_25 0048                     u7_20 005F                     u7_21 005E  
                   u8_20 0065                     u8_21 0064                     u9_20 006E  
                   u9_21 006D                     _main 007A                     btemp 007E  
                   start 000C                    ??_ISR 0070                    ?_AADC 0070  
                  ?_main 0070                    _ANSEL 0188                    i1l760 003C  
                  i1l752 0027                    i1l770 0056                    i1l754 002B  
                  i1l762 003D                    i1l780 0065                    i1l772 005A  
                  i1l764 0043                    i1l756 0031                    i1l782 0067  
                  i1l766 0045                    i1l774 005B                    i1l758 003A  
                  i1l784 006E                    i1l776 005F                    i1l768 0051  
                  i1l786 0070                    i1l778 0061                    i1l788 0072  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _count 007C                    _setup 00CE                    pclath 000A  
                  status 0003                    wtemp0 007E             __end_of_AADC 00CE  
        __initialization 000F             __end_of_main 00AD                   ??_AADC 0074  
                 ??_main 0076                   _ADCON0 001F                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189                   _INTCON 000B  
     __size_of_Segmentos 0009                   _valorD 0079                   _valorI 0078  
                 saved_w 007E  __end_of__initialization 0023           __pcstackCOMMON 0070  
           __pidataBANK0 00FD            __end_of_setup 00EA               _banderaADC 007D  
                ??_setup 0074        __end_of_Segmentos 0116               __pnvCOMMON 007D  
             __pmaintext 007A               __pintentry 0004                  __ptext1 00CE  
                __ptext2 010D                  __ptext3 00AD                  __ptext4 0027  
           __size_of_ISR 0053     end_of_initialization 0023                _PORTBbits 0006  
              _PORTEbits 0009      start_initialization 000F              __end_of_ISR 007A  
              _Segmentos 010D               init_fetch0 00EA              __pdataBANK0 0020  
            __pbssCOMMON 0077                ___latbits 0002               ?_Segmentos 0070  
        _tabla_segmentos 0020           __size_of_setup 001C        interrupt_function 0004  
               _IOCBbits 0096                 _PIE1bits 008C                _segmentoD 007B  
              _segmentoI 007A                 _PIR1bits 000C               _ADCON0bits 001F  
             _ADCON1bits 009F              ??_Segmentos 0074            __size_of_AADC 0021  
          __size_of_main 0033               _INTCONbits 000B                 init_ram0 00EE  
               intlevel1 0000               _OPTION_REG 0081  
