

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 09 23:07:54 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	intentry,global,class=CODE,delta=2
    52                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    53                           	psect	text2_split_1,local,class=CODE,merge=1,delta=2
    54                           	dabs	1,0x7E,2
    55  0000                     
    56                           ; Version 2.20
    57                           ; Generated 12/02/2020 GMT
    58                           ; 
    59                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    60                           ; All rights reserved.
    61                           ; 
    62                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    63                           ; 
    64                           ; Redistribution and use in source and binary forms, with or without modification, are
    65                           ; permitted provided that the following conditions are met:
    66                           ; 
    67                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    68                           ;        conditions and the following disclaimer.
    69                           ; 
    70                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    71                           ;        of conditions and the following disclaimer in the documentation and/or other
    72                           ;        materials provided with the distribution.
    73                           ; 
    74                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    75                           ;        software without specific prior written permission.
    76                           ; 
    77                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    78                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    79                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    80                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    81                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    82                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    83                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    84                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    85                           ; 
    86                           ; 
    87                           ; Code-generator required, PIC16F887 Definitions
    88                           ; 
    89                           ; SFR Addresses
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  0008                     	;# 
    99  0009                     	;# 
   100  000A                     	;# 
   101  000B                     	;# 
   102  000C                     	;# 
   103  000D                     	;# 
   104  000E                     	;# 
   105  000E                     	;# 
   106  000F                     	;# 
   107  0010                     	;# 
   108  0011                     	;# 
   109  0012                     	;# 
   110  0013                     	;# 
   111  0014                     	;# 
   112  0015                     	;# 
   113  0015                     	;# 
   114  0016                     	;# 
   115  0017                     	;# 
   116  0018                     	;# 
   117  0019                     	;# 
   118  001A                     	;# 
   119  001B                     	;# 
   120  001B                     	;# 
   121  001C                     	;# 
   122  001D                     	;# 
   123  001E                     	;# 
   124  001F                     	;# 
   125  0081                     	;# 
   126  0085                     	;# 
   127  0086                     	;# 
   128  0087                     	;# 
   129  0088                     	;# 
   130  0089                     	;# 
   131  008C                     	;# 
   132  008D                     	;# 
   133  008E                     	;# 
   134  008F                     	;# 
   135  0090                     	;# 
   136  0091                     	;# 
   137  0092                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0093                     	;# 
   141  0094                     	;# 
   142  0095                     	;# 
   143  0096                     	;# 
   144  0097                     	;# 
   145  0098                     	;# 
   146  0099                     	;# 
   147  009A                     	;# 
   148  009B                     	;# 
   149  009C                     	;# 
   150  009D                     	;# 
   151  009E                     	;# 
   152  009F                     	;# 
   153  0105                     	;# 
   154  0107                     	;# 
   155  0108                     	;# 
   156  0109                     	;# 
   157  010C                     	;# 
   158  010C                     	;# 
   159  010D                     	;# 
   160  010E                     	;# 
   161  010F                     	;# 
   162  0185                     	;# 
   163  0187                     	;# 
   164  0188                     	;# 
   165  0189                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0000                     	;# 
   169  0001                     	;# 
   170  0002                     	;# 
   171  0003                     	;# 
   172  0004                     	;# 
   173  0005                     	;# 
   174  0006                     	;# 
   175  0007                     	;# 
   176  0008                     	;# 
   177  0009                     	;# 
   178  000A                     	;# 
   179  000B                     	;# 
   180  000C                     	;# 
   181  000D                     	;# 
   182  000E                     	;# 
   183  000E                     	;# 
   184  000F                     	;# 
   185  0010                     	;# 
   186  0011                     	;# 
   187  0012                     	;# 
   188  0013                     	;# 
   189  0014                     	;# 
   190  0015                     	;# 
   191  0015                     	;# 
   192  0016                     	;# 
   193  0017                     	;# 
   194  0018                     	;# 
   195  0019                     	;# 
   196  001A                     	;# 
   197  001B                     	;# 
   198  001B                     	;# 
   199  001C                     	;# 
   200  001D                     	;# 
   201  001E                     	;# 
   202  001F                     	;# 
   203  0081                     	;# 
   204  0085                     	;# 
   205  0086                     	;# 
   206  0087                     	;# 
   207  0088                     	;# 
   208  0089                     	;# 
   209  008C                     	;# 
   210  008D                     	;# 
   211  008E                     	;# 
   212  008F                     	;# 
   213  0090                     	;# 
   214  0091                     	;# 
   215  0092                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0093                     	;# 
   219  0094                     	;# 
   220  0095                     	;# 
   221  0096                     	;# 
   222  0097                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009A                     	;# 
   226  009B                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  0105                     	;# 
   232  0107                     	;# 
   233  0108                     	;# 
   234  0109                     	;# 
   235  010C                     	;# 
   236  010C                     	;# 
   237  010D                     	;# 
   238  010E                     	;# 
   239  010F                     	;# 
   240  0185                     	;# 
   241  0187                     	;# 
   242  0188                     	;# 
   243  0189                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  0000                     	;# 
   247  0001                     	;# 
   248  0002                     	;# 
   249  0003                     	;# 
   250  0004                     	;# 
   251  0005                     	;# 
   252  0006                     	;# 
   253  0007                     	;# 
   254  0008                     	;# 
   255  0009                     	;# 
   256  000A                     	;# 
   257  000B                     	;# 
   258  000C                     	;# 
   259  000D                     	;# 
   260  000E                     	;# 
   261  000E                     	;# 
   262  000F                     	;# 
   263  0010                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0014                     	;# 
   268  0015                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0017                     	;# 
   272  0018                     	;# 
   273  0019                     	;# 
   274  001A                     	;# 
   275  001B                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001D                     	;# 
   279  001E                     	;# 
   280  001F                     	;# 
   281  0081                     	;# 
   282  0085                     	;# 
   283  0086                     	;# 
   284  0087                     	;# 
   285  0088                     	;# 
   286  0089                     	;# 
   287  008C                     	;# 
   288  008D                     	;# 
   289  008E                     	;# 
   290  008F                     	;# 
   291  0090                     	;# 
   292  0091                     	;# 
   293  0092                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0093                     	;# 
   297  0094                     	;# 
   298  0095                     	;# 
   299  0096                     	;# 
   300  0097                     	;# 
   301  0098                     	;# 
   302  0099                     	;# 
   303  009A                     	;# 
   304  009B                     	;# 
   305  009C                     	;# 
   306  009D                     	;# 
   307  009E                     	;# 
   308  009F                     	;# 
   309  0105                     	;# 
   310  0107                     	;# 
   311  0108                     	;# 
   312  0109                     	;# 
   313  010C                     	;# 
   314  010C                     	;# 
   315  010D                     	;# 
   316  010E                     	;# 
   317  010F                     	;# 
   318  0185                     	;# 
   319  0187                     	;# 
   320  0188                     	;# 
   321  0189                     	;# 
   322  018C                     	;# 
   323  018D                     	;# 
   324  0000                     	;# 
   325  0001                     	;# 
   326  0002                     	;# 
   327  0003                     	;# 
   328  0004                     	;# 
   329  0005                     	;# 
   330  0006                     	;# 
   331  0007                     	;# 
   332  0008                     	;# 
   333  0009                     	;# 
   334  000A                     	;# 
   335  000B                     	;# 
   336  000C                     	;# 
   337  000D                     	;# 
   338  000E                     	;# 
   339  000E                     	;# 
   340  000F                     	;# 
   341  0010                     	;# 
   342  0011                     	;# 
   343  0012                     	;# 
   344  0013                     	;# 
   345  0014                     	;# 
   346  0015                     	;# 
   347  0015                     	;# 
   348  0016                     	;# 
   349  0017                     	;# 
   350  0018                     	;# 
   351  0019                     	;# 
   352  001A                     	;# 
   353  001B                     	;# 
   354  001B                     	;# 
   355  001C                     	;# 
   356  001D                     	;# 
   357  001E                     	;# 
   358  001F                     	;# 
   359  0081                     	;# 
   360  0085                     	;# 
   361  0086                     	;# 
   362  0087                     	;# 
   363  0088                     	;# 
   364  0089                     	;# 
   365  008C                     	;# 
   366  008D                     	;# 
   367  008E                     	;# 
   368  008F                     	;# 
   369  0090                     	;# 
   370  0091                     	;# 
   371  0092                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0093                     	;# 
   375  0094                     	;# 
   376  0095                     	;# 
   377  0096                     	;# 
   378  0097                     	;# 
   379  0098                     	;# 
   380  0099                     	;# 
   381  009A                     	;# 
   382  009B                     	;# 
   383  009C                     	;# 
   384  009D                     	;# 
   385  009E                     	;# 
   386  009F                     	;# 
   387  0105                     	;# 
   388  0107                     	;# 
   389  0108                     	;# 
   390  0109                     	;# 
   391  010C                     	;# 
   392  010C                     	;# 
   393  010D                     	;# 
   394  010E                     	;# 
   395  010F                     	;# 
   396  0185                     	;# 
   397  0187                     	;# 
   398  0188                     	;# 
   399  0189                     	;# 
   400  018C                     	;# 
   401  018D                     	;# 
   402  0000                     	;# 
   403  0001                     	;# 
   404  0002                     	;# 
   405  0003                     	;# 
   406  0004                     	;# 
   407  0005                     	;# 
   408  0006                     	;# 
   409  0007                     	;# 
   410  0008                     	;# 
   411  0009                     	;# 
   412  000A                     	;# 
   413  000B                     	;# 
   414  000C                     	;# 
   415  000D                     	;# 
   416  000E                     	;# 
   417  000E                     	;# 
   418  000F                     	;# 
   419  0010                     	;# 
   420  0011                     	;# 
   421  0012                     	;# 
   422  0013                     	;# 
   423  0014                     	;# 
   424  0015                     	;# 
   425  0015                     	;# 
   426  0016                     	;# 
   427  0017                     	;# 
   428  0018                     	;# 
   429  0019                     	;# 
   430  001A                     	;# 
   431  001B                     	;# 
   432  001B                     	;# 
   433  001C                     	;# 
   434  001D                     	;# 
   435  001E                     	;# 
   436  001F                     	;# 
   437  0081                     	;# 
   438  0085                     	;# 
   439  0086                     	;# 
   440  0087                     	;# 
   441  0088                     	;# 
   442  0089                     	;# 
   443  008C                     	;# 
   444  008D                     	;# 
   445  008E                     	;# 
   446  008F                     	;# 
   447  0090                     	;# 
   448  0091                     	;# 
   449  0092                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0093                     	;# 
   453  0094                     	;# 
   454  0095                     	;# 
   455  0096                     	;# 
   456  0097                     	;# 
   457  0098                     	;# 
   458  0099                     	;# 
   459  009A                     	;# 
   460  009B                     	;# 
   461  009C                     	;# 
   462  009D                     	;# 
   463  009E                     	;# 
   464  009F                     	;# 
   465  0105                     	;# 
   466  0107                     	;# 
   467  0108                     	;# 
   468  0109                     	;# 
   469  010C                     	;# 
   470  010C                     	;# 
   471  010D                     	;# 
   472  010E                     	;# 
   473  010F                     	;# 
   474  0185                     	;# 
   475  0187                     	;# 
   476  0188                     	;# 
   477  0189                     	;# 
   478  018C                     	;# 
   479  018D                     	;# 
   480                           
   481                           	psect	idataBANK1
   482  07FE                     __pidataBANK1:
   483                           
   484                           ;initializer for _Num_Pot
   485  07FE  3401               	retlw	1
   486                           
   487                           ;initializer for _banderaADC
   488  07FF  3401               	retlw	1
   489                           
   490                           	psect	strings
   491  1800                     __pstrings:
   492  1800                     stringtab:
   493  1800                     __stringtab:
   494                           
   495                           ;	String table - string pointers are 1 byte each
   496  1800  1BFF               	btfsc	btemp+1,7
   497  1801  280A               	ljmp	stringcode
   498  1802  1383               	bcf	3,7
   499  1803  187F               	btfsc	btemp+1,0
   500  1804  1783               	bsf	3,7
   501  1805  0800               	movf	0,w
   502  1806  0A84               	incf	4,f
   503  1807  1903               	skipnz
   504  1808  0AFF               	incf	btemp+1,f
   505  1809  0008               	return
   506  180A                     stringcode:
   507  180A                     stringdir:
   508  180A  3018               	movlw	high stringdir
   509  180B  008A               	movwf	10
   510  180C  0804               	movf	4,w
   511  180D  0A84               	incf	4,f
   512  180E  0782               	addwf	2,f
   513  180F                     __stringbase:
   514  180F  3400               	retlw	0
   515  1810                     __end_of__stringtab:
   516  1810                     __powers_:
   517  1810  3400               	retlw	0
   518  1811  3400               	retlw	0
   519  1812  3480               	retlw	128
   520  1813  343F               	retlw	63
   521  1814  3400               	retlw	0
   522  1815  3400               	retlw	0
   523  1816  3420               	retlw	32
   524  1817  3441               	retlw	65
   525  1818  3400               	retlw	0
   526  1819  3400               	retlw	0
   527  181A  34C8               	retlw	200
   528  181B  3442               	retlw	66
   529  181C  3400               	retlw	0
   530  181D  3400               	retlw	0
   531  181E  347A               	retlw	122
   532  181F  3444               	retlw	68
   533  1820  3400               	retlw	0
   534  1821  3440               	retlw	64
   535  1822  341C               	retlw	28
   536  1823  3446               	retlw	70
   537  1824  3400               	retlw	0
   538  1825  3450               	retlw	80
   539  1826  34C3               	retlw	195
   540  1827  3447               	retlw	71
   541  1828  3400               	retlw	0
   542  1829  3424               	retlw	36
   543  182A  3474               	retlw	116
   544  182B  3449               	retlw	73
   545  182C  3480               	retlw	128
   546  182D  3496               	retlw	150
   547  182E  3418               	retlw	24
   548  182F  344B               	retlw	75
   549  1830  3420               	retlw	32
   550  1831  34BC               	retlw	188
   551  1832  34BE               	retlw	190
   552  1833  344C               	retlw	76
   553  1834  3428               	retlw	40
   554  1835  346B               	retlw	107
   555  1836  346E               	retlw	110
   556  1837  344E               	retlw	78
   557  1838  34F9               	retlw	249
   558  1839  3402               	retlw	2
   559  183A  3415               	retlw	21
   560  183B  3450               	retlw	80
   561  183C  34EC               	retlw	236
   562  183D  3478               	retlw	120
   563  183E  34AD               	retlw	173
   564  183F  3460               	retlw	96
   565  1840  34CA               	retlw	202
   566  1841  34F2               	retlw	242
   567  1842  3449               	retlw	73
   568  1843  3471               	retlw	113
   569  1844                     __end_of__powers_:
   570  1844                     __npowers_:
   571  1844  3400               	retlw	0
   572  1845  3400               	retlw	0
   573  1846  3480               	retlw	128
   574  1847  343F               	retlw	63
   575  1848  34CD               	retlw	205
   576  1849  34CC               	retlw	204
   577  184A  34CC               	retlw	204
   578  184B  343D               	retlw	61
   579  184C  340A               	retlw	10
   580  184D  34D7               	retlw	215
   581  184E  3423               	retlw	35
   582  184F  343C               	retlw	60
   583  1850  346F               	retlw	111
   584  1851  3412               	retlw	18
   585  1852  3483               	retlw	131
   586  1853  343A               	retlw	58
   587  1854  3417               	retlw	23
   588  1855  34B7               	retlw	183
   589  1856  34D1               	retlw	209
   590  1857  3438               	retlw	56
   591  1858  34AC               	retlw	172
   592  1859  34C5               	retlw	197
   593  185A  3427               	retlw	39
   594  185B  3437               	retlw	55
   595  185C  34BD               	retlw	189
   596  185D  3437               	retlw	55
   597  185E  3486               	retlw	134
   598  185F  3435               	retlw	53
   599  1860  3495               	retlw	149
   600  1861  34BF               	retlw	191
   601  1862  34D6               	retlw	214
   602  1863  3433               	retlw	51
   603  1864  3477               	retlw	119
   604  1865  34CC               	retlw	204
   605  1866  342B               	retlw	43
   606  1867  3432               	retlw	50
   607  1868  345F               	retlw	95
   608  1869  3470               	retlw	112
   609  186A  3489               	retlw	137
   610  186B  3430               	retlw	48
   611  186C  34FF               	retlw	255
   612  186D  34E6               	retlw	230
   613  186E  34DB               	retlw	219
   614  186F  342E               	retlw	46
   615  1870  3408               	retlw	8
   616  1871  34E5               	retlw	229
   617  1872  343C               	retlw	60
   618  1873  341E               	retlw	30
   619  1874  3460               	retlw	96
   620  1875  3442               	retlw	66
   621  1876  34A2               	retlw	162
   622  1877  340D               	retlw	13
   623  1878                     __end_of__npowers_:
   624  1878                     _dpowers:
   625  1878  3401               	retlw	1
   626  1879  3400               	retlw	0
   627  187A  3400               	retlw	0
   628  187B  3400               	retlw	0
   629  187C  340A               	retlw	10
   630  187D  3400               	retlw	0
   631  187E  3400               	retlw	0
   632  187F  3400               	retlw	0
   633  1880  3464               	retlw	100
   634  1881  3400               	retlw	0
   635  1882  3400               	retlw	0
   636  1883  3400               	retlw	0
   637  1884  34E8               	retlw	232
   638  1885  3403               	retlw	3
   639  1886  3400               	retlw	0
   640  1887  3400               	retlw	0
   641  1888  3410               	retlw	16
   642  1889  3427               	retlw	39
   643  188A  3400               	retlw	0
   644  188B  3400               	retlw	0
   645  188C  34A0               	retlw	160
   646  188D  3486               	retlw	134
   647  188E  3401               	retlw	1
   648  188F  3400               	retlw	0
   649  1890  3440               	retlw	64
   650  1891  3442               	retlw	66
   651  1892  340F               	retlw	15
   652  1893  3400               	retlw	0
   653  1894  3480               	retlw	128
   654  1895  3496               	retlw	150
   655  1896  3498               	retlw	152
   656  1897  3400               	retlw	0
   657  1898  3400               	retlw	0
   658  1899  34E1               	retlw	225
   659  189A  34F5               	retlw	245
   660  189B  3405               	retlw	5
   661  189C  3400               	retlw	0
   662  189D  34CA               	retlw	202
   663  189E  349A               	retlw	154
   664  189F  343B               	retlw	59
   665  18A0                     __end_of_dpowers:
   666  0019                     _TXREG	set	25
   667  000B                     _INTCONbits	set	11
   668  001F                     _ADCON0bits	set	31
   669  001F                     _ADCON0	set	31
   670  000B                     _INTCON	set	11
   671  0008                     _PORTDbits	set	8
   672  001E                     _ADRESH	set	30
   673  001A                     _RCREG	set	26
   674  0018                     _RCSTAbits	set	24
   675  000C                     _PIR1bits	set	12
   676  0008                     _PORTD	set	8
   677  0006                     _PORTB	set	6
   678  0099                     _SPBRG	set	153
   679  0098                     _TXSTAbits	set	152
   680  0087                     _TRISC	set	135
   681  008C                     _PIE1bits	set	140
   682  009F                     _ADCON1bits	set	159
   683  0088                     _TRISD	set	136
   684  0086                     _TRISB	set	134
   685  04C1                     _TRMT	set	1217
   686  0187                     _BAUDCTLbits	set	391
   687  0188                     _ANSEL	set	392
   688  18A0                     STR_1:
   689  18A0  3453               	retlw	83	;'S'
   690  18A1  3431               	retlw	49	;'1'
   691  18A2  343A               	retlw	58	;':'
   692  18A3  3420               	retlw	32	;' '
   693  18A4  3420               	retlw	32	;' '
   694  18A5  3420               	retlw	32	;' '
   695  18A6  3453               	retlw	83	;'S'
   696  18A7  3432               	retlw	50	;'2'
   697  18A8  343A               	retlw	58	;':'
   698  18A9  3420               	retlw	32	;' '
   699  18AA  3420               	retlw	32	;' '
   700  18AB  3420               	retlw	32	;' '
   701  18AC  3420               	retlw	32	;' '
   702  18AD  3453               	retlw	83	;'S'
   703  18AE  3433               	retlw	51	;'3'
   704  18AF  343A               	retlw	58	;':'
   705  18B0  3400               	retlw	0
   706  18B1                     STR_2:
   707  18B1  3425               	retlw	37	;'%'
   708  18B2  3433               	retlw	51	;'3'
   709  18B3  342E               	retlw	46	;'.'
   710  18B4  3432               	retlw	50	;'2'
   711  18B5  3466               	retlw	102	;'f'
   712  18B6  3456               	retlw	86	;'V'
   713  18B7  3400               	retlw	0
   714  18B8                     STR_4:
   715  18B8  3425               	retlw	37	;'%'
   716  18B9  3464               	retlw	100	;'d'
   717  18BA  3400               	retlw	0
   718  18B1                     
   719                           	psect	cinit
   720  000F                     start_initialization:	
   721                           ; #config settings
   722                           
   723  000F                     __initialization:
   724                           
   725                           ; Initialize objects allocated to BANK1
   726  000F  1683               	bsf	3,5	;RP0=1, select bank1
   727  0010  1303               	bcf	3,6	;RP1=0, select bank1
   728  0011  120A  118A  27FE  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   729  0016  00ED               	movwf	__pdataBANK1& (0+127)
   730  0017  120A  118A  27FF  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   731  001C  00EE               	movwf	(__pdataBANK1+1)& (0+127)
   732                           
   733                           ; Clear objects allocated to BANK1
   734  001D  1383               	bcf	3,7	;select IRP bank0
   735  001E  30D1               	movlw	low __pbssBANK1
   736  001F  0084               	movwf	4
   737  0020  30ED               	movlw	low (__pbssBANK1+28)
   738  0021  160A  118A  2000  120A  118A  	fcall	clear_ram0
   739                           
   740                           ; Clear objects allocated to BANK0
   741  0026  1283               	bcf	3,5	;RP0=0, select bank0
   742  0027  1303               	bcf	3,6	;RP1=0, select bank0
   743  0028  01EC               	clrf	__pbssBANK0& (0+127)
   744                           
   745                           ; Clear objects allocated to COMMON
   746  0029  01FA               	clrf	__pbssCOMMON& (0+127)
   747  002A                     end_of_initialization:	
   748                           ;End of C runtime variable initialization code
   749                           
   750  002A                     __end_of__initialization:
   751  002A  0183               	clrf	3
   752  002B  160A  158A  2E8E   	ljmp	_main	;jump to C main() function
   753                           
   754                           	psect	bssCOMMON
   755  007A                     __pbssCOMMON:
   756  007A                     _adc:
   757  007A                     	ds	1
   758                           
   759                           	psect	bssBANK0
   760  006C                     __pbssBANK0:
   761  006C                     _pot:
   762  006C                     	ds	1
   763                           
   764                           	psect	bssBANK1
   765  00D1                     __pbssBANK1:
   766  00D1                     _conversor:
   767  00D1                     	ds	4
   768  00D5                     _contador:
   769  00D5                     	ds	1
   770  00D6                     _mensaje:
   771  00D6                     	ds	1
   772  00D7                     _s:
   773  00D7                     	ds	20
   774  00EB                     _S2:
   775  00EB                     	ds	1
   776  00EC                     _S1:
   777  00EC                     	ds	1
   778                           
   779                           	psect	dataBANK1
   780  00ED                     __pdataBANK1:
   781  00ED                     _Num_Pot:
   782  00ED                     	ds	1
   783  00EE                     _banderaADC:
   784  00EE                     	ds	1
   785                           
   786                           	psect	clrtext
   787  1000                     clear_ram0:	
   788                           ;	Called with FSR containing the base address, and
   789                           ;	W with the last address+1
   790                           
   791  1000  0064               	clrwdt	;clear the watchdog before getting into this loop
   792  1001                     clrloop0:
   793  1001  0180               	clrf	0	;clear RAM location pointed to by FSR
   794  1002  0A84               	incf	4,f	;increment pointer
   795  1003  0604               	xorwf	4,w	;XOR with final address
   796  1004  1903               	btfsc	3,2	;have we reached the end yet?
   797  1005  3400               	retlw	0	;all done for this memory range, return
   798  1006  0604               	xorwf	4,w	;XOR again to restore value
   799  1007  2801               	goto	clrloop0	;do the next byte
   800                           
   801                           	psect	cstackBANK1
   802  00A0                     __pcstackBANK1:
   803  00A0                     ?___flsub:
   804  00A0                     ___flsub@a:	
   805                           ; 4 bytes @ 0x0
   806                           
   807                           
   808                           ; 4 bytes @ 0x0
   809  00A0                     	ds	4
   810  00A4                     ___flsub@b:
   811                           
   812                           ; 4 bytes @ 0x4
   813  00A4                     	ds	4
   814  00A8                     ?_sprintf:
   815  00A8                     sprintf@f:	
   816                           ; 2 bytes @ 0x8
   817                           
   818                           
   819                           ; 1 bytes @ 0x8
   820  00A8                     	ds	5
   821  00AD                     ??_sprintf:
   822                           
   823                           ; 1 bytes @ 0xD
   824  00AD                     	ds	5
   825  00B2                     _sprintf$1192:
   826                           
   827                           ; 4 bytes @ 0x12
   828  00B2                     	ds	4
   829  00B6                     sprintf@ap:
   830                           
   831                           ; 1 bytes @ 0x16
   832  00B6                     	ds	1
   833  00B7                     sprintf@flag:
   834                           
   835                           ; 2 bytes @ 0x17
   836  00B7                     	ds	2
   837  00B9                     sprintf@width:
   838                           
   839                           ; 2 bytes @ 0x19
   840  00B9                     	ds	2
   841  00BB                     sprintf@tmpval:
   842                           
   843                           ; 4 bytes @ 0x1B
   844  00BB                     	ds	4
   845  00BF                     sprintf@val:
   846                           
   847                           ; 4 bytes @ 0x1F
   848  00BF                     	ds	4
   849  00C3                     sprintf@eexp:
   850                           
   851                           ; 2 bytes @ 0x23
   852  00C3                     	ds	2
   853  00C5                     sprintf@fval:
   854                           
   855                           ; 4 bytes @ 0x25
   856  00C5                     	ds	4
   857  00C9                     sprintf@sp:
   858                           
   859                           ; 1 bytes @ 0x29
   860  00C9                     	ds	1
   861  00CA                     sprintf@prec:
   862                           
   863                           ; 2 bytes @ 0x2A
   864  00CA                     	ds	2
   865  00CC                     sprintf@c:
   866                           
   867                           ; 1 bytes @ 0x2C
   868  00CC                     	ds	1
   869  00CD                     ??_main:
   870                           
   871                           ; 1 bytes @ 0x2D
   872  00CD                     	ds	4
   873                           
   874                           	psect	cstackCOMMON
   875  0070                     __pcstackCOMMON:
   876  0070                     ?_isdigit:
   877  0070                     ?_INIT_UART:	
   878                           ; 1 bit 
   879                           
   880  0070                     ?_read:	
   881                           ; 1 bytes @ 0x0
   882                           
   883  0070                     ?_Lcd_Init:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  0070                     ?_Lcd_Clear:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0070                     ?_write:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0070                     ?_setup:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0070                     ?_ISR:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0070                     ??_ISR:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0070                     ?_main:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  0070                     ?_Lcd_Port:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0070                     ?_Lcd_Cmd:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  0070                     ?_Lcd_Write_Char:	
   911                           ; 1 bytes @ 0x0
   912                           
   913                           
   914                           ; 1 bytes @ 0x0
   915  0070                     	ds	3
   916  0073                     ??_INIT_UART:
   917  0073                     ??_read:	
   918                           ; 1 bytes @ 0x3
   919                           
   920  0073                     ?_AADC:	
   921                           ; 1 bytes @ 0x3
   922                           
   923  0073                     ??_write:	
   924                           ; 1 bytes @ 0x3
   925                           
   926  0073                     ??_isdigit:	
   927                           ; 1 bytes @ 0x3
   928                           
   929  0073                     ??__tdiv_to_l_:	
   930                           ; 1 bytes @ 0x3
   931                           
   932  0073                     ??__div_to_l_:	
   933                           ; 1 bytes @ 0x3
   934                           
   935  0073                     ??_setup:	
   936                           ; 1 bytes @ 0x3
   937                           
   938  0073                     ??_Lcd_Port:	
   939                           ; 1 bytes @ 0x3
   940                           
   941  0073                     ??___lldiv:	
   942                           ; 1 bytes @ 0x3
   943                           
   944  0073                     ??___fleq:	
   945                           ; 1 bytes @ 0x3
   946                           
   947  0073                     ??___flge:	
   948                           ; 1 bytes @ 0x3
   949                           
   950  0073                     ?__Umul8_16:	
   951                           ; 1 bytes @ 0x3
   952                           
   953  0073                     ?___wmul:	
   954                           ; 2 bytes @ 0x3
   955                           
   956  0073                     ?___awmod:	
   957                           ; 2 bytes @ 0x3
   958                           
   959  0073                     ?___lwmod:	
   960                           ; 2 bytes @ 0x3
   961                           
   962  0073                     ?___flneg:	
   963                           ; 2 bytes @ 0x3
   964                           
   965  0073                     ?___xxtofl:	
   966                           ; 4 bytes @ 0x3
   967                           
   968  0073                     Lcd_Port@a:	
   969                           ; 4 bytes @ 0x3
   970                           
   971  0073                     AADC@Num_Pot:	
   972                           ; 1 bytes @ 0x3
   973                           
   974  0073                     write@entrada:	
   975                           ; 1 bytes @ 0x3
   976                           
   977  0073                     __Umul8_16@multiplicand:	
   978                           ; 1 bytes @ 0x3
   979                           
   980  0073                     _isdigit$1006:	
   981                           ; 1 bytes @ 0x3
   982                           
   983  0073                     ___wmul@multiplier:	
   984                           ; 1 bytes @ 0x3
   985                           
   986  0073                     ___awmod@divisor:	
   987                           ; 2 bytes @ 0x3
   988                           
   989  0073                     ___lwmod@divisor:	
   990                           ; 2 bytes @ 0x3
   991                           
   992  0073                     ___flneg@f1:	
   993                           ; 2 bytes @ 0x3
   994                           
   995  0073                     ___xxtofl@val:	
   996                           ; 4 bytes @ 0x3
   997                           
   998                           
   999                           ; 4 bytes @ 0x3
  1000  0073                     	ds	1
  1001  0074                     ??_AADC:
  1002  0074                     ??_Lcd_Cmd:	
  1003                           ; 1 bytes @ 0x4
  1004                           
  1005  0074                     ??_Lcd_Write_Char:	
  1006                           ; 1 bytes @ 0x4
  1007                           
  1008  0074                     isdigit@c:	
  1009                           ; 1 bytes @ 0x4
  1010                           
  1011  0074                     ___lldiv@quotient:	
  1012                           ; 1 bytes @ 0x4
  1013                           
  1014  0074                     __div_to_l_@quot:	
  1015                           ; 4 bytes @ 0x4
  1016                           
  1017                           
  1018                           ; 4 bytes @ 0x4
  1019  0074                     	ds	1
  1020  0075                     ??__Umul8_16:
  1021  0075                     AADC@pot:	
  1022                           ; 1 bytes @ 0x5
  1023                           
  1024  0075                     ___wmul@multiplicand:	
  1025                           ; 1 bytes @ 0x5
  1026                           
  1027  0075                     ___awmod@dividend:	
  1028                           ; 2 bytes @ 0x5
  1029                           
  1030  0075                     ___lwmod@dividend:	
  1031                           ; 2 bytes @ 0x5
  1032                           
  1033                           
  1034                           ; 2 bytes @ 0x5
  1035  0075                     	ds	1
  1036  0076                     Lcd_Cmd@a:
  1037  0076                     Lcd_Write_Char@y:	
  1038                           ; 1 bytes @ 0x6
  1039                           
  1040  0076                     AADC@banderaADC:	
  1041                           ; 1 bytes @ 0x6
  1042                           
  1043                           
  1044                           ; 1 bytes @ 0x6
  1045  0076                     	ds	1
  1046  0077                     ??_Lcd_Init:
  1047  0077                     ??_Lcd_Clear:	
  1048                           ; 1 bytes @ 0x7
  1049                           
  1050  0077                     ?_Lcd_Set_Cursor:	
  1051                           ; 1 bytes @ 0x7
  1052                           
  1053  0077                     ??___wmul:	
  1054                           ; 1 bytes @ 0x7
  1055                           
  1056  0077                     ??___awmod:	
  1057                           ; 1 bytes @ 0x7
  1058                           
  1059  0077                     ??___flneg:	
  1060                           ; 1 bytes @ 0x7
  1061                           
  1062  0077                     ??___lwmod:	
  1063                           ; 1 bytes @ 0x7
  1064                           
  1065  0077                     Lcd_Set_Cursor@b:	
  1066                           ; 1 bytes @ 0x7
  1067                           
  1068  0077                     Lcd_Write_Char@a:	
  1069                           ; 1 bytes @ 0x7
  1070                           
  1071  0077                     ___wmul@product:	
  1072                           ; 1 bytes @ 0x7
  1073                           
  1074                           
  1075                           ; 2 bytes @ 0x7
  1076  0077                     	ds	1
  1077  0078                     ??_Lcd_Set_Cursor:
  1078  0078                     ?_Lcd_Write_String:	
  1079                           ; 1 bytes @ 0x8
  1080                           
  1081  0078                     ___lldiv@counter:	
  1082                           ; 1 bytes @ 0x8
  1083                           
  1084  0078                     ___awmod@counter:	
  1085                           ; 1 bytes @ 0x8
  1086                           
  1087  0078                     __div_to_l_@cntr:	
  1088                           ; 1 bytes @ 0x8
  1089                           
  1090  0078                     ___lwmod@counter:	
  1091                           ; 1 bytes @ 0x8
  1092                           
  1093  0078                     Lcd_Write_String@a:	
  1094                           ; 1 bytes @ 0x8
  1095                           
  1096                           
  1097                           ; 2 bytes @ 0x8
  1098  0078                     	ds	1
  1099  0079                     ??___llmod:
  1100  0079                     ??___lwdiv:	
  1101                           ; 1 bytes @ 0x9
  1102                           
  1103  0079                     ___awmod@sign:	
  1104                           ; 1 bytes @ 0x9
  1105                           
  1106  0079                     __div_to_l_@exp1:	
  1107                           ; 1 bytes @ 0x9
  1108                           
  1109                           
  1110                           ; 1 bytes @ 0x9
  1111  0079                     	ds	1
  1112  007A                     ??___flsub:
  1113                           
  1114                           	psect	cstackBANK0
  1115  0020                     __pcstackBANK0:	
  1116                           ; 1 bytes @ 0xA
  1117                           
  1118  0020                     ?___fleq:
  1119  0020                     ?___flge:	
  1120                           ; 1 bit 
  1121                           
  1122  0020                     ??_Lcd_Write_String:	
  1123                           ; 1 bit 
  1124                           
  1125  0020                     ??___xxtofl:	
  1126                           ; 1 bytes @ 0x0
  1127                           
  1128  0020                     ?___awdiv:	
  1129                           ; 1 bytes @ 0x0
  1130                           
  1131  0020                     ?___lwdiv:	
  1132                           ; 2 bytes @ 0x0
  1133                           
  1134  0020                     ?__tdiv_to_l_:	
  1135                           ; 2 bytes @ 0x0
  1136                           
  1137  0020                     ?__div_to_l_:	
  1138                           ; 4 bytes @ 0x0
  1139                           
  1140  0020                     ?___lldiv:	
  1141                           ; 4 bytes @ 0x0
  1142                           
  1143  0020                     Lcd_Set_Cursor@a:	
  1144                           ; 4 bytes @ 0x0
  1145                           
  1146  0020                     ___awdiv@divisor:	
  1147                           ; 1 bytes @ 0x0
  1148                           
  1149  0020                     ___lwdiv@divisor:	
  1150                           ; 2 bytes @ 0x0
  1151                           
  1152  0020                     __Umul8_16@product:	
  1153                           ; 2 bytes @ 0x0
  1154                           
  1155  0020                     ___lldiv@divisor:	
  1156                           ; 2 bytes @ 0x0
  1157                           
  1158  0020                     __div_to_l_@f1:	
  1159                           ; 4 bytes @ 0x0
  1160                           
  1161  0020                     ___fleq@ff1:	
  1162                           ; 4 bytes @ 0x0
  1163                           
  1164  0020                     ___flge@ff1:	
  1165                           ; 4 bytes @ 0x0
  1166                           
  1167  0020                     __tdiv_to_l_@f1:	
  1168                           ; 4 bytes @ 0x0
  1169                           
  1170                           
  1171                           ; 4 bytes @ 0x0
  1172  0020                     	ds	1
  1173  0021                     Lcd_Set_Cursor@temp:
  1174                           
  1175                           ; 1 bytes @ 0x1
  1176  0021                     	ds	1
  1177  0022                     ___awdiv@dividend:
  1178  0022                     ___lwdiv@dividend:	
  1179                           ; 2 bytes @ 0x2
  1180                           
  1181  0022                     __Umul8_16@word_mpld:	
  1182                           ; 2 bytes @ 0x2
  1183                           
  1184                           
  1185                           ; 2 bytes @ 0x2
  1186  0022                     	ds	1
  1187  0023                     Lcd_Write_String@i:
  1188                           
  1189                           ; 2 bytes @ 0x3
  1190  0023                     	ds	1
  1191  0024                     ??___awdiv:
  1192  0024                     __Umul8_16@multiplier:	
  1193                           ; 1 bytes @ 0x4
  1194                           
  1195  0024                     ___xxtofl@sign:	
  1196                           ; 1 bytes @ 0x4
  1197                           
  1198  0024                     ___lwdiv@quotient:	
  1199                           ; 1 bytes @ 0x4
  1200                           
  1201  0024                     ___lldiv@dividend:	
  1202                           ; 2 bytes @ 0x4
  1203                           
  1204  0024                     __div_to_l_@f2:	
  1205                           ; 4 bytes @ 0x4
  1206                           
  1207  0024                     ___fleq@ff2:	
  1208                           ; 4 bytes @ 0x4
  1209                           
  1210  0024                     ___flge@ff2:	
  1211                           ; 4 bytes @ 0x4
  1212                           
  1213  0024                     __tdiv_to_l_@f2:	
  1214                           ; 4 bytes @ 0x4
  1215                           
  1216                           
  1217                           ; 4 bytes @ 0x4
  1218  0024                     	ds	1
  1219  0025                     ___awdiv@counter:
  1220  0025                     ___xxtofl@exp:	
  1221                           ; 1 bytes @ 0x5
  1222                           
  1223                           
  1224                           ; 1 bytes @ 0x5
  1225  0025                     	ds	1
  1226  0026                     ___awdiv@sign:
  1227  0026                     ___lwdiv@counter:	
  1228                           ; 1 bytes @ 0x6
  1229                           
  1230  0026                     ___xxtofl@arg:	
  1231                           ; 1 bytes @ 0x6
  1232                           
  1233                           
  1234                           ; 4 bytes @ 0x6
  1235  0026                     	ds	1
  1236  0027                     ___awdiv@quotient:
  1237                           
  1238                           ; 2 bytes @ 0x7
  1239  0027                     	ds	1
  1240  0028                     ?___llmod:
  1241  0028                     __tdiv_to_l_@quot:	
  1242                           ; 4 bytes @ 0x8
  1243                           
  1244  0028                     ___llmod@divisor:	
  1245                           ; 4 bytes @ 0x8
  1246                           
  1247                           
  1248                           ; 4 bytes @ 0x8
  1249  0028                     	ds	2
  1250  002A                     ?___flmul:
  1251  002A                     ___flmul@b:	
  1252                           ; 4 bytes @ 0xA
  1253                           
  1254                           
  1255                           ; 4 bytes @ 0xA
  1256  002A                     	ds	2
  1257  002C                     __tdiv_to_l_@cntr:
  1258  002C                     ___llmod@dividend:	
  1259                           ; 1 bytes @ 0xC
  1260                           
  1261                           
  1262                           ; 4 bytes @ 0xC
  1263  002C                     	ds	1
  1264  002D                     __tdiv_to_l_@exp1:
  1265                           
  1266                           ; 1 bytes @ 0xD
  1267  002D                     	ds	1
  1268  002E                     ___flmul@a:
  1269                           
  1270                           ; 4 bytes @ 0xE
  1271  002E                     	ds	2
  1272  0030                     ___llmod@counter:
  1273                           
  1274                           ; 1 bytes @ 0x10
  1275  0030                     	ds	2
  1276  0032                     ??___flmul:
  1277                           
  1278                           ; 1 bytes @ 0x12
  1279  0032                     	ds	5
  1280  0037                     ___flmul@sign:
  1281                           
  1282                           ; 1 bytes @ 0x17
  1283  0037                     	ds	1
  1284  0038                     ___flmul@grs:
  1285                           
  1286                           ; 4 bytes @ 0x18
  1287  0038                     	ds	4
  1288  003C                     ___flmul@aexp:
  1289                           
  1290                           ; 1 bytes @ 0x1C
  1291  003C                     	ds	1
  1292  003D                     ___flmul@bexp:
  1293                           
  1294                           ; 1 bytes @ 0x1D
  1295  003D                     	ds	1
  1296  003E                     ___flmul@prod:
  1297                           
  1298                           ; 4 bytes @ 0x1E
  1299  003E                     	ds	4
  1300  0042                     ___flmul@temp:
  1301                           
  1302                           ; 2 bytes @ 0x22
  1303  0042                     	ds	2
  1304  0044                     ?_fround:
  1305  0044                     ?_scale:	
  1306                           ; 4 bytes @ 0x24
  1307                           
  1308                           
  1309                           ; 4 bytes @ 0x24
  1310  0044                     	ds	4
  1311  0048                     ??_fround:
  1312  0048                     ??_scale:	
  1313                           ; 1 bytes @ 0x28
  1314                           
  1315                           
  1316                           ; 1 bytes @ 0x28
  1317  0048                     	ds	7
  1318  004F                     _fround$1190:
  1319                           
  1320                           ; 4 bytes @ 0x2F
  1321  004F                     	ds	3
  1322  0052                     _scale$1191:
  1323                           
  1324                           ; 4 bytes @ 0x32
  1325  0052                     	ds	1
  1326  0053                     _fround$1189:
  1327                           
  1328                           ; 4 bytes @ 0x33
  1329  0053                     	ds	3
  1330  0056                     scale@scl:
  1331                           
  1332                           ; 1 bytes @ 0x36
  1333  0056                     	ds	1
  1334  0057                     ?___fltol:
  1335  0057                     fround@prec:	
  1336                           ; 4 bytes @ 0x37
  1337                           
  1338  0057                     ___fltol@f1:	
  1339                           ; 1 bytes @ 0x37
  1340                           
  1341                           
  1342                           ; 4 bytes @ 0x37
  1343  0057                     	ds	1
  1344  0058                     ?___fladd:
  1345  0058                     ___fladd@b:	
  1346                           ; 4 bytes @ 0x38
  1347                           
  1348                           
  1349                           ; 4 bytes @ 0x38
  1350  0058                     	ds	3
  1351  005B                     ??___fltol:
  1352                           
  1353                           ; 1 bytes @ 0x3B
  1354  005B                     	ds	1
  1355  005C                     ___fladd@a:
  1356                           
  1357                           ; 4 bytes @ 0x3C
  1358  005C                     	ds	4
  1359  0060                     ??___fladd:
  1360  0060                     ___fltol@sign1:	
  1361                           ; 1 bytes @ 0x40
  1362                           
  1363                           
  1364                           ; 1 bytes @ 0x40
  1365  0060                     	ds	1
  1366  0061                     ___fltol@exp1:
  1367                           
  1368                           ; 1 bytes @ 0x41
  1369  0061                     	ds	7
  1370  0068                     ___fladd@signs:
  1371                           
  1372                           ; 1 bytes @ 0x48
  1373  0068                     	ds	1
  1374  0069                     ___fladd@aexp:
  1375                           
  1376                           ; 1 bytes @ 0x49
  1377  0069                     	ds	1
  1378  006A                     ___fladd@bexp:
  1379                           
  1380                           ; 1 bytes @ 0x4A
  1381  006A                     	ds	1
  1382  006B                     ___fladd@grs:
  1383                           
  1384                           ; 1 bytes @ 0x4B
  1385  006B                     	ds	1
  1386                           
  1387                           	psect	maintext
  1388  1E8E                     __pmaintext:	
  1389 ;;
  1390 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1391 ;;
  1392 ;; *************** function _main *****************
  1393 ;; Defined at:
  1394 ;;		line 104 in file "main.c"
  1395 ;; Parameters:    Size  Location     Type
  1396 ;;		None
  1397 ;; Auto vars:     Size  Location     Type
  1398 ;;  a               2    0        unsigned int 
  1399 ;; Return value:  Size  Location     Type
  1400 ;;                  1    wreg      void 
  1401 ;; Registers used:
  1402 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1403 ;; Tracked objects:
  1404 ;;		On entry : B00/0
  1405 ;;		On exit  : 0/0
  1406 ;;		Unchanged: 0/0
  1407 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1408 ;;      Params:         0       0       0       0       0
  1409 ;;      Locals:         0       0       0       0       0
  1410 ;;      Temps:          0       0       4       0       0
  1411 ;;      Totals:         0       0       4       0       0
  1412 ;;Total ram usage:        4 bytes
  1413 ;; Hardware stack levels required when called:    5
  1414 ;; This function calls:
  1415 ;;		_AADC
  1416 ;;		_INIT_UART
  1417 ;;		_Lcd_Clear
  1418 ;;		_Lcd_Init
  1419 ;;		_Lcd_Set_Cursor
  1420 ;;		_Lcd_Write_String
  1421 ;;		___flmul
  1422 ;;		___xxtofl
  1423 ;;		_read
  1424 ;;		_setup
  1425 ;;		_sprintf
  1426 ;;		_write
  1427 ;; This function is called by:
  1428 ;;		Startup code after reset
  1429 ;; This function uses a non-reentrant model
  1430 ;;
  1431                           
  1432                           
  1433                           ;psect for function _main
  1434  1E8E                     _main:
  1435  1E8E                     l4402:	
  1436                           ;incstack = 0
  1437                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1438                           
  1439                           
  1440                           ;main.c: 105:     unsigned int a;;main.c: 106:     setup();
  1441  1E8E  160A  158A  214E  160A  158A  	fcall	_setup
  1442                           
  1443                           ;main.c: 107:     INIT_UART();
  1444  1E93  120A  158A  2000  160A  158A  	fcall	_INIT_UART
  1445  1E98                     l4404:
  1446                           
  1447                           ;main.c: 108:     read();
  1448  1E98  160A  158A  212B  160A  158A  	fcall	_read
  1449  1E9D                     l4406:
  1450                           
  1451                           ;main.c: 109:     Lcd_Init();
  1452  1E9D  160A  158A  2389  160A  158A  	fcall	_Lcd_Init
  1453  1EA2                     l4408:
  1454                           
  1455                           ;main.c: 110:     Lcd_Clear();
  1456  1EA2  160A  158A  2141  160A  158A  	fcall	_Lcd_Clear
  1457  1EA7                     l4410:
  1458                           
  1459                           ;main.c: 112:         pot = AADC(banderaADC, Num_Pot);
  1460  1EA7  1683               	bsf	3,5	;RP0=1, select bank1
  1461  1EA8  1303               	bcf	3,6	;RP1=0, select bank1
  1462  1EA9  086D               	movf	_Num_Pot^(0+128),w
  1463  1EAA  00CD               	movwf	??_main^(0+128)
  1464  1EAB  084D               	movf	??_main^(0+128),w
  1465  1EAC  00F3               	movwf	AADC@Num_Pot
  1466  1EAD  086E               	movf	_banderaADC^(0+128),w
  1467  1EAE  160A  158A  2209  160A  158A  	fcall	_AADC
  1468  1EB3  1683               	bsf	3,5	;RP0=1, select bank1
  1469  1EB4  1303               	bcf	3,6	;RP1=0, select bank1
  1470  1EB5  00CE               	movwf	(??_main+1)^(0+128)
  1471  1EB6  084E               	movf	(??_main+1)^(0+128),w
  1472  1EB7  1283               	bcf	3,5	;RP0=0, select bank0
  1473  1EB8  1303               	bcf	3,6	;RP1=0, select bank0
  1474  1EB9  00EC               	movwf	_pot
  1475  1EBA                     l4412:
  1476                           
  1477                           ;main.c: 115:         Lcd_Set_Cursor(1, 1);
  1478  1EBA  01F7               	clrf	Lcd_Set_Cursor@b
  1479  1EBB  0AF7               	incf	Lcd_Set_Cursor@b,f
  1480  1EBC  3001               	movlw	1
  1481  1EBD  160A  158A  21BA  160A  158A  	fcall	_Lcd_Set_Cursor
  1482  1EC2                     l4414:
  1483                           
  1484                           ;main.c: 116:         Lcd_Write_String("S1:   S2:    S3:");
  1485  1EC2  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1486  1EC3  00F8               	movwf	Lcd_Write_String@a
  1487  1EC4  3080               	movlw	128
  1488  1EC5  00F9               	movwf	Lcd_Write_String@a+1
  1489  1EC6  160A  158A  22FD  160A  158A  	fcall	_Lcd_Write_String
  1490  1ECB                     l4416:
  1491                           
  1492                           ;main.c: 117:         conversor = 0.0195 * S1;
  1493  1ECB  303C               	movlw	60
  1494  1ECC  1283               	bcf	3,5	;RP0=0, select bank0
  1495  1ECD  1303               	bcf	3,6	;RP1=0, select bank0
  1496  1ECE  00AD               	movwf	___flmul@b+3
  1497  1ECF  309F               	movlw	159
  1498  1ED0  00AC               	movwf	___flmul@b+2
  1499  1ED1  30BE               	movlw	190
  1500  1ED2  00AB               	movwf	___flmul@b+1
  1501  1ED3  3077               	movlw	119
  1502  1ED4  00AA               	movwf	___flmul@b
  1503  1ED5  1683               	bsf	3,5	;RP0=1, select bank1
  1504  1ED6  1303               	bcf	3,6	;RP1=0, select bank1
  1505  1ED7  086C               	movf	_S1^(0+128),w
  1506  1ED8  00CD               	movwf	??_main^(0+128)
  1507  1ED9  01CE               	clrf	(??_main^(0+128)+1)
  1508  1EDA  01CF               	clrf	(??_main^(0+128)+2)
  1509  1EDB  01D0               	clrf	(??_main^(0+128)+3)
  1510  1EDC  0850               	movf	(??_main+3)^(0+128),w
  1511  1EDD  00F6               	movwf	___xxtofl@val+3
  1512  1EDE  084F               	movf	(??_main+2)^(0+128),w
  1513  1EDF  00F5               	movwf	___xxtofl@val+2
  1514  1EE0  084E               	movf	(??_main+1)^(0+128),w
  1515  1EE1  00F4               	movwf	___xxtofl@val+1
  1516  1EE2  084D               	movf	??_main^(0+128),w
  1517  1EE3  00F3               	movwf	___xxtofl@val
  1518  1EE4  3001               	movlw	1
  1519  1EE5  160A  158A  25D2  160A  158A  	fcall	___xxtofl
  1520  1EEA  0876               	movf	?___xxtofl+3,w
  1521  1EEB  1283               	bcf	3,5	;RP0=0, select bank0
  1522  1EEC  1303               	bcf	3,6	;RP1=0, select bank0
  1523  1EED  00B1               	movwf	___flmul@a+3
  1524  1EEE  0875               	movf	?___xxtofl+2,w
  1525  1EEF  00B0               	movwf	___flmul@a+2
  1526  1EF0  0874               	movf	?___xxtofl+1,w
  1527  1EF1  00AF               	movwf	___flmul@a+1
  1528  1EF2  0873               	movf	?___xxtofl,w
  1529  1EF3  00AE               	movwf	___flmul@a
  1530  1EF4  120A  158A  213C  160A  158A  	fcall	___flmul
  1531  1EF9  1283               	bcf	3,5	;RP0=0, select bank0
  1532  1EFA  1303               	bcf	3,6	;RP1=0, select bank0
  1533  1EFB  082D               	movf	?___flmul+3,w
  1534  1EFC  1683               	bsf	3,5	;RP0=1, select bank1
  1535  1EFD  1303               	bcf	3,6	;RP1=0, select bank1
  1536  1EFE  00D4               	movwf	(_conversor+3)^(0+128)
  1537  1EFF  1283               	bcf	3,5	;RP0=0, select bank0
  1538  1F00  1303               	bcf	3,6	;RP1=0, select bank0
  1539  1F01  082C               	movf	?___flmul+2,w
  1540  1F02  1683               	bsf	3,5	;RP0=1, select bank1
  1541  1F03  1303               	bcf	3,6	;RP1=0, select bank1
  1542  1F04  00D3               	movwf	(_conversor+2)^(0+128)
  1543  1F05  1283               	bcf	3,5	;RP0=0, select bank0
  1544  1F06  1303               	bcf	3,6	;RP1=0, select bank0
  1545  1F07  082B               	movf	?___flmul+1,w
  1546  1F08  1683               	bsf	3,5	;RP0=1, select bank1
  1547  1F09  1303               	bcf	3,6	;RP1=0, select bank1
  1548  1F0A  00D2               	movwf	(_conversor+1)^(0+128)
  1549  1F0B  1283               	bcf	3,5	;RP0=0, select bank0
  1550  1F0C  1303               	bcf	3,6	;RP1=0, select bank0
  1551  1F0D  082A               	movf	?___flmul,w
  1552  1F0E  1683               	bsf	3,5	;RP0=1, select bank1
  1553  1F0F  1303               	bcf	3,6	;RP1=0, select bank1
  1554  1F10  00D1               	movwf	_conversor^(0+128)
  1555  1F11                     l4418:
  1556                           
  1557                           ;main.c: 118:         Lcd_Set_Cursor(2, 1);
  1558  1F11  01F7               	clrf	Lcd_Set_Cursor@b
  1559  1F12  0AF7               	incf	Lcd_Set_Cursor@b,f
  1560  1F13  3002               	movlw	2
  1561  1F14  160A  158A  21BA  160A  158A  	fcall	_Lcd_Set_Cursor
  1562  1F19                     l4420:
  1563                           
  1564                           ;main.c: 119:         sprintf(s, "%3.2fV", conversor);
  1565  1F19  30A2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1566  1F1A  1683               	bsf	3,5	;RP0=1, select bank1
  1567  1F1B  1303               	bcf	3,6	;RP1=0, select bank1
  1568  1F1C  00CD               	movwf	??_main^(0+128)
  1569  1F1D  084D               	movf	??_main^(0+128),w
  1570  1F1E  00A8               	movwf	sprintf@f^(0+128)
  1571  1F1F  0854               	movf	(_conversor+3)^(0+128),w
  1572  1F20  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1573  1F21  0853               	movf	(_conversor+2)^(0+128),w
  1574  1F22  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1575  1F23  0852               	movf	(_conversor+1)^(0+128),w
  1576  1F24  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1577  1F25  0851               	movf	_conversor^(0+128),w
  1578  1F26  00A9               	movwf	(?_sprintf^(0+128)+1)
  1579  1F27  30D7               	movlw	(low (_s| 0))& (0+255)
  1580  1F28  160A  118A  24F6  160A  158A  	fcall	_sprintf
  1581  1F2D                     l4422:
  1582                           
  1583                           ;main.c: 120:         Lcd_Write_String(s);
  1584  1F2D  30D7               	movlw	(low (_s| 0))& (0+255)
  1585  1F2E  00F8               	movwf	Lcd_Write_String@a
  1586  1F2F  3000               	movlw	0
  1587  1F30  00F9               	movwf	Lcd_Write_String@a+1
  1588  1F31  160A  158A  22FD  160A  158A  	fcall	_Lcd_Write_String
  1589  1F36                     l4424:
  1590                           
  1591                           ;main.c: 121:         conversor = 0.0195 * S2;
  1592  1F36  303C               	movlw	60
  1593  1F37  1283               	bcf	3,5	;RP0=0, select bank0
  1594  1F38  1303               	bcf	3,6	;RP1=0, select bank0
  1595  1F39  00AD               	movwf	___flmul@b+3
  1596  1F3A  309F               	movlw	159
  1597  1F3B  00AC               	movwf	___flmul@b+2
  1598  1F3C  30BE               	movlw	190
  1599  1F3D  00AB               	movwf	___flmul@b+1
  1600  1F3E  3077               	movlw	119
  1601  1F3F  00AA               	movwf	___flmul@b
  1602  1F40  1683               	bsf	3,5	;RP0=1, select bank1
  1603  1F41  1303               	bcf	3,6	;RP1=0, select bank1
  1604  1F42  086B               	movf	_S2^(0+128),w
  1605  1F43  00CD               	movwf	??_main^(0+128)
  1606  1F44  01CE               	clrf	(??_main^(0+128)+1)
  1607  1F45  01CF               	clrf	(??_main^(0+128)+2)
  1608  1F46  01D0               	clrf	(??_main^(0+128)+3)
  1609  1F47  0850               	movf	(??_main+3)^(0+128),w
  1610  1F48  00F6               	movwf	___xxtofl@val+3
  1611  1F49  084F               	movf	(??_main+2)^(0+128),w
  1612  1F4A  00F5               	movwf	___xxtofl@val+2
  1613  1F4B  084E               	movf	(??_main+1)^(0+128),w
  1614  1F4C  00F4               	movwf	___xxtofl@val+1
  1615  1F4D  084D               	movf	??_main^(0+128),w
  1616  1F4E  00F3               	movwf	___xxtofl@val
  1617  1F4F  3001               	movlw	1
  1618  1F50  160A  158A  25D2  160A  158A  	fcall	___xxtofl
  1619  1F55  0876               	movf	?___xxtofl+3,w
  1620  1F56  1283               	bcf	3,5	;RP0=0, select bank0
  1621  1F57  1303               	bcf	3,6	;RP1=0, select bank0
  1622  1F58  00B1               	movwf	___flmul@a+3
  1623  1F59  0875               	movf	?___xxtofl+2,w
  1624  1F5A  00B0               	movwf	___flmul@a+2
  1625  1F5B  0874               	movf	?___xxtofl+1,w
  1626  1F5C  00AF               	movwf	___flmul@a+1
  1627  1F5D  0873               	movf	?___xxtofl,w
  1628  1F5E  00AE               	movwf	___flmul@a
  1629  1F5F  120A  158A  213C  160A  158A  	fcall	___flmul
  1630  1F64  1283               	bcf	3,5	;RP0=0, select bank0
  1631  1F65  1303               	bcf	3,6	;RP1=0, select bank0
  1632  1F66  082D               	movf	?___flmul+3,w
  1633  1F67  1683               	bsf	3,5	;RP0=1, select bank1
  1634  1F68  1303               	bcf	3,6	;RP1=0, select bank1
  1635  1F69  00D4               	movwf	(_conversor+3)^(0+128)
  1636  1F6A  1283               	bcf	3,5	;RP0=0, select bank0
  1637  1F6B  1303               	bcf	3,6	;RP1=0, select bank0
  1638  1F6C  082C               	movf	?___flmul+2,w
  1639  1F6D  1683               	bsf	3,5	;RP0=1, select bank1
  1640  1F6E  1303               	bcf	3,6	;RP1=0, select bank1
  1641  1F6F  00D3               	movwf	(_conversor+2)^(0+128)
  1642  1F70  1283               	bcf	3,5	;RP0=0, select bank0
  1643  1F71  1303               	bcf	3,6	;RP1=0, select bank0
  1644  1F72  082B               	movf	?___flmul+1,w
  1645  1F73  1683               	bsf	3,5	;RP0=1, select bank1
  1646  1F74  1303               	bcf	3,6	;RP1=0, select bank1
  1647  1F75  00D2               	movwf	(_conversor+1)^(0+128)
  1648  1F76  1283               	bcf	3,5	;RP0=0, select bank0
  1649  1F77  1303               	bcf	3,6	;RP1=0, select bank0
  1650  1F78  082A               	movf	?___flmul,w
  1651  1F79  1683               	bsf	3,5	;RP0=1, select bank1
  1652  1F7A  1303               	bcf	3,6	;RP1=0, select bank1
  1653  1F7B  00D1               	movwf	_conversor^(0+128)
  1654  1F7C                     l4426:
  1655                           
  1656                           ;main.c: 122:         Lcd_Set_Cursor(2, 7);
  1657  1F7C  3007               	movlw	7
  1658  1F7D  00CD               	movwf	??_main^(0+128)
  1659  1F7E  084D               	movf	??_main^(0+128),w
  1660  1F7F  00F7               	movwf	Lcd_Set_Cursor@b
  1661  1F80  3002               	movlw	2
  1662  1F81  160A  158A  21BA  160A  158A  	fcall	_Lcd_Set_Cursor
  1663  1F86                     l4428:
  1664                           
  1665                           ;main.c: 123:         sprintf(s, "%3.2fV", conversor);
  1666  1F86  30A2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1667  1F87  1683               	bsf	3,5	;RP0=1, select bank1
  1668  1F88  1303               	bcf	3,6	;RP1=0, select bank1
  1669  1F89  00CD               	movwf	??_main^(0+128)
  1670  1F8A  084D               	movf	??_main^(0+128),w
  1671  1F8B  00A8               	movwf	sprintf@f^(0+128)
  1672  1F8C  0854               	movf	(_conversor+3)^(0+128),w
  1673  1F8D  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1674  1F8E  0853               	movf	(_conversor+2)^(0+128),w
  1675  1F8F  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1676  1F90  0852               	movf	(_conversor+1)^(0+128),w
  1677  1F91  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1678  1F92  0851               	movf	_conversor^(0+128),w
  1679  1F93  00A9               	movwf	(?_sprintf^(0+128)+1)
  1680  1F94  30D7               	movlw	(low (_s| 0))& (0+255)
  1681  1F95  160A  118A  24F6  160A  158A  	fcall	_sprintf
  1682  1F9A                     l4430:
  1683                           
  1684                           ;main.c: 124:         Lcd_Write_String(s);
  1685  1F9A  30D7               	movlw	(low (_s| 0))& (0+255)
  1686  1F9B  00F8               	movwf	Lcd_Write_String@a
  1687  1F9C  3000               	movlw	0
  1688  1F9D  00F9               	movwf	Lcd_Write_String@a+1
  1689  1F9E  160A  158A  22FD  160A  158A  	fcall	_Lcd_Write_String
  1690  1FA3                     l4432:
  1691                           
  1692                           ;main.c: 126:         Lcd_Set_Cursor(2, 14);
  1693  1FA3  300E               	movlw	14
  1694  1FA4  1683               	bsf	3,5	;RP0=1, select bank1
  1695  1FA5  1303               	bcf	3,6	;RP1=0, select bank1
  1696  1FA6  00CD               	movwf	??_main^(0+128)
  1697  1FA7  084D               	movf	??_main^(0+128),w
  1698  1FA8  00F7               	movwf	Lcd_Set_Cursor@b
  1699  1FA9  3002               	movlw	2
  1700  1FAA  160A  158A  21BA  160A  158A  	fcall	_Lcd_Set_Cursor
  1701  1FAF                     l4434:
  1702                           
  1703                           ;main.c: 127:         sprintf(s, "%d", contador);
  1704  1FAF  30A9               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1705  1FB0  1683               	bsf	3,5	;RP0=1, select bank1
  1706  1FB1  1303               	bcf	3,6	;RP1=0, select bank1
  1707  1FB2  00CD               	movwf	??_main^(0+128)
  1708  1FB3  084D               	movf	??_main^(0+128),w
  1709  1FB4  00A8               	movwf	sprintf@f^(0+128)
  1710  1FB5  0855               	movf	_contador^(0+128),w
  1711  1FB6  00CE               	movwf	(??_main+1)^(0+128)
  1712  1FB7  01CF               	clrf	((??_main+1)^(0+128)+1)
  1713  1FB8  084E               	movf	(??_main+1)^(0+128),w
  1714  1FB9  00A9               	movwf	(?_sprintf^(0+128)+1)
  1715  1FBA  084F               	movf	(??_main+2)^(0+128),w
  1716  1FBB  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1717  1FBC  30D7               	movlw	(low (_s| 0))& (0+255)
  1718  1FBD  160A  118A  24F6  160A  158A  	fcall	_sprintf
  1719  1FC2                     l4436:
  1720                           
  1721                           ;main.c: 128:         Lcd_Write_String(s);
  1722  1FC2  30D7               	movlw	(low (_s| 0))& (0+255)
  1723  1FC3  00F8               	movwf	Lcd_Write_String@a
  1724  1FC4  3000               	movlw	0
  1725  1FC5  00F9               	movwf	Lcd_Write_String@a+1
  1726  1FC6  160A  158A  22FD  160A  158A  	fcall	_Lcd_Write_String
  1727  1FCB                     l4438:
  1728                           
  1729                           ;main.c: 129:         write(s);
  1730  1FCB  30D7               	movlw	(low (_s| 0))& (0+255)
  1731  1FCC  160A  158A  22BB  160A  158A  	fcall	_write
  1732  1FD1                     l4440:
  1733                           
  1734                           ;main.c: 130:         _delay((unsigned long)((250)*(8000000/4000.0)));
  1735  1FD1  3003               	movlw	3
  1736  1FD2  1683               	bsf	3,5	;RP0=1, select bank1
  1737  1FD3  1303               	bcf	3,6	;RP1=0, select bank1
  1738  1FD4  00CF               	movwf	(??_main^(0+128)+2)
  1739  1FD5  308A               	movlw	138
  1740  1FD6  00CE               	movwf	(??_main^(0+128)+1)
  1741  1FD7  3055               	movlw	85
  1742  1FD8  00CD               	movwf	??_main^(0+128)
  1743  1FD9                     u7487:
  1744  1FD9  0BCD               	decfsz	??_main^(0+128),f
  1745  1FDA  2FD9               	goto	u7487
  1746  1FDB  0BCE               	decfsz	(??_main^(0+128)+1),f
  1747  1FDC  2FD9               	goto	u7487
  1748  1FDD  0BCF               	decfsz	(??_main^(0+128)+2),f
  1749  1FDE  2FD9               	goto	u7487
  1750  1FDF                     l4442:
  1751                           
  1752                           ;main.c: 131:         if (mensaje == 0x2B) {
  1753  1FDF  302B               	movlw	43
  1754  1FE0  1683               	bsf	3,5	;RP0=1, select bank1
  1755  1FE1  1303               	bcf	3,6	;RP1=0, select bank1
  1756  1FE2  0656               	xorwf	_mensaje^(0+128),w
  1757  1FE3  1D03               	btfss	3,2
  1758  1FE4  2FE6               	goto	u7451
  1759  1FE5  2FE7               	goto	u7450
  1760  1FE6                     u7451:
  1761  1FE6  2FED               	goto	l4448
  1762  1FE7                     u7450:
  1763  1FE7                     l4444:
  1764                           
  1765                           ;main.c: 132:             contador++;
  1766  1FE7  3001               	movlw	1
  1767  1FE8  00CD               	movwf	??_main^(0+128)
  1768  1FE9  084D               	movf	??_main^(0+128),w
  1769  1FEA  07D5               	addwf	_contador^(0+128),f
  1770  1FEB                     l4446:
  1771                           
  1772                           ;main.c: 133:             mensaje = 0;
  1773  1FEB  01D6               	clrf	_mensaje^(0+128)
  1774                           
  1775                           ;main.c: 134:         } else if (mensaje == 0x2D) {
  1776  1FEC  2FF6               	goto	l4454
  1777  1FED                     l4448:
  1778  1FED  302D               	movlw	45
  1779  1FEE  0656               	xorwf	_mensaje^(0+128),w
  1780  1FEF  1D03               	btfss	3,2
  1781  1FF0  2FF2               	goto	u7461
  1782  1FF1  2FF3               	goto	u7460
  1783  1FF2                     u7461:
  1784  1FF2  2FF6               	goto	l4454
  1785  1FF3                     u7460:
  1786  1FF3                     l4450:
  1787                           
  1788                           ;main.c: 135:             contador--;
  1789  1FF3  3001               	movlw	1
  1790  1FF4  02D5               	subwf	_contador^(0+128),f
  1791  1FF5  2FEB               	goto	l4446
  1792  1FF6                     l4454:
  1793                           
  1794                           ;main.c: 138:         if (contador >=0 && contador <10){
  1795  1FF6  300A               	movlw	10
  1796  1FF7  0255               	subwf	_contador^(0+128),w
  1797  1FF8  1803               	skipnc
  1798  1FF9  2FFB               	goto	u7471
  1799  1FFA  2FFC               	goto	u7470
  1800  1FFB                     u7471:
  1801  1FFB  2EA7               	goto	l4410
  1802  1FFC                     u7470:
  1803  1FFC  2EA2               	goto	l4408
  1804  1FFD  120A  118A  280C   	ljmp	start
  1805  2000                     __end_of_main:
  1806                           
  1807                           	psect	text1
  1808  1ABB                     __ptext1:	
  1809 ;; *************** function _write *****************
  1810 ;; Defined at:
  1811 ;;		line 24 in file "UART.c"
  1812 ;; Parameters:    Size  Location     Type
  1813 ;;  entrada         1    wreg     PTR unsigned char 
  1814 ;;		 -> s(20), 
  1815 ;; Auto vars:     Size  Location     Type
  1816 ;;  entrada         1    3[COMMON] PTR unsigned char 
  1817 ;;		 -> s(20), 
  1818 ;; Return value:  Size  Location     Type
  1819 ;;                  1    wreg      void 
  1820 ;; Registers used:
  1821 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1822 ;; Tracked objects:
  1823 ;;		On entry : 0/0
  1824 ;;		On exit  : 0/0
  1825 ;;		Unchanged: 0/0
  1826 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1827 ;;      Params:         0       0       0       0       0
  1828 ;;      Locals:         1       0       0       0       0
  1829 ;;      Temps:          0       0       0       0       0
  1830 ;;      Totals:         1       0       0       0       0
  1831 ;;Total ram usage:        1 bytes
  1832 ;; Hardware stack levels used:    1
  1833 ;; Hardware stack levels required when called:    1
  1834 ;; This function calls:
  1835 ;;		Nothing
  1836 ;; This function is called by:
  1837 ;;		_main
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           
  1842                           ;psect for function _write
  1843  1ABB                     _write:
  1844                           
  1845                           ;incstack = 0
  1846                           ; Regs used in _write: [wreg-fsr0h+status,2+status,0]
  1847                           ;write@entrada stored from wreg
  1848  1ABB  00F3               	movwf	write@entrada
  1849  1ABC                     l3604:
  1850                           
  1851                           ;UART.c: 25:     TXREG = entrada[0];
  1852  1ABC  0873               	movf	write@entrada,w
  1853  1ABD  0084               	movwf	4
  1854  1ABE  1383               	bcf	3,7	;select IRP bank0
  1855  1ABF  0800               	movf	0,w
  1856  1AC0  1283               	bcf	3,5	;RP0=0, select bank0
  1857  1AC1  1303               	bcf	3,6	;RP1=0, select bank0
  1858  1AC2  0099               	movwf	25	;volatile
  1859  1AC3                     l170:	
  1860                           ;UART.c: 27:     }
  1861                           
  1862                           
  1863                           ;UART.c: 26:     while (TRMT == 0) {
  1864  1AC3  1683               	bsf	3,5	;RP0=1, select bank1
  1865  1AC4  1303               	bcf	3,6	;RP1=0, select bank1
  1866  1AC5  1C98               	btfss	24,1	;volatile
  1867  1AC6  2AC8               	goto	u5841
  1868  1AC7  2AC9               	goto	u5840
  1869  1AC8                     u5841:
  1870  1AC8  2AC3               	goto	l170
  1871  1AC9                     u5840:
  1872  1AC9                     l3606:
  1873                           
  1874                           ;UART.c: 28:     TXREG = entrada[1];
  1875  1AC9  0A73               	incf	write@entrada,w
  1876  1ACA  0084               	movwf	4
  1877  1ACB  1383               	bcf	3,7	;select IRP bank0
  1878  1ACC  0800               	movf	0,w
  1879  1ACD  1283               	bcf	3,5	;RP0=0, select bank0
  1880  1ACE  1303               	bcf	3,6	;RP1=0, select bank0
  1881  1ACF  0099               	movwf	25	;volatile
  1882  1AD0                     l173:	
  1883                           ;UART.c: 30:     }
  1884                           
  1885                           
  1886                           ;UART.c: 29:     while (TRMT == 0) {
  1887  1AD0  1683               	bsf	3,5	;RP0=1, select bank1
  1888  1AD1  1303               	bcf	3,6	;RP1=0, select bank1
  1889  1AD2  1C98               	btfss	24,1	;volatile
  1890  1AD3  2AD5               	goto	u5851
  1891  1AD4  2AD6               	goto	u5850
  1892  1AD5                     u5851:
  1893  1AD5  2AD0               	goto	l173
  1894  1AD6                     u5850:
  1895  1AD6                     l3608:
  1896                           
  1897                           ;UART.c: 31:     TXREG = entrada[2];
  1898  1AD6  0873               	movf	write@entrada,w
  1899  1AD7  3E02               	addlw	2
  1900  1AD8  0084               	movwf	4
  1901  1AD9  1383               	bcf	3,7	;select IRP bank0
  1902  1ADA  0800               	movf	0,w
  1903  1ADB  1283               	bcf	3,5	;RP0=0, select bank0
  1904  1ADC  1303               	bcf	3,6	;RP1=0, select bank0
  1905  1ADD  0099               	movwf	25	;volatile
  1906  1ADE                     l176:	
  1907                           ;UART.c: 33:     }
  1908                           
  1909                           
  1910                           ;UART.c: 32:     while (TRMT == 0) {
  1911  1ADE  1683               	bsf	3,5	;RP0=1, select bank1
  1912  1ADF  1303               	bcf	3,6	;RP1=0, select bank1
  1913  1AE0  1C98               	btfss	24,1	;volatile
  1914  1AE1  2AE3               	goto	u5861
  1915  1AE2  2AE4               	goto	u5860
  1916  1AE3                     u5861:
  1917  1AE3  2ADE               	goto	l176
  1918  1AE4                     u5860:
  1919  1AE4                     l3610:
  1920                           
  1921                           ;UART.c: 34:     TXREG = entrada[3];
  1922  1AE4  0873               	movf	write@entrada,w
  1923  1AE5  3E03               	addlw	3
  1924  1AE6  0084               	movwf	4
  1925  1AE7  1383               	bcf	3,7	;select IRP bank0
  1926  1AE8  0800               	movf	0,w
  1927  1AE9  1283               	bcf	3,5	;RP0=0, select bank0
  1928  1AEA  1303               	bcf	3,6	;RP1=0, select bank0
  1929  1AEB  0099               	movwf	25	;volatile
  1930  1AEC                     l179:	
  1931                           ;UART.c: 36:     }
  1932                           
  1933                           
  1934                           ;UART.c: 35:     while (TRMT == 0) {
  1935  1AEC  1683               	bsf	3,5	;RP0=1, select bank1
  1936  1AED  1303               	bcf	3,6	;RP1=0, select bank1
  1937  1AEE  1C98               	btfss	24,1	;volatile
  1938  1AEF  2AF1               	goto	u5871
  1939  1AF0  2AF2               	goto	u5870
  1940  1AF1                     u5871:
  1941  1AF1  2AEC               	goto	l179
  1942  1AF2                     u5870:
  1943  1AF2                     l3612:
  1944                           
  1945                           ;UART.c: 37:     TXREG = 0x20;
  1946  1AF2  3020               	movlw	32
  1947  1AF3  1283               	bcf	3,5	;RP0=0, select bank0
  1948  1AF4  1303               	bcf	3,6	;RP1=0, select bank0
  1949  1AF5  0099               	movwf	25	;volatile
  1950  1AF6                     l182:	
  1951                           ;UART.c: 39:     }
  1952                           
  1953                           
  1954                           ;UART.c: 38:     while (TRMT == 0) {
  1955  1AF6  1683               	bsf	3,5	;RP0=1, select bank1
  1956  1AF7  1303               	bcf	3,6	;RP1=0, select bank1
  1957  1AF8  1C98               	btfss	24,1	;volatile
  1958  1AF9  2AFB               	goto	u5881
  1959  1AFA  2AFC               	goto	u5880
  1960  1AFB                     u5881:
  1961  1AFB  2AF6               	goto	l182
  1962  1AFC                     u5880:
  1963  1AFC                     l185:
  1964  1AFC  0008               	return
  1965  1AFD                     __end_of_write:
  1966                           
  1967                           	psect	text2
  1968  14F6                     __ptext2:	
  1969 ;; *************** function _sprintf *****************
  1970 ;; Defined at:
  1971 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1972 ;; Parameters:    Size  Location     Type
  1973 ;;  sp              1    wreg     PTR unsigned char 
  1974 ;;		 -> s(20), 
  1975 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1976 ;;		 -> STR_4(3), STR_3(7), STR_2(7), 
  1977 ;; Auto vars:     Size  Location     Type
  1978 ;;  sp              1   41[BANK1 ] PTR unsigned char 
  1979 ;;		 -> s(20), 
  1980 ;;  fval            4   37[BANK1 ] PTR unsigned char 
  1981 ;;  val             4   31[BANK1 ] unsigned long 
  1982 ;;  tmpval          4   27[BANK1 ] struct .
  1983 ;;  prec            2   42[BANK1 ] int 
  1984 ;;  eexp            2   35[BANK1 ] int 
  1985 ;;  width           2   25[BANK1 ] int 
  1986 ;;  flag            2   23[BANK1 ] unsigned short 
  1987 ;;  cp              2    0        PTR const unsigned char 
  1988 ;;  len             2    0        unsigned int 
  1989 ;;  c               1   44[BANK1 ] unsigned char 
  1990 ;;  ap              1   22[BANK1 ] PTR void [1]
  1991 ;;		 -> ?_sprintf(2), 
  1992 ;;  d               1    0        unsigned char 
  1993 ;; Return value:  Size  Location     Type
  1994 ;;                  2    8[BANK1 ] int 
  1995 ;; Registers used:
  1996 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1997 ;; Tracked objects:
  1998 ;;		On entry : 0/0
  1999 ;;		On exit  : 0/0
  2000 ;;		Unchanged: 0/0
  2001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2002 ;;      Params:         0       0       5       0       0
  2003 ;;      Locals:         0       0      27       0       0
  2004 ;;      Temps:          0       0       5       0       0
  2005 ;;      Totals:         0       0      37       0       0
  2006 ;;Total ram usage:       37 bytes
  2007 ;; Hardware stack levels used:    1
  2008 ;; Hardware stack levels required when called:    4
  2009 ;; This function calls:
  2010 ;;		___awdiv
  2011 ;;		___fladd
  2012 ;;		___fleq
  2013 ;;		___flge
  2014 ;;		___flmul
  2015 ;;		___flneg
  2016 ;;		___flsub
  2017 ;;		___fltol
  2018 ;;		___lldiv
  2019 ;;		___llmod
  2020 ;;		___wmul
  2021 ;;		___xxtofl
  2022 ;;		__div_to_l_
  2023 ;;		__tdiv_to_l_
  2024 ;;		_fround
  2025 ;;		_isdigit
  2026 ;;		_scale
  2027 ;; This function is called by:
  2028 ;;		_main
  2029 ;; This function uses a non-reentrant model
  2030 ;;
  2031                           
  2032                           
  2033                           ;psect for function _sprintf
  2034  14F6                     _sprintf:
  2035                           
  2036                           ;incstack = 0
  2037                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2038                           ;sprintf@sp stored from wreg
  2039  14F6  1683               	bsf	3,5	;RP0=1, select bank1
  2040  14F7  1303               	bcf	3,6	;RP1=0, select bank1
  2041  14F8  00C9               	movwf	sprintf@sp^(0+128)
  2042  14F9                     l4108:
  2043                           
  2044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2045  14F9  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  2046  14FA  00AD               	movwf	??_sprintf^(0+128)
  2047  14FB  082D               	movf	??_sprintf^(0+128),w
  2048  14FC  00B6               	movwf	sprintf@ap^(0+128)
  2049  14FD                     L1:
  2050                           
  2051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2052  14FD  120A  118A  2E97   	goto	l4390
  2053  1500                     l4110:
  2054                           
  2055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2056  1500  3025               	movlw	37
  2057  1501  064C               	xorwf	sprintf@c^(0+128),w
  2058  1502  1903               	btfsc	3,2
  2059  1503  2D05               	goto	u6921
  2060  1504  2D06               	goto	u6920
  2061  1505                     u6921:
  2062  1505  2D12               	goto	l4116
  2063  1506                     u6920:
  2064  1506                     l4112:
  2065                           
  2066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2067  1506  084C               	movf	sprintf@c^(0+128),w
  2068  1507  00AD               	movwf	??_sprintf^(0+128)
  2069  1508  0849               	movf	sprintf@sp^(0+128),w
  2070  1509  0084               	movwf	4
  2071  150A  082D               	movf	??_sprintf^(0+128),w
  2072  150B  1383               	bcf	3,7	;select IRP bank0
  2073  150C  0080               	movwf	0
  2074  150D                     l4114:
  2075  150D  3001               	movlw	1
  2076  150E  00AD               	movwf	??_sprintf^(0+128)
  2077  150F  082D               	movf	??_sprintf^(0+128),w
  2078  1510  07C9               	addwf	sprintf@sp^(0+128),f
  2079                           
  2080                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2081  1511  2CFD               	goto	L1
  2082  1512                     l4116:
  2083                           
  2084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2085  1512  01B9               	clrf	sprintf@width^(0+128)
  2086  1513  01BA               	clrf	(sprintf@width+1)^(0+128)
  2087                           
  2088                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2089  1514  01B7               	clrf	sprintf@flag^(0+128)
  2090  1515  01B8               	clrf	(sprintf@flag+1)^(0+128)
  2091  1516                     l4118:
  2092                           
  2093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2094  1516  0828               	movf	sprintf@f^(0+128),w
  2095  1517  0084               	movwf	4
  2096  1518  160A  158A  200A  160A  118A  	fcall	stringdir
  2097  151D  120A  118A  27EC  160A  118A  	fcall	_isdigit
  2098  1522  1C03               	btfss	3,0
  2099  1523  2D25               	goto	u6931
  2100  1524  2D26               	goto	u6930
  2101  1525                     u6931:
  2102  1525  2D66               	goto	l4130
  2103  1526                     u6930:
  2104  1526                     l4120:
  2105                           
  2106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2107  1526  1683               	bsf	3,5	;RP0=1, select bank1
  2108  1527  1303               	bcf	3,6	;RP1=0, select bank1
  2109  1528  01B9               	clrf	sprintf@width^(0+128)
  2110  1529  01BA               	clrf	(sprintf@width+1)^(0+128)
  2111  152A                     l4122:
  2112                           
  2113                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2114  152A  300A               	movlw	10
  2115  152B  00F3               	movwf	___wmul@multiplier
  2116  152C  3000               	movlw	0
  2117  152D  00F4               	movwf	___wmul@multiplier+1
  2118  152E  1683               	bsf	3,5	;RP0=1, select bank1
  2119  152F  1303               	bcf	3,6	;RP1=0, select bank1
  2120  1530  083A               	movf	(sprintf@width+1)^(0+128),w
  2121  1531  00F6               	movwf	___wmul@multiplicand+1
  2122  1532  0839               	movf	sprintf@width^(0+128),w
  2123  1533  00F5               	movwf	___wmul@multiplicand
  2124  1534  160A  158A  2195  160A  118A  	fcall	___wmul
  2125  1539  0874               	movf	?___wmul+1,w
  2126  153A  1683               	bsf	3,5	;RP0=1, select bank1
  2127  153B  1303               	bcf	3,6	;RP1=0, select bank1
  2128  153C  00BA               	movwf	(sprintf@width+1)^(0+128)
  2129  153D  0873               	movf	?___wmul,w
  2130  153E  00B9               	movwf	sprintf@width^(0+128)
  2131  153F                     l4124:
  2132                           
  2133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2134  153F  0828               	movf	sprintf@f^(0+128),w
  2135  1540  0084               	movwf	4
  2136  1541  160A  158A  200A  160A  118A  	fcall	stringdir
  2137  1546  3ED0               	addlw	208
  2138  1547  00AD               	movwf	??_sprintf^(0+128)
  2139  1548  30FF               	movlw	255
  2140  1549  1803               	skipnc
  2141  154A  3000               	movlw	0
  2142  154B  00AE               	movwf	(??_sprintf^(0+128)+1)
  2143  154C  082D               	movf	??_sprintf^(0+128),w
  2144  154D  07B9               	addwf	sprintf@width^(0+128),f
  2145  154E  1803               	skipnc
  2146  154F  0ABA               	incf	(sprintf@width+1)^(0+128),f
  2147  1550  082E               	movf	(??_sprintf+1)^(0+128),w
  2148  1551  07BA               	addwf	(sprintf@width+1)^(0+128),f
  2149  1552                     l4126:
  2150  1552  3001               	movlw	1
  2151  1553  00AD               	movwf	??_sprintf^(0+128)
  2152  1554  082D               	movf	??_sprintf^(0+128),w
  2153  1555  07A8               	addwf	sprintf@f^(0+128),f
  2154  1556                     l4128:
  2155                           
  2156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2157  1556  0828               	movf	sprintf@f^(0+128),w
  2158  1557  0084               	movwf	4
  2159  1558  160A  158A  200A  160A  118A  	fcall	stringdir
  2160  155D  120A  118A  27EC  160A  118A  	fcall	_isdigit
  2161  1562  1803               	btfsc	3,0
  2162  1563  2D65               	goto	u6941
  2163  1564  2D66               	goto	u6940
  2164  1565                     u6941:
  2165  1565  2D2A               	goto	l4122
  2166  1566                     u6940:
  2167  1566                     l4130:
  2168                           
  2169                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2170  1566  1683               	bsf	3,5	;RP0=1, select bank1
  2171  1567  1303               	bcf	3,6	;RP1=0, select bank1
  2172  1568  0828               	movf	sprintf@f^(0+128),w
  2173  1569  0084               	movwf	4
  2174  156A  160A  158A  200A  160A  118A  	fcall	stringdir
  2175  156F  3A2E               	xorlw	46
  2176  1570  1D03               	skipz
  2177  1571  2D73               	goto	u6951
  2178  1572  2D74               	goto	u6950
  2179  1573                     u6951:
  2180  1573  2DB9               	goto	l4146
  2181  1574                     u6950:
  2182  1574                     l4132:
  2183                           
  2184                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2185  1574  1738               	bsf	(sprintf@flag^(0+128)+1),6
  2186  1575                     l4134:
  2187                           
  2188                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2189  1575  3001               	movlw	1
  2190  1576  00AD               	movwf	??_sprintf^(0+128)
  2191  1577  082D               	movf	??_sprintf^(0+128),w
  2192  1578  07A8               	addwf	sprintf@f^(0+128),f
  2193  1579                     l4136:
  2194                           
  2195                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2196  1579  01CA               	clrf	sprintf@prec^(0+128)
  2197  157A  01CB               	clrf	(sprintf@prec+1)^(0+128)
  2198                           
  2199                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2200  157B  2DA8               	goto	l4144
  2201  157C                     l4138:
  2202                           
  2203                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2204  157C  300A               	movlw	10
  2205  157D  00F3               	movwf	___wmul@multiplier
  2206  157E  3000               	movlw	0
  2207  157F  00F4               	movwf	___wmul@multiplier+1
  2208  1580  1683               	bsf	3,5	;RP0=1, select bank1
  2209  1581  1303               	bcf	3,6	;RP1=0, select bank1
  2210  1582  084B               	movf	(sprintf@prec+1)^(0+128),w
  2211  1583  00F6               	movwf	___wmul@multiplicand+1
  2212  1584  084A               	movf	sprintf@prec^(0+128),w
  2213  1585  00F5               	movwf	___wmul@multiplicand
  2214  1586  160A  158A  2195  160A  118A  	fcall	___wmul
  2215  158B  0874               	movf	?___wmul+1,w
  2216  158C  1683               	bsf	3,5	;RP0=1, select bank1
  2217  158D  1303               	bcf	3,6	;RP1=0, select bank1
  2218  158E  00CB               	movwf	(sprintf@prec+1)^(0+128)
  2219  158F  0873               	movf	?___wmul,w
  2220  1590  00CA               	movwf	sprintf@prec^(0+128)
  2221  1591                     l4140:
  2222                           
  2223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2224  1591  0828               	movf	sprintf@f^(0+128),w
  2225  1592  0084               	movwf	4
  2226  1593  160A  158A  200A  160A  118A  	fcall	stringdir
  2227  1598  3ED0               	addlw	208
  2228  1599  00AD               	movwf	??_sprintf^(0+128)
  2229  159A  30FF               	movlw	255
  2230  159B  1803               	skipnc
  2231  159C  3000               	movlw	0
  2232  159D  00AE               	movwf	(??_sprintf^(0+128)+1)
  2233  159E  082D               	movf	??_sprintf^(0+128),w
  2234  159F  07CA               	addwf	sprintf@prec^(0+128),f
  2235  15A0  1803               	skipnc
  2236  15A1  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  2237  15A2  082E               	movf	(??_sprintf+1)^(0+128),w
  2238  15A3  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  2239  15A4                     l4142:
  2240  15A4  3001               	movlw	1
  2241  15A5  00AD               	movwf	??_sprintf^(0+128)
  2242  15A6  082D               	movf	??_sprintf^(0+128),w
  2243  15A7  07A8               	addwf	sprintf@f^(0+128),f
  2244  15A8                     l4144:
  2245                           
  2246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2247  15A8  0828               	movf	sprintf@f^(0+128),w
  2248  15A9  0084               	movwf	4
  2249  15AA  160A  158A  200A  160A  118A  	fcall	stringdir
  2250  15AF  120A  118A  27EC  160A  118A  	fcall	_isdigit
  2251  15B4  1803               	btfsc	3,0
  2252  15B5  2DB7               	goto	u6961
  2253  15B6  2DB8               	goto	u6960
  2254  15B7                     u6961:
  2255  15B7  2D7C               	goto	l4138
  2256  15B8                     u6960:
  2257  15B8  2DBF               	goto	l4152
  2258  15B9                     l4146:
  2259                           
  2260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2261  15B9  01CA               	clrf	sprintf@prec^(0+128)
  2262  15BA  01CB               	clrf	(sprintf@prec+1)^(0+128)
  2263  15BB                     l4148:
  2264                           
  2265                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2266  15BB  1638               	bsf	(sprintf@flag^(0+128)+1),4
  2267  15BC  2DBF               	goto	l4152
  2268  15BD                     l319:	
  2269                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2270                           
  2271                           
  2272                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2273  15BD  1538               	bsf	(sprintf@flag^(0+128)+1),2
  2274                           
  2275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2276  15BE  2DE1               	goto	l4154
  2277  15BF                     l4152:
  2278  15BF  3001               	movlw	1
  2279  15C0  1683               	bsf	3,5	;RP0=1, select bank1
  2280  15C1  1303               	bcf	3,6	;RP1=0, select bank1
  2281  15C2  07A8               	addwf	sprintf@f^(0+128),f
  2282  15C3  30FF               	movlw	-1
  2283  15C4  0728               	addwf	sprintf@f^(0+128),w
  2284  15C5  0084               	movwf	4
  2285  15C6  160A  158A  200A  160A  118A  	fcall	stringdir
  2286  15CB  00CC               	movwf	sprintf@c^(0+128)
  2287  15CC  00AD               	movwf	??_sprintf^(0+128)
  2288  15CD  01AE               	clrf	(??_sprintf^(0+128)+1)
  2289                           
  2290                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2291                           ; Switch size 1, requested type "simple"
  2292                           ; Number of cases is 1, Range of values is 0 to 0
  2293                           ; switch strategies available:
  2294                           ; Name         Instructions Cycles
  2295                           ; simple_byte            4     3 (average)
  2296                           ; direct_byte           11     8 (fixed)
  2297                           ; jumptable            260     6 (fixed)
  2298                           ;	Chosen strategy is simple_byte
  2299  15CE  082E               	movf	(??_sprintf+1)^(0+128),w
  2300  15CF  3A00               	xorlw	0	; case 0
  2301  15D0  1903               	skipnz
  2302  15D1  2DD3               	goto	l4492
  2303  15D2  2CFD               	goto	L1
  2304  15D3                     l4492:
  2305                           
  2306                           ; Switch size 1, requested type "simple"
  2307                           ; Number of cases is 4, Range of values is 0 to 105
  2308                           ; switch strategies available:
  2309                           ; Name         Instructions Cycles
  2310                           ; simple_byte           13     7 (average)
  2311                           ; jumptable            260     6 (fixed)
  2312                           ;	Chosen strategy is simple_byte
  2313  15D3  082D               	movf	??_sprintf^(0+128),w
  2314  15D4  3A00               	xorlw	0	; case 0
  2315  15D5  1903               	skipnz
  2316  15D6  2FFD               	goto	L3
  2317  15D7  3A64               	xorlw	100	; case 100
  2318  15D8  1903               	skipnz
  2319  15D9  2DE1               	goto	l4154
  2320  15DA  3A02               	xorlw	2	; case 102
  2321  15DB  1903               	skipnz
  2322  15DC  2DBD               	goto	l319
  2323  15DD  3A0F               	xorlw	15	; case 105
  2324  15DE  1903               	skipnz
  2325  15DF  2DE1               	goto	l4154
  2326  15E0  2CFD               	goto	L1
  2327  15E1                     l4154:
  2328                           
  2329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2330  15E1  3000               	movlw	0
  2331  15E2  0537               	andwf	sprintf@flag^(0+128),w
  2332  15E3  00AD               	movwf	??_sprintf^(0+128)
  2333  15E4  3007               	movlw	7
  2334  15E5  0538               	andwf	(sprintf@flag+1)^(0+128),w
  2335  15E6  00AE               	movwf	(??_sprintf+1)^(0+128)
  2336  15E7  082D               	movf	??_sprintf^(0+128),w
  2337  15E8  042E               	iorwf	(??_sprintf^(0+128)+1),w
  2338  15E9  1903               	btfsc	3,2
  2339  15EA  2DEC               	goto	u6971
  2340  15EB  2DEF               	goto	u6970
  2341  15EC                     u6971:
  2342  15EC  120A  118A  2CE8   	goto	l4312
  2343  15EF                     u6970:
  2344  15EF                     l4156:
  2345                           
  2346                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2347  15EF  1E38               	btfss	(sprintf@flag+1)^(0+128),4
  2348  15F0  2DF2               	goto	u6981
  2349  15F1  2DF3               	goto	u6980
  2350  15F2                     u6981:
  2351  15F2  2DF7               	goto	l4160
  2352  15F3                     u6980:
  2353  15F3                     l4158:
  2354                           
  2355                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2356  15F3  3006               	movlw	6
  2357  15F4  00CA               	movwf	sprintf@prec^(0+128)
  2358  15F5  3000               	movlw	0
  2359  15F6  00CB               	movwf	(sprintf@prec^(0+128)+1)
  2360  15F7                     l4160:
  2361                           
  2362                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2363  15F7  0836               	movf	sprintf@ap^(0+128),w
  2364  15F8  0084               	movwf	4
  2365  15F9  1383               	bcf	3,7	;select IRP bank0
  2366  15FA  0800               	movf	0,w
  2367  15FB  00C5               	movwf	sprintf@fval^(0+128)
  2368  15FC  0A84               	incf	4,f
  2369  15FD  0800               	movf	0,w
  2370  15FE  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2371  15FF  0A84               	incf	4,f
  2372  1600  0800               	movf	0,w
  2373  1601  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2374  1602  0A84               	incf	4,f
  2375  1603  0800               	movf	0,w
  2376  1604  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2377  1605                     l4162:
  2378  1605  3004               	movlw	4
  2379  1606  00AD               	movwf	??_sprintf^(0+128)
  2380  1607  082D               	movf	??_sprintf^(0+128),w
  2381  1608  07B6               	addwf	sprintf@ap^(0+128),f
  2382  1609                     l4164:
  2383                           
  2384                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2385  1609  0848               	movf	(sprintf@fval+3)^(0+128),w
  2386  160A  1283               	bcf	3,5	;RP0=0, select bank0
  2387  160B  1303               	bcf	3,6	;RP1=0, select bank0
  2388  160C  00A3               	movwf	___flge@ff1+3
  2389  160D  1683               	bsf	3,5	;RP0=1, select bank1
  2390  160E  1303               	bcf	3,6	;RP1=0, select bank1
  2391  160F  0847               	movf	(sprintf@fval+2)^(0+128),w
  2392  1610  1283               	bcf	3,5	;RP0=0, select bank0
  2393  1611  1303               	bcf	3,6	;RP1=0, select bank0
  2394  1612  00A2               	movwf	___flge@ff1+2
  2395  1613  1683               	bsf	3,5	;RP0=1, select bank1
  2396  1614  1303               	bcf	3,6	;RP1=0, select bank1
  2397  1615  0846               	movf	(sprintf@fval+1)^(0+128),w
  2398  1616  1283               	bcf	3,5	;RP0=0, select bank0
  2399  1617  1303               	bcf	3,6	;RP1=0, select bank0
  2400  1618  00A1               	movwf	___flge@ff1+1
  2401  1619  1683               	bsf	3,5	;RP0=1, select bank1
  2402  161A  1303               	bcf	3,6	;RP1=0, select bank1
  2403  161B  0845               	movf	sprintf@fval^(0+128),w
  2404  161C  1283               	bcf	3,5	;RP0=0, select bank0
  2405  161D  1303               	bcf	3,6	;RP1=0, select bank0
  2406  161E  00A0               	movwf	___flge@ff1
  2407  161F  3000               	movlw	0
  2408  1620  00A7               	movwf	___flge@ff2+3
  2409  1621  3000               	movlw	0
  2410  1622  00A6               	movwf	___flge@ff2+2
  2411  1623  3000               	movlw	0
  2412  1624  00A5               	movwf	___flge@ff2+1
  2413  1625  3000               	movlw	0
  2414  1626  00A4               	movwf	___flge@ff2
  2415  1627  160A  158A  252E  160A  118A  	fcall	___flge
  2416  162C  1803               	btfsc	3,0
  2417  162D  2E2F               	goto	u6991
  2418  162E  2E30               	goto	u6990
  2419  162F                     u6991:
  2420  162F  2E4D               	goto	l4170
  2421  1630                     u6990:
  2422  1630                     l4166:
  2423                           
  2424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2425  1630  1683               	bsf	3,5	;RP0=1, select bank1
  2426  1631  1303               	bcf	3,6	;RP1=0, select bank1
  2427  1632  0848               	movf	(sprintf@fval+3)^(0+128),w
  2428  1633  00F6               	movwf	___flneg@f1+3
  2429  1634  0847               	movf	(sprintf@fval+2)^(0+128),w
  2430  1635  00F5               	movwf	___flneg@f1+2
  2431  1636  0846               	movf	(sprintf@fval+1)^(0+128),w
  2432  1637  00F4               	movwf	___flneg@f1+1
  2433  1638  0845               	movf	sprintf@fval^(0+128),w
  2434  1639  00F3               	movwf	___flneg@f1
  2435  163A  160A  158A  2136  160A  118A  	fcall	___flneg
  2436  163F  0876               	movf	?___flneg+3,w
  2437  1640  1683               	bsf	3,5	;RP0=1, select bank1
  2438  1641  1303               	bcf	3,6	;RP1=0, select bank1
  2439  1642  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2440  1643  0875               	movf	?___flneg+2,w
  2441  1644  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2442  1645  0874               	movf	?___flneg+1,w
  2443  1646  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2444  1647  0873               	movf	?___flneg,w
  2445  1648  00C5               	movwf	sprintf@fval^(0+128)
  2446  1649                     l4168:
  2447                           
  2448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2449  1649  3003               	movlw	3
  2450  164A  04B7               	iorwf	sprintf@flag^(0+128),f
  2451  164B  3000               	movlw	0
  2452  164C  04B8               	iorwf	(sprintf@flag+1)^(0+128),f
  2453  164D                     l4170:
  2454                           
  2455                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2456  164D  1683               	bsf	3,5	;RP0=1, select bank1
  2457  164E  1303               	bcf	3,6	;RP1=0, select bank1
  2458  164F  01C3               	clrf	sprintf@eexp^(0+128)
  2459  1650  01C4               	clrf	(sprintf@eexp+1)^(0+128)
  2460  1651                     l4172:
  2461                           
  2462                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2463  1651  0848               	movf	(sprintf@fval+3)^(0+128),w
  2464  1652  1283               	bcf	3,5	;RP0=0, select bank0
  2465  1653  1303               	bcf	3,6	;RP1=0, select bank0
  2466  1654  00A3               	movwf	___fleq@ff1+3
  2467  1655  1683               	bsf	3,5	;RP0=1, select bank1
  2468  1656  1303               	bcf	3,6	;RP1=0, select bank1
  2469  1657  0847               	movf	(sprintf@fval+2)^(0+128),w
  2470  1658  1283               	bcf	3,5	;RP0=0, select bank0
  2471  1659  1303               	bcf	3,6	;RP1=0, select bank0
  2472  165A  00A2               	movwf	___fleq@ff1+2
  2473  165B  1683               	bsf	3,5	;RP0=1, select bank1
  2474  165C  1303               	bcf	3,6	;RP1=0, select bank1
  2475  165D  0846               	movf	(sprintf@fval+1)^(0+128),w
  2476  165E  1283               	bcf	3,5	;RP0=0, select bank0
  2477  165F  1303               	bcf	3,6	;RP1=0, select bank0
  2478  1660  00A1               	movwf	___fleq@ff1+1
  2479  1661  1683               	bsf	3,5	;RP0=1, select bank1
  2480  1662  1303               	bcf	3,6	;RP1=0, select bank1
  2481  1663  0845               	movf	sprintf@fval^(0+128),w
  2482  1664  1283               	bcf	3,5	;RP0=0, select bank0
  2483  1665  1303               	bcf	3,6	;RP1=0, select bank0
  2484  1666  00A0               	movwf	___fleq@ff1
  2485  1667  3000               	movlw	0
  2486  1668  00A7               	movwf	___fleq@ff2+3
  2487  1669  3000               	movlw	0
  2488  166A  00A6               	movwf	___fleq@ff2+2
  2489  166B  3000               	movlw	0
  2490  166C  00A5               	movwf	___fleq@ff2+1
  2491  166D  3000               	movlw	0
  2492  166E  00A4               	movwf	___fleq@ff2
  2493  166F  160A  158A  23D0  160A  118A  	fcall	___fleq
  2494  1674  1803               	btfsc	3,0
  2495  1675  2E77               	goto	u7001
  2496  1676  2E78               	goto	u7000
  2497  1677                     u7001:
  2498  1677  2F94               	goto	l4198
  2499  1678                     u7000:
  2500  1678                     l4174:
  2501                           
  2502                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2503  1678  1003               	clrc
  2504  1679  1683               	bsf	3,5	;RP0=1, select bank1
  2505  167A  1303               	bcf	3,6	;RP1=0, select bank1
  2506  167B  0D47               	rlf	(sprintf@fval+2)^(0+128),w
  2507  167C  0D48               	rlf	(sprintf@fval+3)^(0+128),w
  2508  167D  3E82               	addlw	130
  2509  167E  00C3               	movwf	sprintf@eexp^(0+128)
  2510  167F  30FF               	movlw	255
  2511  1680  1803               	skipnc
  2512  1681  3000               	movlw	0
  2513  1682  00C4               	movwf	(sprintf@eexp^(0+128)+1)
  2514  1683                     l4176:
  2515                           
  2516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2517  1683  30FF               	movlw	255
  2518  1684  07C3               	addwf	sprintf@eexp^(0+128),f
  2519  1685  1803               	skipnc
  2520  1686  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2521  1687  30FF               	movlw	255
  2522  1688  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2523  1689                     l4178:
  2524                           
  2525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2526  1689  3003               	movlw	3
  2527  168A  00F3               	movwf	___wmul@multiplier
  2528  168B  3000               	movlw	0
  2529  168C  00F4               	movwf	___wmul@multiplier+1
  2530  168D  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2531  168E  00F6               	movwf	___wmul@multiplicand+1
  2532  168F  0843               	movf	sprintf@eexp^(0+128),w
  2533  1690  00F5               	movwf	___wmul@multiplicand
  2534  1691  160A  158A  2195  160A  118A  	fcall	___wmul
  2535  1696  0874               	movf	?___wmul+1,w
  2536  1697  1683               	bsf	3,5	;RP0=1, select bank1
  2537  1698  1303               	bcf	3,6	;RP1=0, select bank1
  2538  1699  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2539  169A  0873               	movf	?___wmul,w
  2540  169B  00C3               	movwf	sprintf@eexp^(0+128)
  2541  169C                     l4180:
  2542                           
  2543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2544  169C  300A               	movlw	10
  2545  169D  1283               	bcf	3,5	;RP0=0, select bank0
  2546  169E  1303               	bcf	3,6	;RP1=0, select bank0
  2547  169F  00A0               	movwf	___awdiv@divisor
  2548  16A0  3000               	movlw	0
  2549  16A1  00A1               	movwf	___awdiv@divisor+1
  2550  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  2551  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  2552  16A4  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2553  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  2554  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  2555  16A7  00A3               	movwf	___awdiv@dividend+1
  2556  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  2557  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  2558  16AA  0843               	movf	sprintf@eexp^(0+128),w
  2559  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  2560  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  2561  16AD  00A2               	movwf	___awdiv@dividend
  2562  16AE  120A  158A  2016  160A  118A  	fcall	___awdiv
  2563  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  2564  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  2565  16B5  0821               	movf	?___awdiv+1,w
  2566  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  2567  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  2568  16B8  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2569  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2570  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2571  16BB  0820               	movf	?___awdiv,w
  2572  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  2573  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  2574  16BE  00C3               	movwf	sprintf@eexp^(0+128)
  2575  16BF                     l4182:
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2578  16BF  1FC4               	btfss	(sprintf@eexp+1)^(0+128),7
  2579  16C0  2EC2               	goto	u7011
  2580  16C1  2EC3               	goto	u7010
  2581  16C2                     u7011:
  2582  16C2  2EC9               	goto	l4186
  2583  16C3                     u7010:
  2584  16C3                     l4184:
  2585                           
  2586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2587  16C3  30FF               	movlw	255
  2588  16C4  07C3               	addwf	sprintf@eexp^(0+128),f
  2589  16C5  1803               	skipnc
  2590  16C6  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2591  16C7  30FF               	movlw	255
  2592  16C8  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2593  16C9                     l4186:
  2594                           
  2595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2596  16C9  0343               	decf	sprintf@eexp^(0+128),w
  2597  16CA  3AFF               	xorlw	255
  2598  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  2599  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  2600  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  2601  16D2  0847               	movf	?_scale+3,w
  2602  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  2603  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  2604  16D5  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2605  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  2606  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  2607  16D8  0846               	movf	?_scale+2,w
  2608  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  2609  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  2610  16DB  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2611  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  2612  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  2613  16DE  0845               	movf	?_scale+1,w
  2614  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  2615  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  2616  16E1  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2617  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  2618  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  2619  16E4  0844               	movf	?_scale,w
  2620  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  2621  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  2622  16E7  00BB               	movwf	sprintf@tmpval^(0+128)
  2623  16E8                     l4188:
  2624                           
  2625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2626  16E8  0848               	movf	(sprintf@fval+3)^(0+128),w
  2627  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  2628  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  2629  16EB  00AD               	movwf	___flmul@b+3
  2630  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  2631  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  2632  16EE  0847               	movf	(sprintf@fval+2)^(0+128),w
  2633  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2634  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2635  16F1  00AC               	movwf	___flmul@b+2
  2636  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  2637  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  2638  16F4  0846               	movf	(sprintf@fval+1)^(0+128),w
  2639  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  2640  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  2641  16F7  00AB               	movwf	___flmul@b+1
  2642  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  2643  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  2644  16FA  0845               	movf	sprintf@fval^(0+128),w
  2645  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  2646  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  2647  16FD  00AA               	movwf	___flmul@b
  2648  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  2649  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  2650  1700  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2651  1701  1283               	bcf	3,5	;RP0=0, select bank0
  2652  1702  1303               	bcf	3,6	;RP1=0, select bank0
  2653  1703  00B1               	movwf	___flmul@a+3
  2654  1704  1683               	bsf	3,5	;RP0=1, select bank1
  2655  1705  1303               	bcf	3,6	;RP1=0, select bank1
  2656  1706  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2657  1707  1283               	bcf	3,5	;RP0=0, select bank0
  2658  1708  1303               	bcf	3,6	;RP1=0, select bank0
  2659  1709  00B0               	movwf	___flmul@a+2
  2660  170A  1683               	bsf	3,5	;RP0=1, select bank1
  2661  170B  1303               	bcf	3,6	;RP1=0, select bank1
  2662  170C  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2663  170D  1283               	bcf	3,5	;RP0=0, select bank0
  2664  170E  1303               	bcf	3,6	;RP1=0, select bank0
  2665  170F  00AF               	movwf	___flmul@a+1
  2666  1710  1683               	bsf	3,5	;RP0=1, select bank1
  2667  1711  1303               	bcf	3,6	;RP1=0, select bank1
  2668  1712  083B               	movf	sprintf@tmpval^(0+128),w
  2669  1713  1283               	bcf	3,5	;RP0=0, select bank0
  2670  1714  1303               	bcf	3,6	;RP1=0, select bank0
  2671  1715  00AE               	movwf	___flmul@a
  2672  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  2673  171B  1283               	bcf	3,5	;RP0=0, select bank0
  2674  171C  1303               	bcf	3,6	;RP1=0, select bank0
  2675  171D  082D               	movf	?___flmul+3,w
  2676  171E  1683               	bsf	3,5	;RP0=1, select bank1
  2677  171F  1303               	bcf	3,6	;RP1=0, select bank1
  2678  1720  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
  2679  1721  1283               	bcf	3,5	;RP0=0, select bank0
  2680  1722  1303               	bcf	3,6	;RP1=0, select bank0
  2681  1723  082C               	movf	?___flmul+2,w
  2682  1724  1683               	bsf	3,5	;RP0=1, select bank1
  2683  1725  1303               	bcf	3,6	;RP1=0, select bank1
  2684  1726  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
  2685  1727  1283               	bcf	3,5	;RP0=0, select bank0
  2686  1728  1303               	bcf	3,6	;RP1=0, select bank0
  2687  1729  082B               	movf	?___flmul+1,w
  2688  172A  1683               	bsf	3,5	;RP0=1, select bank1
  2689  172B  1303               	bcf	3,6	;RP1=0, select bank1
  2690  172C  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
  2691  172D  1283               	bcf	3,5	;RP0=0, select bank0
  2692  172E  1303               	bcf	3,6	;RP1=0, select bank0
  2693  172F  082A               	movf	?___flmul,w
  2694  1730  1683               	bsf	3,5	;RP0=1, select bank1
  2695  1731  1303               	bcf	3,6	;RP1=0, select bank1
  2696  1732  00BB               	movwf	sprintf@tmpval^(0+128)
  2697  1733                     l4190:
  2698                           
  2699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2700  1733  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2701  1734  1283               	bcf	3,5	;RP0=0, select bank0
  2702  1735  1303               	bcf	3,6	;RP1=0, select bank0
  2703  1736  00A3               	movwf	___flge@ff1+3
  2704  1737  1683               	bsf	3,5	;RP0=1, select bank1
  2705  1738  1303               	bcf	3,6	;RP1=0, select bank1
  2706  1739  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2707  173A  1283               	bcf	3,5	;RP0=0, select bank0
  2708  173B  1303               	bcf	3,6	;RP1=0, select bank0
  2709  173C  00A2               	movwf	___flge@ff1+2
  2710  173D  1683               	bsf	3,5	;RP0=1, select bank1
  2711  173E  1303               	bcf	3,6	;RP1=0, select bank1
  2712  173F  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2713  1740  1283               	bcf	3,5	;RP0=0, select bank0
  2714  1741  1303               	bcf	3,6	;RP1=0, select bank0
  2715  1742  00A1               	movwf	___flge@ff1+1
  2716  1743  1683               	bsf	3,5	;RP0=1, select bank1
  2717  1744  1303               	bcf	3,6	;RP1=0, select bank1
  2718  1745  083B               	movf	sprintf@tmpval^(0+128),w
  2719  1746  1283               	bcf	3,5	;RP0=0, select bank0
  2720  1747  1303               	bcf	3,6	;RP1=0, select bank0
  2721  1748  00A0               	movwf	___flge@ff1
  2722  1749  303F               	movlw	63
  2723  174A  00A7               	movwf	___flge@ff2+3
  2724  174B  3080               	movlw	128
  2725  174C  00A6               	movwf	___flge@ff2+2
  2726  174D  3000               	movlw	0
  2727  174E  00A5               	movwf	___flge@ff2+1
  2728  174F  3000               	movlw	0
  2729  1750  00A4               	movwf	___flge@ff2
  2730  1751  160A  158A  252E  160A  118A  	fcall	___flge
  2731  1756  1803               	btfsc	3,0
  2732  1757  2F59               	goto	u7021
  2733  1758  2F5A               	goto	u7020
  2734  1759                     u7021:
  2735  1759  2F63               	goto	l4194
  2736  175A                     u7020:
  2737  175A                     l4192:
  2738                           
  2739                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2740  175A  30FF               	movlw	255
  2741  175B  1683               	bsf	3,5	;RP0=1, select bank1
  2742  175C  1303               	bcf	3,6	;RP1=0, select bank1
  2743  175D  07C3               	addwf	sprintf@eexp^(0+128),f
  2744  175E  1803               	skipnc
  2745  175F  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2746  1760  30FF               	movlw	255
  2747  1761  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2748  1762  2F94               	goto	l4198
  2749  1763                     l4194:
  2750  1763  1683               	bsf	3,5	;RP0=1, select bank1
  2751  1764  1303               	bcf	3,6	;RP1=0, select bank1
  2752  1765  083E               	movf	(sprintf@tmpval+3)^(0+128),w
  2753  1766  1283               	bcf	3,5	;RP0=0, select bank0
  2754  1767  1303               	bcf	3,6	;RP1=0, select bank0
  2755  1768  00A3               	movwf	___flge@ff1+3
  2756  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2757  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2758  176B  083D               	movf	(sprintf@tmpval+2)^(0+128),w
  2759  176C  1283               	bcf	3,5	;RP0=0, select bank0
  2760  176D  1303               	bcf	3,6	;RP1=0, select bank0
  2761  176E  00A2               	movwf	___flge@ff1+2
  2762  176F  1683               	bsf	3,5	;RP0=1, select bank1
  2763  1770  1303               	bcf	3,6	;RP1=0, select bank1
  2764  1771  083C               	movf	(sprintf@tmpval+1)^(0+128),w
  2765  1772  1283               	bcf	3,5	;RP0=0, select bank0
  2766  1773  1303               	bcf	3,6	;RP1=0, select bank0
  2767  1774  00A1               	movwf	___flge@ff1+1
  2768  1775  1683               	bsf	3,5	;RP0=1, select bank1
  2769  1776  1303               	bcf	3,6	;RP1=0, select bank1
  2770  1777  083B               	movf	sprintf@tmpval^(0+128),w
  2771  1778  1283               	bcf	3,5	;RP0=0, select bank0
  2772  1779  1303               	bcf	3,6	;RP1=0, select bank0
  2773  177A  00A0               	movwf	___flge@ff1
  2774  177B  3041               	movlw	65
  2775  177C  00A7               	movwf	___flge@ff2+3
  2776  177D  3020               	movlw	32
  2777  177E  00A6               	movwf	___flge@ff2+2
  2778  177F  3000               	movlw	0
  2779  1780  00A5               	movwf	___flge@ff2+1
  2780  1781  3000               	movlw	0
  2781  1782  00A4               	movwf	___flge@ff2
  2782  1783  160A  158A  252E  160A  118A  	fcall	___flge
  2783  1788  1C03               	btfss	3,0
  2784  1789  2F8B               	goto	u7031
  2785  178A  2F8C               	goto	u7030
  2786  178B                     u7031:
  2787  178B  2F94               	goto	l4198
  2788  178C                     u7030:
  2789  178C                     l4196:
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2792  178C  3001               	movlw	1
  2793  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2794  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2795  178F  07C3               	addwf	sprintf@eexp^(0+128),f
  2796  1790  1803               	skipnc
  2797  1791  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2798  1792  3000               	movlw	0
  2799  1793  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2800  1794                     l4198:
  2801                           
  2802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2803  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2804  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2805  1796  084B               	movf	(sprintf@prec+1)^(0+128),w
  2806  1797  3A80               	xorlw	128
  2807  1798  00FF               	movwf	btemp+1
  2808  1799  3080               	movlw	128
  2809  179A  027F               	subwf	btemp+1,w
  2810  179B  1D03               	skipz
  2811  179C  2F9F               	goto	u7045
  2812  179D  300D               	movlw	13
  2813  179E  024A               	subwf	sprintf@prec^(0+128),w
  2814  179F                     u7045:
  2815  179F  1803               	skipnc
  2816  17A0  2FA2               	goto	u7041
  2817  17A1  2FA3               	goto	u7040
  2818  17A2                     u7041:
  2819  17A2  2FEA               	goto	l4202
  2820  17A3                     u7040:
  2821  17A3                     l4200:
  2822                           
  2823                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2824  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2825  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2826  17A5  084A               	movf	sprintf@prec^(0+128),w
  2827  17A6  160A  118A  2061  160A  118A  	fcall	_fround
  2828  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2829  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2830  17AD  0847               	movf	?_fround+3,w
  2831  17AE  00DB               	movwf	___fladd@b+3
  2832  17AF  0846               	movf	?_fround+2,w
  2833  17B0  00DA               	movwf	___fladd@b+2
  2834  17B1  0845               	movf	?_fround+1,w
  2835  17B2  00D9               	movwf	___fladd@b+1
  2836  17B3  0844               	movf	?_fround,w
  2837  17B4  00D8               	movwf	___fladd@b
  2838  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2839  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2840  17B7  0848               	movf	(sprintf@fval+3)^(0+128),w
  2841  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2842  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2843  17BA  00DF               	movwf	___fladd@a+3
  2844  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2845  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2846  17BD  0847               	movf	(sprintf@fval+2)^(0+128),w
  2847  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2848  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2849  17C0  00DE               	movwf	___fladd@a+2
  2850  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2851  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2852  17C3  0846               	movf	(sprintf@fval+1)^(0+128),w
  2853  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2854  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2855  17C6  00DD               	movwf	___fladd@a+1
  2856  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2857  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2858  17C9  0845               	movf	sprintf@fval^(0+128),w
  2859  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2860  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2861  17CC  00DC               	movwf	___fladd@a
  2862  17CD  160A  118A  226E  160A  118A  	fcall	___fladd
  2863  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2864  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2865  17D4  085B               	movf	?___fladd+3,w
  2866  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2867  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2868  17D7  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2869  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2870  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2871  17DA  085A               	movf	?___fladd+2,w
  2872  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2873  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2874  17DD  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2875  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2876  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2877  17E0  0859               	movf	?___fladd+1,w
  2878  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2879  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2880  17E3  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2881  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2882  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2883  17E6  0858               	movf	?___fladd,w
  2884  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2885  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2886  17E9  00C5               	movwf	sprintf@fval^(0+128)
  2887  17EA                     l4202:
  2888                           
  2889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2890  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2891  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2892  17EC  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2893  17ED  3A80               	xorlw	128
  2894  17EE  00FF               	movwf	btemp+1
  2895  17EF  3080               	movlw	128
  2896  17F0  027F               	subwf	btemp+1,w
  2897  17F1  1D03               	skipz
  2898  17F2  2FF5               	goto	u7055
  2899  17F3  300A               	movlw	10
  2900  17F4  0243               	subwf	sprintf@eexp^(0+128),w
  2901  17F5                     u7055:
  2902  17F5  1803               	skipnc
  2903  17F6  2FFA               	goto	u7051
  2904  17F7  120A  118A  282E   	goto	u7050
  2905  17FA                     u7051:
  2906  17FA  120A  118A  288D   	goto	l4210
  2907  17FD                     L3:
  2908  17FD                     L2:
  2909  17FD  120A  118A  2EAB   	ljmp	l4392
  2910                           
  2911                           	psect	text3
  2912  0C9D                     __ptext3:	
  2913 ;; *************** function _scale *****************
  2914 ;; Defined at:
  2915 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2916 ;; Parameters:    Size  Location     Type
  2917 ;;  scl             1    wreg     char 
  2918 ;; Auto vars:     Size  Location     Type
  2919 ;;  scl             1   54[BANK0 ] char 
  2920 ;; Return value:  Size  Location     Type
  2921 ;;                  4   36[BANK0 ] char 
  2922 ;; Registers used:
  2923 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2924 ;; Tracked objects:
  2925 ;;		On entry : 0/0
  2926 ;;		On exit  : 0/0
  2927 ;;		Unchanged: 0/0
  2928 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2929 ;;      Params:         0       4       0       0       0
  2930 ;;      Locals:         0       5       0       0       0
  2931 ;;      Temps:          0      10       0       0       0
  2932 ;;      Totals:         0      19       0       0       0
  2933 ;;Total ram usage:       19 bytes
  2934 ;; Hardware stack levels used:    1
  2935 ;; Hardware stack levels required when called:    3
  2936 ;; This function calls:
  2937 ;;		___awdiv
  2938 ;;		___awmod
  2939 ;;		___flmul
  2940 ;; This function is called by:
  2941 ;;		_sprintf
  2942 ;; This function uses a non-reentrant model
  2943 ;;
  2944                           
  2945                           
  2946                           ;psect for function _scale
  2947  0C9D                     _scale:
  2948                           
  2949                           ;incstack = 0
  2950                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2951                           ;scale@scl stored from wreg
  2952  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2953  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2954  0C9F  00D6               	movwf	scale@scl
  2955  0CA0                     l3812:
  2956                           
  2957                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2958  0CA0  1FD6               	btfss	scale@scl,7
  2959  0CA1  2CA3               	goto	u6071
  2960  0CA2  2CA4               	goto	u6070
  2961  0CA3                     u6071:
  2962  0CA3  2E53               	goto	l3834
  2963  0CA4                     u6070:
  2964  0CA4                     l3814:
  2965                           
  2966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2967  0CA4  09D6               	comf	scale@scl,f
  2968  0CA5  0AD6               	incf	scale@scl,f
  2969  0CA6                     l3816:
  2970                           
  2971                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2972  0CA6  0856               	movf	scale@scl,w
  2973  0CA7  3A80               	xorlw	128
  2974  0CA8  3E12               	addlw	-238
  2975  0CA9  1C03               	skipc
  2976  0CAA  2CAC               	goto	u6081
  2977  0CAB  2CAD               	goto	u6080
  2978  0CAC                     u6081:
  2979  0CAC  2D97               	goto	l3824
  2980  0CAD                     u6080:
  2981  0CAD                     l3818:
  2982                           
  2983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2984  0CAD  300A               	movlw	10
  2985  0CAE  00A0               	movwf	___awdiv@divisor
  2986  0CAF  3000               	movlw	0
  2987  0CB0  00A1               	movwf	___awdiv@divisor+1
  2988  0CB1  0856               	movf	scale@scl,w
  2989  0CB2  00F5               	movwf	___awmod@dividend
  2990  0CB3  01F6               	clrf	___awmod@dividend+1
  2991  0CB4  1BF5               	btfsc	___awmod@dividend,7
  2992  0CB5  03F6               	decf	___awmod@dividend+1,f
  2993  0CB6  3064               	movlw	100
  2994  0CB7  00F3               	movwf	___awmod@divisor
  2995  0CB8  3000               	movlw	0
  2996  0CB9  00F4               	movwf	___awmod@divisor+1
  2997  0CBA  160A  118A  2008  120A  158A  	fcall	___awmod
  2998  0CBF  0874               	movf	?___awmod+1,w
  2999  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  3000  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  3001  0CC2  00A3               	movwf	___awdiv@dividend+1
  3002  0CC3  0873               	movf	?___awmod,w
  3003  0CC4  00A2               	movwf	___awdiv@dividend
  3004  0CC5  120A  158A  2016  120A  158A  	fcall	___awdiv
  3005  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  3006  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  3007  0CCC  0820               	movf	?___awdiv,w
  3008  0CCD  00C8               	movwf	??_scale
  3009  0CCE  3001               	movlw	1
  3010  0CCF                     u6095:
  3011  0CCF  1003               	clrc
  3012  0CD0  0DC8               	rlf	??_scale,f
  3013  0CD1  3EFF               	addlw	-1
  3014  0CD2  1D03               	skipz
  3015  0CD3  2CCF               	goto	u6095
  3016  0CD4  1003               	clrc
  3017  0CD5  0D48               	rlf	??_scale,w
  3018  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3019  0CD7  0084               	movwf	4
  3020  0CD8  160A  158A  200A  120A  158A  	fcall	stringdir
  3021  0CDD  00C9               	movwf	??_scale+1
  3022  0CDE  160A  158A  200A  120A  158A  	fcall	stringdir
  3023  0CE3  00CA               	movwf	??_scale+2
  3024  0CE4  160A  158A  200A  120A  158A  	fcall	stringdir
  3025  0CE9  00CB               	movwf	??_scale+3
  3026  0CEA  160A  158A  200A  120A  158A  	fcall	stringdir
  3027  0CEF  00CC               	movwf	??_scale+4
  3028  0CF0  084C               	movf	??_scale+4,w
  3029  0CF1  00AD               	movwf	___flmul@b+3
  3030  0CF2  084B               	movf	??_scale+3,w
  3031  0CF3  00AC               	movwf	___flmul@b+2
  3032  0CF4  084A               	movf	??_scale+2,w
  3033  0CF5  00AB               	movwf	___flmul@b+1
  3034  0CF6  0849               	movf	??_scale+1,w
  3035  0CF7  00AA               	movwf	___flmul@b
  3036  0CF8  3064               	movlw	100
  3037  0CF9  00A0               	movwf	___awdiv@divisor
  3038  0CFA  3000               	movlw	0
  3039  0CFB  00A1               	movwf	___awdiv@divisor+1
  3040  0CFC  0856               	movf	scale@scl,w
  3041  0CFD  00A2               	movwf	___awdiv@dividend
  3042  0CFE  01A3               	clrf	___awdiv@dividend+1
  3043  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  3044  0D00  03A3               	decf	___awdiv@dividend+1,f
  3045  0D01  120A  158A  2016  120A  158A  	fcall	___awdiv
  3046  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  3047  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  3048  0D08  0820               	movf	?___awdiv,w
  3049  0D09  00CD               	movwf	??_scale+5
  3050  0D0A  3001               	movlw	1
  3051  0D0B                     u6105:
  3052  0D0B  1003               	clrc
  3053  0D0C  0DCD               	rlf	??_scale+5,f
  3054  0D0D  3EFF               	addlw	-1
  3055  0D0E  1D03               	skipz
  3056  0D0F  2D0B               	goto	u6105
  3057  0D10  1003               	clrc
  3058  0D11  0D4D               	rlf	??_scale+5,w
  3059  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3060  0D13  0084               	movwf	4
  3061  0D14  160A  158A  200A  120A  158A  	fcall	stringdir
  3062  0D19  00CE               	movwf	??_scale+6
  3063  0D1A  160A  158A  200A  120A  158A  	fcall	stringdir
  3064  0D1F  00CF               	movwf	??_scale+7
  3065  0D20  160A  158A  200A  120A  158A  	fcall	stringdir
  3066  0D25  00D0               	movwf	??_scale+8
  3067  0D26  160A  158A  200A  120A  158A  	fcall	stringdir
  3068  0D2B  00D1               	movwf	??_scale+9
  3069  0D2C  0851               	movf	??_scale+9,w
  3070  0D2D  00B1               	movwf	___flmul@a+3
  3071  0D2E  0850               	movf	??_scale+8,w
  3072  0D2F  00B0               	movwf	___flmul@a+2
  3073  0D30  084F               	movf	??_scale+7,w
  3074  0D31  00AF               	movwf	___flmul@a+1
  3075  0D32  084E               	movf	??_scale+6,w
  3076  0D33  00AE               	movwf	___flmul@a
  3077  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  3078  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  3079  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  3080  0D3B  082D               	movf	?___flmul+3,w
  3081  0D3C  00D5               	movwf	_scale$1191+3
  3082  0D3D  082C               	movf	?___flmul+2,w
  3083  0D3E  00D4               	movwf	_scale$1191+2
  3084  0D3F  082B               	movf	?___flmul+1,w
  3085  0D40  00D3               	movwf	_scale$1191+1
  3086  0D41  082A               	movf	?___flmul,w
  3087  0D42  00D2               	movwf	_scale$1191
  3088                           
  3089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3090  0D43  300A               	movlw	10
  3091  0D44  00F3               	movwf	___awmod@divisor
  3092  0D45  3000               	movlw	0
  3093  0D46  00F4               	movwf	___awmod@divisor+1
  3094  0D47  0856               	movf	scale@scl,w
  3095  0D48  00F5               	movwf	___awmod@dividend
  3096  0D49  01F6               	clrf	___awmod@dividend+1
  3097  0D4A  1BF5               	btfsc	___awmod@dividend,7
  3098  0D4B  03F6               	decf	___awmod@dividend+1,f
  3099  0D4C  160A  118A  2008  120A  158A  	fcall	___awmod
  3100  0D51  0873               	movf	?___awmod,w
  3101  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  3102  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  3103  0D54  00C8               	movwf	??_scale
  3104  0D55  3001               	movlw	1
  3105  0D56                     u6115:
  3106  0D56  1003               	clrc
  3107  0D57  0DC8               	rlf	??_scale,f
  3108  0D58  3EFF               	addlw	-1
  3109  0D59  1D03               	skipz
  3110  0D5A  2D56               	goto	u6115
  3111  0D5B  1003               	clrc
  3112  0D5C  0D48               	rlf	??_scale,w
  3113  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3114  0D5E  0084               	movwf	4
  3115  0D5F  160A  158A  200A  120A  158A  	fcall	stringdir
  3116  0D64  00C9               	movwf	??_scale+1
  3117  0D65  160A  158A  200A  120A  158A  	fcall	stringdir
  3118  0D6A  00CA               	movwf	??_scale+2
  3119  0D6B  160A  158A  200A  120A  158A  	fcall	stringdir
  3120  0D70  00CB               	movwf	??_scale+3
  3121  0D71  160A  158A  200A  120A  158A  	fcall	stringdir
  3122  0D76  00CC               	movwf	??_scale+4
  3123  0D77  084C               	movf	??_scale+4,w
  3124  0D78  00AD               	movwf	___flmul@b+3
  3125  0D79  084B               	movf	??_scale+3,w
  3126  0D7A  00AC               	movwf	___flmul@b+2
  3127  0D7B  084A               	movf	??_scale+2,w
  3128  0D7C  00AB               	movwf	___flmul@b+1
  3129  0D7D  0849               	movf	??_scale+1,w
  3130  0D7E  00AA               	movwf	___flmul@b
  3131  0D7F  0855               	movf	_scale$1191+3,w
  3132  0D80  00B1               	movwf	___flmul@a+3
  3133  0D81  0854               	movf	_scale$1191+2,w
  3134  0D82  00B0               	movwf	___flmul@a+2
  3135  0D83  0853               	movf	_scale$1191+1,w
  3136  0D84  00AF               	movwf	___flmul@a+1
  3137  0D85  0852               	movf	_scale$1191,w
  3138  0D86  00AE               	movwf	___flmul@a
  3139  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  3140  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  3141  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  3142  0D8E  082D               	movf	?___flmul+3,w
  3143  0D8F  00C7               	movwf	?_scale+3
  3144  0D90  082C               	movf	?___flmul+2,w
  3145  0D91  00C6               	movwf	?_scale+2
  3146  0D92  082B               	movf	?___flmul+1,w
  3147  0D93  00C5               	movwf	?_scale+1
  3148  0D94  082A               	movf	?___flmul,w
  3149  0D95  00C4               	movwf	?_scale
  3150  0D96  2FFF               	goto	l297
  3151  0D97                     l3824:
  3152  0D97  0856               	movf	scale@scl,w
  3153  0D98  3A80               	xorlw	128
  3154  0D99  3E75               	addlw	-139
  3155  0D9A  1C03               	skipc
  3156  0D9B  2D9D               	goto	u6121
  3157  0D9C  2D9E               	goto	u6120
  3158  0D9D                     u6121:
  3159  0D9D  2E26               	goto	l3830
  3160  0D9E                     u6120:
  3161  0D9E                     l3826:
  3162                           
  3163                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3164  0D9E  300A               	movlw	10
  3165  0D9F  00F3               	movwf	___awmod@divisor
  3166  0DA0  3000               	movlw	0
  3167  0DA1  00F4               	movwf	___awmod@divisor+1
  3168  0DA2  0856               	movf	scale@scl,w
  3169  0DA3  00F5               	movwf	___awmod@dividend
  3170  0DA4  01F6               	clrf	___awmod@dividend+1
  3171  0DA5  1BF5               	btfsc	___awmod@dividend,7
  3172  0DA6  03F6               	decf	___awmod@dividend+1,f
  3173  0DA7  160A  118A  2008  120A  158A  	fcall	___awmod
  3174  0DAC  0873               	movf	?___awmod,w
  3175  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  3176  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  3177  0DAF  00C8               	movwf	??_scale
  3178  0DB0  3001               	movlw	1
  3179  0DB1                     u6135:
  3180  0DB1  1003               	clrc
  3181  0DB2  0DC8               	rlf	??_scale,f
  3182  0DB3  3EFF               	addlw	-1
  3183  0DB4  1D03               	skipz
  3184  0DB5  2DB1               	goto	u6135
  3185  0DB6  1003               	clrc
  3186  0DB7  0D48               	rlf	??_scale,w
  3187  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3188  0DB9  0084               	movwf	4
  3189  0DBA  160A  158A  200A  120A  158A  	fcall	stringdir
  3190  0DBF  00C9               	movwf	??_scale+1
  3191  0DC0  160A  158A  200A  120A  158A  	fcall	stringdir
  3192  0DC5  00CA               	movwf	??_scale+2
  3193  0DC6  160A  158A  200A  120A  158A  	fcall	stringdir
  3194  0DCB  00CB               	movwf	??_scale+3
  3195  0DCC  160A  158A  200A  120A  158A  	fcall	stringdir
  3196  0DD1  00CC               	movwf	??_scale+4
  3197  0DD2  084C               	movf	??_scale+4,w
  3198  0DD3  00AD               	movwf	___flmul@b+3
  3199  0DD4  084B               	movf	??_scale+3,w
  3200  0DD5  00AC               	movwf	___flmul@b+2
  3201  0DD6  084A               	movf	??_scale+2,w
  3202  0DD7  00AB               	movwf	___flmul@b+1
  3203  0DD8  0849               	movf	??_scale+1,w
  3204  0DD9  00AA               	movwf	___flmul@b
  3205  0DDA  300A               	movlw	10
  3206  0DDB  00A0               	movwf	___awdiv@divisor
  3207  0DDC  3000               	movlw	0
  3208  0DDD  00A1               	movwf	___awdiv@divisor+1
  3209  0DDE  0856               	movf	scale@scl,w
  3210  0DDF  00A2               	movwf	___awdiv@dividend
  3211  0DE0  01A3               	clrf	___awdiv@dividend+1
  3212  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  3213  0DE2  03A3               	decf	___awdiv@dividend+1,f
  3214  0DE3  120A  158A  2016  120A  158A  	fcall	___awdiv
  3215  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  3216  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  3217  0DEA  0820               	movf	?___awdiv,w
  3218  0DEB  00CD               	movwf	??_scale+5
  3219  0DEC  3001               	movlw	1
  3220  0DED                     u6145:
  3221  0DED  1003               	clrc
  3222  0DEE  0DCD               	rlf	??_scale+5,f
  3223  0DEF  3EFF               	addlw	-1
  3224  0DF0  1D03               	skipz
  3225  0DF1  2DED               	goto	u6145
  3226  0DF2  1003               	clrc
  3227  0DF3  0D4D               	rlf	??_scale+5,w
  3228  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3229  0DF5  0084               	movwf	4
  3230  0DF6  160A  158A  200A  120A  158A  	fcall	stringdir
  3231  0DFB  00CE               	movwf	??_scale+6
  3232  0DFC  160A  158A  200A  120A  158A  	fcall	stringdir
  3233  0E01  00CF               	movwf	??_scale+7
  3234  0E02  160A  158A  200A  120A  158A  	fcall	stringdir
  3235  0E07  00D0               	movwf	??_scale+8
  3236  0E08  160A  158A  200A  120A  158A  	fcall	stringdir
  3237  0E0D  00D1               	movwf	??_scale+9
  3238  0E0E  0851               	movf	??_scale+9,w
  3239  0E0F  00B1               	movwf	___flmul@a+3
  3240  0E10  0850               	movf	??_scale+8,w
  3241  0E11  00B0               	movwf	___flmul@a+2
  3242  0E12  084F               	movf	??_scale+7,w
  3243  0E13  00AF               	movwf	___flmul@a+1
  3244  0E14  084E               	movf	??_scale+6,w
  3245  0E15  00AE               	movwf	___flmul@a
  3246  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  3247  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  3248  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  3249  0E1D  082D               	movf	?___flmul+3,w
  3250  0E1E  00C7               	movwf	?_scale+3
  3251  0E1F  082C               	movf	?___flmul+2,w
  3252  0E20  00C6               	movwf	?_scale+2
  3253  0E21  082B               	movf	?___flmul+1,w
  3254  0E22  00C5               	movwf	?_scale+1
  3255  0E23  082A               	movf	?___flmul,w
  3256  0E24  00C4               	movwf	?_scale
  3257  0E25  2FFF               	goto	l297
  3258  0E26                     l3830:
  3259                           
  3260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3261  0E26  0856               	movf	scale@scl,w
  3262  0E27  00C8               	movwf	??_scale
  3263  0E28  3001               	movlw	1
  3264  0E29                     u6155:
  3265  0E29  1003               	clrc
  3266  0E2A  0DC8               	rlf	??_scale,f
  3267  0E2B  3EFF               	addlw	-1
  3268  0E2C  1D03               	skipz
  3269  0E2D  2E29               	goto	u6155
  3270  0E2E  1003               	clrc
  3271  0E2F  0D48               	rlf	??_scale,w
  3272  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3273  0E31  0084               	movwf	4
  3274  0E32  160A  158A  200A  120A  158A  	fcall	stringdir
  3275  0E37  00C9               	movwf	??_scale+1
  3276  0E38  160A  158A  200A  120A  158A  	fcall	stringdir
  3277  0E3D  00CA               	movwf	??_scale+2
  3278  0E3E  160A  158A  200A  120A  158A  	fcall	stringdir
  3279  0E43  00CB               	movwf	??_scale+3
  3280  0E44  160A  158A  200A  120A  158A  	fcall	stringdir
  3281  0E49  00CC               	movwf	??_scale+4
  3282  0E4A  084C               	movf	??_scale+4,w
  3283  0E4B  00C7               	movwf	?_scale+3
  3284  0E4C  084B               	movf	??_scale+3,w
  3285  0E4D  00C6               	movwf	?_scale+2
  3286  0E4E  084A               	movf	??_scale+2,w
  3287  0E4F  00C5               	movwf	?_scale+1
  3288  0E50  0849               	movf	??_scale+1,w
  3289  0E51  00C4               	movwf	?_scale
  3290  0E52  2FFF               	goto	l297
  3291  0E53                     l3834:
  3292                           
  3293                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3294  0E53  0856               	movf	scale@scl,w
  3295  0E54  3A80               	xorlw	128
  3296  0E55  3E12               	addlw	-238
  3297  0E56  1C03               	skipc
  3298  0E57  2E59               	goto	u6161
  3299  0E58  2E5A               	goto	u6160
  3300  0E59                     u6161:
  3301  0E59  2F44               	goto	l3842
  3302  0E5A                     u6160:
  3303  0E5A                     l3836:
  3304                           
  3305                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3306  0E5A  300A               	movlw	10
  3307  0E5B  00A0               	movwf	___awdiv@divisor
  3308  0E5C  3000               	movlw	0
  3309  0E5D  00A1               	movwf	___awdiv@divisor+1
  3310  0E5E  0856               	movf	scale@scl,w
  3311  0E5F  00F5               	movwf	___awmod@dividend
  3312  0E60  01F6               	clrf	___awmod@dividend+1
  3313  0E61  1BF5               	btfsc	___awmod@dividend,7
  3314  0E62  03F6               	decf	___awmod@dividend+1,f
  3315  0E63  3064               	movlw	100
  3316  0E64  00F3               	movwf	___awmod@divisor
  3317  0E65  3000               	movlw	0
  3318  0E66  00F4               	movwf	___awmod@divisor+1
  3319  0E67  160A  118A  2008  120A  158A  	fcall	___awmod
  3320  0E6C  0874               	movf	?___awmod+1,w
  3321  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  3322  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  3323  0E6F  00A3               	movwf	___awdiv@dividend+1
  3324  0E70  0873               	movf	?___awmod,w
  3325  0E71  00A2               	movwf	___awdiv@dividend
  3326  0E72  120A  158A  2016  120A  158A  	fcall	___awdiv
  3327  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  3328  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  3329  0E79  0820               	movf	?___awdiv,w
  3330  0E7A  00C8               	movwf	??_scale
  3331  0E7B  3001               	movlw	1
  3332  0E7C                     u6175:
  3333  0E7C  1003               	clrc
  3334  0E7D  0DC8               	rlf	??_scale,f
  3335  0E7E  3EFF               	addlw	-1
  3336  0E7F  1D03               	skipz
  3337  0E80  2E7C               	goto	u6175
  3338  0E81  1003               	clrc
  3339  0E82  0D48               	rlf	??_scale,w
  3340  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3341  0E84  0084               	movwf	4
  3342  0E85  160A  158A  200A  120A  158A  	fcall	stringdir
  3343  0E8A  00C9               	movwf	??_scale+1
  3344  0E8B  160A  158A  200A  120A  158A  	fcall	stringdir
  3345  0E90  00CA               	movwf	??_scale+2
  3346  0E91  160A  158A  200A  120A  158A  	fcall	stringdir
  3347  0E96  00CB               	movwf	??_scale+3
  3348  0E97  160A  158A  200A  120A  158A  	fcall	stringdir
  3349  0E9C  00CC               	movwf	??_scale+4
  3350  0E9D  084C               	movf	??_scale+4,w
  3351  0E9E  00AD               	movwf	___flmul@b+3
  3352  0E9F  084B               	movf	??_scale+3,w
  3353  0EA0  00AC               	movwf	___flmul@b+2
  3354  0EA1  084A               	movf	??_scale+2,w
  3355  0EA2  00AB               	movwf	___flmul@b+1
  3356  0EA3  0849               	movf	??_scale+1,w
  3357  0EA4  00AA               	movwf	___flmul@b
  3358  0EA5  3064               	movlw	100
  3359  0EA6  00A0               	movwf	___awdiv@divisor
  3360  0EA7  3000               	movlw	0
  3361  0EA8  00A1               	movwf	___awdiv@divisor+1
  3362  0EA9  0856               	movf	scale@scl,w
  3363  0EAA  00A2               	movwf	___awdiv@dividend
  3364  0EAB  01A3               	clrf	___awdiv@dividend+1
  3365  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  3366  0EAD  03A3               	decf	___awdiv@dividend+1,f
  3367  0EAE  120A  158A  2016  120A  158A  	fcall	___awdiv
  3368  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  3369  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  3370  0EB5  0820               	movf	?___awdiv,w
  3371  0EB6  00CD               	movwf	??_scale+5
  3372  0EB7  3001               	movlw	1
  3373  0EB8                     u6185:
  3374  0EB8  1003               	clrc
  3375  0EB9  0DCD               	rlf	??_scale+5,f
  3376  0EBA  3EFF               	addlw	-1
  3377  0EBB  1D03               	skipz
  3378  0EBC  2EB8               	goto	u6185
  3379  0EBD  1003               	clrc
  3380  0EBE  0D4D               	rlf	??_scale+5,w
  3381  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3382  0EC0  0084               	movwf	4
  3383  0EC1  160A  158A  200A  120A  158A  	fcall	stringdir
  3384  0EC6  00CE               	movwf	??_scale+6
  3385  0EC7  160A  158A  200A  120A  158A  	fcall	stringdir
  3386  0ECC  00CF               	movwf	??_scale+7
  3387  0ECD  160A  158A  200A  120A  158A  	fcall	stringdir
  3388  0ED2  00D0               	movwf	??_scale+8
  3389  0ED3  160A  158A  200A  120A  158A  	fcall	stringdir
  3390  0ED8  00D1               	movwf	??_scale+9
  3391  0ED9  0851               	movf	??_scale+9,w
  3392  0EDA  00B1               	movwf	___flmul@a+3
  3393  0EDB  0850               	movf	??_scale+8,w
  3394  0EDC  00B0               	movwf	___flmul@a+2
  3395  0EDD  084F               	movf	??_scale+7,w
  3396  0EDE  00AF               	movwf	___flmul@a+1
  3397  0EDF  084E               	movf	??_scale+6,w
  3398  0EE0  00AE               	movwf	___flmul@a
  3399  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3400  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3401  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3402  0EE8  082D               	movf	?___flmul+3,w
  3403  0EE9  00D5               	movwf	_scale$1191+3
  3404  0EEA  082C               	movf	?___flmul+2,w
  3405  0EEB  00D4               	movwf	_scale$1191+2
  3406  0EEC  082B               	movf	?___flmul+1,w
  3407  0EED  00D3               	movwf	_scale$1191+1
  3408  0EEE  082A               	movf	?___flmul,w
  3409  0EEF  00D2               	movwf	_scale$1191
  3410                           
  3411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3412  0EF0  300A               	movlw	10
  3413  0EF1  00F3               	movwf	___awmod@divisor
  3414  0EF2  3000               	movlw	0
  3415  0EF3  00F4               	movwf	___awmod@divisor+1
  3416  0EF4  0856               	movf	scale@scl,w
  3417  0EF5  00F5               	movwf	___awmod@dividend
  3418  0EF6  01F6               	clrf	___awmod@dividend+1
  3419  0EF7  1BF5               	btfsc	___awmod@dividend,7
  3420  0EF8  03F6               	decf	___awmod@dividend+1,f
  3421  0EF9  160A  118A  2008  120A  158A  	fcall	___awmod
  3422  0EFE  0873               	movf	?___awmod,w
  3423  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3424  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3425  0F01  00C8               	movwf	??_scale
  3426  0F02  3001               	movlw	1
  3427  0F03                     u6195:
  3428  0F03  1003               	clrc
  3429  0F04  0DC8               	rlf	??_scale,f
  3430  0F05  3EFF               	addlw	-1
  3431  0F06  1D03               	skipz
  3432  0F07  2F03               	goto	u6195
  3433  0F08  1003               	clrc
  3434  0F09  0D48               	rlf	??_scale,w
  3435  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3436  0F0B  0084               	movwf	4
  3437  0F0C  160A  158A  200A  120A  158A  	fcall	stringdir
  3438  0F11  00C9               	movwf	??_scale+1
  3439  0F12  160A  158A  200A  120A  158A  	fcall	stringdir
  3440  0F17  00CA               	movwf	??_scale+2
  3441  0F18  160A  158A  200A  120A  158A  	fcall	stringdir
  3442  0F1D  00CB               	movwf	??_scale+3
  3443  0F1E  160A  158A  200A  120A  158A  	fcall	stringdir
  3444  0F23  00CC               	movwf	??_scale+4
  3445  0F24  084C               	movf	??_scale+4,w
  3446  0F25  00AD               	movwf	___flmul@b+3
  3447  0F26  084B               	movf	??_scale+3,w
  3448  0F27  00AC               	movwf	___flmul@b+2
  3449  0F28  084A               	movf	??_scale+2,w
  3450  0F29  00AB               	movwf	___flmul@b+1
  3451  0F2A  0849               	movf	??_scale+1,w
  3452  0F2B  00AA               	movwf	___flmul@b
  3453  0F2C  0855               	movf	_scale$1191+3,w
  3454  0F2D  00B1               	movwf	___flmul@a+3
  3455  0F2E  0854               	movf	_scale$1191+2,w
  3456  0F2F  00B0               	movwf	___flmul@a+2
  3457  0F30  0853               	movf	_scale$1191+1,w
  3458  0F31  00AF               	movwf	___flmul@a+1
  3459  0F32  0852               	movf	_scale$1191,w
  3460  0F33  00AE               	movwf	___flmul@a
  3461  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3462  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3463  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3464  0F3B  082D               	movf	?___flmul+3,w
  3465  0F3C  00C7               	movwf	?_scale+3
  3466  0F3D  082C               	movf	?___flmul+2,w
  3467  0F3E  00C6               	movwf	?_scale+2
  3468  0F3F  082B               	movf	?___flmul+1,w
  3469  0F40  00C5               	movwf	?_scale+1
  3470  0F41  082A               	movf	?___flmul,w
  3471  0F42  00C4               	movwf	?_scale
  3472  0F43  2FFF               	goto	l297
  3473  0F44                     l3842:
  3474  0F44  0856               	movf	scale@scl,w
  3475  0F45  3A80               	xorlw	128
  3476  0F46  3E75               	addlw	-139
  3477  0F47  1C03               	skipc
  3478  0F48  2F4A               	goto	u6201
  3479  0F49  2F4B               	goto	u6200
  3480  0F4A                     u6201:
  3481  0F4A  2FD3               	goto	l3848
  3482  0F4B                     u6200:
  3483  0F4B                     l3844:
  3484                           
  3485                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3486  0F4B  300A               	movlw	10
  3487  0F4C  00F3               	movwf	___awmod@divisor
  3488  0F4D  3000               	movlw	0
  3489  0F4E  00F4               	movwf	___awmod@divisor+1
  3490  0F4F  0856               	movf	scale@scl,w
  3491  0F50  00F5               	movwf	___awmod@dividend
  3492  0F51  01F6               	clrf	___awmod@dividend+1
  3493  0F52  1BF5               	btfsc	___awmod@dividend,7
  3494  0F53  03F6               	decf	___awmod@dividend+1,f
  3495  0F54  160A  118A  2008  120A  158A  	fcall	___awmod
  3496  0F59  0873               	movf	?___awmod,w
  3497  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3498  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3499  0F5C  00C8               	movwf	??_scale
  3500  0F5D  3001               	movlw	1
  3501  0F5E                     u6215:
  3502  0F5E  1003               	clrc
  3503  0F5F  0DC8               	rlf	??_scale,f
  3504  0F60  3EFF               	addlw	-1
  3505  0F61  1D03               	skipz
  3506  0F62  2F5E               	goto	u6215
  3507  0F63  1003               	clrc
  3508  0F64  0D48               	rlf	??_scale,w
  3509  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3510  0F66  0084               	movwf	4
  3511  0F67  160A  158A  200A  120A  158A  	fcall	stringdir
  3512  0F6C  00C9               	movwf	??_scale+1
  3513  0F6D  160A  158A  200A  120A  158A  	fcall	stringdir
  3514  0F72  00CA               	movwf	??_scale+2
  3515  0F73  160A  158A  200A  120A  158A  	fcall	stringdir
  3516  0F78  00CB               	movwf	??_scale+3
  3517  0F79  160A  158A  200A  120A  158A  	fcall	stringdir
  3518  0F7E  00CC               	movwf	??_scale+4
  3519  0F7F  084C               	movf	??_scale+4,w
  3520  0F80  00AD               	movwf	___flmul@b+3
  3521  0F81  084B               	movf	??_scale+3,w
  3522  0F82  00AC               	movwf	___flmul@b+2
  3523  0F83  084A               	movf	??_scale+2,w
  3524  0F84  00AB               	movwf	___flmul@b+1
  3525  0F85  0849               	movf	??_scale+1,w
  3526  0F86  00AA               	movwf	___flmul@b
  3527  0F87  300A               	movlw	10
  3528  0F88  00A0               	movwf	___awdiv@divisor
  3529  0F89  3000               	movlw	0
  3530  0F8A  00A1               	movwf	___awdiv@divisor+1
  3531  0F8B  0856               	movf	scale@scl,w
  3532  0F8C  00A2               	movwf	___awdiv@dividend
  3533  0F8D  01A3               	clrf	___awdiv@dividend+1
  3534  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  3535  0F8F  03A3               	decf	___awdiv@dividend+1,f
  3536  0F90  120A  158A  2016  120A  158A  	fcall	___awdiv
  3537  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3538  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3539  0F97  0820               	movf	?___awdiv,w
  3540  0F98  00CD               	movwf	??_scale+5
  3541  0F99  3001               	movlw	1
  3542  0F9A                     u6225:
  3543  0F9A  1003               	clrc
  3544  0F9B  0DCD               	rlf	??_scale+5,f
  3545  0F9C  3EFF               	addlw	-1
  3546  0F9D  1D03               	skipz
  3547  0F9E  2F9A               	goto	u6225
  3548  0F9F  1003               	clrc
  3549  0FA0  0D4D               	rlf	??_scale+5,w
  3550  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3551  0FA2  0084               	movwf	4
  3552  0FA3  160A  158A  200A  120A  158A  	fcall	stringdir
  3553  0FA8  00CE               	movwf	??_scale+6
  3554  0FA9  160A  158A  200A  120A  158A  	fcall	stringdir
  3555  0FAE  00CF               	movwf	??_scale+7
  3556  0FAF  160A  158A  200A  120A  158A  	fcall	stringdir
  3557  0FB4  00D0               	movwf	??_scale+8
  3558  0FB5  160A  158A  200A  120A  158A  	fcall	stringdir
  3559  0FBA  00D1               	movwf	??_scale+9
  3560  0FBB  0851               	movf	??_scale+9,w
  3561  0FBC  00B1               	movwf	___flmul@a+3
  3562  0FBD  0850               	movf	??_scale+8,w
  3563  0FBE  00B0               	movwf	___flmul@a+2
  3564  0FBF  084F               	movf	??_scale+7,w
  3565  0FC0  00AF               	movwf	___flmul@a+1
  3566  0FC1  084E               	movf	??_scale+6,w
  3567  0FC2  00AE               	movwf	___flmul@a
  3568  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3569  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3570  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3571  0FCA  082D               	movf	?___flmul+3,w
  3572  0FCB  00C7               	movwf	?_scale+3
  3573  0FCC  082C               	movf	?___flmul+2,w
  3574  0FCD  00C6               	movwf	?_scale+2
  3575  0FCE  082B               	movf	?___flmul+1,w
  3576  0FCF  00C5               	movwf	?_scale+1
  3577  0FD0  082A               	movf	?___flmul,w
  3578  0FD1  00C4               	movwf	?_scale
  3579  0FD2  2FFF               	goto	l297
  3580  0FD3                     l3848:
  3581                           
  3582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3583  0FD3  0856               	movf	scale@scl,w
  3584  0FD4  00C8               	movwf	??_scale
  3585  0FD5  3001               	movlw	1
  3586  0FD6                     u6235:
  3587  0FD6  1003               	clrc
  3588  0FD7  0DC8               	rlf	??_scale,f
  3589  0FD8  3EFF               	addlw	-1
  3590  0FD9  1D03               	skipz
  3591  0FDA  2FD6               	goto	u6235
  3592  0FDB  1003               	clrc
  3593  0FDC  0D48               	rlf	??_scale,w
  3594  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3595  0FDE  0084               	movwf	4
  3596  0FDF  160A  158A  200A  120A  158A  	fcall	stringdir
  3597  0FE4  00C9               	movwf	??_scale+1
  3598  0FE5  160A  158A  200A  120A  158A  	fcall	stringdir
  3599  0FEA  00CA               	movwf	??_scale+2
  3600  0FEB  160A  158A  200A  120A  158A  	fcall	stringdir
  3601  0FF0  00CB               	movwf	??_scale+3
  3602  0FF1  160A  158A  200A  120A  158A  	fcall	stringdir
  3603  0FF6  00CC               	movwf	??_scale+4
  3604  0FF7  084C               	movf	??_scale+4,w
  3605  0FF8  00C7               	movwf	?_scale+3
  3606  0FF9  084B               	movf	??_scale+3,w
  3607  0FFA  00C6               	movwf	?_scale+2
  3608  0FFB  084A               	movf	??_scale+2,w
  3609  0FFC  00C5               	movwf	?_scale+1
  3610  0FFD  0849               	movf	??_scale+1,w
  3611  0FFE  00C4               	movwf	?_scale
  3612  0FFF                     l297:
  3613  0FFF  0008               	return
  3614  1000                     __end_of_scale:
  3615                           
  3616                           	psect	text4
  3617  1008                     __ptext4:	
  3618 ;; *************** function ___awmod *****************
  3619 ;; Defined at:
  3620 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3621 ;; Parameters:    Size  Location     Type
  3622 ;;  divisor         2    3[COMMON] int 
  3623 ;;  dividend        2    5[COMMON] int 
  3624 ;; Auto vars:     Size  Location     Type
  3625 ;;  sign            1    9[COMMON] unsigned char 
  3626 ;;  counter         1    8[COMMON] unsigned char 
  3627 ;; Return value:  Size  Location     Type
  3628 ;;                  2    3[COMMON] int 
  3629 ;; Registers used:
  3630 ;;		wreg, status,2, status,0
  3631 ;; Tracked objects:
  3632 ;;		On entry : 0/0
  3633 ;;		On exit  : 0/0
  3634 ;;		Unchanged: 0/0
  3635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3636 ;;      Params:         4       0       0       0       0
  3637 ;;      Locals:         2       0       0       0       0
  3638 ;;      Temps:          1       0       0       0       0
  3639 ;;      Totals:         7       0       0       0       0
  3640 ;;Total ram usage:        7 bytes
  3641 ;; Hardware stack levels used:    1
  3642 ;; Hardware stack levels required when called:    1
  3643 ;; This function calls:
  3644 ;;		Nothing
  3645 ;; This function is called by:
  3646 ;;		_scale
  3647 ;; This function uses a non-reentrant model
  3648 ;;
  3649                           
  3650                           
  3651                           ;psect for function ___awmod
  3652  1008                     ___awmod:
  3653  1008                     l2414:	
  3654                           ;incstack = 0
  3655                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3656                           
  3657  1008  01F9               	clrf	___awmod@sign
  3658  1009                     l2416:
  3659  1009  1FF6               	btfss	___awmod@dividend+1,7
  3660  100A  280C               	goto	u3121
  3661  100B  280D               	goto	u3120
  3662  100C                     u3121:
  3663  100C  2814               	goto	l2422
  3664  100D                     u3120:
  3665  100D                     l2418:
  3666  100D  09F5               	comf	___awmod@dividend,f
  3667  100E  09F6               	comf	___awmod@dividend+1,f
  3668  100F  0AF5               	incf	___awmod@dividend,f
  3669  1010  1903               	skipnz
  3670  1011  0AF6               	incf	___awmod@dividend+1,f
  3671  1012                     l2420:
  3672  1012  01F9               	clrf	___awmod@sign
  3673  1013  0AF9               	incf	___awmod@sign,f
  3674  1014                     l2422:
  3675  1014  1FF4               	btfss	___awmod@divisor+1,7
  3676  1015  2817               	goto	u3131
  3677  1016  2818               	goto	u3130
  3678  1017                     u3131:
  3679  1017  281D               	goto	l2426
  3680  1018                     u3130:
  3681  1018                     l2424:
  3682  1018  09F3               	comf	___awmod@divisor,f
  3683  1019  09F4               	comf	___awmod@divisor+1,f
  3684  101A  0AF3               	incf	___awmod@divisor,f
  3685  101B  1903               	skipnz
  3686  101C  0AF4               	incf	___awmod@divisor+1,f
  3687  101D                     l2426:
  3688  101D  0873               	movf	___awmod@divisor,w
  3689  101E  0474               	iorwf	___awmod@divisor+1,w
  3690  101F  1903               	btfsc	3,2
  3691  1020  2822               	goto	u3141
  3692  1021  2823               	goto	u3140
  3693  1022                     u3141:
  3694  1022  2852               	goto	l2444
  3695  1023                     u3140:
  3696  1023                     l2428:
  3697  1023  01F8               	clrf	___awmod@counter
  3698  1024  0AF8               	incf	___awmod@counter,f
  3699  1025  2831               	goto	l2434
  3700  1026                     l2430:
  3701  1026  3001               	movlw	1
  3702  1027                     u3155:
  3703  1027  1003               	clrc
  3704  1028  0DF3               	rlf	___awmod@divisor,f
  3705  1029  0DF4               	rlf	___awmod@divisor+1,f
  3706  102A  3EFF               	addlw	-1
  3707  102B  1D03               	skipz
  3708  102C  2827               	goto	u3155
  3709  102D                     l2432:
  3710  102D  3001               	movlw	1
  3711  102E  00F7               	movwf	??___awmod
  3712  102F  0877               	movf	??___awmod,w
  3713  1030  07F8               	addwf	___awmod@counter,f
  3714  1031                     l2434:
  3715  1031  1FF4               	btfss	___awmod@divisor+1,7
  3716  1032  2834               	goto	u3161
  3717  1033  2835               	goto	u3160
  3718  1034                     u3161:
  3719  1034  2826               	goto	l2430
  3720  1035                     u3160:
  3721  1035                     l2436:
  3722  1035  0874               	movf	___awmod@divisor+1,w
  3723  1036  0276               	subwf	___awmod@dividend+1,w
  3724  1037  1D03               	skipz
  3725  1038  283B               	goto	u3175
  3726  1039  0873               	movf	___awmod@divisor,w
  3727  103A  0275               	subwf	___awmod@dividend,w
  3728  103B                     u3175:
  3729  103B  1C03               	skipc
  3730  103C  283E               	goto	u3171
  3731  103D  283F               	goto	u3170
  3732  103E                     u3171:
  3733  103E  2845               	goto	l2440
  3734  103F                     u3170:
  3735  103F                     l2438:
  3736  103F  0873               	movf	___awmod@divisor,w
  3737  1040  02F5               	subwf	___awmod@dividend,f
  3738  1041  0874               	movf	___awmod@divisor+1,w
  3739  1042  1C03               	skipc
  3740  1043  03F6               	decf	___awmod@dividend+1,f
  3741  1044  02F6               	subwf	___awmod@dividend+1,f
  3742  1045                     l2440:
  3743  1045  3001               	movlw	1
  3744  1046                     u3185:
  3745  1046  1003               	clrc
  3746  1047  0CF4               	rrf	___awmod@divisor+1,f
  3747  1048  0CF3               	rrf	___awmod@divisor,f
  3748  1049  3EFF               	addlw	-1
  3749  104A  1D03               	skipz
  3750  104B  2846               	goto	u3185
  3751  104C                     l2442:
  3752  104C  3001               	movlw	1
  3753  104D  02F8               	subwf	___awmod@counter,f
  3754  104E  1D03               	btfss	3,2
  3755  104F  2851               	goto	u3191
  3756  1050  2852               	goto	u3190
  3757  1051                     u3191:
  3758  1051  2835               	goto	l2436
  3759  1052                     u3190:
  3760  1052                     l2444:
  3761  1052  0879               	movf	___awmod@sign,w
  3762  1053  1903               	btfsc	3,2
  3763  1054  2856               	goto	u3201
  3764  1055  2857               	goto	u3200
  3765  1056                     u3201:
  3766  1056  285C               	goto	l2448
  3767  1057                     u3200:
  3768  1057                     l2446:
  3769  1057  09F5               	comf	___awmod@dividend,f
  3770  1058  09F6               	comf	___awmod@dividend+1,f
  3771  1059  0AF5               	incf	___awmod@dividend,f
  3772  105A  1903               	skipnz
  3773  105B  0AF6               	incf	___awmod@dividend+1,f
  3774  105C                     l2448:
  3775  105C  0876               	movf	___awmod@dividend+1,w
  3776  105D  00F4               	movwf	?___awmod+1
  3777  105E  0875               	movf	___awmod@dividend,w
  3778  105F  00F3               	movwf	?___awmod
  3779  1060                     l559:
  3780  1060  0008               	return
  3781  1061                     __end_of___awmod:
  3782                           
  3783                           	psect	text5
  3784  0816                     __ptext5:	
  3785 ;; *************** function ___awdiv *****************
  3786 ;; Defined at:
  3787 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3788 ;; Parameters:    Size  Location     Type
  3789 ;;  divisor         2    0[BANK0 ] int 
  3790 ;;  dividend        2    2[BANK0 ] int 
  3791 ;; Auto vars:     Size  Location     Type
  3792 ;;  quotient        2    7[BANK0 ] int 
  3793 ;;  sign            1    6[BANK0 ] unsigned char 
  3794 ;;  counter         1    5[BANK0 ] unsigned char 
  3795 ;; Return value:  Size  Location     Type
  3796 ;;                  2    0[BANK0 ] int 
  3797 ;; Registers used:
  3798 ;;		wreg, status,2, status,0
  3799 ;; Tracked objects:
  3800 ;;		On entry : 0/0
  3801 ;;		On exit  : 0/0
  3802 ;;		Unchanged: 0/0
  3803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3804 ;;      Params:         0       4       0       0       0
  3805 ;;      Locals:         0       4       0       0       0
  3806 ;;      Temps:          0       1       0       0       0
  3807 ;;      Totals:         0       9       0       0       0
  3808 ;;Total ram usage:        9 bytes
  3809 ;; Hardware stack levels used:    1
  3810 ;; Hardware stack levels required when called:    1
  3811 ;; This function calls:
  3812 ;;		Nothing
  3813 ;; This function is called by:
  3814 ;;		_scale
  3815 ;;		_sprintf
  3816 ;; This function uses a non-reentrant model
  3817 ;;
  3818                           
  3819                           
  3820                           ;psect for function ___awdiv
  3821  0816                     ___awdiv:
  3822  0816                     l3744:	
  3823                           ;incstack = 0
  3824                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3825                           
  3826  0816  1283               	bcf	3,5	;RP0=0, select bank0
  3827  0817  1303               	bcf	3,6	;RP1=0, select bank0
  3828  0818  01A6               	clrf	___awdiv@sign
  3829  0819                     l3746:
  3830  0819  1FA1               	btfss	___awdiv@divisor+1,7
  3831  081A  281C               	goto	u5971
  3832  081B  281D               	goto	u5970
  3833  081C                     u5971:
  3834  081C  2824               	goto	l3752
  3835  081D                     u5970:
  3836  081D                     l3748:
  3837  081D  09A0               	comf	___awdiv@divisor,f
  3838  081E  09A1               	comf	___awdiv@divisor+1,f
  3839  081F  0AA0               	incf	___awdiv@divisor,f
  3840  0820  1903               	skipnz
  3841  0821  0AA1               	incf	___awdiv@divisor+1,f
  3842  0822                     l3750:
  3843  0822  01A6               	clrf	___awdiv@sign
  3844  0823  0AA6               	incf	___awdiv@sign,f
  3845  0824                     l3752:
  3846  0824  1FA3               	btfss	___awdiv@dividend+1,7
  3847  0825  2827               	goto	u5981
  3848  0826  2828               	goto	u5980
  3849  0827                     u5981:
  3850  0827  2831               	goto	l3758
  3851  0828                     u5980:
  3852  0828                     l3754:
  3853  0828  09A2               	comf	___awdiv@dividend,f
  3854  0829  09A3               	comf	___awdiv@dividend+1,f
  3855  082A  0AA2               	incf	___awdiv@dividend,f
  3856  082B  1903               	skipnz
  3857  082C  0AA3               	incf	___awdiv@dividend+1,f
  3858  082D                     l3756:
  3859  082D  3001               	movlw	1
  3860  082E  00A4               	movwf	??___awdiv
  3861  082F  0824               	movf	??___awdiv,w
  3862  0830  06A6               	xorwf	___awdiv@sign,f
  3863  0831                     l3758:
  3864  0831  01A7               	clrf	___awdiv@quotient
  3865  0832  01A8               	clrf	___awdiv@quotient+1
  3866  0833                     l3760:
  3867  0833  0820               	movf	___awdiv@divisor,w
  3868  0834  0421               	iorwf	___awdiv@divisor+1,w
  3869  0835  1903               	btfsc	3,2
  3870  0836  2838               	goto	u5991
  3871  0837  2839               	goto	u5990
  3872  0838                     u5991:
  3873  0838  2870               	goto	l3780
  3874  0839                     u5990:
  3875  0839                     l3762:
  3876  0839  01A5               	clrf	___awdiv@counter
  3877  083A  0AA5               	incf	___awdiv@counter,f
  3878  083B  2847               	goto	l3768
  3879  083C                     l3764:
  3880  083C  3001               	movlw	1
  3881  083D                     u6005:
  3882  083D  1003               	clrc
  3883  083E  0DA0               	rlf	___awdiv@divisor,f
  3884  083F  0DA1               	rlf	___awdiv@divisor+1,f
  3885  0840  3EFF               	addlw	-1
  3886  0841  1D03               	skipz
  3887  0842  283D               	goto	u6005
  3888  0843                     l3766:
  3889  0843  3001               	movlw	1
  3890  0844  00A4               	movwf	??___awdiv
  3891  0845  0824               	movf	??___awdiv,w
  3892  0846  07A5               	addwf	___awdiv@counter,f
  3893  0847                     l3768:
  3894  0847  1FA1               	btfss	___awdiv@divisor+1,7
  3895  0848  284A               	goto	u6011
  3896  0849  284B               	goto	u6010
  3897  084A                     u6011:
  3898  084A  283C               	goto	l3764
  3899  084B                     u6010:
  3900  084B                     l3770:
  3901  084B  3001               	movlw	1
  3902  084C                     u6025:
  3903  084C  1003               	clrc
  3904  084D  0DA7               	rlf	___awdiv@quotient,f
  3905  084E  0DA8               	rlf	___awdiv@quotient+1,f
  3906  084F  3EFF               	addlw	-1
  3907  0850  1D03               	skipz
  3908  0851  284C               	goto	u6025
  3909  0852  0821               	movf	___awdiv@divisor+1,w
  3910  0853  0223               	subwf	___awdiv@dividend+1,w
  3911  0854  1D03               	skipz
  3912  0855  2858               	goto	u6035
  3913  0856  0820               	movf	___awdiv@divisor,w
  3914  0857  0222               	subwf	___awdiv@dividend,w
  3915  0858                     u6035:
  3916  0858  1C03               	skipc
  3917  0859  285B               	goto	u6031
  3918  085A  285C               	goto	u6030
  3919  085B                     u6031:
  3920  085B  2863               	goto	l3776
  3921  085C                     u6030:
  3922  085C                     l3772:
  3923  085C  0820               	movf	___awdiv@divisor,w
  3924  085D  02A2               	subwf	___awdiv@dividend,f
  3925  085E  0821               	movf	___awdiv@divisor+1,w
  3926  085F  1C03               	skipc
  3927  0860  03A3               	decf	___awdiv@dividend+1,f
  3928  0861  02A3               	subwf	___awdiv@dividend+1,f
  3929  0862                     l3774:
  3930  0862  1427               	bsf	___awdiv@quotient,0
  3931  0863                     l3776:
  3932  0863  3001               	movlw	1
  3933  0864                     u6045:
  3934  0864  1003               	clrc
  3935  0865  0CA1               	rrf	___awdiv@divisor+1,f
  3936  0866  0CA0               	rrf	___awdiv@divisor,f
  3937  0867  3EFF               	addlw	-1
  3938  0868  1D03               	skipz
  3939  0869  2864               	goto	u6045
  3940  086A                     l3778:
  3941  086A  3001               	movlw	1
  3942  086B  02A5               	subwf	___awdiv@counter,f
  3943  086C  1D03               	btfss	3,2
  3944  086D  286F               	goto	u6051
  3945  086E  2870               	goto	u6050
  3946  086F                     u6051:
  3947  086F  284B               	goto	l3770
  3948  0870                     u6050:
  3949  0870                     l3780:
  3950  0870  0826               	movf	___awdiv@sign,w
  3951  0871  1903               	btfsc	3,2
  3952  0872  2874               	goto	u6061
  3953  0873  2875               	goto	u6060
  3954  0874                     u6061:
  3955  0874  287A               	goto	l3784
  3956  0875                     u6060:
  3957  0875                     l3782:
  3958  0875  09A7               	comf	___awdiv@quotient,f
  3959  0876  09A8               	comf	___awdiv@quotient+1,f
  3960  0877  0AA7               	incf	___awdiv@quotient,f
  3961  0878  1903               	skipnz
  3962  0879  0AA8               	incf	___awdiv@quotient+1,f
  3963  087A                     l3784:
  3964  087A  0828               	movf	___awdiv@quotient+1,w
  3965  087B  00A1               	movwf	?___awdiv+1
  3966  087C  0827               	movf	___awdiv@quotient,w
  3967  087D  00A0               	movwf	?___awdiv
  3968  087E                     l546:
  3969  087E  0008               	return
  3970  087F                     __end_of___awdiv:
  3971                           
  3972                           	psect	text6
  3973  07EC                     __ptext6:	
  3974 ;; *************** function _isdigit *****************
  3975 ;; Defined at:
  3976 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;  c               1    wreg     unsigned char 
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;  c               1    4[COMMON] unsigned char 
  3981 ;; Return value:  Size  Location     Type
  3982 ;;		None               void
  3983 ;; Registers used:
  3984 ;;		wreg, status,2, status,0
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3990 ;;      Params:         0       0       0       0       0
  3991 ;;      Locals:         2       0       0       0       0
  3992 ;;      Temps:          0       0       0       0       0
  3993 ;;      Totals:         2       0       0       0       0
  3994 ;;Total ram usage:        2 bytes
  3995 ;; Hardware stack levels used:    1
  3996 ;; Hardware stack levels required when called:    1
  3997 ;; This function calls:
  3998 ;;		Nothing
  3999 ;; This function is called by:
  4000 ;;		_sprintf
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           
  4005                           ;psect for function _isdigit
  4006  07EC                     _isdigit:
  4007                           
  4008                           ;incstack = 0
  4009                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4010                           ;isdigit@c stored from wreg
  4011  07EC  00F4               	movwf	isdigit@c
  4012  07ED                     l2916:
  4013  07ED  01F3               	clrf	_isdigit$1006
  4014  07EE                     l2918:
  4015  07EE  303A               	movlw	58
  4016  07EF  0274               	subwf	isdigit@c,w
  4017  07F0  1803               	skipnc
  4018  07F1  2FF3               	goto	u4421
  4019  07F2  2FF4               	goto	u4420
  4020  07F3                     u4421:
  4021  07F3  2FFC               	goto	l2924
  4022  07F4                     u4420:
  4023  07F4                     l2920:
  4024  07F4  3030               	movlw	48
  4025  07F5  0274               	subwf	isdigit@c,w
  4026  07F6  1C03               	skipc
  4027  07F7  2FF9               	goto	u4431
  4028  07F8  2FFA               	goto	u4430
  4029  07F9                     u4431:
  4030  07F9  2FFC               	goto	l2924
  4031  07FA                     u4430:
  4032  07FA                     l2922:
  4033  07FA  01F3               	clrf	_isdigit$1006
  4034  07FB  0AF3               	incf	_isdigit$1006,f
  4035  07FC                     l2924:
  4036  07FC  0C73               	rrf	_isdigit$1006,w
  4037  07FD                     l880:
  4038  07FD  0008               	return
  4039  07FE                     __end_of_isdigit:
  4040                           
  4041                           	psect	text7
  4042  1061                     __ptext7:	
  4043 ;; *************** function _fround *****************
  4044 ;; Defined at:
  4045 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4046 ;; Parameters:    Size  Location     Type
  4047 ;;  prec            1    wreg     unsigned char 
  4048 ;; Auto vars:     Size  Location     Type
  4049 ;;  prec            1   55[BANK0 ] unsigned char 
  4050 ;; Return value:  Size  Location     Type
  4051 ;;                  4   36[BANK0 ] unsigned char 
  4052 ;; Registers used:
  4053 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4054 ;; Tracked objects:
  4055 ;;		On entry : 0/0
  4056 ;;		On exit  : 0/0
  4057 ;;		Unchanged: 0/0
  4058 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4059 ;;      Params:         0       4       0       0       0
  4060 ;;      Locals:         0       9       0       0       0
  4061 ;;      Temps:          0       7       0       0       0
  4062 ;;      Totals:         0      20       0       0       0
  4063 ;;Total ram usage:       20 bytes
  4064 ;; Hardware stack levels used:    1
  4065 ;; Hardware stack levels required when called:    3
  4066 ;; This function calls:
  4067 ;;		___flmul
  4068 ;;		___lwdiv
  4069 ;;		___lwmod
  4070 ;; This function is called by:
  4071 ;;		_sprintf
  4072 ;; This function uses a non-reentrant model
  4073 ;;
  4074                           
  4075                           
  4076                           ;psect for function _fround
  4077  1061                     _fround:
  4078                           
  4079                           ;incstack = 0
  4080                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4081                           ;fround@prec stored from wreg
  4082  1061  1283               	bcf	3,5	;RP0=0, select bank0
  4083  1062  1303               	bcf	3,6	;RP1=0, select bank0
  4084  1063  00D7               	movwf	fround@prec
  4085  1064                     l2858:
  4086                           
  4087                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4088  1064  306E               	movlw	110
  4089  1065  0257               	subwf	fround@prec,w
  4090  1066  1C03               	skipc
  4091  1067  2869               	goto	u4171
  4092  1068  286A               	goto	u4170
  4093  1069                     u4171:
  4094  1069  2979               	goto	l2866
  4095  106A                     u4170:
  4096  106A                     l2860:
  4097                           
  4098                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4099  106A  303F               	movlw	63
  4100  106B  00AD               	movwf	___flmul@b+3
  4101  106C  3000               	movlw	0
  4102  106D  00AC               	movwf	___flmul@b+2
  4103  106E  3000               	movlw	0
  4104  106F  00AB               	movwf	___flmul@b+1
  4105  1070  3000               	movlw	0
  4106  1071  00AA               	movwf	___flmul@b
  4107  1072  3064               	movlw	100
  4108  1073  00A0               	movwf	___lwdiv@divisor
  4109  1074  3000               	movlw	0
  4110  1075  00A1               	movwf	___lwdiv@divisor+1
  4111  1076  0857               	movf	fround@prec,w
  4112  1077  00C8               	movwf	??_fround
  4113  1078  01C9               	clrf	??_fround+1
  4114  1079  0848               	movf	??_fround,w
  4115  107A  00A2               	movwf	___lwdiv@dividend
  4116  107B  0849               	movf	??_fround+1,w
  4117  107C  00A3               	movwf	___lwdiv@dividend+1
  4118  107D  160A  158A  2343  160A  118A  	fcall	___lwdiv
  4119  1082  1283               	bcf	3,5	;RP0=0, select bank0
  4120  1083  1303               	bcf	3,6	;RP1=0, select bank0
  4121  1084  0820               	movf	?___lwdiv,w
  4122  1085  00CA               	movwf	??_fround+2
  4123  1086  3001               	movlw	1
  4124  1087                     u4185:
  4125  1087  1003               	clrc
  4126  1088  0DCA               	rlf	??_fround+2,f
  4127  1089  3EFF               	addlw	-1
  4128  108A  1D03               	skipz
  4129  108B  2887               	goto	u4185
  4130  108C  1003               	clrc
  4131  108D  0D4A               	rlf	??_fround+2,w
  4132  108E  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4133  108F  0084               	movwf	4
  4134  1090  160A  158A  200A  160A  118A  	fcall	stringdir
  4135  1095  00CB               	movwf	??_fround+3
  4136  1096  160A  158A  200A  160A  118A  	fcall	stringdir
  4137  109B  00CC               	movwf	??_fround+4
  4138  109C  160A  158A  200A  160A  118A  	fcall	stringdir
  4139  10A1  00CD               	movwf	??_fround+5
  4140  10A2  160A  158A  200A  160A  118A  	fcall	stringdir
  4141  10A7  00CE               	movwf	??_fround+6
  4142  10A8  084E               	movf	??_fround+6,w
  4143  10A9  00B1               	movwf	___flmul@a+3
  4144  10AA  084D               	movf	??_fround+5,w
  4145  10AB  00B0               	movwf	___flmul@a+2
  4146  10AC  084C               	movf	??_fround+4,w
  4147  10AD  00AF               	movwf	___flmul@a+1
  4148  10AE  084B               	movf	??_fround+3,w
  4149  10AF  00AE               	movwf	___flmul@a
  4150  10B0  120A  158A  213C  160A  118A  	fcall	___flmul
  4151  10B5  1283               	bcf	3,5	;RP0=0, select bank0
  4152  10B6  1303               	bcf	3,6	;RP1=0, select bank0
  4153  10B7  082D               	movf	?___flmul+3,w
  4154  10B8  00D6               	movwf	_fround$1189+3
  4155  10B9  082C               	movf	?___flmul+2,w
  4156  10BA  00D5               	movwf	_fround$1189+2
  4157  10BB  082B               	movf	?___flmul+1,w
  4158  10BC  00D4               	movwf	_fround$1189+1
  4159  10BD  082A               	movf	?___flmul,w
  4160  10BE  00D3               	movwf	_fround$1189
  4161                           
  4162                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4163  10BF  300A               	movlw	10
  4164  10C0  00A0               	movwf	___lwdiv@divisor
  4165  10C1  3000               	movlw	0
  4166  10C2  00A1               	movwf	___lwdiv@divisor+1
  4167  10C3  0857               	movf	fround@prec,w
  4168  10C4  00C8               	movwf	??_fround
  4169  10C5  01C9               	clrf	??_fround+1
  4170  10C6  0848               	movf	??_fround,w
  4171  10C7  00F5               	movwf	___lwmod@dividend
  4172  10C8  0849               	movf	??_fround+1,w
  4173  10C9  00F6               	movwf	___lwmod@dividend+1
  4174  10CA  3064               	movlw	100
  4175  10CB  00F3               	movwf	___lwmod@divisor
  4176  10CC  3000               	movlw	0
  4177  10CD  00F4               	movwf	___lwmod@divisor+1
  4178  10CE  160A  158A  223F  160A  118A  	fcall	___lwmod
  4179  10D3  0874               	movf	?___lwmod+1,w
  4180  10D4  1283               	bcf	3,5	;RP0=0, select bank0
  4181  10D5  1303               	bcf	3,6	;RP1=0, select bank0
  4182  10D6  00A3               	movwf	___lwdiv@dividend+1
  4183  10D7  0873               	movf	?___lwmod,w
  4184  10D8  00A2               	movwf	___lwdiv@dividend
  4185  10D9  160A  158A  2343  160A  118A  	fcall	___lwdiv
  4186  10DE  1283               	bcf	3,5	;RP0=0, select bank0
  4187  10DF  1303               	bcf	3,6	;RP1=0, select bank0
  4188  10E0  0820               	movf	?___lwdiv,w
  4189  10E1  00CA               	movwf	??_fround+2
  4190  10E2  3001               	movlw	1
  4191  10E3                     u4195:
  4192  10E3  1003               	clrc
  4193  10E4  0DCA               	rlf	??_fround+2,f
  4194  10E5  3EFF               	addlw	-1
  4195  10E6  1D03               	skipz
  4196  10E7  28E3               	goto	u4195
  4197  10E8  1003               	clrc
  4198  10E9  0D4A               	rlf	??_fround+2,w
  4199  10EA  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4200  10EB  0084               	movwf	4
  4201  10EC  160A  158A  200A  160A  118A  	fcall	stringdir
  4202  10F1  00CB               	movwf	??_fround+3
  4203  10F2  160A  158A  200A  160A  118A  	fcall	stringdir
  4204  10F7  00CC               	movwf	??_fround+4
  4205  10F8  160A  158A  200A  160A  118A  	fcall	stringdir
  4206  10FD  00CD               	movwf	??_fround+5
  4207  10FE  160A  158A  200A  160A  118A  	fcall	stringdir
  4208  1103  00CE               	movwf	??_fround+6
  4209  1104  084E               	movf	??_fround+6,w
  4210  1105  00AD               	movwf	___flmul@b+3
  4211  1106  084D               	movf	??_fround+5,w
  4212  1107  00AC               	movwf	___flmul@b+2
  4213  1108  084C               	movf	??_fround+4,w
  4214  1109  00AB               	movwf	___flmul@b+1
  4215  110A  084B               	movf	??_fround+3,w
  4216  110B  00AA               	movwf	___flmul@b
  4217  110C  0856               	movf	_fround$1189+3,w
  4218  110D  00B1               	movwf	___flmul@a+3
  4219  110E  0855               	movf	_fround$1189+2,w
  4220  110F  00B0               	movwf	___flmul@a+2
  4221  1110  0854               	movf	_fround$1189+1,w
  4222  1111  00AF               	movwf	___flmul@a+1
  4223  1112  0853               	movf	_fround$1189,w
  4224  1113  00AE               	movwf	___flmul@a
  4225  1114  120A  158A  213C  160A  118A  	fcall	___flmul
  4226  1119  1283               	bcf	3,5	;RP0=0, select bank0
  4227  111A  1303               	bcf	3,6	;RP1=0, select bank0
  4228  111B  082D               	movf	?___flmul+3,w
  4229  111C  00D2               	movwf	_fround$1190+3
  4230  111D  082C               	movf	?___flmul+2,w
  4231  111E  00D1               	movwf	_fround$1190+2
  4232  111F  082B               	movf	?___flmul+1,w
  4233  1120  00D0               	movwf	_fround$1190+1
  4234  1121  082A               	movf	?___flmul,w
  4235  1122  00CF               	movwf	_fround$1190
  4236                           
  4237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4238  1123  300A               	movlw	10
  4239  1124  00F3               	movwf	___lwmod@divisor
  4240  1125  3000               	movlw	0
  4241  1126  00F4               	movwf	___lwmod@divisor+1
  4242  1127  0857               	movf	fround@prec,w
  4243  1128  00C8               	movwf	??_fround
  4244  1129  01C9               	clrf	??_fround+1
  4245  112A  0848               	movf	??_fround,w
  4246  112B  00F5               	movwf	___lwmod@dividend
  4247  112C  0849               	movf	??_fround+1,w
  4248  112D  00F6               	movwf	___lwmod@dividend+1
  4249  112E  160A  158A  223F  160A  118A  	fcall	___lwmod
  4250  1133  0873               	movf	?___lwmod,w
  4251  1134  1283               	bcf	3,5	;RP0=0, select bank0
  4252  1135  1303               	bcf	3,6	;RP1=0, select bank0
  4253  1136  00CA               	movwf	??_fround+2
  4254  1137  3001               	movlw	1
  4255  1138                     u4205:
  4256  1138  1003               	clrc
  4257  1139  0DCA               	rlf	??_fround+2,f
  4258  113A  3EFF               	addlw	-1
  4259  113B  1D03               	skipz
  4260  113C  2938               	goto	u4205
  4261  113D  1003               	clrc
  4262  113E  0D4A               	rlf	??_fround+2,w
  4263  113F  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4264  1140  0084               	movwf	4
  4265  1141  160A  158A  200A  160A  118A  	fcall	stringdir
  4266  1146  00CB               	movwf	??_fround+3
  4267  1147  160A  158A  200A  160A  118A  	fcall	stringdir
  4268  114C  00CC               	movwf	??_fround+4
  4269  114D  160A  158A  200A  160A  118A  	fcall	stringdir
  4270  1152  00CD               	movwf	??_fround+5
  4271  1153  160A  158A  200A  160A  118A  	fcall	stringdir
  4272  1158  00CE               	movwf	??_fround+6
  4273  1159  084E               	movf	??_fround+6,w
  4274  115A  00AD               	movwf	___flmul@b+3
  4275  115B  084D               	movf	??_fround+5,w
  4276  115C  00AC               	movwf	___flmul@b+2
  4277  115D  084C               	movf	??_fround+4,w
  4278  115E  00AB               	movwf	___flmul@b+1
  4279  115F  084B               	movf	??_fround+3,w
  4280  1160  00AA               	movwf	___flmul@b
  4281  1161  0852               	movf	_fround$1190+3,w
  4282  1162  00B1               	movwf	___flmul@a+3
  4283  1163  0851               	movf	_fround$1190+2,w
  4284  1164  00B0               	movwf	___flmul@a+2
  4285  1165  0850               	movf	_fround$1190+1,w
  4286  1166  00AF               	movwf	___flmul@a+1
  4287  1167  084F               	movf	_fround$1190,w
  4288  1168  00AE               	movwf	___flmul@a
  4289  1169  120A  158A  213C  160A  118A  	fcall	___flmul
  4290  116E  1283               	bcf	3,5	;RP0=0, select bank0
  4291  116F  1303               	bcf	3,6	;RP1=0, select bank0
  4292  1170  082D               	movf	?___flmul+3,w
  4293  1171  00C7               	movwf	?_fround+3
  4294  1172  082C               	movf	?___flmul+2,w
  4295  1173  00C6               	movwf	?_fround+2
  4296  1174  082B               	movf	?___flmul+1,w
  4297  1175  00C5               	movwf	?_fround+1
  4298  1176  082A               	movf	?___flmul,w
  4299  1177  00C4               	movwf	?_fround
  4300  1178  2A6D               	goto	l290
  4301  1179                     l2866:
  4302  1179  300B               	movlw	11
  4303  117A  0257               	subwf	fround@prec,w
  4304  117B  1C03               	skipc
  4305  117C  297E               	goto	u4211
  4306  117D  297F               	goto	u4210
  4307  117E                     u4211:
  4308  117E  2A2A               	goto	l2872
  4309  117F                     u4210:
  4310  117F                     l2868:
  4311                           
  4312                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4313  117F  303F               	movlw	63
  4314  1180  00AD               	movwf	___flmul@b+3
  4315  1181  3000               	movlw	0
  4316  1182  00AC               	movwf	___flmul@b+2
  4317  1183  3000               	movlw	0
  4318  1184  00AB               	movwf	___flmul@b+1
  4319  1185  3000               	movlw	0
  4320  1186  00AA               	movwf	___flmul@b
  4321  1187  300A               	movlw	10
  4322  1188  00A0               	movwf	___lwdiv@divisor
  4323  1189  3000               	movlw	0
  4324  118A  00A1               	movwf	___lwdiv@divisor+1
  4325  118B  0857               	movf	fround@prec,w
  4326  118C  00C8               	movwf	??_fround
  4327  118D  01C9               	clrf	??_fround+1
  4328  118E  0848               	movf	??_fround,w
  4329  118F  00A2               	movwf	___lwdiv@dividend
  4330  1190  0849               	movf	??_fround+1,w
  4331  1191  00A3               	movwf	___lwdiv@dividend+1
  4332  1192  160A  158A  2343  160A  118A  	fcall	___lwdiv
  4333  1197  1283               	bcf	3,5	;RP0=0, select bank0
  4334  1198  1303               	bcf	3,6	;RP1=0, select bank0
  4335  1199  0820               	movf	?___lwdiv,w
  4336  119A  00CA               	movwf	??_fround+2
  4337  119B  3001               	movlw	1
  4338  119C                     u4225:
  4339  119C  1003               	clrc
  4340  119D  0DCA               	rlf	??_fround+2,f
  4341  119E  3EFF               	addlw	-1
  4342  119F  1D03               	skipz
  4343  11A0  299C               	goto	u4225
  4344  11A1  1003               	clrc
  4345  11A2  0D4A               	rlf	??_fround+2,w
  4346  11A3  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4347  11A4  0084               	movwf	4
  4348  11A5  160A  158A  200A  160A  118A  	fcall	stringdir
  4349  11AA  00CB               	movwf	??_fround+3
  4350  11AB  160A  158A  200A  160A  118A  	fcall	stringdir
  4351  11B0  00CC               	movwf	??_fround+4
  4352  11B1  160A  158A  200A  160A  118A  	fcall	stringdir
  4353  11B6  00CD               	movwf	??_fround+5
  4354  11B7  160A  158A  200A  160A  118A  	fcall	stringdir
  4355  11BC  00CE               	movwf	??_fround+6
  4356  11BD  084E               	movf	??_fround+6,w
  4357  11BE  00B1               	movwf	___flmul@a+3
  4358  11BF  084D               	movf	??_fround+5,w
  4359  11C0  00B0               	movwf	___flmul@a+2
  4360  11C1  084C               	movf	??_fround+4,w
  4361  11C2  00AF               	movwf	___flmul@a+1
  4362  11C3  084B               	movf	??_fround+3,w
  4363  11C4  00AE               	movwf	___flmul@a
  4364  11C5  120A  158A  213C  160A  118A  	fcall	___flmul
  4365  11CA  1283               	bcf	3,5	;RP0=0, select bank0
  4366  11CB  1303               	bcf	3,6	;RP1=0, select bank0
  4367  11CC  082D               	movf	?___flmul+3,w
  4368  11CD  00D6               	movwf	_fround$1189+3
  4369  11CE  082C               	movf	?___flmul+2,w
  4370  11CF  00D5               	movwf	_fround$1189+2
  4371  11D0  082B               	movf	?___flmul+1,w
  4372  11D1  00D4               	movwf	_fround$1189+1
  4373  11D2  082A               	movf	?___flmul,w
  4374  11D3  00D3               	movwf	_fround$1189
  4375                           
  4376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4377  11D4  300A               	movlw	10
  4378  11D5  00F3               	movwf	___lwmod@divisor
  4379  11D6  3000               	movlw	0
  4380  11D7  00F4               	movwf	___lwmod@divisor+1
  4381  11D8  0857               	movf	fround@prec,w
  4382  11D9  00C8               	movwf	??_fround
  4383  11DA  01C9               	clrf	??_fround+1
  4384  11DB  0848               	movf	??_fround,w
  4385  11DC  00F5               	movwf	___lwmod@dividend
  4386  11DD  0849               	movf	??_fround+1,w
  4387  11DE  00F6               	movwf	___lwmod@dividend+1
  4388  11DF  160A  158A  223F  160A  118A  	fcall	___lwmod
  4389  11E4  0873               	movf	?___lwmod,w
  4390  11E5  1283               	bcf	3,5	;RP0=0, select bank0
  4391  11E6  1303               	bcf	3,6	;RP1=0, select bank0
  4392  11E7  00CA               	movwf	??_fround+2
  4393  11E8  3001               	movlw	1
  4394  11E9                     u4235:
  4395  11E9  1003               	clrc
  4396  11EA  0DCA               	rlf	??_fround+2,f
  4397  11EB  3EFF               	addlw	-1
  4398  11EC  1D03               	skipz
  4399  11ED  29E9               	goto	u4235
  4400  11EE  1003               	clrc
  4401  11EF  0D4A               	rlf	??_fround+2,w
  4402  11F0  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4403  11F1  0084               	movwf	4
  4404  11F2  160A  158A  200A  160A  118A  	fcall	stringdir
  4405  11F7  00CB               	movwf	??_fround+3
  4406  11F8  160A  158A  200A  160A  118A  	fcall	stringdir
  4407  11FD  00CC               	movwf	??_fround+4
  4408  11FE  160A  158A  200A  160A  118A  	fcall	stringdir
  4409  1203  00CD               	movwf	??_fround+5
  4410  1204  160A  158A  200A  160A  118A  	fcall	stringdir
  4411  1209  00CE               	movwf	??_fround+6
  4412  120A  084E               	movf	??_fround+6,w
  4413  120B  00AD               	movwf	___flmul@b+3
  4414  120C  084D               	movf	??_fround+5,w
  4415  120D  00AC               	movwf	___flmul@b+2
  4416  120E  084C               	movf	??_fround+4,w
  4417  120F  00AB               	movwf	___flmul@b+1
  4418  1210  084B               	movf	??_fround+3,w
  4419  1211  00AA               	movwf	___flmul@b
  4420  1212  0856               	movf	_fround$1189+3,w
  4421  1213  00B1               	movwf	___flmul@a+3
  4422  1214  0855               	movf	_fround$1189+2,w
  4423  1215  00B0               	movwf	___flmul@a+2
  4424  1216  0854               	movf	_fround$1189+1,w
  4425  1217  00AF               	movwf	___flmul@a+1
  4426  1218  0853               	movf	_fround$1189,w
  4427  1219  00AE               	movwf	___flmul@a
  4428  121A  120A  158A  213C  160A  118A  	fcall	___flmul
  4429  121F  1283               	bcf	3,5	;RP0=0, select bank0
  4430  1220  1303               	bcf	3,6	;RP1=0, select bank0
  4431  1221  082D               	movf	?___flmul+3,w
  4432  1222  00C7               	movwf	?_fround+3
  4433  1223  082C               	movf	?___flmul+2,w
  4434  1224  00C6               	movwf	?_fround+2
  4435  1225  082B               	movf	?___flmul+1,w
  4436  1226  00C5               	movwf	?_fround+1
  4437  1227  082A               	movf	?___flmul,w
  4438  1228  00C4               	movwf	?_fround
  4439  1229  2A6D               	goto	l290
  4440  122A                     l2872:
  4441                           
  4442                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4443  122A  303F               	movlw	63
  4444  122B  00AD               	movwf	___flmul@b+3
  4445  122C  3000               	movlw	0
  4446  122D  00AC               	movwf	___flmul@b+2
  4447  122E  3000               	movlw	0
  4448  122F  00AB               	movwf	___flmul@b+1
  4449  1230  3000               	movlw	0
  4450  1231  00AA               	movwf	___flmul@b
  4451  1232  0857               	movf	fround@prec,w
  4452  1233  00C8               	movwf	??_fround
  4453  1234  3001               	movlw	1
  4454  1235                     u4245:
  4455  1235  1003               	clrc
  4456  1236  0DC8               	rlf	??_fround,f
  4457  1237  3EFF               	addlw	-1
  4458  1238  1D03               	skipz
  4459  1239  2A35               	goto	u4245
  4460  123A  1003               	clrc
  4461  123B  0D48               	rlf	??_fround,w
  4462  123C  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4463  123D  0084               	movwf	4
  4464  123E  160A  158A  200A  160A  118A  	fcall	stringdir
  4465  1243  00C9               	movwf	??_fround+1
  4466  1244  160A  158A  200A  160A  118A  	fcall	stringdir
  4467  1249  00CA               	movwf	??_fround+2
  4468  124A  160A  158A  200A  160A  118A  	fcall	stringdir
  4469  124F  00CB               	movwf	??_fround+3
  4470  1250  160A  158A  200A  160A  118A  	fcall	stringdir
  4471  1255  00CC               	movwf	??_fround+4
  4472  1256  084C               	movf	??_fround+4,w
  4473  1257  00B1               	movwf	___flmul@a+3
  4474  1258  084B               	movf	??_fround+3,w
  4475  1259  00B0               	movwf	___flmul@a+2
  4476  125A  084A               	movf	??_fround+2,w
  4477  125B  00AF               	movwf	___flmul@a+1
  4478  125C  0849               	movf	??_fround+1,w
  4479  125D  00AE               	movwf	___flmul@a
  4480  125E  120A  158A  213C  160A  118A  	fcall	___flmul
  4481  1263  1283               	bcf	3,5	;RP0=0, select bank0
  4482  1264  1303               	bcf	3,6	;RP1=0, select bank0
  4483  1265  082D               	movf	?___flmul+3,w
  4484  1266  00C7               	movwf	?_fround+3
  4485  1267  082C               	movf	?___flmul+2,w
  4486  1268  00C6               	movwf	?_fround+2
  4487  1269  082B               	movf	?___flmul+1,w
  4488  126A  00C5               	movwf	?_fround+1
  4489  126B  082A               	movf	?___flmul,w
  4490  126C  00C4               	movwf	?_fround
  4491  126D                     l290:
  4492  126D  0008               	return
  4493  126E                     __end_of_fround:
  4494                           
  4495                           	psect	text8
  4496  1A3F                     __ptext8:	
  4497 ;; *************** function ___lwmod *****************
  4498 ;; Defined at:
  4499 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4500 ;; Parameters:    Size  Location     Type
  4501 ;;  divisor         2    3[COMMON] unsigned int 
  4502 ;;  dividend        2    5[COMMON] unsigned int 
  4503 ;; Auto vars:     Size  Location     Type
  4504 ;;  counter         1    8[COMMON] unsigned char 
  4505 ;; Return value:  Size  Location     Type
  4506 ;;                  2    3[COMMON] unsigned int 
  4507 ;; Registers used:
  4508 ;;		wreg, status,2, status,0
  4509 ;; Tracked objects:
  4510 ;;		On entry : 0/0
  4511 ;;		On exit  : 0/0
  4512 ;;		Unchanged: 0/0
  4513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4514 ;;      Params:         4       0       0       0       0
  4515 ;;      Locals:         1       0       0       0       0
  4516 ;;      Temps:          1       0       0       0       0
  4517 ;;      Totals:         6       0       0       0       0
  4518 ;;Total ram usage:        6 bytes
  4519 ;; Hardware stack levels used:    1
  4520 ;; Hardware stack levels required when called:    1
  4521 ;; This function calls:
  4522 ;;		Nothing
  4523 ;; This function is called by:
  4524 ;;		_fround
  4525 ;; This function uses a non-reentrant model
  4526 ;;
  4527                           
  4528                           
  4529                           ;psect for function ___lwmod
  4530  1A3F                     ___lwmod:
  4531  1A3F                     l2478:	
  4532                           ;incstack = 0
  4533                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4534                           
  4535  1A3F  0873               	movf	___lwmod@divisor,w
  4536  1A40  0474               	iorwf	___lwmod@divisor+1,w
  4537  1A41  1903               	btfsc	3,2
  4538  1A42  2A44               	goto	u3281
  4539  1A43  2A45               	goto	u3280
  4540  1A44                     u3281:
  4541  1A44  2A74               	goto	l2496
  4542  1A45                     u3280:
  4543  1A45                     l2480:
  4544  1A45  01F8               	clrf	___lwmod@counter
  4545  1A46  0AF8               	incf	___lwmod@counter,f
  4546  1A47  2A53               	goto	l2486
  4547  1A48                     l2482:
  4548  1A48  3001               	movlw	1
  4549  1A49                     u3295:
  4550  1A49  1003               	clrc
  4551  1A4A  0DF3               	rlf	___lwmod@divisor,f
  4552  1A4B  0DF4               	rlf	___lwmod@divisor+1,f
  4553  1A4C  3EFF               	addlw	-1
  4554  1A4D  1D03               	skipz
  4555  1A4E  2A49               	goto	u3295
  4556  1A4F                     l2484:
  4557  1A4F  3001               	movlw	1
  4558  1A50  00F7               	movwf	??___lwmod
  4559  1A51  0877               	movf	??___lwmod,w
  4560  1A52  07F8               	addwf	___lwmod@counter,f
  4561  1A53                     l2486:
  4562  1A53  1FF4               	btfss	___lwmod@divisor+1,7
  4563  1A54  2A56               	goto	u3301
  4564  1A55  2A57               	goto	u3300
  4565  1A56                     u3301:
  4566  1A56  2A48               	goto	l2482
  4567  1A57                     u3300:
  4568  1A57                     l2488:
  4569  1A57  0874               	movf	___lwmod@divisor+1,w
  4570  1A58  0276               	subwf	___lwmod@dividend+1,w
  4571  1A59  1D03               	skipz
  4572  1A5A  2A5D               	goto	u3315
  4573  1A5B  0873               	movf	___lwmod@divisor,w
  4574  1A5C  0275               	subwf	___lwmod@dividend,w
  4575  1A5D                     u3315:
  4576  1A5D  1C03               	skipc
  4577  1A5E  2A60               	goto	u3311
  4578  1A5F  2A61               	goto	u3310
  4579  1A60                     u3311:
  4580  1A60  2A67               	goto	l2492
  4581  1A61                     u3310:
  4582  1A61                     l2490:
  4583  1A61  0873               	movf	___lwmod@divisor,w
  4584  1A62  02F5               	subwf	___lwmod@dividend,f
  4585  1A63  0874               	movf	___lwmod@divisor+1,w
  4586  1A64  1C03               	skipc
  4587  1A65  03F6               	decf	___lwmod@dividend+1,f
  4588  1A66  02F6               	subwf	___lwmod@dividend+1,f
  4589  1A67                     l2492:
  4590  1A67  3001               	movlw	1
  4591  1A68                     u3325:
  4592  1A68  1003               	clrc
  4593  1A69  0CF4               	rrf	___lwmod@divisor+1,f
  4594  1A6A  0CF3               	rrf	___lwmod@divisor,f
  4595  1A6B  3EFF               	addlw	-1
  4596  1A6C  1D03               	skipz
  4597  1A6D  2A68               	goto	u3325
  4598  1A6E                     l2494:
  4599  1A6E  3001               	movlw	1
  4600  1A6F  02F8               	subwf	___lwmod@counter,f
  4601  1A70  1D03               	btfss	3,2
  4602  1A71  2A73               	goto	u3331
  4603  1A72  2A74               	goto	u3330
  4604  1A73                     u3331:
  4605  1A73  2A57               	goto	l2488
  4606  1A74                     u3330:
  4607  1A74                     l2496:
  4608  1A74  0876               	movf	___lwmod@dividend+1,w
  4609  1A75  00F4               	movwf	?___lwmod+1
  4610  1A76  0875               	movf	___lwmod@dividend,w
  4611  1A77  00F3               	movwf	?___lwmod
  4612  1A78                     l709:
  4613  1A78  0008               	return
  4614  1A79                     __end_of___lwmod:
  4615                           
  4616                           	psect	text9
  4617  1B43                     __ptext9:	
  4618 ;; *************** function ___lwdiv *****************
  4619 ;; Defined at:
  4620 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4621 ;; Parameters:    Size  Location     Type
  4622 ;;  divisor         2    0[BANK0 ] unsigned int 
  4623 ;;  dividend        2    2[BANK0 ] unsigned int 
  4624 ;; Auto vars:     Size  Location     Type
  4625 ;;  quotient        2    4[BANK0 ] unsigned int 
  4626 ;;  counter         1    6[BANK0 ] unsigned char 
  4627 ;; Return value:  Size  Location     Type
  4628 ;;                  2    0[BANK0 ] unsigned int 
  4629 ;; Registers used:
  4630 ;;		wreg, status,2, status,0
  4631 ;; Tracked objects:
  4632 ;;		On entry : 0/0
  4633 ;;		On exit  : 0/0
  4634 ;;		Unchanged: 0/0
  4635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4636 ;;      Params:         0       4       0       0       0
  4637 ;;      Locals:         0       3       0       0       0
  4638 ;;      Temps:          1       0       0       0       0
  4639 ;;      Totals:         1       7       0       0       0
  4640 ;;Total ram usage:        8 bytes
  4641 ;; Hardware stack levels used:    1
  4642 ;; Hardware stack levels required when called:    1
  4643 ;; This function calls:
  4644 ;;		Nothing
  4645 ;; This function is called by:
  4646 ;;		_fround
  4647 ;; This function uses a non-reentrant model
  4648 ;;
  4649                           
  4650                           
  4651                           ;psect for function ___lwdiv
  4652  1B43                     ___lwdiv:
  4653  1B43                     l2452:	
  4654                           ;incstack = 0
  4655                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4656                           
  4657  1B43  1283               	bcf	3,5	;RP0=0, select bank0
  4658  1B44  1303               	bcf	3,6	;RP1=0, select bank0
  4659  1B45  01A4               	clrf	___lwdiv@quotient
  4660  1B46  01A5               	clrf	___lwdiv@quotient+1
  4661  1B47                     l2454:
  4662  1B47  0820               	movf	___lwdiv@divisor,w
  4663  1B48  0421               	iorwf	___lwdiv@divisor+1,w
  4664  1B49  1903               	btfsc	3,2
  4665  1B4A  2B4C               	goto	u3211
  4666  1B4B  2B4D               	goto	u3210
  4667  1B4C                     u3211:
  4668  1B4C  2B84               	goto	l2474
  4669  1B4D                     u3210:
  4670  1B4D                     l2456:
  4671  1B4D  01A6               	clrf	___lwdiv@counter
  4672  1B4E  0AA6               	incf	___lwdiv@counter,f
  4673  1B4F  2B5B               	goto	l2462
  4674  1B50                     l2458:
  4675  1B50  3001               	movlw	1
  4676  1B51                     u3225:
  4677  1B51  1003               	clrc
  4678  1B52  0DA0               	rlf	___lwdiv@divisor,f
  4679  1B53  0DA1               	rlf	___lwdiv@divisor+1,f
  4680  1B54  3EFF               	addlw	-1
  4681  1B55  1D03               	skipz
  4682  1B56  2B51               	goto	u3225
  4683  1B57                     l2460:
  4684  1B57  3001               	movlw	1
  4685  1B58  00F9               	movwf	??___lwdiv
  4686  1B59  0879               	movf	??___lwdiv,w
  4687  1B5A  07A6               	addwf	___lwdiv@counter,f
  4688  1B5B                     l2462:
  4689  1B5B  1FA1               	btfss	___lwdiv@divisor+1,7
  4690  1B5C  2B5E               	goto	u3231
  4691  1B5D  2B5F               	goto	u3230
  4692  1B5E                     u3231:
  4693  1B5E  2B50               	goto	l2458
  4694  1B5F                     u3230:
  4695  1B5F                     l2464:
  4696  1B5F  3001               	movlw	1
  4697  1B60                     u3245:
  4698  1B60  1003               	clrc
  4699  1B61  0DA4               	rlf	___lwdiv@quotient,f
  4700  1B62  0DA5               	rlf	___lwdiv@quotient+1,f
  4701  1B63  3EFF               	addlw	-1
  4702  1B64  1D03               	skipz
  4703  1B65  2B60               	goto	u3245
  4704  1B66  0821               	movf	___lwdiv@divisor+1,w
  4705  1B67  0223               	subwf	___lwdiv@dividend+1,w
  4706  1B68  1D03               	skipz
  4707  1B69  2B6C               	goto	u3255
  4708  1B6A  0820               	movf	___lwdiv@divisor,w
  4709  1B6B  0222               	subwf	___lwdiv@dividend,w
  4710  1B6C                     u3255:
  4711  1B6C  1C03               	skipc
  4712  1B6D  2B6F               	goto	u3251
  4713  1B6E  2B70               	goto	u3250
  4714  1B6F                     u3251:
  4715  1B6F  2B77               	goto	l2470
  4716  1B70                     u3250:
  4717  1B70                     l2466:
  4718  1B70  0820               	movf	___lwdiv@divisor,w
  4719  1B71  02A2               	subwf	___lwdiv@dividend,f
  4720  1B72  0821               	movf	___lwdiv@divisor+1,w
  4721  1B73  1C03               	skipc
  4722  1B74  03A3               	decf	___lwdiv@dividend+1,f
  4723  1B75  02A3               	subwf	___lwdiv@dividend+1,f
  4724  1B76                     l2468:
  4725  1B76  1424               	bsf	___lwdiv@quotient,0
  4726  1B77                     l2470:
  4727  1B77  3001               	movlw	1
  4728  1B78                     u3265:
  4729  1B78  1003               	clrc
  4730  1B79  0CA1               	rrf	___lwdiv@divisor+1,f
  4731  1B7A  0CA0               	rrf	___lwdiv@divisor,f
  4732  1B7B  3EFF               	addlw	-1
  4733  1B7C  1D03               	skipz
  4734  1B7D  2B78               	goto	u3265
  4735  1B7E                     l2472:
  4736  1B7E  3001               	movlw	1
  4737  1B7F  02A6               	subwf	___lwdiv@counter,f
  4738  1B80  1D03               	btfss	3,2
  4739  1B81  2B83               	goto	u3271
  4740  1B82  2B84               	goto	u3270
  4741  1B83                     u3271:
  4742  1B83  2B5F               	goto	l2464
  4743  1B84                     u3270:
  4744  1B84                     l2474:
  4745  1B84  0825               	movf	___lwdiv@quotient+1,w
  4746  1B85  00A1               	movwf	?___lwdiv+1
  4747  1B86  0824               	movf	___lwdiv@quotient,w
  4748  1B87  00A0               	movwf	?___lwdiv
  4749  1B88                     l699:
  4750  1B88  0008               	return
  4751  1B89                     __end_of___lwdiv:
  4752                           
  4753                           	psect	text10
  4754  093C                     __ptext10:	
  4755 ;; *************** function ___flmul *****************
  4756 ;; Defined at:
  4757 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4758 ;; Parameters:    Size  Location     Type
  4759 ;;  b               4   10[BANK0 ] unsigned int 
  4760 ;;  a               4   14[BANK0 ] unsigned int 
  4761 ;; Auto vars:     Size  Location     Type
  4762 ;;  prod            4   30[BANK0 ] struct .
  4763 ;;  grs             4   24[BANK0 ] unsigned long 
  4764 ;;  temp            2   34[BANK0 ] struct .
  4765 ;;  bexp            1   29[BANK0 ] unsigned char 
  4766 ;;  aexp            1   28[BANK0 ] unsigned char 
  4767 ;;  sign            1   23[BANK0 ] unsigned char 
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  4   10[BANK0 ] unsigned char 
  4770 ;; Registers used:
  4771 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4777 ;;      Params:         0       8       0       0       0
  4778 ;;      Locals:         0      13       0       0       0
  4779 ;;      Temps:          0       5       0       0       0
  4780 ;;      Totals:         0      26       0       0       0
  4781 ;;Total ram usage:       26 bytes
  4782 ;; Hardware stack levels used:    1
  4783 ;; Hardware stack levels required when called:    2
  4784 ;; This function calls:
  4785 ;;		__Umul8_16
  4786 ;; This function is called by:
  4787 ;;		_main
  4788 ;;		_fround
  4789 ;;		_scale
  4790 ;;		_sprintf
  4791 ;; This function uses a non-reentrant model
  4792 ;;
  4793                           
  4794                           
  4795                           ;psect for function ___flmul
  4796  093C                     ___flmul:
  4797  093C                     l2694:	
  4798                           ;incstack = 0
  4799                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4800                           
  4801  093C  1283               	bcf	3,5	;RP0=0, select bank0
  4802  093D  1303               	bcf	3,6	;RP1=0, select bank0
  4803  093E  082D               	movf	___flmul@b+3,w
  4804  093F  3980               	andlw	128
  4805  0940  00B2               	movwf	??___flmul
  4806  0941  0832               	movf	??___flmul,w
  4807  0942  00B7               	movwf	___flmul@sign
  4808  0943                     l2696:
  4809  0943  082D               	movf	___flmul@b+3,w
  4810  0944  00B2               	movwf	??___flmul
  4811  0945  0732               	addwf	??___flmul,w
  4812  0946  00B3               	movwf	??___flmul+1
  4813  0947  0833               	movf	??___flmul+1,w
  4814  0948  00BD               	movwf	___flmul@bexp
  4815  0949                     l2698:
  4816  0949  1FAC               	btfss	___flmul@b+2,7
  4817  094A  294C               	goto	u3801
  4818  094B  294D               	goto	u3800
  4819  094C                     u3801:
  4820  094C  294E               	goto	l2702
  4821  094D                     u3800:
  4822  094D                     l2700:
  4823  094D  143D               	bsf	___flmul@bexp,0
  4824  094E                     l2702:
  4825  094E  083D               	movf	___flmul@bexp,w
  4826  094F  1903               	btfsc	3,2
  4827  0950  2952               	goto	u3811
  4828  0951  2953               	goto	u3810
  4829  0952                     u3811:
  4830  0952  2962               	goto	l2710
  4831  0953                     u3810:
  4832  0953                     l2704:
  4833  0953  0A3D               	incf	___flmul@bexp,w
  4834  0954  1D03               	btfss	3,2
  4835  0955  2957               	goto	u3821
  4836  0956  2958               	goto	u3820
  4837  0957                     u3821:
  4838  0957  2960               	goto	l2708
  4839  0958                     u3820:
  4840  0958                     l2706:
  4841  0958  3000               	movlw	0
  4842  0959  00AD               	movwf	___flmul@b+3
  4843  095A  3000               	movlw	0
  4844  095B  00AC               	movwf	___flmul@b+2
  4845  095C  3000               	movlw	0
  4846  095D  00AB               	movwf	___flmul@b+1
  4847  095E  3000               	movlw	0
  4848  095F  00AA               	movwf	___flmul@b
  4849  0960                     l2708:
  4850  0960  17AC               	bsf	___flmul@b+2,7
  4851  0961  296A               	goto	l2712
  4852  0962                     l2710:
  4853  0962  3000               	movlw	0
  4854  0963  00AD               	movwf	___flmul@b+3
  4855  0964  3000               	movlw	0
  4856  0965  00AC               	movwf	___flmul@b+2
  4857  0966  3000               	movlw	0
  4858  0967  00AB               	movwf	___flmul@b+1
  4859  0968  3000               	movlw	0
  4860  0969  00AA               	movwf	___flmul@b
  4861  096A                     l2712:
  4862  096A  0831               	movf	___flmul@a+3,w
  4863  096B  3980               	andlw	128
  4864  096C  00B2               	movwf	??___flmul
  4865  096D  0832               	movf	??___flmul,w
  4866  096E  06B7               	xorwf	___flmul@sign,f
  4867  096F                     l2714:
  4868  096F  0831               	movf	___flmul@a+3,w
  4869  0970  00B2               	movwf	??___flmul
  4870  0971  0732               	addwf	??___flmul,w
  4871  0972  00B3               	movwf	??___flmul+1
  4872  0973  0833               	movf	??___flmul+1,w
  4873  0974  00BC               	movwf	___flmul@aexp
  4874  0975                     l2716:
  4875  0975  1FB0               	btfss	___flmul@a+2,7
  4876  0976  2978               	goto	u3831
  4877  0977  2979               	goto	u3830
  4878  0978                     u3831:
  4879  0978  297A               	goto	l2720
  4880  0979                     u3830:
  4881  0979                     l2718:
  4882  0979  143C               	bsf	___flmul@aexp,0
  4883  097A                     l2720:
  4884  097A  083C               	movf	___flmul@aexp,w
  4885  097B  1903               	btfsc	3,2
  4886  097C  297E               	goto	u3841
  4887  097D  297F               	goto	u3840
  4888  097E                     u3841:
  4889  097E  298E               	goto	l2728
  4890  097F                     u3840:
  4891  097F                     l2722:
  4892  097F  0A3C               	incf	___flmul@aexp,w
  4893  0980  1D03               	btfss	3,2
  4894  0981  2983               	goto	u3851
  4895  0982  2984               	goto	u3850
  4896  0983                     u3851:
  4897  0983  298C               	goto	l2726
  4898  0984                     u3850:
  4899  0984                     l2724:
  4900  0984  3000               	movlw	0
  4901  0985  00B1               	movwf	___flmul@a+3
  4902  0986  3000               	movlw	0
  4903  0987  00B0               	movwf	___flmul@a+2
  4904  0988  3000               	movlw	0
  4905  0989  00AF               	movwf	___flmul@a+1
  4906  098A  3000               	movlw	0
  4907  098B  00AE               	movwf	___flmul@a
  4908  098C                     l2726:
  4909  098C  17B0               	bsf	___flmul@a+2,7
  4910  098D  2996               	goto	l2730
  4911  098E                     l2728:
  4912  098E  3000               	movlw	0
  4913  098F  00B1               	movwf	___flmul@a+3
  4914  0990  3000               	movlw	0
  4915  0991  00B0               	movwf	___flmul@a+2
  4916  0992  3000               	movlw	0
  4917  0993  00AF               	movwf	___flmul@a+1
  4918  0994  3000               	movlw	0
  4919  0995  00AE               	movwf	___flmul@a
  4920  0996                     l2730:
  4921  0996  083C               	movf	___flmul@aexp,w
  4922  0997  1903               	btfsc	3,2
  4923  0998  299A               	goto	u3861
  4924  0999  299B               	goto	u3860
  4925  099A                     u3861:
  4926  099A  29A0               	goto	l2734
  4927  099B                     u3860:
  4928  099B                     l2732:
  4929  099B  083D               	movf	___flmul@bexp,w
  4930  099C  1D03               	btfss	3,2
  4931  099D  299F               	goto	u3871
  4932  099E  29A0               	goto	u3870
  4933  099F                     u3871:
  4934  099F  29A9               	goto	l2738
  4935  09A0                     u3870:
  4936  09A0                     l2734:
  4937  09A0  3000               	movlw	0
  4938  09A1  00AD               	movwf	?___flmul+3
  4939  09A2  3000               	movlw	0
  4940  09A3  00AC               	movwf	?___flmul+2
  4941  09A4  3000               	movlw	0
  4942  09A5  00AB               	movwf	?___flmul+1
  4943  09A6  3000               	movlw	0
  4944  09A7  00AA               	movwf	?___flmul
  4945  09A8  2C9C               	goto	l816
  4946  09A9                     l2738:
  4947  09A9  082A               	movf	___flmul@b,w
  4948  09AA  00B2               	movwf	??___flmul
  4949  09AB  0832               	movf	??___flmul,w
  4950  09AC  00F3               	movwf	__Umul8_16@multiplicand
  4951  09AD  0830               	movf	___flmul@a+2,w
  4952  09AE  160A  158A  21E0  120A  158A  	fcall	__Umul8_16
  4953  09B3  0874               	movf	?__Umul8_16+1,w
  4954  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  4955  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  4956  09B6  00C3               	movwf	___flmul@temp+1
  4957  09B7  0873               	movf	?__Umul8_16,w
  4958  09B8  00C2               	movwf	___flmul@temp
  4959  09B9                     l2740:
  4960  09B9  0842               	movf	___flmul@temp,w
  4961  09BA  00B2               	movwf	??___flmul
  4962  09BB  01B3               	clrf	??___flmul+1
  4963  09BC  01B4               	clrf	??___flmul+2
  4964  09BD  01B5               	clrf	??___flmul+3
  4965  09BE  0835               	movf	??___flmul+3,w
  4966  09BF  00BB               	movwf	___flmul@grs+3
  4967  09C0  0834               	movf	??___flmul+2,w
  4968  09C1  00BA               	movwf	___flmul@grs+2
  4969  09C2  0833               	movf	??___flmul+1,w
  4970  09C3  00B9               	movwf	___flmul@grs+1
  4971  09C4  0832               	movf	??___flmul,w
  4972  09C5  00B8               	movwf	___flmul@grs
  4973  09C6                     l2742:
  4974  09C6  0843               	movf	___flmul@temp+1,w
  4975  09C7  00B2               	movwf	??___flmul
  4976  09C8  01B3               	clrf	??___flmul+1
  4977  09C9  01B4               	clrf	??___flmul+2
  4978  09CA  01B5               	clrf	??___flmul+3
  4979  09CB  0835               	movf	??___flmul+3,w
  4980  09CC  00C1               	movwf	___flmul@prod+3
  4981  09CD  0834               	movf	??___flmul+2,w
  4982  09CE  00C0               	movwf	___flmul@prod+2
  4983  09CF  0833               	movf	??___flmul+1,w
  4984  09D0  00BF               	movwf	___flmul@prod+1
  4985  09D1  0832               	movf	??___flmul,w
  4986  09D2  00BE               	movwf	___flmul@prod
  4987  09D3  082B               	movf	___flmul@b+1,w
  4988  09D4  00B2               	movwf	??___flmul
  4989  09D5  0832               	movf	??___flmul,w
  4990  09D6  00F3               	movwf	__Umul8_16@multiplicand
  4991  09D7  082F               	movf	___flmul@a+1,w
  4992  09D8  160A  158A  21E0  120A  158A  	fcall	__Umul8_16
  4993  09DD  0874               	movf	?__Umul8_16+1,w
  4994  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  4995  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  4996  09E0  00C3               	movwf	___flmul@temp+1
  4997  09E1  0873               	movf	?__Umul8_16,w
  4998  09E2  00C2               	movwf	___flmul@temp
  4999  09E3                     l2744:
  5000  09E3  0842               	movf	___flmul@temp,w
  5001  09E4  00B2               	movwf	??___flmul
  5002  09E5  01B3               	clrf	??___flmul+1
  5003  09E6  01B4               	clrf	??___flmul+2
  5004  09E7  01B5               	clrf	??___flmul+3
  5005  09E8  0832               	movf	??___flmul,w
  5006  09E9  07B8               	addwf	___flmul@grs,f
  5007  09EA  0833               	movf	??___flmul+1,w
  5008  09EB  1103               	clrz
  5009  09EC  1803               	skipnc
  5010  09ED  3E01               	addlw	1
  5011  09EE  1903               	skipnz
  5012  09EF  29F1               	goto	u3881
  5013  09F0  07B9               	addwf	___flmul@grs+1,f
  5014  09F1                     u3881:
  5015  09F1  0834               	movf	??___flmul+2,w
  5016  09F2  1103               	clrz
  5017  09F3  1803               	skipnc
  5018  09F4  3E01               	addlw	1
  5019  09F5  1903               	skipnz
  5020  09F6  29F8               	goto	u3882
  5021  09F7  07BA               	addwf	___flmul@grs+2,f
  5022  09F8                     u3882:
  5023  09F8  0835               	movf	??___flmul+3,w
  5024  09F9  1103               	clrz
  5025  09FA  1803               	skipnc
  5026  09FB  3E01               	addlw	1
  5027  09FC  1903               	skipnz
  5028  09FD  29FF               	goto	u3883
  5029  09FE  07BB               	addwf	___flmul@grs+3,f
  5030  09FF                     u3883:
  5031  09FF                     l2746:
  5032  09FF  0843               	movf	___flmul@temp+1,w
  5033  0A00  00B2               	movwf	??___flmul
  5034  0A01  01B3               	clrf	??___flmul+1
  5035  0A02  01B4               	clrf	??___flmul+2
  5036  0A03  01B5               	clrf	??___flmul+3
  5037  0A04  0832               	movf	??___flmul,w
  5038  0A05  07BE               	addwf	___flmul@prod,f
  5039  0A06  0833               	movf	??___flmul+1,w
  5040  0A07  1103               	clrz
  5041  0A08  1803               	skipnc
  5042  0A09  3E01               	addlw	1
  5043  0A0A  1903               	skipnz
  5044  0A0B  2A0D               	goto	u3891
  5045  0A0C  07BF               	addwf	___flmul@prod+1,f
  5046  0A0D                     u3891:
  5047  0A0D  0834               	movf	??___flmul+2,w
  5048  0A0E  1103               	clrz
  5049  0A0F  1803               	skipnc
  5050  0A10  3E01               	addlw	1
  5051  0A11  1903               	skipnz
  5052  0A12  2A14               	goto	u3892
  5053  0A13  07C0               	addwf	___flmul@prod+2,f
  5054  0A14                     u3892:
  5055  0A14  0835               	movf	??___flmul+3,w
  5056  0A15  1103               	clrz
  5057  0A16  1803               	skipnc
  5058  0A17  3E01               	addlw	1
  5059  0A18  1903               	skipnz
  5060  0A19  2A1B               	goto	u3893
  5061  0A1A  07C1               	addwf	___flmul@prod+3,f
  5062  0A1B                     u3893:
  5063  0A1B  082C               	movf	___flmul@b+2,w
  5064  0A1C  00B2               	movwf	??___flmul
  5065  0A1D  0832               	movf	??___flmul,w
  5066  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  5067  0A1F  082E               	movf	___flmul@a,w
  5068  0A20  160A  158A  21E0  120A  158A  	fcall	__Umul8_16
  5069  0A25  0874               	movf	?__Umul8_16+1,w
  5070  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  5071  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  5072  0A28  00C3               	movwf	___flmul@temp+1
  5073  0A29  0873               	movf	?__Umul8_16,w
  5074  0A2A  00C2               	movwf	___flmul@temp
  5075  0A2B                     l2748:
  5076  0A2B  0842               	movf	___flmul@temp,w
  5077  0A2C  00B2               	movwf	??___flmul
  5078  0A2D  01B3               	clrf	??___flmul+1
  5079  0A2E  01B4               	clrf	??___flmul+2
  5080  0A2F  01B5               	clrf	??___flmul+3
  5081  0A30  0832               	movf	??___flmul,w
  5082  0A31  07B8               	addwf	___flmul@grs,f
  5083  0A32  0833               	movf	??___flmul+1,w
  5084  0A33  1103               	clrz
  5085  0A34  1803               	skipnc
  5086  0A35  3E01               	addlw	1
  5087  0A36  1903               	skipnz
  5088  0A37  2A39               	goto	u3901
  5089  0A38  07B9               	addwf	___flmul@grs+1,f
  5090  0A39                     u3901:
  5091  0A39  0834               	movf	??___flmul+2,w
  5092  0A3A  1103               	clrz
  5093  0A3B  1803               	skipnc
  5094  0A3C  3E01               	addlw	1
  5095  0A3D  1903               	skipnz
  5096  0A3E  2A40               	goto	u3902
  5097  0A3F  07BA               	addwf	___flmul@grs+2,f
  5098  0A40                     u3902:
  5099  0A40  0835               	movf	??___flmul+3,w
  5100  0A41  1103               	clrz
  5101  0A42  1803               	skipnc
  5102  0A43  3E01               	addlw	1
  5103  0A44  1903               	skipnz
  5104  0A45  2A47               	goto	u3903
  5105  0A46  07BB               	addwf	___flmul@grs+3,f
  5106  0A47                     u3903:
  5107  0A47                     l2750:
  5108  0A47  0843               	movf	___flmul@temp+1,w
  5109  0A48  00B2               	movwf	??___flmul
  5110  0A49  01B3               	clrf	??___flmul+1
  5111  0A4A  01B4               	clrf	??___flmul+2
  5112  0A4B  01B5               	clrf	??___flmul+3
  5113  0A4C  0832               	movf	??___flmul,w
  5114  0A4D  07BE               	addwf	___flmul@prod,f
  5115  0A4E  0833               	movf	??___flmul+1,w
  5116  0A4F  1103               	clrz
  5117  0A50  1803               	skipnc
  5118  0A51  3E01               	addlw	1
  5119  0A52  1903               	skipnz
  5120  0A53  2A55               	goto	u3911
  5121  0A54  07BF               	addwf	___flmul@prod+1,f
  5122  0A55                     u3911:
  5123  0A55  0834               	movf	??___flmul+2,w
  5124  0A56  1103               	clrz
  5125  0A57  1803               	skipnc
  5126  0A58  3E01               	addlw	1
  5127  0A59  1903               	skipnz
  5128  0A5A  2A5C               	goto	u3912
  5129  0A5B  07C0               	addwf	___flmul@prod+2,f
  5130  0A5C                     u3912:
  5131  0A5C  0835               	movf	??___flmul+3,w
  5132  0A5D  1103               	clrz
  5133  0A5E  1803               	skipnc
  5134  0A5F  3E01               	addlw	1
  5135  0A60  1903               	skipnz
  5136  0A61  2A63               	goto	u3913
  5137  0A62  07C1               	addwf	___flmul@prod+3,f
  5138  0A63                     u3913:
  5139  0A63                     l2752:
  5140  0A63  3008               	movlw	8
  5141  0A64  00B2               	movwf	??___flmul
  5142  0A65                     u3925:
  5143  0A65  1003               	clrc
  5144  0A66  0DB8               	rlf	___flmul@grs,f
  5145  0A67  0DB9               	rlf	___flmul@grs+1,f
  5146  0A68  0DBA               	rlf	___flmul@grs+2,f
  5147  0A69  0DBB               	rlf	___flmul@grs+3,f
  5148  0A6A  0BB2               	decfsz	??___flmul,f
  5149  0A6B  2A65               	goto	u3925
  5150  0A6C                     l2754:
  5151  0A6C  082B               	movf	___flmul@b+1,w
  5152  0A6D  00B2               	movwf	??___flmul
  5153  0A6E  0832               	movf	??___flmul,w
  5154  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  5155  0A70  082E               	movf	___flmul@a,w
  5156  0A71  160A  158A  21E0  120A  158A  	fcall	__Umul8_16
  5157  0A76  0874               	movf	?__Umul8_16+1,w
  5158  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  5159  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  5160  0A79  00C3               	movwf	___flmul@temp+1
  5161  0A7A  0873               	movf	?__Umul8_16,w
  5162  0A7B  00C2               	movwf	___flmul@temp
  5163  0A7C                     l2756:
  5164  0A7C  0842               	movf	___flmul@temp,w
  5165  0A7D  00B2               	movwf	??___flmul
  5166  0A7E  0843               	movf	___flmul@temp+1,w
  5167  0A7F  00B3               	movwf	??___flmul+1
  5168  0A80  01B4               	clrf	??___flmul+2
  5169  0A81  01B5               	clrf	??___flmul+3
  5170  0A82  0832               	movf	??___flmul,w
  5171  0A83  07B8               	addwf	___flmul@grs,f
  5172  0A84  0833               	movf	??___flmul+1,w
  5173  0A85  1103               	clrz
  5174  0A86  1803               	skipnc
  5175  0A87  3E01               	addlw	1
  5176  0A88  1903               	skipnz
  5177  0A89  2A8B               	goto	u3931
  5178  0A8A  07B9               	addwf	___flmul@grs+1,f
  5179  0A8B                     u3931:
  5180  0A8B  0834               	movf	??___flmul+2,w
  5181  0A8C  1103               	clrz
  5182  0A8D  1803               	skipnc
  5183  0A8E  3E01               	addlw	1
  5184  0A8F  1903               	skipnz
  5185  0A90  2A92               	goto	u3932
  5186  0A91  07BA               	addwf	___flmul@grs+2,f
  5187  0A92                     u3932:
  5188  0A92  0835               	movf	??___flmul+3,w
  5189  0A93  1103               	clrz
  5190  0A94  1803               	skipnc
  5191  0A95  3E01               	addlw	1
  5192  0A96  1903               	skipnz
  5193  0A97  2A99               	goto	u3933
  5194  0A98  07BB               	addwf	___flmul@grs+3,f
  5195  0A99                     u3933:
  5196  0A99                     l2758:
  5197  0A99  082A               	movf	___flmul@b,w
  5198  0A9A  00B2               	movwf	??___flmul
  5199  0A9B  0832               	movf	??___flmul,w
  5200  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  5201  0A9D  082F               	movf	___flmul@a+1,w
  5202  0A9E  160A  158A  21E0  120A  158A  	fcall	__Umul8_16
  5203  0AA3  0874               	movf	?__Umul8_16+1,w
  5204  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  5205  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  5206  0AA6  00C3               	movwf	___flmul@temp+1
  5207  0AA7  0873               	movf	?__Umul8_16,w
  5208  0AA8  00C2               	movwf	___flmul@temp
  5209  0AA9                     l2760:
  5210  0AA9  0842               	movf	___flmul@temp,w
  5211  0AAA  00B2               	movwf	??___flmul
  5212  0AAB  0843               	movf	___flmul@temp+1,w
  5213  0AAC  00B3               	movwf	??___flmul+1
  5214  0AAD  01B4               	clrf	??___flmul+2
  5215  0AAE  01B5               	clrf	??___flmul+3
  5216  0AAF  0832               	movf	??___flmul,w
  5217  0AB0  07B8               	addwf	___flmul@grs,f
  5218  0AB1  0833               	movf	??___flmul+1,w
  5219  0AB2  1103               	clrz
  5220  0AB3  1803               	skipnc
  5221  0AB4  3E01               	addlw	1
  5222  0AB5  1903               	skipnz
  5223  0AB6  2AB8               	goto	u3941
  5224  0AB7  07B9               	addwf	___flmul@grs+1,f
  5225  0AB8                     u3941:
  5226  0AB8  0834               	movf	??___flmul+2,w
  5227  0AB9  1103               	clrz
  5228  0ABA  1803               	skipnc
  5229  0ABB  3E01               	addlw	1
  5230  0ABC  1903               	skipnz
  5231  0ABD  2ABF               	goto	u3942
  5232  0ABE  07BA               	addwf	___flmul@grs+2,f
  5233  0ABF                     u3942:
  5234  0ABF  0835               	movf	??___flmul+3,w
  5235  0AC0  1103               	clrz
  5236  0AC1  1803               	skipnc
  5237  0AC2  3E01               	addlw	1
  5238  0AC3  1903               	skipnz
  5239  0AC4  2AC6               	goto	u3943
  5240  0AC5  07BB               	addwf	___flmul@grs+3,f
  5241  0AC6                     u3943:
  5242  0AC6                     l2762:
  5243  0AC6  3008               	movlw	8
  5244  0AC7  00B2               	movwf	??___flmul
  5245  0AC8                     u3955:
  5246  0AC8  1003               	clrc
  5247  0AC9  0DB8               	rlf	___flmul@grs,f
  5248  0ACA  0DB9               	rlf	___flmul@grs+1,f
  5249  0ACB  0DBA               	rlf	___flmul@grs+2,f
  5250  0ACC  0DBB               	rlf	___flmul@grs+3,f
  5251  0ACD  0BB2               	decfsz	??___flmul,f
  5252  0ACE  2AC8               	goto	u3955
  5253  0ACF  082A               	movf	___flmul@b,w
  5254  0AD0  00B2               	movwf	??___flmul
  5255  0AD1  0832               	movf	??___flmul,w
  5256  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  5257  0AD3  082E               	movf	___flmul@a,w
  5258  0AD4  160A  158A  21E0  120A  158A  	fcall	__Umul8_16
  5259  0AD9  0874               	movf	?__Umul8_16+1,w
  5260  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  5261  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  5262  0ADC  00C3               	movwf	___flmul@temp+1
  5263  0ADD  0873               	movf	?__Umul8_16,w
  5264  0ADE  00C2               	movwf	___flmul@temp
  5265  0ADF                     l2764:
  5266  0ADF  0842               	movf	___flmul@temp,w
  5267  0AE0  00B2               	movwf	??___flmul
  5268  0AE1  0843               	movf	___flmul@temp+1,w
  5269  0AE2  00B3               	movwf	??___flmul+1
  5270  0AE3  01B4               	clrf	??___flmul+2
  5271  0AE4  01B5               	clrf	??___flmul+3
  5272  0AE5  0832               	movf	??___flmul,w
  5273  0AE6  07B8               	addwf	___flmul@grs,f
  5274  0AE7  0833               	movf	??___flmul+1,w
  5275  0AE8  1103               	clrz
  5276  0AE9  1803               	skipnc
  5277  0AEA  3E01               	addlw	1
  5278  0AEB  1903               	skipnz
  5279  0AEC  2AEE               	goto	u3961
  5280  0AED  07B9               	addwf	___flmul@grs+1,f
  5281  0AEE                     u3961:
  5282  0AEE  0834               	movf	??___flmul+2,w
  5283  0AEF  1103               	clrz
  5284  0AF0  1803               	skipnc
  5285  0AF1  3E01               	addlw	1
  5286  0AF2  1903               	skipnz
  5287  0AF3  2AF5               	goto	u3962
  5288  0AF4  07BA               	addwf	___flmul@grs+2,f
  5289  0AF5                     u3962:
  5290  0AF5  0835               	movf	??___flmul+3,w
  5291  0AF6  1103               	clrz
  5292  0AF7  1803               	skipnc
  5293  0AF8  3E01               	addlw	1
  5294  0AF9  1903               	skipnz
  5295  0AFA  2AFC               	goto	u3963
  5296  0AFB  07BB               	addwf	___flmul@grs+3,f
  5297  0AFC                     u3963:
  5298  0AFC                     l2766:
  5299  0AFC  082B               	movf	___flmul@b+1,w
  5300  0AFD  00B2               	movwf	??___flmul
  5301  0AFE  0832               	movf	??___flmul,w
  5302  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  5303  0B00  0830               	movf	___flmul@a+2,w
  5304  0B01  160A  158A  21E0  120A  158A  	fcall	__Umul8_16
  5305  0B06  0874               	movf	?__Umul8_16+1,w
  5306  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  5307  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  5308  0B09  00C3               	movwf	___flmul@temp+1
  5309  0B0A  0873               	movf	?__Umul8_16,w
  5310  0B0B  00C2               	movwf	___flmul@temp
  5311  0B0C  0842               	movf	___flmul@temp,w
  5312  0B0D  00B2               	movwf	??___flmul
  5313  0B0E  0843               	movf	___flmul@temp+1,w
  5314  0B0F  00B3               	movwf	??___flmul+1
  5315  0B10  01B4               	clrf	??___flmul+2
  5316  0B11  01B5               	clrf	??___flmul+3
  5317  0B12  0832               	movf	??___flmul,w
  5318  0B13  07BE               	addwf	___flmul@prod,f
  5319  0B14  0833               	movf	??___flmul+1,w
  5320  0B15  1103               	clrz
  5321  0B16  1803               	skipnc
  5322  0B17  3E01               	addlw	1
  5323  0B18  1903               	skipnz
  5324  0B19  2B1B               	goto	u3971
  5325  0B1A  07BF               	addwf	___flmul@prod+1,f
  5326  0B1B                     u3971:
  5327  0B1B  0834               	movf	??___flmul+2,w
  5328  0B1C  1103               	clrz
  5329  0B1D  1803               	skipnc
  5330  0B1E  3E01               	addlw	1
  5331  0B1F  1903               	skipnz
  5332  0B20  2B22               	goto	u3972
  5333  0B21  07C0               	addwf	___flmul@prod+2,f
  5334  0B22                     u3972:
  5335  0B22  0835               	movf	??___flmul+3,w
  5336  0B23  1103               	clrz
  5337  0B24  1803               	skipnc
  5338  0B25  3E01               	addlw	1
  5339  0B26  1903               	skipnz
  5340  0B27  2B29               	goto	u3973
  5341  0B28  07C1               	addwf	___flmul@prod+3,f
  5342  0B29                     u3973:
  5343  0B29                     l2768:
  5344  0B29  082C               	movf	___flmul@b+2,w
  5345  0B2A  00B2               	movwf	??___flmul
  5346  0B2B  0832               	movf	??___flmul,w
  5347  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  5348  0B2D  082F               	movf	___flmul@a+1,w
  5349  0B2E  160A  158A  21E0  120A  158A  	fcall	__Umul8_16
  5350  0B33  0874               	movf	?__Umul8_16+1,w
  5351  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  5352  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  5353  0B36  00C3               	movwf	___flmul@temp+1
  5354  0B37  0873               	movf	?__Umul8_16,w
  5355  0B38  00C2               	movwf	___flmul@temp
  5356  0B39                     l2770:
  5357  0B39  0842               	movf	___flmul@temp,w
  5358  0B3A  00B2               	movwf	??___flmul
  5359  0B3B  0843               	movf	___flmul@temp+1,w
  5360  0B3C  00B3               	movwf	??___flmul+1
  5361  0B3D  01B4               	clrf	??___flmul+2
  5362  0B3E  01B5               	clrf	??___flmul+3
  5363  0B3F  0832               	movf	??___flmul,w
  5364  0B40  07BE               	addwf	___flmul@prod,f
  5365  0B41  0833               	movf	??___flmul+1,w
  5366  0B42  1103               	clrz
  5367  0B43  1803               	skipnc
  5368  0B44  3E01               	addlw	1
  5369  0B45  1903               	skipnz
  5370  0B46  2B48               	goto	u3981
  5371  0B47  07BF               	addwf	___flmul@prod+1,f
  5372  0B48                     u3981:
  5373  0B48  0834               	movf	??___flmul+2,w
  5374  0B49  1103               	clrz
  5375  0B4A  1803               	skipnc
  5376  0B4B  3E01               	addlw	1
  5377  0B4C  1903               	skipnz
  5378  0B4D  2B4F               	goto	u3982
  5379  0B4E  07C0               	addwf	___flmul@prod+2,f
  5380  0B4F                     u3982:
  5381  0B4F  0835               	movf	??___flmul+3,w
  5382  0B50  1103               	clrz
  5383  0B51  1803               	skipnc
  5384  0B52  3E01               	addlw	1
  5385  0B53  1903               	skipnz
  5386  0B54  2B56               	goto	u3983
  5387  0B55  07C1               	addwf	___flmul@prod+3,f
  5388  0B56                     u3983:
  5389  0B56  082C               	movf	___flmul@b+2,w
  5390  0B57  00B2               	movwf	??___flmul
  5391  0B58  0832               	movf	??___flmul,w
  5392  0B59  00F3               	movwf	__Umul8_16@multiplicand
  5393  0B5A  0830               	movf	___flmul@a+2,w
  5394  0B5B  160A  158A  21E0  120A  158A  	fcall	__Umul8_16
  5395  0B60  0874               	movf	?__Umul8_16+1,w
  5396  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  5397  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  5398  0B63  00C3               	movwf	___flmul@temp+1
  5399  0B64  0873               	movf	?__Umul8_16,w
  5400  0B65  00C2               	movwf	___flmul@temp
  5401  0B66                     l2772:
  5402  0B66  0842               	movf	___flmul@temp,w
  5403  0B67  00B2               	movwf	??___flmul
  5404  0B68  0843               	movf	___flmul@temp+1,w
  5405  0B69  00B3               	movwf	??___flmul+1
  5406  0B6A  01B4               	clrf	??___flmul+2
  5407  0B6B  01B5               	clrf	??___flmul+3
  5408  0B6C  3008               	movlw	8
  5409  0B6D                     u3995:
  5410  0B6D  1003               	clrc
  5411  0B6E  0DB2               	rlf	??___flmul,f
  5412  0B6F  0DB3               	rlf	??___flmul+1,f
  5413  0B70  0DB4               	rlf	??___flmul+2,f
  5414  0B71  0DB5               	rlf	??___flmul+3,f
  5415  0B72                     u3990:
  5416  0B72  3EFF               	addlw	-1
  5417  0B73  1D03               	skipz
  5418  0B74  2B6D               	goto	u3995
  5419  0B75  0832               	movf	??___flmul,w
  5420  0B76  07BE               	addwf	___flmul@prod,f
  5421  0B77  0833               	movf	??___flmul+1,w
  5422  0B78  1103               	clrz
  5423  0B79  1803               	skipnc
  5424  0B7A  3E01               	addlw	1
  5425  0B7B  1903               	skipnz
  5426  0B7C  2B7E               	goto	u4001
  5427  0B7D  07BF               	addwf	___flmul@prod+1,f
  5428  0B7E                     u4001:
  5429  0B7E  0834               	movf	??___flmul+2,w
  5430  0B7F  1103               	clrz
  5431  0B80  1803               	skipnc
  5432  0B81  3E01               	addlw	1
  5433  0B82  1903               	skipnz
  5434  0B83  2B85               	goto	u4002
  5435  0B84  07C0               	addwf	___flmul@prod+2,f
  5436  0B85                     u4002:
  5437  0B85  0835               	movf	??___flmul+3,w
  5438  0B86  1103               	clrz
  5439  0B87  1803               	skipnc
  5440  0B88  3E01               	addlw	1
  5441  0B89  1903               	skipnz
  5442  0B8A  2B8C               	goto	u4003
  5443  0B8B  07C1               	addwf	___flmul@prod+3,f
  5444  0B8C                     u4003:
  5445  0B8C                     l2774:
  5446  0B8C  0838               	movf	___flmul@grs,w
  5447  0B8D  00B2               	movwf	??___flmul
  5448  0B8E  0839               	movf	___flmul@grs+1,w
  5449  0B8F  00B3               	movwf	??___flmul+1
  5450  0B90  083A               	movf	___flmul@grs+2,w
  5451  0B91  00B4               	movwf	??___flmul+2
  5452  0B92  083B               	movf	___flmul@grs+3,w
  5453  0B93  00B5               	movwf	??___flmul+3
  5454  0B94  3018               	movlw	24
  5455  0B95                     u4015:
  5456  0B95  1003               	clrc
  5457  0B96  0CB5               	rrf	??___flmul+3,f
  5458  0B97  0CB4               	rrf	??___flmul+2,f
  5459  0B98  0CB3               	rrf	??___flmul+1,f
  5460  0B99  0CB2               	rrf	??___flmul,f
  5461  0B9A                     u4010:
  5462  0B9A  3EFF               	addlw	-1
  5463  0B9B  1D03               	skipz
  5464  0B9C  2B95               	goto	u4015
  5465  0B9D  0832               	movf	??___flmul,w
  5466  0B9E  07BE               	addwf	___flmul@prod,f
  5467  0B9F  0833               	movf	??___flmul+1,w
  5468  0BA0  1103               	clrz
  5469  0BA1  1803               	skipnc
  5470  0BA2  3E01               	addlw	1
  5471  0BA3  1903               	skipnz
  5472  0BA4  2BA6               	goto	u4021
  5473  0BA5  07BF               	addwf	___flmul@prod+1,f
  5474  0BA6                     u4021:
  5475  0BA6  0834               	movf	??___flmul+2,w
  5476  0BA7  1103               	clrz
  5477  0BA8  1803               	skipnc
  5478  0BA9  3E01               	addlw	1
  5479  0BAA  1903               	skipnz
  5480  0BAB  2BAD               	goto	u4022
  5481  0BAC  07C0               	addwf	___flmul@prod+2,f
  5482  0BAD                     u4022:
  5483  0BAD  0835               	movf	??___flmul+3,w
  5484  0BAE  1103               	clrz
  5485  0BAF  1803               	skipnc
  5486  0BB0  3E01               	addlw	1
  5487  0BB1  1903               	skipnz
  5488  0BB2  2BB4               	goto	u4023
  5489  0BB3  07C1               	addwf	___flmul@prod+3,f
  5490  0BB4                     u4023:
  5491  0BB4                     l2776:
  5492  0BB4  3008               	movlw	8
  5493  0BB5  00B2               	movwf	??___flmul
  5494  0BB6                     u4035:
  5495  0BB6  1003               	clrc
  5496  0BB7  0DB8               	rlf	___flmul@grs,f
  5497  0BB8  0DB9               	rlf	___flmul@grs+1,f
  5498  0BB9  0DBA               	rlf	___flmul@grs+2,f
  5499  0BBA  0DBB               	rlf	___flmul@grs+3,f
  5500  0BBB  0BB2               	decfsz	??___flmul,f
  5501  0BBC  2BB6               	goto	u4035
  5502  0BBD                     l2778:
  5503  0BBD  083D               	movf	___flmul@bexp,w
  5504  0BBE  073C               	addwf	___flmul@aexp,w
  5505  0BBF  00B2               	movwf	??___flmul
  5506  0BC0  01B3               	clrf	??___flmul+1
  5507  0BC1  0DB3               	rlf	??___flmul+1,f
  5508  0BC2  0832               	movf	??___flmul,w
  5509  0BC3  3E82               	addlw	130
  5510  0BC4  00C2               	movwf	___flmul@temp
  5511  0BC5  0833               	movf	??___flmul+1,w
  5512  0BC6  1803               	skipnc
  5513  0BC7  3E01               	addlw	1
  5514  0BC8  3EFF               	addlw	255
  5515  0BC9  00C3               	movwf	___flmul@temp+1
  5516  0BCA  2BE8               	goto	l2790
  5517  0BCB                     l2780:
  5518  0BCB  3001               	movlw	1
  5519  0BCC  00B2               	movwf	??___flmul
  5520  0BCD                     u4045:
  5521  0BCD  1003               	clrc
  5522  0BCE  0DBE               	rlf	___flmul@prod,f
  5523  0BCF  0DBF               	rlf	___flmul@prod+1,f
  5524  0BD0  0DC0               	rlf	___flmul@prod+2,f
  5525  0BD1  0DC1               	rlf	___flmul@prod+3,f
  5526  0BD2  0BB2               	decfsz	??___flmul,f
  5527  0BD3  2BCD               	goto	u4045
  5528  0BD4                     l2782:
  5529  0BD4  1FBB               	btfss	___flmul@grs+3,7
  5530  0BD5  2BD7               	goto	u4051
  5531  0BD6  2BD8               	goto	u4050
  5532  0BD7                     u4051:
  5533  0BD7  2BD9               	goto	l2786
  5534  0BD8                     u4050:
  5535  0BD8                     l2784:
  5536  0BD8  143E               	bsf	___flmul@prod,0
  5537  0BD9                     l2786:
  5538  0BD9  3001               	movlw	1
  5539  0BDA  00B2               	movwf	??___flmul
  5540  0BDB                     u4065:
  5541  0BDB  1003               	clrc
  5542  0BDC  0DB8               	rlf	___flmul@grs,f
  5543  0BDD  0DB9               	rlf	___flmul@grs+1,f
  5544  0BDE  0DBA               	rlf	___flmul@grs+2,f
  5545  0BDF  0DBB               	rlf	___flmul@grs+3,f
  5546  0BE0  0BB2               	decfsz	??___flmul,f
  5547  0BE1  2BDB               	goto	u4065
  5548  0BE2                     l2788:
  5549  0BE2  30FF               	movlw	255
  5550  0BE3  07C2               	addwf	___flmul@temp,f
  5551  0BE4  1803               	skipnc
  5552  0BE5  0AC3               	incf	___flmul@temp+1,f
  5553  0BE6  30FF               	movlw	255
  5554  0BE7  07C3               	addwf	___flmul@temp+1,f
  5555  0BE8                     l2790:
  5556  0BE8  1FC0               	btfss	___flmul@prod+2,7
  5557  0BE9  2BEB               	goto	u4071
  5558  0BEA  2BEC               	goto	u4070
  5559  0BEB                     u4071:
  5560  0BEB  2BCB               	goto	l2780
  5561  0BEC                     u4070:
  5562  0BEC                     l2792:
  5563  0BEC  01BC               	clrf	___flmul@aexp
  5564  0BED                     l2794:
  5565  0BED  1FBB               	btfss	___flmul@grs+3,7
  5566  0BEE  2BF0               	goto	u4081
  5567  0BEF  2BF1               	goto	u4080
  5568  0BF0                     u4081:
  5569  0BF0  2C0D               	goto	l2802
  5570  0BF1                     u4080:
  5571  0BF1                     l2796:
  5572  0BF1  30FF               	movlw	255
  5573  0BF2  0538               	andwf	___flmul@grs,w
  5574  0BF3  00B2               	movwf	??___flmul
  5575  0BF4  30FF               	movlw	255
  5576  0BF5  0539               	andwf	___flmul@grs+1,w
  5577  0BF6  00B3               	movwf	??___flmul+1
  5578  0BF7  30FF               	movlw	255
  5579  0BF8  053A               	andwf	___flmul@grs+2,w
  5580  0BF9  00B4               	movwf	??___flmul+2
  5581  0BFA  307F               	movlw	127
  5582  0BFB  053B               	andwf	___flmul@grs+3,w
  5583  0BFC  00B5               	movwf	??___flmul+3
  5584  0BFD  0835               	movf	??___flmul+3,w
  5585  0BFE  0434               	iorwf	??___flmul+2,w
  5586  0BFF  0433               	iorwf	??___flmul+1,w
  5587  0C00  0432               	iorwf	??___flmul,w
  5588  0C01  1903               	skipnz
  5589  0C02  2C04               	goto	u4091
  5590  0C03  2C05               	goto	u4090
  5591  0C04                     u4091:
  5592  0C04  2C08               	goto	l822
  5593  0C05                     u4090:
  5594  0C05                     l2798:
  5595  0C05  01BC               	clrf	___flmul@aexp
  5596  0C06  0ABC               	incf	___flmul@aexp,f
  5597  0C07  2C0D               	goto	l2802
  5598  0C08                     l822:
  5599  0C08  1C3E               	btfss	___flmul@prod,0
  5600  0C09  2C0B               	goto	u4101
  5601  0C0A  2C0C               	goto	u4100
  5602  0C0B                     u4101:
  5603  0C0B  2C0D               	goto	l2802
  5604  0C0C                     u4100:
  5605  0C0C  2C05               	goto	l2798
  5606  0C0D                     l2802:
  5607  0C0D  083C               	movf	___flmul@aexp,w
  5608  0C0E  1903               	btfsc	3,2
  5609  0C0F  2C11               	goto	u4111
  5610  0C10  2C12               	goto	u4110
  5611  0C11                     u4111:
  5612  0C11  2C43               	goto	l2812
  5613  0C12                     u4110:
  5614  0C12                     l2804:
  5615  0C12  3001               	movlw	1
  5616  0C13  07BE               	addwf	___flmul@prod,f
  5617  0C14  3000               	movlw	0
  5618  0C15  1803               	skipnc
  5619  0C16  3001               	movlw	1
  5620  0C17  07BF               	addwf	___flmul@prod+1,f
  5621  0C18  3000               	movlw	0
  5622  0C19  1803               	skipnc
  5623  0C1A  3001               	movlw	1
  5624  0C1B  07C0               	addwf	___flmul@prod+2,f
  5625  0C1C  3000               	movlw	0
  5626  0C1D  1803               	skipnc
  5627  0C1E  3001               	movlw	1
  5628  0C1F  07C1               	addwf	___flmul@prod+3,f
  5629  0C20                     l2806:
  5630  0C20  1C41               	btfss	___flmul@prod+3,0
  5631  0C21  2C23               	goto	u4121
  5632  0C22  2C24               	goto	u4120
  5633  0C23                     u4121:
  5634  0C23  2C43               	goto	l2812
  5635  0C24                     u4120:
  5636  0C24                     l2808:
  5637  0C24  083E               	movf	___flmul@prod,w
  5638  0C25  00B2               	movwf	??___flmul
  5639  0C26  083F               	movf	___flmul@prod+1,w
  5640  0C27  00B3               	movwf	??___flmul+1
  5641  0C28  0840               	movf	___flmul@prod+2,w
  5642  0C29  00B4               	movwf	??___flmul+2
  5643  0C2A  0841               	movf	___flmul@prod+3,w
  5644  0C2B  00B5               	movwf	??___flmul+3
  5645  0C2C  3001               	movlw	1
  5646  0C2D  00B6               	movwf	??___flmul+4
  5647  0C2E                     u4135:
  5648  0C2E  0D35               	rlf	??___flmul+3,w
  5649  0C2F  0CB5               	rrf	??___flmul+3,f
  5650  0C30  0CB4               	rrf	??___flmul+2,f
  5651  0C31  0CB3               	rrf	??___flmul+1,f
  5652  0C32  0CB2               	rrf	??___flmul,f
  5653  0C33                     u4130:
  5654  0C33  0BB6               	decfsz	??___flmul+4,f
  5655  0C34  2C2E               	goto	u4135
  5656  0C35  0835               	movf	??___flmul+3,w
  5657  0C36  00C1               	movwf	___flmul@prod+3
  5658  0C37  0834               	movf	??___flmul+2,w
  5659  0C38  00C0               	movwf	___flmul@prod+2
  5660  0C39  0833               	movf	??___flmul+1,w
  5661  0C3A  00BF               	movwf	___flmul@prod+1
  5662  0C3B  0832               	movf	??___flmul,w
  5663  0C3C  00BE               	movwf	___flmul@prod
  5664  0C3D                     l2810:
  5665  0C3D  3001               	movlw	1
  5666  0C3E  07C2               	addwf	___flmul@temp,f
  5667  0C3F  1803               	skipnc
  5668  0C40  0AC3               	incf	___flmul@temp+1,f
  5669  0C41  3000               	movlw	0
  5670  0C42  07C3               	addwf	___flmul@temp+1,f
  5671  0C43                     l2812:
  5672  0C43  0843               	movf	___flmul@temp+1,w
  5673  0C44  3A80               	xorlw	128
  5674  0C45  00FF               	movwf	btemp+1
  5675  0C46  3080               	movlw	128
  5676  0C47  027F               	subwf	btemp+1,w
  5677  0C48  1D03               	skipz
  5678  0C49  2C4C               	goto	u4145
  5679  0C4A  30FF               	movlw	255
  5680  0C4B  0242               	subwf	___flmul@temp,w
  5681  0C4C                     u4145:
  5682  0C4C  1C03               	skipc
  5683  0C4D  2C4F               	goto	u4141
  5684  0C4E  2C50               	goto	u4140
  5685  0C4F                     u4141:
  5686  0C4F  2C5B               	goto	l2816
  5687  0C50                     u4140:
  5688  0C50                     l2814:
  5689  0C50  307F               	movlw	127
  5690  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5691  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  5692  0C53  00C1               	movwf	___flmul@prod+3
  5693  0C54  3080               	movlw	128
  5694  0C55  00C0               	movwf	___flmul@prod+2
  5695  0C56  3000               	movlw	0
  5696  0C57  00BF               	movwf	___flmul@prod+1
  5697  0C58  3000               	movlw	0
  5698  0C59  00BE               	movwf	___flmul@prod
  5699  0C5A  2C90               	goto	l828
  5700  0C5B                     l2816:
  5701  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  5702  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  5703  0C5D  0843               	movf	___flmul@temp+1,w
  5704  0C5E  3A80               	xorlw	128
  5705  0C5F  00FF               	movwf	btemp+1
  5706  0C60  3080               	movlw	128
  5707  0C61  027F               	subwf	btemp+1,w
  5708  0C62  1D03               	skipz
  5709  0C63  2C66               	goto	u4155
  5710  0C64  3001               	movlw	1
  5711  0C65  0242               	subwf	___flmul@temp,w
  5712  0C66                     u4155:
  5713  0C66  1803               	skipnc
  5714  0C67  2C69               	goto	u4151
  5715  0C68  2C6A               	goto	u4150
  5716  0C69                     u4151:
  5717  0C69  2C76               	goto	l2822
  5718  0C6A                     u4150:
  5719  0C6A                     l2818:
  5720  0C6A  3000               	movlw	0
  5721  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  5722  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  5723  0C6D  00C1               	movwf	___flmul@prod+3
  5724  0C6E  3000               	movlw	0
  5725  0C6F  00C0               	movwf	___flmul@prod+2
  5726  0C70  3000               	movlw	0
  5727  0C71  00BF               	movwf	___flmul@prod+1
  5728  0C72  3000               	movlw	0
  5729  0C73  00BE               	movwf	___flmul@prod
  5730  0C74                     l2820:
  5731  0C74  01B7               	clrf	___flmul@sign
  5732  0C75  2C90               	goto	l828
  5733  0C76                     l2822:
  5734  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  5735  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  5736  0C78  0842               	movf	___flmul@temp,w
  5737  0C79  00B2               	movwf	??___flmul
  5738  0C7A  0832               	movf	??___flmul,w
  5739  0C7B  00BD               	movwf	___flmul@bexp
  5740  0C7C  30FF               	movlw	255
  5741  0C7D  05BE               	andwf	___flmul@prod,f
  5742  0C7E  30FF               	movlw	255
  5743  0C7F  05BF               	andwf	___flmul@prod+1,f
  5744  0C80  307F               	movlw	127
  5745  0C81  05C0               	andwf	___flmul@prod+2,f
  5746  0C82  3000               	movlw	0
  5747  0C83  05C1               	andwf	___flmul@prod+3,f
  5748  0C84                     l2824:
  5749  0C84  1C3D               	btfss	___flmul@bexp,0
  5750  0C85  2C87               	goto	u4161
  5751  0C86  2C88               	goto	u4160
  5752  0C87                     u4161:
  5753  0C87  2C89               	goto	l2828
  5754  0C88                     u4160:
  5755  0C88                     l2826:
  5756  0C88  17C0               	bsf	___flmul@prod+2,7
  5757  0C89                     l2828:
  5758  0C89  083D               	movf	___flmul@bexp,w
  5759  0C8A  00B2               	movwf	??___flmul
  5760  0C8B  1003               	clrc
  5761  0C8C  0C32               	rrf	??___flmul,w
  5762  0C8D  00B3               	movwf	??___flmul+1
  5763  0C8E  0833               	movf	??___flmul+1,w
  5764  0C8F  00C1               	movwf	___flmul@prod+3
  5765  0C90                     l828:
  5766  0C90  0837               	movf	___flmul@sign,w
  5767  0C91  00B2               	movwf	??___flmul
  5768  0C92  0832               	movf	??___flmul,w
  5769  0C93  04C1               	iorwf	___flmul@prod+3,f
  5770  0C94                     l2830:
  5771  0C94  0841               	movf	___flmul@prod+3,w
  5772  0C95  00AD               	movwf	?___flmul+3
  5773  0C96  0840               	movf	___flmul@prod+2,w
  5774  0C97  00AC               	movwf	?___flmul+2
  5775  0C98  083F               	movf	___flmul@prod+1,w
  5776  0C99  00AB               	movwf	?___flmul+1
  5777  0C9A  083E               	movf	___flmul@prod,w
  5778  0C9B  00AA               	movwf	?___flmul
  5779  0C9C                     l816:
  5780  0C9C  0008               	return
  5781  0C9D                     __end_of___flmul:
  5782                           
  5783                           	psect	text11
  5784  19E0                     __ptext11:	
  5785 ;; *************** function __Umul8_16 *****************
  5786 ;; Defined at:
  5787 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5788 ;; Parameters:    Size  Location     Type
  5789 ;;  multiplier      1    wreg     unsigned char 
  5790 ;;  multiplicand    1    3[COMMON] unsigned char 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5793 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  5794 ;;  product         2    0[BANK0 ] unsigned int 
  5795 ;; Return value:  Size  Location     Type
  5796 ;;                  2    3[COMMON] unsigned int 
  5797 ;; Registers used:
  5798 ;;		wreg, status,2, status,0
  5799 ;; Tracked objects:
  5800 ;;		On entry : 0/0
  5801 ;;		On exit  : 0/0
  5802 ;;		Unchanged: 0/0
  5803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5804 ;;      Params:         2       0       0       0       0
  5805 ;;      Locals:         0       5       0       0       0
  5806 ;;      Temps:          2       0       0       0       0
  5807 ;;      Totals:         4       5       0       0       0
  5808 ;;Total ram usage:        9 bytes
  5809 ;; Hardware stack levels used:    1
  5810 ;; Hardware stack levels required when called:    1
  5811 ;; This function calls:
  5812 ;;		Nothing
  5813 ;; This function is called by:
  5814 ;;		___flmul
  5815 ;; This function uses a non-reentrant model
  5816 ;;
  5817                           
  5818                           
  5819                           ;psect for function __Umul8_16
  5820  19E0                     __Umul8_16:
  5821                           
  5822                           ;incstack = 0
  5823                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5824                           ;__Umul8_16@multiplier stored from wreg
  5825  19E0  1283               	bcf	3,5	;RP0=0, select bank0
  5826  19E1  1303               	bcf	3,6	;RP1=0, select bank0
  5827  19E2  00A4               	movwf	__Umul8_16@multiplier
  5828  19E3                     l2354:
  5829  19E3  01A0               	clrf	__Umul8_16@product
  5830  19E4  01A1               	clrf	__Umul8_16@product+1
  5831  19E5                     l2356:
  5832  19E5  0873               	movf	__Umul8_16@multiplicand,w
  5833  19E6  00F5               	movwf	??__Umul8_16
  5834  19E7  01F6               	clrf	??__Umul8_16+1
  5835  19E8  0875               	movf	??__Umul8_16,w
  5836  19E9  00A2               	movwf	__Umul8_16@word_mpld
  5837  19EA  0876               	movf	??__Umul8_16+1,w
  5838  19EB  00A3               	movwf	__Umul8_16@word_mpld+1
  5839  19EC                     l2358:
  5840  19EC  1C24               	btfss	__Umul8_16@multiplier,0
  5841  19ED  29EF               	goto	u2991
  5842  19EE  29F0               	goto	u2990
  5843  19EF                     u2991:
  5844  19EF  29F6               	goto	l835
  5845  19F0                     u2990:
  5846  19F0                     l2360:
  5847  19F0  0822               	movf	__Umul8_16@word_mpld,w
  5848  19F1  07A0               	addwf	__Umul8_16@product,f
  5849  19F2  1803               	skipnc
  5850  19F3  0AA1               	incf	__Umul8_16@product+1,f
  5851  19F4  0823               	movf	__Umul8_16@word_mpld+1,w
  5852  19F5  07A1               	addwf	__Umul8_16@product+1,f
  5853  19F6                     l835:
  5854  19F6  3001               	movlw	1
  5855  19F7                     u3005:
  5856  19F7  1003               	clrc
  5857  19F8  0DA2               	rlf	__Umul8_16@word_mpld,f
  5858  19F9  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5859  19FA  3EFF               	addlw	-1
  5860  19FB  1D03               	skipz
  5861  19FC  29F7               	goto	u3005
  5862  19FD  1003               	clrc
  5863  19FE  0CA4               	rrf	__Umul8_16@multiplier,f
  5864  19FF                     l2362:
  5865  19FF  0824               	movf	__Umul8_16@multiplier,w
  5866  1A00  1D03               	btfss	3,2
  5867  1A01  2A03               	goto	u3011
  5868  1A02  2A04               	goto	u3010
  5869  1A03                     u3011:
  5870  1A03  29EC               	goto	l2358
  5871  1A04                     u3010:
  5872  1A04                     l2364:
  5873  1A04  0821               	movf	__Umul8_16@product+1,w
  5874  1A05  00F4               	movwf	?__Umul8_16+1
  5875  1A06  0820               	movf	__Umul8_16@product,w
  5876  1A07  00F3               	movwf	?__Umul8_16
  5877  1A08                     l837:
  5878  1A08  0008               	return
  5879  1A09                     __end_of__Umul8_16:
  5880                           
  5881                           	psect	text12
  5882  087F                     __ptext12:	
  5883 ;; *************** function __tdiv_to_l_ *****************
  5884 ;; Defined at:
  5885 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5886 ;; Parameters:    Size  Location     Type
  5887 ;;  f1              4    0[BANK0 ] float 
  5888 ;;  f2              4    4[BANK0 ] float 
  5889 ;; Auto vars:     Size  Location     Type
  5890 ;;  quot            4    8[BANK0 ] unsigned long 
  5891 ;;  exp1            1   13[BANK0 ] unsigned char 
  5892 ;;  cntr            1   12[BANK0 ] unsigned char 
  5893 ;; Return value:  Size  Location     Type
  5894 ;;                  4    0[BANK0 ] unsigned long 
  5895 ;; Registers used:
  5896 ;;		wreg, status,2, status,0
  5897 ;; Tracked objects:
  5898 ;;		On entry : 0/0
  5899 ;;		On exit  : 0/0
  5900 ;;		Unchanged: 0/0
  5901 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5902 ;;      Params:         0       8       0       0       0
  5903 ;;      Locals:         0       6       0       0       0
  5904 ;;      Temps:          4       0       0       0       0
  5905 ;;      Totals:         4      14       0       0       0
  5906 ;;Total ram usage:       18 bytes
  5907 ;; Hardware stack levels used:    1
  5908 ;; Hardware stack levels required when called:    1
  5909 ;; This function calls:
  5910 ;;		Nothing
  5911 ;; This function is called by:
  5912 ;;		_sprintf
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916                           
  5917                           ;psect for function __tdiv_to_l_
  5918  087F                     __tdiv_to_l_:
  5919  087F                     l3852:	
  5920                           ;incstack = 0
  5921                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5922                           
  5923  087F  1283               	bcf	3,5	;RP0=0, select bank0
  5924  0880  1303               	bcf	3,6	;RP1=0, select bank0
  5925  0881  0820               	movf	__tdiv_to_l_@f1,w
  5926  0882  00F3               	movwf	??__tdiv_to_l_
  5927  0883  0821               	movf	__tdiv_to_l_@f1+1,w
  5928  0884  00F4               	movwf	??__tdiv_to_l_+1
  5929  0885  0822               	movf	__tdiv_to_l_@f1+2,w
  5930  0886  00F5               	movwf	??__tdiv_to_l_+2
  5931  0887  1003               	clrc
  5932  0888  0D74               	rlf	??__tdiv_to_l_+1,w
  5933  0889  0D75               	rlf	??__tdiv_to_l_+2,w
  5934  088A  00F6               	movwf	??__tdiv_to_l_+3
  5935  088B  0876               	movf	??__tdiv_to_l_+3,w
  5936  088C  00AD               	movwf	__tdiv_to_l_@exp1
  5937  088D  082D               	movf	__tdiv_to_l_@exp1,w
  5938  088E  1D03               	btfss	3,2
  5939  088F  2891               	goto	u6241
  5940  0890  2892               	goto	u6240
  5941  0891                     u6241:
  5942  0891  289B               	goto	l3858
  5943  0892                     u6240:
  5944  0892                     l3854:
  5945  0892  3000               	movlw	0
  5946  0893  00A3               	movwf	?__tdiv_to_l_+3
  5947  0894  3000               	movlw	0
  5948  0895  00A2               	movwf	?__tdiv_to_l_+2
  5949  0896  3000               	movlw	0
  5950  0897  00A1               	movwf	?__tdiv_to_l_+1
  5951  0898  3000               	movlw	0
  5952  0899  00A0               	movwf	?__tdiv_to_l_
  5953  089A  293B               	goto	l610
  5954  089B                     l3858:
  5955  089B  0824               	movf	__tdiv_to_l_@f2,w
  5956  089C  00F3               	movwf	??__tdiv_to_l_
  5957  089D  0825               	movf	__tdiv_to_l_@f2+1,w
  5958  089E  00F4               	movwf	??__tdiv_to_l_+1
  5959  089F  0826               	movf	__tdiv_to_l_@f2+2,w
  5960  08A0  00F5               	movwf	??__tdiv_to_l_+2
  5961  08A1  1003               	clrc
  5962  08A2  0D74               	rlf	??__tdiv_to_l_+1,w
  5963  08A3  0D75               	rlf	??__tdiv_to_l_+2,w
  5964  08A4  00F6               	movwf	??__tdiv_to_l_+3
  5965  08A5  0876               	movf	??__tdiv_to_l_+3,w
  5966  08A6  00AC               	movwf	__tdiv_to_l_@cntr
  5967  08A7  082C               	movf	__tdiv_to_l_@cntr,w
  5968  08A8  1D03               	btfss	3,2
  5969  08A9  28AB               	goto	u6251
  5970  08AA  28AC               	goto	u6250
  5971  08AB                     u6251:
  5972  08AB  28AD               	goto	l611
  5973  08AC                     u6250:
  5974  08AC  2892               	goto	l3854
  5975  08AD                     l611:
  5976  08AD  17A1               	bsf	__tdiv_to_l_@f1+1,7
  5977  08AE                     l3864:
  5978  08AE  30FF               	movlw	255
  5979  08AF  05A0               	andwf	__tdiv_to_l_@f1,f
  5980  08B0  30FF               	movlw	255
  5981  08B1  05A1               	andwf	__tdiv_to_l_@f1+1,f
  5982  08B2  3000               	movlw	0
  5983  08B3  05A2               	andwf	__tdiv_to_l_@f1+2,f
  5984  08B4                     l3866:
  5985  08B4  17A5               	bsf	__tdiv_to_l_@f2+1,7
  5986  08B5  30FF               	movlw	255
  5987  08B6  05A4               	andwf	__tdiv_to_l_@f2,f
  5988  08B7  30FF               	movlw	255
  5989  08B8  05A5               	andwf	__tdiv_to_l_@f2+1,f
  5990  08B9  3000               	movlw	0
  5991  08BA  05A6               	andwf	__tdiv_to_l_@f2+2,f
  5992  08BB  3000               	movlw	0
  5993  08BC  00AB               	movwf	__tdiv_to_l_@quot+3
  5994  08BD  3000               	movlw	0
  5995  08BE  00AA               	movwf	__tdiv_to_l_@quot+2
  5996  08BF  3000               	movlw	0
  5997  08C0  00A9               	movwf	__tdiv_to_l_@quot+1
  5998  08C1  3000               	movlw	0
  5999  08C2  00A8               	movwf	__tdiv_to_l_@quot
  6000  08C3                     l3868:
  6001  08C3  307F               	movlw	127
  6002  08C4  02AD               	subwf	__tdiv_to_l_@exp1,f
  6003  08C5                     l3870:
  6004  08C5  3098               	movlw	152
  6005  08C6  072C               	addwf	__tdiv_to_l_@cntr,w
  6006  08C7  00F3               	movwf	??__tdiv_to_l_
  6007  08C8  0873               	movf	??__tdiv_to_l_,w
  6008  08C9  02AD               	subwf	__tdiv_to_l_@exp1,f
  6009  08CA  3018               	movlw	24
  6010  08CB  00F3               	movwf	??__tdiv_to_l_
  6011  08CC  0873               	movf	??__tdiv_to_l_,w
  6012  08CD  00AC               	movwf	__tdiv_to_l_@cntr
  6013  08CE                     l3872:
  6014  08CE  3001               	movlw	1
  6015  08CF  00F3               	movwf	??__tdiv_to_l_
  6016  08D0                     u6265:
  6017  08D0  1003               	clrc
  6018  08D1  0DA8               	rlf	__tdiv_to_l_@quot,f
  6019  08D2  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  6020  08D3  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  6021  08D4  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  6022  08D5  0BF3               	decfsz	??__tdiv_to_l_,f
  6023  08D6  28D0               	goto	u6265
  6024  08D7                     l3874:
  6025  08D7  0826               	movf	__tdiv_to_l_@f2+2,w
  6026  08D8  0222               	subwf	__tdiv_to_l_@f1+2,w
  6027  08D9  1D03               	skipz
  6028  08DA  28E1               	goto	u6275
  6029  08DB  0825               	movf	__tdiv_to_l_@f2+1,w
  6030  08DC  0221               	subwf	__tdiv_to_l_@f1+1,w
  6031  08DD  1D03               	skipz
  6032  08DE  28E1               	goto	u6275
  6033  08DF  0824               	movf	__tdiv_to_l_@f2,w
  6034  08E0  0220               	subwf	__tdiv_to_l_@f1,w
  6035  08E1                     u6275:
  6036  08E1  1C03               	skipc
  6037  08E2  28E4               	goto	u6271
  6038  08E3  28E5               	goto	u6270
  6039  08E4                     u6271:
  6040  08E4  28F0               	goto	l3880
  6041  08E5                     u6270:
  6042  08E5                     l3876:
  6043  08E5  0824               	movf	__tdiv_to_l_@f2,w
  6044  08E6  02A0               	subwf	__tdiv_to_l_@f1,f
  6045  08E7  0825               	movf	__tdiv_to_l_@f2+1,w
  6046  08E8  1C03               	skipc
  6047  08E9  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  6048  08EA  02A1               	subwf	__tdiv_to_l_@f1+1,f
  6049  08EB  0826               	movf	__tdiv_to_l_@f2+2,w
  6050  08EC  1C03               	skipc
  6051  08ED  0A26               	incf	__tdiv_to_l_@f2+2,w
  6052  08EE  02A2               	subwf	__tdiv_to_l_@f1+2,f
  6053  08EF                     l3878:
  6054  08EF  1428               	bsf	__tdiv_to_l_@quot,0
  6055  08F0                     l3880:
  6056  08F0  3001               	movlw	1
  6057  08F1                     u6285:
  6058  08F1  1003               	clrc
  6059  08F2  0DA0               	rlf	__tdiv_to_l_@f1,f
  6060  08F3  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  6061  08F4  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  6062  08F5  3EFF               	addlw	-1
  6063  08F6  1D03               	skipz
  6064  08F7  28F1               	goto	u6285
  6065  08F8                     l3882:
  6066  08F8  3001               	movlw	1
  6067  08F9  02AC               	subwf	__tdiv_to_l_@cntr,f
  6068  08FA  1D03               	btfss	3,2
  6069  08FB  28FD               	goto	u6291
  6070  08FC  28FE               	goto	u6290
  6071  08FD                     u6291:
  6072  08FD  28CE               	goto	l3872
  6073  08FE                     u6290:
  6074  08FE                     l614:
  6075  08FE  1FAD               	btfss	__tdiv_to_l_@exp1,7
  6076  08FF  2901               	goto	u6301
  6077  0900  2902               	goto	u6300
  6078  0901                     u6301:
  6079  0901  291C               	goto	l3892
  6080  0902                     u6300:
  6081  0902                     l3884:
  6082  0902  082D               	movf	__tdiv_to_l_@exp1,w
  6083  0903  3A80               	xorlw	128
  6084  0904  3E97               	addlw	151
  6085  0905  1803               	skipnc
  6086  0906  2908               	goto	u6311
  6087  0907  2909               	goto	u6310
  6088  0908                     u6311:
  6089  0908  290A               	goto	l3890
  6090  0909                     u6310:
  6091  0909  2892               	goto	l3854
  6092  090A                     l3890:
  6093  090A  3001               	movlw	1
  6094  090B                     u6325:
  6095  090B  1003               	clrc
  6096  090C  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  6097  090D  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  6098  090E  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  6099  090F  0CA8               	rrf	__tdiv_to_l_@quot,f
  6100  0910  3EFF               	addlw	-1
  6101  0911  1D03               	skipz
  6102  0912  290B               	goto	u6325
  6103  0913  3001               	movlw	1
  6104  0914  00F3               	movwf	??__tdiv_to_l_
  6105  0915  0873               	movf	??__tdiv_to_l_,w
  6106  0916  07AD               	addwf	__tdiv_to_l_@exp1,f
  6107  0917  1D03               	btfss	3,2
  6108  0918  291A               	goto	u6331
  6109  0919  291B               	goto	u6330
  6110  091A                     u6331:
  6111  091A  290A               	goto	l3890
  6112  091B                     u6330:
  6113  091B  2933               	goto	l3900
  6114  091C                     l3892:
  6115  091C  3018               	movlw	24
  6116  091D  022D               	subwf	__tdiv_to_l_@exp1,w
  6117  091E  1C03               	skipc
  6118  091F  2921               	goto	u6341
  6119  0920  2922               	goto	u6340
  6120  0921                     u6341:
  6121  0921  292E               	goto	l621
  6122  0922                     u6340:
  6123  0922  2892               	goto	l3854
  6124  0923                     l3898:
  6125  0923  3001               	movlw	1
  6126  0924  00F3               	movwf	??__tdiv_to_l_
  6127  0925                     u6355:
  6128  0925  1003               	clrc
  6129  0926  0DA8               	rlf	__tdiv_to_l_@quot,f
  6130  0927  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  6131  0928  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  6132  0929  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  6133  092A  0BF3               	decfsz	??__tdiv_to_l_,f
  6134  092B  2925               	goto	u6355
  6135  092C  3001               	movlw	1
  6136  092D  02AD               	subwf	__tdiv_to_l_@exp1,f
  6137  092E                     l621:
  6138  092E  082D               	movf	__tdiv_to_l_@exp1,w
  6139  092F  1D03               	btfss	3,2
  6140  0930  2932               	goto	u6361
  6141  0931  2933               	goto	u6360
  6142  0932                     u6361:
  6143  0932  2923               	goto	l3898
  6144  0933                     u6360:
  6145  0933                     l3900:
  6146  0933  082B               	movf	__tdiv_to_l_@quot+3,w
  6147  0934  00A3               	movwf	?__tdiv_to_l_+3
  6148  0935  082A               	movf	__tdiv_to_l_@quot+2,w
  6149  0936  00A2               	movwf	?__tdiv_to_l_+2
  6150  0937  0829               	movf	__tdiv_to_l_@quot+1,w
  6151  0938  00A1               	movwf	?__tdiv_to_l_+1
  6152  0939  0828               	movf	__tdiv_to_l_@quot,w
  6153  093A  00A0               	movwf	?__tdiv_to_l_
  6154  093B                     l610:
  6155  093B  0008               	return
  6156  093C                     __end_of__tdiv_to_l_:
  6157                           
  6158                           	psect	text13
  6159  06B0                     __ptext13:	
  6160 ;; *************** function __div_to_l_ *****************
  6161 ;; Defined at:
  6162 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6163 ;; Parameters:    Size  Location     Type
  6164 ;;  f1              4    0[BANK0 ] unsigned long 
  6165 ;;  f2              4    4[BANK0 ] unsigned long 
  6166 ;; Auto vars:     Size  Location     Type
  6167 ;;  quot            4    4[COMMON] unsigned long 
  6168 ;;  exp1            1    9[COMMON] unsigned char 
  6169 ;;  cntr            1    8[COMMON] unsigned char 
  6170 ;; Return value:  Size  Location     Type
  6171 ;;                  4    0[BANK0 ] unsigned long 
  6172 ;; Registers used:
  6173 ;;		wreg, status,2, status,0
  6174 ;; Tracked objects:
  6175 ;;		On entry : 0/0
  6176 ;;		On exit  : 0/0
  6177 ;;		Unchanged: 0/0
  6178 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6179 ;;      Params:         0       8       0       0       0
  6180 ;;      Locals:         6       0       0       0       0
  6181 ;;      Temps:          1       0       0       0       0
  6182 ;;      Totals:         7       8       0       0       0
  6183 ;;Total ram usage:       15 bytes
  6184 ;; Hardware stack levels used:    1
  6185 ;; Hardware stack levels required when called:    1
  6186 ;; This function calls:
  6187 ;;		Nothing
  6188 ;; This function is called by:
  6189 ;;		_sprintf
  6190 ;; This function uses a non-reentrant model
  6191 ;;
  6192                           
  6193                           
  6194                           ;psect for function __div_to_l_
  6195  06B0                     __div_to_l_:
  6196  06B0                     l3904:	
  6197                           ;incstack = 0
  6198                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6199                           
  6200  06B0  1003               	clrc
  6201  06B1  1283               	bcf	3,5	;RP0=0, select bank0
  6202  06B2  1303               	bcf	3,6	;RP1=0, select bank0
  6203  06B3  0D22               	rlf	__div_to_l_@f1+2,w
  6204  06B4  0D23               	rlf	__div_to_l_@f1+3,w
  6205  06B5  00F3               	movwf	??__div_to_l_
  6206  06B6  0873               	movf	??__div_to_l_,w
  6207  06B7  00F9               	movwf	__div_to_l_@exp1
  6208  06B8  0879               	movf	__div_to_l_@exp1,w
  6209  06B9  1D03               	btfss	3,2
  6210  06BA  2EBC               	goto	u6371
  6211  06BB  2EBD               	goto	u6370
  6212  06BC                     u6371:
  6213  06BC  2EC6               	goto	l3910
  6214  06BD                     u6370:
  6215  06BD                     l3906:
  6216  06BD  3000               	movlw	0
  6217  06BE  00A3               	movwf	?__div_to_l_+3
  6218  06BF  3000               	movlw	0
  6219  06C0  00A2               	movwf	?__div_to_l_+2
  6220  06C1  3000               	movlw	0
  6221  06C2  00A1               	movwf	?__div_to_l_+1
  6222  06C3  3000               	movlw	0
  6223  06C4  00A0               	movwf	?__div_to_l_
  6224  06C5  2F6F               	goto	l563
  6225  06C6                     l3910:
  6226  06C6  1003               	clrc
  6227  06C7  0D26               	rlf	__div_to_l_@f2+2,w
  6228  06C8  0D27               	rlf	__div_to_l_@f2+3,w
  6229  06C9  00F3               	movwf	??__div_to_l_
  6230  06CA  0873               	movf	??__div_to_l_,w
  6231  06CB  00F8               	movwf	__div_to_l_@cntr
  6232  06CC  0878               	movf	__div_to_l_@cntr,w
  6233  06CD  1D03               	btfss	3,2
  6234  06CE  2ED0               	goto	u6381
  6235  06CF  2ED1               	goto	u6380
  6236  06D0                     u6381:
  6237  06D0  2ED2               	goto	l564
  6238  06D1                     u6380:
  6239  06D1  2EBD               	goto	l3906
  6240  06D2                     l564:
  6241  06D2  17A2               	bsf	__div_to_l_@f1+2,7
  6242  06D3                     l3916:
  6243  06D3  30FF               	movlw	255
  6244  06D4  05A0               	andwf	__div_to_l_@f1,f
  6245  06D5  30FF               	movlw	255
  6246  06D6  05A1               	andwf	__div_to_l_@f1+1,f
  6247  06D7  30FF               	movlw	255
  6248  06D8  05A2               	andwf	__div_to_l_@f1+2,f
  6249  06D9  3000               	movlw	0
  6250  06DA  05A3               	andwf	__div_to_l_@f1+3,f
  6251  06DB                     l3918:
  6252  06DB  17A6               	bsf	__div_to_l_@f2+2,7
  6253  06DC  30FF               	movlw	255
  6254  06DD  05A4               	andwf	__div_to_l_@f2,f
  6255  06DE  30FF               	movlw	255
  6256  06DF  05A5               	andwf	__div_to_l_@f2+1,f
  6257  06E0  30FF               	movlw	255
  6258  06E1  05A6               	andwf	__div_to_l_@f2+2,f
  6259  06E2  3000               	movlw	0
  6260  06E3  05A7               	andwf	__div_to_l_@f2+3,f
  6261  06E4  3000               	movlw	0
  6262  06E5  00F7               	movwf	__div_to_l_@quot+3
  6263  06E6  3000               	movlw	0
  6264  06E7  00F6               	movwf	__div_to_l_@quot+2
  6265  06E8  3000               	movlw	0
  6266  06E9  00F5               	movwf	__div_to_l_@quot+1
  6267  06EA  3000               	movlw	0
  6268  06EB  00F4               	movwf	__div_to_l_@quot
  6269  06EC                     l3920:
  6270  06EC  307F               	movlw	127
  6271  06ED  02F9               	subwf	__div_to_l_@exp1,f
  6272  06EE                     l3922:
  6273  06EE  30A0               	movlw	160
  6274  06EF  0778               	addwf	__div_to_l_@cntr,w
  6275  06F0  00F3               	movwf	??__div_to_l_
  6276  06F1  0873               	movf	??__div_to_l_,w
  6277  06F2  02F9               	subwf	__div_to_l_@exp1,f
  6278  06F3  3020               	movlw	32
  6279  06F4  00F3               	movwf	??__div_to_l_
  6280  06F5  0873               	movf	??__div_to_l_,w
  6281  06F6  00F8               	movwf	__div_to_l_@cntr
  6282  06F7                     l3924:
  6283  06F7  3001               	movlw	1
  6284  06F8  00F3               	movwf	??__div_to_l_
  6285  06F9                     u6395:
  6286  06F9  1003               	clrc
  6287  06FA  0DF4               	rlf	__div_to_l_@quot,f
  6288  06FB  0DF5               	rlf	__div_to_l_@quot+1,f
  6289  06FC  0DF6               	rlf	__div_to_l_@quot+2,f
  6290  06FD  0DF7               	rlf	__div_to_l_@quot+3,f
  6291  06FE  0BF3               	decfsz	??__div_to_l_,f
  6292  06FF  2EF9               	goto	u6395
  6293  0700                     l3926:
  6294  0700  0827               	movf	__div_to_l_@f2+3,w
  6295  0701  0223               	subwf	__div_to_l_@f1+3,w
  6296  0702  1D03               	skipz
  6297  0703  2F0E               	goto	u6405
  6298  0704  0826               	movf	__div_to_l_@f2+2,w
  6299  0705  0222               	subwf	__div_to_l_@f1+2,w
  6300  0706  1D03               	skipz
  6301  0707  2F0E               	goto	u6405
  6302  0708  0825               	movf	__div_to_l_@f2+1,w
  6303  0709  0221               	subwf	__div_to_l_@f1+1,w
  6304  070A  1D03               	skipz
  6305  070B  2F0E               	goto	u6405
  6306  070C  0824               	movf	__div_to_l_@f2,w
  6307  070D  0220               	subwf	__div_to_l_@f1,w
  6308  070E                     u6405:
  6309  070E  1C03               	skipc
  6310  070F  2F11               	goto	u6401
  6311  0710  2F12               	goto	u6400
  6312  0711                     u6401:
  6313  0711  2F21               	goto	l3932
  6314  0712                     u6400:
  6315  0712                     l3928:
  6316  0712  0824               	movf	__div_to_l_@f2,w
  6317  0713  02A0               	subwf	__div_to_l_@f1,f
  6318  0714  0825               	movf	__div_to_l_@f2+1,w
  6319  0715  1C03               	skipc
  6320  0716  0F25               	incfsz	__div_to_l_@f2+1,w
  6321  0717  02A1               	subwf	__div_to_l_@f1+1,f
  6322  0718  0826               	movf	__div_to_l_@f2+2,w
  6323  0719  1C03               	skipc
  6324  071A  0F26               	incfsz	__div_to_l_@f2+2,w
  6325  071B  02A2               	subwf	__div_to_l_@f1+2,f
  6326  071C  0827               	movf	__div_to_l_@f2+3,w
  6327  071D  1C03               	skipc
  6328  071E  0F27               	incfsz	__div_to_l_@f2+3,w
  6329  071F  02A3               	subwf	__div_to_l_@f1+3,f
  6330  0720                     l3930:
  6331  0720  1474               	bsf	__div_to_l_@quot,0
  6332  0721                     l3932:
  6333  0721  3001               	movlw	1
  6334  0722  00F3               	movwf	??__div_to_l_
  6335  0723                     u6415:
  6336  0723  1003               	clrc
  6337  0724  0DA0               	rlf	__div_to_l_@f1,f
  6338  0725  0DA1               	rlf	__div_to_l_@f1+1,f
  6339  0726  0DA2               	rlf	__div_to_l_@f1+2,f
  6340  0727  0DA3               	rlf	__div_to_l_@f1+3,f
  6341  0728  0BF3               	decfsz	??__div_to_l_,f
  6342  0729  2F23               	goto	u6415
  6343  072A                     l3934:
  6344  072A  3001               	movlw	1
  6345  072B  02F8               	subwf	__div_to_l_@cntr,f
  6346  072C  1D03               	btfss	3,2
  6347  072D  2F2F               	goto	u6421
  6348  072E  2F30               	goto	u6420
  6349  072F                     u6421:
  6350  072F  2EF7               	goto	l3924
  6351  0730                     u6420:
  6352  0730                     l567:
  6353  0730  1FF9               	btfss	__div_to_l_@exp1,7
  6354  0731  2F33               	goto	u6431
  6355  0732  2F34               	goto	u6430
  6356  0733                     u6431:
  6357  0733  2F4E               	goto	l3944
  6358  0734                     u6430:
  6359  0734                     l3936:
  6360  0734  0879               	movf	__div_to_l_@exp1,w
  6361  0735  3A80               	xorlw	128
  6362  0736  3E9F               	addlw	159
  6363  0737  1803               	skipnc
  6364  0738  2F3A               	goto	u6441
  6365  0739  2F3B               	goto	u6440
  6366  073A                     u6441:
  6367  073A  2F3C               	goto	l3942
  6368  073B                     u6440:
  6369  073B  2EBD               	goto	l3906
  6370  073C                     l3942:
  6371  073C  3001               	movlw	1
  6372  073D                     u6455:
  6373  073D  1003               	clrc
  6374  073E  0CF7               	rrf	__div_to_l_@quot+3,f
  6375  073F  0CF6               	rrf	__div_to_l_@quot+2,f
  6376  0740  0CF5               	rrf	__div_to_l_@quot+1,f
  6377  0741  0CF4               	rrf	__div_to_l_@quot,f
  6378  0742  3EFF               	addlw	-1
  6379  0743  1D03               	skipz
  6380  0744  2F3D               	goto	u6455
  6381  0745  3001               	movlw	1
  6382  0746  00F3               	movwf	??__div_to_l_
  6383  0747  0873               	movf	??__div_to_l_,w
  6384  0748  07F9               	addwf	__div_to_l_@exp1,f
  6385  0749  1D03               	btfss	3,2
  6386  074A  2F4C               	goto	u6461
  6387  074B  2F4D               	goto	u6460
  6388  074C                     u6461:
  6389  074C  2F3C               	goto	l3942
  6390  074D                     u6460:
  6391  074D  2F65               	goto	l3952
  6392  074E                     l3944:
  6393  074E  3020               	movlw	32
  6394  074F  0279               	subwf	__div_to_l_@exp1,w
  6395  0750  1C03               	skipc
  6396  0751  2F53               	goto	u6471
  6397  0752  2F54               	goto	u6470
  6398  0753                     u6471:
  6399  0753  2F60               	goto	l574
  6400  0754                     u6470:
  6401  0754  2EBD               	goto	l3906
  6402  0755                     l3950:
  6403  0755  3001               	movlw	1
  6404  0756  00F3               	movwf	??__div_to_l_
  6405  0757                     u6485:
  6406  0757  1003               	clrc
  6407  0758  0DF4               	rlf	__div_to_l_@quot,f
  6408  0759  0DF5               	rlf	__div_to_l_@quot+1,f
  6409  075A  0DF6               	rlf	__div_to_l_@quot+2,f
  6410  075B  0DF7               	rlf	__div_to_l_@quot+3,f
  6411  075C  0BF3               	decfsz	??__div_to_l_,f
  6412  075D  2F57               	goto	u6485
  6413  075E  3001               	movlw	1
  6414  075F  02F9               	subwf	__div_to_l_@exp1,f
  6415  0760                     l574:
  6416  0760  0879               	movf	__div_to_l_@exp1,w
  6417  0761  1D03               	btfss	3,2
  6418  0762  2F64               	goto	u6491
  6419  0763  2F65               	goto	u6490
  6420  0764                     u6491:
  6421  0764  2F55               	goto	l3950
  6422  0765                     u6490:
  6423  0765                     l3952:
  6424  0765  0877               	movf	__div_to_l_@quot+3,w
  6425  0766  1283               	bcf	3,5	;RP0=0, select bank0
  6426  0767  1303               	bcf	3,6	;RP1=0, select bank0
  6427  0768  00A3               	movwf	?__div_to_l_+3
  6428  0769  0876               	movf	__div_to_l_@quot+2,w
  6429  076A  00A2               	movwf	?__div_to_l_+2
  6430  076B  0875               	movf	__div_to_l_@quot+1,w
  6431  076C  00A1               	movwf	?__div_to_l_+1
  6432  076D  0874               	movf	__div_to_l_@quot,w
  6433  076E  00A0               	movwf	?__div_to_l_
  6434  076F                     l563:
  6435  076F  0008               	return
  6436  0770                     __end_of__div_to_l_:
  6437                           
  6438                           	psect	text14
  6439  1DD2                     __ptext14:	
  6440 ;; *************** function ___xxtofl *****************
  6441 ;; Defined at:
  6442 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  6443 ;; Parameters:    Size  Location     Type
  6444 ;;  sign            1    wreg     unsigned char 
  6445 ;;  val             4    3[COMMON] long 
  6446 ;; Auto vars:     Size  Location     Type
  6447 ;;  sign            1    4[BANK0 ] unsigned char 
  6448 ;;  arg             4    6[BANK0 ] unsigned long 
  6449 ;;  exp             1    5[BANK0 ] unsigned char 
  6450 ;; Return value:  Size  Location     Type
  6451 ;;                  4    3[COMMON] unsigned char 
  6452 ;; Registers used:
  6453 ;;		wreg, status,2, status,0
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 0/0
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6459 ;;      Params:         4       0       0       0       0
  6460 ;;      Locals:         0       6       0       0       0
  6461 ;;      Temps:          0       4       0       0       0
  6462 ;;      Totals:         4      10       0       0       0
  6463 ;;Total ram usage:       14 bytes
  6464 ;; Hardware stack levels used:    1
  6465 ;; Hardware stack levels required when called:    1
  6466 ;; This function calls:
  6467 ;;		Nothing
  6468 ;; This function is called by:
  6469 ;;		_main
  6470 ;;		_sprintf
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           
  6475                           ;psect for function ___xxtofl
  6476  1DD2                     ___xxtofl:
  6477                           
  6478                           ;incstack = 0
  6479                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6480                           ;___xxtofl@sign stored from wreg
  6481  1DD2  1283               	bcf	3,5	;RP0=0, select bank0
  6482  1DD3  1303               	bcf	3,6	;RP1=0, select bank0
  6483  1DD4  00A4               	movwf	___xxtofl@sign
  6484  1DD5                     l4032:
  6485  1DD5  0824               	movf	___xxtofl@sign,w
  6486  1DD6  1903               	btfsc	3,2
  6487  1DD7  2DD9               	goto	u6731
  6488  1DD8  2DDA               	goto	u6730
  6489  1DD9                     u6731:
  6490  1DD9  2DEE               	goto	l4038
  6491  1DDA                     u6730:
  6492  1DDA                     l4034:
  6493  1DDA  1FF6               	btfss	___xxtofl@val+3,7
  6494  1DDB  2DDD               	goto	u6741
  6495  1DDC  2DDE               	goto	u6740
  6496  1DDD                     u6741:
  6497  1DDD  2DEE               	goto	l4038
  6498  1DDE                     u6740:
  6499  1DDE                     l4036:
  6500  1DDE  0973               	comf	___xxtofl@val,w
  6501  1DDF  00A6               	movwf	___xxtofl@arg
  6502  1DE0  0974               	comf	___xxtofl@val+1,w
  6503  1DE1  00A7               	movwf	___xxtofl@arg+1
  6504  1DE2  0975               	comf	___xxtofl@val+2,w
  6505  1DE3  00A8               	movwf	___xxtofl@arg+2
  6506  1DE4  0976               	comf	___xxtofl@val+3,w
  6507  1DE5  00A9               	movwf	___xxtofl@arg+3
  6508  1DE6  0AA6               	incf	___xxtofl@arg,f
  6509  1DE7  1903               	skipnz
  6510  1DE8  0AA7               	incf	___xxtofl@arg+1,f
  6511  1DE9  1903               	skipnz
  6512  1DEA  0AA8               	incf	___xxtofl@arg+2,f
  6513  1DEB  1903               	skipnz
  6514  1DEC  0AA9               	incf	___xxtofl@arg+3,f
  6515  1DED  2DF6               	goto	l860
  6516  1DEE                     l4038:
  6517  1DEE  0876               	movf	___xxtofl@val+3,w
  6518  1DEF  00A9               	movwf	___xxtofl@arg+3
  6519  1DF0  0875               	movf	___xxtofl@val+2,w
  6520  1DF1  00A8               	movwf	___xxtofl@arg+2
  6521  1DF2  0874               	movf	___xxtofl@val+1,w
  6522  1DF3  00A7               	movwf	___xxtofl@arg+1
  6523  1DF4  0873               	movf	___xxtofl@val,w
  6524  1DF5  00A6               	movwf	___xxtofl@arg
  6525  1DF6                     l860:
  6526  1DF6  0876               	movf	___xxtofl@val+3,w
  6527  1DF7  0475               	iorwf	___xxtofl@val+2,w
  6528  1DF8  0474               	iorwf	___xxtofl@val+1,w
  6529  1DF9  0473               	iorwf	___xxtofl@val,w
  6530  1DFA  1D03               	skipz
  6531  1DFB  2DFD               	goto	u6751
  6532  1DFC  2DFE               	goto	u6750
  6533  1DFD                     u6751:
  6534  1DFD  2E07               	goto	l4044
  6535  1DFE                     u6750:
  6536  1DFE                     l4040:
  6537  1DFE  3000               	movlw	0
  6538  1DFF  00F6               	movwf	?___xxtofl+3
  6539  1E00  3000               	movlw	0
  6540  1E01  00F5               	movwf	?___xxtofl+2
  6541  1E02  3000               	movlw	0
  6542  1E03  00F4               	movwf	?___xxtofl+1
  6543  1E04  3000               	movlw	0
  6544  1E05  00F3               	movwf	?___xxtofl
  6545  1E06  2E8D               	goto	l862
  6546  1E07                     l4044:
  6547  1E07  3096               	movlw	150
  6548  1E08  00A0               	movwf	??___xxtofl
  6549  1E09  0820               	movf	??___xxtofl,w
  6550  1E0A  00A5               	movwf	___xxtofl@exp
  6551  1E0B  2E19               	goto	l4048
  6552  1E0C                     l4046:
  6553  1E0C  3001               	movlw	1
  6554  1E0D  00A0               	movwf	??___xxtofl
  6555  1E0E  0820               	movf	??___xxtofl,w
  6556  1E0F  07A5               	addwf	___xxtofl@exp,f
  6557  1E10  3001               	movlw	1
  6558  1E11                     u6765:
  6559  1E11  1003               	clrc
  6560  1E12  0CA9               	rrf	___xxtofl@arg+3,f
  6561  1E13  0CA8               	rrf	___xxtofl@arg+2,f
  6562  1E14  0CA7               	rrf	___xxtofl@arg+1,f
  6563  1E15  0CA6               	rrf	___xxtofl@arg,f
  6564  1E16  3EFF               	addlw	-1
  6565  1E17  1D03               	skipz
  6566  1E18  2E11               	goto	u6765
  6567  1E19                     l4048:
  6568  1E19  30FE               	movlw	254
  6569  1E1A  0529               	andwf	___xxtofl@arg+3,w
  6570  1E1B  1D03               	btfss	3,2
  6571  1E1C  2E1E               	goto	u6771
  6572  1E1D  2E1F               	goto	u6770
  6573  1E1E                     u6771:
  6574  1E1E  2E0C               	goto	l4046
  6575  1E1F                     u6770:
  6576  1E1F  2E3B               	goto	l866
  6577  1E20                     l4050:
  6578  1E20  3001               	movlw	1
  6579  1E21  00A0               	movwf	??___xxtofl
  6580  1E22  0820               	movf	??___xxtofl,w
  6581  1E23  07A5               	addwf	___xxtofl@exp,f
  6582  1E24                     l4052:
  6583  1E24  3001               	movlw	1
  6584  1E25  07A6               	addwf	___xxtofl@arg,f
  6585  1E26  3000               	movlw	0
  6586  1E27  1803               	skipnc
  6587  1E28  3001               	movlw	1
  6588  1E29  07A7               	addwf	___xxtofl@arg+1,f
  6589  1E2A  3000               	movlw	0
  6590  1E2B  1803               	skipnc
  6591  1E2C  3001               	movlw	1
  6592  1E2D  07A8               	addwf	___xxtofl@arg+2,f
  6593  1E2E  3000               	movlw	0
  6594  1E2F  1803               	skipnc
  6595  1E30  3001               	movlw	1
  6596  1E31  07A9               	addwf	___xxtofl@arg+3,f
  6597  1E32                     l4054:
  6598  1E32  3001               	movlw	1
  6599  1E33                     u6785:
  6600  1E33  1003               	clrc
  6601  1E34  0CA9               	rrf	___xxtofl@arg+3,f
  6602  1E35  0CA8               	rrf	___xxtofl@arg+2,f
  6603  1E36  0CA7               	rrf	___xxtofl@arg+1,f
  6604  1E37  0CA6               	rrf	___xxtofl@arg,f
  6605  1E38  3EFF               	addlw	-1
  6606  1E39  1D03               	skipz
  6607  1E3A  2E33               	goto	u6785
  6608  1E3B                     l866:
  6609  1E3B  30FF               	movlw	255
  6610  1E3C  0529               	andwf	___xxtofl@arg+3,w
  6611  1E3D  1D03               	btfss	3,2
  6612  1E3E  2E40               	goto	u6791
  6613  1E3F  2E41               	goto	u6790
  6614  1E40                     u6791:
  6615  1E40  2E20               	goto	l4050
  6616  1E41                     u6790:
  6617  1E41  2E4D               	goto	l4058
  6618  1E42                     l4056:
  6619  1E42  3001               	movlw	1
  6620  1E43  02A5               	subwf	___xxtofl@exp,f
  6621  1E44  3001               	movlw	1
  6622  1E45  00A0               	movwf	??___xxtofl
  6623  1E46                     u6805:
  6624  1E46  1003               	clrc
  6625  1E47  0DA6               	rlf	___xxtofl@arg,f
  6626  1E48  0DA7               	rlf	___xxtofl@arg+1,f
  6627  1E49  0DA8               	rlf	___xxtofl@arg+2,f
  6628  1E4A  0DA9               	rlf	___xxtofl@arg+3,f
  6629  1E4B  0BA0               	decfsz	??___xxtofl,f
  6630  1E4C  2E46               	goto	u6805
  6631  1E4D                     l4058:
  6632  1E4D  1BA8               	btfsc	___xxtofl@arg+2,7
  6633  1E4E  2E50               	goto	u6811
  6634  1E4F  2E51               	goto	u6810
  6635  1E50                     u6811:
  6636  1E50  2E57               	goto	l873
  6637  1E51                     u6810:
  6638  1E51                     l4060:
  6639  1E51  3002               	movlw	2
  6640  1E52  0225               	subwf	___xxtofl@exp,w
  6641  1E53  1803               	skipnc
  6642  1E54  2E56               	goto	u6821
  6643  1E55  2E57               	goto	u6820
  6644  1E56                     u6821:
  6645  1E56  2E42               	goto	l4056
  6646  1E57                     u6820:
  6647  1E57                     l873:
  6648  1E57  1825               	btfsc	___xxtofl@exp,0
  6649  1E58  2E5A               	goto	u6831
  6650  1E59  2E5B               	goto	u6830
  6651  1E5A                     u6831:
  6652  1E5A  2E63               	goto	l874
  6653  1E5B                     u6830:
  6654  1E5B                     l4062:
  6655  1E5B  30FF               	movlw	255
  6656  1E5C  05A6               	andwf	___xxtofl@arg,f
  6657  1E5D  30FF               	movlw	255
  6658  1E5E  05A7               	andwf	___xxtofl@arg+1,f
  6659  1E5F  307F               	movlw	127
  6660  1E60  05A8               	andwf	___xxtofl@arg+2,f
  6661  1E61  30FF               	movlw	255
  6662  1E62  05A9               	andwf	___xxtofl@arg+3,f
  6663  1E63                     l874:
  6664  1E63  1003               	clrc
  6665  1E64  0CA5               	rrf	___xxtofl@exp,f
  6666  1E65                     l4064:
  6667  1E65  0825               	movf	___xxtofl@exp,w
  6668  1E66  00A0               	movwf	??___xxtofl
  6669  1E67  01A1               	clrf	??___xxtofl+1
  6670  1E68  01A2               	clrf	??___xxtofl+2
  6671  1E69  01A3               	clrf	??___xxtofl+3
  6672  1E6A  3018               	movlw	24
  6673  1E6B                     u6845:
  6674  1E6B  1003               	clrc
  6675  1E6C  0DA0               	rlf	??___xxtofl,f
  6676  1E6D  0DA1               	rlf	??___xxtofl+1,f
  6677  1E6E  0DA2               	rlf	??___xxtofl+2,f
  6678  1E6F  0DA3               	rlf	??___xxtofl+3,f
  6679  1E70                     u6840:
  6680  1E70  3EFF               	addlw	-1
  6681  1E71  1D03               	skipz
  6682  1E72  2E6B               	goto	u6845
  6683  1E73  0820               	movf	??___xxtofl,w
  6684  1E74  04A6               	iorwf	___xxtofl@arg,f
  6685  1E75  0821               	movf	??___xxtofl+1,w
  6686  1E76  04A7               	iorwf	___xxtofl@arg+1,f
  6687  1E77  0822               	movf	??___xxtofl+2,w
  6688  1E78  04A8               	iorwf	___xxtofl@arg+2,f
  6689  1E79  0823               	movf	??___xxtofl+3,w
  6690  1E7A  04A9               	iorwf	___xxtofl@arg+3,f
  6691  1E7B                     l4066:
  6692  1E7B  0824               	movf	___xxtofl@sign,w
  6693  1E7C  1903               	btfsc	3,2
  6694  1E7D  2E7F               	goto	u6851
  6695  1E7E  2E80               	goto	u6850
  6696  1E7F                     u6851:
  6697  1E7F  2E85               	goto	l4072
  6698  1E80                     u6850:
  6699  1E80                     l4068:
  6700  1E80  1FF6               	btfss	___xxtofl@val+3,7
  6701  1E81  2E83               	goto	u6861
  6702  1E82  2E84               	goto	u6860
  6703  1E83                     u6861:
  6704  1E83  2E85               	goto	l4072
  6705  1E84                     u6860:
  6706  1E84                     l4070:
  6707  1E84  17A9               	bsf	___xxtofl@arg+3,7
  6708  1E85                     l4072:
  6709  1E85  0829               	movf	___xxtofl@arg+3,w
  6710  1E86  00F6               	movwf	?___xxtofl+3
  6711  1E87  0828               	movf	___xxtofl@arg+2,w
  6712  1E88  00F5               	movwf	?___xxtofl+2
  6713  1E89  0827               	movf	___xxtofl@arg+1,w
  6714  1E8A  00F4               	movwf	?___xxtofl+1
  6715  1E8B  0826               	movf	___xxtofl@arg,w
  6716  1E8C  00F3               	movwf	?___xxtofl
  6717  1E8D                     l862:
  6718  1E8D  0008               	return
  6719  1E8E                     __end_of___xxtofl:
  6720                           
  6721                           	psect	text15
  6722  1995                     __ptext15:	
  6723 ;; *************** function ___wmul *****************
  6724 ;; Defined at:
  6725 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6726 ;; Parameters:    Size  Location     Type
  6727 ;;  multiplier      2    3[COMMON] unsigned int 
  6728 ;;  multiplicand    2    5[COMMON] unsigned int 
  6729 ;; Auto vars:     Size  Location     Type
  6730 ;;  product         2    7[COMMON] unsigned int 
  6731 ;; Return value:  Size  Location     Type
  6732 ;;                  2    3[COMMON] unsigned int 
  6733 ;; Registers used:
  6734 ;;		wreg, status,2, status,0
  6735 ;; Tracked objects:
  6736 ;;		On entry : 0/0
  6737 ;;		On exit  : 0/0
  6738 ;;		Unchanged: 0/0
  6739 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6740 ;;      Params:         4       0       0       0       0
  6741 ;;      Locals:         2       0       0       0       0
  6742 ;;      Temps:          0       0       0       0       0
  6743 ;;      Totals:         6       0       0       0       0
  6744 ;;Total ram usage:        6 bytes
  6745 ;; Hardware stack levels used:    1
  6746 ;; Hardware stack levels required when called:    1
  6747 ;; This function calls:
  6748 ;;		Nothing
  6749 ;; This function is called by:
  6750 ;;		_sprintf
  6751 ;; This function uses a non-reentrant model
  6752 ;;
  6753                           
  6754                           
  6755                           ;psect for function ___wmul
  6756  1995                     ___wmul:
  6757  1995                     l3032:	
  6758                           ;incstack = 0
  6759                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6760                           
  6761  1995  01F7               	clrf	___wmul@product
  6762  1996  01F8               	clrf	___wmul@product+1
  6763  1997                     l3034:
  6764  1997  1C73               	btfss	___wmul@multiplier,0
  6765  1998  299A               	goto	u4701
  6766  1999  299B               	goto	u4700
  6767  199A                     u4701:
  6768  199A  29A1               	goto	l393
  6769  199B                     u4700:
  6770  199B                     l3036:
  6771  199B  0875               	movf	___wmul@multiplicand,w
  6772  199C  07F7               	addwf	___wmul@product,f
  6773  199D  1803               	skipnc
  6774  199E  0AF8               	incf	___wmul@product+1,f
  6775  199F  0876               	movf	___wmul@multiplicand+1,w
  6776  19A0  07F8               	addwf	___wmul@product+1,f
  6777  19A1                     l393:
  6778  19A1  3001               	movlw	1
  6779  19A2                     u4715:
  6780  19A2  1003               	clrc
  6781  19A3  0DF5               	rlf	___wmul@multiplicand,f
  6782  19A4  0DF6               	rlf	___wmul@multiplicand+1,f
  6783  19A5  3EFF               	addlw	-1
  6784  19A6  1D03               	skipz
  6785  19A7  29A2               	goto	u4715
  6786  19A8                     l3038:
  6787  19A8  3001               	movlw	1
  6788  19A9                     u4725:
  6789  19A9  1003               	clrc
  6790  19AA  0CF4               	rrf	___wmul@multiplier+1,f
  6791  19AB  0CF3               	rrf	___wmul@multiplier,f
  6792  19AC  3EFF               	addlw	-1
  6793  19AD  1D03               	skipz
  6794  19AE  29A9               	goto	u4725
  6795  19AF                     l3040:
  6796  19AF  0873               	movf	___wmul@multiplier,w
  6797  19B0  0474               	iorwf	___wmul@multiplier+1,w
  6798  19B1  1D03               	btfss	3,2
  6799  19B2  29B4               	goto	u4731
  6800  19B3  29B5               	goto	u4730
  6801  19B4                     u4731:
  6802  19B4  2997               	goto	l3034
  6803  19B5                     u4730:
  6804  19B5                     l3042:
  6805  19B5  0878               	movf	___wmul@product+1,w
  6806  19B6  00F4               	movwf	?___wmul+1
  6807  19B7  0877               	movf	___wmul@product,w
  6808  19B8  00F3               	movwf	?___wmul
  6809  19B9                     l395:
  6810  19B9  0008               	return
  6811  19BA                     __end_of___wmul:
  6812                           
  6813                           	psect	text16
  6814  1C70                     __ptext16:	
  6815 ;; *************** function ___llmod *****************
  6816 ;; Defined at:
  6817 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6818 ;; Parameters:    Size  Location     Type
  6819 ;;  divisor         4    8[BANK0 ] unsigned long 
  6820 ;;  dividend        4   12[BANK0 ] unsigned long 
  6821 ;; Auto vars:     Size  Location     Type
  6822 ;;  counter         1   16[BANK0 ] unsigned char 
  6823 ;; Return value:  Size  Location     Type
  6824 ;;                  4    8[BANK0 ] unsigned long 
  6825 ;; Registers used:
  6826 ;;		wreg, status,2, status,0
  6827 ;; Tracked objects:
  6828 ;;		On entry : 0/0
  6829 ;;		On exit  : 0/0
  6830 ;;		Unchanged: 0/0
  6831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6832 ;;      Params:         0       8       0       0       0
  6833 ;;      Locals:         0       1       0       0       0
  6834 ;;      Temps:          1       0       0       0       0
  6835 ;;      Totals:         1       9       0       0       0
  6836 ;;Total ram usage:       10 bytes
  6837 ;; Hardware stack levels used:    1
  6838 ;; Hardware stack levels required when called:    1
  6839 ;; This function calls:
  6840 ;;		Nothing
  6841 ;; This function is called by:
  6842 ;;		_sprintf
  6843 ;; This function uses a non-reentrant model
  6844 ;;
  6845                           
  6846                           
  6847                           ;psect for function ___llmod
  6848  1C70                     ___llmod:
  6849  1C70                     l4012:	
  6850                           ;incstack = 0
  6851                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6852                           
  6853  1C70  1283               	bcf	3,5	;RP0=0, select bank0
  6854  1C71  1303               	bcf	3,6	;RP1=0, select bank0
  6855  1C72  082B               	movf	___llmod@divisor+3,w
  6856  1C73  042A               	iorwf	___llmod@divisor+2,w
  6857  1C74  0429               	iorwf	___llmod@divisor+1,w
  6858  1C75  0428               	iorwf	___llmod@divisor,w
  6859  1C76  1903               	skipnz
  6860  1C77  2C79               	goto	u6671
  6861  1C78  2C7A               	goto	u6670
  6862  1C79                     u6671:
  6863  1C79  2CBD               	goto	l4028
  6864  1C7A                     u6670:
  6865  1C7A                     l4014:
  6866  1C7A  01B0               	clrf	___llmod@counter
  6867  1C7B  0AB0               	incf	___llmod@counter,f
  6868  1C7C  2C8A               	goto	l4018
  6869  1C7D                     l4016:
  6870  1C7D  3001               	movlw	1
  6871  1C7E  00F9               	movwf	??___llmod
  6872  1C7F                     u6685:
  6873  1C7F  1003               	clrc
  6874  1C80  0DA8               	rlf	___llmod@divisor,f
  6875  1C81  0DA9               	rlf	___llmod@divisor+1,f
  6876  1C82  0DAA               	rlf	___llmod@divisor+2,f
  6877  1C83  0DAB               	rlf	___llmod@divisor+3,f
  6878  1C84  0BF9               	decfsz	??___llmod,f
  6879  1C85  2C7F               	goto	u6685
  6880  1C86  3001               	movlw	1
  6881  1C87  00F9               	movwf	??___llmod
  6882  1C88  0879               	movf	??___llmod,w
  6883  1C89  07B0               	addwf	___llmod@counter,f
  6884  1C8A                     l4018:
  6885  1C8A  1FAB               	btfss	___llmod@divisor+3,7
  6886  1C8B  2C8D               	goto	u6691
  6887  1C8C  2C8E               	goto	u6690
  6888  1C8D                     u6691:
  6889  1C8D  2C7D               	goto	l4016
  6890  1C8E                     u6690:
  6891  1C8E                     l4020:
  6892  1C8E  082B               	movf	___llmod@divisor+3,w
  6893  1C8F  022F               	subwf	___llmod@dividend+3,w
  6894  1C90  1D03               	skipz
  6895  1C91  2C9C               	goto	u6705
  6896  1C92  082A               	movf	___llmod@divisor+2,w
  6897  1C93  022E               	subwf	___llmod@dividend+2,w
  6898  1C94  1D03               	skipz
  6899  1C95  2C9C               	goto	u6705
  6900  1C96  0829               	movf	___llmod@divisor+1,w
  6901  1C97  022D               	subwf	___llmod@dividend+1,w
  6902  1C98  1D03               	skipz
  6903  1C99  2C9C               	goto	u6705
  6904  1C9A  0828               	movf	___llmod@divisor,w
  6905  1C9B  022C               	subwf	___llmod@dividend,w
  6906  1C9C                     u6705:
  6907  1C9C  1C03               	skipc
  6908  1C9D  2C9F               	goto	u6701
  6909  1C9E  2CA0               	goto	u6700
  6910  1C9F                     u6701:
  6911  1C9F  2CAE               	goto	l4024
  6912  1CA0                     u6700:
  6913  1CA0                     l4022:
  6914  1CA0  0828               	movf	___llmod@divisor,w
  6915  1CA1  02AC               	subwf	___llmod@dividend,f
  6916  1CA2  0829               	movf	___llmod@divisor+1,w
  6917  1CA3  1C03               	skipc
  6918  1CA4  0F29               	incfsz	___llmod@divisor+1,w
  6919  1CA5  02AD               	subwf	___llmod@dividend+1,f
  6920  1CA6  082A               	movf	___llmod@divisor+2,w
  6921  1CA7  1C03               	skipc
  6922  1CA8  0F2A               	incfsz	___llmod@divisor+2,w
  6923  1CA9  02AE               	subwf	___llmod@dividend+2,f
  6924  1CAA  082B               	movf	___llmod@divisor+3,w
  6925  1CAB  1C03               	skipc
  6926  1CAC  0F2B               	incfsz	___llmod@divisor+3,w
  6927  1CAD  02AF               	subwf	___llmod@dividend+3,f
  6928  1CAE                     l4024:
  6929  1CAE  3001               	movlw	1
  6930  1CAF                     u6715:
  6931  1CAF  1003               	clrc
  6932  1CB0  0CAB               	rrf	___llmod@divisor+3,f
  6933  1CB1  0CAA               	rrf	___llmod@divisor+2,f
  6934  1CB2  0CA9               	rrf	___llmod@divisor+1,f
  6935  1CB3  0CA8               	rrf	___llmod@divisor,f
  6936  1CB4  3EFF               	addlw	-1
  6937  1CB5  1D03               	skipz
  6938  1CB6  2CAF               	goto	u6715
  6939  1CB7                     l4026:
  6940  1CB7  3001               	movlw	1
  6941  1CB8  02B0               	subwf	___llmod@counter,f
  6942  1CB9  1D03               	btfss	3,2
  6943  1CBA  2CBC               	goto	u6721
  6944  1CBB  2CBD               	goto	u6720
  6945  1CBC                     u6721:
  6946  1CBC  2C8E               	goto	l4020
  6947  1CBD                     u6720:
  6948  1CBD                     l4028:
  6949  1CBD  082F               	movf	___llmod@dividend+3,w
  6950  1CBE  00AB               	movwf	?___llmod+3
  6951  1CBF  082E               	movf	___llmod@dividend+2,w
  6952  1CC0  00AA               	movwf	?___llmod+2
  6953  1CC1  082D               	movf	___llmod@dividend+1,w
  6954  1CC2  00A9               	movwf	?___llmod+1
  6955  1CC3  082C               	movf	___llmod@dividend,w
  6956  1CC4  00A8               	movwf	?___llmod
  6957  1CC5                     l649:
  6958  1CC5  0008               	return
  6959  1CC6                     __end_of___llmod:
  6960                           
  6961                           	psect	text17
  6962  1CC6                     __ptext17:	
  6963 ;; *************** function ___lldiv *****************
  6964 ;; Defined at:
  6965 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6966 ;; Parameters:    Size  Location     Type
  6967 ;;  divisor         4    0[BANK0 ] unsigned long 
  6968 ;;  dividend        4    4[BANK0 ] unsigned long 
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;  quotient        4    4[COMMON] unsigned long 
  6971 ;;  counter         1    8[COMMON] unsigned char 
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  4    0[BANK0 ] unsigned long 
  6974 ;; Registers used:
  6975 ;;		wreg, status,2, status,0
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6981 ;;      Params:         0       8       0       0       0
  6982 ;;      Locals:         5       0       0       0       0
  6983 ;;      Temps:          1       0       0       0       0
  6984 ;;      Totals:         6       8       0       0       0
  6985 ;;Total ram usage:       14 bytes
  6986 ;; Hardware stack levels used:    1
  6987 ;; Hardware stack levels required when called:    1
  6988 ;; This function calls:
  6989 ;;		Nothing
  6990 ;; This function is called by:
  6991 ;;		_sprintf
  6992 ;; This function uses a non-reentrant model
  6993 ;;
  6994                           
  6995                           
  6996                           ;psect for function ___lldiv
  6997  1CC6                     ___lldiv:
  6998  1CC6                     l3956:	
  6999                           ;incstack = 0
  7000                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7001                           
  7002  1CC6  3000               	movlw	0
  7003  1CC7  00F7               	movwf	___lldiv@quotient+3
  7004  1CC8  3000               	movlw	0
  7005  1CC9  00F6               	movwf	___lldiv@quotient+2
  7006  1CCA  3000               	movlw	0
  7007  1CCB  00F5               	movwf	___lldiv@quotient+1
  7008  1CCC  3000               	movlw	0
  7009  1CCD  00F4               	movwf	___lldiv@quotient
  7010  1CCE  1283               	bcf	3,5	;RP0=0, select bank0
  7011  1CCF  1303               	bcf	3,6	;RP1=0, select bank0
  7012  1CD0  0823               	movf	___lldiv@divisor+3,w
  7013  1CD1  0422               	iorwf	___lldiv@divisor+2,w
  7014  1CD2  0421               	iorwf	___lldiv@divisor+1,w
  7015  1CD3  0420               	iorwf	___lldiv@divisor,w
  7016  1CD4  1903               	skipnz
  7017  1CD5  2CD7               	goto	u6501
  7018  1CD6  2CD8               	goto	u6500
  7019  1CD7                     u6501:
  7020  1CD7  2D25               	goto	l3976
  7021  1CD8                     u6500:
  7022  1CD8                     l3958:
  7023  1CD8  01F8               	clrf	___lldiv@counter
  7024  1CD9  0AF8               	incf	___lldiv@counter,f
  7025  1CDA  2CE8               	goto	l3962
  7026  1CDB                     l3960:
  7027  1CDB  3001               	movlw	1
  7028  1CDC  00F3               	movwf	??___lldiv
  7029  1CDD                     u6515:
  7030  1CDD  1003               	clrc
  7031  1CDE  0DA0               	rlf	___lldiv@divisor,f
  7032  1CDF  0DA1               	rlf	___lldiv@divisor+1,f
  7033  1CE0  0DA2               	rlf	___lldiv@divisor+2,f
  7034  1CE1  0DA3               	rlf	___lldiv@divisor+3,f
  7035  1CE2  0BF3               	decfsz	??___lldiv,f
  7036  1CE3  2CDD               	goto	u6515
  7037  1CE4  3001               	movlw	1
  7038  1CE5  00F3               	movwf	??___lldiv
  7039  1CE6  0873               	movf	??___lldiv,w
  7040  1CE7  07F8               	addwf	___lldiv@counter,f
  7041  1CE8                     l3962:
  7042  1CE8  1FA3               	btfss	___lldiv@divisor+3,7
  7043  1CE9  2CEB               	goto	u6521
  7044  1CEA  2CEC               	goto	u6520
  7045  1CEB                     u6521:
  7046  1CEB  2CDB               	goto	l3960
  7047  1CEC                     u6520:
  7048  1CEC                     l3964:
  7049  1CEC  3001               	movlw	1
  7050  1CED  00F3               	movwf	??___lldiv
  7051  1CEE                     u6535:
  7052  1CEE  1003               	clrc
  7053  1CEF  0DF4               	rlf	___lldiv@quotient,f
  7054  1CF0  0DF5               	rlf	___lldiv@quotient+1,f
  7055  1CF1  0DF6               	rlf	___lldiv@quotient+2,f
  7056  1CF2  0DF7               	rlf	___lldiv@quotient+3,f
  7057  1CF3  0BF3               	decfsz	??___lldiv,f
  7058  1CF4  2CEE               	goto	u6535
  7059  1CF5                     l3966:
  7060  1CF5  0823               	movf	___lldiv@divisor+3,w
  7061  1CF6  0227               	subwf	___lldiv@dividend+3,w
  7062  1CF7  1D03               	skipz
  7063  1CF8  2D03               	goto	u6545
  7064  1CF9  0822               	movf	___lldiv@divisor+2,w
  7065  1CFA  0226               	subwf	___lldiv@dividend+2,w
  7066  1CFB  1D03               	skipz
  7067  1CFC  2D03               	goto	u6545
  7068  1CFD  0821               	movf	___lldiv@divisor+1,w
  7069  1CFE  0225               	subwf	___lldiv@dividend+1,w
  7070  1CFF  1D03               	skipz
  7071  1D00  2D03               	goto	u6545
  7072  1D01  0820               	movf	___lldiv@divisor,w
  7073  1D02  0224               	subwf	___lldiv@dividend,w
  7074  1D03                     u6545:
  7075  1D03  1C03               	skipc
  7076  1D04  2D06               	goto	u6541
  7077  1D05  2D07               	goto	u6540
  7078  1D06                     u6541:
  7079  1D06  2D16               	goto	l3972
  7080  1D07                     u6540:
  7081  1D07                     l3968:
  7082  1D07  0820               	movf	___lldiv@divisor,w
  7083  1D08  02A4               	subwf	___lldiv@dividend,f
  7084  1D09  0821               	movf	___lldiv@divisor+1,w
  7085  1D0A  1C03               	skipc
  7086  1D0B  0F21               	incfsz	___lldiv@divisor+1,w
  7087  1D0C  02A5               	subwf	___lldiv@dividend+1,f
  7088  1D0D  0822               	movf	___lldiv@divisor+2,w
  7089  1D0E  1C03               	skipc
  7090  1D0F  0F22               	incfsz	___lldiv@divisor+2,w
  7091  1D10  02A6               	subwf	___lldiv@dividend+2,f
  7092  1D11  0823               	movf	___lldiv@divisor+3,w
  7093  1D12  1C03               	skipc
  7094  1D13  0F23               	incfsz	___lldiv@divisor+3,w
  7095  1D14  02A7               	subwf	___lldiv@dividend+3,f
  7096  1D15                     l3970:
  7097  1D15  1474               	bsf	___lldiv@quotient,0
  7098  1D16                     l3972:
  7099  1D16  3001               	movlw	1
  7100  1D17                     u6555:
  7101  1D17  1003               	clrc
  7102  1D18  0CA3               	rrf	___lldiv@divisor+3,f
  7103  1D19  0CA2               	rrf	___lldiv@divisor+2,f
  7104  1D1A  0CA1               	rrf	___lldiv@divisor+1,f
  7105  1D1B  0CA0               	rrf	___lldiv@divisor,f
  7106  1D1C  3EFF               	addlw	-1
  7107  1D1D  1D03               	skipz
  7108  1D1E  2D17               	goto	u6555
  7109  1D1F                     l3974:
  7110  1D1F  3001               	movlw	1
  7111  1D20  02F8               	subwf	___lldiv@counter,f
  7112  1D21  1D03               	btfss	3,2
  7113  1D22  2D24               	goto	u6561
  7114  1D23  2D25               	goto	u6560
  7115  1D24                     u6561:
  7116  1D24  2CEC               	goto	l3964
  7117  1D25                     u6560:
  7118  1D25                     l3976:
  7119  1D25  0877               	movf	___lldiv@quotient+3,w
  7120  1D26  00A3               	movwf	?___lldiv+3
  7121  1D27  0876               	movf	___lldiv@quotient+2,w
  7122  1D28  00A2               	movwf	?___lldiv+2
  7123  1D29  0875               	movf	___lldiv@quotient+1,w
  7124  1D2A  00A1               	movwf	?___lldiv+1
  7125  1D2B  0874               	movf	___lldiv@quotient,w
  7126  1D2C  00A0               	movwf	?___lldiv
  7127  1D2D                     l429:
  7128  1D2D  0008               	return
  7129  1D2E                     __end_of___lldiv:
  7130                           
  7131                           	psect	text18
  7132  0770                     __ptext18:	
  7133 ;; *************** function ___fltol *****************
  7134 ;; Defined at:
  7135 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7136 ;; Parameters:    Size  Location     Type
  7137 ;;  f1              4   55[BANK0 ] unsigned long 
  7138 ;; Auto vars:     Size  Location     Type
  7139 ;;  exp1            1   65[BANK0 ] unsigned char 
  7140 ;;  sign1           1   64[BANK0 ] unsigned char 
  7141 ;; Return value:  Size  Location     Type
  7142 ;;                  4   55[BANK0 ] long 
  7143 ;; Registers used:
  7144 ;;		wreg, status,2, status,0
  7145 ;; Tracked objects:
  7146 ;;		On entry : 0/0
  7147 ;;		On exit  : 0/0
  7148 ;;		Unchanged: 0/0
  7149 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7150 ;;      Params:         0       4       0       0       0
  7151 ;;      Locals:         0       2       0       0       0
  7152 ;;      Temps:          0       5       0       0       0
  7153 ;;      Totals:         0      11       0       0       0
  7154 ;;Total ram usage:       11 bytes
  7155 ;; Hardware stack levels used:    1
  7156 ;; Hardware stack levels required when called:    1
  7157 ;; This function calls:
  7158 ;;		Nothing
  7159 ;; This function is called by:
  7160 ;;		_sprintf
  7161 ;; This function uses a non-reentrant model
  7162 ;;
  7163                           
  7164                           
  7165                           ;psect for function ___fltol
  7166  0770                     ___fltol:
  7167  0770                     l3110:	
  7168                           ;incstack = 0
  7169                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7170                           
  7171  0770  1003               	clrc
  7172  0771  1283               	bcf	3,5	;RP0=0, select bank0
  7173  0772  1303               	bcf	3,6	;RP1=0, select bank0
  7174  0773  0D59               	rlf	___fltol@f1+2,w
  7175  0774  0D5A               	rlf	___fltol@f1+3,w
  7176  0775  00DB               	movwf	??___fltol
  7177  0776  085B               	movf	??___fltol,w
  7178  0777  00E1               	movwf	___fltol@exp1
  7179  0778  0861               	movf	___fltol@exp1,w
  7180  0779  1D03               	btfss	3,2
  7181  077A  2F7C               	goto	u4921
  7182  077B  2F7D               	goto	u4920
  7183  077C                     u4921:
  7184  077C  2F86               	goto	l3116
  7185  077D                     u4920:
  7186  077D                     l3112:
  7187  077D  3000               	movlw	0
  7188  077E  00DA               	movwf	?___fltol+3
  7189  077F  3000               	movlw	0
  7190  0780  00D9               	movwf	?___fltol+2
  7191  0781  3000               	movlw	0
  7192  0782  00D8               	movwf	?___fltol+1
  7193  0783  3000               	movlw	0
  7194  0784  00D7               	movwf	?___fltol
  7195  0785  2FEB               	goto	l596
  7196  0786                     l3116:
  7197  0786  0857               	movf	___fltol@f1,w
  7198  0787  00DB               	movwf	??___fltol
  7199  0788  0858               	movf	___fltol@f1+1,w
  7200  0789  00DC               	movwf	??___fltol+1
  7201  078A  0859               	movf	___fltol@f1+2,w
  7202  078B  00DD               	movwf	??___fltol+2
  7203  078C  085A               	movf	___fltol@f1+3,w
  7204  078D  00DE               	movwf	??___fltol+3
  7205  078E  301F               	movlw	31
  7206  078F                     u4935:
  7207  078F  1003               	clrc
  7208  0790  0CDE               	rrf	??___fltol+3,f
  7209  0791  0CDD               	rrf	??___fltol+2,f
  7210  0792  0CDC               	rrf	??___fltol+1,f
  7211  0793  0CDB               	rrf	??___fltol,f
  7212  0794                     u4930:
  7213  0794  3EFF               	addlw	-1
  7214  0795  1D03               	skipz
  7215  0796  2F8F               	goto	u4935
  7216  0797  085B               	movf	??___fltol,w
  7217  0798  00DF               	movwf	??___fltol+4
  7218  0799  085F               	movf	??___fltol+4,w
  7219  079A  00E0               	movwf	___fltol@sign1
  7220  079B                     l3118:
  7221  079B  17D9               	bsf	___fltol@f1+2,7
  7222  079C                     l3120:
  7223  079C  30FF               	movlw	255
  7224  079D  05D7               	andwf	___fltol@f1,f
  7225  079E  30FF               	movlw	255
  7226  079F  05D8               	andwf	___fltol@f1+1,f
  7227  07A0  30FF               	movlw	255
  7228  07A1  05D9               	andwf	___fltol@f1+2,f
  7229  07A2  3000               	movlw	0
  7230  07A3  05DA               	andwf	___fltol@f1+3,f
  7231  07A4                     l3122:
  7232  07A4  3096               	movlw	150
  7233  07A5  02E1               	subwf	___fltol@exp1,f
  7234  07A6                     l3124:
  7235  07A6  1FE1               	btfss	___fltol@exp1,7
  7236  07A7  2FA9               	goto	u4941
  7237  07A8  2FAA               	goto	u4940
  7238  07A9                     u4941:
  7239  07A9  2FC4               	goto	l3134
  7240  07AA                     u4940:
  7241  07AA                     l3126:
  7242  07AA  0861               	movf	___fltol@exp1,w
  7243  07AB  3A80               	xorlw	128
  7244  07AC  3E97               	addlw	151
  7245  07AD  1803               	skipnc
  7246  07AE  2FB0               	goto	u4951
  7247  07AF  2FB1               	goto	u4950
  7248  07B0                     u4951:
  7249  07B0  2FB2               	goto	l3132
  7250  07B1                     u4950:
  7251  07B1  2F7D               	goto	l3112
  7252  07B2                     l3132:
  7253  07B2  3001               	movlw	1
  7254  07B3                     u4965:
  7255  07B3  1003               	clrc
  7256  07B4  0CDA               	rrf	___fltol@f1+3,f
  7257  07B5  0CD9               	rrf	___fltol@f1+2,f
  7258  07B6  0CD8               	rrf	___fltol@f1+1,f
  7259  07B7  0CD7               	rrf	___fltol@f1,f
  7260  07B8  3EFF               	addlw	-1
  7261  07B9  1D03               	skipz
  7262  07BA  2FB3               	goto	u4965
  7263  07BB  3001               	movlw	1
  7264  07BC  00DB               	movwf	??___fltol
  7265  07BD  085B               	movf	??___fltol,w
  7266  07BE  07E1               	addwf	___fltol@exp1,f
  7267  07BF  1D03               	btfss	3,2
  7268  07C0  2FC2               	goto	u4971
  7269  07C1  2FC3               	goto	u4970
  7270  07C2                     u4971:
  7271  07C2  2FB2               	goto	l3132
  7272  07C3                     u4970:
  7273  07C3  2FDB               	goto	l3142
  7274  07C4                     l3134:
  7275  07C4  3020               	movlw	32
  7276  07C5  0261               	subwf	___fltol@exp1,w
  7277  07C6  1C03               	skipc
  7278  07C7  2FC9               	goto	u4981
  7279  07C8  2FCA               	goto	u4980
  7280  07C9                     u4981:
  7281  07C9  2FD6               	goto	l603
  7282  07CA                     u4980:
  7283  07CA  2F7D               	goto	l3112
  7284  07CB                     l3140:
  7285  07CB  3001               	movlw	1
  7286  07CC  00DB               	movwf	??___fltol
  7287  07CD                     u4995:
  7288  07CD  1003               	clrc
  7289  07CE  0DD7               	rlf	___fltol@f1,f
  7290  07CF  0DD8               	rlf	___fltol@f1+1,f
  7291  07D0  0DD9               	rlf	___fltol@f1+2,f
  7292  07D1  0DDA               	rlf	___fltol@f1+3,f
  7293  07D2  0BDB               	decfsz	??___fltol,f
  7294  07D3  2FCD               	goto	u4995
  7295  07D4  3001               	movlw	1
  7296  07D5  02E1               	subwf	___fltol@exp1,f
  7297  07D6                     l603:
  7298  07D6  0861               	movf	___fltol@exp1,w
  7299  07D7  1D03               	btfss	3,2
  7300  07D8  2FDA               	goto	u5001
  7301  07D9  2FDB               	goto	u5000
  7302  07DA                     u5001:
  7303  07DA  2FCB               	goto	l3140
  7304  07DB                     u5000:
  7305  07DB                     l3142:
  7306  07DB  0860               	movf	___fltol@sign1,w
  7307  07DC  1903               	btfsc	3,2
  7308  07DD  2FDF               	goto	u5011
  7309  07DE  2FE0               	goto	u5010
  7310  07DF                     u5011:
  7311  07DF  2FEB               	goto	l606
  7312  07E0                     u5010:
  7313  07E0                     l3144:
  7314  07E0  09D7               	comf	___fltol@f1,f
  7315  07E1  09D8               	comf	___fltol@f1+1,f
  7316  07E2  09D9               	comf	___fltol@f1+2,f
  7317  07E3  09DA               	comf	___fltol@f1+3,f
  7318  07E4  0AD7               	incf	___fltol@f1,f
  7319  07E5  1903               	skipnz
  7320  07E6  0AD8               	incf	___fltol@f1+1,f
  7321  07E7  1903               	skipnz
  7322  07E8  0AD9               	incf	___fltol@f1+2,f
  7323  07E9  1903               	skipnz
  7324  07EA  0ADA               	incf	___fltol@f1+3,f
  7325  07EB                     l606:
  7326  07EB                     l596:
  7327  07EB  0008               	return
  7328  07EC                     __end_of___fltol:
  7329                           
  7330                           	psect	text19
  7331  1C20                     __ptext19:	
  7332 ;; *************** function ___flsub *****************
  7333 ;; Defined at:
  7334 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7335 ;; Parameters:    Size  Location     Type
  7336 ;;  a               4    0[BANK1 ] long 
  7337 ;;  b               4    4[BANK1 ] long 
  7338 ;; Auto vars:     Size  Location     Type
  7339 ;;		None
  7340 ;; Return value:  Size  Location     Type
  7341 ;;                  4    0[BANK1 ] long 
  7342 ;; Registers used:
  7343 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7344 ;; Tracked objects:
  7345 ;;		On entry : 0/0
  7346 ;;		On exit  : 0/0
  7347 ;;		Unchanged: 0/0
  7348 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7349 ;;      Params:         0       0       8       0       0
  7350 ;;      Locals:         0       0       0       0       0
  7351 ;;      Temps:          0       0       0       0       0
  7352 ;;      Totals:         0       0       8       0       0
  7353 ;;Total ram usage:        8 bytes
  7354 ;; Hardware stack levels used:    1
  7355 ;; Hardware stack levels required when called:    2
  7356 ;; This function calls:
  7357 ;;		___fladd
  7358 ;; This function is called by:
  7359 ;;		_sprintf
  7360 ;; This function uses a non-reentrant model
  7361 ;;
  7362                           
  7363                           
  7364                           ;psect for function ___flsub
  7365  1C20                     ___flsub:
  7366  1C20                     l3166:	
  7367                           ;incstack = 0
  7368                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7369                           
  7370  1C20  3080               	movlw	128
  7371  1C21  1683               	bsf	3,5	;RP0=1, select bank1
  7372  1C22  1303               	bcf	3,6	;RP1=0, select bank1
  7373  1C23  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  7374  1C24                     l3168:
  7375  1C24  0827               	movf	(___flsub@b+3)^(0+128),w
  7376  1C25  1283               	bcf	3,5	;RP0=0, select bank0
  7377  1C26  1303               	bcf	3,6	;RP1=0, select bank0
  7378  1C27  00DB               	movwf	___fladd@b+3
  7379  1C28  1683               	bsf	3,5	;RP0=1, select bank1
  7380  1C29  1303               	bcf	3,6	;RP1=0, select bank1
  7381  1C2A  0826               	movf	(___flsub@b+2)^(0+128),w
  7382  1C2B  1283               	bcf	3,5	;RP0=0, select bank0
  7383  1C2C  1303               	bcf	3,6	;RP1=0, select bank0
  7384  1C2D  00DA               	movwf	___fladd@b+2
  7385  1C2E  1683               	bsf	3,5	;RP0=1, select bank1
  7386  1C2F  1303               	bcf	3,6	;RP1=0, select bank1
  7387  1C30  0825               	movf	(___flsub@b+1)^(0+128),w
  7388  1C31  1283               	bcf	3,5	;RP0=0, select bank0
  7389  1C32  1303               	bcf	3,6	;RP1=0, select bank0
  7390  1C33  00D9               	movwf	___fladd@b+1
  7391  1C34  1683               	bsf	3,5	;RP0=1, select bank1
  7392  1C35  1303               	bcf	3,6	;RP1=0, select bank1
  7393  1C36  0824               	movf	___flsub@b^(0+128),w
  7394  1C37  1283               	bcf	3,5	;RP0=0, select bank0
  7395  1C38  1303               	bcf	3,6	;RP1=0, select bank0
  7396  1C39  00D8               	movwf	___fladd@b
  7397  1C3A  1683               	bsf	3,5	;RP0=1, select bank1
  7398  1C3B  1303               	bcf	3,6	;RP1=0, select bank1
  7399  1C3C  0823               	movf	(___flsub@a+3)^(0+128),w
  7400  1C3D  1283               	bcf	3,5	;RP0=0, select bank0
  7401  1C3E  1303               	bcf	3,6	;RP1=0, select bank0
  7402  1C3F  00DF               	movwf	___fladd@a+3
  7403  1C40  1683               	bsf	3,5	;RP0=1, select bank1
  7404  1C41  1303               	bcf	3,6	;RP1=0, select bank1
  7405  1C42  0822               	movf	(___flsub@a+2)^(0+128),w
  7406  1C43  1283               	bcf	3,5	;RP0=0, select bank0
  7407  1C44  1303               	bcf	3,6	;RP1=0, select bank0
  7408  1C45  00DE               	movwf	___fladd@a+2
  7409  1C46  1683               	bsf	3,5	;RP0=1, select bank1
  7410  1C47  1303               	bcf	3,6	;RP1=0, select bank1
  7411  1C48  0821               	movf	(___flsub@a+1)^(0+128),w
  7412  1C49  1283               	bcf	3,5	;RP0=0, select bank0
  7413  1C4A  1303               	bcf	3,6	;RP1=0, select bank0
  7414  1C4B  00DD               	movwf	___fladd@a+1
  7415  1C4C  1683               	bsf	3,5	;RP0=1, select bank1
  7416  1C4D  1303               	bcf	3,6	;RP1=0, select bank1
  7417  1C4E  0820               	movf	___flsub@a^(0+128),w
  7418  1C4F  1283               	bcf	3,5	;RP0=0, select bank0
  7419  1C50  1303               	bcf	3,6	;RP1=0, select bank0
  7420  1C51  00DC               	movwf	___fladd@a
  7421  1C52  160A  118A  226E  160A  158A  	fcall	___fladd
  7422  1C57  1283               	bcf	3,5	;RP0=0, select bank0
  7423  1C58  1303               	bcf	3,6	;RP1=0, select bank0
  7424  1C59  085B               	movf	?___fladd+3,w
  7425  1C5A  1683               	bsf	3,5	;RP0=1, select bank1
  7426  1C5B  1303               	bcf	3,6	;RP1=0, select bank1
  7427  1C5C  00A3               	movwf	(?___flsub+3)^(0+128)
  7428  1C5D  1283               	bcf	3,5	;RP0=0, select bank0
  7429  1C5E  1303               	bcf	3,6	;RP1=0, select bank0
  7430  1C5F  085A               	movf	?___fladd+2,w
  7431  1C60  1683               	bsf	3,5	;RP0=1, select bank1
  7432  1C61  1303               	bcf	3,6	;RP1=0, select bank1
  7433  1C62  00A2               	movwf	(?___flsub+2)^(0+128)
  7434  1C63  1283               	bcf	3,5	;RP0=0, select bank0
  7435  1C64  1303               	bcf	3,6	;RP1=0, select bank0
  7436  1C65  0859               	movf	?___fladd+1,w
  7437  1C66  1683               	bsf	3,5	;RP0=1, select bank1
  7438  1C67  1303               	bcf	3,6	;RP1=0, select bank1
  7439  1C68  00A1               	movwf	(?___flsub+1)^(0+128)
  7440  1C69  1283               	bcf	3,5	;RP0=0, select bank0
  7441  1C6A  1303               	bcf	3,6	;RP1=0, select bank0
  7442  1C6B  0858               	movf	?___fladd,w
  7443  1C6C  1683               	bsf	3,5	;RP0=1, select bank1
  7444  1C6D  1303               	bcf	3,6	;RP1=0, select bank1
  7445  1C6E  00A0               	movwf	?___flsub^(0+128)
  7446  1C6F                     l766:
  7447  1C6F  0008               	return
  7448  1C70                     __end_of___flsub:
  7449                           
  7450                           	psect	text20
  7451  126E                     __ptext20:	
  7452 ;; *************** function ___fladd *****************
  7453 ;; Defined at:
  7454 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7455 ;; Parameters:    Size  Location     Type
  7456 ;;  b               4   56[BANK0 ] long 
  7457 ;;  a               4   60[BANK0 ] long 
  7458 ;; Auto vars:     Size  Location     Type
  7459 ;;  grs             1   75[BANK0 ] unsigned char 
  7460 ;;  bexp            1   74[BANK0 ] unsigned char 
  7461 ;;  aexp            1   73[BANK0 ] unsigned char 
  7462 ;;  signs           1   72[BANK0 ] unsigned char 
  7463 ;; Return value:  Size  Location     Type
  7464 ;;                  4   56[BANK0 ] unsigned char 
  7465 ;; Registers used:
  7466 ;;		wreg, status,2, status,0, btemp+1
  7467 ;; Tracked objects:
  7468 ;;		On entry : 0/0
  7469 ;;		On exit  : 0/0
  7470 ;;		Unchanged: 0/0
  7471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7472 ;;      Params:         0       8       0       0       0
  7473 ;;      Locals:         0       4       0       0       0
  7474 ;;      Temps:          0       8       0       0       0
  7475 ;;      Totals:         0      20       0       0       0
  7476 ;;Total ram usage:       20 bytes
  7477 ;; Hardware stack levels used:    1
  7478 ;; Hardware stack levels required when called:    1
  7479 ;; This function calls:
  7480 ;;		Nothing
  7481 ;; This function is called by:
  7482 ;;		_sprintf
  7483 ;;		___flsub
  7484 ;; This function uses a non-reentrant model
  7485 ;;
  7486                           
  7487                           
  7488                           ;psect for function ___fladd
  7489  126E                     ___fladd:
  7490  126E                     l2500:	
  7491                           ;incstack = 0
  7492                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7493                           
  7494  126E  1283               	bcf	3,5	;RP0=0, select bank0
  7495  126F  1303               	bcf	3,6	;RP1=0, select bank0
  7496  1270  085B               	movf	___fladd@b+3,w
  7497  1271  3980               	andlw	128
  7498  1272  00E0               	movwf	??___fladd
  7499  1273  0860               	movf	??___fladd,w
  7500  1274  00E8               	movwf	___fladd@signs
  7501  1275                     l2502:
  7502  1275  085B               	movf	___fladd@b+3,w
  7503  1276  00E0               	movwf	??___fladd
  7504  1277  0760               	addwf	??___fladd,w
  7505  1278  00E1               	movwf	??___fladd+1
  7506  1279  0861               	movf	??___fladd+1,w
  7507  127A  00EA               	movwf	___fladd@bexp
  7508  127B                     l2504:
  7509  127B  1FDA               	btfss	___fladd@b+2,7
  7510  127C  2A7E               	goto	u3341
  7511  127D  2A7F               	goto	u3340
  7512  127E                     u3341:
  7513  127E  2A80               	goto	l2508
  7514  127F                     u3340:
  7515  127F                     l2506:
  7516  127F  146A               	bsf	___fladd@bexp,0
  7517  1280                     l2508:
  7518  1280  086A               	movf	___fladd@bexp,w
  7519  1281  1903               	btfsc	3,2
  7520  1282  2A84               	goto	u3351
  7521  1283  2A85               	goto	u3350
  7522  1284                     u3351:
  7523  1284  2A95               	goto	l2518
  7524  1285                     u3350:
  7525  1285                     l2510:
  7526  1285  0A6A               	incf	___fladd@bexp,w
  7527  1286  1D03               	btfss	3,2
  7528  1287  2A89               	goto	u3361
  7529  1288  2A8A               	goto	u3360
  7530  1289                     u3361:
  7531  1289  2A92               	goto	l2514
  7532  128A                     u3360:
  7533  128A                     l2512:
  7534  128A  3000               	movlw	0
  7535  128B  00DB               	movwf	___fladd@b+3
  7536  128C  3000               	movlw	0
  7537  128D  00DA               	movwf	___fladd@b+2
  7538  128E  3000               	movlw	0
  7539  128F  00D9               	movwf	___fladd@b+1
  7540  1290  3000               	movlw	0
  7541  1291  00D8               	movwf	___fladd@b
  7542  1292                     l2514:
  7543  1292  17DA               	bsf	___fladd@b+2,7
  7544  1293                     l2516:
  7545  1293  01DB               	clrf	___fladd@b+3
  7546  1294  2A9D               	goto	l2520
  7547  1295                     l2518:
  7548  1295  3000               	movlw	0
  7549  1296  00DB               	movwf	___fladd@b+3
  7550  1297  3000               	movlw	0
  7551  1298  00DA               	movwf	___fladd@b+2
  7552  1299  3000               	movlw	0
  7553  129A  00D9               	movwf	___fladd@b+1
  7554  129B  3000               	movlw	0
  7555  129C  00D8               	movwf	___fladd@b
  7556  129D                     l2520:
  7557  129D  085F               	movf	___fladd@a+3,w
  7558  129E  3980               	andlw	128
  7559  129F  00E0               	movwf	??___fladd
  7560  12A0  0860               	movf	??___fladd,w
  7561  12A1  00E9               	movwf	___fladd@aexp
  7562  12A2                     l2522:
  7563  12A2  0869               	movf	___fladd@aexp,w
  7564  12A3  0668               	xorwf	___fladd@signs,w
  7565  12A4  1903               	skipnz
  7566  12A5  2AA7               	goto	u3371
  7567  12A6  2AA8               	goto	u3370
  7568  12A7                     u3371:
  7569  12A7  2AA9               	goto	l2526
  7570  12A8                     u3370:
  7571  12A8                     l2524:
  7572  12A8  1768               	bsf	___fladd@signs,6
  7573  12A9                     l2526:
  7574  12A9  085F               	movf	___fladd@a+3,w
  7575  12AA  00E0               	movwf	??___fladd
  7576  12AB  0760               	addwf	??___fladd,w
  7577  12AC  00E1               	movwf	??___fladd+1
  7578  12AD  0861               	movf	??___fladd+1,w
  7579  12AE  00E9               	movwf	___fladd@aexp
  7580  12AF                     l2528:
  7581  12AF  1FDE               	btfss	___fladd@a+2,7
  7582  12B0  2AB2               	goto	u3381
  7583  12B1  2AB3               	goto	u3380
  7584  12B2                     u3381:
  7585  12B2  2AB4               	goto	l2532
  7586  12B3                     u3380:
  7587  12B3                     l2530:
  7588  12B3  1469               	bsf	___fladd@aexp,0
  7589  12B4                     l2532:
  7590  12B4  0869               	movf	___fladd@aexp,w
  7591  12B5  1903               	btfsc	3,2
  7592  12B6  2AB8               	goto	u3391
  7593  12B7  2AB9               	goto	u3390
  7594  12B8                     u3391:
  7595  12B8  2AC9               	goto	l2542
  7596  12B9                     u3390:
  7597  12B9                     l2534:
  7598  12B9  0A69               	incf	___fladd@aexp,w
  7599  12BA  1D03               	btfss	3,2
  7600  12BB  2ABD               	goto	u3401
  7601  12BC  2ABE               	goto	u3400
  7602  12BD                     u3401:
  7603  12BD  2AC6               	goto	l2538
  7604  12BE                     u3400:
  7605  12BE                     l2536:
  7606  12BE  3000               	movlw	0
  7607  12BF  00DF               	movwf	___fladd@a+3
  7608  12C0  3000               	movlw	0
  7609  12C1  00DE               	movwf	___fladd@a+2
  7610  12C2  3000               	movlw	0
  7611  12C3  00DD               	movwf	___fladd@a+1
  7612  12C4  3000               	movlw	0
  7613  12C5  00DC               	movwf	___fladd@a
  7614  12C6                     l2538:
  7615  12C6  17DE               	bsf	___fladd@a+2,7
  7616  12C7                     l2540:
  7617  12C7  01DF               	clrf	___fladd@a+3
  7618  12C8  2AD1               	goto	l720
  7619  12C9                     l2542:
  7620  12C9  3000               	movlw	0
  7621  12CA  00DF               	movwf	___fladd@a+3
  7622  12CB  3000               	movlw	0
  7623  12CC  00DE               	movwf	___fladd@a+2
  7624  12CD  3000               	movlw	0
  7625  12CE  00DD               	movwf	___fladd@a+1
  7626  12CF  3000               	movlw	0
  7627  12D0  00DC               	movwf	___fladd@a
  7628  12D1                     l720:
  7629  12D1  086A               	movf	___fladd@bexp,w
  7630  12D2  0269               	subwf	___fladd@aexp,w
  7631  12D3  1803               	skipnc
  7632  12D4  2AD6               	goto	u3411
  7633  12D5  2AD7               	goto	u3410
  7634  12D6                     u3411:
  7635  12D6  2B1B               	goto	l2578
  7636  12D7                     u3410:
  7637  12D7                     l2544:
  7638  12D7  1F68               	btfss	___fladd@signs,6
  7639  12D8  2ADA               	goto	u3421
  7640  12D9  2ADB               	goto	u3420
  7641  12DA                     u3421:
  7642  12DA  2ADF               	goto	l2548
  7643  12DB                     u3420:
  7644  12DB                     l2546:
  7645  12DB  3080               	movlw	128
  7646  12DC  00E0               	movwf	??___fladd
  7647  12DD  0860               	movf	??___fladd,w
  7648  12DE  06E8               	xorwf	___fladd@signs,f
  7649  12DF                     l2548:
  7650  12DF  086A               	movf	___fladd@bexp,w
  7651  12E0  00E0               	movwf	??___fladd
  7652  12E1  0860               	movf	??___fladd,w
  7653  12E2  00EB               	movwf	___fladd@grs
  7654  12E3                     l2550:
  7655  12E3  0869               	movf	___fladd@aexp,w
  7656  12E4  00E0               	movwf	??___fladd
  7657  12E5  0860               	movf	??___fladd,w
  7658  12E6  00EA               	movwf	___fladd@bexp
  7659  12E7                     l2552:
  7660  12E7  086B               	movf	___fladd@grs,w
  7661  12E8  00E0               	movwf	??___fladd
  7662  12E9  0860               	movf	??___fladd,w
  7663  12EA  00E9               	movwf	___fladd@aexp
  7664  12EB                     l2554:
  7665  12EB  0858               	movf	___fladd@b,w
  7666  12EC  00E0               	movwf	??___fladd
  7667  12ED  0860               	movf	??___fladd,w
  7668  12EE  00EB               	movwf	___fladd@grs
  7669  12EF                     l2556:
  7670  12EF  085C               	movf	___fladd@a,w
  7671  12F0  00E0               	movwf	??___fladd
  7672  12F1  0860               	movf	??___fladd,w
  7673  12F2  00D8               	movwf	___fladd@b
  7674  12F3                     l2558:
  7675  12F3  086B               	movf	___fladd@grs,w
  7676  12F4  00E0               	movwf	??___fladd
  7677  12F5  0860               	movf	??___fladd,w
  7678  12F6  00DC               	movwf	___fladd@a
  7679  12F7                     l2560:
  7680  12F7  0859               	movf	___fladd@b+1,w
  7681  12F8  00E0               	movwf	??___fladd
  7682  12F9  0860               	movf	??___fladd,w
  7683  12FA  00EB               	movwf	___fladd@grs
  7684  12FB                     l2562:
  7685  12FB  085D               	movf	___fladd@a+1,w
  7686  12FC  00E0               	movwf	??___fladd
  7687  12FD  0860               	movf	??___fladd,w
  7688  12FE  00D9               	movwf	___fladd@b+1
  7689  12FF                     l2564:
  7690  12FF  086B               	movf	___fladd@grs,w
  7691  1300  00E0               	movwf	??___fladd
  7692  1301  0860               	movf	??___fladd,w
  7693  1302  00DD               	movwf	___fladd@a+1
  7694  1303                     l2566:
  7695  1303  085A               	movf	___fladd@b+2,w
  7696  1304  00E0               	movwf	??___fladd
  7697  1305  0860               	movf	??___fladd,w
  7698  1306  00EB               	movwf	___fladd@grs
  7699  1307                     l2568:
  7700  1307  085E               	movf	___fladd@a+2,w
  7701  1308  00E0               	movwf	??___fladd
  7702  1309  0860               	movf	??___fladd,w
  7703  130A  00DA               	movwf	___fladd@b+2
  7704  130B                     l2570:
  7705  130B  086B               	movf	___fladd@grs,w
  7706  130C  00E0               	movwf	??___fladd
  7707  130D  0860               	movf	??___fladd,w
  7708  130E  00DE               	movwf	___fladd@a+2
  7709  130F                     l2572:
  7710  130F  085B               	movf	___fladd@b+3,w
  7711  1310  00E0               	movwf	??___fladd
  7712  1311  0860               	movf	??___fladd,w
  7713  1312  00EB               	movwf	___fladd@grs
  7714  1313                     l2574:
  7715  1313  085F               	movf	___fladd@a+3,w
  7716  1314  00E0               	movwf	??___fladd
  7717  1315  0860               	movf	??___fladd,w
  7718  1316  00DB               	movwf	___fladd@b+3
  7719  1317                     l2576:
  7720  1317  086B               	movf	___fladd@grs,w
  7721  1318  00E0               	movwf	??___fladd
  7722  1319  0860               	movf	??___fladd,w
  7723  131A  00DF               	movwf	___fladd@a+3
  7724  131B                     l2578:
  7725  131B  01EB               	clrf	___fladd@grs
  7726  131C                     l2580:
  7727  131C  0869               	movf	___fladd@aexp,w
  7728  131D  00E0               	movwf	??___fladd
  7729  131E  01E1               	clrf	??___fladd+1
  7730  131F  0861               	movf	??___fladd+1,w
  7731  1320  00E3               	movwf	??___fladd+3
  7732  1321  086A               	movf	___fladd@bexp,w
  7733  1322  0260               	subwf	??___fladd,w
  7734  1323  00E2               	movwf	??___fladd+2
  7735  1324  1C03               	skipc
  7736  1325  03E3               	decf	??___fladd+3,f
  7737  1326  0863               	movf	??___fladd+3,w
  7738  1327  3A80               	xorlw	128
  7739  1328  00FF               	movwf	btemp+1
  7740  1329  3080               	movlw	128
  7741  132A  027F               	subwf	btemp+1,w
  7742  132B  1D03               	skipz
  7743  132C  2B2F               	goto	u3435
  7744  132D  301A               	movlw	26
  7745  132E  0262               	subwf	??___fladd+2,w
  7746  132F                     u3435:
  7747  132F  1C03               	skipc
  7748  1330  2B32               	goto	u3431
  7749  1331  2B33               	goto	u3430
  7750  1332                     u3431:
  7751  1332  2B70               	goto	l2596
  7752  1333                     u3430:
  7753  1333                     l2582:
  7754  1333  1283               	bcf	3,5	;RP0=0, select bank0
  7755  1334  1303               	bcf	3,6	;RP1=0, select bank0
  7756  1335  085B               	movf	___fladd@b+3,w
  7757  1336  045A               	iorwf	___fladd@b+2,w
  7758  1337  0459               	iorwf	___fladd@b+1,w
  7759  1338  0458               	iorwf	___fladd@b,w
  7760  1339  1D03               	skipz
  7761  133A  2B3C               	goto	u3441
  7762  133B  2B3E               	goto	u3440
  7763  133C                     u3441:
  7764  133C  3001               	movlw	1
  7765  133D  2B3F               	goto	u3450
  7766  133E                     u3440:
  7767  133E  3000               	movlw	0
  7768  133F                     u3450:
  7769  133F  00E0               	movwf	??___fladd
  7770  1340  0860               	movf	??___fladd,w
  7771  1341  00EB               	movwf	___fladd@grs
  7772  1342  3000               	movlw	0
  7773  1343  00DB               	movwf	___fladd@b+3
  7774  1344  3000               	movlw	0
  7775  1345  00DA               	movwf	___fladd@b+2
  7776  1346  3000               	movlw	0
  7777  1347  00D9               	movwf	___fladd@b+1
  7778  1348  3000               	movlw	0
  7779  1349  00D8               	movwf	___fladd@b
  7780  134A  0869               	movf	___fladd@aexp,w
  7781  134B  00E0               	movwf	??___fladd
  7782  134C  0860               	movf	??___fladd,w
  7783  134D  00EA               	movwf	___fladd@bexp
  7784  134E  2B78               	goto	l724
  7785  134F                     l726:
  7786  134F  1C6B               	btfss	___fladd@grs,0
  7787  1350  2B52               	goto	u3461
  7788  1351  2B53               	goto	u3460
  7789  1352                     u3461:
  7790  1352  2B5C               	goto	l2586
  7791  1353                     u3460:
  7792  1353                     l2584:
  7793  1353  086B               	movf	___fladd@grs,w
  7794  1354  00E0               	movwf	??___fladd
  7795  1355  1003               	clrc
  7796  1356  0C60               	rrf	??___fladd,w
  7797  1357  3801               	iorlw	1
  7798  1358  00E1               	movwf	??___fladd+1
  7799  1359  0861               	movf	??___fladd+1,w
  7800  135A  00EB               	movwf	___fladd@grs
  7801  135B  2B5E               	goto	l2588
  7802  135C                     l2586:
  7803  135C  1003               	clrc
  7804  135D  0CEB               	rrf	___fladd@grs,f
  7805  135E                     l2588:
  7806  135E  1C58               	btfss	___fladd@b,0
  7807  135F  2B61               	goto	u3471
  7808  1360  2B62               	goto	u3470
  7809  1361                     u3471:
  7810  1361  2B63               	goto	l2592
  7811  1362                     u3470:
  7812  1362                     l2590:
  7813  1362  17EB               	bsf	___fladd@grs,7
  7814  1363                     l2592:
  7815  1363  3001               	movlw	1
  7816  1364  00E0               	movwf	??___fladd
  7817  1365                     u3485:
  7818  1365  0D5B               	rlf	___fladd@b+3,w
  7819  1366  0CDB               	rrf	___fladd@b+3,f
  7820  1367  0CDA               	rrf	___fladd@b+2,f
  7821  1368  0CD9               	rrf	___fladd@b+1,f
  7822  1369  0CD8               	rrf	___fladd@b,f
  7823  136A  0BE0               	decfsz	??___fladd& (0+127),f
  7824  136B  2B65               	goto	u3485
  7825  136C                     l2594:
  7826  136C  3001               	movlw	1
  7827  136D  00E0               	movwf	??___fladd
  7828  136E  0860               	movf	??___fladd,w
  7829  136F  07EA               	addwf	___fladd@bexp,f
  7830  1370                     l2596:
  7831  1370  1283               	bcf	3,5	;RP0=0, select bank0
  7832  1371  1303               	bcf	3,6	;RP1=0, select bank0
  7833  1372  0869               	movf	___fladd@aexp,w
  7834  1373  026A               	subwf	___fladd@bexp,w
  7835  1374  1C03               	skipc
  7836  1375  2B77               	goto	u3491
  7837  1376  2B78               	goto	u3490
  7838  1377                     u3491:
  7839  1377  2B4F               	goto	l726
  7840  1378                     u3490:
  7841  1378                     l724:
  7842  1378  1B68               	btfsc	___fladd@signs,6
  7843  1379  2B7B               	goto	u3501
  7844  137A  2B7C               	goto	u3500
  7845  137B                     u3501:
  7846  137B  2BC7               	goto	l2622
  7847  137C                     u3500:
  7848  137C                     l2598:
  7849  137C  086A               	movf	___fladd@bexp,w
  7850  137D  1D03               	btfss	3,2
  7851  137E  2B80               	goto	u3511
  7852  137F  2B81               	goto	u3510
  7853  1380                     u3511:
  7854  1380  2B8A               	goto	l2604
  7855  1381                     u3510:
  7856  1381                     l2600:
  7857  1381  3000               	movlw	0
  7858  1382  00DB               	movwf	?___fladd+3
  7859  1383  3000               	movlw	0
  7860  1384  00DA               	movwf	?___fladd+2
  7861  1385  3000               	movlw	0
  7862  1386  00D9               	movwf	?___fladd+1
  7863  1387  3000               	movlw	0
  7864  1388  00D8               	movwf	?___fladd
  7865  1389  2CF5               	goto	l733
  7866  138A                     l2604:
  7867  138A  085C               	movf	___fladd@a,w
  7868  138B  07D8               	addwf	___fladd@b,f
  7869  138C  085D               	movf	___fladd@a+1,w
  7870  138D  1103               	clrz
  7871  138E  1803               	skipnc
  7872  138F  3E01               	addlw	1
  7873  1390  1903               	skipnz
  7874  1391  2B93               	goto	u3521
  7875  1392  07D9               	addwf	___fladd@b+1,f
  7876  1393                     u3521:
  7877  1393  085E               	movf	___fladd@a+2,w
  7878  1394  1103               	clrz
  7879  1395  1803               	skipnc
  7880  1396  3E01               	addlw	1
  7881  1397  1903               	skipnz
  7882  1398  2B9A               	goto	u3522
  7883  1399  07DA               	addwf	___fladd@b+2,f
  7884  139A                     u3522:
  7885  139A  085F               	movf	___fladd@a+3,w
  7886  139B  1103               	clrz
  7887  139C  1803               	skipnc
  7888  139D  3E01               	addlw	1
  7889  139E  1903               	skipnz
  7890  139F  2BA1               	goto	u3523
  7891  13A0  07DB               	addwf	___fladd@b+3,f
  7892  13A1                     u3523:
  7893  13A1                     l2606:
  7894  13A1  1C5B               	btfss	___fladd@b+3,0
  7895  13A2  2BA4               	goto	u3531
  7896  13A3  2BA5               	goto	u3530
  7897  13A4                     u3531:
  7898  13A4  2C7B               	goto	l2656
  7899  13A5                     u3530:
  7900  13A5                     l2608:
  7901  13A5  1C6B               	btfss	___fladd@grs,0
  7902  13A6  2BA8               	goto	u3541
  7903  13A7  2BA9               	goto	u3540
  7904  13A8                     u3541:
  7905  13A8  2BB2               	goto	l2612
  7906  13A9                     u3540:
  7907  13A9                     l2610:
  7908  13A9  086B               	movf	___fladd@grs,w
  7909  13AA  00E0               	movwf	??___fladd
  7910  13AB  1003               	clrc
  7911  13AC  0C60               	rrf	??___fladd,w
  7912  13AD  3801               	iorlw	1
  7913  13AE  00E1               	movwf	??___fladd+1
  7914  13AF  0861               	movf	??___fladd+1,w
  7915  13B0  00EB               	movwf	___fladd@grs
  7916  13B1  2BB4               	goto	l2614
  7917  13B2                     l2612:
  7918  13B2  1003               	clrc
  7919  13B3  0CEB               	rrf	___fladd@grs,f
  7920  13B4                     l2614:
  7921  13B4  1C58               	btfss	___fladd@b,0
  7922  13B5  2BB7               	goto	u3551
  7923  13B6  2BB8               	goto	u3550
  7924  13B7                     u3551:
  7925  13B7  2BB9               	goto	l2618
  7926  13B8                     u3550:
  7927  13B8                     l2616:
  7928  13B8  17EB               	bsf	___fladd@grs,7
  7929  13B9                     l2618:
  7930  13B9  3001               	movlw	1
  7931  13BA  00E0               	movwf	??___fladd
  7932  13BB                     u3565:
  7933  13BB  0D5B               	rlf	___fladd@b+3,w
  7934  13BC  0CDB               	rrf	___fladd@b+3,f
  7935  13BD  0CDA               	rrf	___fladd@b+2,f
  7936  13BE  0CD9               	rrf	___fladd@b+1,f
  7937  13BF  0CD8               	rrf	___fladd@b,f
  7938  13C0  0BE0               	decfsz	??___fladd& (0+127),f
  7939  13C1  2BBB               	goto	u3565
  7940  13C2                     l2620:
  7941  13C2  3001               	movlw	1
  7942  13C3  00E0               	movwf	??___fladd
  7943  13C4  0860               	movf	??___fladd,w
  7944  13C5  07EA               	addwf	___fladd@bexp,f
  7945  13C6  2C7B               	goto	l2656
  7946  13C7                     l2622:
  7947  13C7  085B               	movf	___fladd@b+3,w
  7948  13C8  3A80               	xorlw	128
  7949  13C9  00FF               	movwf	btemp+1
  7950  13CA  085F               	movf	___fladd@a+3,w
  7951  13CB  3A80               	xorlw	128
  7952  13CC  027F               	subwf	btemp+1,w
  7953  13CD  1D03               	skipz
  7954  13CE  2BD9               	goto	u3573
  7955  13CF  085E               	movf	___fladd@a+2,w
  7956  13D0  025A               	subwf	___fladd@b+2,w
  7957  13D1  1D03               	skipz
  7958  13D2  2BD9               	goto	u3573
  7959  13D3  085D               	movf	___fladd@a+1,w
  7960  13D4  0259               	subwf	___fladd@b+1,w
  7961  13D5  1D03               	skipz
  7962  13D6  2BD9               	goto	u3573
  7963  13D7  085C               	movf	___fladd@a,w
  7964  13D8  0258               	subwf	___fladd@b,w
  7965  13D9                     u3573:
  7966  13D9  1803               	skipnc
  7967  13DA  2BDC               	goto	u3571
  7968  13DB  2BDD               	goto	u3570
  7969  13DC                     u3571:
  7970  13DC  2C35               	goto	l2632
  7971  13DD                     u3570:
  7972  13DD                     l2624:
  7973  13DD  30FF               	movlw	255
  7974  13DE  00E0               	movwf	??___fladd
  7975  13DF  30FF               	movlw	255
  7976  13E0  00E1               	movwf	??___fladd+1
  7977  13E1  30FF               	movlw	255
  7978  13E2  00E2               	movwf	??___fladd+2
  7979  13E3  30FF               	movlw	255
  7980  13E4  00E3               	movwf	??___fladd+3
  7981  13E5  085C               	movf	___fladd@a,w
  7982  13E6  00E4               	movwf	??___fladd+4
  7983  13E7  085D               	movf	___fladd@a+1,w
  7984  13E8  00E5               	movwf	??___fladd+5
  7985  13E9  085E               	movf	___fladd@a+2,w
  7986  13EA  00E6               	movwf	??___fladd+6
  7987  13EB  085F               	movf	___fladd@a+3,w
  7988  13EC  00E7               	movwf	??___fladd+7
  7989  13ED  0858               	movf	___fladd@b,w
  7990  13EE  02E4               	subwf	??___fladd+4,f
  7991  13EF  0859               	movf	___fladd@b+1,w
  7992  13F0  1C03               	skipc
  7993  13F1  0F59               	incfsz	___fladd@b+1,w
  7994  13F2  2BF4               	goto	u3581
  7995  13F3  2BF5               	goto	u3582
  7996  13F4                     u3581:
  7997  13F4  02E5               	subwf	??___fladd+5,f
  7998  13F5                     u3582:
  7999  13F5  085A               	movf	___fladd@b+2,w
  8000  13F6  1C03               	skipc
  8001  13F7  0F5A               	incfsz	___fladd@b+2,w
  8002  13F8  2BFA               	goto	u3583
  8003  13F9  2BFB               	goto	u3584
  8004  13FA                     u3583:
  8005  13FA  02E6               	subwf	??___fladd+6,f
  8006  13FB                     u3584:
  8007  13FB  085B               	movf	___fladd@b+3,w
  8008  13FC  1C03               	skipc
  8009  13FD  0F5B               	incfsz	___fladd@b+3,w
  8010  13FE  2C00               	goto	u3585
  8011  13FF  2C01               	goto	u3586
  8012  1400                     u3585:
  8013  1400  02E7               	subwf	??___fladd+7,f
  8014  1401                     u3586:
  8015  1401  0864               	movf	??___fladd+4,w
  8016  1402  07E0               	addwf	??___fladd,f
  8017  1403  0865               	movf	??___fladd+5,w
  8018  1404  1803               	skipnc
  8019  1405  0F65               	incfsz	??___fladd+5,w
  8020  1406  2C08               	goto	u3590
  8021  1407  2C09               	goto	u3591
  8022  1408                     u3590:
  8023  1408  07E1               	addwf	??___fladd+1,f
  8024  1409                     u3591:
  8025  1409  0866               	movf	??___fladd+6,w
  8026  140A  1803               	skipnc
  8027  140B  0F66               	incfsz	??___fladd+6,w
  8028  140C  2C0E               	goto	u3592
  8029  140D  2C0F               	goto	u3593
  8030  140E                     u3592:
  8031  140E  07E2               	addwf	??___fladd+2,f
  8032  140F                     u3593:
  8033  140F  0867               	movf	??___fladd+7,w
  8034  1410  1803               	skipnc
  8035  1411  0A67               	incf	??___fladd+7,w
  8036  1412  07E3               	addwf	??___fladd+3,f
  8037  1413  0863               	movf	??___fladd+3,w
  8038  1414  00DB               	movwf	___fladd@b+3
  8039  1415  0862               	movf	??___fladd+2,w
  8040  1416  00DA               	movwf	___fladd@b+2
  8041  1417  0861               	movf	??___fladd+1,w
  8042  1418  00D9               	movwf	___fladd@b+1
  8043  1419  0860               	movf	??___fladd,w
  8044  141A  00D8               	movwf	___fladd@b
  8045  141B                     l2626:
  8046  141B  3080               	movlw	128
  8047  141C  00E0               	movwf	??___fladd
  8048  141D  0860               	movf	??___fladd,w
  8049  141E  06E8               	xorwf	___fladd@signs,f
  8050  141F  09EB               	comf	___fladd@grs,f
  8051  1420  0AEB               	incf	___fladd@grs,f
  8052  1421                     l2628:
  8053  1421  086B               	movf	___fladd@grs,w
  8054  1422  1D03               	btfss	3,2
  8055  1423  2C25               	goto	u3601
  8056  1424  2C26               	goto	u3600
  8057  1425                     u3601:
  8058  1425  2C43               	goto	l741
  8059  1426                     u3600:
  8060  1426                     l2630:
  8061  1426  3001               	movlw	1
  8062  1427  07D8               	addwf	___fladd@b,f
  8063  1428  3000               	movlw	0
  8064  1429  1803               	skipnc
  8065  142A  3001               	movlw	1
  8066  142B  07D9               	addwf	___fladd@b+1,f
  8067  142C  3000               	movlw	0
  8068  142D  1803               	skipnc
  8069  142E  3001               	movlw	1
  8070  142F  07DA               	addwf	___fladd@b+2,f
  8071  1430  3000               	movlw	0
  8072  1431  1803               	skipnc
  8073  1432  3001               	movlw	1
  8074  1433  07DB               	addwf	___fladd@b+3,f
  8075  1434  2C43               	goto	l741
  8076  1435                     l2632:
  8077  1435  085C               	movf	___fladd@a,w
  8078  1436  02D8               	subwf	___fladd@b,f
  8079  1437  085D               	movf	___fladd@a+1,w
  8080  1438  1C03               	skipc
  8081  1439  0F5D               	incfsz	___fladd@a+1,w
  8082  143A  02D9               	subwf	___fladd@b+1,f
  8083  143B  085E               	movf	___fladd@a+2,w
  8084  143C  1C03               	skipc
  8085  143D  0F5E               	incfsz	___fladd@a+2,w
  8086  143E  02DA               	subwf	___fladd@b+2,f
  8087  143F  085F               	movf	___fladd@a+3,w
  8088  1440  1C03               	skipc
  8089  1441  0F5F               	incfsz	___fladd@a+3,w
  8090  1442  02DB               	subwf	___fladd@b+3,f
  8091  1443                     l741:
  8092  1443  085B               	movf	___fladd@b+3,w
  8093  1444  045A               	iorwf	___fladd@b+2,w
  8094  1445  0459               	iorwf	___fladd@b+1,w
  8095  1446  0458               	iorwf	___fladd@b,w
  8096  1447  1D03               	skipz
  8097  1448  2C4A               	goto	u3611
  8098  1449  2C4B               	goto	u3610
  8099  144A                     u3611:
  8100  144A  2C77               	goto	l2654
  8101  144B                     u3610:
  8102  144B                     l2634:
  8103  144B  086B               	movf	___fladd@grs,w
  8104  144C  1D03               	btfss	3,2
  8105  144D  2C4F               	goto	u3621
  8106  144E  2C50               	goto	u3620
  8107  144F                     u3621:
  8108  144F  2C77               	goto	l2654
  8109  1450                     u3620:
  8110  1450                     l2636:
  8111  1450  3000               	movlw	0
  8112  1451  00DB               	movwf	?___fladd+3
  8113  1452  3000               	movlw	0
  8114  1453  00DA               	movwf	?___fladd+2
  8115  1454  3000               	movlw	0
  8116  1455  00D9               	movwf	?___fladd+1
  8117  1456  3000               	movlw	0
  8118  1457  00D8               	movwf	?___fladd
  8119  1458  2CF5               	goto	l733
  8120  1459                     l2640:
  8121  1459  3001               	movlw	1
  8122  145A  00E0               	movwf	??___fladd
  8123  145B                     u3635:
  8124  145B  1003               	clrc
  8125  145C  0DD8               	rlf	___fladd@b,f
  8126  145D  0DD9               	rlf	___fladd@b+1,f
  8127  145E  0DDA               	rlf	___fladd@b+2,f
  8128  145F  0DDB               	rlf	___fladd@b+3,f
  8129  1460  0BE0               	decfsz	??___fladd,f
  8130  1461  2C5B               	goto	u3635
  8131  1462                     l2642:
  8132  1462  1FEB               	btfss	___fladd@grs,7
  8133  1463  2C65               	goto	u3641
  8134  1464  2C66               	goto	u3640
  8135  1465                     u3641:
  8136  1465  2C67               	goto	l745
  8137  1466                     u3640:
  8138  1466                     l2644:
  8139  1466  1458               	bsf	___fladd@b,0
  8140  1467                     l745:
  8141  1467  1C6B               	btfss	___fladd@grs,0
  8142  1468  2C6A               	goto	u3651
  8143  1469  2C6B               	goto	u3650
  8144  146A                     u3651:
  8145  146A  2C6E               	goto	l2648
  8146  146B                     u3650:
  8147  146B                     l2646:
  8148  146B  1403               	setc
  8149  146C  0DEB               	rlf	___fladd@grs,f
  8150  146D  2C70               	goto	l2650
  8151  146E                     l2648:
  8152  146E  1003               	clrc
  8153  146F  0DEB               	rlf	___fladd@grs,f
  8154  1470                     l2650:
  8155  1470  086A               	movf	___fladd@bexp,w
  8156  1471  1903               	btfsc	3,2
  8157  1472  2C74               	goto	u3661
  8158  1473  2C75               	goto	u3660
  8159  1474                     u3661:
  8160  1474  2C77               	goto	l2654
  8161  1475                     u3660:
  8162  1475                     l2652:
  8163  1475  3001               	movlw	1
  8164  1476  02EA               	subwf	___fladd@bexp,f
  8165  1477                     l2654:
  8166  1477  1FDA               	btfss	___fladd@b+2,7
  8167  1478  2C7A               	goto	u3671
  8168  1479  2C7B               	goto	u3670
  8169  147A                     u3671:
  8170  147A  2C59               	goto	l2640
  8171  147B                     u3670:
  8172  147B                     l2656:
  8173  147B  01E9               	clrf	___fladd@aexp
  8174  147C                     l2658:
  8175  147C  1FEB               	btfss	___fladd@grs,7
  8176  147D  2C7F               	goto	u3681
  8177  147E  2C80               	goto	u3680
  8178  147F                     u3681:
  8179  147F  2C8E               	goto	l2666
  8180  1480                     u3680:
  8181  1480                     l2660:
  8182  1480  086B               	movf	___fladd@grs,w
  8183  1481  397F               	andlw	127
  8184  1482  1903               	btfsc	3,2
  8185  1483  2C85               	goto	u3691
  8186  1484  2C86               	goto	u3690
  8187  1485                     u3691:
  8188  1485  2C89               	goto	l751
  8189  1486                     u3690:
  8190  1486                     l2662:
  8191  1486  01E9               	clrf	___fladd@aexp
  8192  1487  0AE9               	incf	___fladd@aexp,f
  8193  1488  2C8E               	goto	l2666
  8194  1489                     l751:
  8195  1489  1C58               	btfss	___fladd@b,0
  8196  148A  2C8C               	goto	u3701
  8197  148B  2C8D               	goto	u3700
  8198  148C                     u3701:
  8199  148C  2C8E               	goto	l2666
  8200  148D                     u3700:
  8201  148D  2C86               	goto	l2662
  8202  148E                     l2666:
  8203  148E  0869               	movf	___fladd@aexp,w
  8204  148F  1903               	btfsc	3,2
  8205  1490  2C92               	goto	u3711
  8206  1491  2C93               	goto	u3710
  8207  1492                     u3711:
  8208  1492  2CC7               	goto	l754
  8209  1493                     u3710:
  8210  1493                     l2668:
  8211  1493  3001               	movlw	1
  8212  1494  07D8               	addwf	___fladd@b,f
  8213  1495  3000               	movlw	0
  8214  1496  1803               	skipnc
  8215  1497  3001               	movlw	1
  8216  1498  07D9               	addwf	___fladd@b+1,f
  8217  1499  3000               	movlw	0
  8218  149A  1803               	skipnc
  8219  149B  3001               	movlw	1
  8220  149C  07DA               	addwf	___fladd@b+2,f
  8221  149D  3000               	movlw	0
  8222  149E  1803               	skipnc
  8223  149F  3001               	movlw	1
  8224  14A0  07DB               	addwf	___fladd@b+3,f
  8225  14A1                     l2670:
  8226  14A1  1C5B               	btfss	___fladd@b+3,0
  8227  14A2  2CA4               	goto	u3721
  8228  14A3  2CA5               	goto	u3720
  8229  14A4                     u3721:
  8230  14A4  2CC7               	goto	l754
  8231  14A5                     u3720:
  8232  14A5                     l2672:
  8233  14A5  0858               	movf	___fladd@b,w
  8234  14A6  00E0               	movwf	??___fladd
  8235  14A7  0859               	movf	___fladd@b+1,w
  8236  14A8  00E1               	movwf	??___fladd+1
  8237  14A9  085A               	movf	___fladd@b+2,w
  8238  14AA  00E2               	movwf	??___fladd+2
  8239  14AB  085B               	movf	___fladd@b+3,w
  8240  14AC  00E3               	movwf	??___fladd+3
  8241  14AD  3001               	movlw	1
  8242  14AE  00E4               	movwf	??___fladd+4
  8243  14AF                     u3735:
  8244  14AF  0D63               	rlf	??___fladd+3,w
  8245  14B0  0CE3               	rrf	??___fladd+3,f
  8246  14B1  0CE2               	rrf	??___fladd+2,f
  8247  14B2  0CE1               	rrf	??___fladd+1,f
  8248  14B3  0CE0               	rrf	??___fladd,f
  8249  14B4                     u3730:
  8250  14B4  0BE4               	decfsz	??___fladd+4,f
  8251  14B5  2CAF               	goto	u3735
  8252  14B6  0863               	movf	??___fladd+3,w
  8253  14B7  00DB               	movwf	___fladd@b+3
  8254  14B8  0862               	movf	??___fladd+2,w
  8255  14B9  00DA               	movwf	___fladd@b+2
  8256  14BA  0861               	movf	??___fladd+1,w
  8257  14BB  00D9               	movwf	___fladd@b+1
  8258  14BC  0860               	movf	??___fladd,w
  8259  14BD  00D8               	movwf	___fladd@b
  8260  14BE  0A6A               	incf	___fladd@bexp,w
  8261  14BF  1903               	btfsc	3,2
  8262  14C0  2CC2               	goto	u3741
  8263  14C1  2CC3               	goto	u3740
  8264  14C2                     u3741:
  8265  14C2  2CC7               	goto	l754
  8266  14C3                     u3740:
  8267  14C3                     l2674:
  8268  14C3  3001               	movlw	1
  8269  14C4  00E0               	movwf	??___fladd
  8270  14C5  0860               	movf	??___fladd,w
  8271  14C6  07EA               	addwf	___fladd@bexp,f
  8272  14C7                     l754:
  8273  14C7  0A6A               	incf	___fladd@bexp,w
  8274  14C8  1903               	btfsc	3,2
  8275  14C9  2CCB               	goto	u3751
  8276  14CA  2CCC               	goto	u3750
  8277  14CB                     u3751:
  8278  14CB  2CD1               	goto	l2678
  8279  14CC                     u3750:
  8280  14CC                     l2676:
  8281  14CC  086A               	movf	___fladd@bexp,w
  8282  14CD  1D03               	btfss	3,2
  8283  14CE  2CD0               	goto	u3761
  8284  14CF  2CD1               	goto	u3760
  8285  14D0                     u3761:
  8286  14D0  2CDF               	goto	l2684
  8287  14D1                     u3760:
  8288  14D1                     l2678:
  8289  14D1  3000               	movlw	0
  8290  14D2  00DB               	movwf	___fladd@b+3
  8291  14D3  3000               	movlw	0
  8292  14D4  00DA               	movwf	___fladd@b+2
  8293  14D5  3000               	movlw	0
  8294  14D6  00D9               	movwf	___fladd@b+1
  8295  14D7  3000               	movlw	0
  8296  14D8  00D8               	movwf	___fladd@b
  8297  14D9                     l2680:
  8298  14D9  086A               	movf	___fladd@bexp,w
  8299  14DA  1D03               	btfss	3,2
  8300  14DB  2CDD               	goto	u3771
  8301  14DC  2CDE               	goto	u3770
  8302  14DD                     u3771:
  8303  14DD  2CDF               	goto	l2684
  8304  14DE                     u3770:
  8305  14DE                     l2682:
  8306  14DE  01E8               	clrf	___fladd@signs
  8307  14DF                     l2684:
  8308  14DF  1C6A               	btfss	___fladd@bexp,0
  8309  14E0  2CE2               	goto	u3781
  8310  14E1  2CE3               	goto	u3780
  8311  14E2                     u3781:
  8312  14E2  2CE5               	goto	l2688
  8313  14E3                     u3780:
  8314  14E3                     l2686:
  8315  14E3  17DA               	bsf	___fladd@b+2,7
  8316  14E4  2CE9               	goto	l762
  8317  14E5                     l2688:
  8318  14E5  307F               	movlw	127
  8319  14E6  00E0               	movwf	??___fladd
  8320  14E7  0860               	movf	??___fladd,w
  8321  14E8  05DA               	andwf	___fladd@b+2,f
  8322  14E9                     l762:
  8323  14E9  086A               	movf	___fladd@bexp,w
  8324  14EA  00E0               	movwf	??___fladd
  8325  14EB  1003               	clrc
  8326  14EC  0C60               	rrf	??___fladd,w
  8327  14ED  00E1               	movwf	??___fladd+1
  8328  14EE  0861               	movf	??___fladd+1,w
  8329  14EF  00DB               	movwf	___fladd@b+3
  8330  14F0                     l2690:
  8331  14F0  1FE8               	btfss	___fladd@signs,7
  8332  14F1  2CF3               	goto	u3791
  8333  14F2  2CF4               	goto	u3790
  8334  14F3                     u3791:
  8335  14F3  2CF5               	goto	l763
  8336  14F4                     u3790:
  8337  14F4                     l2692:
  8338  14F4  17DB               	bsf	___fladd@b+3,7
  8339  14F5                     l763:
  8340  14F5                     l733:
  8341  14F5  0008               	return
  8342  14F6                     __end_of___fladd:
  8343                           
  8344                           	psect	text21
  8345  1936                     __ptext21:	
  8346 ;; *************** function ___flneg *****************
  8347 ;; Defined at:
  8348 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8349 ;; Parameters:    Size  Location     Type
  8350 ;;  f1              4    3[COMMON] unsigned char 
  8351 ;; Auto vars:     Size  Location     Type
  8352 ;;		None
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  4    3[COMMON] unsigned char 
  8355 ;; Registers used:
  8356 ;;		wreg
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8362 ;;      Params:         4       0       0       0       0
  8363 ;;      Locals:         0       0       0       0       0
  8364 ;;      Temps:          0       0       0       0       0
  8365 ;;      Totals:         4       0       0       0       0
  8366 ;;Total ram usage:        4 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; Hardware stack levels required when called:    1
  8369 ;; This function calls:
  8370 ;;		Nothing
  8371 ;; This function is called by:
  8372 ;;		_sprintf
  8373 ;; This function uses a non-reentrant model
  8374 ;;
  8375                           
  8376                           
  8377                           ;psect for function ___flneg
  8378  1936                     ___flneg:
  8379  1936                     l3102:	
  8380                           ;incstack = 0
  8381                           ; Regs used in ___flneg: [wreg]
  8382                           
  8383  1936  0876               	movf	___flneg@f1+3,w
  8384  1937  0475               	iorwf	___flneg@f1+2,w
  8385  1938  0474               	iorwf	___flneg@f1+1,w
  8386  1939  0473               	iorwf	___flneg@f1,w
  8387  193A  1903               	skipnz
  8388  193B  293D               	goto	u4911
  8389  193C  293E               	goto	u4910
  8390  193D                     u4911:
  8391  193D  2940               	goto	l3106
  8392  193E                     u4910:
  8393  193E                     l3104:
  8394  193E  3080               	movlw	128
  8395  193F  06F6               	xorwf	___flneg@f1+3,f
  8396  1940                     l3106:
  8397  1940                     l592:
  8398  1940  0008               	return
  8399  1941                     __end_of___flneg:
  8400                           
  8401                           	psect	text22
  8402  1D2E                     __ptext22:	
  8403 ;; *************** function ___flge *****************
  8404 ;; Defined at:
  8405 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8406 ;; Parameters:    Size  Location     Type
  8407 ;;  ff1             4    0[BANK0 ] unsigned char 
  8408 ;;  ff2             4    4[BANK0 ] unsigned char 
  8409 ;; Auto vars:     Size  Location     Type
  8410 ;;		None
  8411 ;; Return value:  Size  Location     Type
  8412 ;;		None               void
  8413 ;; Registers used:
  8414 ;;		wreg, status,2, status,0
  8415 ;; Tracked objects:
  8416 ;;		On entry : 0/0
  8417 ;;		On exit  : 0/0
  8418 ;;		Unchanged: 0/0
  8419 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8420 ;;      Params:         0       8       0       0       0
  8421 ;;      Locals:         0       0       0       0       0
  8422 ;;      Temps:          4       0       0       0       0
  8423 ;;      Totals:         4       8       0       0       0
  8424 ;;Total ram usage:       12 bytes
  8425 ;; Hardware stack levels used:    1
  8426 ;; Hardware stack levels required when called:    1
  8427 ;; This function calls:
  8428 ;;		Nothing
  8429 ;; This function is called by:
  8430 ;;		_sprintf
  8431 ;; This function uses a non-reentrant model
  8432 ;;
  8433                           
  8434                           
  8435                           ;psect for function ___flge
  8436  1D2E                     ___flge:
  8437  1D2E                     l3992:	
  8438                           ;incstack = 0
  8439                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8440                           
  8441  1D2E  3000               	movlw	0
  8442  1D2F  1283               	bcf	3,5	;RP0=0, select bank0
  8443  1D30  1303               	bcf	3,6	;RP1=0, select bank0
  8444  1D31  0520               	andwf	___flge@ff1,w
  8445  1D32  00F3               	movwf	??___flge
  8446  1D33  3000               	movlw	0
  8447  1D34  0521               	andwf	___flge@ff1+1,w
  8448  1D35  00F4               	movwf	??___flge+1
  8449  1D36  3080               	movlw	128
  8450  1D37  0522               	andwf	___flge@ff1+2,w
  8451  1D38  00F5               	movwf	??___flge+2
  8452  1D39  307F               	movlw	127
  8453  1D3A  0523               	andwf	___flge@ff1+3,w
  8454  1D3B  00F6               	movwf	??___flge+3
  8455  1D3C  0876               	movf	??___flge+3,w
  8456  1D3D  0475               	iorwf	??___flge+2,w
  8457  1D3E  0474               	iorwf	??___flge+1,w
  8458  1D3F  0473               	iorwf	??___flge,w
  8459  1D40  1D03               	skipz
  8460  1D41  2D43               	goto	u6601
  8461  1D42  2D44               	goto	u6600
  8462  1D43                     u6601:
  8463  1D43  2D4C               	goto	l584
  8464  1D44                     u6600:
  8465  1D44                     l3994:
  8466  1D44  3000               	movlw	0
  8467  1D45  00A3               	movwf	___flge@ff1+3
  8468  1D46  3000               	movlw	0
  8469  1D47  00A2               	movwf	___flge@ff1+2
  8470  1D48  3000               	movlw	0
  8471  1D49  00A1               	movwf	___flge@ff1+1
  8472  1D4A  3000               	movlw	0
  8473  1D4B  00A0               	movwf	___flge@ff1
  8474  1D4C                     l584:
  8475  1D4C  3000               	movlw	0
  8476  1D4D  0524               	andwf	___flge@ff2,w
  8477  1D4E  00F3               	movwf	??___flge
  8478  1D4F  3000               	movlw	0
  8479  1D50  0525               	andwf	___flge@ff2+1,w
  8480  1D51  00F4               	movwf	??___flge+1
  8481  1D52  3080               	movlw	128
  8482  1D53  0526               	andwf	___flge@ff2+2,w
  8483  1D54  00F5               	movwf	??___flge+2
  8484  1D55  307F               	movlw	127
  8485  1D56  0527               	andwf	___flge@ff2+3,w
  8486  1D57  00F6               	movwf	??___flge+3
  8487  1D58  0876               	movf	??___flge+3,w
  8488  1D59  0475               	iorwf	??___flge+2,w
  8489  1D5A  0474               	iorwf	??___flge+1,w
  8490  1D5B  0473               	iorwf	??___flge,w
  8491  1D5C  1D03               	skipz
  8492  1D5D  2D5F               	goto	u6611
  8493  1D5E  2D60               	goto	u6610
  8494  1D5F                     u6611:
  8495  1D5F  2D68               	goto	l3998
  8496  1D60                     u6610:
  8497  1D60                     l3996:
  8498  1D60  3000               	movlw	0
  8499  1D61  00A7               	movwf	___flge@ff2+3
  8500  1D62  3000               	movlw	0
  8501  1D63  00A6               	movwf	___flge@ff2+2
  8502  1D64  3000               	movlw	0
  8503  1D65  00A5               	movwf	___flge@ff2+1
  8504  1D66  3000               	movlw	0
  8505  1D67  00A4               	movwf	___flge@ff2
  8506  1D68                     l3998:
  8507  1D68  1FA3               	btfss	___flge@ff1+3,7
  8508  1D69  2D6B               	goto	u6621
  8509  1D6A  2D6C               	goto	u6620
  8510  1D6B                     u6621:
  8511  1D6B  2D90               	goto	l4002
  8512  1D6C                     u6620:
  8513  1D6C                     l4000:
  8514  1D6C  3000               	movlw	0
  8515  1D6D  00F3               	movwf	??___flge
  8516  1D6E  3000               	movlw	0
  8517  1D6F  00F4               	movwf	??___flge+1
  8518  1D70  3000               	movlw	0
  8519  1D71  00F5               	movwf	??___flge+2
  8520  1D72  3080               	movlw	128
  8521  1D73  00F6               	movwf	??___flge+3
  8522  1D74  0820               	movf	___flge@ff1,w
  8523  1D75  02F3               	subwf	??___flge,f
  8524  1D76  0821               	movf	___flge@ff1+1,w
  8525  1D77  1C03               	skipc
  8526  1D78  0F21               	incfsz	___flge@ff1+1,w
  8527  1D79  2D7B               	goto	u6631
  8528  1D7A  2D7C               	goto	u6632
  8529  1D7B                     u6631:
  8530  1D7B  02F4               	subwf	??___flge+1,f
  8531  1D7C                     u6632:
  8532  1D7C  0822               	movf	___flge@ff1+2,w
  8533  1D7D  1C03               	skipc
  8534  1D7E  0F22               	incfsz	___flge@ff1+2,w
  8535  1D7F  2D81               	goto	u6633
  8536  1D80  2D82               	goto	u6634
  8537  1D81                     u6633:
  8538  1D81  02F5               	subwf	??___flge+2,f
  8539  1D82                     u6634:
  8540  1D82  0823               	movf	___flge@ff1+3,w
  8541  1D83  1C03               	skipc
  8542  1D84  0F23               	incfsz	___flge@ff1+3,w
  8543  1D85  2D87               	goto	u6635
  8544  1D86  2D88               	goto	u6636
  8545  1D87                     u6635:
  8546  1D87  02F6               	subwf	??___flge+3,f
  8547  1D88                     u6636:
  8548  1D88  0876               	movf	??___flge+3,w
  8549  1D89  00A3               	movwf	___flge@ff1+3
  8550  1D8A  0875               	movf	??___flge+2,w
  8551  1D8B  00A2               	movwf	___flge@ff1+2
  8552  1D8C  0874               	movf	??___flge+1,w
  8553  1D8D  00A1               	movwf	___flge@ff1+1
  8554  1D8E  0873               	movf	??___flge,w
  8555  1D8F  00A0               	movwf	___flge@ff1
  8556  1D90                     l4002:
  8557  1D90  1FA7               	btfss	___flge@ff2+3,7
  8558  1D91  2D93               	goto	u6641
  8559  1D92  2D94               	goto	u6640
  8560  1D93                     u6641:
  8561  1D93  2DB8               	goto	l587
  8562  1D94                     u6640:
  8563  1D94                     l4004:
  8564  1D94  3000               	movlw	0
  8565  1D95  00F3               	movwf	??___flge
  8566  1D96  3000               	movlw	0
  8567  1D97  00F4               	movwf	??___flge+1
  8568  1D98  3000               	movlw	0
  8569  1D99  00F5               	movwf	??___flge+2
  8570  1D9A  3080               	movlw	128
  8571  1D9B  00F6               	movwf	??___flge+3
  8572  1D9C  0824               	movf	___flge@ff2,w
  8573  1D9D  02F3               	subwf	??___flge,f
  8574  1D9E  0825               	movf	___flge@ff2+1,w
  8575  1D9F  1C03               	skipc
  8576  1DA0  0F25               	incfsz	___flge@ff2+1,w
  8577  1DA1  2DA3               	goto	u6651
  8578  1DA2  2DA4               	goto	u6652
  8579  1DA3                     u6651:
  8580  1DA3  02F4               	subwf	??___flge+1,f
  8581  1DA4                     u6652:
  8582  1DA4  0826               	movf	___flge@ff2+2,w
  8583  1DA5  1C03               	skipc
  8584  1DA6  0F26               	incfsz	___flge@ff2+2,w
  8585  1DA7  2DA9               	goto	u6653
  8586  1DA8  2DAA               	goto	u6654
  8587  1DA9                     u6653:
  8588  1DA9  02F5               	subwf	??___flge+2,f
  8589  1DAA                     u6654:
  8590  1DAA  0827               	movf	___flge@ff2+3,w
  8591  1DAB  1C03               	skipc
  8592  1DAC  0F27               	incfsz	___flge@ff2+3,w
  8593  1DAD  2DAF               	goto	u6655
  8594  1DAE  2DB0               	goto	u6656
  8595  1DAF                     u6655:
  8596  1DAF  02F6               	subwf	??___flge+3,f
  8597  1DB0                     u6656:
  8598  1DB0  0876               	movf	??___flge+3,w
  8599  1DB1  00A7               	movwf	___flge@ff2+3
  8600  1DB2  0875               	movf	??___flge+2,w
  8601  1DB3  00A6               	movwf	___flge@ff2+2
  8602  1DB4  0874               	movf	??___flge+1,w
  8603  1DB5  00A5               	movwf	___flge@ff2+1
  8604  1DB6  0873               	movf	??___flge,w
  8605  1DB7  00A4               	movwf	___flge@ff2
  8606  1DB8                     l587:
  8607  1DB8  3080               	movlw	128
  8608  1DB9  06A3               	xorwf	___flge@ff1+3,f
  8609  1DBA  3080               	movlw	128
  8610  1DBB  06A7               	xorwf	___flge@ff2+3,f
  8611  1DBC  0827               	movf	___flge@ff2+3,w
  8612  1DBD  0223               	subwf	___flge@ff1+3,w
  8613  1DBE  1D03               	skipz
  8614  1DBF  2DCA               	goto	u6665
  8615  1DC0  0826               	movf	___flge@ff2+2,w
  8616  1DC1  0222               	subwf	___flge@ff1+2,w
  8617  1DC2  1D03               	skipz
  8618  1DC3  2DCA               	goto	u6665
  8619  1DC4  0825               	movf	___flge@ff2+1,w
  8620  1DC5  0221               	subwf	___flge@ff1+1,w
  8621  1DC6  1D03               	skipz
  8622  1DC7  2DCA               	goto	u6665
  8623  1DC8  0824               	movf	___flge@ff2,w
  8624  1DC9  0220               	subwf	___flge@ff1,w
  8625  1DCA                     u6665:
  8626  1DCA  1803               	skipnc
  8627  1DCB  2DCD               	goto	u6661
  8628  1DCC  2DCE               	goto	u6660
  8629  1DCD                     u6661:
  8630  1DCD  2DD0               	goto	l4008
  8631  1DCE                     u6660:
  8632  1DCE                     l4006:
  8633  1DCE  1003               	clrc
  8634  1DCF  2DD1               	goto	l588
  8635  1DD0                     l4008:
  8636  1DD0  1403               	setc
  8637  1DD1                     l588:
  8638  1DD1  0008               	return
  8639  1DD2                     __end_of___flge:
  8640                           
  8641                           	psect	text23
  8642  1BD0                     __ptext23:	
  8643 ;; *************** function ___fleq *****************
  8644 ;; Defined at:
  8645 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8646 ;; Parameters:    Size  Location     Type
  8647 ;;  ff1             4    0[BANK0 ] unsigned char 
  8648 ;;  ff2             4    4[BANK0 ] unsigned char 
  8649 ;; Auto vars:     Size  Location     Type
  8650 ;;		None
  8651 ;; Return value:  Size  Location     Type
  8652 ;;		None               void
  8653 ;; Registers used:
  8654 ;;		wreg, status,2, status,0
  8655 ;; Tracked objects:
  8656 ;;		On entry : 0/0
  8657 ;;		On exit  : 0/0
  8658 ;;		Unchanged: 0/0
  8659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8660 ;;      Params:         0       8       0       0       0
  8661 ;;      Locals:         0       0       0       0       0
  8662 ;;      Temps:          4       0       0       0       0
  8663 ;;      Totals:         4       8       0       0       0
  8664 ;;Total ram usage:       12 bytes
  8665 ;; Hardware stack levels used:    1
  8666 ;; Hardware stack levels required when called:    1
  8667 ;; This function calls:
  8668 ;;		Nothing
  8669 ;; This function is called by:
  8670 ;;		_sprintf
  8671 ;; This function uses a non-reentrant model
  8672 ;;
  8673                           
  8674                           
  8675                           ;psect for function ___fleq
  8676  1BD0                     ___fleq:
  8677  1BD0                     l3980:	
  8678                           ;incstack = 0
  8679                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8680                           
  8681  1BD0  3000               	movlw	0
  8682  1BD1  1283               	bcf	3,5	;RP0=0, select bank0
  8683  1BD2  1303               	bcf	3,6	;RP1=0, select bank0
  8684  1BD3  0520               	andwf	___fleq@ff1,w
  8685  1BD4  00F3               	movwf	??___fleq
  8686  1BD5  3000               	movlw	0
  8687  1BD6  0521               	andwf	___fleq@ff1+1,w
  8688  1BD7  00F4               	movwf	??___fleq+1
  8689  1BD8  3080               	movlw	128
  8690  1BD9  0522               	andwf	___fleq@ff1+2,w
  8691  1BDA  00F5               	movwf	??___fleq+2
  8692  1BDB  307F               	movlw	127
  8693  1BDC  0523               	andwf	___fleq@ff1+3,w
  8694  1BDD  00F6               	movwf	??___fleq+3
  8695  1BDE  0876               	movf	??___fleq+3,w
  8696  1BDF  0475               	iorwf	??___fleq+2,w
  8697  1BE0  0474               	iorwf	??___fleq+1,w
  8698  1BE1  0473               	iorwf	??___fleq,w
  8699  1BE2  1D03               	skipz
  8700  1BE3  2BE5               	goto	u6571
  8701  1BE4  2BE6               	goto	u6570
  8702  1BE5                     u6571:
  8703  1BE5  2BEE               	goto	l579
  8704  1BE6                     u6570:
  8705  1BE6                     l3982:
  8706  1BE6  3000               	movlw	0
  8707  1BE7  00A3               	movwf	___fleq@ff1+3
  8708  1BE8  3000               	movlw	0
  8709  1BE9  00A2               	movwf	___fleq@ff1+2
  8710  1BEA  3000               	movlw	0
  8711  1BEB  00A1               	movwf	___fleq@ff1+1
  8712  1BEC  3000               	movlw	0
  8713  1BED  00A0               	movwf	___fleq@ff1
  8714  1BEE                     l579:
  8715  1BEE  3000               	movlw	0
  8716  1BEF  0524               	andwf	___fleq@ff2,w
  8717  1BF0  00F3               	movwf	??___fleq
  8718  1BF1  3000               	movlw	0
  8719  1BF2  0525               	andwf	___fleq@ff2+1,w
  8720  1BF3  00F4               	movwf	??___fleq+1
  8721  1BF4  3080               	movlw	128
  8722  1BF5  0526               	andwf	___fleq@ff2+2,w
  8723  1BF6  00F5               	movwf	??___fleq+2
  8724  1BF7  307F               	movlw	127
  8725  1BF8  0527               	andwf	___fleq@ff2+3,w
  8726  1BF9  00F6               	movwf	??___fleq+3
  8727  1BFA  0876               	movf	??___fleq+3,w
  8728  1BFB  0475               	iorwf	??___fleq+2,w
  8729  1BFC  0474               	iorwf	??___fleq+1,w
  8730  1BFD  0473               	iorwf	??___fleq,w
  8731  1BFE  1D03               	skipz
  8732  1BFF  2C01               	goto	u6581
  8733  1C00  2C02               	goto	u6580
  8734  1C01                     u6581:
  8735  1C01  2C0A               	goto	l580
  8736  1C02                     u6580:
  8737  1C02                     l3984:
  8738  1C02  3000               	movlw	0
  8739  1C03  00A7               	movwf	___fleq@ff2+3
  8740  1C04  3000               	movlw	0
  8741  1C05  00A6               	movwf	___fleq@ff2+2
  8742  1C06  3000               	movlw	0
  8743  1C07  00A5               	movwf	___fleq@ff2+1
  8744  1C08  3000               	movlw	0
  8745  1C09  00A4               	movwf	___fleq@ff2
  8746  1C0A                     l580:
  8747  1C0A  0827               	movf	___fleq@ff2+3,w
  8748  1C0B  0623               	xorwf	___fleq@ff1+3,w
  8749  1C0C  1D03               	skipz
  8750  1C0D  2C18               	goto	u6595
  8751  1C0E  0826               	movf	___fleq@ff2+2,w
  8752  1C0F  0622               	xorwf	___fleq@ff1+2,w
  8753  1C10  1D03               	skipz
  8754  1C11  2C18               	goto	u6595
  8755  1C12  0825               	movf	___fleq@ff2+1,w
  8756  1C13  0621               	xorwf	___fleq@ff1+1,w
  8757  1C14  1D03               	skipz
  8758  1C15  2C18               	goto	u6595
  8759  1C16  0824               	movf	___fleq@ff2,w
  8760  1C17  0620               	xorwf	___fleq@ff1,w
  8761  1C18                     u6595:
  8762  1C18  1903               	skipnz
  8763  1C19  2C1B               	goto	u6591
  8764  1C1A  2C1C               	goto	u6590
  8765  1C1B                     u6591:
  8766  1C1B  2C1E               	goto	l3988
  8767  1C1C                     u6590:
  8768  1C1C                     l3986:
  8769  1C1C  1003               	clrc
  8770  1C1D  2C1F               	goto	l581
  8771  1C1E                     l3988:
  8772  1C1E  1403               	setc
  8773  1C1F                     l581:
  8774  1C1F  0008               	return
  8775  1C20                     __end_of___fleq:
  8776                           
  8777                           	psect	text24
  8778  194E                     __ptext24:	
  8779 ;; *************** function _setup *****************
  8780 ;; Defined at:
  8781 ;;		line 58 in file "main.c"
  8782 ;; Parameters:    Size  Location     Type
  8783 ;;		None
  8784 ;; Auto vars:     Size  Location     Type
  8785 ;;		None
  8786 ;; Return value:  Size  Location     Type
  8787 ;;                  1    wreg      void 
  8788 ;; Registers used:
  8789 ;;		wreg, status,2
  8790 ;; Tracked objects:
  8791 ;;		On entry : 0/0
  8792 ;;		On exit  : 0/0
  8793 ;;		Unchanged: 0/0
  8794 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8795 ;;      Params:         0       0       0       0       0
  8796 ;;      Locals:         0       0       0       0       0
  8797 ;;      Temps:          0       0       0       0       0
  8798 ;;      Totals:         0       0       0       0       0
  8799 ;;Total ram usage:        0 bytes
  8800 ;; Hardware stack levels used:    1
  8801 ;; Hardware stack levels required when called:    1
  8802 ;; This function calls:
  8803 ;;		Nothing
  8804 ;; This function is called by:
  8805 ;;		_main
  8806 ;; This function uses a non-reentrant model
  8807 ;;
  8808                           
  8809                           
  8810                           ;psect for function _setup
  8811  194E                     _setup:
  8812  194E                     l3216:	
  8813                           ;incstack = 0
  8814                           ; Regs used in _setup: [wreg+status,2]
  8815                           
  8816                           
  8817                           ;main.c: 59:     ANSEL = 0b00000011;
  8818  194E  3003               	movlw	3
  8819  194F  1683               	bsf	3,5	;RP0=1, select bank3
  8820  1950  1703               	bsf	3,6	;RP1=1, select bank3
  8821  1951  0088               	movwf	8	;volatile
  8822  1952                     l3218:
  8823                           
  8824                           ;main.c: 61:     TRISB = 0b00000000;
  8825  1952  1683               	bsf	3,5	;RP0=1, select bank1
  8826  1953  1303               	bcf	3,6	;RP1=0, select bank1
  8827  1954  0186               	clrf	6	;volatile
  8828  1955                     l3220:
  8829                           
  8830                           ;main.c: 62:     TRISD = 0b00000000;
  8831  1955  0188               	clrf	8	;volatile
  8832  1956                     l3222:
  8833                           
  8834                           ;main.c: 64:     PORTB = 0;
  8835  1956  1283               	bcf	3,5	;RP0=0, select bank0
  8836  1957  1303               	bcf	3,6	;RP1=0, select bank0
  8837  1958  0186               	clrf	6	;volatile
  8838  1959                     l3224:
  8839                           
  8840                           ;main.c: 65:     PORTD = 0;
  8841  1959  0188               	clrf	8	;volatile
  8842  195A                     l61:
  8843  195A  0008               	return
  8844  195B                     __end_of_setup:
  8845                           
  8846                           	psect	text25
  8847  192B                     __ptext25:	
  8848 ;; *************** function _read *****************
  8849 ;; Defined at:
  8850 ;;		line 41 in file "UART.c"
  8851 ;; Parameters:    Size  Location     Type
  8852 ;;		None
  8853 ;; Auto vars:     Size  Location     Type
  8854 ;;		None
  8855 ;; Return value:  Size  Location     Type
  8856 ;;                  1    wreg      void 
  8857 ;; Registers used:
  8858 ;;		None
  8859 ;; Tracked objects:
  8860 ;;		On entry : 0/0
  8861 ;;		On exit  : 0/0
  8862 ;;		Unchanged: 0/0
  8863 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8864 ;;      Params:         0       0       0       0       0
  8865 ;;      Locals:         0       0       0       0       0
  8866 ;;      Temps:          0       0       0       0       0
  8867 ;;      Totals:         0       0       0       0       0
  8868 ;;Total ram usage:        0 bytes
  8869 ;; Hardware stack levels used:    1
  8870 ;; Hardware stack levels required when called:    1
  8871 ;; This function calls:
  8872 ;;		Nothing
  8873 ;; This function is called by:
  8874 ;;		_main
  8875 ;; This function uses a non-reentrant model
  8876 ;;
  8877                           
  8878                           
  8879                           ;psect for function _read
  8880  192B                     _read:
  8881  192B                     l3242:	
  8882                           ;incstack = 0
  8883                           ; Regs used in _read: []
  8884                           
  8885                           
  8886                           ;UART.c: 42:     RCSTAbits.CREN = 1;
  8887  192B  1283               	bcf	3,5	;RP0=0, select bank0
  8888  192C  1303               	bcf	3,6	;RP1=0, select bank0
  8889  192D  1618               	bsf	24,4	;volatile
  8890                           
  8891                           ;UART.c: 43:     RCSTAbits.FERR = 0;
  8892  192E  1118               	bcf	24,2	;volatile
  8893                           
  8894                           ;UART.c: 44:     PIE1bits.RCIE = 1;
  8895  192F  1683               	bsf	3,5	;RP0=1, select bank1
  8896  1930  1303               	bcf	3,6	;RP1=0, select bank1
  8897  1931  168C               	bsf	12,5	;volatile
  8898                           
  8899                           ;UART.c: 45:     RCSTAbits.OERR = 0;
  8900  1932  1283               	bcf	3,5	;RP0=0, select bank0
  8901  1933  1303               	bcf	3,6	;RP1=0, select bank0
  8902  1934  1098               	bcf	24,1	;volatile
  8903  1935                     l188:
  8904  1935  0008               	return
  8905  1936                     __end_of_read:
  8906                           
  8907                           	psect	text26
  8908  1AFD                     __ptext26:	
  8909 ;; *************** function _Lcd_Write_String *****************
  8910 ;; Defined at:
  8911 ;;		line 110 in file "LCD.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;  a               2    8[COMMON] PTR unsigned char 
  8914 ;;		 -> s(20), STR_1(17), 
  8915 ;; Auto vars:     Size  Location     Type
  8916 ;;  i               2    3[BANK0 ] int 
  8917 ;; Return value:  Size  Location     Type
  8918 ;;                  1    wreg      void 
  8919 ;; Registers used:
  8920 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8921 ;; Tracked objects:
  8922 ;;		On entry : 0/0
  8923 ;;		On exit  : 0/0
  8924 ;;		Unchanged: 0/0
  8925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8926 ;;      Params:         2       0       0       0       0
  8927 ;;      Locals:         0       2       0       0       0
  8928 ;;      Temps:          0       3       0       0       0
  8929 ;;      Totals:         2       5       0       0       0
  8930 ;;Total ram usage:        7 bytes
  8931 ;; Hardware stack levels used:    1
  8932 ;; Hardware stack levels required when called:    3
  8933 ;; This function calls:
  8934 ;;		_Lcd_Write_Char
  8935 ;; This function is called by:
  8936 ;;		_main
  8937 ;; This function uses a non-reentrant model
  8938 ;;
  8939                           
  8940                           
  8941                           ;psect for function _Lcd_Write_String
  8942  1AFD                     _Lcd_Write_String:
  8943  1AFD                     l4100:	
  8944                           ;incstack = 0
  8945                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8946                           
  8947                           
  8948                           ;LCD.c: 110: void Lcd_Write_String(char *a);LCD.c: 111: {;LCD.c: 112:  int i;;LCD.c: 113
      +                          :  for(i=0;a[i]!='\0';i++)
  8949  1AFD  1283               	bcf	3,5	;RP0=0, select bank0
  8950  1AFE  1303               	bcf	3,6	;RP1=0, select bank0
  8951  1AFF  01A3               	clrf	Lcd_Write_String@i
  8952  1B00  01A4               	clrf	Lcd_Write_String@i+1
  8953  1B01  2B26               	goto	l4106
  8954  1B02                     l4102:
  8955                           
  8956                           ;LCD.c: 114:     Lcd_Write_Char(a[i]);
  8957  1B02  0823               	movf	Lcd_Write_String@i,w
  8958  1B03  0778               	addwf	Lcd_Write_String@a,w
  8959  1B04  00A1               	movwf	??_Lcd_Write_String+1
  8960  1B05  0879               	movf	Lcd_Write_String@a+1,w
  8961  1B06  00A0               	movwf	??_Lcd_Write_String
  8962  1B07  1803               	skipnc
  8963  1B08  0AA0               	incf	??_Lcd_Write_String,f
  8964  1B09  1FA3               	btfss	Lcd_Write_String@i,7
  8965  1B0A  2B0C               	goto	u6890
  8966  1B0B  03A0               	decf	??_Lcd_Write_String,f
  8967  1B0C                     u6890:
  8968  1B0C  1283               	bcf	3,5	;RP0=0, select bank0
  8969  1B0D  1303               	bcf	3,6	;RP1=0, select bank0
  8970  1B0E  0820               	movf	??_Lcd_Write_String,w
  8971  1B0F  00A2               	movwf	??_Lcd_Write_String+2
  8972  1B10  0822               	movf	??_Lcd_Write_String+2,w
  8973  1B11  00FF               	movwf	btemp+1
  8974  1B12  0821               	movf	??_Lcd_Write_String+1,w
  8975  1B13  0084               	movwf	4
  8976  1B14  160A  158A  2000  160A  158A  	fcall	stringtab
  8977  1B19  160A  158A  2175  160A  158A  	fcall	_Lcd_Write_Char
  8978  1B1E                     l4104:
  8979  1B1E  3001               	movlw	1
  8980  1B1F  1283               	bcf	3,5	;RP0=0, select bank0
  8981  1B20  1303               	bcf	3,6	;RP1=0, select bank0
  8982  1B21  07A3               	addwf	Lcd_Write_String@i,f
  8983  1B22  1803               	skipnc
  8984  1B23  0AA4               	incf	Lcd_Write_String@i+1,f
  8985  1B24  3000               	movlw	0
  8986  1B25  07A4               	addwf	Lcd_Write_String@i+1,f
  8987  1B26                     l4106:
  8988  1B26  0823               	movf	Lcd_Write_String@i,w
  8989  1B27  0778               	addwf	Lcd_Write_String@a,w
  8990  1B28  00A1               	movwf	??_Lcd_Write_String+1
  8991  1B29  0879               	movf	Lcd_Write_String@a+1,w
  8992  1B2A  00A0               	movwf	??_Lcd_Write_String
  8993  1B2B  1803               	skipnc
  8994  1B2C  0AA0               	incf	??_Lcd_Write_String,f
  8995  1B2D  1FA3               	btfss	Lcd_Write_String@i,7
  8996  1B2E  2B30               	goto	u6900
  8997  1B2F  03A0               	decf	??_Lcd_Write_String,f
  8998  1B30                     u6900:
  8999  1B30  1283               	bcf	3,5	;RP0=0, select bank0
  9000  1B31  1303               	bcf	3,6	;RP1=0, select bank0
  9001  1B32  0820               	movf	??_Lcd_Write_String,w
  9002  1B33  00A2               	movwf	??_Lcd_Write_String+2
  9003  1B34  0822               	movf	??_Lcd_Write_String+2,w
  9004  1B35  00FF               	movwf	btemp+1
  9005  1B36  0821               	movf	??_Lcd_Write_String+1,w
  9006  1B37  0084               	movwf	4
  9007  1B38  160A  158A  2000  160A  158A  	fcall	stringtab
  9008  1B3D  3A00               	xorlw	0
  9009  1B3E  1D03               	skipz
  9010  1B3F  2B41               	goto	u6911
  9011  1B40  2B42               	goto	u6910
  9012  1B41                     u6911:
  9013  1B41  2B02               	goto	l4102
  9014  1B42                     u6910:
  9015  1B42                     l118:
  9016  1B42  0008               	return
  9017  1B43                     __end_of_Lcd_Write_String:
  9018                           
  9019                           	psect	text27
  9020  1975                     __ptext27:	
  9021 ;; *************** function _Lcd_Write_Char *****************
  9022 ;; Defined at:
  9023 ;;		line 94 in file "LCD.c"
  9024 ;; Parameters:    Size  Location     Type
  9025 ;;  a               1    wreg     unsigned char 
  9026 ;; Auto vars:     Size  Location     Type
  9027 ;;  a               1    7[COMMON] unsigned char 
  9028 ;;  y               1    6[COMMON] unsigned char 
  9029 ;;  temp            1    0        unsigned char 
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  1    wreg      void 
  9032 ;; Registers used:
  9033 ;;		wreg, status,2, status,0, pclath, cstack
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9039 ;;      Params:         0       0       0       0       0
  9040 ;;      Locals:         3       0       0       0       0
  9041 ;;      Temps:          1       0       0       0       0
  9042 ;;      Totals:         4       0       0       0       0
  9043 ;;Total ram usage:        4 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; Hardware stack levels required when called:    2
  9046 ;; This function calls:
  9047 ;;		_Lcd_Port
  9048 ;; This function is called by:
  9049 ;;		_Lcd_Write_String
  9050 ;; This function uses a non-reentrant model
  9051 ;;
  9052                           
  9053                           
  9054                           ;psect for function _Lcd_Write_Char
  9055  1975                     _Lcd_Write_Char:
  9056                           
  9057                           ;incstack = 0
  9058                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9059                           ;Lcd_Write_Char@a stored from wreg
  9060  1975  00F7               	movwf	Lcd_Write_Char@a
  9061  1976                     l3798:
  9062                           
  9063                           ;LCD.c: 98:    y = a&0xF0;
  9064  1976  0877               	movf	Lcd_Write_Char@a,w
  9065  1977  39F0               	andlw	240
  9066  1978  00F4               	movwf	??_Lcd_Write_Char
  9067  1979  0874               	movf	??_Lcd_Write_Char,w
  9068  197A  00F6               	movwf	Lcd_Write_Char@y
  9069  197B                     l3800:
  9070                           
  9071                           ;LCD.c: 99:    PORTDbits.RD2 = 1;
  9072  197B  1283               	bcf	3,5	;RP0=0, select bank0
  9073  197C  1303               	bcf	3,6	;RP1=0, select bank0
  9074  197D  1508               	bsf	8,2	;volatile
  9075  197E                     l3802:
  9076                           
  9077                           ;LCD.c: 100:    Lcd_Port(a);
  9078  197E  0877               	movf	Lcd_Write_Char@a,w
  9079  197F  160A  158A  2125  160A  158A  	fcall	_Lcd_Port
  9080  1984                     l3804:
  9081                           
  9082                           ;LCD.c: 101:    PORTDbits.RD3 = 1;
  9083  1984  1283               	bcf	3,5	;RP0=0, select bank0
  9084  1985  1303               	bcf	3,6	;RP1=0, select bank0
  9085  1986  1588               	bsf	8,3	;volatile
  9086  1987                     l3806:
  9087                           
  9088                           ;LCD.c: 102:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  9089  1987  301A               	movlw	26
  9090  1988  00F4               	movwf	??_Lcd_Write_Char
  9091  1989                     u7497:
  9092  1989  0BF4               	decfsz	??_Lcd_Write_Char,f
  9093  198A  2989               	goto	u7497
  9094  198B  0000               	nop
  9095  198C                     l3808:
  9096                           
  9097                           ;LCD.c: 103:    PORTDbits.RD3 = 0;
  9098  198C  1283               	bcf	3,5	;RP0=0, select bank0
  9099  198D  1303               	bcf	3,6	;RP1=0, select bank0
  9100  198E  1188               	bcf	8,3	;volatile
  9101  198F                     l3810:
  9102                           
  9103                           ;LCD.c: 106:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  9104  198F  301A               	movlw	26
  9105  1990  00F4               	movwf	??_Lcd_Write_Char
  9106  1991                     u7507:
  9107  1991  0BF4               	decfsz	??_Lcd_Write_Char,f
  9108  1992  2991               	goto	u7507
  9109  1993  0000               	nop
  9110  1994                     l112:
  9111  1994  0008               	return
  9112  1995                     __end_of_Lcd_Write_Char:
  9113                           
  9114                           	psect	text28
  9115  19BA                     __ptext28:	
  9116 ;; *************** function _Lcd_Set_Cursor *****************
  9117 ;; Defined at:
  9118 ;;		line 45 in file "LCD.c"
  9119 ;; Parameters:    Size  Location     Type
  9120 ;;  a               1    wreg     unsigned char 
  9121 ;;  b               1    7[COMMON] unsigned char 
  9122 ;; Auto vars:     Size  Location     Type
  9123 ;;  a               1    0[BANK0 ] unsigned char 
  9124 ;;  temp            1    1[BANK0 ] unsigned char 
  9125 ;;  y               1    0        unsigned char 
  9126 ;;  z               1    0        unsigned char 
  9127 ;; Return value:  Size  Location     Type
  9128 ;;                  1    wreg      void 
  9129 ;; Registers used:
  9130 ;;		wreg, status,2, status,0, pclath, cstack
  9131 ;; Tracked objects:
  9132 ;;		On entry : 0/0
  9133 ;;		On exit  : 0/0
  9134 ;;		Unchanged: 0/0
  9135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9136 ;;      Params:         1       0       0       0       0
  9137 ;;      Locals:         0       2       0       0       0
  9138 ;;      Temps:          1       0       0       0       0
  9139 ;;      Totals:         2       2       0       0       0
  9140 ;;Total ram usage:        4 bytes
  9141 ;; Hardware stack levels used:    1
  9142 ;; Hardware stack levels required when called:    3
  9143 ;; This function calls:
  9144 ;;		_Lcd_Cmd
  9145 ;; This function is called by:
  9146 ;;		_main
  9147 ;; This function uses a non-reentrant model
  9148 ;;
  9149                           
  9150                           
  9151                           ;psect for function _Lcd_Set_Cursor
  9152  19BA                     _Lcd_Set_Cursor:
  9153                           
  9154                           ;incstack = 0
  9155                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9156                           ;Lcd_Set_Cursor@a stored from wreg
  9157  19BA  1283               	bcf	3,5	;RP0=0, select bank0
  9158  19BB  1303               	bcf	3,6	;RP1=0, select bank0
  9159  19BC  00A0               	movwf	Lcd_Set_Cursor@a
  9160  19BD                     l4088:
  9161                           
  9162                           ;LCD.c: 45: void Lcd_Set_Cursor(char a, char b);LCD.c: 46: {;LCD.c: 47:  char temp,z,y;;
      +                          LCD.c: 48:  if(a == 1)
  9163  19BD  0320               	decf	Lcd_Set_Cursor@a,w
  9164  19BE  1D03               	btfss	3,2
  9165  19BF  29C1               	goto	u6871
  9166  19C0  29C2               	goto	u6870
  9167  19C1                     u6871:
  9168  19C1  29CE               	goto	l4094
  9169  19C2                     u6870:
  9170  19C2                     l4090:
  9171                           
  9172                           ;LCD.c: 49:  {;LCD.c: 50:    temp = 0x80 + b - 1;
  9173  19C2  0877               	movf	Lcd_Set_Cursor@b,w
  9174  19C3  3E7F               	addlw	127
  9175  19C4  00F8               	movwf	??_Lcd_Set_Cursor
  9176  19C5  0878               	movf	??_Lcd_Set_Cursor,w
  9177  19C6  00A1               	movwf	Lcd_Set_Cursor@temp
  9178  19C7                     l4092:
  9179                           
  9180                           ;LCD.c: 55:       Lcd_Cmd(temp);
  9181  19C7  0821               	movf	Lcd_Set_Cursor@temp,w
  9182  19C8  160A  158A  215B  160A  158A  	fcall	_Lcd_Cmd
  9183                           
  9184                           ;LCD.c: 56:  }
  9185  19CD  29DF               	goto	l106
  9186  19CE                     l4094:
  9187  19CE  3002               	movlw	2
  9188  19CF  0620               	xorwf	Lcd_Set_Cursor@a,w
  9189  19D0  1D03               	btfss	3,2
  9190  19D1  29D3               	goto	u6881
  9191  19D2  29D4               	goto	u6880
  9192  19D3                     u6881:
  9193  19D3  29DF               	goto	l106
  9194  19D4                     u6880:
  9195  19D4                     l4096:
  9196                           
  9197                           ;LCD.c: 58:  {;LCD.c: 59:   temp = 0xC0 + b - 1;
  9198  19D4  0877               	movf	Lcd_Set_Cursor@b,w
  9199  19D5  3EBF               	addlw	191
  9200  19D6  00F8               	movwf	??_Lcd_Set_Cursor
  9201  19D7  0878               	movf	??_Lcd_Set_Cursor,w
  9202  19D8  00A1               	movwf	Lcd_Set_Cursor@temp
  9203  19D9                     l4098:
  9204                           
  9205                           ;LCD.c: 64:         Lcd_Cmd(temp);
  9206  19D9  0821               	movf	Lcd_Set_Cursor@temp,w
  9207  19DA  160A  158A  215B  160A  158A  	fcall	_Lcd_Cmd
  9208  19DF                     l106:
  9209  19DF  0008               	return
  9210  19E0                     __end_of_Lcd_Set_Cursor:
  9211                           
  9212                           	psect	text29
  9213  1B89                     __ptext29:	
  9214 ;; *************** function _Lcd_Init *****************
  9215 ;; Defined at:
  9216 ;;		line 68 in file "LCD.c"
  9217 ;; Parameters:    Size  Location     Type
  9218 ;;		None
  9219 ;; Auto vars:     Size  Location     Type
  9220 ;;		None
  9221 ;; Return value:  Size  Location     Type
  9222 ;;                  1    wreg      void 
  9223 ;; Registers used:
  9224 ;;		wreg, status,2, status,0, pclath, cstack
  9225 ;; Tracked objects:
  9226 ;;		On entry : 0/0
  9227 ;;		On exit  : 0/0
  9228 ;;		Unchanged: 0/0
  9229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9230 ;;      Params:         0       0       0       0       0
  9231 ;;      Locals:         0       0       0       0       0
  9232 ;;      Temps:          2       0       0       0       0
  9233 ;;      Totals:         2       0       0       0       0
  9234 ;;Total ram usage:        2 bytes
  9235 ;; Hardware stack levels used:    1
  9236 ;; Hardware stack levels required when called:    3
  9237 ;; This function calls:
  9238 ;;		_Lcd_Cmd
  9239 ;;		_Lcd_Port
  9240 ;; This function is called by:
  9241 ;;		_main
  9242 ;; This function uses a non-reentrant model
  9243 ;;
  9244                           
  9245                           
  9246                           ;psect for function _Lcd_Init
  9247  1B89                     _Lcd_Init:
  9248  1B89                     l4076:	
  9249                           ;incstack = 0
  9250                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9251                           
  9252                           
  9253                           ;LCD.c: 70:   Lcd_Port(0x00);
  9254  1B89  3000               	movlw	0
  9255  1B8A  160A  158A  2125  160A  158A  	fcall	_Lcd_Port
  9256  1B8F                     l4078:
  9257                           
  9258                           ;LCD.c: 71:    _delay((unsigned long)((20)*(8000000/4000.0)));
  9259  1B8F  3034               	movlw	52
  9260  1B90  00F8               	movwf	??_Lcd_Init+1
  9261  1B91  30F1               	movlw	241
  9262  1B92  00F7               	movwf	??_Lcd_Init
  9263  1B93                     u7517:
  9264  1B93  0BF7               	decfsz	??_Lcd_Init,f
  9265  1B94  2B93               	goto	u7517
  9266  1B95  0BF8               	decfsz	??_Lcd_Init+1,f
  9267  1B96  2B93               	goto	u7517
  9268  1B97  2B98               	nop2
  9269  1B98                     l4080:
  9270                           
  9271                           ;LCD.c: 72:   Lcd_Cmd(0x3F);
  9272  1B98  303F               	movlw	63
  9273  1B99  160A  158A  215B  160A  158A  	fcall	_Lcd_Cmd
  9274                           
  9275                           ;LCD.c: 73:  _delay((unsigned long)((10)*(8000000/4000.0)));
  9276  1B9E  301A               	movlw	26
  9277  1B9F  00F8               	movwf	??_Lcd_Init+1
  9278  1BA0  30F8               	movlw	248
  9279  1BA1  00F7               	movwf	??_Lcd_Init
  9280  1BA2                     u7527:
  9281  1BA2  0BF7               	decfsz	??_Lcd_Init,f
  9282  1BA3  2BA2               	goto	u7527
  9283  1BA4  0BF8               	decfsz	??_Lcd_Init+1,f
  9284  1BA5  2BA2               	goto	u7527
  9285  1BA6  0000               	nop
  9286  1BA7                     l4082:
  9287                           
  9288                           ;LCD.c: 74:   Lcd_Cmd(0x3F);
  9289  1BA7  303F               	movlw	63
  9290  1BA8  160A  158A  215B  160A  158A  	fcall	_Lcd_Cmd
  9291  1BAD                     l4084:
  9292                           
  9293                           ;LCD.c: 75:  _delay((unsigned long)((200)*(8000000/4000000.0)));
  9294  1BAD  3085               	movlw	133
  9295  1BAE  00F7               	movwf	??_Lcd_Init
  9296  1BAF                     u7537:
  9297  1BAF  0BF7               	decfsz	??_Lcd_Init,f
  9298  1BB0  2BAF               	goto	u7537
  9299                           
  9300                           ;LCD.c: 76:   Lcd_Cmd(0x3F);
  9301  1BB1  303F               	movlw	63
  9302  1BB2  160A  158A  215B  160A  158A  	fcall	_Lcd_Cmd
  9303                           
  9304                           ;LCD.c: 78:   Lcd_Cmd (0x32);
  9305  1BB7  3032               	movlw	50
  9306  1BB8  160A  158A  215B  160A  158A  	fcall	_Lcd_Cmd
  9307                           
  9308                           ;LCD.c: 79:   Lcd_Cmd (0x38);
  9309  1BBD  3038               	movlw	56
  9310  1BBE  160A  158A  215B  160A  158A  	fcall	_Lcd_Cmd
  9311                           
  9312                           ;LCD.c: 80:   Lcd_Cmd (0x0C);
  9313  1BC3  300C               	movlw	12
  9314  1BC4  160A  158A  215B  160A  158A  	fcall	_Lcd_Cmd
  9315                           
  9316                           ;LCD.c: 81:   Lcd_Cmd (0x06);
  9317  1BC9  3006               	movlw	6
  9318  1BCA  160A  158A  215B  160A  158A  	fcall	_Lcd_Cmd
  9319  1BCF                     l109:
  9320  1BCF  0008               	return
  9321  1BD0                     __end_of_Lcd_Init:
  9322                           
  9323                           	psect	text30
  9324  1941                     __ptext30:	
  9325 ;; *************** function _Lcd_Clear *****************
  9326 ;; Defined at:
  9327 ;;		line 39 in file "LCD.c"
  9328 ;; Parameters:    Size  Location     Type
  9329 ;;		None
  9330 ;; Auto vars:     Size  Location     Type
  9331 ;;		None
  9332 ;; Return value:  Size  Location     Type
  9333 ;;                  1    wreg      void 
  9334 ;; Registers used:
  9335 ;;		wreg, status,2, status,0, pclath, cstack
  9336 ;; Tracked objects:
  9337 ;;		On entry : 0/0
  9338 ;;		On exit  : 0/0
  9339 ;;		Unchanged: 0/0
  9340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9341 ;;      Params:         0       0       0       0       0
  9342 ;;      Locals:         0       0       0       0       0
  9343 ;;      Temps:          0       0       0       0       0
  9344 ;;      Totals:         0       0       0       0       0
  9345 ;;Total ram usage:        0 bytes
  9346 ;; Hardware stack levels used:    1
  9347 ;; Hardware stack levels required when called:    3
  9348 ;; This function calls:
  9349 ;;		_Lcd_Cmd
  9350 ;; This function is called by:
  9351 ;;		_main
  9352 ;; This function uses a non-reentrant model
  9353 ;;
  9354                           
  9355                           
  9356                           ;psect for function _Lcd_Clear
  9357  1941                     _Lcd_Clear:
  9358  1941                     l4086:	
  9359                           ;incstack = 0
  9360                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9361                           
  9362                           
  9363                           ;LCD.c: 41:  Lcd_Cmd(0);
  9364  1941  3000               	movlw	0
  9365  1942  160A  158A  215B  160A  158A  	fcall	_Lcd_Cmd
  9366                           
  9367                           ;LCD.c: 42:  Lcd_Cmd(1);
  9368  1947  3001               	movlw	1
  9369  1948  160A  158A  215B  160A  158A  	fcall	_Lcd_Cmd
  9370  194D                     l100:
  9371  194D  0008               	return
  9372  194E                     __end_of_Lcd_Clear:
  9373                           
  9374                           	psect	text31
  9375  195B                     __ptext31:	
  9376 ;; *************** function _Lcd_Cmd *****************
  9377 ;; Defined at:
  9378 ;;		line 30 in file "LCD.c"
  9379 ;; Parameters:    Size  Location     Type
  9380 ;;  a               1    wreg     unsigned char 
  9381 ;; Auto vars:     Size  Location     Type
  9382 ;;  a               1    6[COMMON] unsigned char 
  9383 ;; Return value:  Size  Location     Type
  9384 ;;                  1    wreg      void 
  9385 ;; Registers used:
  9386 ;;		wreg, status,2, status,0, pclath, cstack
  9387 ;; Tracked objects:
  9388 ;;		On entry : 0/0
  9389 ;;		On exit  : 0/0
  9390 ;;		Unchanged: 0/0
  9391 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9392 ;;      Params:         0       0       0       0       0
  9393 ;;      Locals:         1       0       0       0       0
  9394 ;;      Temps:          2       0       0       0       0
  9395 ;;      Totals:         3       0       0       0       0
  9396 ;;Total ram usage:        3 bytes
  9397 ;; Hardware stack levels used:    1
  9398 ;; Hardware stack levels required when called:    2
  9399 ;; This function calls:
  9400 ;;		_Lcd_Port
  9401 ;; This function is called by:
  9402 ;;		_Lcd_Clear
  9403 ;;		_Lcd_Set_Cursor
  9404 ;;		_Lcd_Init
  9405 ;;		_Lcd_Shift_Right
  9406 ;;		_Lcd_Shift_Left
  9407 ;; This function uses a non-reentrant model
  9408 ;;
  9409                           
  9410                           
  9411                           ;psect for function _Lcd_Cmd
  9412  195B                     _Lcd_Cmd:
  9413                           
  9414                           ;incstack = 0
  9415                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9416                           ;Lcd_Cmd@a stored from wreg
  9417  195B  00F6               	movwf	Lcd_Cmd@a
  9418  195C                     l3788:
  9419                           
  9420                           ;LCD.c: 30: void Lcd_Cmd(char a);LCD.c: 31: {;LCD.c: 32:  PORTDbits.RD2 = 0;
  9421  195C  1283               	bcf	3,5	;RP0=0, select bank0
  9422  195D  1303               	bcf	3,6	;RP1=0, select bank0
  9423  195E  1108               	bcf	8,2	;volatile
  9424  195F                     l3790:
  9425                           
  9426                           ;LCD.c: 33:  Lcd_Port(a);
  9427  195F  0876               	movf	Lcd_Cmd@a,w
  9428  1960  160A  158A  2125  160A  158A  	fcall	_Lcd_Port
  9429  1965                     l3792:
  9430                           
  9431                           ;LCD.c: 34:  PORTDbits.RD3 = 1;
  9432  1965  1283               	bcf	3,5	;RP0=0, select bank0
  9433  1966  1303               	bcf	3,6	;RP1=0, select bank0
  9434  1967  1588               	bsf	8,3	;volatile
  9435  1968                     l3794:
  9436                           
  9437                           ;LCD.c: 35:         _delay((unsigned long)((4)*(8000000/4000.0)));
  9438  1968  300B               	movlw	11
  9439  1969  00F5               	movwf	??_Lcd_Cmd+1
  9440  196A  3062               	movlw	98
  9441  196B  00F4               	movwf	??_Lcd_Cmd
  9442  196C                     u7547:
  9443  196C  0BF4               	decfsz	??_Lcd_Cmd,f
  9444  196D  296C               	goto	u7547
  9445  196E  0BF5               	decfsz	??_Lcd_Cmd+1,f
  9446  196F  296C               	goto	u7547
  9447  1970  0000               	nop
  9448  1971                     l3796:
  9449                           
  9450                           ;LCD.c: 36:         PORTDbits.RD3 = 0;
  9451  1971  1283               	bcf	3,5	;RP0=0, select bank0
  9452  1972  1303               	bcf	3,6	;RP1=0, select bank0
  9453  1973  1188               	bcf	8,3	;volatile
  9454  1974                     l97:
  9455  1974  0008               	return
  9456  1975                     __end_of_Lcd_Cmd:
  9457                           
  9458                           	psect	text32
  9459  1925                     __ptext32:	
  9460 ;; *************** function _Lcd_Port *****************
  9461 ;; Defined at:
  9462 ;;		line 23 in file "LCD.c"
  9463 ;; Parameters:    Size  Location     Type
  9464 ;;  a               1    wreg     unsigned char 
  9465 ;; Auto vars:     Size  Location     Type
  9466 ;;  a               1    3[COMMON] unsigned char 
  9467 ;; Return value:  Size  Location     Type
  9468 ;;                  1    wreg      void 
  9469 ;; Registers used:
  9470 ;;		wreg
  9471 ;; Tracked objects:
  9472 ;;		On entry : 0/0
  9473 ;;		On exit  : 0/0
  9474 ;;		Unchanged: 0/0
  9475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9476 ;;      Params:         0       0       0       0       0
  9477 ;;      Locals:         1       0       0       0       0
  9478 ;;      Temps:          0       0       0       0       0
  9479 ;;      Totals:         1       0       0       0       0
  9480 ;;Total ram usage:        1 bytes
  9481 ;; Hardware stack levels used:    1
  9482 ;; Hardware stack levels required when called:    1
  9483 ;; This function calls:
  9484 ;;		Nothing
  9485 ;; This function is called by:
  9486 ;;		_Lcd_Cmd
  9487 ;;		_Lcd_Init
  9488 ;;		_Lcd_Write_Char
  9489 ;; This function uses a non-reentrant model
  9490 ;;
  9491                           
  9492                           
  9493                           ;psect for function _Lcd_Port
  9494  1925                     _Lcd_Port:
  9495                           
  9496                           ;incstack = 0
  9497                           ; Regs used in _Lcd_Port: [wreg]
  9498                           ;Lcd_Port@a stored from wreg
  9499  1925  00F3               	movwf	Lcd_Port@a
  9500  1926                     l3742:
  9501                           
  9502                           ;LCD.c: 23: void Lcd_Port(char a);LCD.c: 24: {;LCD.c: 26:     PORTB = a;
  9503  1926  0873               	movf	Lcd_Port@a,w
  9504  1927  1283               	bcf	3,5	;RP0=0, select bank0
  9505  1928  1303               	bcf	3,6	;RP1=0, select bank0
  9506  1929  0086               	movwf	6	;volatile
  9507  192A                     l94:
  9508  192A  0008               	return
  9509  192B                     __end_of_Lcd_Port:
  9510                           
  9511                           	psect	text33
  9512  0800                     __ptext33:	
  9513 ;; *************** function _INIT_UART *****************
  9514 ;; Defined at:
  9515 ;;		line 10 in file "UART.c"
  9516 ;; Parameters:    Size  Location     Type
  9517 ;;		None
  9518 ;; Auto vars:     Size  Location     Type
  9519 ;;		None
  9520 ;; Return value:  Size  Location     Type
  9521 ;;                  1    wreg      void 
  9522 ;; Registers used:
  9523 ;;		wreg
  9524 ;; Tracked objects:
  9525 ;;		On entry : 0/0
  9526 ;;		On exit  : 0/0
  9527 ;;		Unchanged: 0/0
  9528 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9529 ;;      Params:         0       0       0       0       0
  9530 ;;      Locals:         0       0       0       0       0
  9531 ;;      Temps:          0       0       0       0       0
  9532 ;;      Totals:         0       0       0       0       0
  9533 ;;Total ram usage:        0 bytes
  9534 ;; Hardware stack levels used:    1
  9535 ;; Hardware stack levels required when called:    1
  9536 ;; This function calls:
  9537 ;;		Nothing
  9538 ;; This function is called by:
  9539 ;;		_main
  9540 ;; This function uses a non-reentrant model
  9541 ;;
  9542                           
  9543                           
  9544                           ;psect for function _INIT_UART
  9545  0800                     _INIT_UART:
  9546  0800                     l3226:	
  9547                           ;incstack = 0
  9548                           ; Regs used in _INIT_UART: [wreg]
  9549                           
  9550                           
  9551                           ;UART.c: 11:     TRISC = 0b10000000;
  9552  0800  3080               	movlw	128
  9553  0801  1683               	bsf	3,5	;RP0=1, select bank1
  9554  0802  1303               	bcf	3,6	;RP1=0, select bank1
  9555  0803  0087               	movwf	7	;volatile
  9556  0804                     l3228:
  9557                           
  9558                           ;UART.c: 12:     TXSTAbits.SYNC = 0;
  9559  0804  1218               	bcf	24,4	;volatile
  9560  0805                     l3230:
  9561                           
  9562                           ;UART.c: 13:     RCSTAbits.SPEN = 1;
  9563  0805  1283               	bcf	3,5	;RP0=0, select bank0
  9564  0806  1303               	bcf	3,6	;RP1=0, select bank0
  9565  0807  1798               	bsf	24,7	;volatile
  9566  0808                     l3232:
  9567                           
  9568                           ;UART.c: 14:     PIE1bits.RCIE = 1;
  9569  0808  1683               	bsf	3,5	;RP0=1, select bank1
  9570  0809  1303               	bcf	3,6	;RP1=0, select bank1
  9571  080A  168C               	bsf	12,5	;volatile
  9572  080B                     l3234:
  9573                           
  9574                           ;UART.c: 15:     INTCONbits.GIE = 1;
  9575  080B  178B               	bsf	11,7	;volatile
  9576  080C                     l3236:
  9577                           
  9578                           ;UART.c: 16:     TXSTAbits.BRGH = 0;
  9579  080C  1118               	bcf	24,2	;volatile
  9580  080D                     l3238:
  9581                           
  9582                           ;UART.c: 17:     BAUDCTLbits.BRG16 = 1;
  9583  080D  1683               	bsf	3,5	;RP0=1, select bank3
  9584  080E  1703               	bsf	3,6	;RP1=1, select bank3
  9585  080F  1587               	bsf	7,3	;volatile
  9586  0810                     l3240:
  9587                           
  9588                           ;UART.c: 18:     TXSTAbits.TXEN = 1;
  9589  0810  1683               	bsf	3,5	;RP0=1, select bank1
  9590  0811  1303               	bcf	3,6	;RP1=0, select bank1
  9591  0812  1698               	bsf	24,5	;volatile
  9592                           
  9593                           ;UART.c: 19:     SPBRG = 25;
  9594  0813  3019               	movlw	25
  9595  0814  0099               	movwf	25	;volatile
  9596  0815                     l167:
  9597  0815  0008               	return
  9598  0816                     __end_of_INIT_UART:
  9599                           
  9600                           	psect	text34
  9601  1A09                     __ptext34:	
  9602 ;; *************** function _AADC *****************
  9603 ;; Defined at:
  9604 ;;		line 15 in file "ADC.c"
  9605 ;; Parameters:    Size  Location     Type
  9606 ;;  banderaADC      1    wreg     unsigned char 
  9607 ;;  Num_Pot         1    3[COMMON] unsigned char 
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;  banderaADC      1    6[COMMON] unsigned char 
  9610 ;;  pot             1    5[COMMON] unsigned char 
  9611 ;; Return value:  Size  Location     Type
  9612 ;;                  1    wreg      unsigned char 
  9613 ;; Registers used:
  9614 ;;		wreg, status,2, status,0
  9615 ;; Tracked objects:
  9616 ;;		On entry : 0/0
  9617 ;;		On exit  : 0/0
  9618 ;;		Unchanged: 0/0
  9619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9620 ;;      Params:         1       0       0       0       0
  9621 ;;      Locals:         2       0       0       0       0
  9622 ;;      Temps:          1       0       0       0       0
  9623 ;;      Totals:         4       0       0       0       0
  9624 ;;Total ram usage:        4 bytes
  9625 ;; Hardware stack levels used:    1
  9626 ;; Hardware stack levels required when called:    1
  9627 ;; This function calls:
  9628 ;;		Nothing
  9629 ;; This function is called by:
  9630 ;;		_main
  9631 ;; This function uses a non-reentrant model
  9632 ;;
  9633                           
  9634                           
  9635                           ;psect for function _AADC
  9636  1A09                     _AADC:
  9637                           
  9638                           ;incstack = 0
  9639                           ; Regs used in _AADC: [wreg+status,2+status,0]
  9640                           ;AADC@banderaADC stored from wreg
  9641  1A09  00F6               	movwf	AADC@banderaADC
  9642  1A0A                     l3256:
  9643                           
  9644                           ;ADC.c: 16:     uint8_t pot;;ADC.c: 17:     ADCON1bits.ADFM = 0;
  9645  1A0A  1683               	bsf	3,5	;RP0=1, select bank1
  9646  1A0B  1303               	bcf	3,6	;RP1=0, select bank1
  9647  1A0C  139F               	bcf	31,7	;volatile
  9648  1A0D                     l3258:
  9649                           
  9650                           ;ADC.c: 18:     INTCON = 0b11101000;
  9651  1A0D  30E8               	movlw	232
  9652  1A0E  008B               	movwf	11	;volatile
  9653  1A0F                     l3260:
  9654                           
  9655                           ;ADC.c: 22:     PIE1bits.ADIE = 1;
  9656  1A0F  170C               	bsf	12,6	;volatile
  9657  1A10                     l3262:
  9658                           
  9659                           ;ADC.c: 23:     PIR1bits.ADIF = 0;
  9660  1A10  1283               	bcf	3,5	;RP0=0, select bank0
  9661  1A11  1303               	bcf	3,6	;RP1=0, select bank0
  9662  1A12  130C               	bcf	12,6	;volatile
  9663  1A13                     l3264:
  9664                           
  9665                           ;ADC.c: 24:     if (banderaADC == 1 && Num_Pot ==1){
  9666  1A13  0376               	decf	AADC@banderaADC,w
  9667  1A14  1D03               	btfss	3,2
  9668  1A15  2A17               	goto	u5221
  9669  1A16  2A18               	goto	u5220
  9670  1A17                     u5221:
  9671  1A17  2A29               	goto	l3276
  9672  1A18                     u5220:
  9673  1A18                     l3266:
  9674  1A18  0373               	decf	AADC@Num_Pot,w
  9675  1A19  1D03               	btfss	3,2
  9676  1A1A  2A1C               	goto	u5231
  9677  1A1B  2A1D               	goto	u5230
  9678  1A1C                     u5231:
  9679  1A1C  2A29               	goto	l3276
  9680  1A1D                     u5230:
  9681  1A1D                     l3268:
  9682                           
  9683                           ;ADC.c: 25:          ADCON0 = 0b01000001;
  9684  1A1D  3041               	movlw	65
  9685  1A1E  009F               	movwf	31	;volatile
  9686                           
  9687                           ;ADC.c: 26:         _delay((unsigned long)((20)*(8000000/4000000.0)));
  9688  1A1F  300D               	movlw	13
  9689  1A20  00F4               	movwf	??_AADC
  9690  1A21                     u7557:
  9691  1A21  0BF4               	decfsz	??_AADC,f
  9692  1A22  2A21               	goto	u7557
  9693  1A23                     l3270:
  9694                           
  9695                           ;ADC.c: 27:         ADCON0bits.GO = 1;
  9696  1A23  1283               	bcf	3,5	;RP0=0, select bank0
  9697  1A24  1303               	bcf	3,6	;RP1=0, select bank0
  9698  1A25  149F               	bsf	31,1	;volatile
  9699  1A26                     l3272:
  9700  1A26                     l3274:
  9701                           
  9702                           ;ADC.c: 29:         pot=1;
  9703  1A26  01F5               	clrf	AADC@pot
  9704  1A27  0AF5               	incf	AADC@pot,f
  9705                           
  9706                           ;ADC.c: 30:     } else if (banderaADC==1 && Num_Pot ==0){
  9707  1A28  2A3D               	goto	l144
  9708  1A29                     l3276:
  9709  1A29  0376               	decf	AADC@banderaADC,w
  9710  1A2A  1D03               	btfss	3,2
  9711  1A2B  2A2D               	goto	u5241
  9712  1A2C  2A2E               	goto	u5240
  9713  1A2D                     u5241:
  9714  1A2D  2A3D               	goto	l144
  9715  1A2E                     u5240:
  9716  1A2E                     l3278:
  9717  1A2E  0873               	movf	AADC@Num_Pot,w
  9718  1A2F  1D03               	btfss	3,2
  9719  1A30  2A32               	goto	u5251
  9720  1A31  2A33               	goto	u5250
  9721  1A32                     u5251:
  9722  1A32  2A3D               	goto	l144
  9723  1A33                     u5250:
  9724  1A33                     l3280:
  9725                           
  9726                           ;ADC.c: 31:         ADCON0 = 0b01000101;
  9727  1A33  3045               	movlw	69
  9728  1A34  009F               	movwf	31	;volatile
  9729                           
  9730                           ;ADC.c: 32:         _delay((unsigned long)((20)*(8000000/4000000.0)));
  9731  1A35  300D               	movlw	13
  9732  1A36  00F4               	movwf	??_AADC
  9733  1A37                     u7567:
  9734  1A37  0BF4               	decfsz	??_AADC,f
  9735  1A38  2A37               	goto	u7567
  9736  1A39                     l3282:
  9737                           
  9738                           ;ADC.c: 33:         ADCON0bits.GO = 1;
  9739  1A39  1283               	bcf	3,5	;RP0=0, select bank0
  9740  1A3A  1303               	bcf	3,6	;RP1=0, select bank0
  9741  1A3B  149F               	bsf	31,1	;volatile
  9742  1A3C                     l3284:
  9743  1A3C                     l3286:
  9744                           
  9745                           ;ADC.c: 35:         pot=0;
  9746  1A3C  01F5               	clrf	AADC@pot
  9747  1A3D                     l144:
  9748                           
  9749                           ;ADC.c: 37:     return(pot);
  9750  1A3D  0875               	movf	AADC@pot,w
  9751  1A3E                     l146:
  9752  1A3E  0008               	return
  9753  1A3F                     __end_of_AADC:
  9754                           
  9755                           	psect	text35
  9756  1A79                     __ptext35:	
  9757 ;; *************** function _ISR *****************
  9758 ;; Defined at:
  9759 ;;		line 76 in file "main.c"
  9760 ;; Parameters:    Size  Location     Type
  9761 ;;		None
  9762 ;; Auto vars:     Size  Location     Type
  9763 ;;		None
  9764 ;; Return value:  Size  Location     Type
  9765 ;;                  1    wreg      void 
  9766 ;; Registers used:
  9767 ;;		wreg, status,2, status,0
  9768 ;; Tracked objects:
  9769 ;;		On entry : 0/0
  9770 ;;		On exit  : 0/0
  9771 ;;		Unchanged: 0/0
  9772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9773 ;;      Params:         0       0       0       0       0
  9774 ;;      Locals:         0       0       0       0       0
  9775 ;;      Temps:          3       0       0       0       0
  9776 ;;      Totals:         3       0       0       0       0
  9777 ;;Total ram usage:        3 bytes
  9778 ;; Hardware stack levels used:    1
  9779 ;; This function calls:
  9780 ;;		Nothing
  9781 ;; This function is called by:
  9782 ;;		Interrupt level 1
  9783 ;; This function uses a non-reentrant model
  9784 ;;
  9785                           
  9786                           
  9787                           ;psect for function _ISR
  9788  1A79                     _ISR:
  9789  1A79                     i1l3614:
  9790                           
  9791                           ;main.c: 78:     if (PIR1bits.RCIF == 1) {
  9792  1A79  1283               	bcf	3,5	;RP0=0, select bank0
  9793  1A7A  1303               	bcf	3,6	;RP1=0, select bank0
  9794  1A7B  1E8C               	btfss	12,5	;volatile
  9795  1A7C  2A7E               	goto	u589_21
  9796  1A7D  2A7F               	goto	u589_20
  9797  1A7E                     u589_21:
  9798  1A7E  2A8F               	goto	i1l3624
  9799  1A7F                     u589_20:
  9800  1A7F                     i1l3616:
  9801                           
  9802                           ;main.c: 79:         if (RCSTAbits.OERR == 1) {
  9803  1A7F  1C98               	btfss	24,1	;volatile
  9804  1A80  2A82               	goto	u590_21
  9805  1A81  2A83               	goto	u590_20
  9806  1A82                     u590_21:
  9807  1A82  2A89               	goto	i1l3622
  9808  1A83                     u590_20:
  9809  1A83                     i1l3618:
  9810                           
  9811                           ;main.c: 80:             RCSTAbits.CREN = 0;
  9812  1A83  1218               	bcf	24,4	;volatile
  9813  1A84                     i1l3620:
  9814                           
  9815                           ;main.c: 81:             _delay((unsigned long)((200)*(8000000/4000000.0)));
  9816  1A84  3085               	movlw	133
  9817  1A85  00F0               	movwf	??_ISR
  9818  1A86                     u757_27:
  9819  1A86  0BF0               	decfsz	??_ISR,f
  9820  1A87  2A86               	goto	u757_27
  9821                           
  9822                           ;main.c: 82:         } else {
  9823  1A88  2A8F               	goto	i1l3624
  9824  1A89                     i1l3622:
  9825                           
  9826                           ;main.c: 83:             mensaje = RCREG;
  9827  1A89  081A               	movf	26,w	;volatile
  9828  1A8A  00F0               	movwf	??_ISR
  9829  1A8B  0870               	movf	??_ISR,w
  9830  1A8C  1683               	bsf	3,5	;RP0=1, select bank1
  9831  1A8D  1303               	bcf	3,6	;RP1=0, select bank1
  9832  1A8E  00D6               	movwf	_mensaje^(0+128)
  9833  1A8F                     i1l3624:
  9834                           
  9835                           ;main.c: 89:     if (PIR1bits.ADIF == 1) {
  9836  1A8F  1283               	bcf	3,5	;RP0=0, select bank0
  9837  1A90  1303               	bcf	3,6	;RP1=0, select bank0
  9838  1A91  1F0C               	btfss	12,6	;volatile
  9839  1A92  2A94               	goto	u591_21
  9840  1A93  2A95               	goto	u591_20
  9841  1A94                     u591_21:
  9842  1A94  2AB4               	goto	i1l73
  9843  1A95                     u591_20:
  9844  1A95                     i1l3626:
  9845                           
  9846                           ;main.c: 90:         if (pot == 1) {
  9847  1A95  036C               	decf	_pot,w
  9848  1A96  1D03               	btfss	3,2
  9849  1A97  2A99               	goto	u592_21
  9850  1A98  2A9A               	goto	u592_20
  9851  1A99                     u592_21:
  9852  1A99  2AA4               	goto	i1l3634
  9853  1A9A                     u592_20:
  9854  1A9A                     i1l3628:
  9855                           
  9856                           ;main.c: 91:             S1 = ADRESH;
  9857  1A9A  081E               	movf	30,w	;volatile
  9858  1A9B  00F0               	movwf	??_ISR
  9859  1A9C  0870               	movf	??_ISR,w
  9860  1A9D  1683               	bsf	3,5	;RP0=1, select bank1
  9861  1A9E  1303               	bcf	3,6	;RP1=0, select bank1
  9862  1A9F  00EC               	movwf	_S1^(0+128)
  9863  1AA0                     i1l3630:
  9864                           
  9865                           ;main.c: 92:             Num_Pot = 0;
  9866  1AA0  01ED               	clrf	_Num_Pot^(0+128)
  9867  1AA1                     i1l3632:
  9868                           
  9869                           ;main.c: 93:             banderaADC = 1;
  9870  1AA1  01EE               	clrf	_banderaADC^(0+128)
  9871  1AA2  0AEE               	incf	_banderaADC^(0+128),f
  9872                           
  9873                           ;main.c: 94:         } else if (pot == 0) {
  9874  1AA3  2AB2               	goto	i1l3642
  9875  1AA4                     i1l3634:
  9876  1AA4  086C               	movf	_pot,w
  9877  1AA5  1D03               	btfss	3,2
  9878  1AA6  2AA8               	goto	u593_21
  9879  1AA7  2AA9               	goto	u593_20
  9880  1AA8                     u593_21:
  9881  1AA8  2AB2               	goto	i1l3642
  9882  1AA9                     u593_20:
  9883  1AA9                     i1l3636:
  9884                           
  9885                           ;main.c: 95:             S2 = ADRESH;
  9886  1AA9  081E               	movf	30,w	;volatile
  9887  1AAA  00F0               	movwf	??_ISR
  9888  1AAB  0870               	movf	??_ISR,w
  9889  1AAC  1683               	bsf	3,5	;RP0=1, select bank1
  9890  1AAD  1303               	bcf	3,6	;RP1=0, select bank1
  9891  1AAE  00EB               	movwf	_S2^(0+128)
  9892  1AAF                     i1l3638:
  9893                           
  9894                           ;main.c: 96:             Num_Pot = 1;
  9895  1AAF  01ED               	clrf	_Num_Pot^(0+128)
  9896  1AB0  0AED               	incf	_Num_Pot^(0+128),f
  9897  1AB1  2AA1               	goto	i1l3632
  9898  1AB2                     i1l3642:
  9899                           
  9900                           ;main.c: 99:         PIR1bits.ADIF = 0;
  9901  1AB2  1283               	bcf	3,5	;RP0=0, select bank0
  9902  1AB3  130C               	bcf	12,6	;volatile
  9903  1AB4                     i1l73:
  9904  1AB4  0872               	movf	??_ISR+2,w
  9905  1AB5  008A               	movwf	10
  9906  1AB6  0E71               	swapf	??_ISR+1,w
  9907  1AB7  0083               	movwf	3
  9908  1AB8  0EFE               	swapf	btemp,f
  9909  1AB9  0E7E               	swapf	btemp,w
  9910  1ABA  0009               	retfie
  9911  1ABB                     __end_of_ISR:
  9912  007E                     btemp	set	126	;btemp
  9913  007E                     wtemp0	set	126
  9914                           
  9915                           	psect	intentry
  9916  0004                     __pintentry:	
  9917                           ;incstack = 0
  9918                           ; Regs used in _ISR: [wreg+status,2+status,0]
  9919                           
  9920  0004                     interrupt_function:
  9921  007E                     saved_w	set	btemp
  9922  0004  00FE               	movwf	btemp
  9923  0005  0E03               	swapf	3,w
  9924  0006  00F1               	movwf	??_ISR+1
  9925  0007  080A               	movf	10,w
  9926  0008  00F2               	movwf	??_ISR+2
  9927  0009  160A  158A  2A79   	ljmp	_ISR
  9928                           
  9929                           	psect	config
  9930                           
  9931                           ;Config register CONFIG1 @ 0x2007
  9932                           ;	Oscillator Selection bits
  9933                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  9934                           ;	Watchdog Timer Enable bit
  9935                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9936                           ;	Power-up Timer Enable bit
  9937                           ;	PWRTE = OFF, PWRT disabled
  9938                           ;	RE3/MCLR pin function select bit
  9939                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9940                           ;	Code Protection bit
  9941                           ;	CP = OFF, Program memory code protection is disabled
  9942                           ;	Data Code Protection bit
  9943                           ;	CPD = OFF, Data memory code protection is disabled
  9944                           ;	Brown Out Reset Selection bits
  9945                           ;	BOREN = OFF, BOR disabled
  9946                           ;	Internal External Switchover bit
  9947                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9948                           ;	Fail-Safe Clock Monitor Enabled bit
  9949                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9950                           ;	Low Voltage Programming Enable bit
  9951                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9952                           ;	In-Circuit Debugger Mode bit
  9953                           ;	DEBUG = 0x1, unprogrammed default
  9954  2007                     	org	8199
  9955  2007  20D5               	dw	8405
  9956                           
  9957                           ;Config register CONFIG2 @ 0x2008
  9958                           ;	Brown-out Reset Selection bit
  9959                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9960                           ;	Flash Program Memory Self Write Enable bits
  9961                           ;	WRT = OFF, Write protection off
  9962  2008                     	org	8200
  9963  2008  3FFF               	dw	16383
  9964                           
  9965                           	psect	text2_split_1
  9966  002E                     u7050:
  9967  002E                     l4204:
  9968  002E  1683               	bsf	3,5	;RP0=1, select bank1
  9969  002F  1303               	bcf	3,6	;RP1=0, select bank1
  9970  0030  0848               	movf	(sprintf@fval+3)^(0+128),w
  9971  0031  1283               	bcf	3,5	;RP0=0, select bank0
  9972  0032  1303               	bcf	3,6	;RP1=0, select bank0
  9973  0033  00A3               	movwf	___fleq@ff1+3
  9974  0034  1683               	bsf	3,5	;RP0=1, select bank1
  9975  0035  1303               	bcf	3,6	;RP1=0, select bank1
  9976  0036  0847               	movf	(sprintf@fval+2)^(0+128),w
  9977  0037  1283               	bcf	3,5	;RP0=0, select bank0
  9978  0038  1303               	bcf	3,6	;RP1=0, select bank0
  9979  0039  00A2               	movwf	___fleq@ff1+2
  9980  003A  1683               	bsf	3,5	;RP0=1, select bank1
  9981  003B  1303               	bcf	3,6	;RP1=0, select bank1
  9982  003C  0846               	movf	(sprintf@fval+1)^(0+128),w
  9983  003D  1283               	bcf	3,5	;RP0=0, select bank0
  9984  003E  1303               	bcf	3,6	;RP1=0, select bank0
  9985  003F  00A1               	movwf	___fleq@ff1+1
  9986  0040  1683               	bsf	3,5	;RP0=1, select bank1
  9987  0041  1303               	bcf	3,6	;RP1=0, select bank1
  9988  0042  0845               	movf	sprintf@fval^(0+128),w
  9989  0043  1283               	bcf	3,5	;RP0=0, select bank0
  9990  0044  1303               	bcf	3,6	;RP1=0, select bank0
  9991  0045  00A0               	movwf	___fleq@ff1
  9992  0046  3000               	movlw	0
  9993  0047  00A7               	movwf	___fleq@ff2+3
  9994  0048  3000               	movlw	0
  9995  0049  00A6               	movwf	___fleq@ff2+2
  9996  004A  3000               	movlw	0
  9997  004B  00A5               	movwf	___fleq@ff2+1
  9998  004C  3000               	movlw	0
  9999  004D  00A4               	movwf	___fleq@ff2
 10000  004E  160A  158A  23D0  120A  118A  	fcall	___fleq
 10001  0053  1803               	btfsc	3,0
 10002  0054  2856               	goto	u7061
 10003  0055  2857               	goto	u7060
 10004  0056                     u7061:
 10005  0056  2939               	goto	l4224
 10006  0057                     u7060:
 10007  0057                     l4206:
 10008  0057  1683               	bsf	3,5	;RP0=1, select bank1
 10009  0058  1303               	bcf	3,6	;RP1=0, select bank1
 10010  0059  0848               	movf	(sprintf@fval+3)^(0+128),w
 10011  005A  1283               	bcf	3,5	;RP0=0, select bank0
 10012  005B  1303               	bcf	3,6	;RP1=0, select bank0
 10013  005C  00DA               	movwf	___fltol@f1+3
 10014  005D  1683               	bsf	3,5	;RP0=1, select bank1
 10015  005E  1303               	bcf	3,6	;RP1=0, select bank1
 10016  005F  0847               	movf	(sprintf@fval+2)^(0+128),w
 10017  0060  1283               	bcf	3,5	;RP0=0, select bank0
 10018  0061  1303               	bcf	3,6	;RP1=0, select bank0
 10019  0062  00D9               	movwf	___fltol@f1+2
 10020  0063  1683               	bsf	3,5	;RP0=1, select bank1
 10021  0064  1303               	bcf	3,6	;RP1=0, select bank1
 10022  0065  0846               	movf	(sprintf@fval+1)^(0+128),w
 10023  0066  1283               	bcf	3,5	;RP0=0, select bank0
 10024  0067  1303               	bcf	3,6	;RP1=0, select bank0
 10025  0068  00D8               	movwf	___fltol@f1+1
 10026  0069  1683               	bsf	3,5	;RP0=1, select bank1
 10027  006A  1303               	bcf	3,6	;RP1=0, select bank1
 10028  006B  0845               	movf	sprintf@fval^(0+128),w
 10029  006C  1283               	bcf	3,5	;RP0=0, select bank0
 10030  006D  1303               	bcf	3,6	;RP1=0, select bank0
 10031  006E  00D7               	movwf	___fltol@f1
 10032  006F  120A  118A  2770  120A  118A  	fcall	___fltol
 10033  0074  1283               	bcf	3,5	;RP0=0, select bank0
 10034  0075  1303               	bcf	3,6	;RP1=0, select bank0
 10035  0076  085A               	movf	?___fltol+3,w
 10036  0077  0459               	iorwf	?___fltol+2,w
 10037  0078  0458               	iorwf	?___fltol+1,w
 10038  0079  0457               	iorwf	?___fltol,w
 10039  007A  1D03               	skipz
 10040  007B  287D               	goto	u7071
 10041  007C  287E               	goto	u7070
 10042  007D                     u7071:
 10043  007D  2939               	goto	l4224
 10044  007E                     u7070:
 10045  007E                     l4208:
 10046  007E  1683               	bsf	3,5	;RP0=1, select bank1
 10047  007F  1303               	bcf	3,6	;RP1=0, select bank1
 10048  0080  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10049  0081  3A80               	xorlw	128
 10050  0082  00FF               	movwf	btemp+1
 10051  0083  3080               	movlw	128
 10052  0084  027F               	subwf	btemp+1,w
 10053  0085  1D03               	skipz
 10054  0086  2889               	goto	u7085
 10055  0087  3002               	movlw	2
 10056  0088  0243               	subwf	sprintf@eexp^(0+128),w
 10057  0089                     u7085:
 10058  0089  1C03               	skipc
 10059  008A  288C               	goto	u7081
 10060  008B  288D               	goto	u7080
 10061  008C                     u7081:
 10062  008C  2939               	goto	l4224
 10063  008D                     u7080:
 10064  008D                     l4210:
 10065                           
 10066                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10067  008D  1683               	bsf	3,5	;RP0=1, select bank1
 10068  008E  1303               	bcf	3,6	;RP1=0, select bank1
 10069  008F  083E               	movf	(sprintf@tmpval+3)^(0+128),w
 10070  0090  1283               	bcf	3,5	;RP0=0, select bank0
 10071  0091  1303               	bcf	3,6	;RP1=0, select bank0
 10072  0092  00A3               	movwf	___flge@ff1+3
 10073  0093  1683               	bsf	3,5	;RP0=1, select bank1
 10074  0094  1303               	bcf	3,6	;RP1=0, select bank1
 10075  0095  083D               	movf	(sprintf@tmpval+2)^(0+128),w
 10076  0096  1283               	bcf	3,5	;RP0=0, select bank0
 10077  0097  1303               	bcf	3,6	;RP1=0, select bank0
 10078  0098  00A2               	movwf	___flge@ff1+2
 10079  0099  1683               	bsf	3,5	;RP0=1, select bank1
 10080  009A  1303               	bcf	3,6	;RP1=0, select bank1
 10081  009B  083C               	movf	(sprintf@tmpval+1)^(0+128),w
 10082  009C  1283               	bcf	3,5	;RP0=0, select bank0
 10083  009D  1303               	bcf	3,6	;RP1=0, select bank0
 10084  009E  00A1               	movwf	___flge@ff1+1
 10085  009F  1683               	bsf	3,5	;RP0=1, select bank1
 10086  00A0  1303               	bcf	3,6	;RP1=0, select bank1
 10087  00A1  083B               	movf	sprintf@tmpval^(0+128),w
 10088  00A2  1283               	bcf	3,5	;RP0=0, select bank0
 10089  00A3  1303               	bcf	3,6	;RP1=0, select bank0
 10090  00A4  00A0               	movwf	___flge@ff1
 10091  00A5  3040               	movlw	64
 10092  00A6  00A7               	movwf	___flge@ff2+3
 10093  00A7  3089               	movlw	137
 10094  00A8  00A6               	movwf	___flge@ff2+2
 10095  00A9  3070               	movlw	112
 10096  00AA  00A5               	movwf	___flge@ff2+1
 10097  00AB  305F               	movlw	95
 10098  00AC  00A4               	movwf	___flge@ff2
 10099  00AD  160A  158A  252E  120A  118A  	fcall	___flge
 10100  00B2  1803               	btfsc	3,0
 10101  00B3  28B5               	goto	u7091
 10102  00B4  28B6               	goto	u7090
 10103  00B5                     u7091:
 10104  00B5  28BF               	goto	l4214
 10105  00B6                     u7090:
 10106  00B6                     l4212:
 10107                           
 10108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10109  00B6  30F7               	movlw	247
 10110  00B7  1683               	bsf	3,5	;RP0=1, select bank1
 10111  00B8  1303               	bcf	3,6	;RP1=0, select bank1
 10112  00B9  07C3               	addwf	sprintf@eexp^(0+128),f
 10113  00BA  1803               	skipnc
 10114  00BB  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10115  00BC  30FF               	movlw	255
 10116  00BD  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10117                           
 10118                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10119  00BE  28C7               	goto	l4216
 10120  00BF                     l4214:
 10121                           
 10122                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10123  00BF  30F8               	movlw	248
 10124  00C0  1683               	bsf	3,5	;RP0=1, select bank1
 10125  00C1  1303               	bcf	3,6	;RP1=0, select bank1
 10126  00C2  07C3               	addwf	sprintf@eexp^(0+128),f
 10127  00C3  1803               	skipnc
 10128  00C4  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10129  00C5  30FF               	movlw	255
 10130  00C6  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10131  00C7                     l4216:
 10132                           
 10133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10134  00C7  0843               	movf	sprintf@eexp^(0+128),w
 10135  00C8  120A  158A  249D  120A  118A  	fcall	_scale
 10136  00CD  1283               	bcf	3,5	;RP0=0, select bank0
 10137  00CE  1303               	bcf	3,6	;RP1=0, select bank0
 10138  00CF  0847               	movf	?_scale+3,w
 10139  00D0  1683               	bsf	3,5	;RP0=1, select bank1
 10140  00D1  1303               	bcf	3,6	;RP1=0, select bank1
 10141  00D2  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 10142  00D3  1283               	bcf	3,5	;RP0=0, select bank0
 10143  00D4  1303               	bcf	3,6	;RP1=0, select bank0
 10144  00D5  0846               	movf	?_scale+2,w
 10145  00D6  1683               	bsf	3,5	;RP0=1, select bank1
 10146  00D7  1303               	bcf	3,6	;RP1=0, select bank1
 10147  00D8  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 10148  00D9  1283               	bcf	3,5	;RP0=0, select bank0
 10149  00DA  1303               	bcf	3,6	;RP1=0, select bank0
 10150  00DB  0845               	movf	?_scale+1,w
 10151  00DC  1683               	bsf	3,5	;RP0=1, select bank1
 10152  00DD  1303               	bcf	3,6	;RP1=0, select bank1
 10153  00DE  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 10154  00DF  1283               	bcf	3,5	;RP0=0, select bank0
 10155  00E0  1303               	bcf	3,6	;RP1=0, select bank0
 10156  00E1  0844               	movf	?_scale,w
 10157  00E2  1683               	bsf	3,5	;RP0=1, select bank1
 10158  00E3  1303               	bcf	3,6	;RP1=0, select bank1
 10159  00E4  00BB               	movwf	sprintf@tmpval^(0+128)
 10160  00E5                     l4218:
 10161  00E5  0848               	movf	(sprintf@fval+3)^(0+128),w
 10162  00E6  1283               	bcf	3,5	;RP0=0, select bank0
 10163  00E7  1303               	bcf	3,6	;RP1=0, select bank0
 10164  00E8  00A3               	movwf	__div_to_l_@f1+3
 10165  00E9  1683               	bsf	3,5	;RP0=1, select bank1
 10166  00EA  1303               	bcf	3,6	;RP1=0, select bank1
 10167  00EB  0847               	movf	(sprintf@fval+2)^(0+128),w
 10168  00EC  1283               	bcf	3,5	;RP0=0, select bank0
 10169  00ED  1303               	bcf	3,6	;RP1=0, select bank0
 10170  00EE  00A2               	movwf	__div_to_l_@f1+2
 10171  00EF  1683               	bsf	3,5	;RP0=1, select bank1
 10172  00F0  1303               	bcf	3,6	;RP1=0, select bank1
 10173  00F1  0846               	movf	(sprintf@fval+1)^(0+128),w
 10174  00F2  1283               	bcf	3,5	;RP0=0, select bank0
 10175  00F3  1303               	bcf	3,6	;RP1=0, select bank0
 10176  00F4  00A1               	movwf	__div_to_l_@f1+1
 10177  00F5  1683               	bsf	3,5	;RP0=1, select bank1
 10178  00F6  1303               	bcf	3,6	;RP1=0, select bank1
 10179  00F7  0845               	movf	sprintf@fval^(0+128),w
 10180  00F8  1283               	bcf	3,5	;RP0=0, select bank0
 10181  00F9  1303               	bcf	3,6	;RP1=0, select bank0
 10182  00FA  00A0               	movwf	__div_to_l_@f1
 10183  00FB  1683               	bsf	3,5	;RP0=1, select bank1
 10184  00FC  1303               	bcf	3,6	;RP1=0, select bank1
 10185  00FD  083E               	movf	(sprintf@tmpval+3)^(0+128),w
 10186  00FE  1283               	bcf	3,5	;RP0=0, select bank0
 10187  00FF  1303               	bcf	3,6	;RP1=0, select bank0
 10188  0100  00A7               	movwf	__div_to_l_@f2+3
 10189  0101  1683               	bsf	3,5	;RP0=1, select bank1
 10190  0102  1303               	bcf	3,6	;RP1=0, select bank1
 10191  0103  083D               	movf	(sprintf@tmpval+2)^(0+128),w
 10192  0104  1283               	bcf	3,5	;RP0=0, select bank0
 10193  0105  1303               	bcf	3,6	;RP1=0, select bank0
 10194  0106  00A6               	movwf	__div_to_l_@f2+2
 10195  0107  1683               	bsf	3,5	;RP0=1, select bank1
 10196  0108  1303               	bcf	3,6	;RP1=0, select bank1
 10197  0109  083C               	movf	(sprintf@tmpval+1)^(0+128),w
 10198  010A  1283               	bcf	3,5	;RP0=0, select bank0
 10199  010B  1303               	bcf	3,6	;RP1=0, select bank0
 10200  010C  00A5               	movwf	__div_to_l_@f2+1
 10201  010D  1683               	bsf	3,5	;RP0=1, select bank1
 10202  010E  1303               	bcf	3,6	;RP1=0, select bank1
 10203  010F  083B               	movf	sprintf@tmpval^(0+128),w
 10204  0110  1283               	bcf	3,5	;RP0=0, select bank0
 10205  0111  1303               	bcf	3,6	;RP1=0, select bank0
 10206  0112  00A4               	movwf	__div_to_l_@f2
 10207  0113  120A  118A  26B0  120A  118A  	fcall	__div_to_l_
 10208  0118  1283               	bcf	3,5	;RP0=0, select bank0
 10209  0119  1303               	bcf	3,6	;RP1=0, select bank0
 10210  011A  0823               	movf	?__div_to_l_+3,w
 10211  011B  1683               	bsf	3,5	;RP0=1, select bank1
 10212  011C  1303               	bcf	3,6	;RP1=0, select bank1
 10213  011D  00C2               	movwf	(sprintf@val+3)^(0+128)
 10214  011E  1283               	bcf	3,5	;RP0=0, select bank0
 10215  011F  1303               	bcf	3,6	;RP1=0, select bank0
 10216  0120  0822               	movf	?__div_to_l_+2,w
 10217  0121  1683               	bsf	3,5	;RP0=1, select bank1
 10218  0122  1303               	bcf	3,6	;RP1=0, select bank1
 10219  0123  00C1               	movwf	(sprintf@val+2)^(0+128)
 10220  0124  1283               	bcf	3,5	;RP0=0, select bank0
 10221  0125  1303               	bcf	3,6	;RP1=0, select bank0
 10222  0126  0821               	movf	?__div_to_l_+1,w
 10223  0127  1683               	bsf	3,5	;RP0=1, select bank1
 10224  0128  1303               	bcf	3,6	;RP1=0, select bank1
 10225  0129  00C0               	movwf	(sprintf@val+1)^(0+128)
 10226  012A  1283               	bcf	3,5	;RP0=0, select bank0
 10227  012B  1303               	bcf	3,6	;RP1=0, select bank0
 10228  012C  0820               	movf	?__div_to_l_,w
 10229  012D  1683               	bsf	3,5	;RP0=1, select bank1
 10230  012E  1303               	bcf	3,6	;RP1=0, select bank1
 10231  012F  00BF               	movwf	sprintf@val^(0+128)
 10232  0130                     l4222:
 10233                           
 10234                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10235  0130  3000               	movlw	0
 10236  0131  00C8               	movwf	(sprintf@fval+3)^(0+128)
 10237  0132  3000               	movlw	0
 10238  0133  00C7               	movwf	(sprintf@fval+2)^(0+128)
 10239  0134  3000               	movlw	0
 10240  0135  00C6               	movwf	(sprintf@fval+1)^(0+128)
 10241  0136  3000               	movlw	0
 10242  0137  00C5               	movwf	sprintf@fval^(0+128)
 10243                           
 10244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10245  0138  299F               	goto	l4230
 10246  0139                     l4224:
 10247                           
 10248                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10249  0139  1683               	bsf	3,5	;RP0=1, select bank1
 10250  013A  1303               	bcf	3,6	;RP1=0, select bank1
 10251  013B  0848               	movf	(sprintf@fval+3)^(0+128),w
 10252  013C  1283               	bcf	3,5	;RP0=0, select bank0
 10253  013D  1303               	bcf	3,6	;RP1=0, select bank0
 10254  013E  00DA               	movwf	___fltol@f1+3
 10255  013F  1683               	bsf	3,5	;RP0=1, select bank1
 10256  0140  1303               	bcf	3,6	;RP1=0, select bank1
 10257  0141  0847               	movf	(sprintf@fval+2)^(0+128),w
 10258  0142  1283               	bcf	3,5	;RP0=0, select bank0
 10259  0143  1303               	bcf	3,6	;RP1=0, select bank0
 10260  0144  00D9               	movwf	___fltol@f1+2
 10261  0145  1683               	bsf	3,5	;RP0=1, select bank1
 10262  0146  1303               	bcf	3,6	;RP1=0, select bank1
 10263  0147  0846               	movf	(sprintf@fval+1)^(0+128),w
 10264  0148  1283               	bcf	3,5	;RP0=0, select bank0
 10265  0149  1303               	bcf	3,6	;RP1=0, select bank0
 10266  014A  00D8               	movwf	___fltol@f1+1
 10267  014B  1683               	bsf	3,5	;RP0=1, select bank1
 10268  014C  1303               	bcf	3,6	;RP1=0, select bank1
 10269  014D  0845               	movf	sprintf@fval^(0+128),w
 10270  014E  1283               	bcf	3,5	;RP0=0, select bank0
 10271  014F  1303               	bcf	3,6	;RP1=0, select bank0
 10272  0150  00D7               	movwf	___fltol@f1
 10273  0151  120A  118A  2770  120A  118A  	fcall	___fltol
 10274  0156  1283               	bcf	3,5	;RP0=0, select bank0
 10275  0157  1303               	bcf	3,6	;RP1=0, select bank0
 10276  0158  085A               	movf	?___fltol+3,w
 10277  0159  1683               	bsf	3,5	;RP0=1, select bank1
 10278  015A  1303               	bcf	3,6	;RP1=0, select bank1
 10279  015B  00C2               	movwf	(sprintf@val+3)^(0+128)
 10280  015C  1283               	bcf	3,5	;RP0=0, select bank0
 10281  015D  1303               	bcf	3,6	;RP1=0, select bank0
 10282  015E  0859               	movf	?___fltol+2,w
 10283  015F  1683               	bsf	3,5	;RP0=1, select bank1
 10284  0160  1303               	bcf	3,6	;RP1=0, select bank1
 10285  0161  00C1               	movwf	(sprintf@val+2)^(0+128)
 10286  0162  1283               	bcf	3,5	;RP0=0, select bank0
 10287  0163  1303               	bcf	3,6	;RP1=0, select bank0
 10288  0164  0858               	movf	?___fltol+1,w
 10289  0165  1683               	bsf	3,5	;RP0=1, select bank1
 10290  0166  1303               	bcf	3,6	;RP1=0, select bank1
 10291  0167  00C0               	movwf	(sprintf@val+1)^(0+128)
 10292  0168  1283               	bcf	3,5	;RP0=0, select bank0
 10293  0169  1303               	bcf	3,6	;RP1=0, select bank0
 10294  016A  0857               	movf	?___fltol,w
 10295  016B  1683               	bsf	3,5	;RP0=1, select bank1
 10296  016C  1303               	bcf	3,6	;RP1=0, select bank1
 10297  016D  00BF               	movwf	sprintf@val^(0+128)
 10298  016E                     l4226:
 10299                           
 10300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10301  016E  0842               	movf	(sprintf@val+3)^(0+128),w
 10302  016F  00F6               	movwf	___xxtofl@val+3
 10303  0170  0841               	movf	(sprintf@val+2)^(0+128),w
 10304  0171  00F5               	movwf	___xxtofl@val+2
 10305  0172  0840               	movf	(sprintf@val+1)^(0+128),w
 10306  0173  00F4               	movwf	___xxtofl@val+1
 10307  0174  083F               	movf	sprintf@val^(0+128),w
 10308  0175  00F3               	movwf	___xxtofl@val
 10309  0176  3000               	movlw	0
 10310  0177  160A  158A  25D2  120A  118A  	fcall	___xxtofl
 10311  017C  0876               	movf	?___xxtofl+3,w
 10312  017D  1683               	bsf	3,5	;RP0=1, select bank1
 10313  017E  1303               	bcf	3,6	;RP1=0, select bank1
 10314  017F  00A3               	movwf	(___flsub@a+3)^(0+128)
 10315  0180  0875               	movf	?___xxtofl+2,w
 10316  0181  00A2               	movwf	(___flsub@a+2)^(0+128)
 10317  0182  0874               	movf	?___xxtofl+1,w
 10318  0183  00A1               	movwf	(___flsub@a+1)^(0+128)
 10319  0184  0873               	movf	?___xxtofl,w
 10320  0185  00A0               	movwf	___flsub@a^(0+128)
 10321  0186  0848               	movf	(sprintf@fval+3)^(0+128),w
 10322  0187  00A7               	movwf	(___flsub@b+3)^(0+128)
 10323  0188  0847               	movf	(sprintf@fval+2)^(0+128),w
 10324  0189  00A6               	movwf	(___flsub@b+2)^(0+128)
 10325  018A  0846               	movf	(sprintf@fval+1)^(0+128),w
 10326  018B  00A5               	movwf	(___flsub@b+1)^(0+128)
 10327  018C  0845               	movf	sprintf@fval^(0+128),w
 10328  018D  00A4               	movwf	___flsub@b^(0+128)
 10329  018E  160A  158A  2420  120A  118A  	fcall	___flsub
 10330  0193  1683               	bsf	3,5	;RP0=1, select bank1
 10331  0194  1303               	bcf	3,6	;RP1=0, select bank1
 10332  0195  0823               	movf	(?___flsub+3)^(0+128),w
 10333  0196  00C8               	movwf	(sprintf@fval+3)^(0+128)
 10334  0197  0822               	movf	(?___flsub+2)^(0+128),w
 10335  0198  00C7               	movwf	(sprintf@fval+2)^(0+128)
 10336  0199  0821               	movf	(?___flsub+1)^(0+128),w
 10337  019A  00C6               	movwf	(sprintf@fval+1)^(0+128)
 10338  019B  0820               	movf	?___flsub^(0+128),w
 10339  019C  00C5               	movwf	sprintf@fval^(0+128)
 10340  019D                     l4228:
 10341                           
 10342                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10343  019D  01C3               	clrf	sprintf@eexp^(0+128)
 10344  019E  01C4               	clrf	(sprintf@eexp+1)^(0+128)
 10345  019F                     l4230:
 10346                           
 10347                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10348  019F  01CC               	clrf	sprintf@c^(0+128)
 10349  01A0  0ACC               	incf	sprintf@c^(0+128),f
 10350  01A1                     l4236:
 10351                           
 10352                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10353  01A1  084C               	movf	sprintf@c^(0+128),w
 10354  01A2  00AD               	movwf	??_sprintf^(0+128)
 10355  01A3  3001               	movlw	1
 10356  01A4                     u7105:
 10357  01A4  1003               	clrc
 10358  01A5  0DAD               	rlf	??_sprintf^(0+128),f
 10359  01A6  3EFF               	addlw	-1
 10360  01A7  1D03               	skipz
 10361  01A8  29A4               	goto	u7105
 10362  01A9  1003               	clrc
 10363  01AA  0D2D               	rlf	??_sprintf^(0+128),w
 10364  01AB  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10365  01AC  0084               	movwf	4
 10366  01AD  160A  158A  200A  120A  118A  	fcall	stringdir
 10367  01B2  00AE               	movwf	(??_sprintf+1)^(0+128)
 10368  01B3  160A  158A  200A  120A  118A  	fcall	stringdir
 10369  01B8  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
 10370  01B9  160A  158A  200A  120A  118A  	fcall	stringdir
 10371  01BE  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
 10372  01BF  160A  158A  200A  120A  118A  	fcall	stringdir
 10373  01C4  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
 10374  01C5  0831               	movf	(??_sprintf+4)^(0+128),w
 10375  01C6  0242               	subwf	(sprintf@val+3)^(0+128),w
 10376  01C7  1D03               	skipz
 10377  01C8  29D3               	goto	u7115
 10378  01C9  0830               	movf	(??_sprintf+3)^(0+128),w
 10379  01CA  0241               	subwf	(sprintf@val+2)^(0+128),w
 10380  01CB  1D03               	skipz
 10381  01CC  29D3               	goto	u7115
 10382  01CD  082F               	movf	(??_sprintf+2)^(0+128),w
 10383  01CE  0240               	subwf	(sprintf@val+1)^(0+128),w
 10384  01CF  1D03               	skipz
 10385  01D0  29D3               	goto	u7115
 10386  01D1  082E               	movf	(??_sprintf+1)^(0+128),w
 10387  01D2  023F               	subwf	sprintf@val^(0+128),w
 10388  01D3                     u7115:
 10389  01D3  1803               	skipnc
 10390  01D4  29D6               	goto	u7111
 10391  01D5  29D7               	goto	u7110
 10392  01D6                     u7111:
 10393  01D6  29D8               	goto	l4240
 10394  01D7                     u7110:
 10395  01D7  29E2               	goto	l4242
 10396  01D8                     l4240:
 10397  01D8  3001               	movlw	1
 10398  01D9  00AD               	movwf	??_sprintf^(0+128)
 10399  01DA  082D               	movf	??_sprintf^(0+128),w
 10400  01DB  07CC               	addwf	sprintf@c^(0+128),f
 10401  01DC  300A               	movlw	10
 10402  01DD  064C               	xorwf	sprintf@c^(0+128),w
 10403  01DE  1D03               	btfss	3,2
 10404  01DF  29E1               	goto	u7121
 10405  01E0  29E2               	goto	u7120
 10406  01E1                     u7121:
 10407  01E1  29A1               	goto	l4236
 10408  01E2                     u7120:
 10409  01E2                     l4242:
 10410                           
 10411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10412  01E2  084C               	movf	sprintf@c^(0+128),w
 10413  01E3  074A               	addwf	sprintf@prec^(0+128),w
 10414  01E4  00AD               	movwf	??_sprintf^(0+128)
 10415  01E5  084B               	movf	(sprintf@prec+1)^(0+128),w
 10416  01E6  1803               	skipnc
 10417  01E7  0A4B               	incf	(sprintf@prec+1)^(0+128),w
 10418  01E8  00AE               	movwf	(??_sprintf^(0+128)+1)
 10419  01E9  0843               	movf	sprintf@eexp^(0+128),w
 10420  01EA  072D               	addwf	??_sprintf^(0+128),w
 10421  01EB  00AF               	movwf	(??_sprintf+2)^(0+128)
 10422  01EC  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10423  01ED  1803               	skipnc
 10424  01EE  0A44               	incf	(sprintf@eexp+1)^(0+128),w
 10425  01EF  072E               	addwf	(??_sprintf+1)^(0+128),w
 10426  01F0  00B0               	movwf	(??_sprintf+3)^(0+128)
 10427  01F1  082F               	movf	(??_sprintf+2)^(0+128),w
 10428  01F2  02B9               	subwf	sprintf@width^(0+128),f
 10429  01F3  0830               	movf	(??_sprintf+3)^(0+128),w
 10430  01F4  1C03               	skipc
 10431  01F5  03BA               	decf	(sprintf@width+1)^(0+128),f
 10432  01F6  02BA               	subwf	(sprintf@width+1)^(0+128),f
 10433                           
 10434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10435  01F7  084A               	movf	sprintf@prec^(0+128),w
 10436  01F8  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 10437  01F9  1903               	btfsc	3,2
 10438  01FA  29FC               	goto	u7131
 10439  01FB  29FD               	goto	u7130
 10440  01FC                     u7131:
 10441  01FC  2A03               	goto	l4246
 10442  01FD                     u7130:
 10443  01FD                     l4244:
 10444                           
 10445                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10446  01FD  30FF               	movlw	255
 10447  01FE  07B9               	addwf	sprintf@width^(0+128),f
 10448  01FF  1803               	skipnc
 10449  0200  0ABA               	incf	(sprintf@width+1)^(0+128),f
 10450  0201  30FF               	movlw	255
 10451  0202  07BA               	addwf	(sprintf@width+1)^(0+128),f
 10452  0203                     l4246:
 10453                           
 10454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10455  0203  3003               	movlw	3
 10456  0204  0537               	andwf	sprintf@flag^(0+128),w
 10457  0205  00AD               	movwf	??_sprintf^(0+128)
 10458  0206  3000               	movlw	0
 10459  0207  0538               	andwf	(sprintf@flag+1)^(0+128),w
 10460  0208  00AE               	movwf	(??_sprintf+1)^(0+128)
 10461  0209  082D               	movf	??_sprintf^(0+128),w
 10462  020A  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10463  020B  1903               	btfsc	3,2
 10464  020C  2A0E               	goto	u7141
 10465  020D  2A0F               	goto	u7140
 10466  020E                     u7141:
 10467  020E  2A24               	goto	l4256
 10468  020F                     u7140:
 10469  020F                     l4248:
 10470                           
 10471                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10472  020F  30FF               	movlw	255
 10473  0210  07B9               	addwf	sprintf@width^(0+128),f
 10474  0211  1803               	skipnc
 10475  0212  0ABA               	incf	(sprintf@width+1)^(0+128),f
 10476  0213  30FF               	movlw	255
 10477  0214  07BA               	addwf	(sprintf@width+1)^(0+128),f
 10478  0215  2A24               	goto	l4256
 10479  0216                     l4250:
 10480                           
 10481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10482  0216  3020               	movlw	32
 10483  0217  1683               	bsf	3,5	;RP0=1, select bank1
 10484  0218  1303               	bcf	3,6	;RP1=0, select bank1
 10485  0219  00AD               	movwf	??_sprintf^(0+128)
 10486  021A  0849               	movf	sprintf@sp^(0+128),w
 10487  021B  0084               	movwf	4
 10488  021C  082D               	movf	??_sprintf^(0+128),w
 10489  021D  1383               	bcf	3,7	;select IRP bank0
 10490  021E  0080               	movwf	0
 10491  021F                     l4252:
 10492  021F  3001               	movlw	1
 10493  0220  00AD               	movwf	??_sprintf^(0+128)
 10494  0221  082D               	movf	??_sprintf^(0+128),w
 10495  0222  07C9               	addwf	sprintf@sp^(0+128),f
 10496  0223  2A0F               	goto	l4248
 10497  0224                     l4256:
 10498                           
 10499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10500  0224  083A               	movf	(sprintf@width+1)^(0+128),w
 10501  0225  3A80               	xorlw	128
 10502  0226  00FF               	movwf	btemp+1
 10503  0227  3080               	movlw	128
 10504  0228  027F               	subwf	btemp+1,w
 10505  0229  1D03               	skipz
 10506  022A  2A2D               	goto	u7155
 10507  022B  3001               	movlw	1
 10508  022C  0239               	subwf	sprintf@width^(0+128),w
 10509  022D                     u7155:
 10510  022D  1803               	skipnc
 10511  022E  2A30               	goto	u7151
 10512  022F  2A31               	goto	u7150
 10513  0230                     u7151:
 10514  0230  2A16               	goto	l4250
 10515  0231                     u7150:
 10516  0231                     l4258:
 10517                           
 10518                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10519  0231  3003               	movlw	3
 10520  0232  1683               	bsf	3,5	;RP0=1, select bank1
 10521  0233  1303               	bcf	3,6	;RP1=0, select bank1
 10522  0234  0537               	andwf	sprintf@flag^(0+128),w
 10523  0235  00AD               	movwf	??_sprintf^(0+128)
 10524  0236  3000               	movlw	0
 10525  0237  0538               	andwf	(sprintf@flag+1)^(0+128),w
 10526  0238  00AE               	movwf	(??_sprintf+1)^(0+128)
 10527  0239  082D               	movf	??_sprintf^(0+128),w
 10528  023A  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10529  023B  1903               	btfsc	3,2
 10530  023C  2A3E               	goto	u7161
 10531  023D  2A3F               	goto	u7160
 10532  023E                     u7161:
 10533  023E  2AF1               	goto	l352
 10534  023F                     u7160:
 10535  023F                     l4260:
 10536                           
 10537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10538  023F  302D               	movlw	45
 10539  0240  00AD               	movwf	??_sprintf^(0+128)
 10540  0241  0849               	movf	sprintf@sp^(0+128),w
 10541  0242  0084               	movwf	4
 10542  0243  082D               	movf	??_sprintf^(0+128),w
 10543  0244  1383               	bcf	3,7	;select IRP bank0
 10544  0245  0080               	movwf	0
 10545  0246                     l4262:
 10546  0246  3001               	movlw	1
 10547  0247  00AD               	movwf	??_sprintf^(0+128)
 10548  0248  082D               	movf	??_sprintf^(0+128),w
 10549  0249  07C9               	addwf	sprintf@sp^(0+128),f
 10550  024A  2AF1               	goto	l352
 10551  024B                     l4264:
 10552                           
 10553                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10554  024B  084C               	movf	sprintf@c^(0+128),w
 10555  024C  00AD               	movwf	??_sprintf^(0+128)
 10556  024D  3001               	movlw	1
 10557  024E                     u7175:
 10558  024E  1003               	clrc
 10559  024F  0DAD               	rlf	??_sprintf^(0+128),f
 10560  0250  3EFF               	addlw	-1
 10561  0251  1D03               	skipz
 10562  0252  2A4E               	goto	u7175
 10563  0253  1003               	clrc
 10564  0254  0D2D               	rlf	??_sprintf^(0+128),w
 10565  0255  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10566  0256  0084               	movwf	4
 10567  0257  160A  158A  200A  120A  118A  	fcall	stringdir
 10568  025C  1283               	bcf	3,5	;RP0=0, select bank0
 10569  025D  1303               	bcf	3,6	;RP1=0, select bank0
 10570  025E  00A0               	movwf	___lldiv@divisor
 10571  025F  160A  158A  200A  120A  118A  	fcall	stringdir
 10572  0264  00A1               	movwf	___lldiv@divisor+1
 10573  0265  160A  158A  200A  120A  118A  	fcall	stringdir
 10574  026A  00A2               	movwf	___lldiv@divisor+2
 10575  026B  160A  158A  200A  120A  118A  	fcall	stringdir
 10576  0270  00A3               	movwf	___lldiv@divisor+3
 10577  0271  1683               	bsf	3,5	;RP0=1, select bank1
 10578  0272  1303               	bcf	3,6	;RP1=0, select bank1
 10579  0273  0842               	movf	(sprintf@val+3)^(0+128),w
 10580  0274  1283               	bcf	3,5	;RP0=0, select bank0
 10581  0275  1303               	bcf	3,6	;RP1=0, select bank0
 10582  0276  00A7               	movwf	___lldiv@dividend+3
 10583  0277  1683               	bsf	3,5	;RP0=1, select bank1
 10584  0278  1303               	bcf	3,6	;RP1=0, select bank1
 10585  0279  0841               	movf	(sprintf@val+2)^(0+128),w
 10586  027A  1283               	bcf	3,5	;RP0=0, select bank0
 10587  027B  1303               	bcf	3,6	;RP1=0, select bank0
 10588  027C  00A6               	movwf	___lldiv@dividend+2
 10589  027D  1683               	bsf	3,5	;RP0=1, select bank1
 10590  027E  1303               	bcf	3,6	;RP1=0, select bank1
 10591  027F  0840               	movf	(sprintf@val+1)^(0+128),w
 10592  0280  1283               	bcf	3,5	;RP0=0, select bank0
 10593  0281  1303               	bcf	3,6	;RP1=0, select bank0
 10594  0282  00A5               	movwf	___lldiv@dividend+1
 10595  0283  1683               	bsf	3,5	;RP0=1, select bank1
 10596  0284  1303               	bcf	3,6	;RP1=0, select bank1
 10597  0285  083F               	movf	sprintf@val^(0+128),w
 10598  0286  1283               	bcf	3,5	;RP0=0, select bank0
 10599  0287  1303               	bcf	3,6	;RP1=0, select bank0
 10600  0288  00A4               	movwf	___lldiv@dividend
 10601  0289  160A  158A  24C6  120A  118A  	fcall	___lldiv
 10602  028E  1283               	bcf	3,5	;RP0=0, select bank0
 10603  028F  1303               	bcf	3,6	;RP1=0, select bank0
 10604  0290  0823               	movf	?___lldiv+3,w
 10605  0291  1683               	bsf	3,5	;RP0=1, select bank1
 10606  0292  1303               	bcf	3,6	;RP1=0, select bank1
 10607  0293  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 10608  0294  1283               	bcf	3,5	;RP0=0, select bank0
 10609  0295  1303               	bcf	3,6	;RP1=0, select bank0
 10610  0296  0822               	movf	?___lldiv+2,w
 10611  0297  1683               	bsf	3,5	;RP0=1, select bank1
 10612  0298  1303               	bcf	3,6	;RP1=0, select bank1
 10613  0299  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 10614  029A  1283               	bcf	3,5	;RP0=0, select bank0
 10615  029B  1303               	bcf	3,6	;RP1=0, select bank0
 10616  029C  0821               	movf	?___lldiv+1,w
 10617  029D  1683               	bsf	3,5	;RP0=1, select bank1
 10618  029E  1303               	bcf	3,6	;RP1=0, select bank1
 10619  029F  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 10620  02A0  1283               	bcf	3,5	;RP0=0, select bank0
 10621  02A1  1303               	bcf	3,6	;RP1=0, select bank0
 10622  02A2  0820               	movf	?___lldiv,w
 10623  02A3  1683               	bsf	3,5	;RP0=1, select bank1
 10624  02A4  1303               	bcf	3,6	;RP1=0, select bank1
 10625  02A5  00BB               	movwf	sprintf@tmpval^(0+128)
 10626  02A6                     l4266:
 10627                           
 10628                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10629  02A6  3000               	movlw	0
 10630  02A7  1283               	bcf	3,5	;RP0=0, select bank0
 10631  02A8  1303               	bcf	3,6	;RP1=0, select bank0
 10632  02A9  00AB               	movwf	___llmod@divisor+3
 10633  02AA  3000               	movlw	0
 10634  02AB  00AA               	movwf	___llmod@divisor+2
 10635  02AC  3000               	movlw	0
 10636  02AD  00A9               	movwf	___llmod@divisor+1
 10637  02AE  300A               	movlw	10
 10638  02AF  00A8               	movwf	___llmod@divisor
 10639  02B0  1683               	bsf	3,5	;RP0=1, select bank1
 10640  02B1  1303               	bcf	3,6	;RP1=0, select bank1
 10641  02B2  083E               	movf	(sprintf@tmpval+3)^(0+128),w
 10642  02B3  1283               	bcf	3,5	;RP0=0, select bank0
 10643  02B4  1303               	bcf	3,6	;RP1=0, select bank0
 10644  02B5  00AF               	movwf	___llmod@dividend+3
 10645  02B6  1683               	bsf	3,5	;RP0=1, select bank1
 10646  02B7  1303               	bcf	3,6	;RP1=0, select bank1
 10647  02B8  083D               	movf	(sprintf@tmpval+2)^(0+128),w
 10648  02B9  1283               	bcf	3,5	;RP0=0, select bank0
 10649  02BA  1303               	bcf	3,6	;RP1=0, select bank0
 10650  02BB  00AE               	movwf	___llmod@dividend+2
 10651  02BC  1683               	bsf	3,5	;RP0=1, select bank1
 10652  02BD  1303               	bcf	3,6	;RP1=0, select bank1
 10653  02BE  083C               	movf	(sprintf@tmpval+1)^(0+128),w
 10654  02BF  1283               	bcf	3,5	;RP0=0, select bank0
 10655  02C0  1303               	bcf	3,6	;RP1=0, select bank0
 10656  02C1  00AD               	movwf	___llmod@dividend+1
 10657  02C2  1683               	bsf	3,5	;RP0=1, select bank1
 10658  02C3  1303               	bcf	3,6	;RP1=0, select bank1
 10659  02C4  083B               	movf	sprintf@tmpval^(0+128),w
 10660  02C5  1283               	bcf	3,5	;RP0=0, select bank0
 10661  02C6  1303               	bcf	3,6	;RP1=0, select bank0
 10662  02C7  00AC               	movwf	___llmod@dividend
 10663  02C8  160A  158A  2470  120A  118A  	fcall	___llmod
 10664  02CD  1283               	bcf	3,5	;RP0=0, select bank0
 10665  02CE  1303               	bcf	3,6	;RP1=0, select bank0
 10666  02CF  082B               	movf	?___llmod+3,w
 10667  02D0  1683               	bsf	3,5	;RP0=1, select bank1
 10668  02D1  1303               	bcf	3,6	;RP1=0, select bank1
 10669  02D2  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 10670  02D3  1283               	bcf	3,5	;RP0=0, select bank0
 10671  02D4  1303               	bcf	3,6	;RP1=0, select bank0
 10672  02D5  082A               	movf	?___llmod+2,w
 10673  02D6  1683               	bsf	3,5	;RP0=1, select bank1
 10674  02D7  1303               	bcf	3,6	;RP1=0, select bank1
 10675  02D8  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 10676  02D9  1283               	bcf	3,5	;RP0=0, select bank0
 10677  02DA  1303               	bcf	3,6	;RP1=0, select bank0
 10678  02DB  0829               	movf	?___llmod+1,w
 10679  02DC  1683               	bsf	3,5	;RP0=1, select bank1
 10680  02DD  1303               	bcf	3,6	;RP1=0, select bank1
 10681  02DE  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 10682  02DF  1283               	bcf	3,5	;RP0=0, select bank0
 10683  02E0  1303               	bcf	3,6	;RP1=0, select bank0
 10684  02E1  0828               	movf	?___llmod,w
 10685  02E2  1683               	bsf	3,5	;RP0=1, select bank1
 10686  02E3  1303               	bcf	3,6	;RP1=0, select bank1
 10687  02E4  00BB               	movwf	sprintf@tmpval^(0+128)
 10688  02E5                     l4268:
 10689                           
 10690                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10691  02E5  083B               	movf	sprintf@tmpval^(0+128),w
 10692  02E6  3E30               	addlw	48
 10693  02E7  00AD               	movwf	??_sprintf^(0+128)
 10694  02E8  0849               	movf	sprintf@sp^(0+128),w
 10695  02E9  0084               	movwf	4
 10696  02EA  082D               	movf	??_sprintf^(0+128),w
 10697  02EB  1383               	bcf	3,7	;select IRP bank0
 10698  02EC  0080               	movwf	0
 10699  02ED  3001               	movlw	1
 10700  02EE  00AD               	movwf	??_sprintf^(0+128)
 10701  02EF  082D               	movf	??_sprintf^(0+128),w
 10702  02F0  07C9               	addwf	sprintf@sp^(0+128),f
 10703  02F1                     l352:	
 10704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10705                           
 10706                           
 10707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10708  02F1  3001               	movlw	1
 10709  02F2  02CC               	subwf	sprintf@c^(0+128),f
 10710  02F3  0A4C               	incf	sprintf@c^(0+128),w
 10711  02F4  1D03               	btfss	3,2
 10712  02F5  2AF7               	goto	u7181
 10713  02F6  2AF8               	goto	u7180
 10714  02F7                     u7181:
 10715  02F7  2A4B               	goto	l4264
 10716  02F8                     u7180:
 10717  02F8  2B0C               	goto	l4276
 10718  02F9                     l4270:
 10719                           
 10720                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10721  02F9  3030               	movlw	48
 10722  02FA  1683               	bsf	3,5	;RP0=1, select bank1
 10723  02FB  1303               	bcf	3,6	;RP1=0, select bank1
 10724  02FC  00AD               	movwf	??_sprintf^(0+128)
 10725  02FD  0849               	movf	sprintf@sp^(0+128),w
 10726  02FE  0084               	movwf	4
 10727  02FF  082D               	movf	??_sprintf^(0+128),w
 10728  0300  1383               	bcf	3,7	;select IRP bank0
 10729  0301  0080               	movwf	0
 10730  0302                     l4272:
 10731  0302  3001               	movlw	1
 10732  0303  00AD               	movwf	??_sprintf^(0+128)
 10733  0304  082D               	movf	??_sprintf^(0+128),w
 10734  0305  07C9               	addwf	sprintf@sp^(0+128),f
 10735  0306                     l4274:
 10736                           
 10737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10738  0306  30FF               	movlw	255
 10739  0307  07C3               	addwf	sprintf@eexp^(0+128),f
 10740  0308  1803               	skipnc
 10741  0309  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10742  030A  30FF               	movlw	255
 10743  030B  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10744  030C                     l4276:
 10745                           
 10746                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10747  030C  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10748  030D  3A80               	xorlw	128
 10749  030E  00FF               	movwf	btemp+1
 10750  030F  3080               	movlw	128
 10751  0310  027F               	subwf	btemp+1,w
 10752  0311  1D03               	skipz
 10753  0312  2B15               	goto	u7195
 10754  0313  3001               	movlw	1
 10755  0314  0243               	subwf	sprintf@eexp^(0+128),w
 10756  0315                     u7195:
 10757  0315  1803               	skipnc
 10758  0316  2B18               	goto	u7191
 10759  0317  2B19               	goto	u7190
 10760  0318                     u7191:
 10761  0318  2AF9               	goto	l4270
 10762  0319                     u7190:
 10763  0319                     l4278:
 10764                           
 10765                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10766  0319  1683               	bsf	3,5	;RP0=1, select bank1
 10767  031A  1303               	bcf	3,6	;RP1=0, select bank1
 10768  031B  084B               	movf	(sprintf@prec+1)^(0+128),w
 10769  031C  3A80               	xorlw	128
 10770  031D  00FF               	movwf	btemp+1
 10771  031E  3080               	movlw	128
 10772  031F  027F               	subwf	btemp+1,w
 10773  0320  1D03               	skipz
 10774  0321  2B24               	goto	u7205
 10775  0322  3009               	movlw	9
 10776  0323  024A               	subwf	sprintf@prec^(0+128),w
 10777  0324                     u7205:
 10778  0324  1C03               	skipc
 10779  0325  2B27               	goto	u7201
 10780  0326  2B28               	goto	u7200
 10781  0327                     u7201:
 10782  0327  2B2F               	goto	l4282
 10783  0328                     u7200:
 10784  0328                     l4280:
 10785                           
 10786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10787  0328  3008               	movlw	8
 10788  0329  1683               	bsf	3,5	;RP0=1, select bank1
 10789  032A  1303               	bcf	3,6	;RP1=0, select bank1
 10790  032B  00AD               	movwf	??_sprintf^(0+128)
 10791  032C  082D               	movf	??_sprintf^(0+128),w
 10792  032D  00CC               	movwf	sprintf@c^(0+128)
 10793  032E  2B35               	goto	l359
 10794  032F                     l4282:
 10795                           
 10796                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10797  032F  1683               	bsf	3,5	;RP0=1, select bank1
 10798  0330  1303               	bcf	3,6	;RP1=0, select bank1
 10799  0331  084A               	movf	sprintf@prec^(0+128),w
 10800  0332  00AD               	movwf	??_sprintf^(0+128)
 10801  0333  082D               	movf	??_sprintf^(0+128),w
 10802  0334  00CC               	movwf	sprintf@c^(0+128)
 10803  0335                     l359:
 10804                           
 10805                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10806  0335  084C               	movf	sprintf@c^(0+128),w
 10807  0336  00AD               	movwf	??_sprintf^(0+128)
 10808  0337  01AE               	clrf	(??_sprintf^(0+128)+1)
 10809  0338  082D               	movf	??_sprintf^(0+128),w
 10810  0339  02CA               	subwf	sprintf@prec^(0+128),f
 10811  033A  082E               	movf	(??_sprintf+1)^(0+128),w
 10812  033B  1C03               	skipc
 10813  033C  03CB               	decf	(sprintf@prec+1)^(0+128),f
 10814  033D  02CB               	subwf	(sprintf@prec+1)^(0+128),f
 10815  033E                     l4284:
 10816                           
 10817                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10818  033E  084C               	movf	sprintf@c^(0+128),w
 10819  033F  1903               	btfsc	3,2
 10820  0340  2B42               	goto	u7211
 10821  0341  2B43               	goto	u7210
 10822  0342                     u7211:
 10823  0342  2B4E               	goto	l4290
 10824  0343                     u7210:
 10825  0343                     l4286:
 10826                           
 10827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10828  0343  302E               	movlw	46
 10829  0344  00AD               	movwf	??_sprintf^(0+128)
 10830  0345  0849               	movf	sprintf@sp^(0+128),w
 10831  0346  0084               	movwf	4
 10832  0347  082D               	movf	??_sprintf^(0+128),w
 10833  0348  1383               	bcf	3,7	;select IRP bank0
 10834  0349  0080               	movwf	0
 10835  034A                     l4288:
 10836  034A  3001               	movlw	1
 10837  034B  00AD               	movwf	??_sprintf^(0+128)
 10838  034C  082D               	movf	??_sprintf^(0+128),w
 10839  034D  07C9               	addwf	sprintf@sp^(0+128),f
 10840  034E                     l4290:
 10841                           
 10842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10843  034E  084C               	movf	sprintf@c^(0+128),w
 10844  034F  120A  158A  249D  120A  118A  	fcall	_scale
 10845  0354  1283               	bcf	3,5	;RP0=0, select bank0
 10846  0355  1303               	bcf	3,6	;RP1=0, select bank0
 10847  0356  0847               	movf	?_scale+3,w
 10848  0357  1683               	bsf	3,5	;RP0=1, select bank1
 10849  0358  1303               	bcf	3,6	;RP1=0, select bank1
 10850  0359  00B5               	movwf	(_sprintf$1192+3)^(0+128)
 10851  035A  1283               	bcf	3,5	;RP0=0, select bank0
 10852  035B  1303               	bcf	3,6	;RP1=0, select bank0
 10853  035C  0846               	movf	?_scale+2,w
 10854  035D  1683               	bsf	3,5	;RP0=1, select bank1
 10855  035E  1303               	bcf	3,6	;RP1=0, select bank1
 10856  035F  00B4               	movwf	(_sprintf$1192+2)^(0+128)
 10857  0360  1283               	bcf	3,5	;RP0=0, select bank0
 10858  0361  1303               	bcf	3,6	;RP1=0, select bank0
 10859  0362  0845               	movf	?_scale+1,w
 10860  0363  1683               	bsf	3,5	;RP0=1, select bank1
 10861  0364  1303               	bcf	3,6	;RP1=0, select bank1
 10862  0365  00B3               	movwf	(_sprintf$1192+1)^(0+128)
 10863  0366  1283               	bcf	3,5	;RP0=0, select bank0
 10864  0367  1303               	bcf	3,6	;RP1=0, select bank0
 10865  0368  0844               	movf	?_scale,w
 10866  0369  1683               	bsf	3,5	;RP0=1, select bank1
 10867  036A  1303               	bcf	3,6	;RP1=0, select bank1
 10868  036B  00B2               	movwf	_sprintf$1192^(0+128)
 10869  036C                     l4292:
 10870                           
 10871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10872  036C  0835               	movf	(_sprintf$1192+3)^(0+128),w
 10873  036D  1283               	bcf	3,5	;RP0=0, select bank0
 10874  036E  1303               	bcf	3,6	;RP1=0, select bank0
 10875  036F  00B1               	movwf	___flmul@a+3
 10876  0370  1683               	bsf	3,5	;RP0=1, select bank1
 10877  0371  1303               	bcf	3,6	;RP1=0, select bank1
 10878  0372  0834               	movf	(_sprintf$1192+2)^(0+128),w
 10879  0373  1283               	bcf	3,5	;RP0=0, select bank0
 10880  0374  1303               	bcf	3,6	;RP1=0, select bank0
 10881  0375  00B0               	movwf	___flmul@a+2
 10882  0376  1683               	bsf	3,5	;RP0=1, select bank1
 10883  0377  1303               	bcf	3,6	;RP1=0, select bank1
 10884  0378  0833               	movf	(_sprintf$1192+1)^(0+128),w
 10885  0379  1283               	bcf	3,5	;RP0=0, select bank0
 10886  037A  1303               	bcf	3,6	;RP1=0, select bank0
 10887  037B  00AF               	movwf	___flmul@a+1
 10888  037C  1683               	bsf	3,5	;RP0=1, select bank1
 10889  037D  1303               	bcf	3,6	;RP1=0, select bank1
 10890  037E  0832               	movf	_sprintf$1192^(0+128),w
 10891  037F  1283               	bcf	3,5	;RP0=0, select bank0
 10892  0380  1303               	bcf	3,6	;RP1=0, select bank0
 10893  0381  00AE               	movwf	___flmul@a
 10894  0382  1683               	bsf	3,5	;RP0=1, select bank1
 10895  0383  1303               	bcf	3,6	;RP1=0, select bank1
 10896  0384  0848               	movf	(sprintf@fval+3)^(0+128),w
 10897  0385  1283               	bcf	3,5	;RP0=0, select bank0
 10898  0386  1303               	bcf	3,6	;RP1=0, select bank0
 10899  0387  00AD               	movwf	___flmul@b+3
 10900  0388  1683               	bsf	3,5	;RP0=1, select bank1
 10901  0389  1303               	bcf	3,6	;RP1=0, select bank1
 10902  038A  0847               	movf	(sprintf@fval+2)^(0+128),w
 10903  038B  1283               	bcf	3,5	;RP0=0, select bank0
 10904  038C  1303               	bcf	3,6	;RP1=0, select bank0
 10905  038D  00AC               	movwf	___flmul@b+2
 10906  038E  1683               	bsf	3,5	;RP0=1, select bank1
 10907  038F  1303               	bcf	3,6	;RP1=0, select bank1
 10908  0390  0846               	movf	(sprintf@fval+1)^(0+128),w
 10909  0391  1283               	bcf	3,5	;RP0=0, select bank0
 10910  0392  1303               	bcf	3,6	;RP1=0, select bank0
 10911  0393  00AB               	movwf	___flmul@b+1
 10912  0394  1683               	bsf	3,5	;RP0=1, select bank1
 10913  0395  1303               	bcf	3,6	;RP1=0, select bank1
 10914  0396  0845               	movf	sprintf@fval^(0+128),w
 10915  0397  1283               	bcf	3,5	;RP0=0, select bank0
 10916  0398  1303               	bcf	3,6	;RP1=0, select bank0
 10917  0399  00AA               	movwf	___flmul@b
 10918  039A  120A  158A  213C  120A  118A  	fcall	___flmul
 10919  039F  1283               	bcf	3,5	;RP0=0, select bank0
 10920  03A0  1303               	bcf	3,6	;RP1=0, select bank0
 10921  03A1  082D               	movf	?___flmul+3,w
 10922  03A2  00DA               	movwf	___fltol@f1+3
 10923  03A3  082C               	movf	?___flmul+2,w
 10924  03A4  00D9               	movwf	___fltol@f1+2
 10925  03A5  082B               	movf	?___flmul+1,w
 10926  03A6  00D8               	movwf	___fltol@f1+1
 10927  03A7  082A               	movf	?___flmul,w
 10928  03A8  00D7               	movwf	___fltol@f1
 10929  03A9  120A  118A  2770  120A  118A  	fcall	___fltol
 10930  03AE  1283               	bcf	3,5	;RP0=0, select bank0
 10931  03AF  1303               	bcf	3,6	;RP1=0, select bank0
 10932  03B0  085A               	movf	?___fltol+3,w
 10933  03B1  1683               	bsf	3,5	;RP0=1, select bank1
 10934  03B2  1303               	bcf	3,6	;RP1=0, select bank1
 10935  03B3  00C2               	movwf	(sprintf@val+3)^(0+128)
 10936  03B4  1283               	bcf	3,5	;RP0=0, select bank0
 10937  03B5  1303               	bcf	3,6	;RP1=0, select bank0
 10938  03B6  0859               	movf	?___fltol+2,w
 10939  03B7  1683               	bsf	3,5	;RP0=1, select bank1
 10940  03B8  1303               	bcf	3,6	;RP1=0, select bank1
 10941  03B9  00C1               	movwf	(sprintf@val+2)^(0+128)
 10942  03BA  1283               	bcf	3,5	;RP0=0, select bank0
 10943  03BB  1303               	bcf	3,6	;RP1=0, select bank0
 10944  03BC  0858               	movf	?___fltol+1,w
 10945  03BD  1683               	bsf	3,5	;RP0=1, select bank1
 10946  03BE  1303               	bcf	3,6	;RP1=0, select bank1
 10947  03BF  00C0               	movwf	(sprintf@val+1)^(0+128)
 10948  03C0  1283               	bcf	3,5	;RP0=0, select bank0
 10949  03C1  1303               	bcf	3,6	;RP1=0, select bank0
 10950  03C2  0857               	movf	?___fltol,w
 10951  03C3  1683               	bsf	3,5	;RP0=1, select bank1
 10952  03C4  1303               	bcf	3,6	;RP1=0, select bank1
 10953  03C5  00BF               	movwf	sprintf@val^(0+128)
 10954                           
 10955                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10956  03C6  2CC8               	goto	l4302
 10957  03C7                     l4294:
 10958                           
 10959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10960  03C7  084C               	movf	sprintf@c^(0+128),w
 10961  03C8  00AD               	movwf	??_sprintf^(0+128)
 10962  03C9  3001               	movlw	1
 10963  03CA                     u7225:
 10964  03CA  1003               	clrc
 10965  03CB  0DAD               	rlf	??_sprintf^(0+128),f
 10966  03CC  3EFF               	addlw	-1
 10967  03CD  1D03               	skipz
 10968  03CE  2BCA               	goto	u7225
 10969  03CF  1003               	clrc
 10970  03D0  0D2D               	rlf	??_sprintf^(0+128),w
 10971  03D1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10972  03D2  0084               	movwf	4
 10973  03D3  160A  158A  200A  120A  118A  	fcall	stringdir
 10974  03D8  1283               	bcf	3,5	;RP0=0, select bank0
 10975  03D9  1303               	bcf	3,6	;RP1=0, select bank0
 10976  03DA  00A0               	movwf	___lldiv@divisor
 10977  03DB  160A  158A  200A  120A  118A  	fcall	stringdir
 10978  03E0  00A1               	movwf	___lldiv@divisor+1
 10979  03E1  160A  158A  200A  120A  118A  	fcall	stringdir
 10980  03E6  00A2               	movwf	___lldiv@divisor+2
 10981  03E7  160A  158A  200A  120A  118A  	fcall	stringdir
 10982  03EC  00A3               	movwf	___lldiv@divisor+3
 10983  03ED  1683               	bsf	3,5	;RP0=1, select bank1
 10984  03EE  1303               	bcf	3,6	;RP1=0, select bank1
 10985  03EF  0842               	movf	(sprintf@val+3)^(0+128),w
 10986  03F0  1283               	bcf	3,5	;RP0=0, select bank0
 10987  03F1  1303               	bcf	3,6	;RP1=0, select bank0
 10988  03F2  00A7               	movwf	___lldiv@dividend+3
 10989  03F3  1683               	bsf	3,5	;RP0=1, select bank1
 10990  03F4  1303               	bcf	3,6	;RP1=0, select bank1
 10991  03F5  0841               	movf	(sprintf@val+2)^(0+128),w
 10992  03F6  1283               	bcf	3,5	;RP0=0, select bank0
 10993  03F7  1303               	bcf	3,6	;RP1=0, select bank0
 10994  03F8  00A6               	movwf	___lldiv@dividend+2
 10995  03F9  1683               	bsf	3,5	;RP0=1, select bank1
 10996  03FA  1303               	bcf	3,6	;RP1=0, select bank1
 10997  03FB  0840               	movf	(sprintf@val+1)^(0+128),w
 10998  03FC  1283               	bcf	3,5	;RP0=0, select bank0
 10999  03FD  1303               	bcf	3,6	;RP1=0, select bank0
 11000  03FE  00A5               	movwf	___lldiv@dividend+1
 11001  03FF  1683               	bsf	3,5	;RP0=1, select bank1
 11002  0400  1303               	bcf	3,6	;RP1=0, select bank1
 11003  0401  083F               	movf	sprintf@val^(0+128),w
 11004  0402  1283               	bcf	3,5	;RP0=0, select bank0
 11005  0403  1303               	bcf	3,6	;RP1=0, select bank0
 11006  0404  00A4               	movwf	___lldiv@dividend
 11007  0405  160A  158A  24C6  120A  118A  	fcall	___lldiv
 11008  040A  1283               	bcf	3,5	;RP0=0, select bank0
 11009  040B  1303               	bcf	3,6	;RP1=0, select bank0
 11010  040C  0823               	movf	?___lldiv+3,w
 11011  040D  1683               	bsf	3,5	;RP0=1, select bank1
 11012  040E  1303               	bcf	3,6	;RP1=0, select bank1
 11013  040F  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 11014  0410  1283               	bcf	3,5	;RP0=0, select bank0
 11015  0411  1303               	bcf	3,6	;RP1=0, select bank0
 11016  0412  0822               	movf	?___lldiv+2,w
 11017  0413  1683               	bsf	3,5	;RP0=1, select bank1
 11018  0414  1303               	bcf	3,6	;RP1=0, select bank1
 11019  0415  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 11020  0416  1283               	bcf	3,5	;RP0=0, select bank0
 11021  0417  1303               	bcf	3,6	;RP1=0, select bank0
 11022  0418  0821               	movf	?___lldiv+1,w
 11023  0419  1683               	bsf	3,5	;RP0=1, select bank1
 11024  041A  1303               	bcf	3,6	;RP1=0, select bank1
 11025  041B  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 11026  041C  1283               	bcf	3,5	;RP0=0, select bank0
 11027  041D  1303               	bcf	3,6	;RP1=0, select bank0
 11028  041E  0820               	movf	?___lldiv,w
 11029  041F  1683               	bsf	3,5	;RP0=1, select bank1
 11030  0420  1303               	bcf	3,6	;RP1=0, select bank1
 11031  0421  00BB               	movwf	sprintf@tmpval^(0+128)
 11032  0422                     l4296:
 11033                           
 11034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 11035  0422  3000               	movlw	0
 11036  0423  1283               	bcf	3,5	;RP0=0, select bank0
 11037  0424  1303               	bcf	3,6	;RP1=0, select bank0
 11038  0425  00AB               	movwf	___llmod@divisor+3
 11039  0426  3000               	movlw	0
 11040  0427  00AA               	movwf	___llmod@divisor+2
 11041  0428  3000               	movlw	0
 11042  0429  00A9               	movwf	___llmod@divisor+1
 11043  042A  300A               	movlw	10
 11044  042B  00A8               	movwf	___llmod@divisor
 11045  042C  1683               	bsf	3,5	;RP0=1, select bank1
 11046  042D  1303               	bcf	3,6	;RP1=0, select bank1
 11047  042E  083E               	movf	(sprintf@tmpval+3)^(0+128),w
 11048  042F  1283               	bcf	3,5	;RP0=0, select bank0
 11049  0430  1303               	bcf	3,6	;RP1=0, select bank0
 11050  0431  00AF               	movwf	___llmod@dividend+3
 11051  0432  1683               	bsf	3,5	;RP0=1, select bank1
 11052  0433  1303               	bcf	3,6	;RP1=0, select bank1
 11053  0434  083D               	movf	(sprintf@tmpval+2)^(0+128),w
 11054  0435  1283               	bcf	3,5	;RP0=0, select bank0
 11055  0436  1303               	bcf	3,6	;RP1=0, select bank0
 11056  0437  00AE               	movwf	___llmod@dividend+2
 11057  0438  1683               	bsf	3,5	;RP0=1, select bank1
 11058  0439  1303               	bcf	3,6	;RP1=0, select bank1
 11059  043A  083C               	movf	(sprintf@tmpval+1)^(0+128),w
 11060  043B  1283               	bcf	3,5	;RP0=0, select bank0
 11061  043C  1303               	bcf	3,6	;RP1=0, select bank0
 11062  043D  00AD               	movwf	___llmod@dividend+1
 11063  043E  1683               	bsf	3,5	;RP0=1, select bank1
 11064  043F  1303               	bcf	3,6	;RP1=0, select bank1
 11065  0440  083B               	movf	sprintf@tmpval^(0+128),w
 11066  0441  1283               	bcf	3,5	;RP0=0, select bank0
 11067  0442  1303               	bcf	3,6	;RP1=0, select bank0
 11068  0443  00AC               	movwf	___llmod@dividend
 11069  0444  160A  158A  2470  120A  118A  	fcall	___llmod
 11070  0449  1283               	bcf	3,5	;RP0=0, select bank0
 11071  044A  1303               	bcf	3,6	;RP1=0, select bank0
 11072  044B  082B               	movf	?___llmod+3,w
 11073  044C  1683               	bsf	3,5	;RP0=1, select bank1
 11074  044D  1303               	bcf	3,6	;RP1=0, select bank1
 11075  044E  00BE               	movwf	(sprintf@tmpval+3)^(0+128)
 11076  044F  1283               	bcf	3,5	;RP0=0, select bank0
 11077  0450  1303               	bcf	3,6	;RP1=0, select bank0
 11078  0451  082A               	movf	?___llmod+2,w
 11079  0452  1683               	bsf	3,5	;RP0=1, select bank1
 11080  0453  1303               	bcf	3,6	;RP1=0, select bank1
 11081  0454  00BD               	movwf	(sprintf@tmpval+2)^(0+128)
 11082  0455  1283               	bcf	3,5	;RP0=0, select bank0
 11083  0456  1303               	bcf	3,6	;RP1=0, select bank0
 11084  0457  0829               	movf	?___llmod+1,w
 11085  0458  1683               	bsf	3,5	;RP0=1, select bank1
 11086  0459  1303               	bcf	3,6	;RP1=0, select bank1
 11087  045A  00BC               	movwf	(sprintf@tmpval+1)^(0+128)
 11088  045B  1283               	bcf	3,5	;RP0=0, select bank0
 11089  045C  1303               	bcf	3,6	;RP1=0, select bank0
 11090  045D  0828               	movf	?___llmod,w
 11091  045E  1683               	bsf	3,5	;RP0=1, select bank1
 11092  045F  1303               	bcf	3,6	;RP1=0, select bank1
 11093  0460  00BB               	movwf	sprintf@tmpval^(0+128)
 11094  0461                     l4298:
 11095                           
 11096                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 11097  0461  083B               	movf	sprintf@tmpval^(0+128),w
 11098  0462  3E30               	addlw	48
 11099  0463  00AD               	movwf	??_sprintf^(0+128)
 11100  0464  0849               	movf	sprintf@sp^(0+128),w
 11101  0465  0084               	movwf	4
 11102  0466  082D               	movf	??_sprintf^(0+128),w
 11103  0467  1383               	bcf	3,7	;select IRP bank0
 11104  0468  0080               	movwf	0
 11105  0469  3001               	movlw	1
 11106  046A  00AD               	movwf	??_sprintf^(0+128)
 11107  046B  082D               	movf	??_sprintf^(0+128),w
 11108  046C  07C9               	addwf	sprintf@sp^(0+128),f
 11109  046D                     l4300:
 11110                           
 11111                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 11112  046D  084C               	movf	sprintf@c^(0+128),w
 11113  046E  00AD               	movwf	??_sprintf^(0+128)
 11114  046F  3001               	movlw	1
 11115  0470                     u7235:
 11116  0470  1003               	clrc
 11117  0471  0DAD               	rlf	??_sprintf^(0+128),f
 11118  0472  3EFF               	addlw	-1
 11119  0473  1D03               	skipz
 11120  0474  2C70               	goto	u7235
 11121  0475  1003               	clrc
 11122  0476  0D2D               	rlf	??_sprintf^(0+128),w
 11123  0477  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11124  0478  0084               	movwf	4
 11125  0479  160A  158A  200A  120A  118A  	fcall	stringdir
 11126  047E  1283               	bcf	3,5	;RP0=0, select bank0
 11127  047F  1303               	bcf	3,6	;RP1=0, select bank0
 11128  0480  00A8               	movwf	___llmod@divisor
 11129  0481  160A  158A  200A  120A  118A  	fcall	stringdir
 11130  0486  00A9               	movwf	___llmod@divisor+1
 11131  0487  160A  158A  200A  120A  118A  	fcall	stringdir
 11132  048C  00AA               	movwf	___llmod@divisor+2
 11133  048D  160A  158A  200A  120A  118A  	fcall	stringdir
 11134  0492  00AB               	movwf	___llmod@divisor+3
 11135  0493  1683               	bsf	3,5	;RP0=1, select bank1
 11136  0494  1303               	bcf	3,6	;RP1=0, select bank1
 11137  0495  0842               	movf	(sprintf@val+3)^(0+128),w
 11138  0496  1283               	bcf	3,5	;RP0=0, select bank0
 11139  0497  1303               	bcf	3,6	;RP1=0, select bank0
 11140  0498  00AF               	movwf	___llmod@dividend+3
 11141  0499  1683               	bsf	3,5	;RP0=1, select bank1
 11142  049A  1303               	bcf	3,6	;RP1=0, select bank1
 11143  049B  0841               	movf	(sprintf@val+2)^(0+128),w
 11144  049C  1283               	bcf	3,5	;RP0=0, select bank0
 11145  049D  1303               	bcf	3,6	;RP1=0, select bank0
 11146  049E  00AE               	movwf	___llmod@dividend+2
 11147  049F  1683               	bsf	3,5	;RP0=1, select bank1
 11148  04A0  1303               	bcf	3,6	;RP1=0, select bank1
 11149  04A1  0840               	movf	(sprintf@val+1)^(0+128),w
 11150  04A2  1283               	bcf	3,5	;RP0=0, select bank0
 11151  04A3  1303               	bcf	3,6	;RP1=0, select bank0
 11152  04A4  00AD               	movwf	___llmod@dividend+1
 11153  04A5  1683               	bsf	3,5	;RP0=1, select bank1
 11154  04A6  1303               	bcf	3,6	;RP1=0, select bank1
 11155  04A7  083F               	movf	sprintf@val^(0+128),w
 11156  04A8  1283               	bcf	3,5	;RP0=0, select bank0
 11157  04A9  1303               	bcf	3,6	;RP1=0, select bank0
 11158  04AA  00AC               	movwf	___llmod@dividend
 11159  04AB  160A  158A  2470  120A  118A  	fcall	___llmod
 11160  04B0  1283               	bcf	3,5	;RP0=0, select bank0
 11161  04B1  1303               	bcf	3,6	;RP1=0, select bank0
 11162  04B2  082B               	movf	?___llmod+3,w
 11163  04B3  1683               	bsf	3,5	;RP0=1, select bank1
 11164  04B4  1303               	bcf	3,6	;RP1=0, select bank1
 11165  04B5  00C2               	movwf	(sprintf@val+3)^(0+128)
 11166  04B6  1283               	bcf	3,5	;RP0=0, select bank0
 11167  04B7  1303               	bcf	3,6	;RP1=0, select bank0
 11168  04B8  082A               	movf	?___llmod+2,w
 11169  04B9  1683               	bsf	3,5	;RP0=1, select bank1
 11170  04BA  1303               	bcf	3,6	;RP1=0, select bank1
 11171  04BB  00C1               	movwf	(sprintf@val+2)^(0+128)
 11172  04BC  1283               	bcf	3,5	;RP0=0, select bank0
 11173  04BD  1303               	bcf	3,6	;RP1=0, select bank0
 11174  04BE  0829               	movf	?___llmod+1,w
 11175  04BF  1683               	bsf	3,5	;RP0=1, select bank1
 11176  04C0  1303               	bcf	3,6	;RP1=0, select bank1
 11177  04C1  00C0               	movwf	(sprintf@val+1)^(0+128)
 11178  04C2  1283               	bcf	3,5	;RP0=0, select bank0
 11179  04C3  1303               	bcf	3,6	;RP1=0, select bank0
 11180  04C4  0828               	movf	?___llmod,w
 11181  04C5  1683               	bsf	3,5	;RP0=1, select bank1
 11182  04C6  1303               	bcf	3,6	;RP1=0, select bank1
 11183  04C7  00BF               	movwf	sprintf@val^(0+128)
 11184  04C8                     l4302:
 11185                           
 11186                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11187  04C8  3001               	movlw	1
 11188  04C9  02CC               	subwf	sprintf@c^(0+128),f
 11189  04CA  0A4C               	incf	sprintf@c^(0+128),w
 11190  04CB  1D03               	btfss	3,2
 11191  04CC  2CCE               	goto	u7241
 11192  04CD  2CCF               	goto	u7240
 11193  04CE                     u7241:
 11194  04CE  2BC7               	goto	l4294
 11195  04CF                     u7240:
 11196  04CF  2CE1               	goto	l4310
 11197  04D0                     l4304:
 11198                           
 11199                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11200  04D0  3030               	movlw	48
 11201  04D1  00AD               	movwf	??_sprintf^(0+128)
 11202  04D2  0849               	movf	sprintf@sp^(0+128),w
 11203  04D3  0084               	movwf	4
 11204  04D4  082D               	movf	??_sprintf^(0+128),w
 11205  04D5  1383               	bcf	3,7	;select IRP bank0
 11206  04D6  0080               	movwf	0
 11207  04D7                     l4306:
 11208  04D7  3001               	movlw	1
 11209  04D8  00AD               	movwf	??_sprintf^(0+128)
 11210  04D9  082D               	movf	??_sprintf^(0+128),w
 11211  04DA  07C9               	addwf	sprintf@sp^(0+128),f
 11212  04DB                     l4308:
 11213                           
 11214                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11215  04DB  30FF               	movlw	255
 11216  04DC  07CA               	addwf	sprintf@prec^(0+128),f
 11217  04DD  1803               	skipnc
 11218  04DE  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11219  04DF  30FF               	movlw	255
 11220  04E0  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11221  04E1                     l4310:
 11222                           
 11223                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11224  04E1  084A               	movf	sprintf@prec^(0+128),w
 11225  04E2  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 11226  04E3  1D03               	btfss	3,2
 11227  04E4  2CE6               	goto	u7251
 11228  04E5  2CE7               	goto	u7250
 11229  04E6                     u7251:
 11230  04E6  2CD0               	goto	l4304
 11231  04E7                     u7250:
 11232  04E7  2E97               	goto	l4390
 11233  04E8                     l4312:
 11234                           
 11235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11236  04E8  0836               	movf	sprintf@ap^(0+128),w
 11237  04E9  0084               	movwf	4
 11238  04EA  1383               	bcf	3,7	;select IRP bank0
 11239  04EB  0800               	movf	0,w
 11240  04EC  00AD               	movwf	??_sprintf^(0+128)
 11241  04ED  0A84               	incf	4,f
 11242  04EE  0800               	movf	0,w
 11243  04EF  00AE               	movwf	(??_sprintf^(0+128)+1)
 11244  04F0  082D               	movf	??_sprintf^(0+128),w
 11245  04F1  00BF               	movwf	sprintf@val^(0+128)
 11246  04F2  082E               	movf	(??_sprintf+1)^(0+128),w
 11247  04F3  00C0               	movwf	(sprintf@val+1)^(0+128)
 11248  04F4  3000               	movlw	0
 11249  04F5  1BC0               	btfsc	(sprintf@val+1)^(0+128),7
 11250  04F6  30FF               	movlw	255
 11251  04F7  00C1               	movwf	(sprintf@val+2)^(0+128)
 11252  04F8  00C2               	movwf	(sprintf@val+3)^(0+128)
 11253  04F9                     l4314:
 11254  04F9  3002               	movlw	2
 11255  04FA  00AD               	movwf	??_sprintf^(0+128)
 11256  04FB  082D               	movf	??_sprintf^(0+128),w
 11257  04FC  07B6               	addwf	sprintf@ap^(0+128),f
 11258  04FD                     l4316:
 11259                           
 11260                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 11261  04FD  1FC2               	btfss	(sprintf@val+3)^(0+128),7
 11262  04FE  2D00               	goto	u7261
 11263  04FF  2D01               	goto	u7260
 11264  0500                     u7261:
 11265  0500  2D10               	goto	l4322
 11266  0501                     u7260:
 11267  0501                     l4318:
 11268                           
 11269                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 11270  0501  3003               	movlw	3
 11271  0502  04B7               	iorwf	sprintf@flag^(0+128),f
 11272  0503  3000               	movlw	0
 11273  0504  04B8               	iorwf	(sprintf@flag+1)^(0+128),f
 11274  0505                     l4320:
 11275                           
 11276                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 11277  0505  09BF               	comf	sprintf@val^(0+128),f
 11278  0506  09C0               	comf	(sprintf@val+1)^(0+128),f
 11279  0507  09C1               	comf	(sprintf@val+2)^(0+128),f
 11280  0508  09C2               	comf	(sprintf@val+3)^(0+128),f
 11281  0509  0ABF               	incf	sprintf@val^(0+128),f
 11282  050A  1903               	skipnz
 11283  050B  0AC0               	incf	(sprintf@val+1)^(0+128),f
 11284  050C  1903               	skipnz
 11285  050D  0AC1               	incf	(sprintf@val+2)^(0+128),f
 11286  050E  1903               	skipnz
 11287  050F  0AC2               	incf	(sprintf@val+3)^(0+128),f
 11288  0510                     l4322:
 11289                           
 11290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 11291  0510  084A               	movf	sprintf@prec^(0+128),w
 11292  0511  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 11293  0512  1D03               	btfss	3,2
 11294  0513  2D15               	goto	u7271
 11295  0514  2D16               	goto	u7270
 11296  0515                     u7271:
 11297  0515  2D24               	goto	l4328
 11298  0516                     u7270:
 11299  0516                     l4324:
 11300  0516  0842               	movf	(sprintf@val+3)^(0+128),w
 11301  0517  0441               	iorwf	(sprintf@val+2)^(0+128),w
 11302  0518  0440               	iorwf	(sprintf@val+1)^(0+128),w
 11303  0519  043F               	iorwf	sprintf@val^(0+128),w
 11304  051A  1D03               	skipz
 11305  051B  2D1D               	goto	u7281
 11306  051C  2D1E               	goto	u7280
 11307  051D                     u7281:
 11308  051D  2D24               	goto	l4328
 11309  051E                     u7280:
 11310  051E                     l4326:
 11311                           
 11312                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11313  051E  3001               	movlw	1
 11314  051F  07CA               	addwf	sprintf@prec^(0+128),f
 11315  0520  1803               	skipnc
 11316  0521  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11317  0522  3000               	movlw	0
 11318  0523  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11319  0524                     l4328:
 11320                           
 11321                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11322  0524  01CC               	clrf	sprintf@c^(0+128)
 11323  0525  0ACC               	incf	sprintf@c^(0+128),f
 11324  0526                     l4334:
 11325                           
 11326                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 11327  0526  084C               	movf	sprintf@c^(0+128),w
 11328  0527  00AD               	movwf	??_sprintf^(0+128)
 11329  0528  3001               	movlw	1
 11330  0529                     u7295:
 11331  0529  1003               	clrc
 11332  052A  0DAD               	rlf	??_sprintf^(0+128),f
 11333  052B  3EFF               	addlw	-1
 11334  052C  1D03               	skipz
 11335  052D  2D29               	goto	u7295
 11336  052E  1003               	clrc
 11337  052F  0D2D               	rlf	??_sprintf^(0+128),w
 11338  0530  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11339  0531  0084               	movwf	4
 11340  0532  160A  158A  200A  120A  118A  	fcall	stringdir
 11341  0537  00AE               	movwf	(??_sprintf+1)^(0+128)
 11342  0538  160A  158A  200A  120A  118A  	fcall	stringdir
 11343  053D  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
 11344  053E  160A  158A  200A  120A  118A  	fcall	stringdir
 11345  0543  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
 11346  0544  160A  158A  200A  120A  118A  	fcall	stringdir
 11347  0549  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
 11348  054A  0831               	movf	(??_sprintf+4)^(0+128),w
 11349  054B  0242               	subwf	(sprintf@val+3)^(0+128),w
 11350  054C  1D03               	skipz
 11351  054D  2D58               	goto	u7305
 11352  054E  0830               	movf	(??_sprintf+3)^(0+128),w
 11353  054F  0241               	subwf	(sprintf@val+2)^(0+128),w
 11354  0550  1D03               	skipz
 11355  0551  2D58               	goto	u7305
 11356  0552  082F               	movf	(??_sprintf+2)^(0+128),w
 11357  0553  0240               	subwf	(sprintf@val+1)^(0+128),w
 11358  0554  1D03               	skipz
 11359  0555  2D58               	goto	u7305
 11360  0556  082E               	movf	(??_sprintf+1)^(0+128),w
 11361  0557  023F               	subwf	sprintf@val^(0+128),w
 11362  0558                     u7305:
 11363  0558  1803               	skipnc
 11364  0559  2D5B               	goto	u7301
 11365  055A  2D5C               	goto	u7300
 11366  055B                     u7301:
 11367  055B  2D5D               	goto	l4338
 11368  055C                     u7300:
 11369  055C  2D67               	goto	l4340
 11370  055D                     l4338:
 11371  055D  3001               	movlw	1
 11372  055E  00AD               	movwf	??_sprintf^(0+128)
 11373  055F  082D               	movf	??_sprintf^(0+128),w
 11374  0560  07CC               	addwf	sprintf@c^(0+128),f
 11375  0561  300A               	movlw	10
 11376  0562  064C               	xorwf	sprintf@c^(0+128),w
 11377  0563  1D03               	btfss	3,2
 11378  0564  2D66               	goto	u7311
 11379  0565  2D67               	goto	u7310
 11380  0566                     u7311:
 11381  0566  2D26               	goto	l4334
 11382  0567                     u7310:
 11383  0567                     l4340:
 11384                           
 11385                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11386  0567  084B               	movf	(sprintf@prec+1)^(0+128),w
 11387  0568  3A80               	xorlw	128
 11388  0569  3C80               	sublw	128
 11389  056A  1D03               	skipz
 11390  056B  2D6E               	goto	u7325
 11391  056C  084A               	movf	sprintf@prec^(0+128),w
 11392  056D  024C               	subwf	sprintf@c^(0+128),w
 11393  056E                     u7325:
 11394  056E  1803               	skipnc
 11395  056F  2D71               	goto	u7321
 11396  0570  2D72               	goto	u7320
 11397  0571                     u7321:
 11398  0571  2D79               	goto	l4344
 11399  0572                     u7320:
 11400  0572                     l4342:
 11401                           
 11402                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11403  0572  1683               	bsf	3,5	;RP0=1, select bank1
 11404  0573  1303               	bcf	3,6	;RP1=0, select bank1
 11405  0574  084A               	movf	sprintf@prec^(0+128),w
 11406  0575  00AD               	movwf	??_sprintf^(0+128)
 11407  0576  082D               	movf	??_sprintf^(0+128),w
 11408  0577  00CC               	movwf	sprintf@c^(0+128)
 11409  0578  2D91               	goto	l4348
 11410  0579                     l4344:
 11411  0579  1683               	bsf	3,5	;RP0=1, select bank1
 11412  057A  1303               	bcf	3,6	;RP1=0, select bank1
 11413  057B  084B               	movf	(sprintf@prec+1)^(0+128),w
 11414  057C  3A80               	xorlw	128
 11415  057D  00AD               	movwf	??_sprintf^(0+128)
 11416  057E  3080               	movlw	128
 11417  057F  022D               	subwf	??_sprintf^(0+128),w
 11418  0580  1D03               	skipz
 11419  0581  2D84               	goto	u7335
 11420  0582  084C               	movf	sprintf@c^(0+128),w
 11421  0583  024A               	subwf	sprintf@prec^(0+128),w
 11422  0584                     u7335:
 11423  0584  1803               	skipnc
 11424  0585  2D87               	goto	u7331
 11425  0586  2D88               	goto	u7330
 11426  0587                     u7331:
 11427  0587  2D91               	goto	l4348
 11428  0588                     u7330:
 11429  0588                     l4346:
 11430                           
 11431                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11432  0588  1683               	bsf	3,5	;RP0=1, select bank1
 11433  0589  1303               	bcf	3,6	;RP1=0, select bank1
 11434  058A  084C               	movf	sprintf@c^(0+128),w
 11435  058B  00AD               	movwf	??_sprintf^(0+128)
 11436  058C  01AE               	clrf	(??_sprintf^(0+128)+1)
 11437  058D  082D               	movf	??_sprintf^(0+128),w
 11438  058E  00CA               	movwf	sprintf@prec^(0+128)
 11439  058F  082E               	movf	(??_sprintf+1)^(0+128),w
 11440  0590  00CB               	movwf	(sprintf@prec+1)^(0+128)
 11441  0591                     l4348:
 11442                           
 11443                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11444  0591  1683               	bsf	3,5	;RP0=1, select bank1
 11445  0592  1303               	bcf	3,6	;RP1=0, select bank1
 11446  0593  0839               	movf	sprintf@width^(0+128),w
 11447  0594  043A               	iorwf	(sprintf@width+1)^(0+128),w
 11448  0595  1903               	btfsc	3,2
 11449  0596  2D98               	goto	u7341
 11450  0597  2D99               	goto	u7340
 11451  0598                     u7341:
 11452  0598  2DAB               	goto	l4354
 11453  0599                     u7340:
 11454  0599                     l4350:
 11455  0599  3003               	movlw	3
 11456  059A  0537               	andwf	sprintf@flag^(0+128),w
 11457  059B  00AD               	movwf	??_sprintf^(0+128)
 11458  059C  3000               	movlw	0
 11459  059D  0538               	andwf	(sprintf@flag+1)^(0+128),w
 11460  059E  00AE               	movwf	(??_sprintf+1)^(0+128)
 11461  059F  082D               	movf	??_sprintf^(0+128),w
 11462  05A0  042E               	iorwf	(??_sprintf^(0+128)+1),w
 11463  05A1  1903               	btfsc	3,2
 11464  05A2  2DA4               	goto	u7351
 11465  05A3  2DA5               	goto	u7350
 11466  05A4                     u7351:
 11467  05A4  2DAB               	goto	l4354
 11468  05A5                     u7350:
 11469  05A5                     l4352:
 11470                           
 11471                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11472  05A5  30FF               	movlw	255
 11473  05A6  07B9               	addwf	sprintf@width^(0+128),f
 11474  05A7  1803               	skipnc
 11475  05A8  0ABA               	incf	(sprintf@width+1)^(0+128),f
 11476  05A9  30FF               	movlw	255
 11477  05AA  07BA               	addwf	(sprintf@width+1)^(0+128),f
 11478  05AB                     l4354:
 11479                           
 11480                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11481  05AB  1F38               	btfss	(sprintf@flag+1)^(0+128),6
 11482  05AC  2DAE               	goto	u7361
 11483  05AD  2DAF               	goto	u7360
 11484  05AE                     u7361:
 11485  05AE  2DCA               	goto	l4362
 11486  05AF                     u7360:
 11487  05AF                     l4356:
 11488                           
 11489                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11490  05AF  084B               	movf	(sprintf@prec+1)^(0+128),w
 11491  05B0  3A80               	xorlw	128
 11492  05B1  00AD               	movwf	??_sprintf^(0+128)
 11493  05B2  083A               	movf	(sprintf@width+1)^(0+128),w
 11494  05B3  3A80               	xorlw	128
 11495  05B4  022D               	subwf	??_sprintf^(0+128),w
 11496  05B5  1D03               	skipz
 11497  05B6  2DB9               	goto	u7375
 11498  05B7  0839               	movf	sprintf@width^(0+128),w
 11499  05B8  024A               	subwf	sprintf@prec^(0+128),w
 11500  05B9                     u7375:
 11501  05B9  1803               	skipnc
 11502  05BA  2DBC               	goto	u7371
 11503  05BB  2DBD               	goto	u7370
 11504  05BC                     u7371:
 11505  05BC  2DC6               	goto	l4360
 11506  05BD                     u7370:
 11507  05BD                     l4358:
 11508                           
 11509                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11510  05BD  1683               	bsf	3,5	;RP0=1, select bank1
 11511  05BE  1303               	bcf	3,6	;RP1=0, select bank1
 11512  05BF  084A               	movf	sprintf@prec^(0+128),w
 11513  05C0  02B9               	subwf	sprintf@width^(0+128),f
 11514  05C1  084B               	movf	(sprintf@prec+1)^(0+128),w
 11515  05C2  1C03               	skipc
 11516  05C3  03BA               	decf	(sprintf@width+1)^(0+128),f
 11517  05C4  02BA               	subwf	(sprintf@width+1)^(0+128),f
 11518  05C5  2DCA               	goto	l4362
 11519  05C6                     l4360:
 11520                           
 11521                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11522  05C6  1683               	bsf	3,5	;RP0=1, select bank1
 11523  05C7  1303               	bcf	3,6	;RP1=0, select bank1
 11524  05C8  01B9               	clrf	sprintf@width^(0+128)
 11525  05C9  01BA               	clrf	(sprintf@width+1)^(0+128)
 11526  05CA                     l4362:
 11527                           
 11528                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11529  05CA  083A               	movf	(sprintf@width+1)^(0+128),w
 11530  05CB  3A80               	xorlw	128
 11531  05CC  3C80               	sublw	128
 11532  05CD  1D03               	skipz
 11533  05CE  2DD1               	goto	u7385
 11534  05CF  0839               	movf	sprintf@width^(0+128),w
 11535  05D0  024C               	subwf	sprintf@c^(0+128),w
 11536  05D1                     u7385:
 11537  05D1  1803               	skipnc
 11538  05D2  2DD4               	goto	u7381
 11539  05D3  2DD5               	goto	u7380
 11540  05D4                     u7381:
 11541  05D4  2DE1               	goto	l4366
 11542  05D5                     u7380:
 11543  05D5                     l4364:
 11544                           
 11545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11546  05D5  1683               	bsf	3,5	;RP0=1, select bank1
 11547  05D6  1303               	bcf	3,6	;RP1=0, select bank1
 11548  05D7  084C               	movf	sprintf@c^(0+128),w
 11549  05D8  00AD               	movwf	??_sprintf^(0+128)
 11550  05D9  01AE               	clrf	(??_sprintf^(0+128)+1)
 11551  05DA  082D               	movf	??_sprintf^(0+128),w
 11552  05DB  02B9               	subwf	sprintf@width^(0+128),f
 11553  05DC  082E               	movf	(??_sprintf+1)^(0+128),w
 11554  05DD  1C03               	skipc
 11555  05DE  03BA               	decf	(sprintf@width+1)^(0+128),f
 11556  05DF  02BA               	subwf	(sprintf@width+1)^(0+128),f
 11557  05E0  2DE5               	goto	l4368
 11558  05E1                     l4366:
 11559                           
 11560                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11561  05E1  1683               	bsf	3,5	;RP0=1, select bank1
 11562  05E2  1303               	bcf	3,6	;RP1=0, select bank1
 11563  05E3  01B9               	clrf	sprintf@width^(0+128)
 11564  05E4  01BA               	clrf	(sprintf@width+1)^(0+128)
 11565  05E5                     l4368:
 11566                           
 11567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11568  05E5  0839               	movf	sprintf@width^(0+128),w
 11569  05E6  043A               	iorwf	(sprintf@width+1)^(0+128),w
 11570  05E7  1903               	btfsc	3,2
 11571  05E8  2DEA               	goto	u7391
 11572  05E9  2DEB               	goto	u7390
 11573  05EA                     u7391:
 11574  05EA  2E02               	goto	l4376
 11575  05EB                     u7390:
 11576  05EB                     l4370:
 11577                           
 11578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11579  05EB  3020               	movlw	32
 11580  05EC  00AD               	movwf	??_sprintf^(0+128)
 11581  05ED  0849               	movf	sprintf@sp^(0+128),w
 11582  05EE  0084               	movwf	4
 11583  05EF  082D               	movf	??_sprintf^(0+128),w
 11584  05F0  1383               	bcf	3,7	;select IRP bank0
 11585  05F1  0080               	movwf	0
 11586  05F2                     l4372:
 11587  05F2  3001               	movlw	1
 11588  05F3  00AD               	movwf	??_sprintf^(0+128)
 11589  05F4  082D               	movf	??_sprintf^(0+128),w
 11590  05F5  07C9               	addwf	sprintf@sp^(0+128),f
 11591  05F6                     l4374:
 11592  05F6  30FF               	movlw	255
 11593  05F7  07B9               	addwf	sprintf@width^(0+128),f
 11594  05F8  1803               	skipnc
 11595  05F9  0ABA               	incf	(sprintf@width+1)^(0+128),f
 11596  05FA  30FF               	movlw	255
 11597  05FB  07BA               	addwf	(sprintf@width+1)^(0+128),f
 11598  05FC  0839               	movf	sprintf@width^(0+128),w
 11599  05FD  043A               	iorwf	(sprintf@width+1)^(0+128),w
 11600  05FE  1D03               	btfss	3,2
 11601  05FF  2E01               	goto	u7401
 11602  0600  2E02               	goto	u7400
 11603  0601                     u7401:
 11604  0601  2DEB               	goto	l4370
 11605  0602                     u7400:
 11606  0602                     l4376:
 11607                           
 11608                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11609  0602  3003               	movlw	3
 11610  0603  0537               	andwf	sprintf@flag^(0+128),w
 11611  0604  00AD               	movwf	??_sprintf^(0+128)
 11612  0605  3000               	movlw	0
 11613  0606  0538               	andwf	(sprintf@flag+1)^(0+128),w
 11614  0607  00AE               	movwf	(??_sprintf+1)^(0+128)
 11615  0608  082D               	movf	??_sprintf^(0+128),w
 11616  0609  042E               	iorwf	(??_sprintf^(0+128)+1),w
 11617  060A  1903               	btfsc	3,2
 11618  060B  2E0D               	goto	u7411
 11619  060C  2E0E               	goto	u7410
 11620  060D                     u7411:
 11621  060D  2E89               	goto	l4388
 11622  060E                     u7410:
 11623  060E                     l4378:
 11624                           
 11625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11626  060E  302D               	movlw	45
 11627  060F  00AD               	movwf	??_sprintf^(0+128)
 11628  0610  0849               	movf	sprintf@sp^(0+128),w
 11629  0611  0084               	movwf	4
 11630  0612  082D               	movf	??_sprintf^(0+128),w
 11631  0613  1383               	bcf	3,7	;select IRP bank0
 11632  0614  0080               	movwf	0
 11633  0615                     l4380:
 11634  0615  3001               	movlw	1
 11635  0616  00AD               	movwf	??_sprintf^(0+128)
 11636  0617  082D               	movf	??_sprintf^(0+128),w
 11637  0618  07C9               	addwf	sprintf@sp^(0+128),f
 11638  0619  2E89               	goto	l4388
 11639  061A                     l4382:
 11640                           
 11641                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 11642  061A  3000               	movlw	0
 11643  061B  1283               	bcf	3,5	;RP0=0, select bank0
 11644  061C  1303               	bcf	3,6	;RP1=0, select bank0
 11645  061D  00AB               	movwf	___llmod@divisor+3
 11646  061E  3000               	movlw	0
 11647  061F  00AA               	movwf	___llmod@divisor+2
 11648  0620  3000               	movlw	0
 11649  0621  00A9               	movwf	___llmod@divisor+1
 11650  0622  300A               	movlw	10
 11651  0623  00A8               	movwf	___llmod@divisor
 11652  0624  1683               	bsf	3,5	;RP0=1, select bank1
 11653  0625  1303               	bcf	3,6	;RP1=0, select bank1
 11654  0626  084A               	movf	sprintf@prec^(0+128),w
 11655  0627  00AD               	movwf	??_sprintf^(0+128)
 11656  0628  3001               	movlw	1
 11657  0629                     u7425:
 11658  0629  1003               	clrc
 11659  062A  0DAD               	rlf	??_sprintf^(0+128),f
 11660  062B  3EFF               	addlw	-1
 11661  062C  1D03               	skipz
 11662  062D  2E29               	goto	u7425
 11663  062E  1003               	clrc
 11664  062F  0D2D               	rlf	??_sprintf^(0+128),w
 11665  0630  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11666  0631  0084               	movwf	4
 11667  0632  160A  158A  200A  120A  118A  	fcall	stringdir
 11668  0637  1283               	bcf	3,5	;RP0=0, select bank0
 11669  0638  1303               	bcf	3,6	;RP1=0, select bank0
 11670  0639  00A0               	movwf	___lldiv@divisor
 11671  063A  160A  158A  200A  120A  118A  	fcall	stringdir
 11672  063F  00A1               	movwf	___lldiv@divisor+1
 11673  0640  160A  158A  200A  120A  118A  	fcall	stringdir
 11674  0645  00A2               	movwf	___lldiv@divisor+2
 11675  0646  160A  158A  200A  120A  118A  	fcall	stringdir
 11676  064B  00A3               	movwf	___lldiv@divisor+3
 11677  064C  1683               	bsf	3,5	;RP0=1, select bank1
 11678  064D  1303               	bcf	3,6	;RP1=0, select bank1
 11679  064E  0842               	movf	(sprintf@val+3)^(0+128),w
 11680  064F  1283               	bcf	3,5	;RP0=0, select bank0
 11681  0650  1303               	bcf	3,6	;RP1=0, select bank0
 11682  0651  00A7               	movwf	___lldiv@dividend+3
 11683  0652  1683               	bsf	3,5	;RP0=1, select bank1
 11684  0653  1303               	bcf	3,6	;RP1=0, select bank1
 11685  0654  0841               	movf	(sprintf@val+2)^(0+128),w
 11686  0655  1283               	bcf	3,5	;RP0=0, select bank0
 11687  0656  1303               	bcf	3,6	;RP1=0, select bank0
 11688  0657  00A6               	movwf	___lldiv@dividend+2
 11689  0658  1683               	bsf	3,5	;RP0=1, select bank1
 11690  0659  1303               	bcf	3,6	;RP1=0, select bank1
 11691  065A  0840               	movf	(sprintf@val+1)^(0+128),w
 11692  065B  1283               	bcf	3,5	;RP0=0, select bank0
 11693  065C  1303               	bcf	3,6	;RP1=0, select bank0
 11694  065D  00A5               	movwf	___lldiv@dividend+1
 11695  065E  1683               	bsf	3,5	;RP0=1, select bank1
 11696  065F  1303               	bcf	3,6	;RP1=0, select bank1
 11697  0660  083F               	movf	sprintf@val^(0+128),w
 11698  0661  1283               	bcf	3,5	;RP0=0, select bank0
 11699  0662  1303               	bcf	3,6	;RP1=0, select bank0
 11700  0663  00A4               	movwf	___lldiv@dividend
 11701  0664  160A  158A  24C6  120A  118A  	fcall	___lldiv
 11702  0669  1283               	bcf	3,5	;RP0=0, select bank0
 11703  066A  1303               	bcf	3,6	;RP1=0, select bank0
 11704  066B  0823               	movf	?___lldiv+3,w
 11705  066C  00AF               	movwf	___llmod@dividend+3
 11706  066D  0822               	movf	?___lldiv+2,w
 11707  066E  00AE               	movwf	___llmod@dividend+2
 11708  066F  0821               	movf	?___lldiv+1,w
 11709  0670  00AD               	movwf	___llmod@dividend+1
 11710  0671  0820               	movf	?___lldiv,w
 11711  0672  00AC               	movwf	___llmod@dividend
 11712  0673  160A  158A  2470  120A  118A  	fcall	___llmod
 11713  0678  1283               	bcf	3,5	;RP0=0, select bank0
 11714  0679  1303               	bcf	3,6	;RP1=0, select bank0
 11715  067A  0828               	movf	?___llmod,w
 11716  067B  3E30               	addlw	48
 11717  067C  1683               	bsf	3,5	;RP0=1, select bank1
 11718  067D  1303               	bcf	3,6	;RP1=0, select bank1
 11719  067E  00AE               	movwf	(??_sprintf+1)^(0+128)
 11720  067F  082E               	movf	(??_sprintf+1)^(0+128),w
 11721  0680  00CC               	movwf	sprintf@c^(0+128)
 11722  0681                     l4384:
 11723                           
 11724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 11725  0681  084C               	movf	sprintf@c^(0+128),w
 11726  0682  00AD               	movwf	??_sprintf^(0+128)
 11727  0683  0849               	movf	sprintf@sp^(0+128),w
 11728  0684  0084               	movwf	4
 11729  0685  082D               	movf	??_sprintf^(0+128),w
 11730  0686  1383               	bcf	3,7	;select IRP bank0
 11731  0687  0080               	movwf	0
 11732  0688  2E15               	goto	l4380
 11733  0689                     l4388:
 11734                           
 11735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11736  0689  30FF               	movlw	255
 11737  068A  07CA               	addwf	sprintf@prec^(0+128),f
 11738  068B  1803               	skipnc
 11739  068C  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 11740  068D  30FF               	movlw	255
 11741  068E  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 11742  068F  0A4A               	incf	sprintf@prec^(0+128),w
 11743  0690  1D03               	skipz
 11744  0691  2E96               	goto	u7431
 11745  0692  0A4B               	incf	(sprintf@prec+1)^(0+128),w
 11746  0693  1D03               	btfss	3,2
 11747  0694  2E96               	goto	u7431
 11748  0695  2E97               	goto	u7430
 11749  0696                     u7431:
 11750  0696  2E1A               	goto	l4382
 11751  0697                     u7430:
 11752  0697                     l4390:
 11753                           
 11754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11755  0697  3001               	movlw	1
 11756  0698  07A8               	addwf	sprintf@f^(0+128),f
 11757  0699  30FF               	movlw	-1
 11758  069A  0728               	addwf	sprintf@f^(0+128),w
 11759  069B  0084               	movwf	4
 11760  069C  160A  158A  200A  120A  118A  	fcall	stringdir
 11761  06A1  00AD               	movwf	??_sprintf^(0+128)
 11762  06A2  082D               	movf	??_sprintf^(0+128),w
 11763  06A3  00CC               	movwf	sprintf@c^(0+128)
 11764  06A4  084C               	movf	sprintf@c^(0+128),w
 11765  06A5  1D03               	btfss	3,2
 11766  06A6  2EA8               	goto	u7441
 11767  06A7  2EAB               	goto	u7440
 11768  06A8                     u7441:
 11769  06A8  160A  118A  2D00   	goto	l4110
 11770  06AB                     u7440:
 11771  06AB                     l4392:
 11772                           
 11773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11774  06AB  0849               	movf	sprintf@sp^(0+128),w
 11775  06AC  0084               	movwf	4
 11776  06AD  1383               	bcf	3,7	;select IRP bank0
 11777  06AE  0180               	clrf	0
 11778  06AF                     l389:
 11779  06AF  0008               	return
 11780  06B0                     __end_of_sprintf:

Data Sizes:
    Strings     27
    Constant    144
    Data        2
    BSS         30
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     76      77
    BANK1            80     49      79
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[3]), STR_3(CODE[7]), STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    write@entrada	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK1[20]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> s(BANK1[20]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _sprintf->___llmod
    _sprintf->__div_to_l_
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___awmod
    ___flmul->___lwdiv
    ___llmod->___lldiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   43446
                                             45 BANK1      4     4      0
                               _AADC
                          _INIT_UART
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___flmul
                           ___xxtofl
                               _read
                              _setup
                            _sprintf
                              _write
 ---------------------------------------------------------------------------------
 (1) _write                                                1     1      0     121
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   36303
                                              8 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8239
                                             36 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              0 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             36 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                             10 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              3 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     952
                                              9 COMMON     1     1      0
                                              8 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     781
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             55 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             56 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     620
                                              8 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     130
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     614
                                              7 COMMON     2     1      1
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _INIT_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AADC                                                 4     3      1     190
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AADC
   _INIT_UART
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _read
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
   _write

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     31      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4C      4D       5       96.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A7      12        0.0%
ABS                  0      0      A7       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 09 23:07:54 2021

                        _s 00D7                          pc 0002                         l61 195A  
                       _S1 00EC                         _S2 00EB                         l94 192A  
                       l97 1974               ___awdiv@sign 0026                         fsr 0004  
      ___wmul@multiplicand 0075        __Umul8_16@word_mpld 0022                        l100 194D  
                      l112 1994                        l106 19DF                        l109 1BCF  
                      l118 1B42                        l144 1A3D                        l146 1A3E  
                      l170 1AC3                        l173 1AD0                        l182 1AF6  
                      l167 0815                        l319 15BD                        l352 02F1  
                      l176 1ADE                        l185 1AFC                        l610 093B  
                      l290 126D                        l603 07D6                        l611 08AD  
                      l179 1AEC                        l188 1935                        l429 1D2D  
                      l621 092E                        l606 07EB                        l614 08FE  
                      l359 0335                        l720 12D1                        l393 19A1  
                      l297 0FFF                        l546 087E                        l395 19B9  
                      l563 076F                        l580 1C0A                        l724 1378  
                      l564 06D2                        l581 1C1F                        l741 1443  
                      l733 14F5                        l709 1A78                        l389 06AF  
                      l726 134F                        l574 0760                        l822 0C08  
                      l751 1489                        l567 0730                        l559 1060  
                      l584 1D4C                        l592 1940                        l816 0C9C  
                      l745 1467                        l649 1CC5                        l762 14E9  
                      l754 14C7                        l579 1BEE                        l587 1DB8  
                      l763 14F5                        l835 19F6                        l588 1DD1  
                      l596 07EB                        l860 1DF6                        l828 0C90  
                      l837 1A08                        l766 1C6F                        l862 1E8D  
                      l880 07FD                        l873 1E57                        l874 1E63  
                      l866 1E3B                        l699 1B88                        _ISR 1A79  
                      _adc 007A                        _pot 006C                        fsr0 0004  
                      indf 0000               ___awmod@sign 0079               ___flmul@aexp 003C  
             ___flmul@bexp 003D               ___flmul@sign 0037               ___flmul@temp 0042  
             ___flmul@prod 003E                       ?_ISR 0070               ___fltol@exp1 0061  
                     l3102 1936                       l3110 0770                       l4000 1D6C  
                     l3104 193E                       l3120 079C                       l3112 077D  
                     l3040 19AF                       l3032 1995                       l4002 1D90  
                     l3106 1940                       l3122 07A4                       l3042 19B5  
                     l3034 1997                       l4100 1AFD                       l3220 1955  
                     l4004 1D94                       l2500 126E                       l3140 07CB  
                     l3132 07B2                       l3124 07A6                       l3116 0786  
                     l4020 1C8E                       l4012 1C70                       l3036 199B  
                     l2420 1012                       l3230 0805                       l4102 1B02  
                     l3222 1956                       l4006 1DCE                       l2510 1285  
                     l2502 1275                       l3142 07DB                       l3126 07AA  
                     l3134 07C4                       l3118 079B                       l4022 1CA0  
                     l4014 1C7A                       l3038 19A8                       l2430 1026  
                     l2422 1014                       l2414 1008                       l4110 1500  
                     l3240 0810                       l3232 0808                       l4104 1B1E  
                     l3224 1959                       l3216 194E                       l4008 1DD0  
                     l2600 1381                       l2520 129D                       l2512 128A  
                     l2504 127B                       l3144 07E0                       l4024 1CAE  
                     l4016 1C7D                       l4040 1DFE                       l4032 1DD5  
                     l2360 19F0                       l2440 1045                       l2432 102D  
                     l2424 1018                       l2416 1009                       l4200 17A3  
                     l4120 1526                       l4112 1506                       l3234 080B  
                     l3226 0800                       l4106 1B26                       l3242 192B  
                     l3218 1952                       l2610 13A9                       l2530 12B3  
                     l2522 12A2                       l2514 1292                       l2506 127F  
                     l4026 1CB7                       l4018 1C8A                       l4050 1E20  
                     l4034 1DDA                       l2362 19FF                       l2354 19E3  
                     l2442 104C                       l2434 1031                       l2426 101D  
                     l2418 100D                       l4210 008D                       l4202 17EA  
                     l4122 152A                       l4130 1566                       l4114 150D  
                     l3260 1A0F                       l3236 080C                       l3228 0804  
                     l2620 13C2                       l2612 13B2                       l2604 138A  
                     l2540 12C7                       l2532 12B4                       l2524 12A8  
                     l2516 1293                       l2508 1280                       l4028 1CBD  
                     l4060 1E51                       l4052 1E24                       l4044 1E07  
                     l4036 1DDE                       l2364 1A04                       l2356 19E5  
                     l2700 094D                       l2460 1B57                       l2452 1B43  
                     l2436 1035                       l2428 1023                       l2444 1052  
                     l4300 046D                       l4212 00B6                       l4204 002E  
                     l4140 1591                       l4132 1574                       l4124 153F  
                     l4116 1512                       l4108 14F9                       l3270 1A23  
                     l3262 1A10                       l3238 080D                       l2630 1426  
                     l2614 13B4                       l2606 13A1                       l2622 13C7  
                     l2550 12E3                       l2534 12B9                       l2542 12C9  
                     l2526 12A9                       l2518 1295                       l3166 1C20  
                     l4070 1E84                       l4062 1E5B                       l4054 1E32  
                     l4046 1E0C                       l4038 1DEE                       l2358 19EC  
                     l2710 0962                       l2702 094E                       l2470 1B77  
                     l2462 1B5B                       l2454 1B47                       l2446 1057  
                     l2438 103F                       l4310 04E1                       l4302 04C8  
                     l4230 019F                       l4222 0130                       l4214 00BF  
                     l4206 0057                       l4142 15A4                       l4134 1575  
                     l4126 1552                       l4118 1516                       l3280 1A33  
                     l3272 1A26                       l3264 1A13                       l3256 1A0A  
                     l4080 1B98                       l2640 1459                       l2624 13DD  
                     l2632 1435                       l2616 13B8                       l2608 13A5  
                     l2560 12F7                       l2552 12E7                       l2544 12D7  
                     l2536 12BE                       l2528 12AF                       l3168 1C24  
                     l4072 1E85                       l4064 1E65                       l4056 1E42  
                     l4048 1E19                       l2720 097A                       l2712 096A  
                     l2704 0953                       l2472 1B7E                       l2464 1B5F  
                     l2456 1B4D                       l2480 1A45                       l2448 105C  
                     l4320 0505                       l4304 04D0                       l4240 01D8  
                     l4216 00C7                       l4208 007E                       l4224 0139  
                     l4160 15F7                       l4312 04E8                       l4152 15BF  
                     l4144 15A8                       l4136 1579                       l4128 1556  
                     l3282 1A39                       l3274 1A26                       l3266 1A18  
                     l3258 1A0D                       l4082 1BA7                       l4090 19C2  
                     l2650 1470                       l2642 1462                       l2634 144B  
                     l2626 141B                       l2618 13B9                       l2570 130B  
                     l2562 12FB                       l2554 12EB                       l2546 12DB  
                     l2538 12C6                       l4066 1E7B                       l4058 1E4D  
                     l2810 0C3D                       l2802 0C0D                       l2730 0996  
                     l2722 097F                       l2714 096F                       l2706 0958  
                     l2466 1B70                       l2458 1B50                       l2474 1B84  
                     l2490 1A61                       l2482 1A48                       l4322 0510  
                     l4314 04F9                       l4306 04D7                       l4250 0216  
                     l4242 01E2                       l4226 016E                       l4218 00E5  
                     l4170 164D                       l4162 1605                       l4154 15E1  
                     l4138 157C                       l4146 15B9                       l3610 1AE4  
                     l4410 1EA7                       l4402 1E8E                       l3284 1A3C  
                     l3268 1A1D                       l3276 1A29                       l4084 1BAD  
                     l4076 1B89                       l4092 19C7                       l2660 1480  
                     l2652 1475                       l2644 1466                       l2636 1450  
                     l2628 1421                       l2580 131C                       l2572 130F  
                     l2564 12FF                       l2556 12EF                       l2548 12DF  
                     l4068 1E80                       l2820 0C74                       l2804 0C12  
                     l2812 0C43                       l2740 09B9                       l2732 099B  
                     l2724 0984                       l2716 0975                       l2708 0960  
                     l2468 1B76                       l2492 1A67                       l2484 1A4F  
                     l4340 0567                       l4324 0516                       l4316 04FD  
                     l4308 04DB                       l4260 023F                       l4252 021F  
                     l4244 01FD                       l4236 01A1                       l4228 019D  
                     l4180 169C                       l4172 1651                       l4164 1609  
                     l4156 15EF                       l4148 15BB                       l3612 1AF2  
                     l3604 1ABC                       l4420 1F19                       l4412 1EBA  
                     l4404 1E98                       l3286 1A3C                       l3278 1A2E  
                     l4086 1941                       l4078 1B8F                       l4094 19CE  
                     l2670 14A1                       l2662 1486                       l2646 146B  
                     l2654 1477                       l2590 1362                       l2582 1333  
                     l2574 1313                       l2566 1303                       l2558 12F3  
                     l2830 0C94                       l2822 0C76                       l2814 0C50  
                     l2806 0C20                       l2750 0A47                       l2742 09C6  
                     l2734 09A0                       l2726 098C                       l2718 0979  
                     l2494 1A6E                       l2486 1A53                       l2478 1A3F  
                     l4350 0599                       l4342 0572                       l4334 0526  
                     l4326 051E                       l4318 0501                       l4270 02F9  
                     l4262 0246                       l4246 0203                       l4190 1733  
                     l4182 16BF                       l4174 1678                       l4166 1630  
                     l4158 15F3                       l3606 1AC9                       l4430 1F9A  
                     l4422 1F2D                       l4414 1EC2                       l4406 1E9D  
                     _AADC 1A09                       l4096 19D4                       l4088 19BD  
                     l3800 197B                       l2680 14D9                       l2672 14A5  
                     l2648 146E                       l2656 147B                       l2592 1363  
                     l2584 1353                       l2576 1317                       l2568 1307  
                     l2824 0C84                       l2816 0C5B                       l2808 0C24  
                     l2760 0AA9                       l2752 0A63                       l2744 09E3  
                     l2728 098E                       l2488 1A57                       l2496 1A74  
                     l2920 07F4                       l4360 05C6                       l4352 05A5  
                     l4344 0579                       l4328 0524                       l4280 0328  
                     l4272 0302                       l4264 024B                       l4248 020F  
                     l4256 0224                       l4192 175A                       l4184 16C3  
                     l4176 1683                       l4168 1649                       l3608 1AD6  
                     l4440 1FD1                       l4432 1FA3                       l4424 1F36  
                     l4416 1ECB                       l4408 1EA2                       l4098 19D9  
                     l3810 198F                       l3802 197E                       l2690 14F0  
                     l2682 14DE                       l2674 14C3                       l2666 148E  
                     l2658 147C                       l2594 136C                       l2586 135C  
                     l2578 131B                       l2826 0C88                       l2818 0C6A  
                     l2770 0B39                       l2762 0AC6                       l2754 0A6C  
                     l2746 09FF                       l2738 09A9                       l2922 07FA  
                     l4370 05EB                       l4362 05CA                       l4354 05AB  
                     l4346 0588                       l4338 055D                       l4290 034E  
                     l4282 032F                       l4274 0306                       l4266 02A6  
                     l4258 0231                       l4194 1763                       l4186 16C9  
                     l4178 1689                       l4450 1FF3                       l4442 1FDF  
                     l4434 1FAF                       l4426 1F7C                       l4418 1F11  
                     l3804 1984                       l2692 14F4                       l2684 14DF  
                     l2676 14CC                       l2668 1493                       l2588 135E  
                     l2596 1370                       l3900 0933                       l2828 0C89  
                     l2780 0BCB                       l2772 0B66                       l2764 0ADF  
                     l2756 0A7C                       l2748 0A2B                       l2860 106A  
                     l2924 07FC                       l2916 07ED                       l3812 0CA0  
                     l4380 0615                       l4372 05F2                       l4364 05D5  
                     l4356 05AF                       l4348 0591                       l4292 036C  
                     l4284 033E                       l4276 030C                       l4268 02E5  
                     l4196 178C                       l4188 16E8                       l4444 1FE7  
                     l4436 1FC2                       l4428 1F86                       l3742 1926  
                     l3806 1987                       l2686 14E3                       l2678 14D1  
                     l2598 137C                       l3910 06C6                       l2782 0BD4  
                     l2790 0BE8                       l2774 0B8C                       l2766 0AFC  
                     l2758 0A99                       l2694 093C                       l2918 07EE  
                     l3750 0822                       l3830 0E26                       l3814 0CA4  
                     l4382 061A                       l4374 05F6                       l4366 05E1  
                     l4358 05BD                       l4294 03C7                       l4286 0343  
                     l4278 0319                       l4198 1794                       l4390 0697  
                     l4454 1FF6                       l4446 1FEB                       l4438 1FCB  
                     l3808 198C                       l2688 14E5                       l3920 06EC  
                     l3904 06B0                       l2792 0BEC                       l2784 0BD8  
                     l2776 0BB4                       l2768 0B29                       l2696 0943  
                     l2872 122A                       l3760 0833                       l3752 0824  
                     l3744 0816                       l3824 0D97                       l3816 0CA6  
                     l4384 0681                       l4376 0602                       l4368 05E5  
                     l4296 0422                       l4288 034A                       l4392 06AB  
                     l4448 1FED                       l3930 0720                       l3922 06EE  
                     l3906 06BD                       l2794 0BED                       l2786 0BD9  
                     l2778 0BBD                       l2698 0949                       l2866 1179  
                     l2858 1064                       l3770 084B                       l3762 0839  
                     l3754 0828                       l3746 0819                       l3842 0F44  
                     l3826 0D9E                       l3818 0CAD                       l3834 0E53  
                     l4378 060E                       l4298 0461                       l3932 0721  
                     l3924 06F7                       l3916 06D3                       l3852 087F  
                     l2796 0BF1                       l2788 0BE2                       l2868 117F  
                     l3772 085C                       l3764 083C                       l3780 0870  
                     l3756 082D                       l3748 081D                       l3844 0F4B  
                     l3836 0E5A                       l4388 0689                       l4492 15D3  
                     l3790 195F                       l3950 0755                       l3942 073C  
                     l3934 072A                       l3926 0700                       l3918 06DB  
                     l3870 08C5                       l3854 0892                       l2798 0C05  
                     l3782 0875                       l3774 0862                       l3766 0843  
                     l3758 0831                       l3792 1965                       l3960 1CDB  
                     l3952 0765                       l3936 0734                       l3944 074E  
                     l3928 0712                       l3880 08F0                       l3872 08CE  
                     l3864 08AE                       l3784 087A                       l3776 0863  
                     l3768 0847                       l3848 0FD3                       l3794 1968  
                     l3970 1D15                       l3962 1CE8                       l3890 090A  
                     l3882 08F8                       l3874 08D7                       l3866 08B4  
                     l3858 089B                       l3778 086A                       l3796 1971  
                     l3788 195C                       l3980 1BD0                       l3972 1D16  
                     l3964 1CEC                       l3956 1CC6                       l3884 0902  
                     l3892 091C                       l3876 08E5                       l3868 08C3  
                     l3798 1976                       l3982 1BE6                       l3974 1D1F  
                     l3966 1CF5                       l3958 1CD8                       l3878 08EF  
                     l3984 1C02                       l3992 1D2E                       l3968 1D07  
                     l3976 1D25                       l3986 1C1C                       l3994 1D44  
                     l3898 0923                       l3988 1C1E                       l3996 1D60  
                     l3998 1D68                       STR_1 18A0                       STR_2 18B1  
                     STR_3 18B1                       STR_4 18B8                       u3010 1A04  
                     u3011 1A03                       u3005 19F7                       u3200 1057  
                     u3120 100D                       u4001 0B7E                       u3201 1056  
                     u3121 100C                       u4010 0B9A                       u4002 0B85  
                     u3210 1B4D                       u3130 1018                       u4003 0B8C  
                     u3211 1B4C                       u3131 1017                       u4100 0C0C  
                     u3300 1A57                       u3140 1023                       u4101 0C0B  
                     u4021 0BA6                       u3301 1A56                       u3141 1022  
                     u4110 0C12                       u4022 0BAD                       u3230 1B5F  
                     u3310 1A61                       u4111 0C11                       u4023 0BB4  
                     u4015 0B95                       u3231 1B5E                       u3311 1A60  
                     u3400 12BE                       u5000 07DB                       u4120 0C24  
                     u3160 1035                       u3401 12BD                       u5001 07DA  
                     u4121 0C23                       u3225 1B51                       u3161 1034  
                     u3410 12D7                       u5010 07E0                       u4130 0C33  
                     u4050 0BD8                       u3250 1B70                       u3330 1A74  
                     u4210 117F                       u3170 103F                       u3411 12D6  
                     u5011 07DF                       u4051 0BD7                       u4035 0BB6  
                     u3251 1B6F                       u3331 1A73                       u3315 1A5D  
                     u4211 117E                       u3171 103E                       u3155 1027  
                     u3500 137C                       u3420 12DB                       u3340 127F  
                     u4140 0C50                       u3501 137B                       u3421 12DA  
                     u3341 127E                       u4141 0C4F                       u4045 0BCD  
                     u3245 1B60                       u3325 1A68                       u4205 1138  
                     u3510 1381                       u3430 1333                       u3350 1285  
                     u4150 0C6A                       u4070 0BEC                       u3270 1B84  
                     u3190 1052                       u3511 1380                       u3431 1332  
                     u3351 1284                       u4151 0C69                       u4135 0C2E  
                     u4071 0BEB                       u3271 1B83                       u3255 1B6C  
                     u3191 1051                       u3175 103B                       u3600 1426  
                     u3440 133E                       u3360 128A                       u4160 0C88  
                     u4080 0BF1                       u3280 1A45                       u3601 1425  
                     u3521 1393                       u3441 133C                       u3361 1289  
                     u4161 0C87                       u4145 0C4C                       u4081 0BF0  
                     u4065 0BDB                       u3265 1B78                       u3281 1A44  
                     u4225 119C                       u3185 1046                       u3610 144B  
                     u3530 13A5                       u3522 139A                       u3450 133F  
                     u3370 12A8                       u4090 0C05                       u4170 106A  
                     u6010 084B                       u3611 144A                       u3531 13A4  
                     u3523 13A1                       u3435 132F                       u3371 12A7  
                     u4155 0C66                       u4091 0C04                       u4235 11E9  
                     u4171 1069                       u6011 084A                       u5220 1A18  
                     u3700 148D                       u3620 1450                       u3540 13A9  
                     u3460 1353                       u3380 12B3                       u4420 07F4  
                     u5221 1A17                       u3701 148C                       u3621 144F  
                     u3541 13A8                       u3461 1352                       u3381 12B2  
                     u4245 1235                       u4421 07F3                       u6005 083D  
                     u5230 1A1D                       u3710 1493                       u3550 13B8  
                     u3470 1362                       u3390 12B9                       u4430 07FA  
                     u6030 085C                       u5231 1A1C                       u3711 1492  
                     u3551 13B7                       u3471 1361                       u3391 12B8  
                     u3295 1A49                       u4431 07F9                       u6031 085B  
                     u5240 1A2E                       u3720 14A5                       u3640 1466  
                     u3800 094D                       u6200 0F4B                       u6120 0D9E  
                     u7000 1678                       u5241 1A2D                       u3721 14A4  
                     u3641 1465                       u3801 094C                       u4185 1087  
                     u6025 084C                       u6201 0F4A                       u6121 0D9D  
                     u6105 0D0B                       u7001 1677                       u5250 1A33  
                     u3730 14B4                       u3650 146B                       u3570 13DD  
                     u3490 1378                       u3810 0953                       u6050 0870  
                     u7010 16C3                       u5251 1A32                       u3651 146A  
                     u3635 145B                       u3571 13DC                       u3491 1377  
                     u3811 0952                       u4195 10E3                       u6051 086F  
                     u6035 0858                       u6115 0D56                       u7011 16C2  
                     u3740 14C3                       u3660 1475                       u4700 199B  
                     u6300 0902                       u3820 0958                       u6060 0875  
                     u7020 175A                       u3741 14C2                       u3661 1474  
                     u3581 13F4                       u3573 13D9                       u3565 13BB  
                     u3485 1365                       u4701 199A                       u6301 0901  
                     u3901 0A39                       u3821 0957                       u6061 0874  
                     u6045 0864                       u7021 1759                       u3750 14CC  
                     u3670 147B                       u3590 1408                       u3582 13F5  
                     u6310 0909                       u3902 0A40                       u3830 0979  
                     u6070 0CA4                       u7110 01D7                       u7030 178C  
                     u3751 14CB                       u3735 14AF                       u3671 147A  
                     u3591 1409                       u3583 13FA                       u6311 0908  
                     u3911 0A55                       u3903 0A47                       u3831 0978  
                     u6215 0F5E                       u6135 0DB1                       u6071 0CA3  
                     u7111 01D6                       u7031 178B                       u3760 14D1  
                     u3680 1480                       u3592 140E                       u3584 13FB  
                     u6400 0712                       u6240 0892                       u3912 0A5C  
                     u3840 097F                       u6160 0E5A                       u6080 0CAD  
                     u7200 0328                       u7120 01E2                       u7040 17A3  
                     u3761 14D0                       u3681 147F                       u3593 140F  
                     u3585 1400                       u6401 0711                       u6241 0891  
                     u3913 0A63                       u3841 097E                       u6225 0F9A  
                     u6161 0E59                       u6145 0DED                       u6081 0CAC  
                     u7201 0327                       u7121 01E1                       u7105 01A4  
                     u7041 17A2                       u3770 14DE                       u3690 1486  
                     u3586 1401                       u4730 19B5                       u6330 091B  
                     u6250 08AC                       u3850 0984                       u7210 0343  
                     u7130 01FD                       u7050 002E                       u3771 14DD  
                     u3691 1485                       u4731 19B4                       u4715 19A2  
                     u6331 091A                       u6251 08AB                       u3931 0A8B  
                     u3851 0983                       u6235 0FD6                       u6155 0E29  
                     u7211 0342                       u7131 01FC                       u7115 01D3  
                     u7051 17FA                       u3780 14E3                       u6500 1CD8  
                     u6420 0730                       u6340 0922                       u3932 0A92  
                     u3860 099B                       u7300 055C                       u7140 020F  
                     u7060 0057                       u3781 14E2                       u6501 1CD7  
                     u4725 19A9                       u6421 072F                       u6405 070E  
                     u6341 0921                       u6325 090B                       u3941 0AB8  
                     u3933 0A99                       u3925 0A65                       u3861 099A  
                     u7301 055B                       u7205 0324                       u7141 020E  
                     u7061 0056                       u7045 179F                       u4910 193E  
                     u3790 14F4                       u6430 0734                       u6270 08E5  
                     u2990 19F0                       u3942 0ABF                       u3870 09A0  
                     u7310 0567                       u7150 0231                       u7070 007E  
                     u4911 193D                       u3791 14F3                       u6431 0733  
                     u6415 0723                       u6271 08E4                       u2991 19EF  
                     u3943 0AC6                       u3871 099F                       u6175 0E7C  
                     u6095 0CCF                       u7311 0566                       u7151 0230  
                     u7071 007D                       u7055 17F5                       u6600 1D44  
                     u4920 077D                       u6520 1CEC                       u6440 073B  
                     u6360 0933                       u7400 0602                       u7320 0572  
                     u7240 04CF                       u7160 023F                       u7080 008D  
                     i1l73 1AB4                       u6601 1D43                       u4921 077C  
                     u6521 1CEB                       u6441 073A                       u6361 0932  
                     u6265 08D0                       u3961 0AEE                       u3881 09F1  
                     u6185 0EB8                       u7401 0601                       u7321 0571  
                     u7305 0558                       u7241 04CE                       u7225 03CA  
                     u7161 023E                       u7081 008C                       u6610 1D60  
                     u4930 0794                       u6370 06BD                       u6290 08FE  
                     u3962 0AF5                       u3882 09F8                       u7410 060E  
                     u7330 0588                       u7250 04E7                       u7090 00B6  
                     u6611 1D5F                       u6515 1CDD                       u6371 06BC  
                     u6355 0925                       u6291 08FD                       u6275 08E1  
                     u3971 0B1B                       u3963 0AFC                       u3955 0AC8  
                     u3891 0A0D                       u3883 09FF                       u6195 0F03  
                     u7411 060D                       u7331 0587                       u7251 04E6  
                     u7235 0470                       u7155 022D                       u7091 00B5  
                     u6620 1D6C                       u4940 07AA                       u6540 1D07  
                     u6700 1CA0                       u6460 074D                       u6380 06D1  
                     u3972 0B22                       u3892 0A14                       u7340 0599  
                     u7260 0501                       u7180 02F8                       u6621 1D6B  
                     u4941 07A9                       u6541 1D06                       u6701 1C9F  
                     u6461 074C                       u6381 06D0                       u6285 08F1  
                     u3981 0B48                       u3973 0B29                       u3893 0A1B  
                     u7341 0598                       u7325 056E                       u7261 0500  
                     u7181 02F7                       u7085 0089                       u4950 07B1  
                     u6470 0754                       u3990 0B72                       u3982 0B4F  
                     u7430 0697                       u7350 05A5                       u7270 0516  
                     u7190 0319                       u6631 1D7B                       u4951 07B0  
                     u4935 078F                       u6535 1CEE                       u6471 0753  
                     u6455 073D                       u3983 0B56                       u7431 0696  
                     u7351 05A4                       u7335 0584                       u7271 0515  
                     u7191 0318                       u7175 024E                       u6640 1D94  
                     u6632 1D7C                       u6560 1D25                       u6720 1CBD  
                     u7440 06AB                       u7360 05AF                       u7280 051E  
                     u5840 1AC9                       u6641 1D93                       u6633 1D81  
                     u6561 1D24                       u6545 1D03                       u6721 1CBC  
                     u6705 1C9C                       u7441 06A8                       u7425 0629  
                     u7361 05AE                       u7281 051D                       u5841 1AC8  
                     u6570 1BE6                       u6634 1D82                       u4970 07C3  
                     u6810 1E51                       u6730 1DDA                       u6490 0765  
                     u7370 05BD                       u5850 1AD6                       u7450 1FE7  
                     u7507 1991                       u6571 1BE5                       u6651 1DA3  
                     u6635 1D87                       u4971 07C2                       u6555 1D17  
                     u6715 1CAF                       u6811 1E50                       u6731 1DD9  
                     u6491 0764                       u6395 06F9                       u3995 0B6D  
                     u7371 05BC                       u7195 0315                       u5851 1AD5  
                     u7451 1FE6                       u6900 1B30                       u6580 1C02  
                     u6660 1DCE                       u6652 1DA4                       u6636 1D88  
                     u4980 07CA                       u6820 1E57                       u6740 1DDE  
                     u7380 05D5                       u5860 1AE4                       u7460 1FF3  
                     u7517 1B93                       u6581 1C01                       u6661 1DCD  
                     u6653 1DA9                       u4981 07C9                       u4965 07B3  
                     u6821 1E56                       u6805 1E46                       u6741 1DDD  
                     u6485 0757                       u7381 05D4                       u5861 1AE3  
                     u7461 1FF2                       u6910 1B42                       u6590 1C1C  
                     u6654 1DAA                       u6670 1C7A                       u6830 1E5B  
                     u6750 1DFE                       u7390 05EB                       u5870 1AF2  
                     u7470 1FFC                       u7527 1BA2                       u6911 1B41  
                     u6591 1C1B                       u6655 1DAF                       u6671 1C79  
                     u6831 1E5A                       u6751 1DFD                       u7391 05EA  
                     u7375 05B9                       u7295 0529                       u5871 1AF1  
                     u7471 1FFB                       u6656 1DB0                       u6840 1E70  
                     u6920 1506                       u5880 1AFC                       u7537 1BAF  
                     u6665 1DCA                       u7385 05D1                       u6921 1505  
                     u5881 1AFB                       u6690 1C8E                       u6850 1E80  
                     u6770 1E1F                       u5970 081D                       u6930 1526  
                     u7547 196C                       u6595 1C18                       u4995 07CD  
                     u6691 1C8D                       u6851 1E7F                       u6771 1E1E  
                     u5971 081C                       u6931 1525                       u6860 1E84  
                     u5980 0828                       u6940 1566                       u7557 1A21  
                     u6685 1C7F                       u6861 1E83                       u6845 1E6B  
                     u6765 1E11                       u5981 0827                       u6941 1565  
                     u6870 19C2                       u6790 1E41                       u5990 0839  
                     u6950 1574                       u7567 1A37                       u6871 19C1  
                     u6791 1E40                       u5991 0838                       u6951 1573  
                     u7487 1FD9                       u6880 19D4                       u6960 15B8  
                     u6881 19D3                       u7497 1989                       u6785 1E33  
                     u6961 15B7                       u6890 1B0C                       u6970 15EF  
                     u6971 15EC                       u6980 15F3                       u6981 15F2  
                     u6990 1630                       u6991 162F             AADC@banderaADC 0076  
                     _TRMT 04C1          ?_Lcd_Write_String 0078                       _main 1E8E  
                     _read 192B                       btemp 007E                       start 000C  
       ??_Lcd_Write_String 0020               _sprintf$1192 00B2            __end_of_Lcd_Cmd 1975  
       __size_of_INIT_UART 0016                      ??_ISR 0070                      ?_AADC 0073  
            ___fltol@sign1 0060            __end_of___fladd 14F6                      ?_main 0070  
                    ?_read 0070            __end_of___awdiv 087F            __end_of___flneg 1941  
          __end_of___awmod 1061            __end_of___flmul 0C9D            __end_of___flsub 1C70  
          __end_of___fltol 07EC                      _ANSEL 0188            __end_of___lldiv 1D2E  
          ___awdiv@divisor 0020            __end_of___llmod 1CC6            __end_of___lwdiv 1B89  
          __end_of___lwmod 1A79            ___awdiv@counter 0025                      _RCREG 001A  
                    _SPBRG 0099                      _PORTB 0006                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 0026                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TXREG 0019            __end_of_dpowers 18A0  
                    _scale 0C9D            __end_of_isdigit 07FE                      _setup 194E  
                    _write 1ABB                      pclath 000A                      status 0003  
                    wtemp0 007E            __end_of_sprintf 06B0               __end_of_AADC 1A3F  
         __end_of_Lcd_Init 1BD0           __end_of_Lcd_Port 192B            __initialization 000F  
             __end_of_main 2000               __end_of_read 1936                     ??_AADC 0074  
                   ??_main 00CD                     ??_read 0073         __size_of_Lcd_Clear 000D  
     __size_of__tdiv_to_l_ 00BD          __end_of_INIT_UART 0816                     _ADCON0 001F  
         ___llmod@dividend 002C                     ?_scale 0044                     _ADRESH 001E  
         ___awdiv@dividend 0022                     ?_setup 0070                     ?_write 0070  
                   i1l3620 1A84                     i1l3630 1AA0                     i1l3622 1A89  
                   i1l3614 1A79                     i1l3632 1AA1                     i1l3616 1A7F  
                   i1l3624 1A8F                     i1l3642 1AB2                     i1l3634 1AA4  
                   i1l3626 1A95                     i1l3618 1A83                     i1l3636 1AA9  
                   i1l3628 1A9A                     i1l3638 1AAF                     _INTCON 000B  
                   u590_20 1A83                     u590_21 1A82                     u591_20 1A95  
                   u591_21 1A94                     u592_20 1A9A                     u592_21 1A99  
                ??_Lcd_Cmd 0074                     u593_20 1AA9                     u593_21 1AA8  
                   u589_20 1A7F                     u589_21 1A7E                     u757_27 1A86  
  __size_of_Lcd_Write_Char 0020           __end_of___xxtofl 1E8E           __end_of__powers_ 1844  
                   ___flge 1D2E                     ___fleq 1BD0                  ??___fladd 0060  
                   ___wmul 1995                  ??___awdiv 0024                  ??___flneg 0077  
                ??___awmod 0077                  ??___flmul 0032                  ??___flsub 007A  
                ??___fltol 005B                  ??___lldiv 0073                  ??___llmod 0079  
                ??___lwdiv 0079                  ??___lwmod 0077                     _fround 1061  
         ___awdiv@quotient 0027            ___awmod@divisor 0073            ___awmod@counter 0078  
                ??_isdigit 0073         __size_of__Umul8_16 0029                     saved_w 007E  
                ??_sprintf 00AD            Lcd_Set_Cursor@a 0020            Lcd_Set_Cursor@b 0077  
               ___flge@ff1 0020                 ___flge@ff2 0024               ___xxtofl@arg 0026  
             ___xxtofl@exp 0025               ___xxtofl@val 0073                 ___fleq@ff1 0020  
               ___fleq@ff2 0024    __end_of__initialization 002A                 ___flneg@f1 0073  
        __end_of_Lcd_Clear 194E                 ___fltol@f1 0057             __pcstackCOMMON 0070  
             __pidataBANK1 07FE              __end_of_scale 1000              __end_of_setup 195B  
            __end_of_write 1AFD                    AADC@pot 0075             _Lcd_Set_Cursor 19BA  
               __div_to_l_ 06B0                 _banderaADC 00EE                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070            __div_to_l_@exp1 0079            __div_to_l_@cntr 0078  
                  ??_scale 0048            __div_to_l_@quot 0074               sprintf@width 00B9  
                  ??_setup 0073                    ??_write 0073                 __pbssBANK0 006C  
               __pbssBANK1 00D1              __div_to_l_@f1 0020              __div_to_l_@f2 0024  
        __end_of__Umul8_16 1A09                 __pmaintext 1E8E                    ?___flge 0020  
                  ?___fleq 0020                    ?___wmul 0073                 __pintentry 0004  
                  ?_fround 0044  __size_of_Lcd_Write_String 0046     __end_of_Lcd_Set_Cursor 19E0  
                ?___xxtofl 0073                 ??_Lcd_Init 0077                 ??_Lcd_Port 0073  
               __stringtab 1800             _Lcd_Write_Char 1975                    _Lcd_Cmd 195B  
        __end_of__npowers_ 1878                 _scale$1191 0052                    _Num_Pot 00ED  
          __size_of___flge 00A4            __size_of___fleq 0050                    ___fladd 126E  
                  ___awdiv 0816                    ___flneg 1936                    ___awmod 1008  
                  ___flmul 093C                    ___flsub 1C20                    ___fltol 0770  
                  ___lldiv 1CC6            __size_of___wmul 0025                    ___llmod 1C70  
                  ___lwdiv 1B43                    ___lwmod 1A3F            __size_of_fround 020D  
          ?_Lcd_Set_Cursor 0077                    __ptext1 1ABB                    __ptext2 14F6  
                  __ptext3 0C9D                    __ptext4 1008                    __ptext5 0816  
                  __ptext6 07EC                    __ptext7 1061                    __ptext8 1A3F  
                  __ptext9 1B43               __size_of_ISR 0042                ?__div_to_l_ 0020  
                  _dpowers 1878                    _isdigit 07EC                    _mensaje 00D6  
               ??___xxtofl 0020           ___awmod@dividend 0075                    _sprintf 14F6  
                  clrloop0 1001     __end_of_Lcd_Write_Char 1995       end_of_initialization 002A  
                _INIT_UART 0800            ___lldiv@divisor 0020               write@entrada 0073  
          ___lldiv@counter 0078                  _RCSTAbits 0018                    psplit$0 F0033  
                Lcd_Port@a 0073             __tdiv_to_l_@f1 0020             __tdiv_to_l_@f2 0024  
            ??__tdiv_to_l_ 0073                  _PORTDbits 0008                ___fladd@grs 006B  
              AADC@Num_Pot 0073              ___xxtofl@sign 0024            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0078          Lcd_Write_String@i 0023                 ?_INIT_UART 0070  
              ___flmul@grs 0038                  _TXSTAbits 0098        __size_of__div_to_l_ 00C0  
                _Lcd_Clear 1941             __end_of___flge 1DD2             __end_of___fleq 1C20  
           __end_of___wmul 19BA           _Lcd_Write_String 1AFD                _BAUDCTLbits 0187  
        pnum$text2_split_1 0033             __end_of_fround 126E        start_initialization 000F  
              __end_of_ISR 1ABB        __end_of__tdiv_to_l_ 093C          __size_of_Lcd_Init 0047  
        __size_of_Lcd_Port 0006            ___llmod@divisor 0028            ___llmod@counter 0030  
               ?_Lcd_Clear 0070                   ??___flge 0073                   ??___fleq 0073  
                 ??___wmul 0077                  __Umul8_16 19E0                __pdataBANK1 00ED  
          Lcd_Write_Char@a 0077            Lcd_Write_Char@y 0076                   ??_fround 0048  
            sprintf@tmpval 00BB                  ___fladd@a 005C                  ___fladd@b 0058  
               fround@prec 0057                  ___flmul@a 002E                  ___flmul@b 002A  
              __pbssCOMMON 007A                  ___flsub@a 00A0                  ___flsub@b 00A4  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00BC               _isdigit$1006 0073                ??_INIT_UART 0073  
                 ?_Lcd_Cmd 0070                sprintf@flag 00B7                sprintf@eexp 00C3  
              sprintf@fval 00C5                sprintf@prec 00CA           ___lwdiv@dividend 0022  
         ??_Lcd_Set_Cursor 0078                   ?___fladd 0058                   ?___awdiv 0020  
                 ?___flneg 0073                   ?___awmod 0073                   ?___flmul 002A  
                 ?___flsub 00A0                   ?___fltol 0057                   ?___lldiv 0020  
                 ?___llmod 0028                  __npowers_ 1844                 ?__Umul8_16 0073  
                 ?___lwdiv 0020                   ?___lwmod 0073                  __pstrings 1800  
              __tdiv_to_l_ 087F               ??__div_to_l_ 0073                  _conversor 00D1  
                 ?_isdigit 0070           ___lwdiv@quotient 0024                   ?_sprintf 00A8  
           __size_of_scale 0363             __size_of_setup 000D             __size_of_write 0042  
        interrupt_function 0004             ___wmul@product 0077                  clear_ram0 1000  
                 _PIE1bits 008C                   Lcd_Cmd@a 0076                   _PIR1bits 000C  
       __end_of__div_to_l_ 0770                ??_Lcd_Clear 0077                 _ADCON0bits 001F  
              __stringbase 180F                 _ADCON1bits 009F          ___wmul@multiplier 0073  
         ??_Lcd_Write_Char 0074                   _Lcd_Init 1B89                   _Lcd_Port 1925  
 __end_of_Lcd_Write_String 1B43           __size_of_Lcd_Cmd 001A                ??__Umul8_16 0075  
         __size_of___fladd 0288           __size_of___awdiv 0069           __size_of___flneg 000B  
         __size_of___awmod 0059           __size_of___flmul 0361           __size_of___flsub 0050  
         __size_of___fltol 007C           __size_of___lldiv 0068           __size_of___llmod 0056  
         __size_of___lwdiv 0046           __size_of___lwmod 003A                _fround$1190 004F  
              _fround$1189 0053         __end_of__stringtab 1810                 sprintf@val 00BF  
                 ___xxtofl 1DD2           __size_of_isdigit 0012            ___lwdiv@divisor 0020  
          ___lwdiv@counter 0026                   __ptext10 093C                   __ptext11 19E0  
                 __ptext20 126E                   __ptext12 087F                   __ptext21 1936  
                 __ptext13 06B0                   __ptext30 1941                   __ptext22 1D2E  
                 __ptext14 1DD2                   __ptext31 195B                   __ptext23 1BD0  
                 __ptext15 1995                   __ptext32 1925                   __ptext24 194E  
                 __ptext16 1C70                   __ptext33 0800                   __ptext25 192B  
                 __ptext17 1CC6                   __ptext34 1A09                   __ptext26 1AFD  
                 __ptext18 0770                   __ptext35 1A79                   __ptext27 1975  
                 __ptext19 1C20                   __ptext28 19BA                   __ptext29 1B89  
                 __powers_ 1810              __size_of_AADC 0036                   _contador 00D5  
         __size_of_sprintf F1BA              __size_of_main 0172                  pnum$text2 000F  
            __size_of_read 000B                 _INTCONbits 000B                   isdigit@c 0074  
                 scale@scl 0056                   intlevel1 0000                  sprintf@ap 00B6  
         __tdiv_to_l_@exp1 002D           __tdiv_to_l_@cntr 002C                  sprintf@sp 00C9  
         __tdiv_to_l_@quot 0028           ___lwmod@dividend 0075           ___lldiv@dividend 0024  
                stringcode 180A         Lcd_Set_Cursor@temp 0021               ?__tdiv_to_l_ 0020  
   __Umul8_16@multiplicand 0073                   sprintf@c 00CC                   sprintf@f 00A8  
         ___lldiv@quotient 0074            ___lwmod@divisor 0073            ___lwmod@counter 0078  
                 stringdir 180A                   stringtab 1800              ___fladd@signs 0068  
             ___fladd@aexp 0069               ___fladd@bexp 006A       __Umul8_16@multiplier 0024  
        __Umul8_16@product 0020  
