

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Feb 09 16:51:39 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	intentry,global,class=CODE,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 2.20
    54                           ; Generated 12/02/2020 GMT
    55                           ; 
    56                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F887 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  000E                     	;# 
   103  000F                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0017                     	;# 
   113  0018                     	;# 
   114  0019                     	;# 
   115  001A                     	;# 
   116  001B                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  001D                     	;# 
   120  001E                     	;# 
   121  001F                     	;# 
   122  0081                     	;# 
   123  0085                     	;# 
   124  0086                     	;# 
   125  0087                     	;# 
   126  0088                     	;# 
   127  0089                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  008F                     	;# 
   132  0090                     	;# 
   133  0091                     	;# 
   134  0092                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0094                     	;# 
   139  0095                     	;# 
   140  0096                     	;# 
   141  0097                     	;# 
   142  0098                     	;# 
   143  0099                     	;# 
   144  009A                     	;# 
   145  009B                     	;# 
   146  009C                     	;# 
   147  009D                     	;# 
   148  009E                     	;# 
   149  009F                     	;# 
   150  0105                     	;# 
   151  0107                     	;# 
   152  0108                     	;# 
   153  0109                     	;# 
   154  010C                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  0185                     	;# 
   160  0187                     	;# 
   161  0188                     	;# 
   162  0189                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  0000                     	;# 
   166  0001                     	;# 
   167  0002                     	;# 
   168  0003                     	;# 
   169  0004                     	;# 
   170  0005                     	;# 
   171  0006                     	;# 
   172  0007                     	;# 
   173  0008                     	;# 
   174  0009                     	;# 
   175  000A                     	;# 
   176  000B                     	;# 
   177  000C                     	;# 
   178  000D                     	;# 
   179  000E                     	;# 
   180  000E                     	;# 
   181  000F                     	;# 
   182  0010                     	;# 
   183  0011                     	;# 
   184  0012                     	;# 
   185  0013                     	;# 
   186  0014                     	;# 
   187  0015                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0017                     	;# 
   191  0018                     	;# 
   192  0019                     	;# 
   193  001A                     	;# 
   194  001B                     	;# 
   195  001B                     	;# 
   196  001C                     	;# 
   197  001D                     	;# 
   198  001E                     	;# 
   199  001F                     	;# 
   200  0081                     	;# 
   201  0085                     	;# 
   202  0086                     	;# 
   203  0087                     	;# 
   204  0088                     	;# 
   205  0089                     	;# 
   206  008C                     	;# 
   207  008D                     	;# 
   208  008E                     	;# 
   209  008F                     	;# 
   210  0090                     	;# 
   211  0091                     	;# 
   212  0092                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0097                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009A                     	;# 
   223  009B                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  0105                     	;# 
   229  0107                     	;# 
   230  0108                     	;# 
   231  0109                     	;# 
   232  010C                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  0185                     	;# 
   238  0187                     	;# 
   239  0188                     	;# 
   240  0189                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  001D                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  0081                     	;# 
   279  0085                     	;# 
   280  0086                     	;# 
   281  0087                     	;# 
   282  0088                     	;# 
   283  0089                     	;# 
   284  008C                     	;# 
   285  008D                     	;# 
   286  008E                     	;# 
   287  008F                     	;# 
   288  0090                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0093                     	;# 
   294  0094                     	;# 
   295  0095                     	;# 
   296  0096                     	;# 
   297  0097                     	;# 
   298  0098                     	;# 
   299  0099                     	;# 
   300  009A                     	;# 
   301  009B                     	;# 
   302  009C                     	;# 
   303  009D                     	;# 
   304  009E                     	;# 
   305  009F                     	;# 
   306  0105                     	;# 
   307  0107                     	;# 
   308  0108                     	;# 
   309  0109                     	;# 
   310  010C                     	;# 
   311  010C                     	;# 
   312  010D                     	;# 
   313  010E                     	;# 
   314  010F                     	;# 
   315  0185                     	;# 
   316  0187                     	;# 
   317  0188                     	;# 
   318  0189                     	;# 
   319  018C                     	;# 
   320  018D                     	;# 
   321  0000                     	;# 
   322  0001                     	;# 
   323  0002                     	;# 
   324  0003                     	;# 
   325  0004                     	;# 
   326  0005                     	;# 
   327  0006                     	;# 
   328  0007                     	;# 
   329  0008                     	;# 
   330  0009                     	;# 
   331  000A                     	;# 
   332  000B                     	;# 
   333  000C                     	;# 
   334  000D                     	;# 
   335  000E                     	;# 
   336  000E                     	;# 
   337  000F                     	;# 
   338  0010                     	;# 
   339  0011                     	;# 
   340  0012                     	;# 
   341  0013                     	;# 
   342  0014                     	;# 
   343  0015                     	;# 
   344  0015                     	;# 
   345  0016                     	;# 
   346  0017                     	;# 
   347  0018                     	;# 
   348  0019                     	;# 
   349  001A                     	;# 
   350  001B                     	;# 
   351  001B                     	;# 
   352  001C                     	;# 
   353  001D                     	;# 
   354  001E                     	;# 
   355  001F                     	;# 
   356  0081                     	;# 
   357  0085                     	;# 
   358  0086                     	;# 
   359  0087                     	;# 
   360  0088                     	;# 
   361  0089                     	;# 
   362  008C                     	;# 
   363  008D                     	;# 
   364  008E                     	;# 
   365  008F                     	;# 
   366  0090                     	;# 
   367  0091                     	;# 
   368  0092                     	;# 
   369  0093                     	;# 
   370  0093                     	;# 
   371  0093                     	;# 
   372  0094                     	;# 
   373  0095                     	;# 
   374  0096                     	;# 
   375  0097                     	;# 
   376  0098                     	;# 
   377  0099                     	;# 
   378  009A                     	;# 
   379  009B                     	;# 
   380  009C                     	;# 
   381  009D                     	;# 
   382  009E                     	;# 
   383  009F                     	;# 
   384  0105                     	;# 
   385  0107                     	;# 
   386  0108                     	;# 
   387  0109                     	;# 
   388  010C                     	;# 
   389  010C                     	;# 
   390  010D                     	;# 
   391  010E                     	;# 
   392  010F                     	;# 
   393  0185                     	;# 
   394  0187                     	;# 
   395  0188                     	;# 
   396  0189                     	;# 
   397  018C                     	;# 
   398  018D                     	;# 
   399                           
   400                           	psect	idataBANK1
   401  0803                     __pidataBANK1:
   402                           
   403                           ;initializer for _Num_Pot
   404  0803  3401               	retlw	1
   405                           
   406                           ;initializer for _banderaADC
   407  0804  3401               	retlw	1
   408                           
   409                           	psect	strings
   410  1800                     __pstrings:
   411  1800                     stringtab:
   412  1800                     __stringtab:
   413                           
   414                           ;	String table - string pointers are 1 byte each
   415  1800  1BFF               	btfsc	btemp+1,7
   416  1801  280A               	ljmp	stringcode
   417  1802  1383               	bcf	3,7
   418  1803  187F               	btfsc	btemp+1,0
   419  1804  1783               	bsf	3,7
   420  1805  0800               	movf	0,w
   421  1806  0A84               	incf	4,f
   422  1807  1903               	skipnz
   423  1808  0AFF               	incf	btemp+1,f
   424  1809  0008               	return
   425  180A                     stringcode:
   426  180A                     stringdir:
   427  180A  3018               	movlw	high stringdir
   428  180B  008A               	movwf	10
   429  180C  0804               	movf	4,w
   430  180D  0A84               	incf	4,f
   431  180E  0782               	addwf	2,f
   432  180F                     __stringbase:
   433  180F  3400               	retlw	0
   434  1810                     __end_of__stringtab:
   435  1810                     __powers_:
   436  1810  3400               	retlw	0
   437  1811  3400               	retlw	0
   438  1812  3480               	retlw	128
   439  1813  343F               	retlw	63
   440  1814  3400               	retlw	0
   441  1815  3400               	retlw	0
   442  1816  3420               	retlw	32
   443  1817  3441               	retlw	65
   444  1818  3400               	retlw	0
   445  1819  3400               	retlw	0
   446  181A  34C8               	retlw	200
   447  181B  3442               	retlw	66
   448  181C  3400               	retlw	0
   449  181D  3400               	retlw	0
   450  181E  347A               	retlw	122
   451  181F  3444               	retlw	68
   452  1820  3400               	retlw	0
   453  1821  3440               	retlw	64
   454  1822  341C               	retlw	28
   455  1823  3446               	retlw	70
   456  1824  3400               	retlw	0
   457  1825  3450               	retlw	80
   458  1826  34C3               	retlw	195
   459  1827  3447               	retlw	71
   460  1828  3400               	retlw	0
   461  1829  3424               	retlw	36
   462  182A  3474               	retlw	116
   463  182B  3449               	retlw	73
   464  182C  3480               	retlw	128
   465  182D  3496               	retlw	150
   466  182E  3418               	retlw	24
   467  182F  344B               	retlw	75
   468  1830  3420               	retlw	32
   469  1831  34BC               	retlw	188
   470  1832  34BE               	retlw	190
   471  1833  344C               	retlw	76
   472  1834  3428               	retlw	40
   473  1835  346B               	retlw	107
   474  1836  346E               	retlw	110
   475  1837  344E               	retlw	78
   476  1838  34F9               	retlw	249
   477  1839  3402               	retlw	2
   478  183A  3415               	retlw	21
   479  183B  3450               	retlw	80
   480  183C  34EC               	retlw	236
   481  183D  3478               	retlw	120
   482  183E  34AD               	retlw	173
   483  183F  3460               	retlw	96
   484  1840  34CA               	retlw	202
   485  1841  34F2               	retlw	242
   486  1842  3449               	retlw	73
   487  1843  3471               	retlw	113
   488  1844                     __end_of__powers_:
   489  1844                     __npowers_:
   490  1844  3400               	retlw	0
   491  1845  3400               	retlw	0
   492  1846  3480               	retlw	128
   493  1847  343F               	retlw	63
   494  1848  34CD               	retlw	205
   495  1849  34CC               	retlw	204
   496  184A  34CC               	retlw	204
   497  184B  343D               	retlw	61
   498  184C  340A               	retlw	10
   499  184D  34D7               	retlw	215
   500  184E  3423               	retlw	35
   501  184F  343C               	retlw	60
   502  1850  346F               	retlw	111
   503  1851  3412               	retlw	18
   504  1852  3483               	retlw	131
   505  1853  343A               	retlw	58
   506  1854  3417               	retlw	23
   507  1855  34B7               	retlw	183
   508  1856  34D1               	retlw	209
   509  1857  3438               	retlw	56
   510  1858  34AC               	retlw	172
   511  1859  34C5               	retlw	197
   512  185A  3427               	retlw	39
   513  185B  3437               	retlw	55
   514  185C  34BD               	retlw	189
   515  185D  3437               	retlw	55
   516  185E  3486               	retlw	134
   517  185F  3435               	retlw	53
   518  1860  3495               	retlw	149
   519  1861  34BF               	retlw	191
   520  1862  34D6               	retlw	214
   521  1863  3433               	retlw	51
   522  1864  3477               	retlw	119
   523  1865  34CC               	retlw	204
   524  1866  342B               	retlw	43
   525  1867  3432               	retlw	50
   526  1868  345F               	retlw	95
   527  1869  3470               	retlw	112
   528  186A  3489               	retlw	137
   529  186B  3430               	retlw	48
   530  186C  34FF               	retlw	255
   531  186D  34E6               	retlw	230
   532  186E  34DB               	retlw	219
   533  186F  342E               	retlw	46
   534  1870  3408               	retlw	8
   535  1871  34E5               	retlw	229
   536  1872  343C               	retlw	60
   537  1873  341E               	retlw	30
   538  1874  3460               	retlw	96
   539  1875  3442               	retlw	66
   540  1876  34A2               	retlw	162
   541  1877  340D               	retlw	13
   542  1878                     __end_of__npowers_:
   543  1878                     _dpowers:
   544  1878  3401               	retlw	1
   545  1879  3400               	retlw	0
   546  187A  3400               	retlw	0
   547  187B  3400               	retlw	0
   548  187C  340A               	retlw	10
   549  187D  3400               	retlw	0
   550  187E  3400               	retlw	0
   551  187F  3400               	retlw	0
   552  1880  3464               	retlw	100
   553  1881  3400               	retlw	0
   554  1882  3400               	retlw	0
   555  1883  3400               	retlw	0
   556  1884  34E8               	retlw	232
   557  1885  3403               	retlw	3
   558  1886  3400               	retlw	0
   559  1887  3400               	retlw	0
   560  1888  3410               	retlw	16
   561  1889  3427               	retlw	39
   562  188A  3400               	retlw	0
   563  188B  3400               	retlw	0
   564  188C  34A0               	retlw	160
   565  188D  3486               	retlw	134
   566  188E  3401               	retlw	1
   567  188F  3400               	retlw	0
   568  1890  3440               	retlw	64
   569  1891  3442               	retlw	66
   570  1892  340F               	retlw	15
   571  1893  3400               	retlw	0
   572  1894  3480               	retlw	128
   573  1895  3496               	retlw	150
   574  1896  3498               	retlw	152
   575  1897  3400               	retlw	0
   576  1898  3400               	retlw	0
   577  1899  34E1               	retlw	225
   578  189A  34F5               	retlw	245
   579  189B  3405               	retlw	5
   580  189C  3400               	retlw	0
   581  189D  34CA               	retlw	202
   582  189E  349A               	retlw	154
   583  189F  343B               	retlw	59
   584  18A0                     __end_of_dpowers:
   585  001F                     _ADCON0bits	set	31
   586  001F                     _ADCON0	set	31
   587  000B                     _INTCON	set	11
   588  0008                     _PORTDbits	set	8
   589  001E                     _ADRESH	set	30
   590  000C                     _PIR1bits	set	12
   591  0008                     _PORTD	set	8
   592  0007                     _PORTC	set	7
   593  008C                     _PIE1bits	set	140
   594  009F                     _ADCON1bits	set	159
   595  0088                     _TRISD	set	136
   596  0087                     _TRISC	set	135
   597  0188                     _ANSEL	set	392
   598  18A0                     STR_1:
   599  18A0  3453               	retlw	83	;'S'
   600  18A1  3431               	retlw	49	;'1'
   601  18A2  343A               	retlw	58	;':'
   602  18A3  3420               	retlw	32	;' '
   603  18A4  3420               	retlw	32	;' '
   604  18A5  3420               	retlw	32	;' '
   605  18A6  3453               	retlw	83	;'S'
   606  18A7  3432               	retlw	50	;'2'
   607  18A8  343A               	retlw	58	;':'
   608  18A9  3420               	retlw	32	;' '
   609  18AA  3420               	retlw	32	;' '
   610  18AB  3453               	retlw	83	;'S'
   611  18AC  3433               	retlw	51	;'3'
   612  18AD  343A               	retlw	58	;':'
   613  18AE  3400               	retlw	0
   614  18AF                     STR_2:
   615  18AF  3425               	retlw	37	;'%'
   616  18B0  3433               	retlw	51	;'3'
   617  18B1  342E               	retlw	46	;'.'
   618  18B2  3432               	retlw	50	;'2'
   619  18B3  3466               	retlw	102	;'f'
   620  18B4  3456               	retlw	86	;'V'
   621  18B5  3400               	retlw	0
   622  18AF                     
   623                           	psect	cinit
   624  000F                     start_initialization:	
   625                           ; #config settings
   626                           
   627  000F                     __initialization:
   628                           
   629                           ; Initialize objects allocated to BANK1
   630  000F  1683               	bsf	3,5	;RP0=1, select bank1
   631  0010  1303               	bcf	3,6	;RP1=0, select bank1
   632  0011  120A  158A  2003  120A  118A  	fcall	__pidataBANK1	;fetch initializer
   633  0016  00EB               	movwf	__pdataBANK1& (0+127)
   634  0017  120A  158A  2004  120A  118A  	fcall	__pidataBANK1+1	;fetch initializer
   635  001C  00EC               	movwf	(__pdataBANK1+1)& (0+127)
   636                           
   637                           ; Clear objects allocated to BANK1
   638  001D  1383               	bcf	3,7	;select IRP bank0
   639  001E  30D1               	movlw	low __pbssBANK1
   640  001F  0084               	movwf	4
   641  0020  30EB               	movlw	low (__pbssBANK1+26)
   642  0021  160A  158A  22E4  120A  118A  	fcall	clear_ram0
   643                           
   644                           ; Clear objects allocated to BANK0
   645  0026  1283               	bcf	3,5	;RP0=0, select bank0
   646  0027  1303               	bcf	3,6	;RP1=0, select bank0
   647  0028  01EC               	clrf	__pbssBANK0& (0+127)
   648                           
   649                           ; Clear objects allocated to COMMON
   650  0029  01FA               	clrf	__pbssCOMMON& (0+127)
   651  002A                     end_of_initialization:	
   652                           ;End of C runtime variable initialization code
   653                           
   654  002A                     __end_of__initialization:
   655  002A  0183               	clrf	3
   656  002B  120A  158A  281F   	ljmp	_main	;jump to C main() function
   657                           
   658                           	psect	bssCOMMON
   659  007A                     __pbssCOMMON:
   660  007A                     _adc:
   661  007A                     	ds	1
   662                           
   663                           	psect	bssBANK0
   664  006C                     __pbssBANK0:
   665  006C                     _pot:
   666  006C                     	ds	1
   667                           
   668                           	psect	bssBANK1
   669  00D1                     __pbssBANK1:
   670  00D1                     _conversor:
   671  00D1                     	ds	4
   672  00D5                     _s:
   673  00D5                     	ds	20
   674  00E9                     _S2:
   675  00E9                     	ds	1
   676  00EA                     _S1:
   677  00EA                     	ds	1
   678                           
   679                           	psect	dataBANK1
   680  00EB                     __pdataBANK1:
   681  00EB                     _Num_Pot:
   682  00EB                     	ds	1
   683  00EC                     _banderaADC:
   684  00EC                     	ds	1
   685                           
   686                           	psect	clrtext
   687  1AE4                     clear_ram0:	
   688                           ;	Called with FSR containing the base address, and
   689                           ;	W with the last address+1
   690                           
   691  1AE4  0064               	clrwdt	;clear the watchdog before getting into this loop
   692  1AE5                     clrloop0:
   693  1AE5  0180               	clrf	0	;clear RAM location pointed to by FSR
   694  1AE6  0A84               	incf	4,f	;increment pointer
   695  1AE7  0604               	xorwf	4,w	;XOR with final address
   696  1AE8  1903               	btfsc	3,2	;have we reached the end yet?
   697  1AE9  3400               	retlw	0	;all done for this memory range, return
   698  1AEA  0604               	xorwf	4,w	;XOR again to restore value
   699  1AEB  2AE5               	goto	clrloop0	;do the next byte
   700                           
   701                           	psect	cstackBANK1
   702  00A0                     __pcstackBANK1:
   703  00A0                     ?___flsub:
   704  00A0                     ___flsub@a:	
   705                           ; 4 bytes @ 0x0
   706                           
   707                           
   708                           ; 4 bytes @ 0x0
   709  00A0                     	ds	4
   710  00A4                     ___flsub@b:
   711                           
   712                           ; 4 bytes @ 0x4
   713  00A4                     	ds	4
   714  00A8                     ?_sprintf:
   715  00A8                     sprintf@f:	
   716                           ; 2 bytes @ 0x8
   717                           
   718                           
   719                           ; 1 bytes @ 0x8
   720  00A8                     	ds	5
   721  00AD                     ??_sprintf:
   722                           
   723                           ; 1 bytes @ 0xD
   724  00AD                     	ds	5
   725  00B2                     _sprintf$987:
   726                           
   727                           ; 4 bytes @ 0x12
   728  00B2                     	ds	4
   729  00B6                     sprintf@ap:
   730                           
   731                           ; 1 bytes @ 0x16
   732  00B6                     	ds	1
   733  00B7                     sprintf@val:
   734                           
   735                           ; 4 bytes @ 0x17
   736  00B7                     	ds	4
   737  00BB                     sprintf@flag:
   738                           
   739                           ; 2 bytes @ 0x1B
   740  00BB                     	ds	2
   741  00BD                     sprintf@width:
   742                           
   743                           ; 2 bytes @ 0x1D
   744  00BD                     	ds	2
   745  00BF                     sprintf@tmpval:
   746                           
   747                           ; 4 bytes @ 0x1F
   748  00BF                     	ds	4
   749  00C3                     sprintf@eexp:
   750                           
   751                           ; 2 bytes @ 0x23
   752  00C3                     	ds	2
   753  00C5                     sprintf@fval:
   754                           
   755                           ; 4 bytes @ 0x25
   756  00C5                     	ds	4
   757  00C9                     sprintf@sp:
   758                           
   759                           ; 1 bytes @ 0x29
   760  00C9                     	ds	1
   761  00CA                     sprintf@prec:
   762                           
   763                           ; 2 bytes @ 0x2A
   764  00CA                     	ds	2
   765  00CC                     sprintf@c:
   766                           
   767                           ; 1 bytes @ 0x2C
   768  00CC                     	ds	1
   769  00CD                     ??_main:
   770                           
   771                           ; 1 bytes @ 0x2D
   772  00CD                     	ds	4
   773                           
   774                           	psect	cstackCOMMON
   775  0070                     __pcstackCOMMON:
   776  0070                     ?_isdigit:
   777  0070                     ?_Lcd_Init:	
   778                           ; 1 bit 
   779                           
   780  0070                     ?_Lcd_Clear:	
   781                           ; 1 bytes @ 0x0
   782                           
   783  0070                     ?_setup:	
   784                           ; 1 bytes @ 0x0
   785                           
   786  0070                     ?_ISR:	
   787                           ; 1 bytes @ 0x0
   788                           
   789  0070                     ??_ISR:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0070                     ?_main:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0070                     ?_Lcd_Port:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0070                     ?_Lcd_Cmd:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0070                     ?_Lcd_Write_Char:	
   802                           ; 1 bytes @ 0x0
   803                           
   804                           
   805                           ; 1 bytes @ 0x0
   806  0070                     	ds	3
   807  0073                     ?_AADC:
   808  0073                     ??_isdigit:	
   809                           ; 1 bytes @ 0x3
   810                           
   811  0073                     ??__tdiv_to_l_:	
   812                           ; 1 bytes @ 0x3
   813                           
   814  0073                     ??__div_to_l_:	
   815                           ; 1 bytes @ 0x3
   816                           
   817  0073                     ??_setup:	
   818                           ; 1 bytes @ 0x3
   819                           
   820  0073                     ??_Lcd_Port:	
   821                           ; 1 bytes @ 0x3
   822                           
   823  0073                     ??___lldiv:	
   824                           ; 1 bytes @ 0x3
   825                           
   826  0073                     ??___fleq:	
   827                           ; 1 bytes @ 0x3
   828                           
   829  0073                     ??___flge:	
   830                           ; 1 bytes @ 0x3
   831                           
   832  0073                     ??___llmod:	
   833                           ; 1 bytes @ 0x3
   834                           
   835  0073                     ?__Umul8_16:	
   836                           ; 1 bytes @ 0x3
   837                           
   838  0073                     ?___wmul:	
   839                           ; 2 bytes @ 0x3
   840                           
   841  0073                     ?___awmod:	
   842                           ; 2 bytes @ 0x3
   843                           
   844  0073                     ?___lwmod:	
   845                           ; 2 bytes @ 0x3
   846                           
   847  0073                     ?___flneg:	
   848                           ; 2 bytes @ 0x3
   849                           
   850  0073                     ?___xxtofl:	
   851                           ; 4 bytes @ 0x3
   852                           
   853  0073                     Lcd_Port@a:	
   854                           ; 4 bytes @ 0x3
   855                           
   856  0073                     AADC@Num_Pot:	
   857                           ; 1 bytes @ 0x3
   858                           
   859  0073                     __Umul8_16@multiplicand:	
   860                           ; 1 bytes @ 0x3
   861                           
   862  0073                     _isdigit$801:	
   863                           ; 1 bytes @ 0x3
   864                           
   865  0073                     ___wmul@multiplier:	
   866                           ; 1 bytes @ 0x3
   867                           
   868  0073                     ___awmod@divisor:	
   869                           ; 2 bytes @ 0x3
   870                           
   871  0073                     ___lwmod@divisor:	
   872                           ; 2 bytes @ 0x3
   873                           
   874  0073                     ___flneg@f1:	
   875                           ; 2 bytes @ 0x3
   876                           
   877  0073                     ___xxtofl@val:	
   878                           ; 4 bytes @ 0x3
   879                           
   880                           
   881                           ; 4 bytes @ 0x3
   882  0073                     	ds	1
   883  0074                     ??_AADC:
   884  0074                     ??_Lcd_Cmd:	
   885                           ; 1 bytes @ 0x4
   886                           
   887  0074                     ??_Lcd_Write_Char:	
   888                           ; 1 bytes @ 0x4
   889                           
   890  0074                     ___llmod@counter:	
   891                           ; 1 bytes @ 0x4
   892                           
   893  0074                     isdigit@c:	
   894                           ; 1 bytes @ 0x4
   895                           
   896  0074                     ___lldiv@quotient:	
   897                           ; 1 bytes @ 0x4
   898                           
   899  0074                     __div_to_l_@quot:	
   900                           ; 4 bytes @ 0x4
   901                           
   902                           
   903                           ; 4 bytes @ 0x4
   904  0074                     	ds	1
   905  0075                     ??__Umul8_16:
   906  0075                     AADC@pot:	
   907                           ; 1 bytes @ 0x5
   908                           
   909  0075                     ___wmul@multiplicand:	
   910                           ; 1 bytes @ 0x5
   911                           
   912  0075                     ___awmod@dividend:	
   913                           ; 2 bytes @ 0x5
   914                           
   915  0075                     ___lwmod@dividend:	
   916                           ; 2 bytes @ 0x5
   917                           
   918                           
   919                           ; 2 bytes @ 0x5
   920  0075                     	ds	1
   921  0076                     Lcd_Cmd@a:
   922  0076                     Lcd_Write_Char@y:	
   923                           ; 1 bytes @ 0x6
   924                           
   925  0076                     AADC@banderaADC:	
   926                           ; 1 bytes @ 0x6
   927                           
   928                           
   929                           ; 1 bytes @ 0x6
   930  0076                     	ds	1
   931  0077                     ??_Lcd_Init:
   932  0077                     ??_Lcd_Clear:	
   933                           ; 1 bytes @ 0x7
   934                           
   935  0077                     ?_Lcd_Set_Cursor:	
   936                           ; 1 bytes @ 0x7
   937                           
   938  0077                     ??___wmul:	
   939                           ; 1 bytes @ 0x7
   940                           
   941  0077                     ??___awmod:	
   942                           ; 1 bytes @ 0x7
   943                           
   944  0077                     ??___flneg:	
   945                           ; 1 bytes @ 0x7
   946                           
   947  0077                     ??___lwmod:	
   948                           ; 1 bytes @ 0x7
   949                           
   950  0077                     Lcd_Set_Cursor@b:	
   951                           ; 1 bytes @ 0x7
   952                           
   953  0077                     Lcd_Write_Char@a:	
   954                           ; 1 bytes @ 0x7
   955                           
   956  0077                     ___wmul@product:	
   957                           ; 1 bytes @ 0x7
   958                           
   959                           
   960                           ; 2 bytes @ 0x7
   961  0077                     	ds	1
   962  0078                     ??_Lcd_Set_Cursor:
   963  0078                     ?_Lcd_Write_String:	
   964                           ; 1 bytes @ 0x8
   965                           
   966  0078                     ___lldiv@counter:	
   967                           ; 1 bytes @ 0x8
   968                           
   969  0078                     ___awmod@counter:	
   970                           ; 1 bytes @ 0x8
   971                           
   972  0078                     __div_to_l_@cntr:	
   973                           ; 1 bytes @ 0x8
   974                           
   975  0078                     ___lwmod@counter:	
   976                           ; 1 bytes @ 0x8
   977                           
   978  0078                     Lcd_Write_String@a:	
   979                           ; 1 bytes @ 0x8
   980                           
   981                           
   982                           ; 2 bytes @ 0x8
   983  0078                     	ds	1
   984  0079                     ??___lwdiv:
   985  0079                     ___awmod@sign:	
   986                           ; 1 bytes @ 0x9
   987                           
   988  0079                     __div_to_l_@exp1:	
   989                           ; 1 bytes @ 0x9
   990                           
   991                           
   992                           ; 1 bytes @ 0x9
   993  0079                     	ds	1
   994  007A                     ??___flsub:
   995                           
   996                           	psect	cstackBANK0
   997  0020                     __pcstackBANK0:	
   998                           ; 1 bytes @ 0xA
   999                           
  1000  0020                     ?___fleq:
  1001  0020                     ?___flge:	
  1002                           ; 1 bit 
  1003                           
  1004  0020                     ??_Lcd_Write_String:	
  1005                           ; 1 bit 
  1006                           
  1007  0020                     ??___xxtofl:	
  1008                           ; 1 bytes @ 0x0
  1009                           
  1010  0020                     ?___awdiv:	
  1011                           ; 1 bytes @ 0x0
  1012                           
  1013  0020                     ?___lwdiv:	
  1014                           ; 2 bytes @ 0x0
  1015                           
  1016  0020                     ?__tdiv_to_l_:	
  1017                           ; 2 bytes @ 0x0
  1018                           
  1019  0020                     ?__div_to_l_:	
  1020                           ; 4 bytes @ 0x0
  1021                           
  1022  0020                     ?___lldiv:	
  1023                           ; 4 bytes @ 0x0
  1024                           
  1025  0020                     ?___llmod:	
  1026                           ; 4 bytes @ 0x0
  1027                           
  1028  0020                     Lcd_Set_Cursor@a:	
  1029                           ; 4 bytes @ 0x0
  1030                           
  1031  0020                     ___awdiv@divisor:	
  1032                           ; 1 bytes @ 0x0
  1033                           
  1034  0020                     ___lwdiv@divisor:	
  1035                           ; 2 bytes @ 0x0
  1036                           
  1037  0020                     __Umul8_16@product:	
  1038                           ; 2 bytes @ 0x0
  1039                           
  1040  0020                     ___lldiv@divisor:	
  1041                           ; 2 bytes @ 0x0
  1042                           
  1043  0020                     __div_to_l_@f1:	
  1044                           ; 4 bytes @ 0x0
  1045                           
  1046  0020                     ___fleq@ff1:	
  1047                           ; 4 bytes @ 0x0
  1048                           
  1049  0020                     ___flge@ff1:	
  1050                           ; 4 bytes @ 0x0
  1051                           
  1052  0020                     __tdiv_to_l_@f1:	
  1053                           ; 4 bytes @ 0x0
  1054                           
  1055  0020                     ___llmod@divisor:	
  1056                           ; 4 bytes @ 0x0
  1057                           
  1058                           
  1059                           ; 4 bytes @ 0x0
  1060  0020                     	ds	1
  1061  0021                     Lcd_Set_Cursor@temp:
  1062                           
  1063                           ; 1 bytes @ 0x1
  1064  0021                     	ds	1
  1065  0022                     ___awdiv@dividend:
  1066  0022                     ___lwdiv@dividend:	
  1067                           ; 2 bytes @ 0x2
  1068                           
  1069  0022                     __Umul8_16@word_mpld:	
  1070                           ; 2 bytes @ 0x2
  1071                           
  1072                           
  1073                           ; 2 bytes @ 0x2
  1074  0022                     	ds	1
  1075  0023                     Lcd_Write_String@i:
  1076                           
  1077                           ; 2 bytes @ 0x3
  1078  0023                     	ds	1
  1079  0024                     ??___awdiv:
  1080  0024                     __Umul8_16@multiplier:	
  1081                           ; 1 bytes @ 0x4
  1082                           
  1083  0024                     ___xxtofl@sign:	
  1084                           ; 1 bytes @ 0x4
  1085                           
  1086  0024                     ___lwdiv@quotient:	
  1087                           ; 1 bytes @ 0x4
  1088                           
  1089  0024                     ___lldiv@dividend:	
  1090                           ; 2 bytes @ 0x4
  1091                           
  1092  0024                     __div_to_l_@f2:	
  1093                           ; 4 bytes @ 0x4
  1094                           
  1095  0024                     ___fleq@ff2:	
  1096                           ; 4 bytes @ 0x4
  1097                           
  1098  0024                     ___flge@ff2:	
  1099                           ; 4 bytes @ 0x4
  1100                           
  1101  0024                     __tdiv_to_l_@f2:	
  1102                           ; 4 bytes @ 0x4
  1103                           
  1104  0024                     ___llmod@dividend:	
  1105                           ; 4 bytes @ 0x4
  1106                           
  1107                           
  1108                           ; 4 bytes @ 0x4
  1109  0024                     	ds	1
  1110  0025                     ___awdiv@counter:
  1111  0025                     ___xxtofl@exp:	
  1112                           ; 1 bytes @ 0x5
  1113                           
  1114                           
  1115                           ; 1 bytes @ 0x5
  1116  0025                     	ds	1
  1117  0026                     ___awdiv@sign:
  1118  0026                     ___lwdiv@counter:	
  1119                           ; 1 bytes @ 0x6
  1120                           
  1121  0026                     ___xxtofl@arg:	
  1122                           ; 1 bytes @ 0x6
  1123                           
  1124                           
  1125                           ; 4 bytes @ 0x6
  1126  0026                     	ds	1
  1127  0027                     ___awdiv@quotient:
  1128                           
  1129                           ; 2 bytes @ 0x7
  1130  0027                     	ds	1
  1131  0028                     __tdiv_to_l_@quot:
  1132                           
  1133                           ; 4 bytes @ 0x8
  1134  0028                     	ds	2
  1135  002A                     ?___flmul:
  1136  002A                     ___flmul@b:	
  1137                           ; 4 bytes @ 0xA
  1138                           
  1139                           
  1140                           ; 4 bytes @ 0xA
  1141  002A                     	ds	2
  1142  002C                     __tdiv_to_l_@cntr:
  1143                           
  1144                           ; 1 bytes @ 0xC
  1145  002C                     	ds	1
  1146  002D                     __tdiv_to_l_@exp1:
  1147                           
  1148                           ; 1 bytes @ 0xD
  1149  002D                     	ds	1
  1150  002E                     ___flmul@a:
  1151                           
  1152                           ; 4 bytes @ 0xE
  1153  002E                     	ds	4
  1154  0032                     ??___flmul:
  1155                           
  1156                           ; 1 bytes @ 0x12
  1157  0032                     	ds	5
  1158  0037                     ___flmul@sign:
  1159                           
  1160                           ; 1 bytes @ 0x17
  1161  0037                     	ds	1
  1162  0038                     ___flmul@grs:
  1163                           
  1164                           ; 4 bytes @ 0x18
  1165  0038                     	ds	4
  1166  003C                     ___flmul@aexp:
  1167                           
  1168                           ; 1 bytes @ 0x1C
  1169  003C                     	ds	1
  1170  003D                     ___flmul@bexp:
  1171                           
  1172                           ; 1 bytes @ 0x1D
  1173  003D                     	ds	1
  1174  003E                     ___flmul@prod:
  1175                           
  1176                           ; 4 bytes @ 0x1E
  1177  003E                     	ds	4
  1178  0042                     ___flmul@temp:
  1179                           
  1180                           ; 2 bytes @ 0x22
  1181  0042                     	ds	2
  1182  0044                     ?_fround:
  1183  0044                     ?_scale:	
  1184                           ; 4 bytes @ 0x24
  1185                           
  1186                           
  1187                           ; 4 bytes @ 0x24
  1188  0044                     	ds	4
  1189  0048                     ??_fround:
  1190  0048                     ??_scale:	
  1191                           ; 1 bytes @ 0x28
  1192                           
  1193                           
  1194                           ; 1 bytes @ 0x28
  1195  0048                     	ds	7
  1196  004F                     _fround$985:
  1197                           
  1198                           ; 4 bytes @ 0x2F
  1199  004F                     	ds	3
  1200  0052                     _scale$986:
  1201                           
  1202                           ; 4 bytes @ 0x32
  1203  0052                     	ds	1
  1204  0053                     _fround$984:
  1205                           
  1206                           ; 4 bytes @ 0x33
  1207  0053                     	ds	3
  1208  0056                     scale@scl:
  1209                           
  1210                           ; 1 bytes @ 0x36
  1211  0056                     	ds	1
  1212  0057                     ?___fltol:
  1213  0057                     fround@prec:	
  1214                           ; 4 bytes @ 0x37
  1215                           
  1216  0057                     ___fltol@f1:	
  1217                           ; 1 bytes @ 0x37
  1218                           
  1219                           
  1220                           ; 4 bytes @ 0x37
  1221  0057                     	ds	1
  1222  0058                     ?___fladd:
  1223  0058                     ___fladd@b:	
  1224                           ; 4 bytes @ 0x38
  1225                           
  1226                           
  1227                           ; 4 bytes @ 0x38
  1228  0058                     	ds	3
  1229  005B                     ??___fltol:
  1230                           
  1231                           ; 1 bytes @ 0x3B
  1232  005B                     	ds	1
  1233  005C                     ___fladd@a:
  1234                           
  1235                           ; 4 bytes @ 0x3C
  1236  005C                     	ds	4
  1237  0060                     ??___fladd:
  1238  0060                     ___fltol@sign1:	
  1239                           ; 1 bytes @ 0x40
  1240                           
  1241                           
  1242                           ; 1 bytes @ 0x40
  1243  0060                     	ds	1
  1244  0061                     ___fltol@exp1:
  1245                           
  1246                           ; 1 bytes @ 0x41
  1247  0061                     	ds	7
  1248  0068                     ___fladd@signs:
  1249                           
  1250                           ; 1 bytes @ 0x48
  1251  0068                     	ds	1
  1252  0069                     ___fladd@aexp:
  1253                           
  1254                           ; 1 bytes @ 0x49
  1255  0069                     	ds	1
  1256  006A                     ___fladd@bexp:
  1257                           
  1258                           ; 1 bytes @ 0x4A
  1259  006A                     	ds	1
  1260  006B                     ___fladd@grs:
  1261                           
  1262                           ; 1 bytes @ 0x4B
  1263  006B                     	ds	1
  1264                           
  1265                           	psect	maintext
  1266  081F                     __pmaintext:	
  1267 ;;
  1268 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1269 ;;
  1270 ;; *************** function _main *****************
  1271 ;; Defined at:
  1272 ;;		line 87 in file "main.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;		None
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  a               2    0        unsigned int 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : B00/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1286 ;;      Params:         0       0       0       0       0
  1287 ;;      Locals:         0       0       0       0       0
  1288 ;;      Temps:          0       0       4       0       0
  1289 ;;      Totals:         0       0       4       0       0
  1290 ;;Total ram usage:        4 bytes
  1291 ;; Hardware stack levels required when called:    5
  1292 ;; This function calls:
  1293 ;;		_AADC
  1294 ;;		_Lcd_Clear
  1295 ;;		_Lcd_Init
  1296 ;;		_Lcd_Set_Cursor
  1297 ;;		_Lcd_Write_String
  1298 ;;		___flmul
  1299 ;;		___xxtofl
  1300 ;;		_setup
  1301 ;;		_sprintf
  1302 ;; This function is called by:
  1303 ;;		Startup code after reset
  1304 ;; This function uses a non-reentrant model
  1305 ;;
  1306                           
  1307                           
  1308                           ;psect for function _main
  1309  081F                     _main:
  1310  081F                     l4090:	
  1311                           ;incstack = 0
  1312                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1313                           
  1314                           
  1315                           ;main.c: 88:     unsigned int a;;main.c: 89:     setup();
  1316  081F  160A  158A  2304  120A  158A  	fcall	_setup
  1317                           
  1318                           ;main.c: 92:     Lcd_Init();
  1319  0824  160A  158A  2479  120A  158A  	fcall	_Lcd_Init
  1320  0829                     l61:	
  1321                           ;main.c: 93:     while (1) {
  1322                           
  1323                           
  1324                           ;main.c: 94:        pot=AADC(banderaADC,Num_Pot);
  1325  0829  1683               	bsf	3,5	;RP0=1, select bank1
  1326  082A  1303               	bcf	3,6	;RP1=0, select bank1
  1327  082B  086B               	movf	_Num_Pot^(0+128),w
  1328  082C  00CD               	movwf	??_main^(0+128)
  1329  082D  084D               	movf	??_main^(0+128),w
  1330  082E  00F3               	movwf	AADC@Num_Pot
  1331  082F  086C               	movf	_banderaADC^(0+128),w
  1332  0830  160A  158A  23B7  120A  158A  	fcall	_AADC
  1333  0835  1683               	bsf	3,5	;RP0=1, select bank1
  1334  0836  1303               	bcf	3,6	;RP1=0, select bank1
  1335  0837  00CE               	movwf	(??_main+1)^(0+128)
  1336  0838  084E               	movf	(??_main+1)^(0+128),w
  1337  0839  1283               	bcf	3,5	;RP0=0, select bank0
  1338  083A  1303               	bcf	3,6	;RP1=0, select bank0
  1339  083B  00EC               	movwf	_pot
  1340                           
  1341                           ;main.c: 96:         Lcd_Clear();
  1342  083C  160A  158A  22F7  120A  158A  	fcall	_Lcd_Clear
  1343                           
  1344                           ;main.c: 98:         Lcd_Set_Cursor(1, 1);
  1345  0841  01F7               	clrf	Lcd_Set_Cursor@b
  1346  0842  0AF7               	incf	Lcd_Set_Cursor@b,f
  1347  0843  3001               	movlw	1
  1348  0844  160A  158A  2368  120A  158A  	fcall	_Lcd_Set_Cursor
  1349  0849                     l4092:
  1350                           
  1351                           ;main.c: 99:         Lcd_Write_String("S1:   S2:  S3:");
  1352  0849  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1353  084A  00F8               	movwf	Lcd_Write_String@a
  1354  084B  3080               	movlw	128
  1355  084C  00F9               	movwf	Lcd_Write_String@a+1
  1356  084D  160A  158A  23ED  120A  158A  	fcall	_Lcd_Write_String
  1357  0852                     l4094:
  1358                           
  1359                           ;main.c: 100:         conversor= 0.0195*S1;
  1360  0852  303C               	movlw	60
  1361  0853  1283               	bcf	3,5	;RP0=0, select bank0
  1362  0854  1303               	bcf	3,6	;RP1=0, select bank0
  1363  0855  00AD               	movwf	___flmul@b+3
  1364  0856  309F               	movlw	159
  1365  0857  00AC               	movwf	___flmul@b+2
  1366  0858  30BE               	movlw	190
  1367  0859  00AB               	movwf	___flmul@b+1
  1368  085A  3077               	movlw	119
  1369  085B  00AA               	movwf	___flmul@b
  1370  085C  1683               	bsf	3,5	;RP0=1, select bank1
  1371  085D  1303               	bcf	3,6	;RP1=0, select bank1
  1372  085E  086A               	movf	_S1^(0+128),w
  1373  085F  00CD               	movwf	??_main^(0+128)
  1374  0860  01CE               	clrf	(??_main^(0+128)+1)
  1375  0861  01CF               	clrf	(??_main^(0+128)+2)
  1376  0862  01D0               	clrf	(??_main^(0+128)+3)
  1377  0863  0850               	movf	(??_main+3)^(0+128),w
  1378  0864  00F6               	movwf	___xxtofl@val+3
  1379  0865  084F               	movf	(??_main+2)^(0+128),w
  1380  0866  00F5               	movwf	___xxtofl@val+2
  1381  0867  084E               	movf	(??_main+1)^(0+128),w
  1382  0868  00F4               	movwf	___xxtofl@val+1
  1383  0869  084D               	movf	??_main^(0+128),w
  1384  086A  00F3               	movwf	___xxtofl@val
  1385  086B  3001               	movlw	1
  1386  086C  160A  118A  203B  120A  158A  	fcall	___xxtofl
  1387  0871  0876               	movf	?___xxtofl+3,w
  1388  0872  1283               	bcf	3,5	;RP0=0, select bank0
  1389  0873  1303               	bcf	3,6	;RP1=0, select bank0
  1390  0874  00B1               	movwf	___flmul@a+3
  1391  0875  0875               	movf	?___xxtofl+2,w
  1392  0876  00B0               	movwf	___flmul@a+2
  1393  0877  0874               	movf	?___xxtofl+1,w
  1394  0878  00AF               	movwf	___flmul@a+1
  1395  0879  0873               	movf	?___xxtofl,w
  1396  087A  00AE               	movwf	___flmul@a
  1397  087B  120A  158A  213C  120A  158A  	fcall	___flmul
  1398  0880  1283               	bcf	3,5	;RP0=0, select bank0
  1399  0881  1303               	bcf	3,6	;RP1=0, select bank0
  1400  0882  082D               	movf	?___flmul+3,w
  1401  0883  1683               	bsf	3,5	;RP0=1, select bank1
  1402  0884  1303               	bcf	3,6	;RP1=0, select bank1
  1403  0885  00D4               	movwf	(_conversor+3)^(0+128)
  1404  0886  1283               	bcf	3,5	;RP0=0, select bank0
  1405  0887  1303               	bcf	3,6	;RP1=0, select bank0
  1406  0888  082C               	movf	?___flmul+2,w
  1407  0889  1683               	bsf	3,5	;RP0=1, select bank1
  1408  088A  1303               	bcf	3,6	;RP1=0, select bank1
  1409  088B  00D3               	movwf	(_conversor+2)^(0+128)
  1410  088C  1283               	bcf	3,5	;RP0=0, select bank0
  1411  088D  1303               	bcf	3,6	;RP1=0, select bank0
  1412  088E  082B               	movf	?___flmul+1,w
  1413  088F  1683               	bsf	3,5	;RP0=1, select bank1
  1414  0890  1303               	bcf	3,6	;RP1=0, select bank1
  1415  0891  00D2               	movwf	(_conversor+1)^(0+128)
  1416  0892  1283               	bcf	3,5	;RP0=0, select bank0
  1417  0893  1303               	bcf	3,6	;RP1=0, select bank0
  1418  0894  082A               	movf	?___flmul,w
  1419  0895  1683               	bsf	3,5	;RP0=1, select bank1
  1420  0896  1303               	bcf	3,6	;RP1=0, select bank1
  1421  0897  00D1               	movwf	_conversor^(0+128)
  1422  0898                     l4096:
  1423                           
  1424                           ;main.c: 101:         Lcd_Set_Cursor(2, 1);
  1425  0898  01F7               	clrf	Lcd_Set_Cursor@b
  1426  0899  0AF7               	incf	Lcd_Set_Cursor@b,f
  1427  089A  3002               	movlw	2
  1428  089B  160A  158A  2368  120A  158A  	fcall	_Lcd_Set_Cursor
  1429  08A0                     l4098:
  1430                           
  1431                           ;main.c: 102:         sprintf (s,"%3.2fV" ,conversor);
  1432  08A0  30A0               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1433  08A1  1683               	bsf	3,5	;RP0=1, select bank1
  1434  08A2  1303               	bcf	3,6	;RP1=0, select bank1
  1435  08A3  00CD               	movwf	??_main^(0+128)
  1436  08A4  084D               	movf	??_main^(0+128),w
  1437  08A5  00A8               	movwf	sprintf@f^(0+128)
  1438  08A6  0854               	movf	(_conversor+3)^(0+128),w
  1439  08A7  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1440  08A8  0853               	movf	(_conversor+2)^(0+128),w
  1441  08A9  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1442  08AA  0852               	movf	(_conversor+1)^(0+128),w
  1443  08AB  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1444  08AC  0851               	movf	_conversor^(0+128),w
  1445  08AD  00A9               	movwf	(?_sprintf^(0+128)+1)
  1446  08AE  30D5               	movlw	(low (_s| 0))& (0+255)
  1447  08AF  160A  118A  24FC  120A  158A  	fcall	_sprintf
  1448  08B4                     l4100:
  1449                           
  1450                           ;main.c: 103:         Lcd_Write_String (s);
  1451  08B4  30D5               	movlw	(low (_s| 0))& (0+255)
  1452  08B5  00F8               	movwf	Lcd_Write_String@a
  1453  08B6  3000               	movlw	0
  1454  08B7  00F9               	movwf	Lcd_Write_String@a+1
  1455  08B8  160A  158A  23ED  120A  158A  	fcall	_Lcd_Write_String
  1456  08BD                     l4102:
  1457                           
  1458                           ;main.c: 104:         conversor=0.0195*S2;
  1459  08BD  303C               	movlw	60
  1460  08BE  1283               	bcf	3,5	;RP0=0, select bank0
  1461  08BF  1303               	bcf	3,6	;RP1=0, select bank0
  1462  08C0  00AD               	movwf	___flmul@b+3
  1463  08C1  309F               	movlw	159
  1464  08C2  00AC               	movwf	___flmul@b+2
  1465  08C3  30BE               	movlw	190
  1466  08C4  00AB               	movwf	___flmul@b+1
  1467  08C5  3077               	movlw	119
  1468  08C6  00AA               	movwf	___flmul@b
  1469  08C7  1683               	bsf	3,5	;RP0=1, select bank1
  1470  08C8  1303               	bcf	3,6	;RP1=0, select bank1
  1471  08C9  0869               	movf	_S2^(0+128),w
  1472  08CA  00CD               	movwf	??_main^(0+128)
  1473  08CB  01CE               	clrf	(??_main^(0+128)+1)
  1474  08CC  01CF               	clrf	(??_main^(0+128)+2)
  1475  08CD  01D0               	clrf	(??_main^(0+128)+3)
  1476  08CE  0850               	movf	(??_main+3)^(0+128),w
  1477  08CF  00F6               	movwf	___xxtofl@val+3
  1478  08D0  084F               	movf	(??_main+2)^(0+128),w
  1479  08D1  00F5               	movwf	___xxtofl@val+2
  1480  08D2  084E               	movf	(??_main+1)^(0+128),w
  1481  08D3  00F4               	movwf	___xxtofl@val+1
  1482  08D4  084D               	movf	??_main^(0+128),w
  1483  08D5  00F3               	movwf	___xxtofl@val
  1484  08D6  3001               	movlw	1
  1485  08D7  160A  118A  203B  120A  158A  	fcall	___xxtofl
  1486  08DC  0876               	movf	?___xxtofl+3,w
  1487  08DD  1283               	bcf	3,5	;RP0=0, select bank0
  1488  08DE  1303               	bcf	3,6	;RP1=0, select bank0
  1489  08DF  00B1               	movwf	___flmul@a+3
  1490  08E0  0875               	movf	?___xxtofl+2,w
  1491  08E1  00B0               	movwf	___flmul@a+2
  1492  08E2  0874               	movf	?___xxtofl+1,w
  1493  08E3  00AF               	movwf	___flmul@a+1
  1494  08E4  0873               	movf	?___xxtofl,w
  1495  08E5  00AE               	movwf	___flmul@a
  1496  08E6  120A  158A  213C  120A  158A  	fcall	___flmul
  1497  08EB  1283               	bcf	3,5	;RP0=0, select bank0
  1498  08EC  1303               	bcf	3,6	;RP1=0, select bank0
  1499  08ED  082D               	movf	?___flmul+3,w
  1500  08EE  1683               	bsf	3,5	;RP0=1, select bank1
  1501  08EF  1303               	bcf	3,6	;RP1=0, select bank1
  1502  08F0  00D4               	movwf	(_conversor+3)^(0+128)
  1503  08F1  1283               	bcf	3,5	;RP0=0, select bank0
  1504  08F2  1303               	bcf	3,6	;RP1=0, select bank0
  1505  08F3  082C               	movf	?___flmul+2,w
  1506  08F4  1683               	bsf	3,5	;RP0=1, select bank1
  1507  08F5  1303               	bcf	3,6	;RP1=0, select bank1
  1508  08F6  00D3               	movwf	(_conversor+2)^(0+128)
  1509  08F7  1283               	bcf	3,5	;RP0=0, select bank0
  1510  08F8  1303               	bcf	3,6	;RP1=0, select bank0
  1511  08F9  082B               	movf	?___flmul+1,w
  1512  08FA  1683               	bsf	3,5	;RP0=1, select bank1
  1513  08FB  1303               	bcf	3,6	;RP1=0, select bank1
  1514  08FC  00D2               	movwf	(_conversor+1)^(0+128)
  1515  08FD  1283               	bcf	3,5	;RP0=0, select bank0
  1516  08FE  1303               	bcf	3,6	;RP1=0, select bank0
  1517  08FF  082A               	movf	?___flmul,w
  1518  0900  1683               	bsf	3,5	;RP0=1, select bank1
  1519  0901  1303               	bcf	3,6	;RP1=0, select bank1
  1520  0902  00D1               	movwf	_conversor^(0+128)
  1521  0903                     l4104:
  1522                           
  1523                           ;main.c: 105:          Lcd_Set_Cursor(2, 7);
  1524  0903  3007               	movlw	7
  1525  0904  00CD               	movwf	??_main^(0+128)
  1526  0905  084D               	movf	??_main^(0+128),w
  1527  0906  00F7               	movwf	Lcd_Set_Cursor@b
  1528  0907  3002               	movlw	2
  1529  0908  160A  158A  2368  120A  158A  	fcall	_Lcd_Set_Cursor
  1530  090D                     l4106:
  1531                           
  1532                           ;main.c: 106:         sprintf (s,"%3.2fV" ,conversor);
  1533  090D  30A0               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1534  090E  1683               	bsf	3,5	;RP0=1, select bank1
  1535  090F  1303               	bcf	3,6	;RP1=0, select bank1
  1536  0910  00CD               	movwf	??_main^(0+128)
  1537  0911  084D               	movf	??_main^(0+128),w
  1538  0912  00A8               	movwf	sprintf@f^(0+128)
  1539  0913  0854               	movf	(_conversor+3)^(0+128),w
  1540  0914  00AC               	movwf	((?_sprintf+3)^(0+128)+1)
  1541  0915  0853               	movf	(_conversor+2)^(0+128),w
  1542  0916  00AB               	movwf	((?_sprintf+2)^(0+128)+1)
  1543  0917  0852               	movf	(_conversor+1)^(0+128),w
  1544  0918  00AA               	movwf	((?_sprintf+1)^(0+128)+1)
  1545  0919  0851               	movf	_conversor^(0+128),w
  1546  091A  00A9               	movwf	(?_sprintf^(0+128)+1)
  1547  091B  30D5               	movlw	(low (_s| 0))& (0+255)
  1548  091C  160A  118A  24FC  120A  158A  	fcall	_sprintf
  1549  0921                     l4108:
  1550                           
  1551                           ;main.c: 107:         Lcd_Write_String (s);
  1552  0921  30D5               	movlw	(low (_s| 0))& (0+255)
  1553  0922  00F8               	movwf	Lcd_Write_String@a
  1554  0923  3000               	movlw	0
  1555  0924  00F9               	movwf	Lcd_Write_String@a+1
  1556  0925  160A  158A  23ED  120A  158A  	fcall	_Lcd_Write_String
  1557  092A                     l4110:
  1558                           
  1559                           ;main.c: 108:         _delay((unsigned long)((250)*(8000000/4000.0)));
  1560  092A  3003               	movlw	3
  1561  092B  1683               	bsf	3,5	;RP0=1, select bank1
  1562  092C  1303               	bcf	3,6	;RP1=0, select bank1
  1563  092D  00CF               	movwf	(??_main^(0+128)+2)
  1564  092E  308A               	movlw	138
  1565  092F  00CE               	movwf	(??_main^(0+128)+1)
  1566  0930  3055               	movlw	85
  1567  0931  00CD               	movwf	??_main^(0+128)
  1568  0932                     u7077:
  1569  0932  0BCD               	decfsz	??_main^(0+128),f
  1570  0933  2932               	goto	u7077
  1571  0934  0BCE               	decfsz	(??_main^(0+128)+1),f
  1572  0935  2932               	goto	u7077
  1573  0936  0BCF               	decfsz	(??_main^(0+128)+2),f
  1574  0937  2932               	goto	u7077
  1575  0938  2829               	goto	l61
  1576  0939  120A  118A  280C   	ljmp	start
  1577  093C                     __end_of_main:
  1578                           
  1579                           	psect	text1
  1580  14FC                     __ptext1:	
  1581 ;; *************** function _sprintf *****************
  1582 ;; Defined at:
  1583 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1584 ;; Parameters:    Size  Location     Type
  1585 ;;  sp              1    wreg     PTR unsigned char 
  1586 ;;		 -> s(20), 
  1587 ;;  f               1    8[BANK1 ] PTR const unsigned char 
  1588 ;;		 -> STR_3(7), STR_2(7), 
  1589 ;; Auto vars:     Size  Location     Type
  1590 ;;  sp              1   41[BANK1 ] PTR unsigned char 
  1591 ;;		 -> s(20), 
  1592 ;;  fval            4   37[BANK1 ] PTR unsigned char 
  1593 ;;  tmpval          4   31[BANK1 ] struct .
  1594 ;;  val             4   23[BANK1 ] unsigned long 
  1595 ;;  prec            2   42[BANK1 ] int 
  1596 ;;  eexp            2   35[BANK1 ] int 
  1597 ;;  width           2   29[BANK1 ] int 
  1598 ;;  flag            2   27[BANK1 ] unsigned short 
  1599 ;;  cp              2    0        PTR const unsigned char 
  1600 ;;  len             2    0        unsigned int 
  1601 ;;  c               1   44[BANK1 ] unsigned char 
  1602 ;;  ap              1   22[BANK1 ] PTR void [1]
  1603 ;;		 -> ?_sprintf(2), 
  1604 ;;  d               1    0        unsigned char 
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  2    8[BANK1 ] int 
  1607 ;; Registers used:
  1608 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1614 ;;      Params:         0       0       5       0       0
  1615 ;;      Locals:         0       0      27       0       0
  1616 ;;      Temps:          0       0       5       0       0
  1617 ;;      Totals:         0       0      37       0       0
  1618 ;;Total ram usage:       37 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    4
  1621 ;; This function calls:
  1622 ;;		___awdiv
  1623 ;;		___fladd
  1624 ;;		___fleq
  1625 ;;		___flge
  1626 ;;		___flmul
  1627 ;;		___flneg
  1628 ;;		___flsub
  1629 ;;		___fltol
  1630 ;;		___lldiv
  1631 ;;		___llmod
  1632 ;;		___wmul
  1633 ;;		___xxtofl
  1634 ;;		__div_to_l_
  1635 ;;		__tdiv_to_l_
  1636 ;;		_fround
  1637 ;;		_isdigit
  1638 ;;		_scale
  1639 ;; This function is called by:
  1640 ;;		_main
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644                           
  1645                           ;psect for function _sprintf
  1646  14FC                     _sprintf:
  1647                           
  1648                           ;incstack = 0
  1649                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1650                           ;sprintf@sp stored from wreg
  1651  14FC  1683               	bsf	3,5	;RP0=1, select bank1
  1652  14FD  1303               	bcf	3,6	;RP1=0, select bank1
  1653  14FE  00C9               	movwf	sprintf@sp^(0+128)
  1654  14FF                     l3828:
  1655                           
  1656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1657  14FF  30A9               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1658  1500  00AD               	movwf	??_sprintf^(0+128)
  1659  1501  082D               	movf	??_sprintf^(0+128),w
  1660  1502  00B6               	movwf	sprintf@ap^(0+128)
  1661  1503                     L1:
  1662                           
  1663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1664  1503  120A  118A  2DAD   	goto	l4078
  1665  1506                     l3830:
  1666                           
  1667                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1668  1506  3025               	movlw	37
  1669  1507  064C               	xorwf	sprintf@c^(0+128),w
  1670  1508  1903               	btfsc	3,2
  1671  1509  2D0B               	goto	u6601
  1672  150A  2D0C               	goto	u6600
  1673  150B                     u6601:
  1674  150B  2D18               	goto	l3836
  1675  150C                     u6600:
  1676  150C                     l3832:
  1677                           
  1678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1679  150C  084C               	movf	sprintf@c^(0+128),w
  1680  150D  00AD               	movwf	??_sprintf^(0+128)
  1681  150E  0849               	movf	sprintf@sp^(0+128),w
  1682  150F  0084               	movwf	4
  1683  1510  082D               	movf	??_sprintf^(0+128),w
  1684  1511  1383               	bcf	3,7	;select IRP bank0
  1685  1512  0080               	movwf	0
  1686  1513                     l3834:
  1687  1513  3001               	movlw	1
  1688  1514  00AD               	movwf	??_sprintf^(0+128)
  1689  1515  082D               	movf	??_sprintf^(0+128),w
  1690  1516  07C9               	addwf	sprintf@sp^(0+128),f
  1691                           
  1692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1693  1517  2D03               	goto	L1
  1694  1518                     l3836:
  1695                           
  1696                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1697  1518  01BD               	clrf	sprintf@width^(0+128)
  1698  1519  01BE               	clrf	(sprintf@width+1)^(0+128)
  1699                           
  1700                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1701  151A  01BB               	clrf	sprintf@flag^(0+128)
  1702  151B  01BC               	clrf	(sprintf@flag+1)^(0+128)
  1703  151C                     l3838:
  1704                           
  1705                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1706  151C  0828               	movf	sprintf@f^(0+128),w
  1707  151D  0084               	movwf	4
  1708  151E  160A  158A  200A  160A  118A  	fcall	stringdir
  1709  1523  160A  158A  2311  160A  118A  	fcall	_isdigit
  1710  1528  1C03               	btfss	3,0
  1711  1529  2D2B               	goto	u6611
  1712  152A  2D2C               	goto	u6610
  1713  152B                     u6611:
  1714  152B  2D6C               	goto	l3850
  1715  152C                     u6610:
  1716  152C                     l3840:
  1717                           
  1718                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1719  152C  1683               	bsf	3,5	;RP0=1, select bank1
  1720  152D  1303               	bcf	3,6	;RP1=0, select bank1
  1721  152E  01BD               	clrf	sprintf@width^(0+128)
  1722  152F  01BE               	clrf	(sprintf@width+1)^(0+128)
  1723  1530                     l3842:
  1724                           
  1725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1726  1530  300A               	movlw	10
  1727  1531  00F3               	movwf	___wmul@multiplier
  1728  1532  3000               	movlw	0
  1729  1533  00F4               	movwf	___wmul@multiplier+1
  1730  1534  1683               	bsf	3,5	;RP0=1, select bank1
  1731  1535  1303               	bcf	3,6	;RP1=0, select bank1
  1732  1536  083E               	movf	(sprintf@width+1)^(0+128),w
  1733  1537  00F6               	movwf	___wmul@multiplicand+1
  1734  1538  083D               	movf	sprintf@width^(0+128),w
  1735  1539  00F5               	movwf	___wmul@multiplicand
  1736  153A  160A  158A  2343  160A  118A  	fcall	___wmul
  1737  153F  0874               	movf	?___wmul+1,w
  1738  1540  1683               	bsf	3,5	;RP0=1, select bank1
  1739  1541  1303               	bcf	3,6	;RP1=0, select bank1
  1740  1542  00BE               	movwf	(sprintf@width+1)^(0+128)
  1741  1543  0873               	movf	?___wmul,w
  1742  1544  00BD               	movwf	sprintf@width^(0+128)
  1743  1545                     l3844:
  1744                           
  1745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1746  1545  0828               	movf	sprintf@f^(0+128),w
  1747  1546  0084               	movwf	4
  1748  1547  160A  158A  200A  160A  118A  	fcall	stringdir
  1749  154C  3ED0               	addlw	208
  1750  154D  00AD               	movwf	??_sprintf^(0+128)
  1751  154E  30FF               	movlw	255
  1752  154F  1803               	skipnc
  1753  1550  3000               	movlw	0
  1754  1551  00AE               	movwf	(??_sprintf^(0+128)+1)
  1755  1552  082D               	movf	??_sprintf^(0+128),w
  1756  1553  07BD               	addwf	sprintf@width^(0+128),f
  1757  1554  1803               	skipnc
  1758  1555  0ABE               	incf	(sprintf@width+1)^(0+128),f
  1759  1556  082E               	movf	(??_sprintf+1)^(0+128),w
  1760  1557  07BE               	addwf	(sprintf@width+1)^(0+128),f
  1761  1558                     l3846:
  1762  1558  3001               	movlw	1
  1763  1559  00AD               	movwf	??_sprintf^(0+128)
  1764  155A  082D               	movf	??_sprintf^(0+128),w
  1765  155B  07A8               	addwf	sprintf@f^(0+128),f
  1766  155C                     l3848:
  1767                           
  1768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1769  155C  0828               	movf	sprintf@f^(0+128),w
  1770  155D  0084               	movwf	4
  1771  155E  160A  158A  200A  160A  118A  	fcall	stringdir
  1772  1563  160A  158A  2311  160A  118A  	fcall	_isdigit
  1773  1568  1803               	btfsc	3,0
  1774  1569  2D6B               	goto	u6621
  1775  156A  2D6C               	goto	u6620
  1776  156B                     u6621:
  1777  156B  2D30               	goto	l3842
  1778  156C                     u6620:
  1779  156C                     l3850:
  1780                           
  1781                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1782  156C  1683               	bsf	3,5	;RP0=1, select bank1
  1783  156D  1303               	bcf	3,6	;RP1=0, select bank1
  1784  156E  0828               	movf	sprintf@f^(0+128),w
  1785  156F  0084               	movwf	4
  1786  1570  160A  158A  200A  160A  118A  	fcall	stringdir
  1787  1575  3A2E               	xorlw	46
  1788  1576  1D03               	skipz
  1789  1577  2D79               	goto	u6631
  1790  1578  2D7A               	goto	u6630
  1791  1579                     u6631:
  1792  1579  2DBF               	goto	l3866
  1793  157A                     u6630:
  1794  157A                     l3852:
  1795                           
  1796                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1797  157A  173C               	bsf	(sprintf@flag^(0+128)+1),6
  1798  157B                     l3854:
  1799                           
  1800                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1801  157B  3001               	movlw	1
  1802  157C  00AD               	movwf	??_sprintf^(0+128)
  1803  157D  082D               	movf	??_sprintf^(0+128),w
  1804  157E  07A8               	addwf	sprintf@f^(0+128),f
  1805  157F                     l3856:
  1806                           
  1807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1808  157F  01CA               	clrf	sprintf@prec^(0+128)
  1809  1580  01CB               	clrf	(sprintf@prec+1)^(0+128)
  1810                           
  1811                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1812  1581  2DAE               	goto	l3864
  1813  1582                     l3858:
  1814                           
  1815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1816  1582  300A               	movlw	10
  1817  1583  00F3               	movwf	___wmul@multiplier
  1818  1584  3000               	movlw	0
  1819  1585  00F4               	movwf	___wmul@multiplier+1
  1820  1586  1683               	bsf	3,5	;RP0=1, select bank1
  1821  1587  1303               	bcf	3,6	;RP1=0, select bank1
  1822  1588  084B               	movf	(sprintf@prec+1)^(0+128),w
  1823  1589  00F6               	movwf	___wmul@multiplicand+1
  1824  158A  084A               	movf	sprintf@prec^(0+128),w
  1825  158B  00F5               	movwf	___wmul@multiplicand
  1826  158C  160A  158A  2343  160A  118A  	fcall	___wmul
  1827  1591  0874               	movf	?___wmul+1,w
  1828  1592  1683               	bsf	3,5	;RP0=1, select bank1
  1829  1593  1303               	bcf	3,6	;RP1=0, select bank1
  1830  1594  00CB               	movwf	(sprintf@prec+1)^(0+128)
  1831  1595  0873               	movf	?___wmul,w
  1832  1596  00CA               	movwf	sprintf@prec^(0+128)
  1833  1597                     l3860:
  1834                           
  1835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1836  1597  0828               	movf	sprintf@f^(0+128),w
  1837  1598  0084               	movwf	4
  1838  1599  160A  158A  200A  160A  118A  	fcall	stringdir
  1839  159E  3ED0               	addlw	208
  1840  159F  00AD               	movwf	??_sprintf^(0+128)
  1841  15A0  30FF               	movlw	255
  1842  15A1  1803               	skipnc
  1843  15A2  3000               	movlw	0
  1844  15A3  00AE               	movwf	(??_sprintf^(0+128)+1)
  1845  15A4  082D               	movf	??_sprintf^(0+128),w
  1846  15A5  07CA               	addwf	sprintf@prec^(0+128),f
  1847  15A6  1803               	skipnc
  1848  15A7  0ACB               	incf	(sprintf@prec+1)^(0+128),f
  1849  15A8  082E               	movf	(??_sprintf+1)^(0+128),w
  1850  15A9  07CB               	addwf	(sprintf@prec+1)^(0+128),f
  1851  15AA                     l3862:
  1852  15AA  3001               	movlw	1
  1853  15AB  00AD               	movwf	??_sprintf^(0+128)
  1854  15AC  082D               	movf	??_sprintf^(0+128),w
  1855  15AD  07A8               	addwf	sprintf@f^(0+128),f
  1856  15AE                     l3864:
  1857                           
  1858                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1859  15AE  0828               	movf	sprintf@f^(0+128),w
  1860  15AF  0084               	movwf	4
  1861  15B0  160A  158A  200A  160A  118A  	fcall	stringdir
  1862  15B5  160A  158A  2311  160A  118A  	fcall	_isdigit
  1863  15BA  1803               	btfsc	3,0
  1864  15BB  2DBD               	goto	u6641
  1865  15BC  2DBE               	goto	u6640
  1866  15BD                     u6641:
  1867  15BD  2D82               	goto	l3858
  1868  15BE                     u6640:
  1869  15BE  2DC5               	goto	l3872
  1870  15BF                     l3866:
  1871                           
  1872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1873  15BF  01CA               	clrf	sprintf@prec^(0+128)
  1874  15C0  01CB               	clrf	(sprintf@prec+1)^(0+128)
  1875  15C1                     l3868:
  1876                           
  1877                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1878  15C1  163C               	bsf	(sprintf@flag^(0+128)+1),4
  1879  15C2  2DC5               	goto	l3872
  1880  15C3                     l256:	
  1881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1882                           
  1883                           
  1884                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1885  15C3  153C               	bsf	(sprintf@flag^(0+128)+1),2
  1886                           
  1887                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1888  15C4  2DE1               	goto	l3874
  1889  15C5                     l3872:
  1890  15C5  3001               	movlw	1
  1891  15C6  1683               	bsf	3,5	;RP0=1, select bank1
  1892  15C7  1303               	bcf	3,6	;RP1=0, select bank1
  1893  15C8  07A8               	addwf	sprintf@f^(0+128),f
  1894  15C9  30FF               	movlw	-1
  1895  15CA  0728               	addwf	sprintf@f^(0+128),w
  1896  15CB  0084               	movwf	4
  1897  15CC  160A  158A  200A  160A  118A  	fcall	stringdir
  1898  15D1  00CC               	movwf	sprintf@c^(0+128)
  1899  15D2  00AD               	movwf	??_sprintf^(0+128)
  1900  15D3  01AE               	clrf	(??_sprintf^(0+128)+1)
  1901                           
  1902                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1903                           ; Switch size 1, requested type "simple"
  1904                           ; Number of cases is 1, Range of values is 0 to 0
  1905                           ; switch strategies available:
  1906                           ; Name         Instructions Cycles
  1907                           ; simple_byte            4     3 (average)
  1908                           ; direct_byte           11     8 (fixed)
  1909                           ; jumptable            260     6 (fixed)
  1910                           ;	Chosen strategy is simple_byte
  1911  15D4  082E               	movf	(??_sprintf+1)^(0+128),w
  1912  15D5  3A00               	xorlw	0	; case 0
  1913  15D6  1903               	skipnz
  1914  15D7  2DD9               	goto	l4146
  1915  15D8  2D03               	goto	L1
  1916  15D9                     l4146:
  1917                           
  1918                           ; Switch size 1, requested type "simple"
  1919                           ; Number of cases is 2, Range of values is 0 to 102
  1920                           ; switch strategies available:
  1921                           ; Name         Instructions Cycles
  1922                           ; simple_byte            7     4 (average)
  1923                           ; jumptable            260     6 (fixed)
  1924                           ;	Chosen strategy is simple_byte
  1925  15D9  082D               	movf	??_sprintf^(0+128),w
  1926  15DA  3A00               	xorlw	0	; case 0
  1927  15DB  1903               	skipnz
  1928  15DC  2FFD               	goto	L3
  1929  15DD  3A66               	xorlw	102	; case 102
  1930  15DE  1903               	skipnz
  1931  15DF  2DC3               	goto	l256
  1932  15E0  2D03               	goto	L1
  1933  15E1                     l3874:
  1934                           
  1935                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1936  15E1  3000               	movlw	0
  1937  15E2  053B               	andwf	sprintf@flag^(0+128),w
  1938  15E3  00AD               	movwf	??_sprintf^(0+128)
  1939  15E4  3007               	movlw	7
  1940  15E5  053C               	andwf	(sprintf@flag+1)^(0+128),w
  1941  15E6  00AE               	movwf	(??_sprintf+1)^(0+128)
  1942  15E7  082D               	movf	??_sprintf^(0+128),w
  1943  15E8  042E               	iorwf	(??_sprintf^(0+128)+1),w
  1944  15E9  1903               	btfsc	3,2
  1945  15EA  2DEC               	goto	u6651
  1946  15EB  2DEF               	goto	u6650
  1947  15EC                     u6651:
  1948  15EC  120A  118A  2CE8   	goto	l4032
  1949  15EF                     u6650:
  1950  15EF                     l3876:
  1951                           
  1952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1953  15EF  1E3C               	btfss	(sprintf@flag+1)^(0+128),4
  1954  15F0  2DF2               	goto	u6661
  1955  15F1  2DF3               	goto	u6660
  1956  15F2                     u6661:
  1957  15F2  2DF7               	goto	l3880
  1958  15F3                     u6660:
  1959  15F3                     l3878:
  1960                           
  1961                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1962  15F3  3006               	movlw	6
  1963  15F4  00CA               	movwf	sprintf@prec^(0+128)
  1964  15F5  3000               	movlw	0
  1965  15F6  00CB               	movwf	(sprintf@prec^(0+128)+1)
  1966  15F7                     l3880:
  1967                           
  1968                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  1969  15F7  0836               	movf	sprintf@ap^(0+128),w
  1970  15F8  0084               	movwf	4
  1971  15F9  1383               	bcf	3,7	;select IRP bank0
  1972  15FA  0800               	movf	0,w
  1973  15FB  00C5               	movwf	sprintf@fval^(0+128)
  1974  15FC  0A84               	incf	4,f
  1975  15FD  0800               	movf	0,w
  1976  15FE  00C6               	movwf	(sprintf@fval+1)^(0+128)
  1977  15FF  0A84               	incf	4,f
  1978  1600  0800               	movf	0,w
  1979  1601  00C7               	movwf	(sprintf@fval+2)^(0+128)
  1980  1602  0A84               	incf	4,f
  1981  1603  0800               	movf	0,w
  1982  1604  00C8               	movwf	(sprintf@fval+3)^(0+128)
  1983  1605                     l3882:
  1984  1605  3004               	movlw	4
  1985  1606  00AD               	movwf	??_sprintf^(0+128)
  1986  1607  082D               	movf	??_sprintf^(0+128),w
  1987  1608  07B6               	addwf	sprintf@ap^(0+128),f
  1988  1609                     l3884:
  1989                           
  1990                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  1991  1609  0848               	movf	(sprintf@fval+3)^(0+128),w
  1992  160A  1283               	bcf	3,5	;RP0=0, select bank0
  1993  160B  1303               	bcf	3,6	;RP1=0, select bank0
  1994  160C  00A3               	movwf	___flge@ff1+3
  1995  160D  1683               	bsf	3,5	;RP0=1, select bank1
  1996  160E  1303               	bcf	3,6	;RP1=0, select bank1
  1997  160F  0847               	movf	(sprintf@fval+2)^(0+128),w
  1998  1610  1283               	bcf	3,5	;RP0=0, select bank0
  1999  1611  1303               	bcf	3,6	;RP1=0, select bank0
  2000  1612  00A2               	movwf	___flge@ff1+2
  2001  1613  1683               	bsf	3,5	;RP0=1, select bank1
  2002  1614  1303               	bcf	3,6	;RP1=0, select bank1
  2003  1615  0846               	movf	(sprintf@fval+1)^(0+128),w
  2004  1616  1283               	bcf	3,5	;RP0=0, select bank0
  2005  1617  1303               	bcf	3,6	;RP1=0, select bank0
  2006  1618  00A1               	movwf	___flge@ff1+1
  2007  1619  1683               	bsf	3,5	;RP0=1, select bank1
  2008  161A  1303               	bcf	3,6	;RP1=0, select bank1
  2009  161B  0845               	movf	sprintf@fval^(0+128),w
  2010  161C  1283               	bcf	3,5	;RP0=0, select bank0
  2011  161D  1303               	bcf	3,6	;RP1=0, select bank0
  2012  161E  00A0               	movwf	___flge@ff1
  2013  161F  3000               	movlw	0
  2014  1620  00A7               	movwf	___flge@ff2+3
  2015  1621  3000               	movlw	0
  2016  1622  00A6               	movwf	___flge@ff2+2
  2017  1623  3000               	movlw	0
  2018  1624  00A5               	movwf	___flge@ff2+1
  2019  1625  3000               	movlw	0
  2020  1626  00A4               	movwf	___flge@ff2
  2021  1627  160A  158A  275C  160A  118A  	fcall	___flge
  2022  162C  1803               	btfsc	3,0
  2023  162D  2E2F               	goto	u6671
  2024  162E  2E30               	goto	u6670
  2025  162F                     u6671:
  2026  162F  2E4D               	goto	l3890
  2027  1630                     u6670:
  2028  1630                     l3886:
  2029                           
  2030                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2031  1630  1683               	bsf	3,5	;RP0=1, select bank1
  2032  1631  1303               	bcf	3,6	;RP1=0, select bank1
  2033  1632  0848               	movf	(sprintf@fval+3)^(0+128),w
  2034  1633  00F6               	movwf	___flneg@f1+3
  2035  1634  0847               	movf	(sprintf@fval+2)^(0+128),w
  2036  1635  00F5               	movwf	___flneg@f1+2
  2037  1636  0846               	movf	(sprintf@fval+1)^(0+128),w
  2038  1637  00F4               	movwf	___flneg@f1+1
  2039  1638  0845               	movf	sprintf@fval^(0+128),w
  2040  1639  00F3               	movwf	___flneg@f1
  2041  163A  160A  158A  22EC  160A  118A  	fcall	___flneg
  2042  163F  0876               	movf	?___flneg+3,w
  2043  1640  1683               	bsf	3,5	;RP0=1, select bank1
  2044  1641  1303               	bcf	3,6	;RP1=0, select bank1
  2045  1642  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2046  1643  0875               	movf	?___flneg+2,w
  2047  1644  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2048  1645  0874               	movf	?___flneg+1,w
  2049  1646  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2050  1647  0873               	movf	?___flneg,w
  2051  1648  00C5               	movwf	sprintf@fval^(0+128)
  2052  1649                     l3888:
  2053                           
  2054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2055  1649  3003               	movlw	3
  2056  164A  04BB               	iorwf	sprintf@flag^(0+128),f
  2057  164B  3000               	movlw	0
  2058  164C  04BC               	iorwf	(sprintf@flag+1)^(0+128),f
  2059  164D                     l3890:
  2060                           
  2061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2062  164D  1683               	bsf	3,5	;RP0=1, select bank1
  2063  164E  1303               	bcf	3,6	;RP1=0, select bank1
  2064  164F  01C3               	clrf	sprintf@eexp^(0+128)
  2065  1650  01C4               	clrf	(sprintf@eexp+1)^(0+128)
  2066  1651                     l3892:
  2067                           
  2068                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2069  1651  0848               	movf	(sprintf@fval+3)^(0+128),w
  2070  1652  1283               	bcf	3,5	;RP0=0, select bank0
  2071  1653  1303               	bcf	3,6	;RP1=0, select bank0
  2072  1654  00A3               	movwf	___fleq@ff1+3
  2073  1655  1683               	bsf	3,5	;RP0=1, select bank1
  2074  1656  1303               	bcf	3,6	;RP1=0, select bank1
  2075  1657  0847               	movf	(sprintf@fval+2)^(0+128),w
  2076  1658  1283               	bcf	3,5	;RP0=0, select bank0
  2077  1659  1303               	bcf	3,6	;RP1=0, select bank0
  2078  165A  00A2               	movwf	___fleq@ff1+2
  2079  165B  1683               	bsf	3,5	;RP0=1, select bank1
  2080  165C  1303               	bcf	3,6	;RP1=0, select bank1
  2081  165D  0846               	movf	(sprintf@fval+1)^(0+128),w
  2082  165E  1283               	bcf	3,5	;RP0=0, select bank0
  2083  165F  1303               	bcf	3,6	;RP1=0, select bank0
  2084  1660  00A1               	movwf	___fleq@ff1+1
  2085  1661  1683               	bsf	3,5	;RP0=1, select bank1
  2086  1662  1303               	bcf	3,6	;RP1=0, select bank1
  2087  1663  0845               	movf	sprintf@fval^(0+128),w
  2088  1664  1283               	bcf	3,5	;RP0=0, select bank0
  2089  1665  1303               	bcf	3,6	;RP1=0, select bank0
  2090  1666  00A0               	movwf	___fleq@ff1
  2091  1667  3000               	movlw	0
  2092  1668  00A7               	movwf	___fleq@ff2+3
  2093  1669  3000               	movlw	0
  2094  166A  00A6               	movwf	___fleq@ff2+2
  2095  166B  3000               	movlw	0
  2096  166C  00A5               	movwf	___fleq@ff2+1
  2097  166D  3000               	movlw	0
  2098  166E  00A4               	movwf	___fleq@ff2
  2099  166F  160A  158A  24C0  160A  118A  	fcall	___fleq
  2100  1674  1803               	btfsc	3,0
  2101  1675  2E77               	goto	u6681
  2102  1676  2E78               	goto	u6680
  2103  1677                     u6681:
  2104  1677  2F94               	goto	l3918
  2105  1678                     u6680:
  2106  1678                     l3894:
  2107                           
  2108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2109  1678  1003               	clrc
  2110  1679  1683               	bsf	3,5	;RP0=1, select bank1
  2111  167A  1303               	bcf	3,6	;RP1=0, select bank1
  2112  167B  0D47               	rlf	(sprintf@fval+2)^(0+128),w
  2113  167C  0D48               	rlf	(sprintf@fval+3)^(0+128),w
  2114  167D  3E82               	addlw	130
  2115  167E  00C3               	movwf	sprintf@eexp^(0+128)
  2116  167F  30FF               	movlw	255
  2117  1680  1803               	skipnc
  2118  1681  3000               	movlw	0
  2119  1682  00C4               	movwf	(sprintf@eexp^(0+128)+1)
  2120  1683                     l3896:
  2121                           
  2122                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2123  1683  30FF               	movlw	255
  2124  1684  07C3               	addwf	sprintf@eexp^(0+128),f
  2125  1685  1803               	skipnc
  2126  1686  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2127  1687  30FF               	movlw	255
  2128  1688  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2129  1689                     l3898:
  2130                           
  2131                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2132  1689  3003               	movlw	3
  2133  168A  00F3               	movwf	___wmul@multiplier
  2134  168B  3000               	movlw	0
  2135  168C  00F4               	movwf	___wmul@multiplier+1
  2136  168D  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2137  168E  00F6               	movwf	___wmul@multiplicand+1
  2138  168F  0843               	movf	sprintf@eexp^(0+128),w
  2139  1690  00F5               	movwf	___wmul@multiplicand
  2140  1691  160A  158A  2343  160A  118A  	fcall	___wmul
  2141  1696  0874               	movf	?___wmul+1,w
  2142  1697  1683               	bsf	3,5	;RP0=1, select bank1
  2143  1698  1303               	bcf	3,6	;RP1=0, select bank1
  2144  1699  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2145  169A  0873               	movf	?___wmul,w
  2146  169B  00C3               	movwf	sprintf@eexp^(0+128)
  2147  169C                     l3900:
  2148                           
  2149                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2150  169C  300A               	movlw	10
  2151  169D  1283               	bcf	3,5	;RP0=0, select bank0
  2152  169E  1303               	bcf	3,6	;RP1=0, select bank0
  2153  169F  00A0               	movwf	___awdiv@divisor
  2154  16A0  3000               	movlw	0
  2155  16A1  00A1               	movwf	___awdiv@divisor+1
  2156  16A2  1683               	bsf	3,5	;RP0=1, select bank1
  2157  16A3  1303               	bcf	3,6	;RP1=0, select bank1
  2158  16A4  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2159  16A5  1283               	bcf	3,5	;RP0=0, select bank0
  2160  16A6  1303               	bcf	3,6	;RP1=0, select bank0
  2161  16A7  00A3               	movwf	___awdiv@dividend+1
  2162  16A8  1683               	bsf	3,5	;RP0=1, select bank1
  2163  16A9  1303               	bcf	3,6	;RP1=0, select bank1
  2164  16AA  0843               	movf	sprintf@eexp^(0+128),w
  2165  16AB  1283               	bcf	3,5	;RP0=0, select bank0
  2166  16AC  1303               	bcf	3,6	;RP1=0, select bank0
  2167  16AD  00A2               	movwf	___awdiv@dividend
  2168  16AE  160A  158A  2677  160A  118A  	fcall	___awdiv
  2169  16B3  1283               	bcf	3,5	;RP0=0, select bank0
  2170  16B4  1303               	bcf	3,6	;RP1=0, select bank0
  2171  16B5  0821               	movf	?___awdiv+1,w
  2172  16B6  1683               	bsf	3,5	;RP0=1, select bank1
  2173  16B7  1303               	bcf	3,6	;RP1=0, select bank1
  2174  16B8  00C4               	movwf	(sprintf@eexp+1)^(0+128)
  2175  16B9  1283               	bcf	3,5	;RP0=0, select bank0
  2176  16BA  1303               	bcf	3,6	;RP1=0, select bank0
  2177  16BB  0820               	movf	?___awdiv,w
  2178  16BC  1683               	bsf	3,5	;RP0=1, select bank1
  2179  16BD  1303               	bcf	3,6	;RP1=0, select bank1
  2180  16BE  00C3               	movwf	sprintf@eexp^(0+128)
  2181  16BF                     l3902:
  2182                           
  2183                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2184  16BF  1FC4               	btfss	(sprintf@eexp+1)^(0+128),7
  2185  16C0  2EC2               	goto	u6691
  2186  16C1  2EC3               	goto	u6690
  2187  16C2                     u6691:
  2188  16C2  2EC9               	goto	l3906
  2189  16C3                     u6690:
  2190  16C3                     l3904:
  2191                           
  2192                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2193  16C3  30FF               	movlw	255
  2194  16C4  07C3               	addwf	sprintf@eexp^(0+128),f
  2195  16C5  1803               	skipnc
  2196  16C6  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2197  16C7  30FF               	movlw	255
  2198  16C8  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2199  16C9                     l3906:
  2200                           
  2201                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2202  16C9  0343               	decf	sprintf@eexp^(0+128),w
  2203  16CA  3AFF               	xorlw	255
  2204  16CB  120A  158A  249D  160A  118A  	fcall	_scale
  2205  16D0  1283               	bcf	3,5	;RP0=0, select bank0
  2206  16D1  1303               	bcf	3,6	;RP1=0, select bank0
  2207  16D2  0847               	movf	?_scale+3,w
  2208  16D3  1683               	bsf	3,5	;RP0=1, select bank1
  2209  16D4  1303               	bcf	3,6	;RP1=0, select bank1
  2210  16D5  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2211  16D6  1283               	bcf	3,5	;RP0=0, select bank0
  2212  16D7  1303               	bcf	3,6	;RP1=0, select bank0
  2213  16D8  0846               	movf	?_scale+2,w
  2214  16D9  1683               	bsf	3,5	;RP0=1, select bank1
  2215  16DA  1303               	bcf	3,6	;RP1=0, select bank1
  2216  16DB  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2217  16DC  1283               	bcf	3,5	;RP0=0, select bank0
  2218  16DD  1303               	bcf	3,6	;RP1=0, select bank0
  2219  16DE  0845               	movf	?_scale+1,w
  2220  16DF  1683               	bsf	3,5	;RP0=1, select bank1
  2221  16E0  1303               	bcf	3,6	;RP1=0, select bank1
  2222  16E1  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2223  16E2  1283               	bcf	3,5	;RP0=0, select bank0
  2224  16E3  1303               	bcf	3,6	;RP1=0, select bank0
  2225  16E4  0844               	movf	?_scale,w
  2226  16E5  1683               	bsf	3,5	;RP0=1, select bank1
  2227  16E6  1303               	bcf	3,6	;RP1=0, select bank1
  2228  16E7  00BF               	movwf	sprintf@tmpval^(0+128)
  2229  16E8                     l3908:
  2230                           
  2231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2232  16E8  0848               	movf	(sprintf@fval+3)^(0+128),w
  2233  16E9  1283               	bcf	3,5	;RP0=0, select bank0
  2234  16EA  1303               	bcf	3,6	;RP1=0, select bank0
  2235  16EB  00AD               	movwf	___flmul@b+3
  2236  16EC  1683               	bsf	3,5	;RP0=1, select bank1
  2237  16ED  1303               	bcf	3,6	;RP1=0, select bank1
  2238  16EE  0847               	movf	(sprintf@fval+2)^(0+128),w
  2239  16EF  1283               	bcf	3,5	;RP0=0, select bank0
  2240  16F0  1303               	bcf	3,6	;RP1=0, select bank0
  2241  16F1  00AC               	movwf	___flmul@b+2
  2242  16F2  1683               	bsf	3,5	;RP0=1, select bank1
  2243  16F3  1303               	bcf	3,6	;RP1=0, select bank1
  2244  16F4  0846               	movf	(sprintf@fval+1)^(0+128),w
  2245  16F5  1283               	bcf	3,5	;RP0=0, select bank0
  2246  16F6  1303               	bcf	3,6	;RP1=0, select bank0
  2247  16F7  00AB               	movwf	___flmul@b+1
  2248  16F8  1683               	bsf	3,5	;RP0=1, select bank1
  2249  16F9  1303               	bcf	3,6	;RP1=0, select bank1
  2250  16FA  0845               	movf	sprintf@fval^(0+128),w
  2251  16FB  1283               	bcf	3,5	;RP0=0, select bank0
  2252  16FC  1303               	bcf	3,6	;RP1=0, select bank0
  2253  16FD  00AA               	movwf	___flmul@b
  2254  16FE  1683               	bsf	3,5	;RP0=1, select bank1
  2255  16FF  1303               	bcf	3,6	;RP1=0, select bank1
  2256  1700  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2257  1701  1283               	bcf	3,5	;RP0=0, select bank0
  2258  1702  1303               	bcf	3,6	;RP1=0, select bank0
  2259  1703  00B1               	movwf	___flmul@a+3
  2260  1704  1683               	bsf	3,5	;RP0=1, select bank1
  2261  1705  1303               	bcf	3,6	;RP1=0, select bank1
  2262  1706  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2263  1707  1283               	bcf	3,5	;RP0=0, select bank0
  2264  1708  1303               	bcf	3,6	;RP1=0, select bank0
  2265  1709  00B0               	movwf	___flmul@a+2
  2266  170A  1683               	bsf	3,5	;RP0=1, select bank1
  2267  170B  1303               	bcf	3,6	;RP1=0, select bank1
  2268  170C  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2269  170D  1283               	bcf	3,5	;RP0=0, select bank0
  2270  170E  1303               	bcf	3,6	;RP1=0, select bank0
  2271  170F  00AF               	movwf	___flmul@a+1
  2272  1710  1683               	bsf	3,5	;RP0=1, select bank1
  2273  1711  1303               	bcf	3,6	;RP1=0, select bank1
  2274  1712  083F               	movf	sprintf@tmpval^(0+128),w
  2275  1713  1283               	bcf	3,5	;RP0=0, select bank0
  2276  1714  1303               	bcf	3,6	;RP1=0, select bank0
  2277  1715  00AE               	movwf	___flmul@a
  2278  1716  120A  158A  213C  160A  118A  	fcall	___flmul
  2279  171B  1283               	bcf	3,5	;RP0=0, select bank0
  2280  171C  1303               	bcf	3,6	;RP1=0, select bank0
  2281  171D  082D               	movf	?___flmul+3,w
  2282  171E  1683               	bsf	3,5	;RP0=1, select bank1
  2283  171F  1303               	bcf	3,6	;RP1=0, select bank1
  2284  1720  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  2285  1721  1283               	bcf	3,5	;RP0=0, select bank0
  2286  1722  1303               	bcf	3,6	;RP1=0, select bank0
  2287  1723  082C               	movf	?___flmul+2,w
  2288  1724  1683               	bsf	3,5	;RP0=1, select bank1
  2289  1725  1303               	bcf	3,6	;RP1=0, select bank1
  2290  1726  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  2291  1727  1283               	bcf	3,5	;RP0=0, select bank0
  2292  1728  1303               	bcf	3,6	;RP1=0, select bank0
  2293  1729  082B               	movf	?___flmul+1,w
  2294  172A  1683               	bsf	3,5	;RP0=1, select bank1
  2295  172B  1303               	bcf	3,6	;RP1=0, select bank1
  2296  172C  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  2297  172D  1283               	bcf	3,5	;RP0=0, select bank0
  2298  172E  1303               	bcf	3,6	;RP1=0, select bank0
  2299  172F  082A               	movf	?___flmul,w
  2300  1730  1683               	bsf	3,5	;RP0=1, select bank1
  2301  1731  1303               	bcf	3,6	;RP1=0, select bank1
  2302  1732  00BF               	movwf	sprintf@tmpval^(0+128)
  2303  1733                     l3910:
  2304                           
  2305                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2306  1733  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2307  1734  1283               	bcf	3,5	;RP0=0, select bank0
  2308  1735  1303               	bcf	3,6	;RP1=0, select bank0
  2309  1736  00A3               	movwf	___flge@ff1+3
  2310  1737  1683               	bsf	3,5	;RP0=1, select bank1
  2311  1738  1303               	bcf	3,6	;RP1=0, select bank1
  2312  1739  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2313  173A  1283               	bcf	3,5	;RP0=0, select bank0
  2314  173B  1303               	bcf	3,6	;RP1=0, select bank0
  2315  173C  00A2               	movwf	___flge@ff1+2
  2316  173D  1683               	bsf	3,5	;RP0=1, select bank1
  2317  173E  1303               	bcf	3,6	;RP1=0, select bank1
  2318  173F  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2319  1740  1283               	bcf	3,5	;RP0=0, select bank0
  2320  1741  1303               	bcf	3,6	;RP1=0, select bank0
  2321  1742  00A1               	movwf	___flge@ff1+1
  2322  1743  1683               	bsf	3,5	;RP0=1, select bank1
  2323  1744  1303               	bcf	3,6	;RP1=0, select bank1
  2324  1745  083F               	movf	sprintf@tmpval^(0+128),w
  2325  1746  1283               	bcf	3,5	;RP0=0, select bank0
  2326  1747  1303               	bcf	3,6	;RP1=0, select bank0
  2327  1748  00A0               	movwf	___flge@ff1
  2328  1749  303F               	movlw	63
  2329  174A  00A7               	movwf	___flge@ff2+3
  2330  174B  3080               	movlw	128
  2331  174C  00A6               	movwf	___flge@ff2+2
  2332  174D  3000               	movlw	0
  2333  174E  00A5               	movwf	___flge@ff2+1
  2334  174F  3000               	movlw	0
  2335  1750  00A4               	movwf	___flge@ff2
  2336  1751  160A  158A  275C  160A  118A  	fcall	___flge
  2337  1756  1803               	btfsc	3,0
  2338  1757  2F59               	goto	u6701
  2339  1758  2F5A               	goto	u6700
  2340  1759                     u6701:
  2341  1759  2F63               	goto	l3914
  2342  175A                     u6700:
  2343  175A                     l3912:
  2344                           
  2345                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2346  175A  30FF               	movlw	255
  2347  175B  1683               	bsf	3,5	;RP0=1, select bank1
  2348  175C  1303               	bcf	3,6	;RP1=0, select bank1
  2349  175D  07C3               	addwf	sprintf@eexp^(0+128),f
  2350  175E  1803               	skipnc
  2351  175F  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2352  1760  30FF               	movlw	255
  2353  1761  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2354  1762  2F94               	goto	l3918
  2355  1763                     l3914:
  2356  1763  1683               	bsf	3,5	;RP0=1, select bank1
  2357  1764  1303               	bcf	3,6	;RP1=0, select bank1
  2358  1765  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  2359  1766  1283               	bcf	3,5	;RP0=0, select bank0
  2360  1767  1303               	bcf	3,6	;RP1=0, select bank0
  2361  1768  00A3               	movwf	___flge@ff1+3
  2362  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2363  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2364  176B  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  2365  176C  1283               	bcf	3,5	;RP0=0, select bank0
  2366  176D  1303               	bcf	3,6	;RP1=0, select bank0
  2367  176E  00A2               	movwf	___flge@ff1+2
  2368  176F  1683               	bsf	3,5	;RP0=1, select bank1
  2369  1770  1303               	bcf	3,6	;RP1=0, select bank1
  2370  1771  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  2371  1772  1283               	bcf	3,5	;RP0=0, select bank0
  2372  1773  1303               	bcf	3,6	;RP1=0, select bank0
  2373  1774  00A1               	movwf	___flge@ff1+1
  2374  1775  1683               	bsf	3,5	;RP0=1, select bank1
  2375  1776  1303               	bcf	3,6	;RP1=0, select bank1
  2376  1777  083F               	movf	sprintf@tmpval^(0+128),w
  2377  1778  1283               	bcf	3,5	;RP0=0, select bank0
  2378  1779  1303               	bcf	3,6	;RP1=0, select bank0
  2379  177A  00A0               	movwf	___flge@ff1
  2380  177B  3041               	movlw	65
  2381  177C  00A7               	movwf	___flge@ff2+3
  2382  177D  3020               	movlw	32
  2383  177E  00A6               	movwf	___flge@ff2+2
  2384  177F  3000               	movlw	0
  2385  1780  00A5               	movwf	___flge@ff2+1
  2386  1781  3000               	movlw	0
  2387  1782  00A4               	movwf	___flge@ff2
  2388  1783  160A  158A  275C  160A  118A  	fcall	___flge
  2389  1788  1C03               	btfss	3,0
  2390  1789  2F8B               	goto	u6711
  2391  178A  2F8C               	goto	u6710
  2392  178B                     u6711:
  2393  178B  2F94               	goto	l3918
  2394  178C                     u6710:
  2395  178C                     l3916:
  2396                           
  2397                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2398  178C  3001               	movlw	1
  2399  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2400  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2401  178F  07C3               	addwf	sprintf@eexp^(0+128),f
  2402  1790  1803               	skipnc
  2403  1791  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  2404  1792  3000               	movlw	0
  2405  1793  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  2406  1794                     l3918:
  2407                           
  2408                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2409  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2410  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2411  1796  084B               	movf	(sprintf@prec+1)^(0+128),w
  2412  1797  3A80               	xorlw	128
  2413  1798  00FF               	movwf	btemp+1
  2414  1799  3080               	movlw	128
  2415  179A  027F               	subwf	btemp+1,w
  2416  179B  1D03               	skipz
  2417  179C  2F9F               	goto	u6725
  2418  179D  300D               	movlw	13
  2419  179E  024A               	subwf	sprintf@prec^(0+128),w
  2420  179F                     u6725:
  2421  179F  1803               	skipnc
  2422  17A0  2FA2               	goto	u6721
  2423  17A1  2FA3               	goto	u6720
  2424  17A2                     u6721:
  2425  17A2  2FEA               	goto	l3922
  2426  17A3                     u6720:
  2427  17A3                     l3920:
  2428                           
  2429                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2430  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2431  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2432  17A5  084A               	movf	sprintf@prec^(0+128),w
  2433  17A6  120A  118A  25C6  160A  118A  	fcall	_fround
  2434  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2435  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2436  17AD  0847               	movf	?_fround+3,w
  2437  17AE  00DB               	movwf	___fladd@b+3
  2438  17AF  0846               	movf	?_fround+2,w
  2439  17B0  00DA               	movwf	___fladd@b+2
  2440  17B1  0845               	movf	?_fround+1,w
  2441  17B2  00D9               	movwf	___fladd@b+1
  2442  17B3  0844               	movf	?_fround,w
  2443  17B4  00D8               	movwf	___fladd@b
  2444  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2445  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2446  17B7  0848               	movf	(sprintf@fval+3)^(0+128),w
  2447  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2448  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2449  17BA  00DF               	movwf	___fladd@a+3
  2450  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2451  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2452  17BD  0847               	movf	(sprintf@fval+2)^(0+128),w
  2453  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2454  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2455  17C0  00DE               	movwf	___fladd@a+2
  2456  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2457  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2458  17C3  0846               	movf	(sprintf@fval+1)^(0+128),w
  2459  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2460  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2461  17C6  00DD               	movwf	___fladd@a+1
  2462  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2463  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2464  17C9  0845               	movf	sprintf@fval^(0+128),w
  2465  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2466  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2467  17CC  00DC               	movwf	___fladd@a
  2468  17CD  160A  118A  2274  160A  118A  	fcall	___fladd
  2469  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2470  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2471  17D4  085B               	movf	?___fladd+3,w
  2472  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2473  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2474  17D7  00C8               	movwf	(sprintf@fval+3)^(0+128)
  2475  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2476  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2477  17DA  085A               	movf	?___fladd+2,w
  2478  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2479  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2480  17DD  00C7               	movwf	(sprintf@fval+2)^(0+128)
  2481  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2482  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2483  17E0  0859               	movf	?___fladd+1,w
  2484  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2485  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2486  17E3  00C6               	movwf	(sprintf@fval+1)^(0+128)
  2487  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2488  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2489  17E6  0858               	movf	?___fladd,w
  2490  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2491  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2492  17E9  00C5               	movwf	sprintf@fval^(0+128)
  2493  17EA                     l3922:
  2494                           
  2495                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2496  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2497  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2498  17EC  0844               	movf	(sprintf@eexp+1)^(0+128),w
  2499  17ED  3A80               	xorlw	128
  2500  17EE  00FF               	movwf	btemp+1
  2501  17EF  3080               	movlw	128
  2502  17F0  027F               	subwf	btemp+1,w
  2503  17F1  1D03               	skipz
  2504  17F2  2FF5               	goto	u6735
  2505  17F3  300A               	movlw	10
  2506  17F4  0243               	subwf	sprintf@eexp^(0+128),w
  2507  17F5                     u6735:
  2508  17F5  1803               	skipnc
  2509  17F6  2FFA               	goto	u6731
  2510  17F7  120A  118A  282E   	goto	u6730
  2511  17FA                     u6731:
  2512  17FA  120A  118A  288D   	goto	l3930
  2513  17FD                     L3:
  2514  17FD                     L2:
  2515  17FD  120A  118A  2DC1   	ljmp	l4080
  2516                           
  2517                           	psect	text2
  2518  0C9D                     __ptext2:	
  2519 ;; *************** function _scale *****************
  2520 ;; Defined at:
  2521 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2522 ;; Parameters:    Size  Location     Type
  2523 ;;  scl             1    wreg     char 
  2524 ;; Auto vars:     Size  Location     Type
  2525 ;;  scl             1   54[BANK0 ] char 
  2526 ;; Return value:  Size  Location     Type
  2527 ;;                  4   36[BANK0 ] char 
  2528 ;; Registers used:
  2529 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2530 ;; Tracked objects:
  2531 ;;		On entry : 0/0
  2532 ;;		On exit  : 0/0
  2533 ;;		Unchanged: 0/0
  2534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2535 ;;      Params:         0       4       0       0       0
  2536 ;;      Locals:         0       5       0       0       0
  2537 ;;      Temps:          0      10       0       0       0
  2538 ;;      Totals:         0      19       0       0       0
  2539 ;;Total ram usage:       19 bytes
  2540 ;; Hardware stack levels used:    1
  2541 ;; Hardware stack levels required when called:    3
  2542 ;; This function calls:
  2543 ;;		___awdiv
  2544 ;;		___awmod
  2545 ;;		___flmul
  2546 ;; This function is called by:
  2547 ;;		_sprintf
  2548 ;; This function uses a non-reentrant model
  2549 ;;
  2550                           
  2551                           
  2552                           ;psect for function _scale
  2553  0C9D                     _scale:
  2554                           
  2555                           ;incstack = 0
  2556                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2557                           ;scale@scl stored from wreg
  2558  0C9D  1283               	bcf	3,5	;RP0=0, select bank0
  2559  0C9E  1303               	bcf	3,6	;RP1=0, select bank0
  2560  0C9F  00D6               	movwf	scale@scl
  2561  0CA0                     l3532:
  2562                           
  2563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2564  0CA0  1FD6               	btfss	scale@scl,7
  2565  0CA1  2CA3               	goto	u5751
  2566  0CA2  2CA4               	goto	u5750
  2567  0CA3                     u5751:
  2568  0CA3  2E53               	goto	l3554
  2569  0CA4                     u5750:
  2570  0CA4                     l3534:
  2571                           
  2572                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2573  0CA4  09D6               	comf	scale@scl,f
  2574  0CA5  0AD6               	incf	scale@scl,f
  2575  0CA6                     l3536:
  2576                           
  2577                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2578  0CA6  0856               	movf	scale@scl,w
  2579  0CA7  3A80               	xorlw	128
  2580  0CA8  3E12               	addlw	-238
  2581  0CA9  1C03               	skipc
  2582  0CAA  2CAC               	goto	u5761
  2583  0CAB  2CAD               	goto	u5760
  2584  0CAC                     u5761:
  2585  0CAC  2D97               	goto	l3544
  2586  0CAD                     u5760:
  2587  0CAD                     l3538:
  2588                           
  2589                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2590  0CAD  300A               	movlw	10
  2591  0CAE  00A0               	movwf	___awdiv@divisor
  2592  0CAF  3000               	movlw	0
  2593  0CB0  00A1               	movwf	___awdiv@divisor+1
  2594  0CB1  0856               	movf	scale@scl,w
  2595  0CB2  00F5               	movwf	___awmod@dividend
  2596  0CB3  01F6               	clrf	___awmod@dividend+1
  2597  0CB4  1BF5               	btfsc	___awmod@dividend,7
  2598  0CB5  03F6               	decf	___awmod@dividend+1,f
  2599  0CB6  3064               	movlw	100
  2600  0CB7  00F3               	movwf	___awmod@divisor
  2601  0CB8  3000               	movlw	0
  2602  0CB9  00F4               	movwf	___awmod@divisor+1
  2603  0CBA  160A  158A  25B6  120A  158A  	fcall	___awmod
  2604  0CBF  0874               	movf	?___awmod+1,w
  2605  0CC0  1283               	bcf	3,5	;RP0=0, select bank0
  2606  0CC1  1303               	bcf	3,6	;RP1=0, select bank0
  2607  0CC2  00A3               	movwf	___awdiv@dividend+1
  2608  0CC3  0873               	movf	?___awmod,w
  2609  0CC4  00A2               	movwf	___awdiv@dividend
  2610  0CC5  160A  158A  2677  120A  158A  	fcall	___awdiv
  2611  0CCA  1283               	bcf	3,5	;RP0=0, select bank0
  2612  0CCB  1303               	bcf	3,6	;RP1=0, select bank0
  2613  0CCC  0820               	movf	?___awdiv,w
  2614  0CCD  00C8               	movwf	??_scale
  2615  0CCE  3001               	movlw	1
  2616  0CCF                     u5775:
  2617  0CCF  1003               	clrc
  2618  0CD0  0DC8               	rlf	??_scale,f
  2619  0CD1  3EFF               	addlw	-1
  2620  0CD2  1D03               	skipz
  2621  0CD3  2CCF               	goto	u5775
  2622  0CD4  1003               	clrc
  2623  0CD5  0D48               	rlf	??_scale,w
  2624  0CD6  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2625  0CD7  0084               	movwf	4
  2626  0CD8  160A  158A  200A  120A  158A  	fcall	stringdir
  2627  0CDD  00C9               	movwf	??_scale+1
  2628  0CDE  160A  158A  200A  120A  158A  	fcall	stringdir
  2629  0CE3  00CA               	movwf	??_scale+2
  2630  0CE4  160A  158A  200A  120A  158A  	fcall	stringdir
  2631  0CE9  00CB               	movwf	??_scale+3
  2632  0CEA  160A  158A  200A  120A  158A  	fcall	stringdir
  2633  0CEF  00CC               	movwf	??_scale+4
  2634  0CF0  084C               	movf	??_scale+4,w
  2635  0CF1  00AD               	movwf	___flmul@b+3
  2636  0CF2  084B               	movf	??_scale+3,w
  2637  0CF3  00AC               	movwf	___flmul@b+2
  2638  0CF4  084A               	movf	??_scale+2,w
  2639  0CF5  00AB               	movwf	___flmul@b+1
  2640  0CF6  0849               	movf	??_scale+1,w
  2641  0CF7  00AA               	movwf	___flmul@b
  2642  0CF8  3064               	movlw	100
  2643  0CF9  00A0               	movwf	___awdiv@divisor
  2644  0CFA  3000               	movlw	0
  2645  0CFB  00A1               	movwf	___awdiv@divisor+1
  2646  0CFC  0856               	movf	scale@scl,w
  2647  0CFD  00A2               	movwf	___awdiv@dividend
  2648  0CFE  01A3               	clrf	___awdiv@dividend+1
  2649  0CFF  1BA2               	btfsc	___awdiv@dividend,7
  2650  0D00  03A3               	decf	___awdiv@dividend+1,f
  2651  0D01  160A  158A  2677  120A  158A  	fcall	___awdiv
  2652  0D06  1283               	bcf	3,5	;RP0=0, select bank0
  2653  0D07  1303               	bcf	3,6	;RP1=0, select bank0
  2654  0D08  0820               	movf	?___awdiv,w
  2655  0D09  00CD               	movwf	??_scale+5
  2656  0D0A  3001               	movlw	1
  2657  0D0B                     u5785:
  2658  0D0B  1003               	clrc
  2659  0D0C  0DCD               	rlf	??_scale+5,f
  2660  0D0D  3EFF               	addlw	-1
  2661  0D0E  1D03               	skipz
  2662  0D0F  2D0B               	goto	u5785
  2663  0D10  1003               	clrc
  2664  0D11  0D4D               	rlf	??_scale+5,w
  2665  0D12  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  2666  0D13  0084               	movwf	4
  2667  0D14  160A  158A  200A  120A  158A  	fcall	stringdir
  2668  0D19  00CE               	movwf	??_scale+6
  2669  0D1A  160A  158A  200A  120A  158A  	fcall	stringdir
  2670  0D1F  00CF               	movwf	??_scale+7
  2671  0D20  160A  158A  200A  120A  158A  	fcall	stringdir
  2672  0D25  00D0               	movwf	??_scale+8
  2673  0D26  160A  158A  200A  120A  158A  	fcall	stringdir
  2674  0D2B  00D1               	movwf	??_scale+9
  2675  0D2C  0851               	movf	??_scale+9,w
  2676  0D2D  00B1               	movwf	___flmul@a+3
  2677  0D2E  0850               	movf	??_scale+8,w
  2678  0D2F  00B0               	movwf	___flmul@a+2
  2679  0D30  084F               	movf	??_scale+7,w
  2680  0D31  00AF               	movwf	___flmul@a+1
  2681  0D32  084E               	movf	??_scale+6,w
  2682  0D33  00AE               	movwf	___flmul@a
  2683  0D34  120A  158A  213C  120A  158A  	fcall	___flmul
  2684  0D39  1283               	bcf	3,5	;RP0=0, select bank0
  2685  0D3A  1303               	bcf	3,6	;RP1=0, select bank0
  2686  0D3B  082D               	movf	?___flmul+3,w
  2687  0D3C  00D5               	movwf	_scale$986+3
  2688  0D3D  082C               	movf	?___flmul+2,w
  2689  0D3E  00D4               	movwf	_scale$986+2
  2690  0D3F  082B               	movf	?___flmul+1,w
  2691  0D40  00D3               	movwf	_scale$986+1
  2692  0D41  082A               	movf	?___flmul,w
  2693  0D42  00D2               	movwf	_scale$986
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2696  0D43  300A               	movlw	10
  2697  0D44  00F3               	movwf	___awmod@divisor
  2698  0D45  3000               	movlw	0
  2699  0D46  00F4               	movwf	___awmod@divisor+1
  2700  0D47  0856               	movf	scale@scl,w
  2701  0D48  00F5               	movwf	___awmod@dividend
  2702  0D49  01F6               	clrf	___awmod@dividend+1
  2703  0D4A  1BF5               	btfsc	___awmod@dividend,7
  2704  0D4B  03F6               	decf	___awmod@dividend+1,f
  2705  0D4C  160A  158A  25B6  120A  158A  	fcall	___awmod
  2706  0D51  0873               	movf	?___awmod,w
  2707  0D52  1283               	bcf	3,5	;RP0=0, select bank0
  2708  0D53  1303               	bcf	3,6	;RP1=0, select bank0
  2709  0D54  00C8               	movwf	??_scale
  2710  0D55  3001               	movlw	1
  2711  0D56                     u5795:
  2712  0D56  1003               	clrc
  2713  0D57  0DC8               	rlf	??_scale,f
  2714  0D58  3EFF               	addlw	-1
  2715  0D59  1D03               	skipz
  2716  0D5A  2D56               	goto	u5795
  2717  0D5B  1003               	clrc
  2718  0D5C  0D48               	rlf	??_scale,w
  2719  0D5D  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2720  0D5E  0084               	movwf	4
  2721  0D5F  160A  158A  200A  120A  158A  	fcall	stringdir
  2722  0D64  00C9               	movwf	??_scale+1
  2723  0D65  160A  158A  200A  120A  158A  	fcall	stringdir
  2724  0D6A  00CA               	movwf	??_scale+2
  2725  0D6B  160A  158A  200A  120A  158A  	fcall	stringdir
  2726  0D70  00CB               	movwf	??_scale+3
  2727  0D71  160A  158A  200A  120A  158A  	fcall	stringdir
  2728  0D76  00CC               	movwf	??_scale+4
  2729  0D77  084C               	movf	??_scale+4,w
  2730  0D78  00AD               	movwf	___flmul@b+3
  2731  0D79  084B               	movf	??_scale+3,w
  2732  0D7A  00AC               	movwf	___flmul@b+2
  2733  0D7B  084A               	movf	??_scale+2,w
  2734  0D7C  00AB               	movwf	___flmul@b+1
  2735  0D7D  0849               	movf	??_scale+1,w
  2736  0D7E  00AA               	movwf	___flmul@b
  2737  0D7F  0855               	movf	_scale$986+3,w
  2738  0D80  00B1               	movwf	___flmul@a+3
  2739  0D81  0854               	movf	_scale$986+2,w
  2740  0D82  00B0               	movwf	___flmul@a+2
  2741  0D83  0853               	movf	_scale$986+1,w
  2742  0D84  00AF               	movwf	___flmul@a+1
  2743  0D85  0852               	movf	_scale$986,w
  2744  0D86  00AE               	movwf	___flmul@a
  2745  0D87  120A  158A  213C  120A  158A  	fcall	___flmul
  2746  0D8C  1283               	bcf	3,5	;RP0=0, select bank0
  2747  0D8D  1303               	bcf	3,6	;RP1=0, select bank0
  2748  0D8E  082D               	movf	?___flmul+3,w
  2749  0D8F  00C7               	movwf	?_scale+3
  2750  0D90  082C               	movf	?___flmul+2,w
  2751  0D91  00C6               	movwf	?_scale+2
  2752  0D92  082B               	movf	?___flmul+1,w
  2753  0D93  00C5               	movwf	?_scale+1
  2754  0D94  082A               	movf	?___flmul,w
  2755  0D95  00C4               	movwf	?_scale
  2756  0D96  2FFF               	goto	l234
  2757  0D97                     l3544:
  2758  0D97  0856               	movf	scale@scl,w
  2759  0D98  3A80               	xorlw	128
  2760  0D99  3E75               	addlw	-139
  2761  0D9A  1C03               	skipc
  2762  0D9B  2D9D               	goto	u5801
  2763  0D9C  2D9E               	goto	u5800
  2764  0D9D                     u5801:
  2765  0D9D  2E26               	goto	l3550
  2766  0D9E                     u5800:
  2767  0D9E                     l3546:
  2768                           
  2769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  2770  0D9E  300A               	movlw	10
  2771  0D9F  00F3               	movwf	___awmod@divisor
  2772  0DA0  3000               	movlw	0
  2773  0DA1  00F4               	movwf	___awmod@divisor+1
  2774  0DA2  0856               	movf	scale@scl,w
  2775  0DA3  00F5               	movwf	___awmod@dividend
  2776  0DA4  01F6               	clrf	___awmod@dividend+1
  2777  0DA5  1BF5               	btfsc	___awmod@dividend,7
  2778  0DA6  03F6               	decf	___awmod@dividend+1,f
  2779  0DA7  160A  158A  25B6  120A  158A  	fcall	___awmod
  2780  0DAC  0873               	movf	?___awmod,w
  2781  0DAD  1283               	bcf	3,5	;RP0=0, select bank0
  2782  0DAE  1303               	bcf	3,6	;RP1=0, select bank0
  2783  0DAF  00C8               	movwf	??_scale
  2784  0DB0  3001               	movlw	1
  2785  0DB1                     u5815:
  2786  0DB1  1003               	clrc
  2787  0DB2  0DC8               	rlf	??_scale,f
  2788  0DB3  3EFF               	addlw	-1
  2789  0DB4  1D03               	skipz
  2790  0DB5  2DB1               	goto	u5815
  2791  0DB6  1003               	clrc
  2792  0DB7  0D48               	rlf	??_scale,w
  2793  0DB8  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2794  0DB9  0084               	movwf	4
  2795  0DBA  160A  158A  200A  120A  158A  	fcall	stringdir
  2796  0DBF  00C9               	movwf	??_scale+1
  2797  0DC0  160A  158A  200A  120A  158A  	fcall	stringdir
  2798  0DC5  00CA               	movwf	??_scale+2
  2799  0DC6  160A  158A  200A  120A  158A  	fcall	stringdir
  2800  0DCB  00CB               	movwf	??_scale+3
  2801  0DCC  160A  158A  200A  120A  158A  	fcall	stringdir
  2802  0DD1  00CC               	movwf	??_scale+4
  2803  0DD2  084C               	movf	??_scale+4,w
  2804  0DD3  00AD               	movwf	___flmul@b+3
  2805  0DD4  084B               	movf	??_scale+3,w
  2806  0DD5  00AC               	movwf	___flmul@b+2
  2807  0DD6  084A               	movf	??_scale+2,w
  2808  0DD7  00AB               	movwf	___flmul@b+1
  2809  0DD8  0849               	movf	??_scale+1,w
  2810  0DD9  00AA               	movwf	___flmul@b
  2811  0DDA  300A               	movlw	10
  2812  0DDB  00A0               	movwf	___awdiv@divisor
  2813  0DDC  3000               	movlw	0
  2814  0DDD  00A1               	movwf	___awdiv@divisor+1
  2815  0DDE  0856               	movf	scale@scl,w
  2816  0DDF  00A2               	movwf	___awdiv@dividend
  2817  0DE0  01A3               	clrf	___awdiv@dividend+1
  2818  0DE1  1BA2               	btfsc	___awdiv@dividend,7
  2819  0DE2  03A3               	decf	___awdiv@dividend+1,f
  2820  0DE3  160A  158A  2677  120A  158A  	fcall	___awdiv
  2821  0DE8  1283               	bcf	3,5	;RP0=0, select bank0
  2822  0DE9  1303               	bcf	3,6	;RP1=0, select bank0
  2823  0DEA  0820               	movf	?___awdiv,w
  2824  0DEB  00CD               	movwf	??_scale+5
  2825  0DEC  3001               	movlw	1
  2826  0DED                     u5825:
  2827  0DED  1003               	clrc
  2828  0DEE  0DCD               	rlf	??_scale+5,f
  2829  0DEF  3EFF               	addlw	-1
  2830  0DF0  1D03               	skipz
  2831  0DF1  2DED               	goto	u5825
  2832  0DF2  1003               	clrc
  2833  0DF3  0D4D               	rlf	??_scale+5,w
  2834  0DF4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2835  0DF5  0084               	movwf	4
  2836  0DF6  160A  158A  200A  120A  158A  	fcall	stringdir
  2837  0DFB  00CE               	movwf	??_scale+6
  2838  0DFC  160A  158A  200A  120A  158A  	fcall	stringdir
  2839  0E01  00CF               	movwf	??_scale+7
  2840  0E02  160A  158A  200A  120A  158A  	fcall	stringdir
  2841  0E07  00D0               	movwf	??_scale+8
  2842  0E08  160A  158A  200A  120A  158A  	fcall	stringdir
  2843  0E0D  00D1               	movwf	??_scale+9
  2844  0E0E  0851               	movf	??_scale+9,w
  2845  0E0F  00B1               	movwf	___flmul@a+3
  2846  0E10  0850               	movf	??_scale+8,w
  2847  0E11  00B0               	movwf	___flmul@a+2
  2848  0E12  084F               	movf	??_scale+7,w
  2849  0E13  00AF               	movwf	___flmul@a+1
  2850  0E14  084E               	movf	??_scale+6,w
  2851  0E15  00AE               	movwf	___flmul@a
  2852  0E16  120A  158A  213C  120A  158A  	fcall	___flmul
  2853  0E1B  1283               	bcf	3,5	;RP0=0, select bank0
  2854  0E1C  1303               	bcf	3,6	;RP1=0, select bank0
  2855  0E1D  082D               	movf	?___flmul+3,w
  2856  0E1E  00C7               	movwf	?_scale+3
  2857  0E1F  082C               	movf	?___flmul+2,w
  2858  0E20  00C6               	movwf	?_scale+2
  2859  0E21  082B               	movf	?___flmul+1,w
  2860  0E22  00C5               	movwf	?_scale+1
  2861  0E23  082A               	movf	?___flmul,w
  2862  0E24  00C4               	movwf	?_scale
  2863  0E25  2FFF               	goto	l234
  2864  0E26                     l3550:
  2865                           
  2866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  2867  0E26  0856               	movf	scale@scl,w
  2868  0E27  00C8               	movwf	??_scale
  2869  0E28  3001               	movlw	1
  2870  0E29                     u5835:
  2871  0E29  1003               	clrc
  2872  0E2A  0DC8               	rlf	??_scale,f
  2873  0E2B  3EFF               	addlw	-1
  2874  0E2C  1D03               	skipz
  2875  0E2D  2E29               	goto	u5835
  2876  0E2E  1003               	clrc
  2877  0E2F  0D48               	rlf	??_scale,w
  2878  0E30  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  2879  0E31  0084               	movwf	4
  2880  0E32  160A  158A  200A  120A  158A  	fcall	stringdir
  2881  0E37  00C9               	movwf	??_scale+1
  2882  0E38  160A  158A  200A  120A  158A  	fcall	stringdir
  2883  0E3D  00CA               	movwf	??_scale+2
  2884  0E3E  160A  158A  200A  120A  158A  	fcall	stringdir
  2885  0E43  00CB               	movwf	??_scale+3
  2886  0E44  160A  158A  200A  120A  158A  	fcall	stringdir
  2887  0E49  00CC               	movwf	??_scale+4
  2888  0E4A  084C               	movf	??_scale+4,w
  2889  0E4B  00C7               	movwf	?_scale+3
  2890  0E4C  084B               	movf	??_scale+3,w
  2891  0E4D  00C6               	movwf	?_scale+2
  2892  0E4E  084A               	movf	??_scale+2,w
  2893  0E4F  00C5               	movwf	?_scale+1
  2894  0E50  0849               	movf	??_scale+1,w
  2895  0E51  00C4               	movwf	?_scale
  2896  0E52  2FFF               	goto	l234
  2897  0E53                     l3554:
  2898                           
  2899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  2900  0E53  0856               	movf	scale@scl,w
  2901  0E54  3A80               	xorlw	128
  2902  0E55  3E12               	addlw	-238
  2903  0E56  1C03               	skipc
  2904  0E57  2E59               	goto	u5841
  2905  0E58  2E5A               	goto	u5840
  2906  0E59                     u5841:
  2907  0E59  2F44               	goto	l3562
  2908  0E5A                     u5840:
  2909  0E5A                     l3556:
  2910                           
  2911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  2912  0E5A  300A               	movlw	10
  2913  0E5B  00A0               	movwf	___awdiv@divisor
  2914  0E5C  3000               	movlw	0
  2915  0E5D  00A1               	movwf	___awdiv@divisor+1
  2916  0E5E  0856               	movf	scale@scl,w
  2917  0E5F  00F5               	movwf	___awmod@dividend
  2918  0E60  01F6               	clrf	___awmod@dividend+1
  2919  0E61  1BF5               	btfsc	___awmod@dividend,7
  2920  0E62  03F6               	decf	___awmod@dividend+1,f
  2921  0E63  3064               	movlw	100
  2922  0E64  00F3               	movwf	___awmod@divisor
  2923  0E65  3000               	movlw	0
  2924  0E66  00F4               	movwf	___awmod@divisor+1
  2925  0E67  160A  158A  25B6  120A  158A  	fcall	___awmod
  2926  0E6C  0874               	movf	?___awmod+1,w
  2927  0E6D  1283               	bcf	3,5	;RP0=0, select bank0
  2928  0E6E  1303               	bcf	3,6	;RP1=0, select bank0
  2929  0E6F  00A3               	movwf	___awdiv@dividend+1
  2930  0E70  0873               	movf	?___awmod,w
  2931  0E71  00A2               	movwf	___awdiv@dividend
  2932  0E72  160A  158A  2677  120A  158A  	fcall	___awdiv
  2933  0E77  1283               	bcf	3,5	;RP0=0, select bank0
  2934  0E78  1303               	bcf	3,6	;RP1=0, select bank0
  2935  0E79  0820               	movf	?___awdiv,w
  2936  0E7A  00C8               	movwf	??_scale
  2937  0E7B  3001               	movlw	1
  2938  0E7C                     u5855:
  2939  0E7C  1003               	clrc
  2940  0E7D  0DC8               	rlf	??_scale,f
  2941  0E7E  3EFF               	addlw	-1
  2942  0E7F  1D03               	skipz
  2943  0E80  2E7C               	goto	u5855
  2944  0E81  1003               	clrc
  2945  0E82  0D48               	rlf	??_scale,w
  2946  0E83  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  2947  0E84  0084               	movwf	4
  2948  0E85  160A  158A  200A  120A  158A  	fcall	stringdir
  2949  0E8A  00C9               	movwf	??_scale+1
  2950  0E8B  160A  158A  200A  120A  158A  	fcall	stringdir
  2951  0E90  00CA               	movwf	??_scale+2
  2952  0E91  160A  158A  200A  120A  158A  	fcall	stringdir
  2953  0E96  00CB               	movwf	??_scale+3
  2954  0E97  160A  158A  200A  120A  158A  	fcall	stringdir
  2955  0E9C  00CC               	movwf	??_scale+4
  2956  0E9D  084C               	movf	??_scale+4,w
  2957  0E9E  00AD               	movwf	___flmul@b+3
  2958  0E9F  084B               	movf	??_scale+3,w
  2959  0EA0  00AC               	movwf	___flmul@b+2
  2960  0EA1  084A               	movf	??_scale+2,w
  2961  0EA2  00AB               	movwf	___flmul@b+1
  2962  0EA3  0849               	movf	??_scale+1,w
  2963  0EA4  00AA               	movwf	___flmul@b
  2964  0EA5  3064               	movlw	100
  2965  0EA6  00A0               	movwf	___awdiv@divisor
  2966  0EA7  3000               	movlw	0
  2967  0EA8  00A1               	movwf	___awdiv@divisor+1
  2968  0EA9  0856               	movf	scale@scl,w
  2969  0EAA  00A2               	movwf	___awdiv@dividend
  2970  0EAB  01A3               	clrf	___awdiv@dividend+1
  2971  0EAC  1BA2               	btfsc	___awdiv@dividend,7
  2972  0EAD  03A3               	decf	___awdiv@dividend+1,f
  2973  0EAE  160A  158A  2677  120A  158A  	fcall	___awdiv
  2974  0EB3  1283               	bcf	3,5	;RP0=0, select bank0
  2975  0EB4  1303               	bcf	3,6	;RP1=0, select bank0
  2976  0EB5  0820               	movf	?___awdiv,w
  2977  0EB6  00CD               	movwf	??_scale+5
  2978  0EB7  3001               	movlw	1
  2979  0EB8                     u5865:
  2980  0EB8  1003               	clrc
  2981  0EB9  0DCD               	rlf	??_scale+5,f
  2982  0EBA  3EFF               	addlw	-1
  2983  0EBB  1D03               	skipz
  2984  0EBC  2EB8               	goto	u5865
  2985  0EBD  1003               	clrc
  2986  0EBE  0D4D               	rlf	??_scale+5,w
  2987  0EBF  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  2988  0EC0  0084               	movwf	4
  2989  0EC1  160A  158A  200A  120A  158A  	fcall	stringdir
  2990  0EC6  00CE               	movwf	??_scale+6
  2991  0EC7  160A  158A  200A  120A  158A  	fcall	stringdir
  2992  0ECC  00CF               	movwf	??_scale+7
  2993  0ECD  160A  158A  200A  120A  158A  	fcall	stringdir
  2994  0ED2  00D0               	movwf	??_scale+8
  2995  0ED3  160A  158A  200A  120A  158A  	fcall	stringdir
  2996  0ED8  00D1               	movwf	??_scale+9
  2997  0ED9  0851               	movf	??_scale+9,w
  2998  0EDA  00B1               	movwf	___flmul@a+3
  2999  0EDB  0850               	movf	??_scale+8,w
  3000  0EDC  00B0               	movwf	___flmul@a+2
  3001  0EDD  084F               	movf	??_scale+7,w
  3002  0EDE  00AF               	movwf	___flmul@a+1
  3003  0EDF  084E               	movf	??_scale+6,w
  3004  0EE0  00AE               	movwf	___flmul@a
  3005  0EE1  120A  158A  213C  120A  158A  	fcall	___flmul
  3006  0EE6  1283               	bcf	3,5	;RP0=0, select bank0
  3007  0EE7  1303               	bcf	3,6	;RP1=0, select bank0
  3008  0EE8  082D               	movf	?___flmul+3,w
  3009  0EE9  00D5               	movwf	_scale$986+3
  3010  0EEA  082C               	movf	?___flmul+2,w
  3011  0EEB  00D4               	movwf	_scale$986+2
  3012  0EEC  082B               	movf	?___flmul+1,w
  3013  0EED  00D3               	movwf	_scale$986+1
  3014  0EEE  082A               	movf	?___flmul,w
  3015  0EEF  00D2               	movwf	_scale$986
  3016                           
  3017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3018  0EF0  300A               	movlw	10
  3019  0EF1  00F3               	movwf	___awmod@divisor
  3020  0EF2  3000               	movlw	0
  3021  0EF3  00F4               	movwf	___awmod@divisor+1
  3022  0EF4  0856               	movf	scale@scl,w
  3023  0EF5  00F5               	movwf	___awmod@dividend
  3024  0EF6  01F6               	clrf	___awmod@dividend+1
  3025  0EF7  1BF5               	btfsc	___awmod@dividend,7
  3026  0EF8  03F6               	decf	___awmod@dividend+1,f
  3027  0EF9  160A  158A  25B6  120A  158A  	fcall	___awmod
  3028  0EFE  0873               	movf	?___awmod,w
  3029  0EFF  1283               	bcf	3,5	;RP0=0, select bank0
  3030  0F00  1303               	bcf	3,6	;RP1=0, select bank0
  3031  0F01  00C8               	movwf	??_scale
  3032  0F02  3001               	movlw	1
  3033  0F03                     u5875:
  3034  0F03  1003               	clrc
  3035  0F04  0DC8               	rlf	??_scale,f
  3036  0F05  3EFF               	addlw	-1
  3037  0F06  1D03               	skipz
  3038  0F07  2F03               	goto	u5875
  3039  0F08  1003               	clrc
  3040  0F09  0D48               	rlf	??_scale,w
  3041  0F0A  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3042  0F0B  0084               	movwf	4
  3043  0F0C  160A  158A  200A  120A  158A  	fcall	stringdir
  3044  0F11  00C9               	movwf	??_scale+1
  3045  0F12  160A  158A  200A  120A  158A  	fcall	stringdir
  3046  0F17  00CA               	movwf	??_scale+2
  3047  0F18  160A  158A  200A  120A  158A  	fcall	stringdir
  3048  0F1D  00CB               	movwf	??_scale+3
  3049  0F1E  160A  158A  200A  120A  158A  	fcall	stringdir
  3050  0F23  00CC               	movwf	??_scale+4
  3051  0F24  084C               	movf	??_scale+4,w
  3052  0F25  00AD               	movwf	___flmul@b+3
  3053  0F26  084B               	movf	??_scale+3,w
  3054  0F27  00AC               	movwf	___flmul@b+2
  3055  0F28  084A               	movf	??_scale+2,w
  3056  0F29  00AB               	movwf	___flmul@b+1
  3057  0F2A  0849               	movf	??_scale+1,w
  3058  0F2B  00AA               	movwf	___flmul@b
  3059  0F2C  0855               	movf	_scale$986+3,w
  3060  0F2D  00B1               	movwf	___flmul@a+3
  3061  0F2E  0854               	movf	_scale$986+2,w
  3062  0F2F  00B0               	movwf	___flmul@a+2
  3063  0F30  0853               	movf	_scale$986+1,w
  3064  0F31  00AF               	movwf	___flmul@a+1
  3065  0F32  0852               	movf	_scale$986,w
  3066  0F33  00AE               	movwf	___flmul@a
  3067  0F34  120A  158A  213C  120A  158A  	fcall	___flmul
  3068  0F39  1283               	bcf	3,5	;RP0=0, select bank0
  3069  0F3A  1303               	bcf	3,6	;RP1=0, select bank0
  3070  0F3B  082D               	movf	?___flmul+3,w
  3071  0F3C  00C7               	movwf	?_scale+3
  3072  0F3D  082C               	movf	?___flmul+2,w
  3073  0F3E  00C6               	movwf	?_scale+2
  3074  0F3F  082B               	movf	?___flmul+1,w
  3075  0F40  00C5               	movwf	?_scale+1
  3076  0F41  082A               	movf	?___flmul,w
  3077  0F42  00C4               	movwf	?_scale
  3078  0F43  2FFF               	goto	l234
  3079  0F44                     l3562:
  3080  0F44  0856               	movf	scale@scl,w
  3081  0F45  3A80               	xorlw	128
  3082  0F46  3E75               	addlw	-139
  3083  0F47  1C03               	skipc
  3084  0F48  2F4A               	goto	u5881
  3085  0F49  2F4B               	goto	u5880
  3086  0F4A                     u5881:
  3087  0F4A  2FD3               	goto	l3568
  3088  0F4B                     u5880:
  3089  0F4B                     l3564:
  3090                           
  3091                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3092  0F4B  300A               	movlw	10
  3093  0F4C  00F3               	movwf	___awmod@divisor
  3094  0F4D  3000               	movlw	0
  3095  0F4E  00F4               	movwf	___awmod@divisor+1
  3096  0F4F  0856               	movf	scale@scl,w
  3097  0F50  00F5               	movwf	___awmod@dividend
  3098  0F51  01F6               	clrf	___awmod@dividend+1
  3099  0F52  1BF5               	btfsc	___awmod@dividend,7
  3100  0F53  03F6               	decf	___awmod@dividend+1,f
  3101  0F54  160A  158A  25B6  120A  158A  	fcall	___awmod
  3102  0F59  0873               	movf	?___awmod,w
  3103  0F5A  1283               	bcf	3,5	;RP0=0, select bank0
  3104  0F5B  1303               	bcf	3,6	;RP1=0, select bank0
  3105  0F5C  00C8               	movwf	??_scale
  3106  0F5D  3001               	movlw	1
  3107  0F5E                     u5895:
  3108  0F5E  1003               	clrc
  3109  0F5F  0DC8               	rlf	??_scale,f
  3110  0F60  3EFF               	addlw	-1
  3111  0F61  1D03               	skipz
  3112  0F62  2F5E               	goto	u5895
  3113  0F63  1003               	clrc
  3114  0F64  0D48               	rlf	??_scale,w
  3115  0F65  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3116  0F66  0084               	movwf	4
  3117  0F67  160A  158A  200A  120A  158A  	fcall	stringdir
  3118  0F6C  00C9               	movwf	??_scale+1
  3119  0F6D  160A  158A  200A  120A  158A  	fcall	stringdir
  3120  0F72  00CA               	movwf	??_scale+2
  3121  0F73  160A  158A  200A  120A  158A  	fcall	stringdir
  3122  0F78  00CB               	movwf	??_scale+3
  3123  0F79  160A  158A  200A  120A  158A  	fcall	stringdir
  3124  0F7E  00CC               	movwf	??_scale+4
  3125  0F7F  084C               	movf	??_scale+4,w
  3126  0F80  00AD               	movwf	___flmul@b+3
  3127  0F81  084B               	movf	??_scale+3,w
  3128  0F82  00AC               	movwf	___flmul@b+2
  3129  0F83  084A               	movf	??_scale+2,w
  3130  0F84  00AB               	movwf	___flmul@b+1
  3131  0F85  0849               	movf	??_scale+1,w
  3132  0F86  00AA               	movwf	___flmul@b
  3133  0F87  300A               	movlw	10
  3134  0F88  00A0               	movwf	___awdiv@divisor
  3135  0F89  3000               	movlw	0
  3136  0F8A  00A1               	movwf	___awdiv@divisor+1
  3137  0F8B  0856               	movf	scale@scl,w
  3138  0F8C  00A2               	movwf	___awdiv@dividend
  3139  0F8D  01A3               	clrf	___awdiv@dividend+1
  3140  0F8E  1BA2               	btfsc	___awdiv@dividend,7
  3141  0F8F  03A3               	decf	___awdiv@dividend+1,f
  3142  0F90  160A  158A  2677  120A  158A  	fcall	___awdiv
  3143  0F95  1283               	bcf	3,5	;RP0=0, select bank0
  3144  0F96  1303               	bcf	3,6	;RP1=0, select bank0
  3145  0F97  0820               	movf	?___awdiv,w
  3146  0F98  00CD               	movwf	??_scale+5
  3147  0F99  3001               	movlw	1
  3148  0F9A                     u5905:
  3149  0F9A  1003               	clrc
  3150  0F9B  0DCD               	rlf	??_scale+5,f
  3151  0F9C  3EFF               	addlw	-1
  3152  0F9D  1D03               	skipz
  3153  0F9E  2F9A               	goto	u5905
  3154  0F9F  1003               	clrc
  3155  0FA0  0D4D               	rlf	??_scale+5,w
  3156  0FA1  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3157  0FA2  0084               	movwf	4
  3158  0FA3  160A  158A  200A  120A  158A  	fcall	stringdir
  3159  0FA8  00CE               	movwf	??_scale+6
  3160  0FA9  160A  158A  200A  120A  158A  	fcall	stringdir
  3161  0FAE  00CF               	movwf	??_scale+7
  3162  0FAF  160A  158A  200A  120A  158A  	fcall	stringdir
  3163  0FB4  00D0               	movwf	??_scale+8
  3164  0FB5  160A  158A  200A  120A  158A  	fcall	stringdir
  3165  0FBA  00D1               	movwf	??_scale+9
  3166  0FBB  0851               	movf	??_scale+9,w
  3167  0FBC  00B1               	movwf	___flmul@a+3
  3168  0FBD  0850               	movf	??_scale+8,w
  3169  0FBE  00B0               	movwf	___flmul@a+2
  3170  0FBF  084F               	movf	??_scale+7,w
  3171  0FC0  00AF               	movwf	___flmul@a+1
  3172  0FC1  084E               	movf	??_scale+6,w
  3173  0FC2  00AE               	movwf	___flmul@a
  3174  0FC3  120A  158A  213C  120A  158A  	fcall	___flmul
  3175  0FC8  1283               	bcf	3,5	;RP0=0, select bank0
  3176  0FC9  1303               	bcf	3,6	;RP1=0, select bank0
  3177  0FCA  082D               	movf	?___flmul+3,w
  3178  0FCB  00C7               	movwf	?_scale+3
  3179  0FCC  082C               	movf	?___flmul+2,w
  3180  0FCD  00C6               	movwf	?_scale+2
  3181  0FCE  082B               	movf	?___flmul+1,w
  3182  0FCF  00C5               	movwf	?_scale+1
  3183  0FD0  082A               	movf	?___flmul,w
  3184  0FD1  00C4               	movwf	?_scale
  3185  0FD2  2FFF               	goto	l234
  3186  0FD3                     l3568:
  3187                           
  3188                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3189  0FD3  0856               	movf	scale@scl,w
  3190  0FD4  00C8               	movwf	??_scale
  3191  0FD5  3001               	movlw	1
  3192  0FD6                     u5915:
  3193  0FD6  1003               	clrc
  3194  0FD7  0DC8               	rlf	??_scale,f
  3195  0FD8  3EFF               	addlw	-1
  3196  0FD9  1D03               	skipz
  3197  0FDA  2FD6               	goto	u5915
  3198  0FDB  1003               	clrc
  3199  0FDC  0D48               	rlf	??_scale,w
  3200  0FDD  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3201  0FDE  0084               	movwf	4
  3202  0FDF  160A  158A  200A  120A  158A  	fcall	stringdir
  3203  0FE4  00C9               	movwf	??_scale+1
  3204  0FE5  160A  158A  200A  120A  158A  	fcall	stringdir
  3205  0FEA  00CA               	movwf	??_scale+2
  3206  0FEB  160A  158A  200A  120A  158A  	fcall	stringdir
  3207  0FF0  00CB               	movwf	??_scale+3
  3208  0FF1  160A  158A  200A  120A  158A  	fcall	stringdir
  3209  0FF6  00CC               	movwf	??_scale+4
  3210  0FF7  084C               	movf	??_scale+4,w
  3211  0FF8  00C7               	movwf	?_scale+3
  3212  0FF9  084B               	movf	??_scale+3,w
  3213  0FFA  00C6               	movwf	?_scale+2
  3214  0FFB  084A               	movf	??_scale+2,w
  3215  0FFC  00C5               	movwf	?_scale+1
  3216  0FFD  0849               	movf	??_scale+1,w
  3217  0FFE  00C4               	movwf	?_scale
  3218  0FFF                     l234:
  3219  0FFF  0008               	return
  3220  1000                     __end_of_scale:
  3221                           
  3222                           	psect	text3
  3223  1DB6                     __ptext3:	
  3224 ;; *************** function ___awmod *****************
  3225 ;; Defined at:
  3226 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3227 ;; Parameters:    Size  Location     Type
  3228 ;;  divisor         2    3[COMMON] int 
  3229 ;;  dividend        2    5[COMMON] int 
  3230 ;; Auto vars:     Size  Location     Type
  3231 ;;  sign            1    9[COMMON] unsigned char 
  3232 ;;  counter         1    8[COMMON] unsigned char 
  3233 ;; Return value:  Size  Location     Type
  3234 ;;                  2    3[COMMON] int 
  3235 ;; Registers used:
  3236 ;;		wreg, status,2, status,0
  3237 ;; Tracked objects:
  3238 ;;		On entry : 0/0
  3239 ;;		On exit  : 0/0
  3240 ;;		Unchanged: 0/0
  3241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3242 ;;      Params:         4       0       0       0       0
  3243 ;;      Locals:         2       0       0       0       0
  3244 ;;      Temps:          1       0       0       0       0
  3245 ;;      Totals:         7       0       0       0       0
  3246 ;;Total ram usage:        7 bytes
  3247 ;; Hardware stack levels used:    1
  3248 ;; Hardware stack levels required when called:    1
  3249 ;; This function calls:
  3250 ;;		Nothing
  3251 ;; This function is called by:
  3252 ;;		_scale
  3253 ;; This function uses a non-reentrant model
  3254 ;;
  3255                           
  3256                           
  3257                           ;psect for function ___awmod
  3258  1DB6                     ___awmod:
  3259  1DB6                     l2238:	
  3260                           ;incstack = 0
  3261                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3262                           
  3263  1DB6  01F9               	clrf	___awmod@sign
  3264  1DB7                     l2240:
  3265  1DB7  1FF6               	btfss	___awmod@dividend+1,7
  3266  1DB8  2DBA               	goto	u2961
  3267  1DB9  2DBB               	goto	u2960
  3268  1DBA                     u2961:
  3269  1DBA  2DC2               	goto	l2246
  3270  1DBB                     u2960:
  3271  1DBB                     l2242:
  3272  1DBB  09F5               	comf	___awmod@dividend,f
  3273  1DBC  09F6               	comf	___awmod@dividend+1,f
  3274  1DBD  0AF5               	incf	___awmod@dividend,f
  3275  1DBE  1903               	skipnz
  3276  1DBF  0AF6               	incf	___awmod@dividend+1,f
  3277  1DC0                     l2244:
  3278  1DC0  01F9               	clrf	___awmod@sign
  3279  1DC1  0AF9               	incf	___awmod@sign,f
  3280  1DC2                     l2246:
  3281  1DC2  1FF4               	btfss	___awmod@divisor+1,7
  3282  1DC3  2DC5               	goto	u2971
  3283  1DC4  2DC6               	goto	u2970
  3284  1DC5                     u2971:
  3285  1DC5  2DCB               	goto	l2250
  3286  1DC6                     u2970:
  3287  1DC6                     l2248:
  3288  1DC6  09F3               	comf	___awmod@divisor,f
  3289  1DC7  09F4               	comf	___awmod@divisor+1,f
  3290  1DC8  0AF3               	incf	___awmod@divisor,f
  3291  1DC9  1903               	skipnz
  3292  1DCA  0AF4               	incf	___awmod@divisor+1,f
  3293  1DCB                     l2250:
  3294  1DCB  0873               	movf	___awmod@divisor,w
  3295  1DCC  0474               	iorwf	___awmod@divisor+1,w
  3296  1DCD  1903               	btfsc	3,2
  3297  1DCE  2DD0               	goto	u2981
  3298  1DCF  2DD1               	goto	u2980
  3299  1DD0                     u2981:
  3300  1DD0  2E00               	goto	l2268
  3301  1DD1                     u2980:
  3302  1DD1                     l2252:
  3303  1DD1  01F8               	clrf	___awmod@counter
  3304  1DD2  0AF8               	incf	___awmod@counter,f
  3305  1DD3  2DDF               	goto	l2258
  3306  1DD4                     l2254:
  3307  1DD4  3001               	movlw	1
  3308  1DD5                     u2995:
  3309  1DD5  1003               	clrc
  3310  1DD6  0DF3               	rlf	___awmod@divisor,f
  3311  1DD7  0DF4               	rlf	___awmod@divisor+1,f
  3312  1DD8  3EFF               	addlw	-1
  3313  1DD9  1D03               	skipz
  3314  1DDA  2DD5               	goto	u2995
  3315  1DDB                     l2256:
  3316  1DDB  3001               	movlw	1
  3317  1DDC  00F7               	movwf	??___awmod
  3318  1DDD  0877               	movf	??___awmod,w
  3319  1DDE  07F8               	addwf	___awmod@counter,f
  3320  1DDF                     l2258:
  3321  1DDF  1FF4               	btfss	___awmod@divisor+1,7
  3322  1DE0  2DE2               	goto	u3001
  3323  1DE1  2DE3               	goto	u3000
  3324  1DE2                     u3001:
  3325  1DE2  2DD4               	goto	l2254
  3326  1DE3                     u3000:
  3327  1DE3                     l2260:
  3328  1DE3  0874               	movf	___awmod@divisor+1,w
  3329  1DE4  0276               	subwf	___awmod@dividend+1,w
  3330  1DE5  1D03               	skipz
  3331  1DE6  2DE9               	goto	u3015
  3332  1DE7  0873               	movf	___awmod@divisor,w
  3333  1DE8  0275               	subwf	___awmod@dividend,w
  3334  1DE9                     u3015:
  3335  1DE9  1C03               	skipc
  3336  1DEA  2DEC               	goto	u3011
  3337  1DEB  2DED               	goto	u3010
  3338  1DEC                     u3011:
  3339  1DEC  2DF3               	goto	l2264
  3340  1DED                     u3010:
  3341  1DED                     l2262:
  3342  1DED  0873               	movf	___awmod@divisor,w
  3343  1DEE  02F5               	subwf	___awmod@dividend,f
  3344  1DEF  0874               	movf	___awmod@divisor+1,w
  3345  1DF0  1C03               	skipc
  3346  1DF1  03F6               	decf	___awmod@dividend+1,f
  3347  1DF2  02F6               	subwf	___awmod@dividend+1,f
  3348  1DF3                     l2264:
  3349  1DF3  3001               	movlw	1
  3350  1DF4                     u3025:
  3351  1DF4  1003               	clrc
  3352  1DF5  0CF4               	rrf	___awmod@divisor+1,f
  3353  1DF6  0CF3               	rrf	___awmod@divisor,f
  3354  1DF7  3EFF               	addlw	-1
  3355  1DF8  1D03               	skipz
  3356  1DF9  2DF4               	goto	u3025
  3357  1DFA                     l2266:
  3358  1DFA  3001               	movlw	1
  3359  1DFB  02F8               	subwf	___awmod@counter,f
  3360  1DFC  1D03               	btfss	3,2
  3361  1DFD  2DFF               	goto	u3031
  3362  1DFE  2E00               	goto	u3030
  3363  1DFF                     u3031:
  3364  1DFF  2DE3               	goto	l2260
  3365  1E00                     u3030:
  3366  1E00                     l2268:
  3367  1E00  0879               	movf	___awmod@sign,w
  3368  1E01  1903               	btfsc	3,2
  3369  1E02  2E04               	goto	u3041
  3370  1E03  2E05               	goto	u3040
  3371  1E04                     u3041:
  3372  1E04  2E0A               	goto	l2272
  3373  1E05                     u3040:
  3374  1E05                     l2270:
  3375  1E05  09F5               	comf	___awmod@dividend,f
  3376  1E06  09F6               	comf	___awmod@dividend+1,f
  3377  1E07  0AF5               	incf	___awmod@dividend,f
  3378  1E08  1903               	skipnz
  3379  1E09  0AF6               	incf	___awmod@dividend+1,f
  3380  1E0A                     l2272:
  3381  1E0A  0876               	movf	___awmod@dividend+1,w
  3382  1E0B  00F4               	movwf	?___awmod+1
  3383  1E0C  0875               	movf	___awmod@dividend,w
  3384  1E0D  00F3               	movwf	?___awmod
  3385  1E0E                     l487:
  3386  1E0E  0008               	return
  3387  1E0F                     __end_of___awmod:
  3388                           
  3389                           	psect	text4
  3390  1E77                     __ptext4:	
  3391 ;; *************** function ___awdiv *****************
  3392 ;; Defined at:
  3393 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3394 ;; Parameters:    Size  Location     Type
  3395 ;;  divisor         2    0[BANK0 ] int 
  3396 ;;  dividend        2    2[BANK0 ] int 
  3397 ;; Auto vars:     Size  Location     Type
  3398 ;;  quotient        2    7[BANK0 ] int 
  3399 ;;  sign            1    6[BANK0 ] unsigned char 
  3400 ;;  counter         1    5[BANK0 ] unsigned char 
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  2    0[BANK0 ] int 
  3403 ;; Registers used:
  3404 ;;		wreg, status,2, status,0
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3410 ;;      Params:         0       4       0       0       0
  3411 ;;      Locals:         0       4       0       0       0
  3412 ;;      Temps:          0       1       0       0       0
  3413 ;;      Totals:         0       9       0       0       0
  3414 ;;Total ram usage:        9 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; Hardware stack levels required when called:    1
  3417 ;; This function calls:
  3418 ;;		Nothing
  3419 ;; This function is called by:
  3420 ;;		_scale
  3421 ;;		_sprintf
  3422 ;; This function uses a non-reentrant model
  3423 ;;
  3424                           
  3425                           
  3426                           ;psect for function ___awdiv
  3427  1E77                     ___awdiv:
  3428  1E77                     l3464:	
  3429                           ;incstack = 0
  3430                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3431                           
  3432  1E77  1283               	bcf	3,5	;RP0=0, select bank0
  3433  1E78  1303               	bcf	3,6	;RP1=0, select bank0
  3434  1E79  01A6               	clrf	___awdiv@sign
  3435  1E7A                     l3466:
  3436  1E7A  1FA1               	btfss	___awdiv@divisor+1,7
  3437  1E7B  2E7D               	goto	u5651
  3438  1E7C  2E7E               	goto	u5650
  3439  1E7D                     u5651:
  3440  1E7D  2E85               	goto	l3472
  3441  1E7E                     u5650:
  3442  1E7E                     l3468:
  3443  1E7E  09A0               	comf	___awdiv@divisor,f
  3444  1E7F  09A1               	comf	___awdiv@divisor+1,f
  3445  1E80  0AA0               	incf	___awdiv@divisor,f
  3446  1E81  1903               	skipnz
  3447  1E82  0AA1               	incf	___awdiv@divisor+1,f
  3448  1E83                     l3470:
  3449  1E83  01A6               	clrf	___awdiv@sign
  3450  1E84  0AA6               	incf	___awdiv@sign,f
  3451  1E85                     l3472:
  3452  1E85  1FA3               	btfss	___awdiv@dividend+1,7
  3453  1E86  2E88               	goto	u5661
  3454  1E87  2E89               	goto	u5660
  3455  1E88                     u5661:
  3456  1E88  2E92               	goto	l3478
  3457  1E89                     u5660:
  3458  1E89                     l3474:
  3459  1E89  09A2               	comf	___awdiv@dividend,f
  3460  1E8A  09A3               	comf	___awdiv@dividend+1,f
  3461  1E8B  0AA2               	incf	___awdiv@dividend,f
  3462  1E8C  1903               	skipnz
  3463  1E8D  0AA3               	incf	___awdiv@dividend+1,f
  3464  1E8E                     l3476:
  3465  1E8E  3001               	movlw	1
  3466  1E8F  00A4               	movwf	??___awdiv
  3467  1E90  0824               	movf	??___awdiv,w
  3468  1E91  06A6               	xorwf	___awdiv@sign,f
  3469  1E92                     l3478:
  3470  1E92  01A7               	clrf	___awdiv@quotient
  3471  1E93  01A8               	clrf	___awdiv@quotient+1
  3472  1E94                     l3480:
  3473  1E94  0820               	movf	___awdiv@divisor,w
  3474  1E95  0421               	iorwf	___awdiv@divisor+1,w
  3475  1E96  1903               	btfsc	3,2
  3476  1E97  2E99               	goto	u5671
  3477  1E98  2E9A               	goto	u5670
  3478  1E99                     u5671:
  3479  1E99  2ED1               	goto	l3500
  3480  1E9A                     u5670:
  3481  1E9A                     l3482:
  3482  1E9A  01A5               	clrf	___awdiv@counter
  3483  1E9B  0AA5               	incf	___awdiv@counter,f
  3484  1E9C  2EA8               	goto	l3488
  3485  1E9D                     l3484:
  3486  1E9D  3001               	movlw	1
  3487  1E9E                     u5685:
  3488  1E9E  1003               	clrc
  3489  1E9F  0DA0               	rlf	___awdiv@divisor,f
  3490  1EA0  0DA1               	rlf	___awdiv@divisor+1,f
  3491  1EA1  3EFF               	addlw	-1
  3492  1EA2  1D03               	skipz
  3493  1EA3  2E9E               	goto	u5685
  3494  1EA4                     l3486:
  3495  1EA4  3001               	movlw	1
  3496  1EA5  00A4               	movwf	??___awdiv
  3497  1EA6  0824               	movf	??___awdiv,w
  3498  1EA7  07A5               	addwf	___awdiv@counter,f
  3499  1EA8                     l3488:
  3500  1EA8  1FA1               	btfss	___awdiv@divisor+1,7
  3501  1EA9  2EAB               	goto	u5691
  3502  1EAA  2EAC               	goto	u5690
  3503  1EAB                     u5691:
  3504  1EAB  2E9D               	goto	l3484
  3505  1EAC                     u5690:
  3506  1EAC                     l3490:
  3507  1EAC  3001               	movlw	1
  3508  1EAD                     u5705:
  3509  1EAD  1003               	clrc
  3510  1EAE  0DA7               	rlf	___awdiv@quotient,f
  3511  1EAF  0DA8               	rlf	___awdiv@quotient+1,f
  3512  1EB0  3EFF               	addlw	-1
  3513  1EB1  1D03               	skipz
  3514  1EB2  2EAD               	goto	u5705
  3515  1EB3  0821               	movf	___awdiv@divisor+1,w
  3516  1EB4  0223               	subwf	___awdiv@dividend+1,w
  3517  1EB5  1D03               	skipz
  3518  1EB6  2EB9               	goto	u5715
  3519  1EB7  0820               	movf	___awdiv@divisor,w
  3520  1EB8  0222               	subwf	___awdiv@dividend,w
  3521  1EB9                     u5715:
  3522  1EB9  1C03               	skipc
  3523  1EBA  2EBC               	goto	u5711
  3524  1EBB  2EBD               	goto	u5710
  3525  1EBC                     u5711:
  3526  1EBC  2EC4               	goto	l3496
  3527  1EBD                     u5710:
  3528  1EBD                     l3492:
  3529  1EBD  0820               	movf	___awdiv@divisor,w
  3530  1EBE  02A2               	subwf	___awdiv@dividend,f
  3531  1EBF  0821               	movf	___awdiv@divisor+1,w
  3532  1EC0  1C03               	skipc
  3533  1EC1  03A3               	decf	___awdiv@dividend+1,f
  3534  1EC2  02A3               	subwf	___awdiv@dividend+1,f
  3535  1EC3                     l3494:
  3536  1EC3  1427               	bsf	___awdiv@quotient,0
  3537  1EC4                     l3496:
  3538  1EC4  3001               	movlw	1
  3539  1EC5                     u5725:
  3540  1EC5  1003               	clrc
  3541  1EC6  0CA1               	rrf	___awdiv@divisor+1,f
  3542  1EC7  0CA0               	rrf	___awdiv@divisor,f
  3543  1EC8  3EFF               	addlw	-1
  3544  1EC9  1D03               	skipz
  3545  1ECA  2EC5               	goto	u5725
  3546  1ECB                     l3498:
  3547  1ECB  3001               	movlw	1
  3548  1ECC  02A5               	subwf	___awdiv@counter,f
  3549  1ECD  1D03               	btfss	3,2
  3550  1ECE  2ED0               	goto	u5731
  3551  1ECF  2ED1               	goto	u5730
  3552  1ED0                     u5731:
  3553  1ED0  2EAC               	goto	l3490
  3554  1ED1                     u5730:
  3555  1ED1                     l3500:
  3556  1ED1  0826               	movf	___awdiv@sign,w
  3557  1ED2  1903               	btfsc	3,2
  3558  1ED3  2ED5               	goto	u5741
  3559  1ED4  2ED6               	goto	u5740
  3560  1ED5                     u5741:
  3561  1ED5  2EDB               	goto	l3504
  3562  1ED6                     u5740:
  3563  1ED6                     l3502:
  3564  1ED6  09A7               	comf	___awdiv@quotient,f
  3565  1ED7  09A8               	comf	___awdiv@quotient+1,f
  3566  1ED8  0AA7               	incf	___awdiv@quotient,f
  3567  1ED9  1903               	skipnz
  3568  1EDA  0AA8               	incf	___awdiv@quotient+1,f
  3569  1EDB                     l3504:
  3570  1EDB  0828               	movf	___awdiv@quotient+1,w
  3571  1EDC  00A1               	movwf	?___awdiv+1
  3572  1EDD  0827               	movf	___awdiv@quotient,w
  3573  1EDE  00A0               	movwf	?___awdiv
  3574  1EDF                     l474:
  3575  1EDF  0008               	return
  3576  1EE0                     __end_of___awdiv:
  3577                           
  3578                           	psect	text5
  3579  1B11                     __ptext5:	
  3580 ;; *************** function _isdigit *****************
  3581 ;; Defined at:
  3582 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3583 ;; Parameters:    Size  Location     Type
  3584 ;;  c               1    wreg     unsigned char 
  3585 ;; Auto vars:     Size  Location     Type
  3586 ;;  c               1    4[COMMON] unsigned char 
  3587 ;; Return value:  Size  Location     Type
  3588 ;;		None               void
  3589 ;; Registers used:
  3590 ;;		wreg, status,2, status,0
  3591 ;; Tracked objects:
  3592 ;;		On entry : 0/0
  3593 ;;		On exit  : 0/0
  3594 ;;		Unchanged: 0/0
  3595 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3596 ;;      Params:         0       0       0       0       0
  3597 ;;      Locals:         2       0       0       0       0
  3598 ;;      Temps:          0       0       0       0       0
  3599 ;;      Totals:         2       0       0       0       0
  3600 ;;Total ram usage:        2 bytes
  3601 ;; Hardware stack levels used:    1
  3602 ;; Hardware stack levels required when called:    1
  3603 ;; This function calls:
  3604 ;;		Nothing
  3605 ;; This function is called by:
  3606 ;;		_sprintf
  3607 ;; This function uses a non-reentrant model
  3608 ;;
  3609                           
  3610                           
  3611                           ;psect for function _isdigit
  3612  1B11                     _isdigit:
  3613                           
  3614                           ;incstack = 0
  3615                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3616                           ;isdigit@c stored from wreg
  3617  1B11  00F4               	movwf	isdigit@c
  3618  1B12                     l2740:
  3619  1B12  01F3               	clrf	_isdigit$801
  3620  1B13                     l2742:
  3621  1B13  303A               	movlw	58
  3622  1B14  0274               	subwf	isdigit@c,w
  3623  1B15  1803               	skipnc
  3624  1B16  2B18               	goto	u4261
  3625  1B17  2B19               	goto	u4260
  3626  1B18                     u4261:
  3627  1B18  2B21               	goto	l2748
  3628  1B19                     u4260:
  3629  1B19                     l2744:
  3630  1B19  3030               	movlw	48
  3631  1B1A  0274               	subwf	isdigit@c,w
  3632  1B1B  1C03               	skipc
  3633  1B1C  2B1E               	goto	u4271
  3634  1B1D  2B1F               	goto	u4270
  3635  1B1E                     u4271:
  3636  1B1E  2B21               	goto	l2748
  3637  1B1F                     u4270:
  3638  1B1F                     l2746:
  3639  1B1F  01F3               	clrf	_isdigit$801
  3640  1B20  0AF3               	incf	_isdigit$801,f
  3641  1B21                     l2748:
  3642  1B21  0C73               	rrf	_isdigit$801,w
  3643  1B22                     l808:
  3644  1B22  0008               	return
  3645  1B23                     __end_of_isdigit:
  3646                           
  3647                           	psect	text6
  3648  05C6                     __ptext6:	
  3649 ;; *************** function _fround *****************
  3650 ;; Defined at:
  3651 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3652 ;; Parameters:    Size  Location     Type
  3653 ;;  prec            1    wreg     unsigned char 
  3654 ;; Auto vars:     Size  Location     Type
  3655 ;;  prec            1   55[BANK0 ] unsigned char 
  3656 ;; Return value:  Size  Location     Type
  3657 ;;                  4   36[BANK0 ] unsigned char 
  3658 ;; Registers used:
  3659 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3660 ;; Tracked objects:
  3661 ;;		On entry : 0/0
  3662 ;;		On exit  : 0/0
  3663 ;;		Unchanged: 0/0
  3664 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3665 ;;      Params:         0       4       0       0       0
  3666 ;;      Locals:         0       9       0       0       0
  3667 ;;      Temps:          0       7       0       0       0
  3668 ;;      Totals:         0      20       0       0       0
  3669 ;;Total ram usage:       20 bytes
  3670 ;; Hardware stack levels used:    1
  3671 ;; Hardware stack levels required when called:    3
  3672 ;; This function calls:
  3673 ;;		___flmul
  3674 ;;		___lwdiv
  3675 ;;		___lwmod
  3676 ;; This function is called by:
  3677 ;;		_sprintf
  3678 ;; This function uses a non-reentrant model
  3679 ;;
  3680                           
  3681                           
  3682                           ;psect for function _fround
  3683  05C6                     _fround:
  3684                           
  3685                           ;incstack = 0
  3686                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3687                           ;fround@prec stored from wreg
  3688  05C6  1283               	bcf	3,5	;RP0=0, select bank0
  3689  05C7  1303               	bcf	3,6	;RP1=0, select bank0
  3690  05C8  00D7               	movwf	fround@prec
  3691  05C9                     l2682:
  3692                           
  3693                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  3694  05C9  306E               	movlw	110
  3695  05CA  0257               	subwf	fround@prec,w
  3696  05CB  1C03               	skipc
  3697  05CC  2DCE               	goto	u4011
  3698  05CD  2DCF               	goto	u4010
  3699  05CE                     u4011:
  3700  05CE  2EDE               	goto	l2690
  3701  05CF                     u4010:
  3702  05CF                     l2684:
  3703                           
  3704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3705  05CF  303F               	movlw	63
  3706  05D0  00AD               	movwf	___flmul@b+3
  3707  05D1  3000               	movlw	0
  3708  05D2  00AC               	movwf	___flmul@b+2
  3709  05D3  3000               	movlw	0
  3710  05D4  00AB               	movwf	___flmul@b+1
  3711  05D5  3000               	movlw	0
  3712  05D6  00AA               	movwf	___flmul@b
  3713  05D7  3064               	movlw	100
  3714  05D8  00A0               	movwf	___lwdiv@divisor
  3715  05D9  3000               	movlw	0
  3716  05DA  00A1               	movwf	___lwdiv@divisor+1
  3717  05DB  0857               	movf	fround@prec,w
  3718  05DC  00C8               	movwf	??_fround
  3719  05DD  01C9               	clrf	??_fround+1
  3720  05DE  0848               	movf	??_fround,w
  3721  05DF  00A2               	movwf	___lwdiv@dividend
  3722  05E0  0849               	movf	??_fround+1,w
  3723  05E1  00A3               	movwf	___lwdiv@dividend+1
  3724  05E2  160A  158A  2433  120A  118A  	fcall	___lwdiv
  3725  05E7  1283               	bcf	3,5	;RP0=0, select bank0
  3726  05E8  1303               	bcf	3,6	;RP1=0, select bank0
  3727  05E9  0820               	movf	?___lwdiv,w
  3728  05EA  00CA               	movwf	??_fround+2
  3729  05EB  3001               	movlw	1
  3730  05EC                     u4025:
  3731  05EC  1003               	clrc
  3732  05ED  0DCA               	rlf	??_fround+2,f
  3733  05EE  3EFF               	addlw	-1
  3734  05EF  1D03               	skipz
  3735  05F0  2DEC               	goto	u4025
  3736  05F1  1003               	clrc
  3737  05F2  0D4A               	rlf	??_fround+2,w
  3738  05F3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3739  05F4  0084               	movwf	4
  3740  05F5  160A  158A  200A  120A  118A  	fcall	stringdir
  3741  05FA  00CB               	movwf	??_fround+3
  3742  05FB  160A  158A  200A  120A  118A  	fcall	stringdir
  3743  0600  00CC               	movwf	??_fround+4
  3744  0601  160A  158A  200A  120A  118A  	fcall	stringdir
  3745  0606  00CD               	movwf	??_fround+5
  3746  0607  160A  158A  200A  120A  118A  	fcall	stringdir
  3747  060C  00CE               	movwf	??_fround+6
  3748  060D  084E               	movf	??_fround+6,w
  3749  060E  00B1               	movwf	___flmul@a+3
  3750  060F  084D               	movf	??_fround+5,w
  3751  0610  00B0               	movwf	___flmul@a+2
  3752  0611  084C               	movf	??_fround+4,w
  3753  0612  00AF               	movwf	___flmul@a+1
  3754  0613  084B               	movf	??_fround+3,w
  3755  0614  00AE               	movwf	___flmul@a
  3756  0615  120A  158A  213C  120A  118A  	fcall	___flmul
  3757  061A  1283               	bcf	3,5	;RP0=0, select bank0
  3758  061B  1303               	bcf	3,6	;RP1=0, select bank0
  3759  061C  082D               	movf	?___flmul+3,w
  3760  061D  00D6               	movwf	_fround$984+3
  3761  061E  082C               	movf	?___flmul+2,w
  3762  061F  00D5               	movwf	_fround$984+2
  3763  0620  082B               	movf	?___flmul+1,w
  3764  0621  00D4               	movwf	_fround$984+1
  3765  0622  082A               	movf	?___flmul,w
  3766  0623  00D3               	movwf	_fround$984
  3767                           
  3768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3769  0624  300A               	movlw	10
  3770  0625  00A0               	movwf	___lwdiv@divisor
  3771  0626  3000               	movlw	0
  3772  0627  00A1               	movwf	___lwdiv@divisor+1
  3773  0628  0857               	movf	fround@prec,w
  3774  0629  00C8               	movwf	??_fround
  3775  062A  01C9               	clrf	??_fround+1
  3776  062B  0848               	movf	??_fround,w
  3777  062C  00F5               	movwf	___lwmod@dividend
  3778  062D  0849               	movf	??_fround+1,w
  3779  062E  00F6               	movwf	___lwmod@dividend+1
  3780  062F  3064               	movlw	100
  3781  0630  00F3               	movwf	___lwmod@divisor
  3782  0631  3000               	movlw	0
  3783  0632  00F4               	movwf	___lwmod@divisor+1
  3784  0633  160A  118A  2001  120A  118A  	fcall	___lwmod
  3785  0638  0874               	movf	?___lwmod+1,w
  3786  0639  1283               	bcf	3,5	;RP0=0, select bank0
  3787  063A  1303               	bcf	3,6	;RP1=0, select bank0
  3788  063B  00A3               	movwf	___lwdiv@dividend+1
  3789  063C  0873               	movf	?___lwmod,w
  3790  063D  00A2               	movwf	___lwdiv@dividend
  3791  063E  160A  158A  2433  120A  118A  	fcall	___lwdiv
  3792  0643  1283               	bcf	3,5	;RP0=0, select bank0
  3793  0644  1303               	bcf	3,6	;RP1=0, select bank0
  3794  0645  0820               	movf	?___lwdiv,w
  3795  0646  00CA               	movwf	??_fround+2
  3796  0647  3001               	movlw	1
  3797  0648                     u4035:
  3798  0648  1003               	clrc
  3799  0649  0DCA               	rlf	??_fround+2,f
  3800  064A  3EFF               	addlw	-1
  3801  064B  1D03               	skipz
  3802  064C  2E48               	goto	u4035
  3803  064D  1003               	clrc
  3804  064E  0D4A               	rlf	??_fround+2,w
  3805  064F  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3806  0650  0084               	movwf	4
  3807  0651  160A  158A  200A  120A  118A  	fcall	stringdir
  3808  0656  00CB               	movwf	??_fround+3
  3809  0657  160A  158A  200A  120A  118A  	fcall	stringdir
  3810  065C  00CC               	movwf	??_fround+4
  3811  065D  160A  158A  200A  120A  118A  	fcall	stringdir
  3812  0662  00CD               	movwf	??_fround+5
  3813  0663  160A  158A  200A  120A  118A  	fcall	stringdir
  3814  0668  00CE               	movwf	??_fround+6
  3815  0669  084E               	movf	??_fround+6,w
  3816  066A  00AD               	movwf	___flmul@b+3
  3817  066B  084D               	movf	??_fround+5,w
  3818  066C  00AC               	movwf	___flmul@b+2
  3819  066D  084C               	movf	??_fround+4,w
  3820  066E  00AB               	movwf	___flmul@b+1
  3821  066F  084B               	movf	??_fround+3,w
  3822  0670  00AA               	movwf	___flmul@b
  3823  0671  0856               	movf	_fround$984+3,w
  3824  0672  00B1               	movwf	___flmul@a+3
  3825  0673  0855               	movf	_fround$984+2,w
  3826  0674  00B0               	movwf	___flmul@a+2
  3827  0675  0854               	movf	_fround$984+1,w
  3828  0676  00AF               	movwf	___flmul@a+1
  3829  0677  0853               	movf	_fround$984,w
  3830  0678  00AE               	movwf	___flmul@a
  3831  0679  120A  158A  213C  120A  118A  	fcall	___flmul
  3832  067E  1283               	bcf	3,5	;RP0=0, select bank0
  3833  067F  1303               	bcf	3,6	;RP1=0, select bank0
  3834  0680  082D               	movf	?___flmul+3,w
  3835  0681  00D2               	movwf	_fround$985+3
  3836  0682  082C               	movf	?___flmul+2,w
  3837  0683  00D1               	movwf	_fround$985+2
  3838  0684  082B               	movf	?___flmul+1,w
  3839  0685  00D0               	movwf	_fround$985+1
  3840  0686  082A               	movf	?___flmul,w
  3841  0687  00CF               	movwf	_fround$985
  3842                           
  3843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  3844  0688  300A               	movlw	10
  3845  0689  00F3               	movwf	___lwmod@divisor
  3846  068A  3000               	movlw	0
  3847  068B  00F4               	movwf	___lwmod@divisor+1
  3848  068C  0857               	movf	fround@prec,w
  3849  068D  00C8               	movwf	??_fround
  3850  068E  01C9               	clrf	??_fround+1
  3851  068F  0848               	movf	??_fround,w
  3852  0690  00F5               	movwf	___lwmod@dividend
  3853  0691  0849               	movf	??_fround+1,w
  3854  0692  00F6               	movwf	___lwmod@dividend+1
  3855  0693  160A  118A  2001  120A  118A  	fcall	___lwmod
  3856  0698  0873               	movf	?___lwmod,w
  3857  0699  1283               	bcf	3,5	;RP0=0, select bank0
  3858  069A  1303               	bcf	3,6	;RP1=0, select bank0
  3859  069B  00CA               	movwf	??_fround+2
  3860  069C  3001               	movlw	1
  3861  069D                     u4045:
  3862  069D  1003               	clrc
  3863  069E  0DCA               	rlf	??_fround+2,f
  3864  069F  3EFF               	addlw	-1
  3865  06A0  1D03               	skipz
  3866  06A1  2E9D               	goto	u4045
  3867  06A2  1003               	clrc
  3868  06A3  0D4A               	rlf	??_fround+2,w
  3869  06A4  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3870  06A5  0084               	movwf	4
  3871  06A6  160A  158A  200A  120A  118A  	fcall	stringdir
  3872  06AB  00CB               	movwf	??_fround+3
  3873  06AC  160A  158A  200A  120A  118A  	fcall	stringdir
  3874  06B1  00CC               	movwf	??_fround+4
  3875  06B2  160A  158A  200A  120A  118A  	fcall	stringdir
  3876  06B7  00CD               	movwf	??_fround+5
  3877  06B8  160A  158A  200A  120A  118A  	fcall	stringdir
  3878  06BD  00CE               	movwf	??_fround+6
  3879  06BE  084E               	movf	??_fround+6,w
  3880  06BF  00AD               	movwf	___flmul@b+3
  3881  06C0  084D               	movf	??_fround+5,w
  3882  06C1  00AC               	movwf	___flmul@b+2
  3883  06C2  084C               	movf	??_fround+4,w
  3884  06C3  00AB               	movwf	___flmul@b+1
  3885  06C4  084B               	movf	??_fround+3,w
  3886  06C5  00AA               	movwf	___flmul@b
  3887  06C6  0852               	movf	_fround$985+3,w
  3888  06C7  00B1               	movwf	___flmul@a+3
  3889  06C8  0851               	movf	_fround$985+2,w
  3890  06C9  00B0               	movwf	___flmul@a+2
  3891  06CA  0850               	movf	_fround$985+1,w
  3892  06CB  00AF               	movwf	___flmul@a+1
  3893  06CC  084F               	movf	_fround$985,w
  3894  06CD  00AE               	movwf	___flmul@a
  3895  06CE  120A  158A  213C  120A  118A  	fcall	___flmul
  3896  06D3  1283               	bcf	3,5	;RP0=0, select bank0
  3897  06D4  1303               	bcf	3,6	;RP1=0, select bank0
  3898  06D5  082D               	movf	?___flmul+3,w
  3899  06D6  00C7               	movwf	?_fround+3
  3900  06D7  082C               	movf	?___flmul+2,w
  3901  06D8  00C6               	movwf	?_fround+2
  3902  06D9  082B               	movf	?___flmul+1,w
  3903  06DA  00C5               	movwf	?_fround+1
  3904  06DB  082A               	movf	?___flmul,w
  3905  06DC  00C4               	movwf	?_fround
  3906  06DD  2FD2               	goto	l227
  3907  06DE                     l2690:
  3908  06DE  300B               	movlw	11
  3909  06DF  0257               	subwf	fround@prec,w
  3910  06E0  1C03               	skipc
  3911  06E1  2EE3               	goto	u4051
  3912  06E2  2EE4               	goto	u4050
  3913  06E3                     u4051:
  3914  06E3  2F8F               	goto	l2696
  3915  06E4                     u4050:
  3916  06E4                     l2692:
  3917                           
  3918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3919  06E4  303F               	movlw	63
  3920  06E5  00AD               	movwf	___flmul@b+3
  3921  06E6  3000               	movlw	0
  3922  06E7  00AC               	movwf	___flmul@b+2
  3923  06E8  3000               	movlw	0
  3924  06E9  00AB               	movwf	___flmul@b+1
  3925  06EA  3000               	movlw	0
  3926  06EB  00AA               	movwf	___flmul@b
  3927  06EC  300A               	movlw	10
  3928  06ED  00A0               	movwf	___lwdiv@divisor
  3929  06EE  3000               	movlw	0
  3930  06EF  00A1               	movwf	___lwdiv@divisor+1
  3931  06F0  0857               	movf	fround@prec,w
  3932  06F1  00C8               	movwf	??_fround
  3933  06F2  01C9               	clrf	??_fround+1
  3934  06F3  0848               	movf	??_fround,w
  3935  06F4  00A2               	movwf	___lwdiv@dividend
  3936  06F5  0849               	movf	??_fround+1,w
  3937  06F6  00A3               	movwf	___lwdiv@dividend+1
  3938  06F7  160A  158A  2433  120A  118A  	fcall	___lwdiv
  3939  06FC  1283               	bcf	3,5	;RP0=0, select bank0
  3940  06FD  1303               	bcf	3,6	;RP1=0, select bank0
  3941  06FE  0820               	movf	?___lwdiv,w
  3942  06FF  00CA               	movwf	??_fround+2
  3943  0700  3001               	movlw	1
  3944  0701                     u4065:
  3945  0701  1003               	clrc
  3946  0702  0DCA               	rlf	??_fround+2,f
  3947  0703  3EFF               	addlw	-1
  3948  0704  1D03               	skipz
  3949  0705  2F01               	goto	u4065
  3950  0706  1003               	clrc
  3951  0707  0D4A               	rlf	??_fround+2,w
  3952  0708  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3953  0709  0084               	movwf	4
  3954  070A  160A  158A  200A  120A  118A  	fcall	stringdir
  3955  070F  00CB               	movwf	??_fround+3
  3956  0710  160A  158A  200A  120A  118A  	fcall	stringdir
  3957  0715  00CC               	movwf	??_fround+4
  3958  0716  160A  158A  200A  120A  118A  	fcall	stringdir
  3959  071B  00CD               	movwf	??_fround+5
  3960  071C  160A  158A  200A  120A  118A  	fcall	stringdir
  3961  0721  00CE               	movwf	??_fround+6
  3962  0722  084E               	movf	??_fround+6,w
  3963  0723  00B1               	movwf	___flmul@a+3
  3964  0724  084D               	movf	??_fround+5,w
  3965  0725  00B0               	movwf	___flmul@a+2
  3966  0726  084C               	movf	??_fround+4,w
  3967  0727  00AF               	movwf	___flmul@a+1
  3968  0728  084B               	movf	??_fround+3,w
  3969  0729  00AE               	movwf	___flmul@a
  3970  072A  120A  158A  213C  120A  118A  	fcall	___flmul
  3971  072F  1283               	bcf	3,5	;RP0=0, select bank0
  3972  0730  1303               	bcf	3,6	;RP1=0, select bank0
  3973  0731  082D               	movf	?___flmul+3,w
  3974  0732  00D6               	movwf	_fround$984+3
  3975  0733  082C               	movf	?___flmul+2,w
  3976  0734  00D5               	movwf	_fround$984+2
  3977  0735  082B               	movf	?___flmul+1,w
  3978  0736  00D4               	movwf	_fround$984+1
  3979  0737  082A               	movf	?___flmul,w
  3980  0738  00D3               	movwf	_fround$984
  3981                           
  3982                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  3983  0739  300A               	movlw	10
  3984  073A  00F3               	movwf	___lwmod@divisor
  3985  073B  3000               	movlw	0
  3986  073C  00F4               	movwf	___lwmod@divisor+1
  3987  073D  0857               	movf	fround@prec,w
  3988  073E  00C8               	movwf	??_fround
  3989  073F  01C9               	clrf	??_fround+1
  3990  0740  0848               	movf	??_fround,w
  3991  0741  00F5               	movwf	___lwmod@dividend
  3992  0742  0849               	movf	??_fround+1,w
  3993  0743  00F6               	movwf	___lwmod@dividend+1
  3994  0744  160A  118A  2001  120A  118A  	fcall	___lwmod
  3995  0749  0873               	movf	?___lwmod,w
  3996  074A  1283               	bcf	3,5	;RP0=0, select bank0
  3997  074B  1303               	bcf	3,6	;RP1=0, select bank0
  3998  074C  00CA               	movwf	??_fround+2
  3999  074D  3001               	movlw	1
  4000  074E                     u4075:
  4001  074E  1003               	clrc
  4002  074F  0DCA               	rlf	??_fround+2,f
  4003  0750  3EFF               	addlw	-1
  4004  0751  1D03               	skipz
  4005  0752  2F4E               	goto	u4075
  4006  0753  1003               	clrc
  4007  0754  0D4A               	rlf	??_fround+2,w
  4008  0755  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4009  0756  0084               	movwf	4
  4010  0757  160A  158A  200A  120A  118A  	fcall	stringdir
  4011  075C  00CB               	movwf	??_fround+3
  4012  075D  160A  158A  200A  120A  118A  	fcall	stringdir
  4013  0762  00CC               	movwf	??_fround+4
  4014  0763  160A  158A  200A  120A  118A  	fcall	stringdir
  4015  0768  00CD               	movwf	??_fround+5
  4016  0769  160A  158A  200A  120A  118A  	fcall	stringdir
  4017  076E  00CE               	movwf	??_fround+6
  4018  076F  084E               	movf	??_fround+6,w
  4019  0770  00AD               	movwf	___flmul@b+3
  4020  0771  084D               	movf	??_fround+5,w
  4021  0772  00AC               	movwf	___flmul@b+2
  4022  0773  084C               	movf	??_fround+4,w
  4023  0774  00AB               	movwf	___flmul@b+1
  4024  0775  084B               	movf	??_fround+3,w
  4025  0776  00AA               	movwf	___flmul@b
  4026  0777  0856               	movf	_fround$984+3,w
  4027  0778  00B1               	movwf	___flmul@a+3
  4028  0779  0855               	movf	_fround$984+2,w
  4029  077A  00B0               	movwf	___flmul@a+2
  4030  077B  0854               	movf	_fround$984+1,w
  4031  077C  00AF               	movwf	___flmul@a+1
  4032  077D  0853               	movf	_fround$984,w
  4033  077E  00AE               	movwf	___flmul@a
  4034  077F  120A  158A  213C  120A  118A  	fcall	___flmul
  4035  0784  1283               	bcf	3,5	;RP0=0, select bank0
  4036  0785  1303               	bcf	3,6	;RP1=0, select bank0
  4037  0786  082D               	movf	?___flmul+3,w
  4038  0787  00C7               	movwf	?_fround+3
  4039  0788  082C               	movf	?___flmul+2,w
  4040  0789  00C6               	movwf	?_fround+2
  4041  078A  082B               	movf	?___flmul+1,w
  4042  078B  00C5               	movwf	?_fround+1
  4043  078C  082A               	movf	?___flmul,w
  4044  078D  00C4               	movwf	?_fround
  4045  078E  2FD2               	goto	l227
  4046  078F                     l2696:
  4047                           
  4048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4049  078F  303F               	movlw	63
  4050  0790  00AD               	movwf	___flmul@b+3
  4051  0791  3000               	movlw	0
  4052  0792  00AC               	movwf	___flmul@b+2
  4053  0793  3000               	movlw	0
  4054  0794  00AB               	movwf	___flmul@b+1
  4055  0795  3000               	movlw	0
  4056  0796  00AA               	movwf	___flmul@b
  4057  0797  0857               	movf	fround@prec,w
  4058  0798  00C8               	movwf	??_fround
  4059  0799  3001               	movlw	1
  4060  079A                     u4085:
  4061  079A  1003               	clrc
  4062  079B  0DC8               	rlf	??_fround,f
  4063  079C  3EFF               	addlw	-1
  4064  079D  1D03               	skipz
  4065  079E  2F9A               	goto	u4085
  4066  079F  1003               	clrc
  4067  07A0  0D48               	rlf	??_fround,w
  4068  07A1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4069  07A2  0084               	movwf	4
  4070  07A3  160A  158A  200A  120A  118A  	fcall	stringdir
  4071  07A8  00C9               	movwf	??_fround+1
  4072  07A9  160A  158A  200A  120A  118A  	fcall	stringdir
  4073  07AE  00CA               	movwf	??_fround+2
  4074  07AF  160A  158A  200A  120A  118A  	fcall	stringdir
  4075  07B4  00CB               	movwf	??_fround+3
  4076  07B5  160A  158A  200A  120A  118A  	fcall	stringdir
  4077  07BA  00CC               	movwf	??_fround+4
  4078  07BB  084C               	movf	??_fround+4,w
  4079  07BC  00B1               	movwf	___flmul@a+3
  4080  07BD  084B               	movf	??_fround+3,w
  4081  07BE  00B0               	movwf	___flmul@a+2
  4082  07BF  084A               	movf	??_fround+2,w
  4083  07C0  00AF               	movwf	___flmul@a+1
  4084  07C1  0849               	movf	??_fround+1,w
  4085  07C2  00AE               	movwf	___flmul@a
  4086  07C3  120A  158A  213C  120A  118A  	fcall	___flmul
  4087  07C8  1283               	bcf	3,5	;RP0=0, select bank0
  4088  07C9  1303               	bcf	3,6	;RP1=0, select bank0
  4089  07CA  082D               	movf	?___flmul+3,w
  4090  07CB  00C7               	movwf	?_fround+3
  4091  07CC  082C               	movf	?___flmul+2,w
  4092  07CD  00C6               	movwf	?_fround+2
  4093  07CE  082B               	movf	?___flmul+1,w
  4094  07CF  00C5               	movwf	?_fround+1
  4095  07D0  082A               	movf	?___flmul,w
  4096  07D1  00C4               	movwf	?_fround
  4097  07D2                     l227:
  4098  07D2  0008               	return
  4099  07D3                     __end_of_fround:
  4100                           
  4101                           	psect	text7
  4102  1001                     __ptext7:	
  4103 ;; *************** function ___lwmod *****************
  4104 ;; Defined at:
  4105 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4106 ;; Parameters:    Size  Location     Type
  4107 ;;  divisor         2    3[COMMON] unsigned int 
  4108 ;;  dividend        2    5[COMMON] unsigned int 
  4109 ;; Auto vars:     Size  Location     Type
  4110 ;;  counter         1    8[COMMON] unsigned char 
  4111 ;; Return value:  Size  Location     Type
  4112 ;;                  2    3[COMMON] unsigned int 
  4113 ;; Registers used:
  4114 ;;		wreg, status,2, status,0
  4115 ;; Tracked objects:
  4116 ;;		On entry : 0/0
  4117 ;;		On exit  : 0/0
  4118 ;;		Unchanged: 0/0
  4119 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4120 ;;      Params:         4       0       0       0       0
  4121 ;;      Locals:         1       0       0       0       0
  4122 ;;      Temps:          1       0       0       0       0
  4123 ;;      Totals:         6       0       0       0       0
  4124 ;;Total ram usage:        6 bytes
  4125 ;; Hardware stack levels used:    1
  4126 ;; Hardware stack levels required when called:    1
  4127 ;; This function calls:
  4128 ;;		Nothing
  4129 ;; This function is called by:
  4130 ;;		_fround
  4131 ;; This function uses a non-reentrant model
  4132 ;;
  4133                           
  4134                           
  4135                           ;psect for function ___lwmod
  4136  1001                     ___lwmod:
  4137  1001                     l2302:	
  4138                           ;incstack = 0
  4139                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4140                           
  4141  1001  0873               	movf	___lwmod@divisor,w
  4142  1002  0474               	iorwf	___lwmod@divisor+1,w
  4143  1003  1903               	btfsc	3,2
  4144  1004  2806               	goto	u3121
  4145  1005  2807               	goto	u3120
  4146  1006                     u3121:
  4147  1006  2836               	goto	l2320
  4148  1007                     u3120:
  4149  1007                     l2304:
  4150  1007  01F8               	clrf	___lwmod@counter
  4151  1008  0AF8               	incf	___lwmod@counter,f
  4152  1009  2815               	goto	l2310
  4153  100A                     l2306:
  4154  100A  3001               	movlw	1
  4155  100B                     u3135:
  4156  100B  1003               	clrc
  4157  100C  0DF3               	rlf	___lwmod@divisor,f
  4158  100D  0DF4               	rlf	___lwmod@divisor+1,f
  4159  100E  3EFF               	addlw	-1
  4160  100F  1D03               	skipz
  4161  1010  280B               	goto	u3135
  4162  1011                     l2308:
  4163  1011  3001               	movlw	1
  4164  1012  00F7               	movwf	??___lwmod
  4165  1013  0877               	movf	??___lwmod,w
  4166  1014  07F8               	addwf	___lwmod@counter,f
  4167  1015                     l2310:
  4168  1015  1FF4               	btfss	___lwmod@divisor+1,7
  4169  1016  2818               	goto	u3141
  4170  1017  2819               	goto	u3140
  4171  1018                     u3141:
  4172  1018  280A               	goto	l2306
  4173  1019                     u3140:
  4174  1019                     l2312:
  4175  1019  0874               	movf	___lwmod@divisor+1,w
  4176  101A  0276               	subwf	___lwmod@dividend+1,w
  4177  101B  1D03               	skipz
  4178  101C  281F               	goto	u3155
  4179  101D  0873               	movf	___lwmod@divisor,w
  4180  101E  0275               	subwf	___lwmod@dividend,w
  4181  101F                     u3155:
  4182  101F  1C03               	skipc
  4183  1020  2822               	goto	u3151
  4184  1021  2823               	goto	u3150
  4185  1022                     u3151:
  4186  1022  2829               	goto	l2316
  4187  1023                     u3150:
  4188  1023                     l2314:
  4189  1023  0873               	movf	___lwmod@divisor,w
  4190  1024  02F5               	subwf	___lwmod@dividend,f
  4191  1025  0874               	movf	___lwmod@divisor+1,w
  4192  1026  1C03               	skipc
  4193  1027  03F6               	decf	___lwmod@dividend+1,f
  4194  1028  02F6               	subwf	___lwmod@dividend+1,f
  4195  1029                     l2316:
  4196  1029  3001               	movlw	1
  4197  102A                     u3165:
  4198  102A  1003               	clrc
  4199  102B  0CF4               	rrf	___lwmod@divisor+1,f
  4200  102C  0CF3               	rrf	___lwmod@divisor,f
  4201  102D  3EFF               	addlw	-1
  4202  102E  1D03               	skipz
  4203  102F  282A               	goto	u3165
  4204  1030                     l2318:
  4205  1030  3001               	movlw	1
  4206  1031  02F8               	subwf	___lwmod@counter,f
  4207  1032  1D03               	btfss	3,2
  4208  1033  2835               	goto	u3171
  4209  1034  2836               	goto	u3170
  4210  1035                     u3171:
  4211  1035  2819               	goto	l2312
  4212  1036                     u3170:
  4213  1036                     l2320:
  4214  1036  0876               	movf	___lwmod@dividend+1,w
  4215  1037  00F4               	movwf	?___lwmod+1
  4216  1038  0875               	movf	___lwmod@dividend,w
  4217  1039  00F3               	movwf	?___lwmod
  4218  103A                     l637:
  4219  103A  0008               	return
  4220  103B                     __end_of___lwmod:
  4221                           
  4222                           	psect	text8
  4223  1C33                     __ptext8:	
  4224 ;; *************** function ___lwdiv *****************
  4225 ;; Defined at:
  4226 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4227 ;; Parameters:    Size  Location     Type
  4228 ;;  divisor         2    0[BANK0 ] unsigned int 
  4229 ;;  dividend        2    2[BANK0 ] unsigned int 
  4230 ;; Auto vars:     Size  Location     Type
  4231 ;;  quotient        2    4[BANK0 ] unsigned int 
  4232 ;;  counter         1    6[BANK0 ] unsigned char 
  4233 ;; Return value:  Size  Location     Type
  4234 ;;                  2    0[BANK0 ] unsigned int 
  4235 ;; Registers used:
  4236 ;;		wreg, status,2, status,0
  4237 ;; Tracked objects:
  4238 ;;		On entry : 0/0
  4239 ;;		On exit  : 0/0
  4240 ;;		Unchanged: 0/0
  4241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4242 ;;      Params:         0       4       0       0       0
  4243 ;;      Locals:         0       3       0       0       0
  4244 ;;      Temps:          1       0       0       0       0
  4245 ;;      Totals:         1       7       0       0       0
  4246 ;;Total ram usage:        8 bytes
  4247 ;; Hardware stack levels used:    1
  4248 ;; Hardware stack levels required when called:    1
  4249 ;; This function calls:
  4250 ;;		Nothing
  4251 ;; This function is called by:
  4252 ;;		_fround
  4253 ;; This function uses a non-reentrant model
  4254 ;;
  4255                           
  4256                           
  4257                           ;psect for function ___lwdiv
  4258  1C33                     ___lwdiv:
  4259  1C33                     l2276:	
  4260                           ;incstack = 0
  4261                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4262                           
  4263  1C33  1283               	bcf	3,5	;RP0=0, select bank0
  4264  1C34  1303               	bcf	3,6	;RP1=0, select bank0
  4265  1C35  01A4               	clrf	___lwdiv@quotient
  4266  1C36  01A5               	clrf	___lwdiv@quotient+1
  4267  1C37                     l2278:
  4268  1C37  0820               	movf	___lwdiv@divisor,w
  4269  1C38  0421               	iorwf	___lwdiv@divisor+1,w
  4270  1C39  1903               	btfsc	3,2
  4271  1C3A  2C3C               	goto	u3051
  4272  1C3B  2C3D               	goto	u3050
  4273  1C3C                     u3051:
  4274  1C3C  2C74               	goto	l2298
  4275  1C3D                     u3050:
  4276  1C3D                     l2280:
  4277  1C3D  01A6               	clrf	___lwdiv@counter
  4278  1C3E  0AA6               	incf	___lwdiv@counter,f
  4279  1C3F  2C4B               	goto	l2286
  4280  1C40                     l2282:
  4281  1C40  3001               	movlw	1
  4282  1C41                     u3065:
  4283  1C41  1003               	clrc
  4284  1C42  0DA0               	rlf	___lwdiv@divisor,f
  4285  1C43  0DA1               	rlf	___lwdiv@divisor+1,f
  4286  1C44  3EFF               	addlw	-1
  4287  1C45  1D03               	skipz
  4288  1C46  2C41               	goto	u3065
  4289  1C47                     l2284:
  4290  1C47  3001               	movlw	1
  4291  1C48  00F9               	movwf	??___lwdiv
  4292  1C49  0879               	movf	??___lwdiv,w
  4293  1C4A  07A6               	addwf	___lwdiv@counter,f
  4294  1C4B                     l2286:
  4295  1C4B  1FA1               	btfss	___lwdiv@divisor+1,7
  4296  1C4C  2C4E               	goto	u3071
  4297  1C4D  2C4F               	goto	u3070
  4298  1C4E                     u3071:
  4299  1C4E  2C40               	goto	l2282
  4300  1C4F                     u3070:
  4301  1C4F                     l2288:
  4302  1C4F  3001               	movlw	1
  4303  1C50                     u3085:
  4304  1C50  1003               	clrc
  4305  1C51  0DA4               	rlf	___lwdiv@quotient,f
  4306  1C52  0DA5               	rlf	___lwdiv@quotient+1,f
  4307  1C53  3EFF               	addlw	-1
  4308  1C54  1D03               	skipz
  4309  1C55  2C50               	goto	u3085
  4310  1C56  0821               	movf	___lwdiv@divisor+1,w
  4311  1C57  0223               	subwf	___lwdiv@dividend+1,w
  4312  1C58  1D03               	skipz
  4313  1C59  2C5C               	goto	u3095
  4314  1C5A  0820               	movf	___lwdiv@divisor,w
  4315  1C5B  0222               	subwf	___lwdiv@dividend,w
  4316  1C5C                     u3095:
  4317  1C5C  1C03               	skipc
  4318  1C5D  2C5F               	goto	u3091
  4319  1C5E  2C60               	goto	u3090
  4320  1C5F                     u3091:
  4321  1C5F  2C67               	goto	l2294
  4322  1C60                     u3090:
  4323  1C60                     l2290:
  4324  1C60  0820               	movf	___lwdiv@divisor,w
  4325  1C61  02A2               	subwf	___lwdiv@dividend,f
  4326  1C62  0821               	movf	___lwdiv@divisor+1,w
  4327  1C63  1C03               	skipc
  4328  1C64  03A3               	decf	___lwdiv@dividend+1,f
  4329  1C65  02A3               	subwf	___lwdiv@dividend+1,f
  4330  1C66                     l2292:
  4331  1C66  1424               	bsf	___lwdiv@quotient,0
  4332  1C67                     l2294:
  4333  1C67  3001               	movlw	1
  4334  1C68                     u3105:
  4335  1C68  1003               	clrc
  4336  1C69  0CA1               	rrf	___lwdiv@divisor+1,f
  4337  1C6A  0CA0               	rrf	___lwdiv@divisor,f
  4338  1C6B  3EFF               	addlw	-1
  4339  1C6C  1D03               	skipz
  4340  1C6D  2C68               	goto	u3105
  4341  1C6E                     l2296:
  4342  1C6E  3001               	movlw	1
  4343  1C6F  02A6               	subwf	___lwdiv@counter,f
  4344  1C70  1D03               	btfss	3,2
  4345  1C71  2C73               	goto	u3111
  4346  1C72  2C74               	goto	u3110
  4347  1C73                     u3111:
  4348  1C73  2C4F               	goto	l2288
  4349  1C74                     u3110:
  4350  1C74                     l2298:
  4351  1C74  0825               	movf	___lwdiv@quotient+1,w
  4352  1C75  00A1               	movwf	?___lwdiv+1
  4353  1C76  0824               	movf	___lwdiv@quotient,w
  4354  1C77  00A0               	movwf	?___lwdiv
  4355  1C78                     l627:
  4356  1C78  0008               	return
  4357  1C79                     __end_of___lwdiv:
  4358                           
  4359                           	psect	text9
  4360  093C                     __ptext9:	
  4361 ;; *************** function ___flmul *****************
  4362 ;; Defined at:
  4363 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4364 ;; Parameters:    Size  Location     Type
  4365 ;;  b               4   10[BANK0 ] unsigned int 
  4366 ;;  a               4   14[BANK0 ] unsigned int 
  4367 ;; Auto vars:     Size  Location     Type
  4368 ;;  prod            4   30[BANK0 ] struct .
  4369 ;;  grs             4   24[BANK0 ] unsigned long 
  4370 ;;  temp            2   34[BANK0 ] struct .
  4371 ;;  bexp            1   29[BANK0 ] unsigned char 
  4372 ;;  aexp            1   28[BANK0 ] unsigned char 
  4373 ;;  sign            1   23[BANK0 ] unsigned char 
  4374 ;; Return value:  Size  Location     Type
  4375 ;;                  4   10[BANK0 ] unsigned char 
  4376 ;; Registers used:
  4377 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4378 ;; Tracked objects:
  4379 ;;		On entry : 0/0
  4380 ;;		On exit  : 0/0
  4381 ;;		Unchanged: 0/0
  4382 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4383 ;;      Params:         0       8       0       0       0
  4384 ;;      Locals:         0      13       0       0       0
  4385 ;;      Temps:          0       5       0       0       0
  4386 ;;      Totals:         0      26       0       0       0
  4387 ;;Total ram usage:       26 bytes
  4388 ;; Hardware stack levels used:    1
  4389 ;; Hardware stack levels required when called:    2
  4390 ;; This function calls:
  4391 ;;		__Umul8_16
  4392 ;; This function is called by:
  4393 ;;		_main
  4394 ;;		_fround
  4395 ;;		_scale
  4396 ;;		_sprintf
  4397 ;; This function uses a non-reentrant model
  4398 ;;
  4399                           
  4400                           
  4401                           ;psect for function ___flmul
  4402  093C                     ___flmul:
  4403  093C                     l2518:	
  4404                           ;incstack = 0
  4405                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4406                           
  4407  093C  1283               	bcf	3,5	;RP0=0, select bank0
  4408  093D  1303               	bcf	3,6	;RP1=0, select bank0
  4409  093E  082D               	movf	___flmul@b+3,w
  4410  093F  3980               	andlw	128
  4411  0940  00B2               	movwf	??___flmul
  4412  0941  0832               	movf	??___flmul,w
  4413  0942  00B7               	movwf	___flmul@sign
  4414  0943                     l2520:
  4415  0943  082D               	movf	___flmul@b+3,w
  4416  0944  00B2               	movwf	??___flmul
  4417  0945  0732               	addwf	??___flmul,w
  4418  0946  00B3               	movwf	??___flmul+1
  4419  0947  0833               	movf	??___flmul+1,w
  4420  0948  00BD               	movwf	___flmul@bexp
  4421  0949                     l2522:
  4422  0949  1FAC               	btfss	___flmul@b+2,7
  4423  094A  294C               	goto	u3641
  4424  094B  294D               	goto	u3640
  4425  094C                     u3641:
  4426  094C  294E               	goto	l2526
  4427  094D                     u3640:
  4428  094D                     l2524:
  4429  094D  143D               	bsf	___flmul@bexp,0
  4430  094E                     l2526:
  4431  094E  083D               	movf	___flmul@bexp,w
  4432  094F  1903               	btfsc	3,2
  4433  0950  2952               	goto	u3651
  4434  0951  2953               	goto	u3650
  4435  0952                     u3651:
  4436  0952  2962               	goto	l2534
  4437  0953                     u3650:
  4438  0953                     l2528:
  4439  0953  0A3D               	incf	___flmul@bexp,w
  4440  0954  1D03               	btfss	3,2
  4441  0955  2957               	goto	u3661
  4442  0956  2958               	goto	u3660
  4443  0957                     u3661:
  4444  0957  2960               	goto	l2532
  4445  0958                     u3660:
  4446  0958                     l2530:
  4447  0958  3000               	movlw	0
  4448  0959  00AD               	movwf	___flmul@b+3
  4449  095A  3000               	movlw	0
  4450  095B  00AC               	movwf	___flmul@b+2
  4451  095C  3000               	movlw	0
  4452  095D  00AB               	movwf	___flmul@b+1
  4453  095E  3000               	movlw	0
  4454  095F  00AA               	movwf	___flmul@b
  4455  0960                     l2532:
  4456  0960  17AC               	bsf	___flmul@b+2,7
  4457  0961  296A               	goto	l2536
  4458  0962                     l2534:
  4459  0962  3000               	movlw	0
  4460  0963  00AD               	movwf	___flmul@b+3
  4461  0964  3000               	movlw	0
  4462  0965  00AC               	movwf	___flmul@b+2
  4463  0966  3000               	movlw	0
  4464  0967  00AB               	movwf	___flmul@b+1
  4465  0968  3000               	movlw	0
  4466  0969  00AA               	movwf	___flmul@b
  4467  096A                     l2536:
  4468  096A  0831               	movf	___flmul@a+3,w
  4469  096B  3980               	andlw	128
  4470  096C  00B2               	movwf	??___flmul
  4471  096D  0832               	movf	??___flmul,w
  4472  096E  06B7               	xorwf	___flmul@sign,f
  4473  096F                     l2538:
  4474  096F  0831               	movf	___flmul@a+3,w
  4475  0970  00B2               	movwf	??___flmul
  4476  0971  0732               	addwf	??___flmul,w
  4477  0972  00B3               	movwf	??___flmul+1
  4478  0973  0833               	movf	??___flmul+1,w
  4479  0974  00BC               	movwf	___flmul@aexp
  4480  0975                     l2540:
  4481  0975  1FB0               	btfss	___flmul@a+2,7
  4482  0976  2978               	goto	u3671
  4483  0977  2979               	goto	u3670
  4484  0978                     u3671:
  4485  0978  297A               	goto	l2544
  4486  0979                     u3670:
  4487  0979                     l2542:
  4488  0979  143C               	bsf	___flmul@aexp,0
  4489  097A                     l2544:
  4490  097A  083C               	movf	___flmul@aexp,w
  4491  097B  1903               	btfsc	3,2
  4492  097C  297E               	goto	u3681
  4493  097D  297F               	goto	u3680
  4494  097E                     u3681:
  4495  097E  298E               	goto	l2552
  4496  097F                     u3680:
  4497  097F                     l2546:
  4498  097F  0A3C               	incf	___flmul@aexp,w
  4499  0980  1D03               	btfss	3,2
  4500  0981  2983               	goto	u3691
  4501  0982  2984               	goto	u3690
  4502  0983                     u3691:
  4503  0983  298C               	goto	l2550
  4504  0984                     u3690:
  4505  0984                     l2548:
  4506  0984  3000               	movlw	0
  4507  0985  00B1               	movwf	___flmul@a+3
  4508  0986  3000               	movlw	0
  4509  0987  00B0               	movwf	___flmul@a+2
  4510  0988  3000               	movlw	0
  4511  0989  00AF               	movwf	___flmul@a+1
  4512  098A  3000               	movlw	0
  4513  098B  00AE               	movwf	___flmul@a
  4514  098C                     l2550:
  4515  098C  17B0               	bsf	___flmul@a+2,7
  4516  098D  2996               	goto	l2554
  4517  098E                     l2552:
  4518  098E  3000               	movlw	0
  4519  098F  00B1               	movwf	___flmul@a+3
  4520  0990  3000               	movlw	0
  4521  0991  00B0               	movwf	___flmul@a+2
  4522  0992  3000               	movlw	0
  4523  0993  00AF               	movwf	___flmul@a+1
  4524  0994  3000               	movlw	0
  4525  0995  00AE               	movwf	___flmul@a
  4526  0996                     l2554:
  4527  0996  083C               	movf	___flmul@aexp,w
  4528  0997  1903               	btfsc	3,2
  4529  0998  299A               	goto	u3701
  4530  0999  299B               	goto	u3700
  4531  099A                     u3701:
  4532  099A  29A0               	goto	l2558
  4533  099B                     u3700:
  4534  099B                     l2556:
  4535  099B  083D               	movf	___flmul@bexp,w
  4536  099C  1D03               	btfss	3,2
  4537  099D  299F               	goto	u3711
  4538  099E  29A0               	goto	u3710
  4539  099F                     u3711:
  4540  099F  29A9               	goto	l2562
  4541  09A0                     u3710:
  4542  09A0                     l2558:
  4543  09A0  3000               	movlw	0
  4544  09A1  00AD               	movwf	?___flmul+3
  4545  09A2  3000               	movlw	0
  4546  09A3  00AC               	movwf	?___flmul+2
  4547  09A4  3000               	movlw	0
  4548  09A5  00AB               	movwf	?___flmul+1
  4549  09A6  3000               	movlw	0
  4550  09A7  00AA               	movwf	?___flmul
  4551  09A8  2C9C               	goto	l744
  4552  09A9                     l2562:
  4553  09A9  082A               	movf	___flmul@b,w
  4554  09AA  00B2               	movwf	??___flmul
  4555  09AB  0832               	movf	??___flmul,w
  4556  09AC  00F3               	movwf	__Umul8_16@multiplicand
  4557  09AD  0830               	movf	___flmul@a+2,w
  4558  09AE  160A  158A  238E  120A  158A  	fcall	__Umul8_16
  4559  09B3  0874               	movf	?__Umul8_16+1,w
  4560  09B4  1283               	bcf	3,5	;RP0=0, select bank0
  4561  09B5  1303               	bcf	3,6	;RP1=0, select bank0
  4562  09B6  00C3               	movwf	___flmul@temp+1
  4563  09B7  0873               	movf	?__Umul8_16,w
  4564  09B8  00C2               	movwf	___flmul@temp
  4565  09B9                     l2564:
  4566  09B9  0842               	movf	___flmul@temp,w
  4567  09BA  00B2               	movwf	??___flmul
  4568  09BB  01B3               	clrf	??___flmul+1
  4569  09BC  01B4               	clrf	??___flmul+2
  4570  09BD  01B5               	clrf	??___flmul+3
  4571  09BE  0835               	movf	??___flmul+3,w
  4572  09BF  00BB               	movwf	___flmul@grs+3
  4573  09C0  0834               	movf	??___flmul+2,w
  4574  09C1  00BA               	movwf	___flmul@grs+2
  4575  09C2  0833               	movf	??___flmul+1,w
  4576  09C3  00B9               	movwf	___flmul@grs+1
  4577  09C4  0832               	movf	??___flmul,w
  4578  09C5  00B8               	movwf	___flmul@grs
  4579  09C6                     l2566:
  4580  09C6  0843               	movf	___flmul@temp+1,w
  4581  09C7  00B2               	movwf	??___flmul
  4582  09C8  01B3               	clrf	??___flmul+1
  4583  09C9  01B4               	clrf	??___flmul+2
  4584  09CA  01B5               	clrf	??___flmul+3
  4585  09CB  0835               	movf	??___flmul+3,w
  4586  09CC  00C1               	movwf	___flmul@prod+3
  4587  09CD  0834               	movf	??___flmul+2,w
  4588  09CE  00C0               	movwf	___flmul@prod+2
  4589  09CF  0833               	movf	??___flmul+1,w
  4590  09D0  00BF               	movwf	___flmul@prod+1
  4591  09D1  0832               	movf	??___flmul,w
  4592  09D2  00BE               	movwf	___flmul@prod
  4593  09D3  082B               	movf	___flmul@b+1,w
  4594  09D4  00B2               	movwf	??___flmul
  4595  09D5  0832               	movf	??___flmul,w
  4596  09D6  00F3               	movwf	__Umul8_16@multiplicand
  4597  09D7  082F               	movf	___flmul@a+1,w
  4598  09D8  160A  158A  238E  120A  158A  	fcall	__Umul8_16
  4599  09DD  0874               	movf	?__Umul8_16+1,w
  4600  09DE  1283               	bcf	3,5	;RP0=0, select bank0
  4601  09DF  1303               	bcf	3,6	;RP1=0, select bank0
  4602  09E0  00C3               	movwf	___flmul@temp+1
  4603  09E1  0873               	movf	?__Umul8_16,w
  4604  09E2  00C2               	movwf	___flmul@temp
  4605  09E3                     l2568:
  4606  09E3  0842               	movf	___flmul@temp,w
  4607  09E4  00B2               	movwf	??___flmul
  4608  09E5  01B3               	clrf	??___flmul+1
  4609  09E6  01B4               	clrf	??___flmul+2
  4610  09E7  01B5               	clrf	??___flmul+3
  4611  09E8  0832               	movf	??___flmul,w
  4612  09E9  07B8               	addwf	___flmul@grs,f
  4613  09EA  0833               	movf	??___flmul+1,w
  4614  09EB  1103               	clrz
  4615  09EC  1803               	skipnc
  4616  09ED  3E01               	addlw	1
  4617  09EE  1903               	skipnz
  4618  09EF  29F1               	goto	u3721
  4619  09F0  07B9               	addwf	___flmul@grs+1,f
  4620  09F1                     u3721:
  4621  09F1  0834               	movf	??___flmul+2,w
  4622  09F2  1103               	clrz
  4623  09F3  1803               	skipnc
  4624  09F4  3E01               	addlw	1
  4625  09F5  1903               	skipnz
  4626  09F6  29F8               	goto	u3722
  4627  09F7  07BA               	addwf	___flmul@grs+2,f
  4628  09F8                     u3722:
  4629  09F8  0835               	movf	??___flmul+3,w
  4630  09F9  1103               	clrz
  4631  09FA  1803               	skipnc
  4632  09FB  3E01               	addlw	1
  4633  09FC  1903               	skipnz
  4634  09FD  29FF               	goto	u3723
  4635  09FE  07BB               	addwf	___flmul@grs+3,f
  4636  09FF                     u3723:
  4637  09FF                     l2570:
  4638  09FF  0843               	movf	___flmul@temp+1,w
  4639  0A00  00B2               	movwf	??___flmul
  4640  0A01  01B3               	clrf	??___flmul+1
  4641  0A02  01B4               	clrf	??___flmul+2
  4642  0A03  01B5               	clrf	??___flmul+3
  4643  0A04  0832               	movf	??___flmul,w
  4644  0A05  07BE               	addwf	___flmul@prod,f
  4645  0A06  0833               	movf	??___flmul+1,w
  4646  0A07  1103               	clrz
  4647  0A08  1803               	skipnc
  4648  0A09  3E01               	addlw	1
  4649  0A0A  1903               	skipnz
  4650  0A0B  2A0D               	goto	u3731
  4651  0A0C  07BF               	addwf	___flmul@prod+1,f
  4652  0A0D                     u3731:
  4653  0A0D  0834               	movf	??___flmul+2,w
  4654  0A0E  1103               	clrz
  4655  0A0F  1803               	skipnc
  4656  0A10  3E01               	addlw	1
  4657  0A11  1903               	skipnz
  4658  0A12  2A14               	goto	u3732
  4659  0A13  07C0               	addwf	___flmul@prod+2,f
  4660  0A14                     u3732:
  4661  0A14  0835               	movf	??___flmul+3,w
  4662  0A15  1103               	clrz
  4663  0A16  1803               	skipnc
  4664  0A17  3E01               	addlw	1
  4665  0A18  1903               	skipnz
  4666  0A19  2A1B               	goto	u3733
  4667  0A1A  07C1               	addwf	___flmul@prod+3,f
  4668  0A1B                     u3733:
  4669  0A1B  082C               	movf	___flmul@b+2,w
  4670  0A1C  00B2               	movwf	??___flmul
  4671  0A1D  0832               	movf	??___flmul,w
  4672  0A1E  00F3               	movwf	__Umul8_16@multiplicand
  4673  0A1F  082E               	movf	___flmul@a,w
  4674  0A20  160A  158A  238E  120A  158A  	fcall	__Umul8_16
  4675  0A25  0874               	movf	?__Umul8_16+1,w
  4676  0A26  1283               	bcf	3,5	;RP0=0, select bank0
  4677  0A27  1303               	bcf	3,6	;RP1=0, select bank0
  4678  0A28  00C3               	movwf	___flmul@temp+1
  4679  0A29  0873               	movf	?__Umul8_16,w
  4680  0A2A  00C2               	movwf	___flmul@temp
  4681  0A2B                     l2572:
  4682  0A2B  0842               	movf	___flmul@temp,w
  4683  0A2C  00B2               	movwf	??___flmul
  4684  0A2D  01B3               	clrf	??___flmul+1
  4685  0A2E  01B4               	clrf	??___flmul+2
  4686  0A2F  01B5               	clrf	??___flmul+3
  4687  0A30  0832               	movf	??___flmul,w
  4688  0A31  07B8               	addwf	___flmul@grs,f
  4689  0A32  0833               	movf	??___flmul+1,w
  4690  0A33  1103               	clrz
  4691  0A34  1803               	skipnc
  4692  0A35  3E01               	addlw	1
  4693  0A36  1903               	skipnz
  4694  0A37  2A39               	goto	u3741
  4695  0A38  07B9               	addwf	___flmul@grs+1,f
  4696  0A39                     u3741:
  4697  0A39  0834               	movf	??___flmul+2,w
  4698  0A3A  1103               	clrz
  4699  0A3B  1803               	skipnc
  4700  0A3C  3E01               	addlw	1
  4701  0A3D  1903               	skipnz
  4702  0A3E  2A40               	goto	u3742
  4703  0A3F  07BA               	addwf	___flmul@grs+2,f
  4704  0A40                     u3742:
  4705  0A40  0835               	movf	??___flmul+3,w
  4706  0A41  1103               	clrz
  4707  0A42  1803               	skipnc
  4708  0A43  3E01               	addlw	1
  4709  0A44  1903               	skipnz
  4710  0A45  2A47               	goto	u3743
  4711  0A46  07BB               	addwf	___flmul@grs+3,f
  4712  0A47                     u3743:
  4713  0A47                     l2574:
  4714  0A47  0843               	movf	___flmul@temp+1,w
  4715  0A48  00B2               	movwf	??___flmul
  4716  0A49  01B3               	clrf	??___flmul+1
  4717  0A4A  01B4               	clrf	??___flmul+2
  4718  0A4B  01B5               	clrf	??___flmul+3
  4719  0A4C  0832               	movf	??___flmul,w
  4720  0A4D  07BE               	addwf	___flmul@prod,f
  4721  0A4E  0833               	movf	??___flmul+1,w
  4722  0A4F  1103               	clrz
  4723  0A50  1803               	skipnc
  4724  0A51  3E01               	addlw	1
  4725  0A52  1903               	skipnz
  4726  0A53  2A55               	goto	u3751
  4727  0A54  07BF               	addwf	___flmul@prod+1,f
  4728  0A55                     u3751:
  4729  0A55  0834               	movf	??___flmul+2,w
  4730  0A56  1103               	clrz
  4731  0A57  1803               	skipnc
  4732  0A58  3E01               	addlw	1
  4733  0A59  1903               	skipnz
  4734  0A5A  2A5C               	goto	u3752
  4735  0A5B  07C0               	addwf	___flmul@prod+2,f
  4736  0A5C                     u3752:
  4737  0A5C  0835               	movf	??___flmul+3,w
  4738  0A5D  1103               	clrz
  4739  0A5E  1803               	skipnc
  4740  0A5F  3E01               	addlw	1
  4741  0A60  1903               	skipnz
  4742  0A61  2A63               	goto	u3753
  4743  0A62  07C1               	addwf	___flmul@prod+3,f
  4744  0A63                     u3753:
  4745  0A63                     l2576:
  4746  0A63  3008               	movlw	8
  4747  0A64  00B2               	movwf	??___flmul
  4748  0A65                     u3765:
  4749  0A65  1003               	clrc
  4750  0A66  0DB8               	rlf	___flmul@grs,f
  4751  0A67  0DB9               	rlf	___flmul@grs+1,f
  4752  0A68  0DBA               	rlf	___flmul@grs+2,f
  4753  0A69  0DBB               	rlf	___flmul@grs+3,f
  4754  0A6A  0BB2               	decfsz	??___flmul,f
  4755  0A6B  2A65               	goto	u3765
  4756  0A6C                     l2578:
  4757  0A6C  082B               	movf	___flmul@b+1,w
  4758  0A6D  00B2               	movwf	??___flmul
  4759  0A6E  0832               	movf	??___flmul,w
  4760  0A6F  00F3               	movwf	__Umul8_16@multiplicand
  4761  0A70  082E               	movf	___flmul@a,w
  4762  0A71  160A  158A  238E  120A  158A  	fcall	__Umul8_16
  4763  0A76  0874               	movf	?__Umul8_16+1,w
  4764  0A77  1283               	bcf	3,5	;RP0=0, select bank0
  4765  0A78  1303               	bcf	3,6	;RP1=0, select bank0
  4766  0A79  00C3               	movwf	___flmul@temp+1
  4767  0A7A  0873               	movf	?__Umul8_16,w
  4768  0A7B  00C2               	movwf	___flmul@temp
  4769  0A7C                     l2580:
  4770  0A7C  0842               	movf	___flmul@temp,w
  4771  0A7D  00B2               	movwf	??___flmul
  4772  0A7E  0843               	movf	___flmul@temp+1,w
  4773  0A7F  00B3               	movwf	??___flmul+1
  4774  0A80  01B4               	clrf	??___flmul+2
  4775  0A81  01B5               	clrf	??___flmul+3
  4776  0A82  0832               	movf	??___flmul,w
  4777  0A83  07B8               	addwf	___flmul@grs,f
  4778  0A84  0833               	movf	??___flmul+1,w
  4779  0A85  1103               	clrz
  4780  0A86  1803               	skipnc
  4781  0A87  3E01               	addlw	1
  4782  0A88  1903               	skipnz
  4783  0A89  2A8B               	goto	u3771
  4784  0A8A  07B9               	addwf	___flmul@grs+1,f
  4785  0A8B                     u3771:
  4786  0A8B  0834               	movf	??___flmul+2,w
  4787  0A8C  1103               	clrz
  4788  0A8D  1803               	skipnc
  4789  0A8E  3E01               	addlw	1
  4790  0A8F  1903               	skipnz
  4791  0A90  2A92               	goto	u3772
  4792  0A91  07BA               	addwf	___flmul@grs+2,f
  4793  0A92                     u3772:
  4794  0A92  0835               	movf	??___flmul+3,w
  4795  0A93  1103               	clrz
  4796  0A94  1803               	skipnc
  4797  0A95  3E01               	addlw	1
  4798  0A96  1903               	skipnz
  4799  0A97  2A99               	goto	u3773
  4800  0A98  07BB               	addwf	___flmul@grs+3,f
  4801  0A99                     u3773:
  4802  0A99                     l2582:
  4803  0A99  082A               	movf	___flmul@b,w
  4804  0A9A  00B2               	movwf	??___flmul
  4805  0A9B  0832               	movf	??___flmul,w
  4806  0A9C  00F3               	movwf	__Umul8_16@multiplicand
  4807  0A9D  082F               	movf	___flmul@a+1,w
  4808  0A9E  160A  158A  238E  120A  158A  	fcall	__Umul8_16
  4809  0AA3  0874               	movf	?__Umul8_16+1,w
  4810  0AA4  1283               	bcf	3,5	;RP0=0, select bank0
  4811  0AA5  1303               	bcf	3,6	;RP1=0, select bank0
  4812  0AA6  00C3               	movwf	___flmul@temp+1
  4813  0AA7  0873               	movf	?__Umul8_16,w
  4814  0AA8  00C2               	movwf	___flmul@temp
  4815  0AA9                     l2584:
  4816  0AA9  0842               	movf	___flmul@temp,w
  4817  0AAA  00B2               	movwf	??___flmul
  4818  0AAB  0843               	movf	___flmul@temp+1,w
  4819  0AAC  00B3               	movwf	??___flmul+1
  4820  0AAD  01B4               	clrf	??___flmul+2
  4821  0AAE  01B5               	clrf	??___flmul+3
  4822  0AAF  0832               	movf	??___flmul,w
  4823  0AB0  07B8               	addwf	___flmul@grs,f
  4824  0AB1  0833               	movf	??___flmul+1,w
  4825  0AB2  1103               	clrz
  4826  0AB3  1803               	skipnc
  4827  0AB4  3E01               	addlw	1
  4828  0AB5  1903               	skipnz
  4829  0AB6  2AB8               	goto	u3781
  4830  0AB7  07B9               	addwf	___flmul@grs+1,f
  4831  0AB8                     u3781:
  4832  0AB8  0834               	movf	??___flmul+2,w
  4833  0AB9  1103               	clrz
  4834  0ABA  1803               	skipnc
  4835  0ABB  3E01               	addlw	1
  4836  0ABC  1903               	skipnz
  4837  0ABD  2ABF               	goto	u3782
  4838  0ABE  07BA               	addwf	___flmul@grs+2,f
  4839  0ABF                     u3782:
  4840  0ABF  0835               	movf	??___flmul+3,w
  4841  0AC0  1103               	clrz
  4842  0AC1  1803               	skipnc
  4843  0AC2  3E01               	addlw	1
  4844  0AC3  1903               	skipnz
  4845  0AC4  2AC6               	goto	u3783
  4846  0AC5  07BB               	addwf	___flmul@grs+3,f
  4847  0AC6                     u3783:
  4848  0AC6                     l2586:
  4849  0AC6  3008               	movlw	8
  4850  0AC7  00B2               	movwf	??___flmul
  4851  0AC8                     u3795:
  4852  0AC8  1003               	clrc
  4853  0AC9  0DB8               	rlf	___flmul@grs,f
  4854  0ACA  0DB9               	rlf	___flmul@grs+1,f
  4855  0ACB  0DBA               	rlf	___flmul@grs+2,f
  4856  0ACC  0DBB               	rlf	___flmul@grs+3,f
  4857  0ACD  0BB2               	decfsz	??___flmul,f
  4858  0ACE  2AC8               	goto	u3795
  4859  0ACF  082A               	movf	___flmul@b,w
  4860  0AD0  00B2               	movwf	??___flmul
  4861  0AD1  0832               	movf	??___flmul,w
  4862  0AD2  00F3               	movwf	__Umul8_16@multiplicand
  4863  0AD3  082E               	movf	___flmul@a,w
  4864  0AD4  160A  158A  238E  120A  158A  	fcall	__Umul8_16
  4865  0AD9  0874               	movf	?__Umul8_16+1,w
  4866  0ADA  1283               	bcf	3,5	;RP0=0, select bank0
  4867  0ADB  1303               	bcf	3,6	;RP1=0, select bank0
  4868  0ADC  00C3               	movwf	___flmul@temp+1
  4869  0ADD  0873               	movf	?__Umul8_16,w
  4870  0ADE  00C2               	movwf	___flmul@temp
  4871  0ADF                     l2588:
  4872  0ADF  0842               	movf	___flmul@temp,w
  4873  0AE0  00B2               	movwf	??___flmul
  4874  0AE1  0843               	movf	___flmul@temp+1,w
  4875  0AE2  00B3               	movwf	??___flmul+1
  4876  0AE3  01B4               	clrf	??___flmul+2
  4877  0AE4  01B5               	clrf	??___flmul+3
  4878  0AE5  0832               	movf	??___flmul,w
  4879  0AE6  07B8               	addwf	___flmul@grs,f
  4880  0AE7  0833               	movf	??___flmul+1,w
  4881  0AE8  1103               	clrz
  4882  0AE9  1803               	skipnc
  4883  0AEA  3E01               	addlw	1
  4884  0AEB  1903               	skipnz
  4885  0AEC  2AEE               	goto	u3801
  4886  0AED  07B9               	addwf	___flmul@grs+1,f
  4887  0AEE                     u3801:
  4888  0AEE  0834               	movf	??___flmul+2,w
  4889  0AEF  1103               	clrz
  4890  0AF0  1803               	skipnc
  4891  0AF1  3E01               	addlw	1
  4892  0AF2  1903               	skipnz
  4893  0AF3  2AF5               	goto	u3802
  4894  0AF4  07BA               	addwf	___flmul@grs+2,f
  4895  0AF5                     u3802:
  4896  0AF5  0835               	movf	??___flmul+3,w
  4897  0AF6  1103               	clrz
  4898  0AF7  1803               	skipnc
  4899  0AF8  3E01               	addlw	1
  4900  0AF9  1903               	skipnz
  4901  0AFA  2AFC               	goto	u3803
  4902  0AFB  07BB               	addwf	___flmul@grs+3,f
  4903  0AFC                     u3803:
  4904  0AFC                     l2590:
  4905  0AFC  082B               	movf	___flmul@b+1,w
  4906  0AFD  00B2               	movwf	??___flmul
  4907  0AFE  0832               	movf	??___flmul,w
  4908  0AFF  00F3               	movwf	__Umul8_16@multiplicand
  4909  0B00  0830               	movf	___flmul@a+2,w
  4910  0B01  160A  158A  238E  120A  158A  	fcall	__Umul8_16
  4911  0B06  0874               	movf	?__Umul8_16+1,w
  4912  0B07  1283               	bcf	3,5	;RP0=0, select bank0
  4913  0B08  1303               	bcf	3,6	;RP1=0, select bank0
  4914  0B09  00C3               	movwf	___flmul@temp+1
  4915  0B0A  0873               	movf	?__Umul8_16,w
  4916  0B0B  00C2               	movwf	___flmul@temp
  4917  0B0C  0842               	movf	___flmul@temp,w
  4918  0B0D  00B2               	movwf	??___flmul
  4919  0B0E  0843               	movf	___flmul@temp+1,w
  4920  0B0F  00B3               	movwf	??___flmul+1
  4921  0B10  01B4               	clrf	??___flmul+2
  4922  0B11  01B5               	clrf	??___flmul+3
  4923  0B12  0832               	movf	??___flmul,w
  4924  0B13  07BE               	addwf	___flmul@prod,f
  4925  0B14  0833               	movf	??___flmul+1,w
  4926  0B15  1103               	clrz
  4927  0B16  1803               	skipnc
  4928  0B17  3E01               	addlw	1
  4929  0B18  1903               	skipnz
  4930  0B19  2B1B               	goto	u3811
  4931  0B1A  07BF               	addwf	___flmul@prod+1,f
  4932  0B1B                     u3811:
  4933  0B1B  0834               	movf	??___flmul+2,w
  4934  0B1C  1103               	clrz
  4935  0B1D  1803               	skipnc
  4936  0B1E  3E01               	addlw	1
  4937  0B1F  1903               	skipnz
  4938  0B20  2B22               	goto	u3812
  4939  0B21  07C0               	addwf	___flmul@prod+2,f
  4940  0B22                     u3812:
  4941  0B22  0835               	movf	??___flmul+3,w
  4942  0B23  1103               	clrz
  4943  0B24  1803               	skipnc
  4944  0B25  3E01               	addlw	1
  4945  0B26  1903               	skipnz
  4946  0B27  2B29               	goto	u3813
  4947  0B28  07C1               	addwf	___flmul@prod+3,f
  4948  0B29                     u3813:
  4949  0B29                     l2592:
  4950  0B29  082C               	movf	___flmul@b+2,w
  4951  0B2A  00B2               	movwf	??___flmul
  4952  0B2B  0832               	movf	??___flmul,w
  4953  0B2C  00F3               	movwf	__Umul8_16@multiplicand
  4954  0B2D  082F               	movf	___flmul@a+1,w
  4955  0B2E  160A  158A  238E  120A  158A  	fcall	__Umul8_16
  4956  0B33  0874               	movf	?__Umul8_16+1,w
  4957  0B34  1283               	bcf	3,5	;RP0=0, select bank0
  4958  0B35  1303               	bcf	3,6	;RP1=0, select bank0
  4959  0B36  00C3               	movwf	___flmul@temp+1
  4960  0B37  0873               	movf	?__Umul8_16,w
  4961  0B38  00C2               	movwf	___flmul@temp
  4962  0B39                     l2594:
  4963  0B39  0842               	movf	___flmul@temp,w
  4964  0B3A  00B2               	movwf	??___flmul
  4965  0B3B  0843               	movf	___flmul@temp+1,w
  4966  0B3C  00B3               	movwf	??___flmul+1
  4967  0B3D  01B4               	clrf	??___flmul+2
  4968  0B3E  01B5               	clrf	??___flmul+3
  4969  0B3F  0832               	movf	??___flmul,w
  4970  0B40  07BE               	addwf	___flmul@prod,f
  4971  0B41  0833               	movf	??___flmul+1,w
  4972  0B42  1103               	clrz
  4973  0B43  1803               	skipnc
  4974  0B44  3E01               	addlw	1
  4975  0B45  1903               	skipnz
  4976  0B46  2B48               	goto	u3821
  4977  0B47  07BF               	addwf	___flmul@prod+1,f
  4978  0B48                     u3821:
  4979  0B48  0834               	movf	??___flmul+2,w
  4980  0B49  1103               	clrz
  4981  0B4A  1803               	skipnc
  4982  0B4B  3E01               	addlw	1
  4983  0B4C  1903               	skipnz
  4984  0B4D  2B4F               	goto	u3822
  4985  0B4E  07C0               	addwf	___flmul@prod+2,f
  4986  0B4F                     u3822:
  4987  0B4F  0835               	movf	??___flmul+3,w
  4988  0B50  1103               	clrz
  4989  0B51  1803               	skipnc
  4990  0B52  3E01               	addlw	1
  4991  0B53  1903               	skipnz
  4992  0B54  2B56               	goto	u3823
  4993  0B55  07C1               	addwf	___flmul@prod+3,f
  4994  0B56                     u3823:
  4995  0B56  082C               	movf	___flmul@b+2,w
  4996  0B57  00B2               	movwf	??___flmul
  4997  0B58  0832               	movf	??___flmul,w
  4998  0B59  00F3               	movwf	__Umul8_16@multiplicand
  4999  0B5A  0830               	movf	___flmul@a+2,w
  5000  0B5B  160A  158A  238E  120A  158A  	fcall	__Umul8_16
  5001  0B60  0874               	movf	?__Umul8_16+1,w
  5002  0B61  1283               	bcf	3,5	;RP0=0, select bank0
  5003  0B62  1303               	bcf	3,6	;RP1=0, select bank0
  5004  0B63  00C3               	movwf	___flmul@temp+1
  5005  0B64  0873               	movf	?__Umul8_16,w
  5006  0B65  00C2               	movwf	___flmul@temp
  5007  0B66                     l2596:
  5008  0B66  0842               	movf	___flmul@temp,w
  5009  0B67  00B2               	movwf	??___flmul
  5010  0B68  0843               	movf	___flmul@temp+1,w
  5011  0B69  00B3               	movwf	??___flmul+1
  5012  0B6A  01B4               	clrf	??___flmul+2
  5013  0B6B  01B5               	clrf	??___flmul+3
  5014  0B6C  3008               	movlw	8
  5015  0B6D                     u3835:
  5016  0B6D  1003               	clrc
  5017  0B6E  0DB2               	rlf	??___flmul,f
  5018  0B6F  0DB3               	rlf	??___flmul+1,f
  5019  0B70  0DB4               	rlf	??___flmul+2,f
  5020  0B71  0DB5               	rlf	??___flmul+3,f
  5021  0B72                     u3830:
  5022  0B72  3EFF               	addlw	-1
  5023  0B73  1D03               	skipz
  5024  0B74  2B6D               	goto	u3835
  5025  0B75  0832               	movf	??___flmul,w
  5026  0B76  07BE               	addwf	___flmul@prod,f
  5027  0B77  0833               	movf	??___flmul+1,w
  5028  0B78  1103               	clrz
  5029  0B79  1803               	skipnc
  5030  0B7A  3E01               	addlw	1
  5031  0B7B  1903               	skipnz
  5032  0B7C  2B7E               	goto	u3841
  5033  0B7D  07BF               	addwf	___flmul@prod+1,f
  5034  0B7E                     u3841:
  5035  0B7E  0834               	movf	??___flmul+2,w
  5036  0B7F  1103               	clrz
  5037  0B80  1803               	skipnc
  5038  0B81  3E01               	addlw	1
  5039  0B82  1903               	skipnz
  5040  0B83  2B85               	goto	u3842
  5041  0B84  07C0               	addwf	___flmul@prod+2,f
  5042  0B85                     u3842:
  5043  0B85  0835               	movf	??___flmul+3,w
  5044  0B86  1103               	clrz
  5045  0B87  1803               	skipnc
  5046  0B88  3E01               	addlw	1
  5047  0B89  1903               	skipnz
  5048  0B8A  2B8C               	goto	u3843
  5049  0B8B  07C1               	addwf	___flmul@prod+3,f
  5050  0B8C                     u3843:
  5051  0B8C                     l2598:
  5052  0B8C  0838               	movf	___flmul@grs,w
  5053  0B8D  00B2               	movwf	??___flmul
  5054  0B8E  0839               	movf	___flmul@grs+1,w
  5055  0B8F  00B3               	movwf	??___flmul+1
  5056  0B90  083A               	movf	___flmul@grs+2,w
  5057  0B91  00B4               	movwf	??___flmul+2
  5058  0B92  083B               	movf	___flmul@grs+3,w
  5059  0B93  00B5               	movwf	??___flmul+3
  5060  0B94  3018               	movlw	24
  5061  0B95                     u3855:
  5062  0B95  1003               	clrc
  5063  0B96  0CB5               	rrf	??___flmul+3,f
  5064  0B97  0CB4               	rrf	??___flmul+2,f
  5065  0B98  0CB3               	rrf	??___flmul+1,f
  5066  0B99  0CB2               	rrf	??___flmul,f
  5067  0B9A                     u3850:
  5068  0B9A  3EFF               	addlw	-1
  5069  0B9B  1D03               	skipz
  5070  0B9C  2B95               	goto	u3855
  5071  0B9D  0832               	movf	??___flmul,w
  5072  0B9E  07BE               	addwf	___flmul@prod,f
  5073  0B9F  0833               	movf	??___flmul+1,w
  5074  0BA0  1103               	clrz
  5075  0BA1  1803               	skipnc
  5076  0BA2  3E01               	addlw	1
  5077  0BA3  1903               	skipnz
  5078  0BA4  2BA6               	goto	u3861
  5079  0BA5  07BF               	addwf	___flmul@prod+1,f
  5080  0BA6                     u3861:
  5081  0BA6  0834               	movf	??___flmul+2,w
  5082  0BA7  1103               	clrz
  5083  0BA8  1803               	skipnc
  5084  0BA9  3E01               	addlw	1
  5085  0BAA  1903               	skipnz
  5086  0BAB  2BAD               	goto	u3862
  5087  0BAC  07C0               	addwf	___flmul@prod+2,f
  5088  0BAD                     u3862:
  5089  0BAD  0835               	movf	??___flmul+3,w
  5090  0BAE  1103               	clrz
  5091  0BAF  1803               	skipnc
  5092  0BB0  3E01               	addlw	1
  5093  0BB1  1903               	skipnz
  5094  0BB2  2BB4               	goto	u3863
  5095  0BB3  07C1               	addwf	___flmul@prod+3,f
  5096  0BB4                     u3863:
  5097  0BB4                     l2600:
  5098  0BB4  3008               	movlw	8
  5099  0BB5  00B2               	movwf	??___flmul
  5100  0BB6                     u3875:
  5101  0BB6  1003               	clrc
  5102  0BB7  0DB8               	rlf	___flmul@grs,f
  5103  0BB8  0DB9               	rlf	___flmul@grs+1,f
  5104  0BB9  0DBA               	rlf	___flmul@grs+2,f
  5105  0BBA  0DBB               	rlf	___flmul@grs+3,f
  5106  0BBB  0BB2               	decfsz	??___flmul,f
  5107  0BBC  2BB6               	goto	u3875
  5108  0BBD                     l2602:
  5109  0BBD  083D               	movf	___flmul@bexp,w
  5110  0BBE  073C               	addwf	___flmul@aexp,w
  5111  0BBF  00B2               	movwf	??___flmul
  5112  0BC0  01B3               	clrf	??___flmul+1
  5113  0BC1  0DB3               	rlf	??___flmul+1,f
  5114  0BC2  0832               	movf	??___flmul,w
  5115  0BC3  3E82               	addlw	130
  5116  0BC4  00C2               	movwf	___flmul@temp
  5117  0BC5  0833               	movf	??___flmul+1,w
  5118  0BC6  1803               	skipnc
  5119  0BC7  3E01               	addlw	1
  5120  0BC8  3EFF               	addlw	255
  5121  0BC9  00C3               	movwf	___flmul@temp+1
  5122  0BCA  2BE8               	goto	l2614
  5123  0BCB                     l2604:
  5124  0BCB  3001               	movlw	1
  5125  0BCC  00B2               	movwf	??___flmul
  5126  0BCD                     u3885:
  5127  0BCD  1003               	clrc
  5128  0BCE  0DBE               	rlf	___flmul@prod,f
  5129  0BCF  0DBF               	rlf	___flmul@prod+1,f
  5130  0BD0  0DC0               	rlf	___flmul@prod+2,f
  5131  0BD1  0DC1               	rlf	___flmul@prod+3,f
  5132  0BD2  0BB2               	decfsz	??___flmul,f
  5133  0BD3  2BCD               	goto	u3885
  5134  0BD4                     l2606:
  5135  0BD4  1FBB               	btfss	___flmul@grs+3,7
  5136  0BD5  2BD7               	goto	u3891
  5137  0BD6  2BD8               	goto	u3890
  5138  0BD7                     u3891:
  5139  0BD7  2BD9               	goto	l2610
  5140  0BD8                     u3890:
  5141  0BD8                     l2608:
  5142  0BD8  143E               	bsf	___flmul@prod,0
  5143  0BD9                     l2610:
  5144  0BD9  3001               	movlw	1
  5145  0BDA  00B2               	movwf	??___flmul
  5146  0BDB                     u3905:
  5147  0BDB  1003               	clrc
  5148  0BDC  0DB8               	rlf	___flmul@grs,f
  5149  0BDD  0DB9               	rlf	___flmul@grs+1,f
  5150  0BDE  0DBA               	rlf	___flmul@grs+2,f
  5151  0BDF  0DBB               	rlf	___flmul@grs+3,f
  5152  0BE0  0BB2               	decfsz	??___flmul,f
  5153  0BE1  2BDB               	goto	u3905
  5154  0BE2                     l2612:
  5155  0BE2  30FF               	movlw	255
  5156  0BE3  07C2               	addwf	___flmul@temp,f
  5157  0BE4  1803               	skipnc
  5158  0BE5  0AC3               	incf	___flmul@temp+1,f
  5159  0BE6  30FF               	movlw	255
  5160  0BE7  07C3               	addwf	___flmul@temp+1,f
  5161  0BE8                     l2614:
  5162  0BE8  1FC0               	btfss	___flmul@prod+2,7
  5163  0BE9  2BEB               	goto	u3911
  5164  0BEA  2BEC               	goto	u3910
  5165  0BEB                     u3911:
  5166  0BEB  2BCB               	goto	l2604
  5167  0BEC                     u3910:
  5168  0BEC                     l2616:
  5169  0BEC  01BC               	clrf	___flmul@aexp
  5170  0BED                     l2618:
  5171  0BED  1FBB               	btfss	___flmul@grs+3,7
  5172  0BEE  2BF0               	goto	u3921
  5173  0BEF  2BF1               	goto	u3920
  5174  0BF0                     u3921:
  5175  0BF0  2C0D               	goto	l2626
  5176  0BF1                     u3920:
  5177  0BF1                     l2620:
  5178  0BF1  30FF               	movlw	255
  5179  0BF2  0538               	andwf	___flmul@grs,w
  5180  0BF3  00B2               	movwf	??___flmul
  5181  0BF4  30FF               	movlw	255
  5182  0BF5  0539               	andwf	___flmul@grs+1,w
  5183  0BF6  00B3               	movwf	??___flmul+1
  5184  0BF7  30FF               	movlw	255
  5185  0BF8  053A               	andwf	___flmul@grs+2,w
  5186  0BF9  00B4               	movwf	??___flmul+2
  5187  0BFA  307F               	movlw	127
  5188  0BFB  053B               	andwf	___flmul@grs+3,w
  5189  0BFC  00B5               	movwf	??___flmul+3
  5190  0BFD  0835               	movf	??___flmul+3,w
  5191  0BFE  0434               	iorwf	??___flmul+2,w
  5192  0BFF  0433               	iorwf	??___flmul+1,w
  5193  0C00  0432               	iorwf	??___flmul,w
  5194  0C01  1903               	skipnz
  5195  0C02  2C04               	goto	u3931
  5196  0C03  2C05               	goto	u3930
  5197  0C04                     u3931:
  5198  0C04  2C08               	goto	l750
  5199  0C05                     u3930:
  5200  0C05                     l2622:
  5201  0C05  01BC               	clrf	___flmul@aexp
  5202  0C06  0ABC               	incf	___flmul@aexp,f
  5203  0C07  2C0D               	goto	l2626
  5204  0C08                     l750:
  5205  0C08  1C3E               	btfss	___flmul@prod,0
  5206  0C09  2C0B               	goto	u3941
  5207  0C0A  2C0C               	goto	u3940
  5208  0C0B                     u3941:
  5209  0C0B  2C0D               	goto	l2626
  5210  0C0C                     u3940:
  5211  0C0C  2C05               	goto	l2622
  5212  0C0D                     l2626:
  5213  0C0D  083C               	movf	___flmul@aexp,w
  5214  0C0E  1903               	btfsc	3,2
  5215  0C0F  2C11               	goto	u3951
  5216  0C10  2C12               	goto	u3950
  5217  0C11                     u3951:
  5218  0C11  2C43               	goto	l2636
  5219  0C12                     u3950:
  5220  0C12                     l2628:
  5221  0C12  3001               	movlw	1
  5222  0C13  07BE               	addwf	___flmul@prod,f
  5223  0C14  3000               	movlw	0
  5224  0C15  1803               	skipnc
  5225  0C16  3001               	movlw	1
  5226  0C17  07BF               	addwf	___flmul@prod+1,f
  5227  0C18  3000               	movlw	0
  5228  0C19  1803               	skipnc
  5229  0C1A  3001               	movlw	1
  5230  0C1B  07C0               	addwf	___flmul@prod+2,f
  5231  0C1C  3000               	movlw	0
  5232  0C1D  1803               	skipnc
  5233  0C1E  3001               	movlw	1
  5234  0C1F  07C1               	addwf	___flmul@prod+3,f
  5235  0C20                     l2630:
  5236  0C20  1C41               	btfss	___flmul@prod+3,0
  5237  0C21  2C23               	goto	u3961
  5238  0C22  2C24               	goto	u3960
  5239  0C23                     u3961:
  5240  0C23  2C43               	goto	l2636
  5241  0C24                     u3960:
  5242  0C24                     l2632:
  5243  0C24  083E               	movf	___flmul@prod,w
  5244  0C25  00B2               	movwf	??___flmul
  5245  0C26  083F               	movf	___flmul@prod+1,w
  5246  0C27  00B3               	movwf	??___flmul+1
  5247  0C28  0840               	movf	___flmul@prod+2,w
  5248  0C29  00B4               	movwf	??___flmul+2
  5249  0C2A  0841               	movf	___flmul@prod+3,w
  5250  0C2B  00B5               	movwf	??___flmul+3
  5251  0C2C  3001               	movlw	1
  5252  0C2D  00B6               	movwf	??___flmul+4
  5253  0C2E                     u3975:
  5254  0C2E  0D35               	rlf	??___flmul+3,w
  5255  0C2F  0CB5               	rrf	??___flmul+3,f
  5256  0C30  0CB4               	rrf	??___flmul+2,f
  5257  0C31  0CB3               	rrf	??___flmul+1,f
  5258  0C32  0CB2               	rrf	??___flmul,f
  5259  0C33                     u3970:
  5260  0C33  0BB6               	decfsz	??___flmul+4,f
  5261  0C34  2C2E               	goto	u3975
  5262  0C35  0835               	movf	??___flmul+3,w
  5263  0C36  00C1               	movwf	___flmul@prod+3
  5264  0C37  0834               	movf	??___flmul+2,w
  5265  0C38  00C0               	movwf	___flmul@prod+2
  5266  0C39  0833               	movf	??___flmul+1,w
  5267  0C3A  00BF               	movwf	___flmul@prod+1
  5268  0C3B  0832               	movf	??___flmul,w
  5269  0C3C  00BE               	movwf	___flmul@prod
  5270  0C3D                     l2634:
  5271  0C3D  3001               	movlw	1
  5272  0C3E  07C2               	addwf	___flmul@temp,f
  5273  0C3F  1803               	skipnc
  5274  0C40  0AC3               	incf	___flmul@temp+1,f
  5275  0C41  3000               	movlw	0
  5276  0C42  07C3               	addwf	___flmul@temp+1,f
  5277  0C43                     l2636:
  5278  0C43  0843               	movf	___flmul@temp+1,w
  5279  0C44  3A80               	xorlw	128
  5280  0C45  00FF               	movwf	btemp+1
  5281  0C46  3080               	movlw	128
  5282  0C47  027F               	subwf	btemp+1,w
  5283  0C48  1D03               	skipz
  5284  0C49  2C4C               	goto	u3985
  5285  0C4A  30FF               	movlw	255
  5286  0C4B  0242               	subwf	___flmul@temp,w
  5287  0C4C                     u3985:
  5288  0C4C  1C03               	skipc
  5289  0C4D  2C4F               	goto	u3981
  5290  0C4E  2C50               	goto	u3980
  5291  0C4F                     u3981:
  5292  0C4F  2C5B               	goto	l2640
  5293  0C50                     u3980:
  5294  0C50                     l2638:
  5295  0C50  307F               	movlw	127
  5296  0C51  1283               	bcf	3,5	;RP0=0, select bank0
  5297  0C52  1303               	bcf	3,6	;RP1=0, select bank0
  5298  0C53  00C1               	movwf	___flmul@prod+3
  5299  0C54  3080               	movlw	128
  5300  0C55  00C0               	movwf	___flmul@prod+2
  5301  0C56  3000               	movlw	0
  5302  0C57  00BF               	movwf	___flmul@prod+1
  5303  0C58  3000               	movlw	0
  5304  0C59  00BE               	movwf	___flmul@prod
  5305  0C5A  2C90               	goto	l756
  5306  0C5B                     l2640:
  5307  0C5B  1283               	bcf	3,5	;RP0=0, select bank0
  5308  0C5C  1303               	bcf	3,6	;RP1=0, select bank0
  5309  0C5D  0843               	movf	___flmul@temp+1,w
  5310  0C5E  3A80               	xorlw	128
  5311  0C5F  00FF               	movwf	btemp+1
  5312  0C60  3080               	movlw	128
  5313  0C61  027F               	subwf	btemp+1,w
  5314  0C62  1D03               	skipz
  5315  0C63  2C66               	goto	u3995
  5316  0C64  3001               	movlw	1
  5317  0C65  0242               	subwf	___flmul@temp,w
  5318  0C66                     u3995:
  5319  0C66  1803               	skipnc
  5320  0C67  2C69               	goto	u3991
  5321  0C68  2C6A               	goto	u3990
  5322  0C69                     u3991:
  5323  0C69  2C76               	goto	l2646
  5324  0C6A                     u3990:
  5325  0C6A                     l2642:
  5326  0C6A  3000               	movlw	0
  5327  0C6B  1283               	bcf	3,5	;RP0=0, select bank0
  5328  0C6C  1303               	bcf	3,6	;RP1=0, select bank0
  5329  0C6D  00C1               	movwf	___flmul@prod+3
  5330  0C6E  3000               	movlw	0
  5331  0C6F  00C0               	movwf	___flmul@prod+2
  5332  0C70  3000               	movlw	0
  5333  0C71  00BF               	movwf	___flmul@prod+1
  5334  0C72  3000               	movlw	0
  5335  0C73  00BE               	movwf	___flmul@prod
  5336  0C74                     l2644:
  5337  0C74  01B7               	clrf	___flmul@sign
  5338  0C75  2C90               	goto	l756
  5339  0C76                     l2646:
  5340  0C76  1283               	bcf	3,5	;RP0=0, select bank0
  5341  0C77  1303               	bcf	3,6	;RP1=0, select bank0
  5342  0C78  0842               	movf	___flmul@temp,w
  5343  0C79  00B2               	movwf	??___flmul
  5344  0C7A  0832               	movf	??___flmul,w
  5345  0C7B  00BD               	movwf	___flmul@bexp
  5346  0C7C  30FF               	movlw	255
  5347  0C7D  05BE               	andwf	___flmul@prod,f
  5348  0C7E  30FF               	movlw	255
  5349  0C7F  05BF               	andwf	___flmul@prod+1,f
  5350  0C80  307F               	movlw	127
  5351  0C81  05C0               	andwf	___flmul@prod+2,f
  5352  0C82  3000               	movlw	0
  5353  0C83  05C1               	andwf	___flmul@prod+3,f
  5354  0C84                     l2648:
  5355  0C84  1C3D               	btfss	___flmul@bexp,0
  5356  0C85  2C87               	goto	u4001
  5357  0C86  2C88               	goto	u4000
  5358  0C87                     u4001:
  5359  0C87  2C89               	goto	l2652
  5360  0C88                     u4000:
  5361  0C88                     l2650:
  5362  0C88  17C0               	bsf	___flmul@prod+2,7
  5363  0C89                     l2652:
  5364  0C89  083D               	movf	___flmul@bexp,w
  5365  0C8A  00B2               	movwf	??___flmul
  5366  0C8B  1003               	clrc
  5367  0C8C  0C32               	rrf	??___flmul,w
  5368  0C8D  00B3               	movwf	??___flmul+1
  5369  0C8E  0833               	movf	??___flmul+1,w
  5370  0C8F  00C1               	movwf	___flmul@prod+3
  5371  0C90                     l756:
  5372  0C90  0837               	movf	___flmul@sign,w
  5373  0C91  00B2               	movwf	??___flmul
  5374  0C92  0832               	movf	??___flmul,w
  5375  0C93  04C1               	iorwf	___flmul@prod+3,f
  5376  0C94                     l2654:
  5377  0C94  0841               	movf	___flmul@prod+3,w
  5378  0C95  00AD               	movwf	?___flmul+3
  5379  0C96  0840               	movf	___flmul@prod+2,w
  5380  0C97  00AC               	movwf	?___flmul+2
  5381  0C98  083F               	movf	___flmul@prod+1,w
  5382  0C99  00AB               	movwf	?___flmul+1
  5383  0C9A  083E               	movf	___flmul@prod,w
  5384  0C9B  00AA               	movwf	?___flmul
  5385  0C9C                     l744:
  5386  0C9C  0008               	return
  5387  0C9D                     __end_of___flmul:
  5388                           
  5389                           	psect	text10
  5390  1B8E                     __ptext10:	
  5391 ;; *************** function __Umul8_16 *****************
  5392 ;; Defined at:
  5393 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5394 ;; Parameters:    Size  Location     Type
  5395 ;;  multiplier      1    wreg     unsigned char 
  5396 ;;  multiplicand    1    3[COMMON] unsigned char 
  5397 ;; Auto vars:     Size  Location     Type
  5398 ;;  multiplier      1    4[BANK0 ] unsigned char 
  5399 ;;  word_mpld       2    2[BANK0 ] unsigned int 
  5400 ;;  product         2    0[BANK0 ] unsigned int 
  5401 ;; Return value:  Size  Location     Type
  5402 ;;                  2    3[COMMON] unsigned int 
  5403 ;; Registers used:
  5404 ;;		wreg, status,2, status,0
  5405 ;; Tracked objects:
  5406 ;;		On entry : 0/0
  5407 ;;		On exit  : 0/0
  5408 ;;		Unchanged: 0/0
  5409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5410 ;;      Params:         2       0       0       0       0
  5411 ;;      Locals:         0       5       0       0       0
  5412 ;;      Temps:          2       0       0       0       0
  5413 ;;      Totals:         4       5       0       0       0
  5414 ;;Total ram usage:        9 bytes
  5415 ;; Hardware stack levels used:    1
  5416 ;; Hardware stack levels required when called:    1
  5417 ;; This function calls:
  5418 ;;		Nothing
  5419 ;; This function is called by:
  5420 ;;		___flmul
  5421 ;; This function uses a non-reentrant model
  5422 ;;
  5423                           
  5424                           
  5425                           ;psect for function __Umul8_16
  5426  1B8E                     __Umul8_16:
  5427                           
  5428                           ;incstack = 0
  5429                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5430                           ;__Umul8_16@multiplier stored from wreg
  5431  1B8E  1283               	bcf	3,5	;RP0=0, select bank0
  5432  1B8F  1303               	bcf	3,6	;RP1=0, select bank0
  5433  1B90  00A4               	movwf	__Umul8_16@multiplier
  5434  1B91                     l2178:
  5435  1B91  01A0               	clrf	__Umul8_16@product
  5436  1B92  01A1               	clrf	__Umul8_16@product+1
  5437  1B93                     l2180:
  5438  1B93  0873               	movf	__Umul8_16@multiplicand,w
  5439  1B94  00F5               	movwf	??__Umul8_16
  5440  1B95  01F6               	clrf	??__Umul8_16+1
  5441  1B96  0875               	movf	??__Umul8_16,w
  5442  1B97  00A2               	movwf	__Umul8_16@word_mpld
  5443  1B98  0876               	movf	??__Umul8_16+1,w
  5444  1B99  00A3               	movwf	__Umul8_16@word_mpld+1
  5445  1B9A                     l2182:
  5446  1B9A  1C24               	btfss	__Umul8_16@multiplier,0
  5447  1B9B  2B9D               	goto	u2831
  5448  1B9C  2B9E               	goto	u2830
  5449  1B9D                     u2831:
  5450  1B9D  2BA4               	goto	l763
  5451  1B9E                     u2830:
  5452  1B9E                     l2184:
  5453  1B9E  0822               	movf	__Umul8_16@word_mpld,w
  5454  1B9F  07A0               	addwf	__Umul8_16@product,f
  5455  1BA0  1803               	skipnc
  5456  1BA1  0AA1               	incf	__Umul8_16@product+1,f
  5457  1BA2  0823               	movf	__Umul8_16@word_mpld+1,w
  5458  1BA3  07A1               	addwf	__Umul8_16@product+1,f
  5459  1BA4                     l763:
  5460  1BA4  3001               	movlw	1
  5461  1BA5                     u2845:
  5462  1BA5  1003               	clrc
  5463  1BA6  0DA2               	rlf	__Umul8_16@word_mpld,f
  5464  1BA7  0DA3               	rlf	__Umul8_16@word_mpld+1,f
  5465  1BA8  3EFF               	addlw	-1
  5466  1BA9  1D03               	skipz
  5467  1BAA  2BA5               	goto	u2845
  5468  1BAB  1003               	clrc
  5469  1BAC  0CA4               	rrf	__Umul8_16@multiplier,f
  5470  1BAD                     l2186:
  5471  1BAD  0824               	movf	__Umul8_16@multiplier,w
  5472  1BAE  1D03               	btfss	3,2
  5473  1BAF  2BB1               	goto	u2851
  5474  1BB0  2BB2               	goto	u2850
  5475  1BB1                     u2851:
  5476  1BB1  2B9A               	goto	l2182
  5477  1BB2                     u2850:
  5478  1BB2                     l2188:
  5479  1BB2  0821               	movf	__Umul8_16@product+1,w
  5480  1BB3  00F4               	movwf	?__Umul8_16+1
  5481  1BB4  0820               	movf	__Umul8_16@product,w
  5482  1BB5  00F3               	movwf	?__Umul8_16
  5483  1BB6                     l765:
  5484  1BB6  0008               	return
  5485  1BB7                     __end_of__Umul8_16:
  5486                           
  5487                           	psect	text11
  5488  10F7                     __ptext11:	
  5489 ;; *************** function __tdiv_to_l_ *****************
  5490 ;; Defined at:
  5491 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5492 ;; Parameters:    Size  Location     Type
  5493 ;;  f1              4    0[BANK0 ] float 
  5494 ;;  f2              4    4[BANK0 ] float 
  5495 ;; Auto vars:     Size  Location     Type
  5496 ;;  quot            4    8[BANK0 ] unsigned long 
  5497 ;;  exp1            1   13[BANK0 ] unsigned char 
  5498 ;;  cntr            1   12[BANK0 ] unsigned char 
  5499 ;; Return value:  Size  Location     Type
  5500 ;;                  4    0[BANK0 ] unsigned long 
  5501 ;; Registers used:
  5502 ;;		wreg, status,2, status,0
  5503 ;; Tracked objects:
  5504 ;;		On entry : 0/0
  5505 ;;		On exit  : 0/0
  5506 ;;		Unchanged: 0/0
  5507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5508 ;;      Params:         0       8       0       0       0
  5509 ;;      Locals:         0       6       0       0       0
  5510 ;;      Temps:          4       0       0       0       0
  5511 ;;      Totals:         4      14       0       0       0
  5512 ;;Total ram usage:       18 bytes
  5513 ;; Hardware stack levels used:    1
  5514 ;; Hardware stack levels required when called:    1
  5515 ;; This function calls:
  5516 ;;		Nothing
  5517 ;; This function is called by:
  5518 ;;		_sprintf
  5519 ;; This function uses a non-reentrant model
  5520 ;;
  5521                           
  5522                           
  5523                           ;psect for function __tdiv_to_l_
  5524  10F7                     __tdiv_to_l_:
  5525  10F7                     l3572:	
  5526                           ;incstack = 0
  5527                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5528                           
  5529  10F7  1283               	bcf	3,5	;RP0=0, select bank0
  5530  10F8  1303               	bcf	3,6	;RP1=0, select bank0
  5531  10F9  0820               	movf	__tdiv_to_l_@f1,w
  5532  10FA  00F3               	movwf	??__tdiv_to_l_
  5533  10FB  0821               	movf	__tdiv_to_l_@f1+1,w
  5534  10FC  00F4               	movwf	??__tdiv_to_l_+1
  5535  10FD  0822               	movf	__tdiv_to_l_@f1+2,w
  5536  10FE  00F5               	movwf	??__tdiv_to_l_+2
  5537  10FF  1003               	clrc
  5538  1100  0D74               	rlf	??__tdiv_to_l_+1,w
  5539  1101  0D75               	rlf	??__tdiv_to_l_+2,w
  5540  1102  00F6               	movwf	??__tdiv_to_l_+3
  5541  1103  0876               	movf	??__tdiv_to_l_+3,w
  5542  1104  00AD               	movwf	__tdiv_to_l_@exp1
  5543  1105  082D               	movf	__tdiv_to_l_@exp1,w
  5544  1106  1D03               	btfss	3,2
  5545  1107  2909               	goto	u5921
  5546  1108  290A               	goto	u5920
  5547  1109                     u5921:
  5548  1109  2913               	goto	l3578
  5549  110A                     u5920:
  5550  110A                     l3574:
  5551  110A  3000               	movlw	0
  5552  110B  00A3               	movwf	?__tdiv_to_l_+3
  5553  110C  3000               	movlw	0
  5554  110D  00A2               	movwf	?__tdiv_to_l_+2
  5555  110E  3000               	movlw	0
  5556  110F  00A1               	movwf	?__tdiv_to_l_+1
  5557  1110  3000               	movlw	0
  5558  1111  00A0               	movwf	?__tdiv_to_l_
  5559  1112  29B3               	goto	l538
  5560  1113                     l3578:
  5561  1113  0824               	movf	__tdiv_to_l_@f2,w
  5562  1114  00F3               	movwf	??__tdiv_to_l_
  5563  1115  0825               	movf	__tdiv_to_l_@f2+1,w
  5564  1116  00F4               	movwf	??__tdiv_to_l_+1
  5565  1117  0826               	movf	__tdiv_to_l_@f2+2,w
  5566  1118  00F5               	movwf	??__tdiv_to_l_+2
  5567  1119  1003               	clrc
  5568  111A  0D74               	rlf	??__tdiv_to_l_+1,w
  5569  111B  0D75               	rlf	??__tdiv_to_l_+2,w
  5570  111C  00F6               	movwf	??__tdiv_to_l_+3
  5571  111D  0876               	movf	??__tdiv_to_l_+3,w
  5572  111E  00AC               	movwf	__tdiv_to_l_@cntr
  5573  111F  082C               	movf	__tdiv_to_l_@cntr,w
  5574  1120  1D03               	btfss	3,2
  5575  1121  2923               	goto	u5931
  5576  1122  2924               	goto	u5930
  5577  1123                     u5931:
  5578  1123  2925               	goto	l539
  5579  1124                     u5930:
  5580  1124  290A               	goto	l3574
  5581  1125                     l539:
  5582  1125  17A1               	bsf	__tdiv_to_l_@f1+1,7
  5583  1126                     l3584:
  5584  1126  30FF               	movlw	255
  5585  1127  05A0               	andwf	__tdiv_to_l_@f1,f
  5586  1128  30FF               	movlw	255
  5587  1129  05A1               	andwf	__tdiv_to_l_@f1+1,f
  5588  112A  3000               	movlw	0
  5589  112B  05A2               	andwf	__tdiv_to_l_@f1+2,f
  5590  112C                     l3586:
  5591  112C  17A5               	bsf	__tdiv_to_l_@f2+1,7
  5592  112D  30FF               	movlw	255
  5593  112E  05A4               	andwf	__tdiv_to_l_@f2,f
  5594  112F  30FF               	movlw	255
  5595  1130  05A5               	andwf	__tdiv_to_l_@f2+1,f
  5596  1131  3000               	movlw	0
  5597  1132  05A6               	andwf	__tdiv_to_l_@f2+2,f
  5598  1133  3000               	movlw	0
  5599  1134  00AB               	movwf	__tdiv_to_l_@quot+3
  5600  1135  3000               	movlw	0
  5601  1136  00AA               	movwf	__tdiv_to_l_@quot+2
  5602  1137  3000               	movlw	0
  5603  1138  00A9               	movwf	__tdiv_to_l_@quot+1
  5604  1139  3000               	movlw	0
  5605  113A  00A8               	movwf	__tdiv_to_l_@quot
  5606  113B                     l3588:
  5607  113B  307F               	movlw	127
  5608  113C  02AD               	subwf	__tdiv_to_l_@exp1,f
  5609  113D                     l3590:
  5610  113D  3098               	movlw	152
  5611  113E  072C               	addwf	__tdiv_to_l_@cntr,w
  5612  113F  00F3               	movwf	??__tdiv_to_l_
  5613  1140  0873               	movf	??__tdiv_to_l_,w
  5614  1141  02AD               	subwf	__tdiv_to_l_@exp1,f
  5615  1142  3018               	movlw	24
  5616  1143  00F3               	movwf	??__tdiv_to_l_
  5617  1144  0873               	movf	??__tdiv_to_l_,w
  5618  1145  00AC               	movwf	__tdiv_to_l_@cntr
  5619  1146                     l3592:
  5620  1146  3001               	movlw	1
  5621  1147  00F3               	movwf	??__tdiv_to_l_
  5622  1148                     u5945:
  5623  1148  1003               	clrc
  5624  1149  0DA8               	rlf	__tdiv_to_l_@quot,f
  5625  114A  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  5626  114B  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  5627  114C  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  5628  114D  0BF3               	decfsz	??__tdiv_to_l_,f
  5629  114E  2948               	goto	u5945
  5630  114F                     l3594:
  5631  114F  0826               	movf	__tdiv_to_l_@f2+2,w
  5632  1150  0222               	subwf	__tdiv_to_l_@f1+2,w
  5633  1151  1D03               	skipz
  5634  1152  2959               	goto	u5955
  5635  1153  0825               	movf	__tdiv_to_l_@f2+1,w
  5636  1154  0221               	subwf	__tdiv_to_l_@f1+1,w
  5637  1155  1D03               	skipz
  5638  1156  2959               	goto	u5955
  5639  1157  0824               	movf	__tdiv_to_l_@f2,w
  5640  1158  0220               	subwf	__tdiv_to_l_@f1,w
  5641  1159                     u5955:
  5642  1159  1C03               	skipc
  5643  115A  295C               	goto	u5951
  5644  115B  295D               	goto	u5950
  5645  115C                     u5951:
  5646  115C  2968               	goto	l3600
  5647  115D                     u5950:
  5648  115D                     l3596:
  5649  115D  0824               	movf	__tdiv_to_l_@f2,w
  5650  115E  02A0               	subwf	__tdiv_to_l_@f1,f
  5651  115F  0825               	movf	__tdiv_to_l_@f2+1,w
  5652  1160  1C03               	skipc
  5653  1161  0F25               	incfsz	__tdiv_to_l_@f2+1,w
  5654  1162  02A1               	subwf	__tdiv_to_l_@f1+1,f
  5655  1163  0826               	movf	__tdiv_to_l_@f2+2,w
  5656  1164  1C03               	skipc
  5657  1165  0A26               	incf	__tdiv_to_l_@f2+2,w
  5658  1166  02A2               	subwf	__tdiv_to_l_@f1+2,f
  5659  1167                     l3598:
  5660  1167  1428               	bsf	__tdiv_to_l_@quot,0
  5661  1168                     l3600:
  5662  1168  3001               	movlw	1
  5663  1169                     u5965:
  5664  1169  1003               	clrc
  5665  116A  0DA0               	rlf	__tdiv_to_l_@f1,f
  5666  116B  0DA1               	rlf	__tdiv_to_l_@f1+1,f
  5667  116C  0DA2               	rlf	__tdiv_to_l_@f1+2,f
  5668  116D  3EFF               	addlw	-1
  5669  116E  1D03               	skipz
  5670  116F  2969               	goto	u5965
  5671  1170                     l3602:
  5672  1170  3001               	movlw	1
  5673  1171  02AC               	subwf	__tdiv_to_l_@cntr,f
  5674  1172  1D03               	btfss	3,2
  5675  1173  2975               	goto	u5971
  5676  1174  2976               	goto	u5970
  5677  1175                     u5971:
  5678  1175  2946               	goto	l3592
  5679  1176                     u5970:
  5680  1176                     l542:
  5681  1176  1FAD               	btfss	__tdiv_to_l_@exp1,7
  5682  1177  2979               	goto	u5981
  5683  1178  297A               	goto	u5980
  5684  1179                     u5981:
  5685  1179  2994               	goto	l3612
  5686  117A                     u5980:
  5687  117A                     l3604:
  5688  117A  082D               	movf	__tdiv_to_l_@exp1,w
  5689  117B  3A80               	xorlw	128
  5690  117C  3E97               	addlw	151
  5691  117D  1803               	skipnc
  5692  117E  2980               	goto	u5991
  5693  117F  2981               	goto	u5990
  5694  1180                     u5991:
  5695  1180  2982               	goto	l3610
  5696  1181                     u5990:
  5697  1181  290A               	goto	l3574
  5698  1182                     l3610:
  5699  1182  3001               	movlw	1
  5700  1183                     u6005:
  5701  1183  1003               	clrc
  5702  1184  0CAB               	rrf	__tdiv_to_l_@quot+3,f
  5703  1185  0CAA               	rrf	__tdiv_to_l_@quot+2,f
  5704  1186  0CA9               	rrf	__tdiv_to_l_@quot+1,f
  5705  1187  0CA8               	rrf	__tdiv_to_l_@quot,f
  5706  1188  3EFF               	addlw	-1
  5707  1189  1D03               	skipz
  5708  118A  2983               	goto	u6005
  5709  118B  3001               	movlw	1
  5710  118C  00F3               	movwf	??__tdiv_to_l_
  5711  118D  0873               	movf	??__tdiv_to_l_,w
  5712  118E  07AD               	addwf	__tdiv_to_l_@exp1,f
  5713  118F  1D03               	btfss	3,2
  5714  1190  2992               	goto	u6011
  5715  1191  2993               	goto	u6010
  5716  1192                     u6011:
  5717  1192  2982               	goto	l3610
  5718  1193                     u6010:
  5719  1193  29AB               	goto	l3620
  5720  1194                     l3612:
  5721  1194  3018               	movlw	24
  5722  1195  022D               	subwf	__tdiv_to_l_@exp1,w
  5723  1196  1C03               	skipc
  5724  1197  2999               	goto	u6021
  5725  1198  299A               	goto	u6020
  5726  1199                     u6021:
  5727  1199  29A6               	goto	l549
  5728  119A                     u6020:
  5729  119A  290A               	goto	l3574
  5730  119B                     l3618:
  5731  119B  3001               	movlw	1
  5732  119C  00F3               	movwf	??__tdiv_to_l_
  5733  119D                     u6035:
  5734  119D  1003               	clrc
  5735  119E  0DA8               	rlf	__tdiv_to_l_@quot,f
  5736  119F  0DA9               	rlf	__tdiv_to_l_@quot+1,f
  5737  11A0  0DAA               	rlf	__tdiv_to_l_@quot+2,f
  5738  11A1  0DAB               	rlf	__tdiv_to_l_@quot+3,f
  5739  11A2  0BF3               	decfsz	??__tdiv_to_l_,f
  5740  11A3  299D               	goto	u6035
  5741  11A4  3001               	movlw	1
  5742  11A5  02AD               	subwf	__tdiv_to_l_@exp1,f
  5743  11A6                     l549:
  5744  11A6  082D               	movf	__tdiv_to_l_@exp1,w
  5745  11A7  1D03               	btfss	3,2
  5746  11A8  29AA               	goto	u6041
  5747  11A9  29AB               	goto	u6040
  5748  11AA                     u6041:
  5749  11AA  299B               	goto	l3618
  5750  11AB                     u6040:
  5751  11AB                     l3620:
  5752  11AB  082B               	movf	__tdiv_to_l_@quot+3,w
  5753  11AC  00A3               	movwf	?__tdiv_to_l_+3
  5754  11AD  082A               	movf	__tdiv_to_l_@quot+2,w
  5755  11AE  00A2               	movwf	?__tdiv_to_l_+2
  5756  11AF  0829               	movf	__tdiv_to_l_@quot+1,w
  5757  11B0  00A1               	movwf	?__tdiv_to_l_+1
  5758  11B1  0828               	movf	__tdiv_to_l_@quot,w
  5759  11B2  00A0               	movwf	?__tdiv_to_l_
  5760  11B3                     l538:
  5761  11B3  0008               	return
  5762  11B4                     __end_of__tdiv_to_l_:
  5763                           
  5764                           	psect	text12
  5765  11B4                     __ptext12:	
  5766 ;; *************** function __div_to_l_ *****************
  5767 ;; Defined at:
  5768 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  5769 ;; Parameters:    Size  Location     Type
  5770 ;;  f1              4    0[BANK0 ] unsigned long 
  5771 ;;  f2              4    4[BANK0 ] unsigned long 
  5772 ;; Auto vars:     Size  Location     Type
  5773 ;;  quot            4    4[COMMON] unsigned long 
  5774 ;;  exp1            1    9[COMMON] unsigned char 
  5775 ;;  cntr            1    8[COMMON] unsigned char 
  5776 ;; Return value:  Size  Location     Type
  5777 ;;                  4    0[BANK0 ] unsigned long 
  5778 ;; Registers used:
  5779 ;;		wreg, status,2, status,0
  5780 ;; Tracked objects:
  5781 ;;		On entry : 0/0
  5782 ;;		On exit  : 0/0
  5783 ;;		Unchanged: 0/0
  5784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5785 ;;      Params:         0       8       0       0       0
  5786 ;;      Locals:         6       0       0       0       0
  5787 ;;      Temps:          1       0       0       0       0
  5788 ;;      Totals:         7       8       0       0       0
  5789 ;;Total ram usage:       15 bytes
  5790 ;; Hardware stack levels used:    1
  5791 ;; Hardware stack levels required when called:    1
  5792 ;; This function calls:
  5793 ;;		Nothing
  5794 ;; This function is called by:
  5795 ;;		_sprintf
  5796 ;; This function uses a non-reentrant model
  5797 ;;
  5798                           
  5799                           
  5800                           ;psect for function __div_to_l_
  5801  11B4                     __div_to_l_:
  5802  11B4                     l3624:	
  5803                           ;incstack = 0
  5804                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  5805                           
  5806  11B4  1003               	clrc
  5807  11B5  1283               	bcf	3,5	;RP0=0, select bank0
  5808  11B6  1303               	bcf	3,6	;RP1=0, select bank0
  5809  11B7  0D22               	rlf	__div_to_l_@f1+2,w
  5810  11B8  0D23               	rlf	__div_to_l_@f1+3,w
  5811  11B9  00F3               	movwf	??__div_to_l_
  5812  11BA  0873               	movf	??__div_to_l_,w
  5813  11BB  00F9               	movwf	__div_to_l_@exp1
  5814  11BC  0879               	movf	__div_to_l_@exp1,w
  5815  11BD  1D03               	btfss	3,2
  5816  11BE  29C0               	goto	u6051
  5817  11BF  29C1               	goto	u6050
  5818  11C0                     u6051:
  5819  11C0  29CA               	goto	l3630
  5820  11C1                     u6050:
  5821  11C1                     l3626:
  5822  11C1  3000               	movlw	0
  5823  11C2  00A3               	movwf	?__div_to_l_+3
  5824  11C3  3000               	movlw	0
  5825  11C4  00A2               	movwf	?__div_to_l_+2
  5826  11C5  3000               	movlw	0
  5827  11C6  00A1               	movwf	?__div_to_l_+1
  5828  11C7  3000               	movlw	0
  5829  11C8  00A0               	movwf	?__div_to_l_
  5830  11C9  2A73               	goto	l491
  5831  11CA                     l3630:
  5832  11CA  1003               	clrc
  5833  11CB  0D26               	rlf	__div_to_l_@f2+2,w
  5834  11CC  0D27               	rlf	__div_to_l_@f2+3,w
  5835  11CD  00F3               	movwf	??__div_to_l_
  5836  11CE  0873               	movf	??__div_to_l_,w
  5837  11CF  00F8               	movwf	__div_to_l_@cntr
  5838  11D0  0878               	movf	__div_to_l_@cntr,w
  5839  11D1  1D03               	btfss	3,2
  5840  11D2  29D4               	goto	u6061
  5841  11D3  29D5               	goto	u6060
  5842  11D4                     u6061:
  5843  11D4  29D6               	goto	l492
  5844  11D5                     u6060:
  5845  11D5  29C1               	goto	l3626
  5846  11D6                     l492:
  5847  11D6  17A2               	bsf	__div_to_l_@f1+2,7
  5848  11D7                     l3636:
  5849  11D7  30FF               	movlw	255
  5850  11D8  05A0               	andwf	__div_to_l_@f1,f
  5851  11D9  30FF               	movlw	255
  5852  11DA  05A1               	andwf	__div_to_l_@f1+1,f
  5853  11DB  30FF               	movlw	255
  5854  11DC  05A2               	andwf	__div_to_l_@f1+2,f
  5855  11DD  3000               	movlw	0
  5856  11DE  05A3               	andwf	__div_to_l_@f1+3,f
  5857  11DF                     l3638:
  5858  11DF  17A6               	bsf	__div_to_l_@f2+2,7
  5859  11E0  30FF               	movlw	255
  5860  11E1  05A4               	andwf	__div_to_l_@f2,f
  5861  11E2  30FF               	movlw	255
  5862  11E3  05A5               	andwf	__div_to_l_@f2+1,f
  5863  11E4  30FF               	movlw	255
  5864  11E5  05A6               	andwf	__div_to_l_@f2+2,f
  5865  11E6  3000               	movlw	0
  5866  11E7  05A7               	andwf	__div_to_l_@f2+3,f
  5867  11E8  3000               	movlw	0
  5868  11E9  00F7               	movwf	__div_to_l_@quot+3
  5869  11EA  3000               	movlw	0
  5870  11EB  00F6               	movwf	__div_to_l_@quot+2
  5871  11EC  3000               	movlw	0
  5872  11ED  00F5               	movwf	__div_to_l_@quot+1
  5873  11EE  3000               	movlw	0
  5874  11EF  00F4               	movwf	__div_to_l_@quot
  5875  11F0                     l3640:
  5876  11F0  307F               	movlw	127
  5877  11F1  02F9               	subwf	__div_to_l_@exp1,f
  5878  11F2                     l3642:
  5879  11F2  30A0               	movlw	160
  5880  11F3  0778               	addwf	__div_to_l_@cntr,w
  5881  11F4  00F3               	movwf	??__div_to_l_
  5882  11F5  0873               	movf	??__div_to_l_,w
  5883  11F6  02F9               	subwf	__div_to_l_@exp1,f
  5884  11F7  3020               	movlw	32
  5885  11F8  00F3               	movwf	??__div_to_l_
  5886  11F9  0873               	movf	??__div_to_l_,w
  5887  11FA  00F8               	movwf	__div_to_l_@cntr
  5888  11FB                     l3644:
  5889  11FB  3001               	movlw	1
  5890  11FC  00F3               	movwf	??__div_to_l_
  5891  11FD                     u6075:
  5892  11FD  1003               	clrc
  5893  11FE  0DF4               	rlf	__div_to_l_@quot,f
  5894  11FF  0DF5               	rlf	__div_to_l_@quot+1,f
  5895  1200  0DF6               	rlf	__div_to_l_@quot+2,f
  5896  1201  0DF7               	rlf	__div_to_l_@quot+3,f
  5897  1202  0BF3               	decfsz	??__div_to_l_,f
  5898  1203  29FD               	goto	u6075
  5899  1204                     l3646:
  5900  1204  0827               	movf	__div_to_l_@f2+3,w
  5901  1205  0223               	subwf	__div_to_l_@f1+3,w
  5902  1206  1D03               	skipz
  5903  1207  2A12               	goto	u6085
  5904  1208  0826               	movf	__div_to_l_@f2+2,w
  5905  1209  0222               	subwf	__div_to_l_@f1+2,w
  5906  120A  1D03               	skipz
  5907  120B  2A12               	goto	u6085
  5908  120C  0825               	movf	__div_to_l_@f2+1,w
  5909  120D  0221               	subwf	__div_to_l_@f1+1,w
  5910  120E  1D03               	skipz
  5911  120F  2A12               	goto	u6085
  5912  1210  0824               	movf	__div_to_l_@f2,w
  5913  1211  0220               	subwf	__div_to_l_@f1,w
  5914  1212                     u6085:
  5915  1212  1C03               	skipc
  5916  1213  2A15               	goto	u6081
  5917  1214  2A16               	goto	u6080
  5918  1215                     u6081:
  5919  1215  2A25               	goto	l3652
  5920  1216                     u6080:
  5921  1216                     l3648:
  5922  1216  0824               	movf	__div_to_l_@f2,w
  5923  1217  02A0               	subwf	__div_to_l_@f1,f
  5924  1218  0825               	movf	__div_to_l_@f2+1,w
  5925  1219  1C03               	skipc
  5926  121A  0F25               	incfsz	__div_to_l_@f2+1,w
  5927  121B  02A1               	subwf	__div_to_l_@f1+1,f
  5928  121C  0826               	movf	__div_to_l_@f2+2,w
  5929  121D  1C03               	skipc
  5930  121E  0F26               	incfsz	__div_to_l_@f2+2,w
  5931  121F  02A2               	subwf	__div_to_l_@f1+2,f
  5932  1220  0827               	movf	__div_to_l_@f2+3,w
  5933  1221  1C03               	skipc
  5934  1222  0F27               	incfsz	__div_to_l_@f2+3,w
  5935  1223  02A3               	subwf	__div_to_l_@f1+3,f
  5936  1224                     l3650:
  5937  1224  1474               	bsf	__div_to_l_@quot,0
  5938  1225                     l3652:
  5939  1225  3001               	movlw	1
  5940  1226  00F3               	movwf	??__div_to_l_
  5941  1227                     u6095:
  5942  1227  1003               	clrc
  5943  1228  0DA0               	rlf	__div_to_l_@f1,f
  5944  1229  0DA1               	rlf	__div_to_l_@f1+1,f
  5945  122A  0DA2               	rlf	__div_to_l_@f1+2,f
  5946  122B  0DA3               	rlf	__div_to_l_@f1+3,f
  5947  122C  0BF3               	decfsz	??__div_to_l_,f
  5948  122D  2A27               	goto	u6095
  5949  122E                     l3654:
  5950  122E  3001               	movlw	1
  5951  122F  02F8               	subwf	__div_to_l_@cntr,f
  5952  1230  1D03               	btfss	3,2
  5953  1231  2A33               	goto	u6101
  5954  1232  2A34               	goto	u6100
  5955  1233                     u6101:
  5956  1233  29FB               	goto	l3644
  5957  1234                     u6100:
  5958  1234                     l495:
  5959  1234  1FF9               	btfss	__div_to_l_@exp1,7
  5960  1235  2A37               	goto	u6111
  5961  1236  2A38               	goto	u6110
  5962  1237                     u6111:
  5963  1237  2A52               	goto	l3664
  5964  1238                     u6110:
  5965  1238                     l3656:
  5966  1238  0879               	movf	__div_to_l_@exp1,w
  5967  1239  3A80               	xorlw	128
  5968  123A  3E9F               	addlw	159
  5969  123B  1803               	skipnc
  5970  123C  2A3E               	goto	u6121
  5971  123D  2A3F               	goto	u6120
  5972  123E                     u6121:
  5973  123E  2A40               	goto	l3662
  5974  123F                     u6120:
  5975  123F  29C1               	goto	l3626
  5976  1240                     l3662:
  5977  1240  3001               	movlw	1
  5978  1241                     u6135:
  5979  1241  1003               	clrc
  5980  1242  0CF7               	rrf	__div_to_l_@quot+3,f
  5981  1243  0CF6               	rrf	__div_to_l_@quot+2,f
  5982  1244  0CF5               	rrf	__div_to_l_@quot+1,f
  5983  1245  0CF4               	rrf	__div_to_l_@quot,f
  5984  1246  3EFF               	addlw	-1
  5985  1247  1D03               	skipz
  5986  1248  2A41               	goto	u6135
  5987  1249  3001               	movlw	1
  5988  124A  00F3               	movwf	??__div_to_l_
  5989  124B  0873               	movf	??__div_to_l_,w
  5990  124C  07F9               	addwf	__div_to_l_@exp1,f
  5991  124D  1D03               	btfss	3,2
  5992  124E  2A50               	goto	u6141
  5993  124F  2A51               	goto	u6140
  5994  1250                     u6141:
  5995  1250  2A40               	goto	l3662
  5996  1251                     u6140:
  5997  1251  2A69               	goto	l3672
  5998  1252                     l3664:
  5999  1252  3020               	movlw	32
  6000  1253  0279               	subwf	__div_to_l_@exp1,w
  6001  1254  1C03               	skipc
  6002  1255  2A57               	goto	u6151
  6003  1256  2A58               	goto	u6150
  6004  1257                     u6151:
  6005  1257  2A64               	goto	l502
  6006  1258                     u6150:
  6007  1258  29C1               	goto	l3626
  6008  1259                     l3670:
  6009  1259  3001               	movlw	1
  6010  125A  00F3               	movwf	??__div_to_l_
  6011  125B                     u6165:
  6012  125B  1003               	clrc
  6013  125C  0DF4               	rlf	__div_to_l_@quot,f
  6014  125D  0DF5               	rlf	__div_to_l_@quot+1,f
  6015  125E  0DF6               	rlf	__div_to_l_@quot+2,f
  6016  125F  0DF7               	rlf	__div_to_l_@quot+3,f
  6017  1260  0BF3               	decfsz	??__div_to_l_,f
  6018  1261  2A5B               	goto	u6165
  6019  1262  3001               	movlw	1
  6020  1263  02F9               	subwf	__div_to_l_@exp1,f
  6021  1264                     l502:
  6022  1264  0879               	movf	__div_to_l_@exp1,w
  6023  1265  1D03               	btfss	3,2
  6024  1266  2A68               	goto	u6171
  6025  1267  2A69               	goto	u6170
  6026  1268                     u6171:
  6027  1268  2A59               	goto	l3670
  6028  1269                     u6170:
  6029  1269                     l3672:
  6030  1269  0877               	movf	__div_to_l_@quot+3,w
  6031  126A  1283               	bcf	3,5	;RP0=0, select bank0
  6032  126B  1303               	bcf	3,6	;RP1=0, select bank0
  6033  126C  00A3               	movwf	?__div_to_l_+3
  6034  126D  0876               	movf	__div_to_l_@quot+2,w
  6035  126E  00A2               	movwf	?__div_to_l_+2
  6036  126F  0875               	movf	__div_to_l_@quot+1,w
  6037  1270  00A1               	movwf	?__div_to_l_+1
  6038  1271  0874               	movf	__div_to_l_@quot,w
  6039  1272  00A0               	movwf	?__div_to_l_
  6040  1273                     l491:
  6041  1273  0008               	return
  6042  1274                     __end_of__div_to_l_:
  6043                           
  6044                           	psect	text13
  6045  103B                     __ptext13:	
  6046 ;; *************** function ___xxtofl *****************
  6047 ;; Defined at:
  6048 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  sign            1    wreg     unsigned char 
  6051 ;;  val             4    3[COMMON] long 
  6052 ;; Auto vars:     Size  Location     Type
  6053 ;;  sign            1    4[BANK0 ] unsigned char 
  6054 ;;  arg             4    6[BANK0 ] unsigned long 
  6055 ;;  exp             1    5[BANK0 ] unsigned char 
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  4    3[COMMON] unsigned char 
  6058 ;; Registers used:
  6059 ;;		wreg, status,2, status,0
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6065 ;;      Params:         4       0       0       0       0
  6066 ;;      Locals:         0       6       0       0       0
  6067 ;;      Temps:          0       4       0       0       0
  6068 ;;      Totals:         4      10       0       0       0
  6069 ;;Total ram usage:       14 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:    1
  6072 ;; This function calls:
  6073 ;;		Nothing
  6074 ;; This function is called by:
  6075 ;;		_main
  6076 ;;		_sprintf
  6077 ;; This function uses a non-reentrant model
  6078 ;;
  6079                           
  6080                           
  6081                           ;psect for function ___xxtofl
  6082  103B                     ___xxtofl:
  6083                           
  6084                           ;incstack = 0
  6085                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6086                           ;___xxtofl@sign stored from wreg
  6087  103B  1283               	bcf	3,5	;RP0=0, select bank0
  6088  103C  1303               	bcf	3,6	;RP1=0, select bank0
  6089  103D  00A4               	movwf	___xxtofl@sign
  6090  103E                     l3752:
  6091  103E  0824               	movf	___xxtofl@sign,w
  6092  103F  1903               	btfsc	3,2
  6093  1040  2842               	goto	u6411
  6094  1041  2843               	goto	u6410
  6095  1042                     u6411:
  6096  1042  2857               	goto	l3758
  6097  1043                     u6410:
  6098  1043                     l3754:
  6099  1043  1FF6               	btfss	___xxtofl@val+3,7
  6100  1044  2846               	goto	u6421
  6101  1045  2847               	goto	u6420
  6102  1046                     u6421:
  6103  1046  2857               	goto	l3758
  6104  1047                     u6420:
  6105  1047                     l3756:
  6106  1047  0973               	comf	___xxtofl@val,w
  6107  1048  00A6               	movwf	___xxtofl@arg
  6108  1049  0974               	comf	___xxtofl@val+1,w
  6109  104A  00A7               	movwf	___xxtofl@arg+1
  6110  104B  0975               	comf	___xxtofl@val+2,w
  6111  104C  00A8               	movwf	___xxtofl@arg+2
  6112  104D  0976               	comf	___xxtofl@val+3,w
  6113  104E  00A9               	movwf	___xxtofl@arg+3
  6114  104F  0AA6               	incf	___xxtofl@arg,f
  6115  1050  1903               	skipnz
  6116  1051  0AA7               	incf	___xxtofl@arg+1,f
  6117  1052  1903               	skipnz
  6118  1053  0AA8               	incf	___xxtofl@arg+2,f
  6119  1054  1903               	skipnz
  6120  1055  0AA9               	incf	___xxtofl@arg+3,f
  6121  1056  285F               	goto	l788
  6122  1057                     l3758:
  6123  1057  0876               	movf	___xxtofl@val+3,w
  6124  1058  00A9               	movwf	___xxtofl@arg+3
  6125  1059  0875               	movf	___xxtofl@val+2,w
  6126  105A  00A8               	movwf	___xxtofl@arg+2
  6127  105B  0874               	movf	___xxtofl@val+1,w
  6128  105C  00A7               	movwf	___xxtofl@arg+1
  6129  105D  0873               	movf	___xxtofl@val,w
  6130  105E  00A6               	movwf	___xxtofl@arg
  6131  105F                     l788:
  6132  105F  0876               	movf	___xxtofl@val+3,w
  6133  1060  0475               	iorwf	___xxtofl@val+2,w
  6134  1061  0474               	iorwf	___xxtofl@val+1,w
  6135  1062  0473               	iorwf	___xxtofl@val,w
  6136  1063  1D03               	skipz
  6137  1064  2866               	goto	u6431
  6138  1065  2867               	goto	u6430
  6139  1066                     u6431:
  6140  1066  2870               	goto	l3764
  6141  1067                     u6430:
  6142  1067                     l3760:
  6143  1067  3000               	movlw	0
  6144  1068  00F6               	movwf	?___xxtofl+3
  6145  1069  3000               	movlw	0
  6146  106A  00F5               	movwf	?___xxtofl+2
  6147  106B  3000               	movlw	0
  6148  106C  00F4               	movwf	?___xxtofl+1
  6149  106D  3000               	movlw	0
  6150  106E  00F3               	movwf	?___xxtofl
  6151  106F  28F6               	goto	l790
  6152  1070                     l3764:
  6153  1070  3096               	movlw	150
  6154  1071  00A0               	movwf	??___xxtofl
  6155  1072  0820               	movf	??___xxtofl,w
  6156  1073  00A5               	movwf	___xxtofl@exp
  6157  1074  2882               	goto	l3768
  6158  1075                     l3766:
  6159  1075  3001               	movlw	1
  6160  1076  00A0               	movwf	??___xxtofl
  6161  1077  0820               	movf	??___xxtofl,w
  6162  1078  07A5               	addwf	___xxtofl@exp,f
  6163  1079  3001               	movlw	1
  6164  107A                     u6445:
  6165  107A  1003               	clrc
  6166  107B  0CA9               	rrf	___xxtofl@arg+3,f
  6167  107C  0CA8               	rrf	___xxtofl@arg+2,f
  6168  107D  0CA7               	rrf	___xxtofl@arg+1,f
  6169  107E  0CA6               	rrf	___xxtofl@arg,f
  6170  107F  3EFF               	addlw	-1
  6171  1080  1D03               	skipz
  6172  1081  287A               	goto	u6445
  6173  1082                     l3768:
  6174  1082  30FE               	movlw	254
  6175  1083  0529               	andwf	___xxtofl@arg+3,w
  6176  1084  1D03               	btfss	3,2
  6177  1085  2887               	goto	u6451
  6178  1086  2888               	goto	u6450
  6179  1087                     u6451:
  6180  1087  2875               	goto	l3766
  6181  1088                     u6450:
  6182  1088  28A4               	goto	l794
  6183  1089                     l3770:
  6184  1089  3001               	movlw	1
  6185  108A  00A0               	movwf	??___xxtofl
  6186  108B  0820               	movf	??___xxtofl,w
  6187  108C  07A5               	addwf	___xxtofl@exp,f
  6188  108D                     l3772:
  6189  108D  3001               	movlw	1
  6190  108E  07A6               	addwf	___xxtofl@arg,f
  6191  108F  3000               	movlw	0
  6192  1090  1803               	skipnc
  6193  1091  3001               	movlw	1
  6194  1092  07A7               	addwf	___xxtofl@arg+1,f
  6195  1093  3000               	movlw	0
  6196  1094  1803               	skipnc
  6197  1095  3001               	movlw	1
  6198  1096  07A8               	addwf	___xxtofl@arg+2,f
  6199  1097  3000               	movlw	0
  6200  1098  1803               	skipnc
  6201  1099  3001               	movlw	1
  6202  109A  07A9               	addwf	___xxtofl@arg+3,f
  6203  109B                     l3774:
  6204  109B  3001               	movlw	1
  6205  109C                     u6465:
  6206  109C  1003               	clrc
  6207  109D  0CA9               	rrf	___xxtofl@arg+3,f
  6208  109E  0CA8               	rrf	___xxtofl@arg+2,f
  6209  109F  0CA7               	rrf	___xxtofl@arg+1,f
  6210  10A0  0CA6               	rrf	___xxtofl@arg,f
  6211  10A1  3EFF               	addlw	-1
  6212  10A2  1D03               	skipz
  6213  10A3  289C               	goto	u6465
  6214  10A4                     l794:
  6215  10A4  30FF               	movlw	255
  6216  10A5  0529               	andwf	___xxtofl@arg+3,w
  6217  10A6  1D03               	btfss	3,2
  6218  10A7  28A9               	goto	u6471
  6219  10A8  28AA               	goto	u6470
  6220  10A9                     u6471:
  6221  10A9  2889               	goto	l3770
  6222  10AA                     u6470:
  6223  10AA  28B6               	goto	l3778
  6224  10AB                     l3776:
  6225  10AB  3001               	movlw	1
  6226  10AC  02A5               	subwf	___xxtofl@exp,f
  6227  10AD  3001               	movlw	1
  6228  10AE  00A0               	movwf	??___xxtofl
  6229  10AF                     u6485:
  6230  10AF  1003               	clrc
  6231  10B0  0DA6               	rlf	___xxtofl@arg,f
  6232  10B1  0DA7               	rlf	___xxtofl@arg+1,f
  6233  10B2  0DA8               	rlf	___xxtofl@arg+2,f
  6234  10B3  0DA9               	rlf	___xxtofl@arg+3,f
  6235  10B4  0BA0               	decfsz	??___xxtofl,f
  6236  10B5  28AF               	goto	u6485
  6237  10B6                     l3778:
  6238  10B6  1BA8               	btfsc	___xxtofl@arg+2,7
  6239  10B7  28B9               	goto	u6491
  6240  10B8  28BA               	goto	u6490
  6241  10B9                     u6491:
  6242  10B9  28C0               	goto	l801
  6243  10BA                     u6490:
  6244  10BA                     l3780:
  6245  10BA  3002               	movlw	2
  6246  10BB  0225               	subwf	___xxtofl@exp,w
  6247  10BC  1803               	skipnc
  6248  10BD  28BF               	goto	u6501
  6249  10BE  28C0               	goto	u6500
  6250  10BF                     u6501:
  6251  10BF  28AB               	goto	l3776
  6252  10C0                     u6500:
  6253  10C0                     l801:
  6254  10C0  1825               	btfsc	___xxtofl@exp,0
  6255  10C1  28C3               	goto	u6511
  6256  10C2  28C4               	goto	u6510
  6257  10C3                     u6511:
  6258  10C3  28CC               	goto	l802
  6259  10C4                     u6510:
  6260  10C4                     l3782:
  6261  10C4  30FF               	movlw	255
  6262  10C5  05A6               	andwf	___xxtofl@arg,f
  6263  10C6  30FF               	movlw	255
  6264  10C7  05A7               	andwf	___xxtofl@arg+1,f
  6265  10C8  307F               	movlw	127
  6266  10C9  05A8               	andwf	___xxtofl@arg+2,f
  6267  10CA  30FF               	movlw	255
  6268  10CB  05A9               	andwf	___xxtofl@arg+3,f
  6269  10CC                     l802:
  6270  10CC  1003               	clrc
  6271  10CD  0CA5               	rrf	___xxtofl@exp,f
  6272  10CE                     l3784:
  6273  10CE  0825               	movf	___xxtofl@exp,w
  6274  10CF  00A0               	movwf	??___xxtofl
  6275  10D0  01A1               	clrf	??___xxtofl+1
  6276  10D1  01A2               	clrf	??___xxtofl+2
  6277  10D2  01A3               	clrf	??___xxtofl+3
  6278  10D3  3018               	movlw	24
  6279  10D4                     u6525:
  6280  10D4  1003               	clrc
  6281  10D5  0DA0               	rlf	??___xxtofl,f
  6282  10D6  0DA1               	rlf	??___xxtofl+1,f
  6283  10D7  0DA2               	rlf	??___xxtofl+2,f
  6284  10D8  0DA3               	rlf	??___xxtofl+3,f
  6285  10D9                     u6520:
  6286  10D9  3EFF               	addlw	-1
  6287  10DA  1D03               	skipz
  6288  10DB  28D4               	goto	u6525
  6289  10DC  0820               	movf	??___xxtofl,w
  6290  10DD  04A6               	iorwf	___xxtofl@arg,f
  6291  10DE  0821               	movf	??___xxtofl+1,w
  6292  10DF  04A7               	iorwf	___xxtofl@arg+1,f
  6293  10E0  0822               	movf	??___xxtofl+2,w
  6294  10E1  04A8               	iorwf	___xxtofl@arg+2,f
  6295  10E2  0823               	movf	??___xxtofl+3,w
  6296  10E3  04A9               	iorwf	___xxtofl@arg+3,f
  6297  10E4                     l3786:
  6298  10E4  0824               	movf	___xxtofl@sign,w
  6299  10E5  1903               	btfsc	3,2
  6300  10E6  28E8               	goto	u6531
  6301  10E7  28E9               	goto	u6530
  6302  10E8                     u6531:
  6303  10E8  28EE               	goto	l3792
  6304  10E9                     u6530:
  6305  10E9                     l3788:
  6306  10E9  1FF6               	btfss	___xxtofl@val+3,7
  6307  10EA  28EC               	goto	u6541
  6308  10EB  28ED               	goto	u6540
  6309  10EC                     u6541:
  6310  10EC  28EE               	goto	l3792
  6311  10ED                     u6540:
  6312  10ED                     l3790:
  6313  10ED  17A9               	bsf	___xxtofl@arg+3,7
  6314  10EE                     l3792:
  6315  10EE  0829               	movf	___xxtofl@arg+3,w
  6316  10EF  00F6               	movwf	?___xxtofl+3
  6317  10F0  0828               	movf	___xxtofl@arg+2,w
  6318  10F1  00F5               	movwf	?___xxtofl+2
  6319  10F2  0827               	movf	___xxtofl@arg+1,w
  6320  10F3  00F4               	movwf	?___xxtofl+1
  6321  10F4  0826               	movf	___xxtofl@arg,w
  6322  10F5  00F3               	movwf	?___xxtofl
  6323  10F6                     l790:
  6324  10F6  0008               	return
  6325  10F7                     __end_of___xxtofl:
  6326                           
  6327                           	psect	text14
  6328  1B43                     __ptext14:	
  6329 ;; *************** function ___wmul *****************
  6330 ;; Defined at:
  6331 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;  multiplier      2    3[COMMON] unsigned int 
  6334 ;;  multiplicand    2    5[COMMON] unsigned int 
  6335 ;; Auto vars:     Size  Location     Type
  6336 ;;  product         2    7[COMMON] unsigned int 
  6337 ;; Return value:  Size  Location     Type
  6338 ;;                  2    3[COMMON] unsigned int 
  6339 ;; Registers used:
  6340 ;;		wreg, status,2, status,0
  6341 ;; Tracked objects:
  6342 ;;		On entry : 0/0
  6343 ;;		On exit  : 0/0
  6344 ;;		Unchanged: 0/0
  6345 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6346 ;;      Params:         4       0       0       0       0
  6347 ;;      Locals:         2       0       0       0       0
  6348 ;;      Temps:          0       0       0       0       0
  6349 ;;      Totals:         6       0       0       0       0
  6350 ;;Total ram usage:        6 bytes
  6351 ;; Hardware stack levels used:    1
  6352 ;; Hardware stack levels required when called:    1
  6353 ;; This function calls:
  6354 ;;		Nothing
  6355 ;; This function is called by:
  6356 ;;		_sprintf
  6357 ;; This function uses a non-reentrant model
  6358 ;;
  6359                           
  6360                           
  6361                           ;psect for function ___wmul
  6362  1B43                     ___wmul:
  6363  1B43                     l2856:	
  6364                           ;incstack = 0
  6365                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6366                           
  6367  1B43  01F7               	clrf	___wmul@product
  6368  1B44  01F8               	clrf	___wmul@product+1
  6369  1B45                     l2858:
  6370  1B45  1C73               	btfss	___wmul@multiplier,0
  6371  1B46  2B48               	goto	u4541
  6372  1B47  2B49               	goto	u4540
  6373  1B48                     u4541:
  6374  1B48  2B4F               	goto	l321
  6375  1B49                     u4540:
  6376  1B49                     l2860:
  6377  1B49  0875               	movf	___wmul@multiplicand,w
  6378  1B4A  07F7               	addwf	___wmul@product,f
  6379  1B4B  1803               	skipnc
  6380  1B4C  0AF8               	incf	___wmul@product+1,f
  6381  1B4D  0876               	movf	___wmul@multiplicand+1,w
  6382  1B4E  07F8               	addwf	___wmul@product+1,f
  6383  1B4F                     l321:
  6384  1B4F  3001               	movlw	1
  6385  1B50                     u4555:
  6386  1B50  1003               	clrc
  6387  1B51  0DF5               	rlf	___wmul@multiplicand,f
  6388  1B52  0DF6               	rlf	___wmul@multiplicand+1,f
  6389  1B53  3EFF               	addlw	-1
  6390  1B54  1D03               	skipz
  6391  1B55  2B50               	goto	u4555
  6392  1B56                     l2862:
  6393  1B56  3001               	movlw	1
  6394  1B57                     u4565:
  6395  1B57  1003               	clrc
  6396  1B58  0CF4               	rrf	___wmul@multiplier+1,f
  6397  1B59  0CF3               	rrf	___wmul@multiplier,f
  6398  1B5A  3EFF               	addlw	-1
  6399  1B5B  1D03               	skipz
  6400  1B5C  2B57               	goto	u4565
  6401  1B5D                     l2864:
  6402  1B5D  0873               	movf	___wmul@multiplier,w
  6403  1B5E  0474               	iorwf	___wmul@multiplier+1,w
  6404  1B5F  1D03               	btfss	3,2
  6405  1B60  2B62               	goto	u4571
  6406  1B61  2B63               	goto	u4570
  6407  1B62                     u4571:
  6408  1B62  2B45               	goto	l2858
  6409  1B63                     u4570:
  6410  1B63                     l2866:
  6411  1B63  0878               	movf	___wmul@product+1,w
  6412  1B64  00F4               	movwf	?___wmul+1
  6413  1B65  0877               	movf	___wmul@product,w
  6414  1B66  00F3               	movwf	?___wmul
  6415  1B67                     l323:
  6416  1B67  0008               	return
  6417  1B68                     __end_of___wmul:
  6418                           
  6419                           	psect	text15
  6420  1D60                     __ptext15:	
  6421 ;; *************** function ___llmod *****************
  6422 ;; Defined at:
  6423 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;  divisor         4    0[BANK0 ] unsigned long 
  6426 ;;  dividend        4    4[BANK0 ] unsigned long 
  6427 ;; Auto vars:     Size  Location     Type
  6428 ;;  counter         1    4[COMMON] unsigned char 
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  4    0[BANK0 ] unsigned long 
  6431 ;; Registers used:
  6432 ;;		wreg, status,2, status,0
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6438 ;;      Params:         0       8       0       0       0
  6439 ;;      Locals:         1       0       0       0       0
  6440 ;;      Temps:          1       0       0       0       0
  6441 ;;      Totals:         2       8       0       0       0
  6442 ;;Total ram usage:       10 bytes
  6443 ;; Hardware stack levels used:    1
  6444 ;; Hardware stack levels required when called:    1
  6445 ;; This function calls:
  6446 ;;		Nothing
  6447 ;; This function is called by:
  6448 ;;		_sprintf
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           
  6453                           ;psect for function ___llmod
  6454  1D60                     ___llmod:
  6455  1D60                     l3732:	
  6456                           ;incstack = 0
  6457                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6458                           
  6459  1D60  1283               	bcf	3,5	;RP0=0, select bank0
  6460  1D61  1303               	bcf	3,6	;RP1=0, select bank0
  6461  1D62  0823               	movf	___llmod@divisor+3,w
  6462  1D63  0422               	iorwf	___llmod@divisor+2,w
  6463  1D64  0421               	iorwf	___llmod@divisor+1,w
  6464  1D65  0420               	iorwf	___llmod@divisor,w
  6465  1D66  1903               	skipnz
  6466  1D67  2D69               	goto	u6351
  6467  1D68  2D6A               	goto	u6350
  6468  1D69                     u6351:
  6469  1D69  2DAD               	goto	l3748
  6470  1D6A                     u6350:
  6471  1D6A                     l3734:
  6472  1D6A  01F4               	clrf	___llmod@counter
  6473  1D6B  0AF4               	incf	___llmod@counter,f
  6474  1D6C  2D7A               	goto	l3738
  6475  1D6D                     l3736:
  6476  1D6D  3001               	movlw	1
  6477  1D6E  00F3               	movwf	??___llmod
  6478  1D6F                     u6365:
  6479  1D6F  1003               	clrc
  6480  1D70  0DA0               	rlf	___llmod@divisor,f
  6481  1D71  0DA1               	rlf	___llmod@divisor+1,f
  6482  1D72  0DA2               	rlf	___llmod@divisor+2,f
  6483  1D73  0DA3               	rlf	___llmod@divisor+3,f
  6484  1D74  0BF3               	decfsz	??___llmod,f
  6485  1D75  2D6F               	goto	u6365
  6486  1D76  3001               	movlw	1
  6487  1D77  00F3               	movwf	??___llmod
  6488  1D78  0873               	movf	??___llmod,w
  6489  1D79  07F4               	addwf	___llmod@counter,f
  6490  1D7A                     l3738:
  6491  1D7A  1FA3               	btfss	___llmod@divisor+3,7
  6492  1D7B  2D7D               	goto	u6371
  6493  1D7C  2D7E               	goto	u6370
  6494  1D7D                     u6371:
  6495  1D7D  2D6D               	goto	l3736
  6496  1D7E                     u6370:
  6497  1D7E                     l3740:
  6498  1D7E  0823               	movf	___llmod@divisor+3,w
  6499  1D7F  0227               	subwf	___llmod@dividend+3,w
  6500  1D80  1D03               	skipz
  6501  1D81  2D8C               	goto	u6385
  6502  1D82  0822               	movf	___llmod@divisor+2,w
  6503  1D83  0226               	subwf	___llmod@dividend+2,w
  6504  1D84  1D03               	skipz
  6505  1D85  2D8C               	goto	u6385
  6506  1D86  0821               	movf	___llmod@divisor+1,w
  6507  1D87  0225               	subwf	___llmod@dividend+1,w
  6508  1D88  1D03               	skipz
  6509  1D89  2D8C               	goto	u6385
  6510  1D8A  0820               	movf	___llmod@divisor,w
  6511  1D8B  0224               	subwf	___llmod@dividend,w
  6512  1D8C                     u6385:
  6513  1D8C  1C03               	skipc
  6514  1D8D  2D8F               	goto	u6381
  6515  1D8E  2D90               	goto	u6380
  6516  1D8F                     u6381:
  6517  1D8F  2D9E               	goto	l3744
  6518  1D90                     u6380:
  6519  1D90                     l3742:
  6520  1D90  0820               	movf	___llmod@divisor,w
  6521  1D91  02A4               	subwf	___llmod@dividend,f
  6522  1D92  0821               	movf	___llmod@divisor+1,w
  6523  1D93  1C03               	skipc
  6524  1D94  0F21               	incfsz	___llmod@divisor+1,w
  6525  1D95  02A5               	subwf	___llmod@dividend+1,f
  6526  1D96  0822               	movf	___llmod@divisor+2,w
  6527  1D97  1C03               	skipc
  6528  1D98  0F22               	incfsz	___llmod@divisor+2,w
  6529  1D99  02A6               	subwf	___llmod@dividend+2,f
  6530  1D9A  0823               	movf	___llmod@divisor+3,w
  6531  1D9B  1C03               	skipc
  6532  1D9C  0F23               	incfsz	___llmod@divisor+3,w
  6533  1D9D  02A7               	subwf	___llmod@dividend+3,f
  6534  1D9E                     l3744:
  6535  1D9E  3001               	movlw	1
  6536  1D9F                     u6395:
  6537  1D9F  1003               	clrc
  6538  1DA0  0CA3               	rrf	___llmod@divisor+3,f
  6539  1DA1  0CA2               	rrf	___llmod@divisor+2,f
  6540  1DA2  0CA1               	rrf	___llmod@divisor+1,f
  6541  1DA3  0CA0               	rrf	___llmod@divisor,f
  6542  1DA4  3EFF               	addlw	-1
  6543  1DA5  1D03               	skipz
  6544  1DA6  2D9F               	goto	u6395
  6545  1DA7                     l3746:
  6546  1DA7  3001               	movlw	1
  6547  1DA8  02F4               	subwf	___llmod@counter,f
  6548  1DA9  1D03               	btfss	3,2
  6549  1DAA  2DAC               	goto	u6401
  6550  1DAB  2DAD               	goto	u6400
  6551  1DAC                     u6401:
  6552  1DAC  2D7E               	goto	l3740
  6553  1DAD                     u6400:
  6554  1DAD                     l3748:
  6555  1DAD  0827               	movf	___llmod@dividend+3,w
  6556  1DAE  00A3               	movwf	?___llmod+3
  6557  1DAF  0826               	movf	___llmod@dividend+2,w
  6558  1DB0  00A2               	movwf	?___llmod+2
  6559  1DB1  0825               	movf	___llmod@dividend+1,w
  6560  1DB2  00A1               	movwf	?___llmod+1
  6561  1DB3  0824               	movf	___llmod@dividend,w
  6562  1DB4  00A0               	movwf	?___llmod
  6563  1DB5                     l577:
  6564  1DB5  0008               	return
  6565  1DB6                     __end_of___llmod:
  6566                           
  6567                           	psect	text16
  6568  1E0F                     __ptext16:	
  6569 ;; *************** function ___lldiv *****************
  6570 ;; Defined at:
  6571 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6572 ;; Parameters:    Size  Location     Type
  6573 ;;  divisor         4    0[BANK0 ] unsigned long 
  6574 ;;  dividend        4    4[BANK0 ] unsigned long 
  6575 ;; Auto vars:     Size  Location     Type
  6576 ;;  quotient        4    4[COMMON] unsigned long 
  6577 ;;  counter         1    8[COMMON] unsigned char 
  6578 ;; Return value:  Size  Location     Type
  6579 ;;                  4    0[BANK0 ] unsigned long 
  6580 ;; Registers used:
  6581 ;;		wreg, status,2, status,0
  6582 ;; Tracked objects:
  6583 ;;		On entry : 0/0
  6584 ;;		On exit  : 0/0
  6585 ;;		Unchanged: 0/0
  6586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6587 ;;      Params:         0       8       0       0       0
  6588 ;;      Locals:         5       0       0       0       0
  6589 ;;      Temps:          1       0       0       0       0
  6590 ;;      Totals:         6       8       0       0       0
  6591 ;;Total ram usage:       14 bytes
  6592 ;; Hardware stack levels used:    1
  6593 ;; Hardware stack levels required when called:    1
  6594 ;; This function calls:
  6595 ;;		Nothing
  6596 ;; This function is called by:
  6597 ;;		_sprintf
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           
  6602                           ;psect for function ___lldiv
  6603  1E0F                     ___lldiv:
  6604  1E0F                     l3676:	
  6605                           ;incstack = 0
  6606                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6607                           
  6608  1E0F  3000               	movlw	0
  6609  1E10  00F7               	movwf	___lldiv@quotient+3
  6610  1E11  3000               	movlw	0
  6611  1E12  00F6               	movwf	___lldiv@quotient+2
  6612  1E13  3000               	movlw	0
  6613  1E14  00F5               	movwf	___lldiv@quotient+1
  6614  1E15  3000               	movlw	0
  6615  1E16  00F4               	movwf	___lldiv@quotient
  6616  1E17  1283               	bcf	3,5	;RP0=0, select bank0
  6617  1E18  1303               	bcf	3,6	;RP1=0, select bank0
  6618  1E19  0823               	movf	___lldiv@divisor+3,w
  6619  1E1A  0422               	iorwf	___lldiv@divisor+2,w
  6620  1E1B  0421               	iorwf	___lldiv@divisor+1,w
  6621  1E1C  0420               	iorwf	___lldiv@divisor,w
  6622  1E1D  1903               	skipnz
  6623  1E1E  2E20               	goto	u6181
  6624  1E1F  2E21               	goto	u6180
  6625  1E20                     u6181:
  6626  1E20  2E6E               	goto	l3696
  6627  1E21                     u6180:
  6628  1E21                     l3678:
  6629  1E21  01F8               	clrf	___lldiv@counter
  6630  1E22  0AF8               	incf	___lldiv@counter,f
  6631  1E23  2E31               	goto	l3682
  6632  1E24                     l3680:
  6633  1E24  3001               	movlw	1
  6634  1E25  00F3               	movwf	??___lldiv
  6635  1E26                     u6195:
  6636  1E26  1003               	clrc
  6637  1E27  0DA0               	rlf	___lldiv@divisor,f
  6638  1E28  0DA1               	rlf	___lldiv@divisor+1,f
  6639  1E29  0DA2               	rlf	___lldiv@divisor+2,f
  6640  1E2A  0DA3               	rlf	___lldiv@divisor+3,f
  6641  1E2B  0BF3               	decfsz	??___lldiv,f
  6642  1E2C  2E26               	goto	u6195
  6643  1E2D  3001               	movlw	1
  6644  1E2E  00F3               	movwf	??___lldiv
  6645  1E2F  0873               	movf	??___lldiv,w
  6646  1E30  07F8               	addwf	___lldiv@counter,f
  6647  1E31                     l3682:
  6648  1E31  1FA3               	btfss	___lldiv@divisor+3,7
  6649  1E32  2E34               	goto	u6201
  6650  1E33  2E35               	goto	u6200
  6651  1E34                     u6201:
  6652  1E34  2E24               	goto	l3680
  6653  1E35                     u6200:
  6654  1E35                     l3684:
  6655  1E35  3001               	movlw	1
  6656  1E36  00F3               	movwf	??___lldiv
  6657  1E37                     u6215:
  6658  1E37  1003               	clrc
  6659  1E38  0DF4               	rlf	___lldiv@quotient,f
  6660  1E39  0DF5               	rlf	___lldiv@quotient+1,f
  6661  1E3A  0DF6               	rlf	___lldiv@quotient+2,f
  6662  1E3B  0DF7               	rlf	___lldiv@quotient+3,f
  6663  1E3C  0BF3               	decfsz	??___lldiv,f
  6664  1E3D  2E37               	goto	u6215
  6665  1E3E                     l3686:
  6666  1E3E  0823               	movf	___lldiv@divisor+3,w
  6667  1E3F  0227               	subwf	___lldiv@dividend+3,w
  6668  1E40  1D03               	skipz
  6669  1E41  2E4C               	goto	u6225
  6670  1E42  0822               	movf	___lldiv@divisor+2,w
  6671  1E43  0226               	subwf	___lldiv@dividend+2,w
  6672  1E44  1D03               	skipz
  6673  1E45  2E4C               	goto	u6225
  6674  1E46  0821               	movf	___lldiv@divisor+1,w
  6675  1E47  0225               	subwf	___lldiv@dividend+1,w
  6676  1E48  1D03               	skipz
  6677  1E49  2E4C               	goto	u6225
  6678  1E4A  0820               	movf	___lldiv@divisor,w
  6679  1E4B  0224               	subwf	___lldiv@dividend,w
  6680  1E4C                     u6225:
  6681  1E4C  1C03               	skipc
  6682  1E4D  2E4F               	goto	u6221
  6683  1E4E  2E50               	goto	u6220
  6684  1E4F                     u6221:
  6685  1E4F  2E5F               	goto	l3692
  6686  1E50                     u6220:
  6687  1E50                     l3688:
  6688  1E50  0820               	movf	___lldiv@divisor,w
  6689  1E51  02A4               	subwf	___lldiv@dividend,f
  6690  1E52  0821               	movf	___lldiv@divisor+1,w
  6691  1E53  1C03               	skipc
  6692  1E54  0F21               	incfsz	___lldiv@divisor+1,w
  6693  1E55  02A5               	subwf	___lldiv@dividend+1,f
  6694  1E56  0822               	movf	___lldiv@divisor+2,w
  6695  1E57  1C03               	skipc
  6696  1E58  0F22               	incfsz	___lldiv@divisor+2,w
  6697  1E59  02A6               	subwf	___lldiv@dividend+2,f
  6698  1E5A  0823               	movf	___lldiv@divisor+3,w
  6699  1E5B  1C03               	skipc
  6700  1E5C  0F23               	incfsz	___lldiv@divisor+3,w
  6701  1E5D  02A7               	subwf	___lldiv@dividend+3,f
  6702  1E5E                     l3690:
  6703  1E5E  1474               	bsf	___lldiv@quotient,0
  6704  1E5F                     l3692:
  6705  1E5F  3001               	movlw	1
  6706  1E60                     u6235:
  6707  1E60  1003               	clrc
  6708  1E61  0CA3               	rrf	___lldiv@divisor+3,f
  6709  1E62  0CA2               	rrf	___lldiv@divisor+2,f
  6710  1E63  0CA1               	rrf	___lldiv@divisor+1,f
  6711  1E64  0CA0               	rrf	___lldiv@divisor,f
  6712  1E65  3EFF               	addlw	-1
  6713  1E66  1D03               	skipz
  6714  1E67  2E60               	goto	u6235
  6715  1E68                     l3694:
  6716  1E68  3001               	movlw	1
  6717  1E69  02F8               	subwf	___lldiv@counter,f
  6718  1E6A  1D03               	btfss	3,2
  6719  1E6B  2E6D               	goto	u6241
  6720  1E6C  2E6E               	goto	u6240
  6721  1E6D                     u6241:
  6722  1E6D  2E35               	goto	l3684
  6723  1E6E                     u6240:
  6724  1E6E                     l3696:
  6725  1E6E  0877               	movf	___lldiv@quotient+3,w
  6726  1E6F  00A3               	movwf	?___lldiv+3
  6727  1E70  0876               	movf	___lldiv@quotient+2,w
  6728  1E71  00A2               	movwf	?___lldiv+2
  6729  1E72  0875               	movf	___lldiv@quotient+1,w
  6730  1E73  00A1               	movwf	?___lldiv+1
  6731  1E74  0874               	movf	___lldiv@quotient,w
  6732  1E75  00A0               	movwf	?___lldiv
  6733  1E76                     l357:
  6734  1E76  0008               	return
  6735  1E77                     __end_of___lldiv:
  6736                           
  6737                           	psect	text17
  6738  1EE0                     __ptext17:	
  6739 ;; *************** function ___fltol *****************
  6740 ;; Defined at:
  6741 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;  f1              4   55[BANK0 ] unsigned long 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  exp1            1   65[BANK0 ] unsigned char 
  6746 ;;  sign1           1   64[BANK0 ] unsigned char 
  6747 ;; Return value:  Size  Location     Type
  6748 ;;                  4   55[BANK0 ] long 
  6749 ;; Registers used:
  6750 ;;		wreg, status,2, status,0
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6756 ;;      Params:         0       4       0       0       0
  6757 ;;      Locals:         0       2       0       0       0
  6758 ;;      Temps:          0       5       0       0       0
  6759 ;;      Totals:         0      11       0       0       0
  6760 ;;Total ram usage:       11 bytes
  6761 ;; Hardware stack levels used:    1
  6762 ;; Hardware stack levels required when called:    1
  6763 ;; This function calls:
  6764 ;;		Nothing
  6765 ;; This function is called by:
  6766 ;;		_sprintf
  6767 ;; This function uses a non-reentrant model
  6768 ;;
  6769                           
  6770                           
  6771                           ;psect for function ___fltol
  6772  1EE0                     ___fltol:
  6773  1EE0                     l2934:	
  6774                           ;incstack = 0
  6775                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  6776                           
  6777  1EE0  1003               	clrc
  6778  1EE1  1283               	bcf	3,5	;RP0=0, select bank0
  6779  1EE2  1303               	bcf	3,6	;RP1=0, select bank0
  6780  1EE3  0D59               	rlf	___fltol@f1+2,w
  6781  1EE4  0D5A               	rlf	___fltol@f1+3,w
  6782  1EE5  00DB               	movwf	??___fltol
  6783  1EE6  085B               	movf	??___fltol,w
  6784  1EE7  00E1               	movwf	___fltol@exp1
  6785  1EE8  0861               	movf	___fltol@exp1,w
  6786  1EE9  1D03               	btfss	3,2
  6787  1EEA  2EEC               	goto	u4761
  6788  1EEB  2EED               	goto	u4760
  6789  1EEC                     u4761:
  6790  1EEC  2EF6               	goto	l2940
  6791  1EED                     u4760:
  6792  1EED                     l2936:
  6793  1EED  3000               	movlw	0
  6794  1EEE  00DA               	movwf	?___fltol+3
  6795  1EEF  3000               	movlw	0
  6796  1EF0  00D9               	movwf	?___fltol+2
  6797  1EF1  3000               	movlw	0
  6798  1EF2  00D8               	movwf	?___fltol+1
  6799  1EF3  3000               	movlw	0
  6800  1EF4  00D7               	movwf	?___fltol
  6801  1EF5  2F5B               	goto	l524
  6802  1EF6                     l2940:
  6803  1EF6  0857               	movf	___fltol@f1,w
  6804  1EF7  00DB               	movwf	??___fltol
  6805  1EF8  0858               	movf	___fltol@f1+1,w
  6806  1EF9  00DC               	movwf	??___fltol+1
  6807  1EFA  0859               	movf	___fltol@f1+2,w
  6808  1EFB  00DD               	movwf	??___fltol+2
  6809  1EFC  085A               	movf	___fltol@f1+3,w
  6810  1EFD  00DE               	movwf	??___fltol+3
  6811  1EFE  301F               	movlw	31
  6812  1EFF                     u4775:
  6813  1EFF  1003               	clrc
  6814  1F00  0CDE               	rrf	??___fltol+3,f
  6815  1F01  0CDD               	rrf	??___fltol+2,f
  6816  1F02  0CDC               	rrf	??___fltol+1,f
  6817  1F03  0CDB               	rrf	??___fltol,f
  6818  1F04                     u4770:
  6819  1F04  3EFF               	addlw	-1
  6820  1F05  1D03               	skipz
  6821  1F06  2EFF               	goto	u4775
  6822  1F07  085B               	movf	??___fltol,w
  6823  1F08  00DF               	movwf	??___fltol+4
  6824  1F09  085F               	movf	??___fltol+4,w
  6825  1F0A  00E0               	movwf	___fltol@sign1
  6826  1F0B                     l2942:
  6827  1F0B  17D9               	bsf	___fltol@f1+2,7
  6828  1F0C                     l2944:
  6829  1F0C  30FF               	movlw	255
  6830  1F0D  05D7               	andwf	___fltol@f1,f
  6831  1F0E  30FF               	movlw	255
  6832  1F0F  05D8               	andwf	___fltol@f1+1,f
  6833  1F10  30FF               	movlw	255
  6834  1F11  05D9               	andwf	___fltol@f1+2,f
  6835  1F12  3000               	movlw	0
  6836  1F13  05DA               	andwf	___fltol@f1+3,f
  6837  1F14                     l2946:
  6838  1F14  3096               	movlw	150
  6839  1F15  02E1               	subwf	___fltol@exp1,f
  6840  1F16                     l2948:
  6841  1F16  1FE1               	btfss	___fltol@exp1,7
  6842  1F17  2F19               	goto	u4781
  6843  1F18  2F1A               	goto	u4780
  6844  1F19                     u4781:
  6845  1F19  2F34               	goto	l2958
  6846  1F1A                     u4780:
  6847  1F1A                     l2950:
  6848  1F1A  0861               	movf	___fltol@exp1,w
  6849  1F1B  3A80               	xorlw	128
  6850  1F1C  3E97               	addlw	151
  6851  1F1D  1803               	skipnc
  6852  1F1E  2F20               	goto	u4791
  6853  1F1F  2F21               	goto	u4790
  6854  1F20                     u4791:
  6855  1F20  2F22               	goto	l2956
  6856  1F21                     u4790:
  6857  1F21  2EED               	goto	l2936
  6858  1F22                     l2956:
  6859  1F22  3001               	movlw	1
  6860  1F23                     u4805:
  6861  1F23  1003               	clrc
  6862  1F24  0CDA               	rrf	___fltol@f1+3,f
  6863  1F25  0CD9               	rrf	___fltol@f1+2,f
  6864  1F26  0CD8               	rrf	___fltol@f1+1,f
  6865  1F27  0CD7               	rrf	___fltol@f1,f
  6866  1F28  3EFF               	addlw	-1
  6867  1F29  1D03               	skipz
  6868  1F2A  2F23               	goto	u4805
  6869  1F2B  3001               	movlw	1
  6870  1F2C  00DB               	movwf	??___fltol
  6871  1F2D  085B               	movf	??___fltol,w
  6872  1F2E  07E1               	addwf	___fltol@exp1,f
  6873  1F2F  1D03               	btfss	3,2
  6874  1F30  2F32               	goto	u4811
  6875  1F31  2F33               	goto	u4810
  6876  1F32                     u4811:
  6877  1F32  2F22               	goto	l2956
  6878  1F33                     u4810:
  6879  1F33  2F4B               	goto	l2966
  6880  1F34                     l2958:
  6881  1F34  3020               	movlw	32
  6882  1F35  0261               	subwf	___fltol@exp1,w
  6883  1F36  1C03               	skipc
  6884  1F37  2F39               	goto	u4821
  6885  1F38  2F3A               	goto	u4820
  6886  1F39                     u4821:
  6887  1F39  2F46               	goto	l531
  6888  1F3A                     u4820:
  6889  1F3A  2EED               	goto	l2936
  6890  1F3B                     l2964:
  6891  1F3B  3001               	movlw	1
  6892  1F3C  00DB               	movwf	??___fltol
  6893  1F3D                     u4835:
  6894  1F3D  1003               	clrc
  6895  1F3E  0DD7               	rlf	___fltol@f1,f
  6896  1F3F  0DD8               	rlf	___fltol@f1+1,f
  6897  1F40  0DD9               	rlf	___fltol@f1+2,f
  6898  1F41  0DDA               	rlf	___fltol@f1+3,f
  6899  1F42  0BDB               	decfsz	??___fltol,f
  6900  1F43  2F3D               	goto	u4835
  6901  1F44  3001               	movlw	1
  6902  1F45  02E1               	subwf	___fltol@exp1,f
  6903  1F46                     l531:
  6904  1F46  0861               	movf	___fltol@exp1,w
  6905  1F47  1D03               	btfss	3,2
  6906  1F48  2F4A               	goto	u4841
  6907  1F49  2F4B               	goto	u4840
  6908  1F4A                     u4841:
  6909  1F4A  2F3B               	goto	l2964
  6910  1F4B                     u4840:
  6911  1F4B                     l2966:
  6912  1F4B  0860               	movf	___fltol@sign1,w
  6913  1F4C  1903               	btfsc	3,2
  6914  1F4D  2F4F               	goto	u4851
  6915  1F4E  2F50               	goto	u4850
  6916  1F4F                     u4851:
  6917  1F4F  2F5B               	goto	l534
  6918  1F50                     u4850:
  6919  1F50                     l2968:
  6920  1F50  09D7               	comf	___fltol@f1,f
  6921  1F51  09D8               	comf	___fltol@f1+1,f
  6922  1F52  09D9               	comf	___fltol@f1+2,f
  6923  1F53  09DA               	comf	___fltol@f1+3,f
  6924  1F54  0AD7               	incf	___fltol@f1,f
  6925  1F55  1903               	skipnz
  6926  1F56  0AD8               	incf	___fltol@f1+1,f
  6927  1F57  1903               	skipnz
  6928  1F58  0AD9               	incf	___fltol@f1+2,f
  6929  1F59  1903               	skipnz
  6930  1F5A  0ADA               	incf	___fltol@f1+3,f
  6931  1F5B                     l534:
  6932  1F5B                     l524:
  6933  1F5B  0008               	return
  6934  1F5C                     __end_of___fltol:
  6935                           
  6936                           	psect	text18
  6937  1D10                     __ptext18:	
  6938 ;; *************** function ___flsub *****************
  6939 ;; Defined at:
  6940 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  6941 ;; Parameters:    Size  Location     Type
  6942 ;;  a               4    0[BANK1 ] long 
  6943 ;;  b               4    4[BANK1 ] long 
  6944 ;; Auto vars:     Size  Location     Type
  6945 ;;		None
  6946 ;; Return value:  Size  Location     Type
  6947 ;;                  4    0[BANK1 ] long 
  6948 ;; Registers used:
  6949 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  6950 ;; Tracked objects:
  6951 ;;		On entry : 0/0
  6952 ;;		On exit  : 0/0
  6953 ;;		Unchanged: 0/0
  6954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6955 ;;      Params:         0       0       8       0       0
  6956 ;;      Locals:         0       0       0       0       0
  6957 ;;      Temps:          0       0       0       0       0
  6958 ;;      Totals:         0       0       8       0       0
  6959 ;;Total ram usage:        8 bytes
  6960 ;; Hardware stack levels used:    1
  6961 ;; Hardware stack levels required when called:    2
  6962 ;; This function calls:
  6963 ;;		___fladd
  6964 ;; This function is called by:
  6965 ;;		_sprintf
  6966 ;; This function uses a non-reentrant model
  6967 ;;
  6968                           
  6969                           
  6970                           ;psect for function ___flsub
  6971  1D10                     ___flsub:
  6972  1D10                     l2990:	
  6973                           ;incstack = 0
  6974                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  6975                           
  6976  1D10  3080               	movlw	128
  6977  1D11  1683               	bsf	3,5	;RP0=1, select bank1
  6978  1D12  1303               	bcf	3,6	;RP1=0, select bank1
  6979  1D13  06A3               	xorwf	(___flsub@a+3)^(0+128),f
  6980  1D14                     l2992:
  6981  1D14  0827               	movf	(___flsub@b+3)^(0+128),w
  6982  1D15  1283               	bcf	3,5	;RP0=0, select bank0
  6983  1D16  1303               	bcf	3,6	;RP1=0, select bank0
  6984  1D17  00DB               	movwf	___fladd@b+3
  6985  1D18  1683               	bsf	3,5	;RP0=1, select bank1
  6986  1D19  1303               	bcf	3,6	;RP1=0, select bank1
  6987  1D1A  0826               	movf	(___flsub@b+2)^(0+128),w
  6988  1D1B  1283               	bcf	3,5	;RP0=0, select bank0
  6989  1D1C  1303               	bcf	3,6	;RP1=0, select bank0
  6990  1D1D  00DA               	movwf	___fladd@b+2
  6991  1D1E  1683               	bsf	3,5	;RP0=1, select bank1
  6992  1D1F  1303               	bcf	3,6	;RP1=0, select bank1
  6993  1D20  0825               	movf	(___flsub@b+1)^(0+128),w
  6994  1D21  1283               	bcf	3,5	;RP0=0, select bank0
  6995  1D22  1303               	bcf	3,6	;RP1=0, select bank0
  6996  1D23  00D9               	movwf	___fladd@b+1
  6997  1D24  1683               	bsf	3,5	;RP0=1, select bank1
  6998  1D25  1303               	bcf	3,6	;RP1=0, select bank1
  6999  1D26  0824               	movf	___flsub@b^(0+128),w
  7000  1D27  1283               	bcf	3,5	;RP0=0, select bank0
  7001  1D28  1303               	bcf	3,6	;RP1=0, select bank0
  7002  1D29  00D8               	movwf	___fladd@b
  7003  1D2A  1683               	bsf	3,5	;RP0=1, select bank1
  7004  1D2B  1303               	bcf	3,6	;RP1=0, select bank1
  7005  1D2C  0823               	movf	(___flsub@a+3)^(0+128),w
  7006  1D2D  1283               	bcf	3,5	;RP0=0, select bank0
  7007  1D2E  1303               	bcf	3,6	;RP1=0, select bank0
  7008  1D2F  00DF               	movwf	___fladd@a+3
  7009  1D30  1683               	bsf	3,5	;RP0=1, select bank1
  7010  1D31  1303               	bcf	3,6	;RP1=0, select bank1
  7011  1D32  0822               	movf	(___flsub@a+2)^(0+128),w
  7012  1D33  1283               	bcf	3,5	;RP0=0, select bank0
  7013  1D34  1303               	bcf	3,6	;RP1=0, select bank0
  7014  1D35  00DE               	movwf	___fladd@a+2
  7015  1D36  1683               	bsf	3,5	;RP0=1, select bank1
  7016  1D37  1303               	bcf	3,6	;RP1=0, select bank1
  7017  1D38  0821               	movf	(___flsub@a+1)^(0+128),w
  7018  1D39  1283               	bcf	3,5	;RP0=0, select bank0
  7019  1D3A  1303               	bcf	3,6	;RP1=0, select bank0
  7020  1D3B  00DD               	movwf	___fladd@a+1
  7021  1D3C  1683               	bsf	3,5	;RP0=1, select bank1
  7022  1D3D  1303               	bcf	3,6	;RP1=0, select bank1
  7023  1D3E  0820               	movf	___flsub@a^(0+128),w
  7024  1D3F  1283               	bcf	3,5	;RP0=0, select bank0
  7025  1D40  1303               	bcf	3,6	;RP1=0, select bank0
  7026  1D41  00DC               	movwf	___fladd@a
  7027  1D42  160A  118A  2274  160A  158A  	fcall	___fladd
  7028  1D47  1283               	bcf	3,5	;RP0=0, select bank0
  7029  1D48  1303               	bcf	3,6	;RP1=0, select bank0
  7030  1D49  085B               	movf	?___fladd+3,w
  7031  1D4A  1683               	bsf	3,5	;RP0=1, select bank1
  7032  1D4B  1303               	bcf	3,6	;RP1=0, select bank1
  7033  1D4C  00A3               	movwf	(?___flsub+3)^(0+128)
  7034  1D4D  1283               	bcf	3,5	;RP0=0, select bank0
  7035  1D4E  1303               	bcf	3,6	;RP1=0, select bank0
  7036  1D4F  085A               	movf	?___fladd+2,w
  7037  1D50  1683               	bsf	3,5	;RP0=1, select bank1
  7038  1D51  1303               	bcf	3,6	;RP1=0, select bank1
  7039  1D52  00A2               	movwf	(?___flsub+2)^(0+128)
  7040  1D53  1283               	bcf	3,5	;RP0=0, select bank0
  7041  1D54  1303               	bcf	3,6	;RP1=0, select bank0
  7042  1D55  0859               	movf	?___fladd+1,w
  7043  1D56  1683               	bsf	3,5	;RP0=1, select bank1
  7044  1D57  1303               	bcf	3,6	;RP1=0, select bank1
  7045  1D58  00A1               	movwf	(?___flsub+1)^(0+128)
  7046  1D59  1283               	bcf	3,5	;RP0=0, select bank0
  7047  1D5A  1303               	bcf	3,6	;RP1=0, select bank0
  7048  1D5B  0858               	movf	?___fladd,w
  7049  1D5C  1683               	bsf	3,5	;RP0=1, select bank1
  7050  1D5D  1303               	bcf	3,6	;RP1=0, select bank1
  7051  1D5E  00A0               	movwf	?___flsub^(0+128)
  7052  1D5F                     l694:
  7053  1D5F  0008               	return
  7054  1D60                     __end_of___flsub:
  7055                           
  7056                           	psect	text19
  7057  1274                     __ptext19:	
  7058 ;; *************** function ___fladd *****************
  7059 ;; Defined at:
  7060 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7061 ;; Parameters:    Size  Location     Type
  7062 ;;  b               4   56[BANK0 ] long 
  7063 ;;  a               4   60[BANK0 ] long 
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;  grs             1   75[BANK0 ] unsigned char 
  7066 ;;  bexp            1   74[BANK0 ] unsigned char 
  7067 ;;  aexp            1   73[BANK0 ] unsigned char 
  7068 ;;  signs           1   72[BANK0 ] unsigned char 
  7069 ;; Return value:  Size  Location     Type
  7070 ;;                  4   56[BANK0 ] unsigned char 
  7071 ;; Registers used:
  7072 ;;		wreg, status,2, status,0, btemp+1
  7073 ;; Tracked objects:
  7074 ;;		On entry : 0/0
  7075 ;;		On exit  : 0/0
  7076 ;;		Unchanged: 0/0
  7077 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7078 ;;      Params:         0       8       0       0       0
  7079 ;;      Locals:         0       4       0       0       0
  7080 ;;      Temps:          0       8       0       0       0
  7081 ;;      Totals:         0      20       0       0       0
  7082 ;;Total ram usage:       20 bytes
  7083 ;; Hardware stack levels used:    1
  7084 ;; Hardware stack levels required when called:    1
  7085 ;; This function calls:
  7086 ;;		Nothing
  7087 ;; This function is called by:
  7088 ;;		_sprintf
  7089 ;;		___flsub
  7090 ;; This function uses a non-reentrant model
  7091 ;;
  7092                           
  7093                           
  7094                           ;psect for function ___fladd
  7095  1274                     ___fladd:
  7096  1274                     l2324:	
  7097                           ;incstack = 0
  7098                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7099                           
  7100  1274  1283               	bcf	3,5	;RP0=0, select bank0
  7101  1275  1303               	bcf	3,6	;RP1=0, select bank0
  7102  1276  085B               	movf	___fladd@b+3,w
  7103  1277  3980               	andlw	128
  7104  1278  00E0               	movwf	??___fladd
  7105  1279  0860               	movf	??___fladd,w
  7106  127A  00E8               	movwf	___fladd@signs
  7107  127B                     l2326:
  7108  127B  085B               	movf	___fladd@b+3,w
  7109  127C  00E0               	movwf	??___fladd
  7110  127D  0760               	addwf	??___fladd,w
  7111  127E  00E1               	movwf	??___fladd+1
  7112  127F  0861               	movf	??___fladd+1,w
  7113  1280  00EA               	movwf	___fladd@bexp
  7114  1281                     l2328:
  7115  1281  1FDA               	btfss	___fladd@b+2,7
  7116  1282  2A84               	goto	u3181
  7117  1283  2A85               	goto	u3180
  7118  1284                     u3181:
  7119  1284  2A86               	goto	l2332
  7120  1285                     u3180:
  7121  1285                     l2330:
  7122  1285  146A               	bsf	___fladd@bexp,0
  7123  1286                     l2332:
  7124  1286  086A               	movf	___fladd@bexp,w
  7125  1287  1903               	btfsc	3,2
  7126  1288  2A8A               	goto	u3191
  7127  1289  2A8B               	goto	u3190
  7128  128A                     u3191:
  7129  128A  2A9B               	goto	l2342
  7130  128B                     u3190:
  7131  128B                     l2334:
  7132  128B  0A6A               	incf	___fladd@bexp,w
  7133  128C  1D03               	btfss	3,2
  7134  128D  2A8F               	goto	u3201
  7135  128E  2A90               	goto	u3200
  7136  128F                     u3201:
  7137  128F  2A98               	goto	l2338
  7138  1290                     u3200:
  7139  1290                     l2336:
  7140  1290  3000               	movlw	0
  7141  1291  00DB               	movwf	___fladd@b+3
  7142  1292  3000               	movlw	0
  7143  1293  00DA               	movwf	___fladd@b+2
  7144  1294  3000               	movlw	0
  7145  1295  00D9               	movwf	___fladd@b+1
  7146  1296  3000               	movlw	0
  7147  1297  00D8               	movwf	___fladd@b
  7148  1298                     l2338:
  7149  1298  17DA               	bsf	___fladd@b+2,7
  7150  1299                     l2340:
  7151  1299  01DB               	clrf	___fladd@b+3
  7152  129A  2AA3               	goto	l2344
  7153  129B                     l2342:
  7154  129B  3000               	movlw	0
  7155  129C  00DB               	movwf	___fladd@b+3
  7156  129D  3000               	movlw	0
  7157  129E  00DA               	movwf	___fladd@b+2
  7158  129F  3000               	movlw	0
  7159  12A0  00D9               	movwf	___fladd@b+1
  7160  12A1  3000               	movlw	0
  7161  12A2  00D8               	movwf	___fladd@b
  7162  12A3                     l2344:
  7163  12A3  085F               	movf	___fladd@a+3,w
  7164  12A4  3980               	andlw	128
  7165  12A5  00E0               	movwf	??___fladd
  7166  12A6  0860               	movf	??___fladd,w
  7167  12A7  00E9               	movwf	___fladd@aexp
  7168  12A8                     l2346:
  7169  12A8  0869               	movf	___fladd@aexp,w
  7170  12A9  0668               	xorwf	___fladd@signs,w
  7171  12AA  1903               	skipnz
  7172  12AB  2AAD               	goto	u3211
  7173  12AC  2AAE               	goto	u3210
  7174  12AD                     u3211:
  7175  12AD  2AAF               	goto	l2350
  7176  12AE                     u3210:
  7177  12AE                     l2348:
  7178  12AE  1768               	bsf	___fladd@signs,6
  7179  12AF                     l2350:
  7180  12AF  085F               	movf	___fladd@a+3,w
  7181  12B0  00E0               	movwf	??___fladd
  7182  12B1  0760               	addwf	??___fladd,w
  7183  12B2  00E1               	movwf	??___fladd+1
  7184  12B3  0861               	movf	??___fladd+1,w
  7185  12B4  00E9               	movwf	___fladd@aexp
  7186  12B5                     l2352:
  7187  12B5  1FDE               	btfss	___fladd@a+2,7
  7188  12B6  2AB8               	goto	u3221
  7189  12B7  2AB9               	goto	u3220
  7190  12B8                     u3221:
  7191  12B8  2ABA               	goto	l2356
  7192  12B9                     u3220:
  7193  12B9                     l2354:
  7194  12B9  1469               	bsf	___fladd@aexp,0
  7195  12BA                     l2356:
  7196  12BA  0869               	movf	___fladd@aexp,w
  7197  12BB  1903               	btfsc	3,2
  7198  12BC  2ABE               	goto	u3231
  7199  12BD  2ABF               	goto	u3230
  7200  12BE                     u3231:
  7201  12BE  2ACF               	goto	l2366
  7202  12BF                     u3230:
  7203  12BF                     l2358:
  7204  12BF  0A69               	incf	___fladd@aexp,w
  7205  12C0  1D03               	btfss	3,2
  7206  12C1  2AC3               	goto	u3241
  7207  12C2  2AC4               	goto	u3240
  7208  12C3                     u3241:
  7209  12C3  2ACC               	goto	l2362
  7210  12C4                     u3240:
  7211  12C4                     l2360:
  7212  12C4  3000               	movlw	0
  7213  12C5  00DF               	movwf	___fladd@a+3
  7214  12C6  3000               	movlw	0
  7215  12C7  00DE               	movwf	___fladd@a+2
  7216  12C8  3000               	movlw	0
  7217  12C9  00DD               	movwf	___fladd@a+1
  7218  12CA  3000               	movlw	0
  7219  12CB  00DC               	movwf	___fladd@a
  7220  12CC                     l2362:
  7221  12CC  17DE               	bsf	___fladd@a+2,7
  7222  12CD                     l2364:
  7223  12CD  01DF               	clrf	___fladd@a+3
  7224  12CE  2AD7               	goto	l648
  7225  12CF                     l2366:
  7226  12CF  3000               	movlw	0
  7227  12D0  00DF               	movwf	___fladd@a+3
  7228  12D1  3000               	movlw	0
  7229  12D2  00DE               	movwf	___fladd@a+2
  7230  12D3  3000               	movlw	0
  7231  12D4  00DD               	movwf	___fladd@a+1
  7232  12D5  3000               	movlw	0
  7233  12D6  00DC               	movwf	___fladd@a
  7234  12D7                     l648:
  7235  12D7  086A               	movf	___fladd@bexp,w
  7236  12D8  0269               	subwf	___fladd@aexp,w
  7237  12D9  1803               	skipnc
  7238  12DA  2ADC               	goto	u3251
  7239  12DB  2ADD               	goto	u3250
  7240  12DC                     u3251:
  7241  12DC  2B21               	goto	l2402
  7242  12DD                     u3250:
  7243  12DD                     l2368:
  7244  12DD  1F68               	btfss	___fladd@signs,6
  7245  12DE  2AE0               	goto	u3261
  7246  12DF  2AE1               	goto	u3260
  7247  12E0                     u3261:
  7248  12E0  2AE5               	goto	l2372
  7249  12E1                     u3260:
  7250  12E1                     l2370:
  7251  12E1  3080               	movlw	128
  7252  12E2  00E0               	movwf	??___fladd
  7253  12E3  0860               	movf	??___fladd,w
  7254  12E4  06E8               	xorwf	___fladd@signs,f
  7255  12E5                     l2372:
  7256  12E5  086A               	movf	___fladd@bexp,w
  7257  12E6  00E0               	movwf	??___fladd
  7258  12E7  0860               	movf	??___fladd,w
  7259  12E8  00EB               	movwf	___fladd@grs
  7260  12E9                     l2374:
  7261  12E9  0869               	movf	___fladd@aexp,w
  7262  12EA  00E0               	movwf	??___fladd
  7263  12EB  0860               	movf	??___fladd,w
  7264  12EC  00EA               	movwf	___fladd@bexp
  7265  12ED                     l2376:
  7266  12ED  086B               	movf	___fladd@grs,w
  7267  12EE  00E0               	movwf	??___fladd
  7268  12EF  0860               	movf	??___fladd,w
  7269  12F0  00E9               	movwf	___fladd@aexp
  7270  12F1                     l2378:
  7271  12F1  0858               	movf	___fladd@b,w
  7272  12F2  00E0               	movwf	??___fladd
  7273  12F3  0860               	movf	??___fladd,w
  7274  12F4  00EB               	movwf	___fladd@grs
  7275  12F5                     l2380:
  7276  12F5  085C               	movf	___fladd@a,w
  7277  12F6  00E0               	movwf	??___fladd
  7278  12F7  0860               	movf	??___fladd,w
  7279  12F8  00D8               	movwf	___fladd@b
  7280  12F9                     l2382:
  7281  12F9  086B               	movf	___fladd@grs,w
  7282  12FA  00E0               	movwf	??___fladd
  7283  12FB  0860               	movf	??___fladd,w
  7284  12FC  00DC               	movwf	___fladd@a
  7285  12FD                     l2384:
  7286  12FD  0859               	movf	___fladd@b+1,w
  7287  12FE  00E0               	movwf	??___fladd
  7288  12FF  0860               	movf	??___fladd,w
  7289  1300  00EB               	movwf	___fladd@grs
  7290  1301                     l2386:
  7291  1301  085D               	movf	___fladd@a+1,w
  7292  1302  00E0               	movwf	??___fladd
  7293  1303  0860               	movf	??___fladd,w
  7294  1304  00D9               	movwf	___fladd@b+1
  7295  1305                     l2388:
  7296  1305  086B               	movf	___fladd@grs,w
  7297  1306  00E0               	movwf	??___fladd
  7298  1307  0860               	movf	??___fladd,w
  7299  1308  00DD               	movwf	___fladd@a+1
  7300  1309                     l2390:
  7301  1309  085A               	movf	___fladd@b+2,w
  7302  130A  00E0               	movwf	??___fladd
  7303  130B  0860               	movf	??___fladd,w
  7304  130C  00EB               	movwf	___fladd@grs
  7305  130D                     l2392:
  7306  130D  085E               	movf	___fladd@a+2,w
  7307  130E  00E0               	movwf	??___fladd
  7308  130F  0860               	movf	??___fladd,w
  7309  1310  00DA               	movwf	___fladd@b+2
  7310  1311                     l2394:
  7311  1311  086B               	movf	___fladd@grs,w
  7312  1312  00E0               	movwf	??___fladd
  7313  1313  0860               	movf	??___fladd,w
  7314  1314  00DE               	movwf	___fladd@a+2
  7315  1315                     l2396:
  7316  1315  085B               	movf	___fladd@b+3,w
  7317  1316  00E0               	movwf	??___fladd
  7318  1317  0860               	movf	??___fladd,w
  7319  1318  00EB               	movwf	___fladd@grs
  7320  1319                     l2398:
  7321  1319  085F               	movf	___fladd@a+3,w
  7322  131A  00E0               	movwf	??___fladd
  7323  131B  0860               	movf	??___fladd,w
  7324  131C  00DB               	movwf	___fladd@b+3
  7325  131D                     l2400:
  7326  131D  086B               	movf	___fladd@grs,w
  7327  131E  00E0               	movwf	??___fladd
  7328  131F  0860               	movf	??___fladd,w
  7329  1320  00DF               	movwf	___fladd@a+3
  7330  1321                     l2402:
  7331  1321  01EB               	clrf	___fladd@grs
  7332  1322                     l2404:
  7333  1322  0869               	movf	___fladd@aexp,w
  7334  1323  00E0               	movwf	??___fladd
  7335  1324  01E1               	clrf	??___fladd+1
  7336  1325  0861               	movf	??___fladd+1,w
  7337  1326  00E3               	movwf	??___fladd+3
  7338  1327  086A               	movf	___fladd@bexp,w
  7339  1328  0260               	subwf	??___fladd,w
  7340  1329  00E2               	movwf	??___fladd+2
  7341  132A  1C03               	skipc
  7342  132B  03E3               	decf	??___fladd+3,f
  7343  132C  0863               	movf	??___fladd+3,w
  7344  132D  3A80               	xorlw	128
  7345  132E  00FF               	movwf	btemp+1
  7346  132F  3080               	movlw	128
  7347  1330  027F               	subwf	btemp+1,w
  7348  1331  1D03               	skipz
  7349  1332  2B35               	goto	u3275
  7350  1333  301A               	movlw	26
  7351  1334  0262               	subwf	??___fladd+2,w
  7352  1335                     u3275:
  7353  1335  1C03               	skipc
  7354  1336  2B38               	goto	u3271
  7355  1337  2B39               	goto	u3270
  7356  1338                     u3271:
  7357  1338  2B76               	goto	l2420
  7358  1339                     u3270:
  7359  1339                     l2406:
  7360  1339  1283               	bcf	3,5	;RP0=0, select bank0
  7361  133A  1303               	bcf	3,6	;RP1=0, select bank0
  7362  133B  085B               	movf	___fladd@b+3,w
  7363  133C  045A               	iorwf	___fladd@b+2,w
  7364  133D  0459               	iorwf	___fladd@b+1,w
  7365  133E  0458               	iorwf	___fladd@b,w
  7366  133F  1D03               	skipz
  7367  1340  2B42               	goto	u3281
  7368  1341  2B44               	goto	u3280
  7369  1342                     u3281:
  7370  1342  3001               	movlw	1
  7371  1343  2B45               	goto	u3290
  7372  1344                     u3280:
  7373  1344  3000               	movlw	0
  7374  1345                     u3290:
  7375  1345  00E0               	movwf	??___fladd
  7376  1346  0860               	movf	??___fladd,w
  7377  1347  00EB               	movwf	___fladd@grs
  7378  1348  3000               	movlw	0
  7379  1349  00DB               	movwf	___fladd@b+3
  7380  134A  3000               	movlw	0
  7381  134B  00DA               	movwf	___fladd@b+2
  7382  134C  3000               	movlw	0
  7383  134D  00D9               	movwf	___fladd@b+1
  7384  134E  3000               	movlw	0
  7385  134F  00D8               	movwf	___fladd@b
  7386  1350  0869               	movf	___fladd@aexp,w
  7387  1351  00E0               	movwf	??___fladd
  7388  1352  0860               	movf	??___fladd,w
  7389  1353  00EA               	movwf	___fladd@bexp
  7390  1354  2B7E               	goto	l652
  7391  1355                     l654:
  7392  1355  1C6B               	btfss	___fladd@grs,0
  7393  1356  2B58               	goto	u3301
  7394  1357  2B59               	goto	u3300
  7395  1358                     u3301:
  7396  1358  2B62               	goto	l2410
  7397  1359                     u3300:
  7398  1359                     l2408:
  7399  1359  086B               	movf	___fladd@grs,w
  7400  135A  00E0               	movwf	??___fladd
  7401  135B  1003               	clrc
  7402  135C  0C60               	rrf	??___fladd,w
  7403  135D  3801               	iorlw	1
  7404  135E  00E1               	movwf	??___fladd+1
  7405  135F  0861               	movf	??___fladd+1,w
  7406  1360  00EB               	movwf	___fladd@grs
  7407  1361  2B64               	goto	l2412
  7408  1362                     l2410:
  7409  1362  1003               	clrc
  7410  1363  0CEB               	rrf	___fladd@grs,f
  7411  1364                     l2412:
  7412  1364  1C58               	btfss	___fladd@b,0
  7413  1365  2B67               	goto	u3311
  7414  1366  2B68               	goto	u3310
  7415  1367                     u3311:
  7416  1367  2B69               	goto	l2416
  7417  1368                     u3310:
  7418  1368                     l2414:
  7419  1368  17EB               	bsf	___fladd@grs,7
  7420  1369                     l2416:
  7421  1369  3001               	movlw	1
  7422  136A  00E0               	movwf	??___fladd
  7423  136B                     u3325:
  7424  136B  0D5B               	rlf	___fladd@b+3,w
  7425  136C  0CDB               	rrf	___fladd@b+3,f
  7426  136D  0CDA               	rrf	___fladd@b+2,f
  7427  136E  0CD9               	rrf	___fladd@b+1,f
  7428  136F  0CD8               	rrf	___fladd@b,f
  7429  1370  0BE0               	decfsz	??___fladd& (0+127),f
  7430  1371  2B6B               	goto	u3325
  7431  1372                     l2418:
  7432  1372  3001               	movlw	1
  7433  1373  00E0               	movwf	??___fladd
  7434  1374  0860               	movf	??___fladd,w
  7435  1375  07EA               	addwf	___fladd@bexp,f
  7436  1376                     l2420:
  7437  1376  1283               	bcf	3,5	;RP0=0, select bank0
  7438  1377  1303               	bcf	3,6	;RP1=0, select bank0
  7439  1378  0869               	movf	___fladd@aexp,w
  7440  1379  026A               	subwf	___fladd@bexp,w
  7441  137A  1C03               	skipc
  7442  137B  2B7D               	goto	u3331
  7443  137C  2B7E               	goto	u3330
  7444  137D                     u3331:
  7445  137D  2B55               	goto	l654
  7446  137E                     u3330:
  7447  137E                     l652:
  7448  137E  1B68               	btfsc	___fladd@signs,6
  7449  137F  2B81               	goto	u3341
  7450  1380  2B82               	goto	u3340
  7451  1381                     u3341:
  7452  1381  2BCD               	goto	l2446
  7453  1382                     u3340:
  7454  1382                     l2422:
  7455  1382  086A               	movf	___fladd@bexp,w
  7456  1383  1D03               	btfss	3,2
  7457  1384  2B86               	goto	u3351
  7458  1385  2B87               	goto	u3350
  7459  1386                     u3351:
  7460  1386  2B90               	goto	l2428
  7461  1387                     u3350:
  7462  1387                     l2424:
  7463  1387  3000               	movlw	0
  7464  1388  00DB               	movwf	?___fladd+3
  7465  1389  3000               	movlw	0
  7466  138A  00DA               	movwf	?___fladd+2
  7467  138B  3000               	movlw	0
  7468  138C  00D9               	movwf	?___fladd+1
  7469  138D  3000               	movlw	0
  7470  138E  00D8               	movwf	?___fladd
  7471  138F  2CFB               	goto	l661
  7472  1390                     l2428:
  7473  1390  085C               	movf	___fladd@a,w
  7474  1391  07D8               	addwf	___fladd@b,f
  7475  1392  085D               	movf	___fladd@a+1,w
  7476  1393  1103               	clrz
  7477  1394  1803               	skipnc
  7478  1395  3E01               	addlw	1
  7479  1396  1903               	skipnz
  7480  1397  2B99               	goto	u3361
  7481  1398  07D9               	addwf	___fladd@b+1,f
  7482  1399                     u3361:
  7483  1399  085E               	movf	___fladd@a+2,w
  7484  139A  1103               	clrz
  7485  139B  1803               	skipnc
  7486  139C  3E01               	addlw	1
  7487  139D  1903               	skipnz
  7488  139E  2BA0               	goto	u3362
  7489  139F  07DA               	addwf	___fladd@b+2,f
  7490  13A0                     u3362:
  7491  13A0  085F               	movf	___fladd@a+3,w
  7492  13A1  1103               	clrz
  7493  13A2  1803               	skipnc
  7494  13A3  3E01               	addlw	1
  7495  13A4  1903               	skipnz
  7496  13A5  2BA7               	goto	u3363
  7497  13A6  07DB               	addwf	___fladd@b+3,f
  7498  13A7                     u3363:
  7499  13A7                     l2430:
  7500  13A7  1C5B               	btfss	___fladd@b+3,0
  7501  13A8  2BAA               	goto	u3371
  7502  13A9  2BAB               	goto	u3370
  7503  13AA                     u3371:
  7504  13AA  2C81               	goto	l2480
  7505  13AB                     u3370:
  7506  13AB                     l2432:
  7507  13AB  1C6B               	btfss	___fladd@grs,0
  7508  13AC  2BAE               	goto	u3381
  7509  13AD  2BAF               	goto	u3380
  7510  13AE                     u3381:
  7511  13AE  2BB8               	goto	l2436
  7512  13AF                     u3380:
  7513  13AF                     l2434:
  7514  13AF  086B               	movf	___fladd@grs,w
  7515  13B0  00E0               	movwf	??___fladd
  7516  13B1  1003               	clrc
  7517  13B2  0C60               	rrf	??___fladd,w
  7518  13B3  3801               	iorlw	1
  7519  13B4  00E1               	movwf	??___fladd+1
  7520  13B5  0861               	movf	??___fladd+1,w
  7521  13B6  00EB               	movwf	___fladd@grs
  7522  13B7  2BBA               	goto	l2438
  7523  13B8                     l2436:
  7524  13B8  1003               	clrc
  7525  13B9  0CEB               	rrf	___fladd@grs,f
  7526  13BA                     l2438:
  7527  13BA  1C58               	btfss	___fladd@b,0
  7528  13BB  2BBD               	goto	u3391
  7529  13BC  2BBE               	goto	u3390
  7530  13BD                     u3391:
  7531  13BD  2BBF               	goto	l2442
  7532  13BE                     u3390:
  7533  13BE                     l2440:
  7534  13BE  17EB               	bsf	___fladd@grs,7
  7535  13BF                     l2442:
  7536  13BF  3001               	movlw	1
  7537  13C0  00E0               	movwf	??___fladd
  7538  13C1                     u3405:
  7539  13C1  0D5B               	rlf	___fladd@b+3,w
  7540  13C2  0CDB               	rrf	___fladd@b+3,f
  7541  13C3  0CDA               	rrf	___fladd@b+2,f
  7542  13C4  0CD9               	rrf	___fladd@b+1,f
  7543  13C5  0CD8               	rrf	___fladd@b,f
  7544  13C6  0BE0               	decfsz	??___fladd& (0+127),f
  7545  13C7  2BC1               	goto	u3405
  7546  13C8                     l2444:
  7547  13C8  3001               	movlw	1
  7548  13C9  00E0               	movwf	??___fladd
  7549  13CA  0860               	movf	??___fladd,w
  7550  13CB  07EA               	addwf	___fladd@bexp,f
  7551  13CC  2C81               	goto	l2480
  7552  13CD                     l2446:
  7553  13CD  085B               	movf	___fladd@b+3,w
  7554  13CE  3A80               	xorlw	128
  7555  13CF  00FF               	movwf	btemp+1
  7556  13D0  085F               	movf	___fladd@a+3,w
  7557  13D1  3A80               	xorlw	128
  7558  13D2  027F               	subwf	btemp+1,w
  7559  13D3  1D03               	skipz
  7560  13D4  2BDF               	goto	u3413
  7561  13D5  085E               	movf	___fladd@a+2,w
  7562  13D6  025A               	subwf	___fladd@b+2,w
  7563  13D7  1D03               	skipz
  7564  13D8  2BDF               	goto	u3413
  7565  13D9  085D               	movf	___fladd@a+1,w
  7566  13DA  0259               	subwf	___fladd@b+1,w
  7567  13DB  1D03               	skipz
  7568  13DC  2BDF               	goto	u3413
  7569  13DD  085C               	movf	___fladd@a,w
  7570  13DE  0258               	subwf	___fladd@b,w
  7571  13DF                     u3413:
  7572  13DF  1803               	skipnc
  7573  13E0  2BE2               	goto	u3411
  7574  13E1  2BE3               	goto	u3410
  7575  13E2                     u3411:
  7576  13E2  2C3B               	goto	l2456
  7577  13E3                     u3410:
  7578  13E3                     l2448:
  7579  13E3  30FF               	movlw	255
  7580  13E4  00E0               	movwf	??___fladd
  7581  13E5  30FF               	movlw	255
  7582  13E6  00E1               	movwf	??___fladd+1
  7583  13E7  30FF               	movlw	255
  7584  13E8  00E2               	movwf	??___fladd+2
  7585  13E9  30FF               	movlw	255
  7586  13EA  00E3               	movwf	??___fladd+3
  7587  13EB  085C               	movf	___fladd@a,w
  7588  13EC  00E4               	movwf	??___fladd+4
  7589  13ED  085D               	movf	___fladd@a+1,w
  7590  13EE  00E5               	movwf	??___fladd+5
  7591  13EF  085E               	movf	___fladd@a+2,w
  7592  13F0  00E6               	movwf	??___fladd+6
  7593  13F1  085F               	movf	___fladd@a+3,w
  7594  13F2  00E7               	movwf	??___fladd+7
  7595  13F3  0858               	movf	___fladd@b,w
  7596  13F4  02E4               	subwf	??___fladd+4,f
  7597  13F5  0859               	movf	___fladd@b+1,w
  7598  13F6  1C03               	skipc
  7599  13F7  0F59               	incfsz	___fladd@b+1,w
  7600  13F8  2BFA               	goto	u3421
  7601  13F9  2BFB               	goto	u3422
  7602  13FA                     u3421:
  7603  13FA  02E5               	subwf	??___fladd+5,f
  7604  13FB                     u3422:
  7605  13FB  085A               	movf	___fladd@b+2,w
  7606  13FC  1C03               	skipc
  7607  13FD  0F5A               	incfsz	___fladd@b+2,w
  7608  13FE  2C00               	goto	u3423
  7609  13FF  2C01               	goto	u3424
  7610  1400                     u3423:
  7611  1400  02E6               	subwf	??___fladd+6,f
  7612  1401                     u3424:
  7613  1401  085B               	movf	___fladd@b+3,w
  7614  1402  1C03               	skipc
  7615  1403  0F5B               	incfsz	___fladd@b+3,w
  7616  1404  2C06               	goto	u3425
  7617  1405  2C07               	goto	u3426
  7618  1406                     u3425:
  7619  1406  02E7               	subwf	??___fladd+7,f
  7620  1407                     u3426:
  7621  1407  0864               	movf	??___fladd+4,w
  7622  1408  07E0               	addwf	??___fladd,f
  7623  1409  0865               	movf	??___fladd+5,w
  7624  140A  1803               	skipnc
  7625  140B  0F65               	incfsz	??___fladd+5,w
  7626  140C  2C0E               	goto	u3430
  7627  140D  2C0F               	goto	u3431
  7628  140E                     u3430:
  7629  140E  07E1               	addwf	??___fladd+1,f
  7630  140F                     u3431:
  7631  140F  0866               	movf	??___fladd+6,w
  7632  1410  1803               	skipnc
  7633  1411  0F66               	incfsz	??___fladd+6,w
  7634  1412  2C14               	goto	u3432
  7635  1413  2C15               	goto	u3433
  7636  1414                     u3432:
  7637  1414  07E2               	addwf	??___fladd+2,f
  7638  1415                     u3433:
  7639  1415  0867               	movf	??___fladd+7,w
  7640  1416  1803               	skipnc
  7641  1417  0A67               	incf	??___fladd+7,w
  7642  1418  07E3               	addwf	??___fladd+3,f
  7643  1419  0863               	movf	??___fladd+3,w
  7644  141A  00DB               	movwf	___fladd@b+3
  7645  141B  0862               	movf	??___fladd+2,w
  7646  141C  00DA               	movwf	___fladd@b+2
  7647  141D  0861               	movf	??___fladd+1,w
  7648  141E  00D9               	movwf	___fladd@b+1
  7649  141F  0860               	movf	??___fladd,w
  7650  1420  00D8               	movwf	___fladd@b
  7651  1421                     l2450:
  7652  1421  3080               	movlw	128
  7653  1422  00E0               	movwf	??___fladd
  7654  1423  0860               	movf	??___fladd,w
  7655  1424  06E8               	xorwf	___fladd@signs,f
  7656  1425  09EB               	comf	___fladd@grs,f
  7657  1426  0AEB               	incf	___fladd@grs,f
  7658  1427                     l2452:
  7659  1427  086B               	movf	___fladd@grs,w
  7660  1428  1D03               	btfss	3,2
  7661  1429  2C2B               	goto	u3441
  7662  142A  2C2C               	goto	u3440
  7663  142B                     u3441:
  7664  142B  2C49               	goto	l669
  7665  142C                     u3440:
  7666  142C                     l2454:
  7667  142C  3001               	movlw	1
  7668  142D  07D8               	addwf	___fladd@b,f
  7669  142E  3000               	movlw	0
  7670  142F  1803               	skipnc
  7671  1430  3001               	movlw	1
  7672  1431  07D9               	addwf	___fladd@b+1,f
  7673  1432  3000               	movlw	0
  7674  1433  1803               	skipnc
  7675  1434  3001               	movlw	1
  7676  1435  07DA               	addwf	___fladd@b+2,f
  7677  1436  3000               	movlw	0
  7678  1437  1803               	skipnc
  7679  1438  3001               	movlw	1
  7680  1439  07DB               	addwf	___fladd@b+3,f
  7681  143A  2C49               	goto	l669
  7682  143B                     l2456:
  7683  143B  085C               	movf	___fladd@a,w
  7684  143C  02D8               	subwf	___fladd@b,f
  7685  143D  085D               	movf	___fladd@a+1,w
  7686  143E  1C03               	skipc
  7687  143F  0F5D               	incfsz	___fladd@a+1,w
  7688  1440  02D9               	subwf	___fladd@b+1,f
  7689  1441  085E               	movf	___fladd@a+2,w
  7690  1442  1C03               	skipc
  7691  1443  0F5E               	incfsz	___fladd@a+2,w
  7692  1444  02DA               	subwf	___fladd@b+2,f
  7693  1445  085F               	movf	___fladd@a+3,w
  7694  1446  1C03               	skipc
  7695  1447  0F5F               	incfsz	___fladd@a+3,w
  7696  1448  02DB               	subwf	___fladd@b+3,f
  7697  1449                     l669:
  7698  1449  085B               	movf	___fladd@b+3,w
  7699  144A  045A               	iorwf	___fladd@b+2,w
  7700  144B  0459               	iorwf	___fladd@b+1,w
  7701  144C  0458               	iorwf	___fladd@b,w
  7702  144D  1D03               	skipz
  7703  144E  2C50               	goto	u3451
  7704  144F  2C51               	goto	u3450
  7705  1450                     u3451:
  7706  1450  2C7D               	goto	l2478
  7707  1451                     u3450:
  7708  1451                     l2458:
  7709  1451  086B               	movf	___fladd@grs,w
  7710  1452  1D03               	btfss	3,2
  7711  1453  2C55               	goto	u3461
  7712  1454  2C56               	goto	u3460
  7713  1455                     u3461:
  7714  1455  2C7D               	goto	l2478
  7715  1456                     u3460:
  7716  1456                     l2460:
  7717  1456  3000               	movlw	0
  7718  1457  00DB               	movwf	?___fladd+3
  7719  1458  3000               	movlw	0
  7720  1459  00DA               	movwf	?___fladd+2
  7721  145A  3000               	movlw	0
  7722  145B  00D9               	movwf	?___fladd+1
  7723  145C  3000               	movlw	0
  7724  145D  00D8               	movwf	?___fladd
  7725  145E  2CFB               	goto	l661
  7726  145F                     l2464:
  7727  145F  3001               	movlw	1
  7728  1460  00E0               	movwf	??___fladd
  7729  1461                     u3475:
  7730  1461  1003               	clrc
  7731  1462  0DD8               	rlf	___fladd@b,f
  7732  1463  0DD9               	rlf	___fladd@b+1,f
  7733  1464  0DDA               	rlf	___fladd@b+2,f
  7734  1465  0DDB               	rlf	___fladd@b+3,f
  7735  1466  0BE0               	decfsz	??___fladd,f
  7736  1467  2C61               	goto	u3475
  7737  1468                     l2466:
  7738  1468  1FEB               	btfss	___fladd@grs,7
  7739  1469  2C6B               	goto	u3481
  7740  146A  2C6C               	goto	u3480
  7741  146B                     u3481:
  7742  146B  2C6D               	goto	l673
  7743  146C                     u3480:
  7744  146C                     l2468:
  7745  146C  1458               	bsf	___fladd@b,0
  7746  146D                     l673:
  7747  146D  1C6B               	btfss	___fladd@grs,0
  7748  146E  2C70               	goto	u3491
  7749  146F  2C71               	goto	u3490
  7750  1470                     u3491:
  7751  1470  2C74               	goto	l2472
  7752  1471                     u3490:
  7753  1471                     l2470:
  7754  1471  1403               	setc
  7755  1472  0DEB               	rlf	___fladd@grs,f
  7756  1473  2C76               	goto	l2474
  7757  1474                     l2472:
  7758  1474  1003               	clrc
  7759  1475  0DEB               	rlf	___fladd@grs,f
  7760  1476                     l2474:
  7761  1476  086A               	movf	___fladd@bexp,w
  7762  1477  1903               	btfsc	3,2
  7763  1478  2C7A               	goto	u3501
  7764  1479  2C7B               	goto	u3500
  7765  147A                     u3501:
  7766  147A  2C7D               	goto	l2478
  7767  147B                     u3500:
  7768  147B                     l2476:
  7769  147B  3001               	movlw	1
  7770  147C  02EA               	subwf	___fladd@bexp,f
  7771  147D                     l2478:
  7772  147D  1FDA               	btfss	___fladd@b+2,7
  7773  147E  2C80               	goto	u3511
  7774  147F  2C81               	goto	u3510
  7775  1480                     u3511:
  7776  1480  2C5F               	goto	l2464
  7777  1481                     u3510:
  7778  1481                     l2480:
  7779  1481  01E9               	clrf	___fladd@aexp
  7780  1482                     l2482:
  7781  1482  1FEB               	btfss	___fladd@grs,7
  7782  1483  2C85               	goto	u3521
  7783  1484  2C86               	goto	u3520
  7784  1485                     u3521:
  7785  1485  2C94               	goto	l2490
  7786  1486                     u3520:
  7787  1486                     l2484:
  7788  1486  086B               	movf	___fladd@grs,w
  7789  1487  397F               	andlw	127
  7790  1488  1903               	btfsc	3,2
  7791  1489  2C8B               	goto	u3531
  7792  148A  2C8C               	goto	u3530
  7793  148B                     u3531:
  7794  148B  2C8F               	goto	l679
  7795  148C                     u3530:
  7796  148C                     l2486:
  7797  148C  01E9               	clrf	___fladd@aexp
  7798  148D  0AE9               	incf	___fladd@aexp,f
  7799  148E  2C94               	goto	l2490
  7800  148F                     l679:
  7801  148F  1C58               	btfss	___fladd@b,0
  7802  1490  2C92               	goto	u3541
  7803  1491  2C93               	goto	u3540
  7804  1492                     u3541:
  7805  1492  2C94               	goto	l2490
  7806  1493                     u3540:
  7807  1493  2C8C               	goto	l2486
  7808  1494                     l2490:
  7809  1494  0869               	movf	___fladd@aexp,w
  7810  1495  1903               	btfsc	3,2
  7811  1496  2C98               	goto	u3551
  7812  1497  2C99               	goto	u3550
  7813  1498                     u3551:
  7814  1498  2CCD               	goto	l682
  7815  1499                     u3550:
  7816  1499                     l2492:
  7817  1499  3001               	movlw	1
  7818  149A  07D8               	addwf	___fladd@b,f
  7819  149B  3000               	movlw	0
  7820  149C  1803               	skipnc
  7821  149D  3001               	movlw	1
  7822  149E  07D9               	addwf	___fladd@b+1,f
  7823  149F  3000               	movlw	0
  7824  14A0  1803               	skipnc
  7825  14A1  3001               	movlw	1
  7826  14A2  07DA               	addwf	___fladd@b+2,f
  7827  14A3  3000               	movlw	0
  7828  14A4  1803               	skipnc
  7829  14A5  3001               	movlw	1
  7830  14A6  07DB               	addwf	___fladd@b+3,f
  7831  14A7                     l2494:
  7832  14A7  1C5B               	btfss	___fladd@b+3,0
  7833  14A8  2CAA               	goto	u3561
  7834  14A9  2CAB               	goto	u3560
  7835  14AA                     u3561:
  7836  14AA  2CCD               	goto	l682
  7837  14AB                     u3560:
  7838  14AB                     l2496:
  7839  14AB  0858               	movf	___fladd@b,w
  7840  14AC  00E0               	movwf	??___fladd
  7841  14AD  0859               	movf	___fladd@b+1,w
  7842  14AE  00E1               	movwf	??___fladd+1
  7843  14AF  085A               	movf	___fladd@b+2,w
  7844  14B0  00E2               	movwf	??___fladd+2
  7845  14B1  085B               	movf	___fladd@b+3,w
  7846  14B2  00E3               	movwf	??___fladd+3
  7847  14B3  3001               	movlw	1
  7848  14B4  00E4               	movwf	??___fladd+4
  7849  14B5                     u3575:
  7850  14B5  0D63               	rlf	??___fladd+3,w
  7851  14B6  0CE3               	rrf	??___fladd+3,f
  7852  14B7  0CE2               	rrf	??___fladd+2,f
  7853  14B8  0CE1               	rrf	??___fladd+1,f
  7854  14B9  0CE0               	rrf	??___fladd,f
  7855  14BA                     u3570:
  7856  14BA  0BE4               	decfsz	??___fladd+4,f
  7857  14BB  2CB5               	goto	u3575
  7858  14BC  0863               	movf	??___fladd+3,w
  7859  14BD  00DB               	movwf	___fladd@b+3
  7860  14BE  0862               	movf	??___fladd+2,w
  7861  14BF  00DA               	movwf	___fladd@b+2
  7862  14C0  0861               	movf	??___fladd+1,w
  7863  14C1  00D9               	movwf	___fladd@b+1
  7864  14C2  0860               	movf	??___fladd,w
  7865  14C3  00D8               	movwf	___fladd@b
  7866  14C4  0A6A               	incf	___fladd@bexp,w
  7867  14C5  1903               	btfsc	3,2
  7868  14C6  2CC8               	goto	u3581
  7869  14C7  2CC9               	goto	u3580
  7870  14C8                     u3581:
  7871  14C8  2CCD               	goto	l682
  7872  14C9                     u3580:
  7873  14C9                     l2498:
  7874  14C9  3001               	movlw	1
  7875  14CA  00E0               	movwf	??___fladd
  7876  14CB  0860               	movf	??___fladd,w
  7877  14CC  07EA               	addwf	___fladd@bexp,f
  7878  14CD                     l682:
  7879  14CD  0A6A               	incf	___fladd@bexp,w
  7880  14CE  1903               	btfsc	3,2
  7881  14CF  2CD1               	goto	u3591
  7882  14D0  2CD2               	goto	u3590
  7883  14D1                     u3591:
  7884  14D1  2CD7               	goto	l2502
  7885  14D2                     u3590:
  7886  14D2                     l2500:
  7887  14D2  086A               	movf	___fladd@bexp,w
  7888  14D3  1D03               	btfss	3,2
  7889  14D4  2CD6               	goto	u3601
  7890  14D5  2CD7               	goto	u3600
  7891  14D6                     u3601:
  7892  14D6  2CE5               	goto	l2508
  7893  14D7                     u3600:
  7894  14D7                     l2502:
  7895  14D7  3000               	movlw	0
  7896  14D8  00DB               	movwf	___fladd@b+3
  7897  14D9  3000               	movlw	0
  7898  14DA  00DA               	movwf	___fladd@b+2
  7899  14DB  3000               	movlw	0
  7900  14DC  00D9               	movwf	___fladd@b+1
  7901  14DD  3000               	movlw	0
  7902  14DE  00D8               	movwf	___fladd@b
  7903  14DF                     l2504:
  7904  14DF  086A               	movf	___fladd@bexp,w
  7905  14E0  1D03               	btfss	3,2
  7906  14E1  2CE3               	goto	u3611
  7907  14E2  2CE4               	goto	u3610
  7908  14E3                     u3611:
  7909  14E3  2CE5               	goto	l2508
  7910  14E4                     u3610:
  7911  14E4                     l2506:
  7912  14E4  01E8               	clrf	___fladd@signs
  7913  14E5                     l2508:
  7914  14E5  1C6A               	btfss	___fladd@bexp,0
  7915  14E6  2CE8               	goto	u3621
  7916  14E7  2CE9               	goto	u3620
  7917  14E8                     u3621:
  7918  14E8  2CEB               	goto	l2512
  7919  14E9                     u3620:
  7920  14E9                     l2510:
  7921  14E9  17DA               	bsf	___fladd@b+2,7
  7922  14EA  2CEF               	goto	l690
  7923  14EB                     l2512:
  7924  14EB  307F               	movlw	127
  7925  14EC  00E0               	movwf	??___fladd
  7926  14ED  0860               	movf	??___fladd,w
  7927  14EE  05DA               	andwf	___fladd@b+2,f
  7928  14EF                     l690:
  7929  14EF  086A               	movf	___fladd@bexp,w
  7930  14F0  00E0               	movwf	??___fladd
  7931  14F1  1003               	clrc
  7932  14F2  0C60               	rrf	??___fladd,w
  7933  14F3  00E1               	movwf	??___fladd+1
  7934  14F4  0861               	movf	??___fladd+1,w
  7935  14F5  00DB               	movwf	___fladd@b+3
  7936  14F6                     l2514:
  7937  14F6  1FE8               	btfss	___fladd@signs,7
  7938  14F7  2CF9               	goto	u3631
  7939  14F8  2CFA               	goto	u3630
  7940  14F9                     u3631:
  7941  14F9  2CFB               	goto	l691
  7942  14FA                     u3630:
  7943  14FA                     l2516:
  7944  14FA  17DB               	bsf	___fladd@b+3,7
  7945  14FB                     l691:
  7946  14FB                     l661:
  7947  14FB  0008               	return
  7948  14FC                     __end_of___fladd:
  7949                           
  7950                           	psect	text20
  7951  1AEC                     __ptext20:	
  7952 ;; *************** function ___flneg *****************
  7953 ;; Defined at:
  7954 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  7955 ;; Parameters:    Size  Location     Type
  7956 ;;  f1              4    3[COMMON] unsigned char 
  7957 ;; Auto vars:     Size  Location     Type
  7958 ;;		None
  7959 ;; Return value:  Size  Location     Type
  7960 ;;                  4    3[COMMON] unsigned char 
  7961 ;; Registers used:
  7962 ;;		wreg
  7963 ;; Tracked objects:
  7964 ;;		On entry : 0/0
  7965 ;;		On exit  : 0/0
  7966 ;;		Unchanged: 0/0
  7967 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7968 ;;      Params:         4       0       0       0       0
  7969 ;;      Locals:         0       0       0       0       0
  7970 ;;      Temps:          0       0       0       0       0
  7971 ;;      Totals:         4       0       0       0       0
  7972 ;;Total ram usage:        4 bytes
  7973 ;; Hardware stack levels used:    1
  7974 ;; Hardware stack levels required when called:    1
  7975 ;; This function calls:
  7976 ;;		Nothing
  7977 ;; This function is called by:
  7978 ;;		_sprintf
  7979 ;; This function uses a non-reentrant model
  7980 ;;
  7981                           
  7982                           
  7983                           ;psect for function ___flneg
  7984  1AEC                     ___flneg:
  7985  1AEC                     l2926:	
  7986                           ;incstack = 0
  7987                           ; Regs used in ___flneg: [wreg]
  7988                           
  7989  1AEC  0876               	movf	___flneg@f1+3,w
  7990  1AED  0475               	iorwf	___flneg@f1+2,w
  7991  1AEE  0474               	iorwf	___flneg@f1+1,w
  7992  1AEF  0473               	iorwf	___flneg@f1,w
  7993  1AF0  1903               	skipnz
  7994  1AF1  2AF3               	goto	u4751
  7995  1AF2  2AF4               	goto	u4750
  7996  1AF3                     u4751:
  7997  1AF3  2AF6               	goto	l2930
  7998  1AF4                     u4750:
  7999  1AF4                     l2928:
  8000  1AF4  3080               	movlw	128
  8001  1AF5  06F6               	xorwf	___flneg@f1+3,f
  8002  1AF6                     l2930:
  8003  1AF6                     l520:
  8004  1AF6  0008               	return
  8005  1AF7                     __end_of___flneg:
  8006                           
  8007                           	psect	text21
  8008  1F5C                     __ptext21:	
  8009 ;; *************** function ___flge *****************
  8010 ;; Defined at:
  8011 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8012 ;; Parameters:    Size  Location     Type
  8013 ;;  ff1             4    0[BANK0 ] unsigned char 
  8014 ;;  ff2             4    4[BANK0 ] unsigned char 
  8015 ;; Auto vars:     Size  Location     Type
  8016 ;;		None
  8017 ;; Return value:  Size  Location     Type
  8018 ;;		None               void
  8019 ;; Registers used:
  8020 ;;		wreg, status,2, status,0
  8021 ;; Tracked objects:
  8022 ;;		On entry : 0/0
  8023 ;;		On exit  : 0/0
  8024 ;;		Unchanged: 0/0
  8025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8026 ;;      Params:         0       8       0       0       0
  8027 ;;      Locals:         0       0       0       0       0
  8028 ;;      Temps:          4       0       0       0       0
  8029 ;;      Totals:         4       8       0       0       0
  8030 ;;Total ram usage:       12 bytes
  8031 ;; Hardware stack levels used:    1
  8032 ;; Hardware stack levels required when called:    1
  8033 ;; This function calls:
  8034 ;;		Nothing
  8035 ;; This function is called by:
  8036 ;;		_sprintf
  8037 ;; This function uses a non-reentrant model
  8038 ;;
  8039                           
  8040                           
  8041                           ;psect for function ___flge
  8042  1F5C                     ___flge:
  8043  1F5C                     l3712:	
  8044                           ;incstack = 0
  8045                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8046                           
  8047  1F5C  3000               	movlw	0
  8048  1F5D  1283               	bcf	3,5	;RP0=0, select bank0
  8049  1F5E  1303               	bcf	3,6	;RP1=0, select bank0
  8050  1F5F  0520               	andwf	___flge@ff1,w
  8051  1F60  00F3               	movwf	??___flge
  8052  1F61  3000               	movlw	0
  8053  1F62  0521               	andwf	___flge@ff1+1,w
  8054  1F63  00F4               	movwf	??___flge+1
  8055  1F64  3080               	movlw	128
  8056  1F65  0522               	andwf	___flge@ff1+2,w
  8057  1F66  00F5               	movwf	??___flge+2
  8058  1F67  307F               	movlw	127
  8059  1F68  0523               	andwf	___flge@ff1+3,w
  8060  1F69  00F6               	movwf	??___flge+3
  8061  1F6A  0876               	movf	??___flge+3,w
  8062  1F6B  0475               	iorwf	??___flge+2,w
  8063  1F6C  0474               	iorwf	??___flge+1,w
  8064  1F6D  0473               	iorwf	??___flge,w
  8065  1F6E  1D03               	skipz
  8066  1F6F  2F71               	goto	u6281
  8067  1F70  2F72               	goto	u6280
  8068  1F71                     u6281:
  8069  1F71  2F7A               	goto	l512
  8070  1F72                     u6280:
  8071  1F72                     l3714:
  8072  1F72  3000               	movlw	0
  8073  1F73  00A3               	movwf	___flge@ff1+3
  8074  1F74  3000               	movlw	0
  8075  1F75  00A2               	movwf	___flge@ff1+2
  8076  1F76  3000               	movlw	0
  8077  1F77  00A1               	movwf	___flge@ff1+1
  8078  1F78  3000               	movlw	0
  8079  1F79  00A0               	movwf	___flge@ff1
  8080  1F7A                     l512:
  8081  1F7A  3000               	movlw	0
  8082  1F7B  0524               	andwf	___flge@ff2,w
  8083  1F7C  00F3               	movwf	??___flge
  8084  1F7D  3000               	movlw	0
  8085  1F7E  0525               	andwf	___flge@ff2+1,w
  8086  1F7F  00F4               	movwf	??___flge+1
  8087  1F80  3080               	movlw	128
  8088  1F81  0526               	andwf	___flge@ff2+2,w
  8089  1F82  00F5               	movwf	??___flge+2
  8090  1F83  307F               	movlw	127
  8091  1F84  0527               	andwf	___flge@ff2+3,w
  8092  1F85  00F6               	movwf	??___flge+3
  8093  1F86  0876               	movf	??___flge+3,w
  8094  1F87  0475               	iorwf	??___flge+2,w
  8095  1F88  0474               	iorwf	??___flge+1,w
  8096  1F89  0473               	iorwf	??___flge,w
  8097  1F8A  1D03               	skipz
  8098  1F8B  2F8D               	goto	u6291
  8099  1F8C  2F8E               	goto	u6290
  8100  1F8D                     u6291:
  8101  1F8D  2F96               	goto	l3718
  8102  1F8E                     u6290:
  8103  1F8E                     l3716:
  8104  1F8E  3000               	movlw	0
  8105  1F8F  00A7               	movwf	___flge@ff2+3
  8106  1F90  3000               	movlw	0
  8107  1F91  00A6               	movwf	___flge@ff2+2
  8108  1F92  3000               	movlw	0
  8109  1F93  00A5               	movwf	___flge@ff2+1
  8110  1F94  3000               	movlw	0
  8111  1F95  00A4               	movwf	___flge@ff2
  8112  1F96                     l3718:
  8113  1F96  1FA3               	btfss	___flge@ff1+3,7
  8114  1F97  2F99               	goto	u6301
  8115  1F98  2F9A               	goto	u6300
  8116  1F99                     u6301:
  8117  1F99  2FBE               	goto	l3722
  8118  1F9A                     u6300:
  8119  1F9A                     l3720:
  8120  1F9A  3000               	movlw	0
  8121  1F9B  00F3               	movwf	??___flge
  8122  1F9C  3000               	movlw	0
  8123  1F9D  00F4               	movwf	??___flge+1
  8124  1F9E  3000               	movlw	0
  8125  1F9F  00F5               	movwf	??___flge+2
  8126  1FA0  3080               	movlw	128
  8127  1FA1  00F6               	movwf	??___flge+3
  8128  1FA2  0820               	movf	___flge@ff1,w
  8129  1FA3  02F3               	subwf	??___flge,f
  8130  1FA4  0821               	movf	___flge@ff1+1,w
  8131  1FA5  1C03               	skipc
  8132  1FA6  0F21               	incfsz	___flge@ff1+1,w
  8133  1FA7  2FA9               	goto	u6311
  8134  1FA8  2FAA               	goto	u6312
  8135  1FA9                     u6311:
  8136  1FA9  02F4               	subwf	??___flge+1,f
  8137  1FAA                     u6312:
  8138  1FAA  0822               	movf	___flge@ff1+2,w
  8139  1FAB  1C03               	skipc
  8140  1FAC  0F22               	incfsz	___flge@ff1+2,w
  8141  1FAD  2FAF               	goto	u6313
  8142  1FAE  2FB0               	goto	u6314
  8143  1FAF                     u6313:
  8144  1FAF  02F5               	subwf	??___flge+2,f
  8145  1FB0                     u6314:
  8146  1FB0  0823               	movf	___flge@ff1+3,w
  8147  1FB1  1C03               	skipc
  8148  1FB2  0F23               	incfsz	___flge@ff1+3,w
  8149  1FB3  2FB5               	goto	u6315
  8150  1FB4  2FB6               	goto	u6316
  8151  1FB5                     u6315:
  8152  1FB5  02F6               	subwf	??___flge+3,f
  8153  1FB6                     u6316:
  8154  1FB6  0876               	movf	??___flge+3,w
  8155  1FB7  00A3               	movwf	___flge@ff1+3
  8156  1FB8  0875               	movf	??___flge+2,w
  8157  1FB9  00A2               	movwf	___flge@ff1+2
  8158  1FBA  0874               	movf	??___flge+1,w
  8159  1FBB  00A1               	movwf	___flge@ff1+1
  8160  1FBC  0873               	movf	??___flge,w
  8161  1FBD  00A0               	movwf	___flge@ff1
  8162  1FBE                     l3722:
  8163  1FBE  1FA7               	btfss	___flge@ff2+3,7
  8164  1FBF  2FC1               	goto	u6321
  8165  1FC0  2FC2               	goto	u6320
  8166  1FC1                     u6321:
  8167  1FC1  2FE6               	goto	l515
  8168  1FC2                     u6320:
  8169  1FC2                     l3724:
  8170  1FC2  3000               	movlw	0
  8171  1FC3  00F3               	movwf	??___flge
  8172  1FC4  3000               	movlw	0
  8173  1FC5  00F4               	movwf	??___flge+1
  8174  1FC6  3000               	movlw	0
  8175  1FC7  00F5               	movwf	??___flge+2
  8176  1FC8  3080               	movlw	128
  8177  1FC9  00F6               	movwf	??___flge+3
  8178  1FCA  0824               	movf	___flge@ff2,w
  8179  1FCB  02F3               	subwf	??___flge,f
  8180  1FCC  0825               	movf	___flge@ff2+1,w
  8181  1FCD  1C03               	skipc
  8182  1FCE  0F25               	incfsz	___flge@ff2+1,w
  8183  1FCF  2FD1               	goto	u6331
  8184  1FD0  2FD2               	goto	u6332
  8185  1FD1                     u6331:
  8186  1FD1  02F4               	subwf	??___flge+1,f
  8187  1FD2                     u6332:
  8188  1FD2  0826               	movf	___flge@ff2+2,w
  8189  1FD3  1C03               	skipc
  8190  1FD4  0F26               	incfsz	___flge@ff2+2,w
  8191  1FD5  2FD7               	goto	u6333
  8192  1FD6  2FD8               	goto	u6334
  8193  1FD7                     u6333:
  8194  1FD7  02F5               	subwf	??___flge+2,f
  8195  1FD8                     u6334:
  8196  1FD8  0827               	movf	___flge@ff2+3,w
  8197  1FD9  1C03               	skipc
  8198  1FDA  0F27               	incfsz	___flge@ff2+3,w
  8199  1FDB  2FDD               	goto	u6335
  8200  1FDC  2FDE               	goto	u6336
  8201  1FDD                     u6335:
  8202  1FDD  02F6               	subwf	??___flge+3,f
  8203  1FDE                     u6336:
  8204  1FDE  0876               	movf	??___flge+3,w
  8205  1FDF  00A7               	movwf	___flge@ff2+3
  8206  1FE0  0875               	movf	??___flge+2,w
  8207  1FE1  00A6               	movwf	___flge@ff2+2
  8208  1FE2  0874               	movf	??___flge+1,w
  8209  1FE3  00A5               	movwf	___flge@ff2+1
  8210  1FE4  0873               	movf	??___flge,w
  8211  1FE5  00A4               	movwf	___flge@ff2
  8212  1FE6                     l515:
  8213  1FE6  3080               	movlw	128
  8214  1FE7  06A3               	xorwf	___flge@ff1+3,f
  8215  1FE8  3080               	movlw	128
  8216  1FE9  06A7               	xorwf	___flge@ff2+3,f
  8217  1FEA  0827               	movf	___flge@ff2+3,w
  8218  1FEB  0223               	subwf	___flge@ff1+3,w
  8219  1FEC  1D03               	skipz
  8220  1FED  2FF8               	goto	u6345
  8221  1FEE  0826               	movf	___flge@ff2+2,w
  8222  1FEF  0222               	subwf	___flge@ff1+2,w
  8223  1FF0  1D03               	skipz
  8224  1FF1  2FF8               	goto	u6345
  8225  1FF2  0825               	movf	___flge@ff2+1,w
  8226  1FF3  0221               	subwf	___flge@ff1+1,w
  8227  1FF4  1D03               	skipz
  8228  1FF5  2FF8               	goto	u6345
  8229  1FF6  0824               	movf	___flge@ff2,w
  8230  1FF7  0220               	subwf	___flge@ff1,w
  8231  1FF8                     u6345:
  8232  1FF8  1803               	skipnc
  8233  1FF9  2FFB               	goto	u6341
  8234  1FFA  2FFC               	goto	u6340
  8235  1FFB                     u6341:
  8236  1FFB  2FFE               	goto	l3728
  8237  1FFC                     u6340:
  8238  1FFC                     l3726:
  8239  1FFC  1003               	clrc
  8240  1FFD  2FFF               	goto	l516
  8241  1FFE                     l3728:
  8242  1FFE  1403               	setc
  8243  1FFF                     l516:
  8244  1FFF  0008               	return
  8245  2000                     __end_of___flge:
  8246                           
  8247                           	psect	text22
  8248  1CC0                     __ptext22:	
  8249 ;; *************** function ___fleq *****************
  8250 ;; Defined at:
  8251 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8252 ;; Parameters:    Size  Location     Type
  8253 ;;  ff1             4    0[BANK0 ] unsigned char 
  8254 ;;  ff2             4    4[BANK0 ] unsigned char 
  8255 ;; Auto vars:     Size  Location     Type
  8256 ;;		None
  8257 ;; Return value:  Size  Location     Type
  8258 ;;		None               void
  8259 ;; Registers used:
  8260 ;;		wreg, status,2, status,0
  8261 ;; Tracked objects:
  8262 ;;		On entry : 0/0
  8263 ;;		On exit  : 0/0
  8264 ;;		Unchanged: 0/0
  8265 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8266 ;;      Params:         0       8       0       0       0
  8267 ;;      Locals:         0       0       0       0       0
  8268 ;;      Temps:          4       0       0       0       0
  8269 ;;      Totals:         4       8       0       0       0
  8270 ;;Total ram usage:       12 bytes
  8271 ;; Hardware stack levels used:    1
  8272 ;; Hardware stack levels required when called:    1
  8273 ;; This function calls:
  8274 ;;		Nothing
  8275 ;; This function is called by:
  8276 ;;		_sprintf
  8277 ;; This function uses a non-reentrant model
  8278 ;;
  8279                           
  8280                           
  8281                           ;psect for function ___fleq
  8282  1CC0                     ___fleq:
  8283  1CC0                     l3700:	
  8284                           ;incstack = 0
  8285                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8286                           
  8287  1CC0  3000               	movlw	0
  8288  1CC1  1283               	bcf	3,5	;RP0=0, select bank0
  8289  1CC2  1303               	bcf	3,6	;RP1=0, select bank0
  8290  1CC3  0520               	andwf	___fleq@ff1,w
  8291  1CC4  00F3               	movwf	??___fleq
  8292  1CC5  3000               	movlw	0
  8293  1CC6  0521               	andwf	___fleq@ff1+1,w
  8294  1CC7  00F4               	movwf	??___fleq+1
  8295  1CC8  3080               	movlw	128
  8296  1CC9  0522               	andwf	___fleq@ff1+2,w
  8297  1CCA  00F5               	movwf	??___fleq+2
  8298  1CCB  307F               	movlw	127
  8299  1CCC  0523               	andwf	___fleq@ff1+3,w
  8300  1CCD  00F6               	movwf	??___fleq+3
  8301  1CCE  0876               	movf	??___fleq+3,w
  8302  1CCF  0475               	iorwf	??___fleq+2,w
  8303  1CD0  0474               	iorwf	??___fleq+1,w
  8304  1CD1  0473               	iorwf	??___fleq,w
  8305  1CD2  1D03               	skipz
  8306  1CD3  2CD5               	goto	u6251
  8307  1CD4  2CD6               	goto	u6250
  8308  1CD5                     u6251:
  8309  1CD5  2CDE               	goto	l507
  8310  1CD6                     u6250:
  8311  1CD6                     l3702:
  8312  1CD6  3000               	movlw	0
  8313  1CD7  00A3               	movwf	___fleq@ff1+3
  8314  1CD8  3000               	movlw	0
  8315  1CD9  00A2               	movwf	___fleq@ff1+2
  8316  1CDA  3000               	movlw	0
  8317  1CDB  00A1               	movwf	___fleq@ff1+1
  8318  1CDC  3000               	movlw	0
  8319  1CDD  00A0               	movwf	___fleq@ff1
  8320  1CDE                     l507:
  8321  1CDE  3000               	movlw	0
  8322  1CDF  0524               	andwf	___fleq@ff2,w
  8323  1CE0  00F3               	movwf	??___fleq
  8324  1CE1  3000               	movlw	0
  8325  1CE2  0525               	andwf	___fleq@ff2+1,w
  8326  1CE3  00F4               	movwf	??___fleq+1
  8327  1CE4  3080               	movlw	128
  8328  1CE5  0526               	andwf	___fleq@ff2+2,w
  8329  1CE6  00F5               	movwf	??___fleq+2
  8330  1CE7  307F               	movlw	127
  8331  1CE8  0527               	andwf	___fleq@ff2+3,w
  8332  1CE9  00F6               	movwf	??___fleq+3
  8333  1CEA  0876               	movf	??___fleq+3,w
  8334  1CEB  0475               	iorwf	??___fleq+2,w
  8335  1CEC  0474               	iorwf	??___fleq+1,w
  8336  1CED  0473               	iorwf	??___fleq,w
  8337  1CEE  1D03               	skipz
  8338  1CEF  2CF1               	goto	u6261
  8339  1CF0  2CF2               	goto	u6260
  8340  1CF1                     u6261:
  8341  1CF1  2CFA               	goto	l508
  8342  1CF2                     u6260:
  8343  1CF2                     l3704:
  8344  1CF2  3000               	movlw	0
  8345  1CF3  00A7               	movwf	___fleq@ff2+3
  8346  1CF4  3000               	movlw	0
  8347  1CF5  00A6               	movwf	___fleq@ff2+2
  8348  1CF6  3000               	movlw	0
  8349  1CF7  00A5               	movwf	___fleq@ff2+1
  8350  1CF8  3000               	movlw	0
  8351  1CF9  00A4               	movwf	___fleq@ff2
  8352  1CFA                     l508:
  8353  1CFA  0827               	movf	___fleq@ff2+3,w
  8354  1CFB  0623               	xorwf	___fleq@ff1+3,w
  8355  1CFC  1D03               	skipz
  8356  1CFD  2D08               	goto	u6275
  8357  1CFE  0826               	movf	___fleq@ff2+2,w
  8358  1CFF  0622               	xorwf	___fleq@ff1+2,w
  8359  1D00  1D03               	skipz
  8360  1D01  2D08               	goto	u6275
  8361  1D02  0825               	movf	___fleq@ff2+1,w
  8362  1D03  0621               	xorwf	___fleq@ff1+1,w
  8363  1D04  1D03               	skipz
  8364  1D05  2D08               	goto	u6275
  8365  1D06  0824               	movf	___fleq@ff2,w
  8366  1D07  0620               	xorwf	___fleq@ff1,w
  8367  1D08                     u6275:
  8368  1D08  1903               	skipnz
  8369  1D09  2D0B               	goto	u6271
  8370  1D0A  2D0C               	goto	u6270
  8371  1D0B                     u6271:
  8372  1D0B  2D0E               	goto	l3708
  8373  1D0C                     u6270:
  8374  1D0C                     l3706:
  8375  1D0C  1003               	clrc
  8376  1D0D  2D0F               	goto	l509
  8377  1D0E                     l3708:
  8378  1D0E  1403               	setc
  8379  1D0F                     l509:
  8380  1D0F  0008               	return
  8381  1D10                     __end_of___fleq:
  8382                           
  8383                           	psect	text23
  8384  1B04                     __ptext23:	
  8385 ;; *************** function _setup *****************
  8386 ;; Defined at:
  8387 ;;		line 55 in file "main.c"
  8388 ;; Parameters:    Size  Location     Type
  8389 ;;		None
  8390 ;; Auto vars:     Size  Location     Type
  8391 ;;		None
  8392 ;; Return value:  Size  Location     Type
  8393 ;;                  1    wreg      void 
  8394 ;; Registers used:
  8395 ;;		wreg, status,2
  8396 ;; Tracked objects:
  8397 ;;		On entry : 0/0
  8398 ;;		On exit  : 0/0
  8399 ;;		Unchanged: 0/0
  8400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8401 ;;      Params:         0       0       0       0       0
  8402 ;;      Locals:         0       0       0       0       0
  8403 ;;      Temps:          0       0       0       0       0
  8404 ;;      Totals:         0       0       0       0       0
  8405 ;;Total ram usage:        0 bytes
  8406 ;; Hardware stack levels used:    1
  8407 ;; Hardware stack levels required when called:    1
  8408 ;; This function calls:
  8409 ;;		Nothing
  8410 ;; This function is called by:
  8411 ;;		_main
  8412 ;; This function uses a non-reentrant model
  8413 ;;
  8414                           
  8415                           
  8416                           ;psect for function _setup
  8417  1B04                     _setup:
  8418  1B04                     l3040:	
  8419                           ;incstack = 0
  8420                           ; Regs used in _setup: [wreg+status,2]
  8421                           
  8422                           
  8423                           ;main.c: 56:     ANSEL = 0b00000011;
  8424  1B04  3003               	movlw	3
  8425  1B05  1683               	bsf	3,5	;RP0=1, select bank3
  8426  1B06  1703               	bsf	3,6	;RP1=1, select bank3
  8427  1B07  0088               	movwf	8	;volatile
  8428  1B08                     l3042:
  8429                           
  8430                           ;main.c: 58:     TRISC = 0b00000000;
  8431  1B08  1683               	bsf	3,5	;RP0=1, select bank1
  8432  1B09  1303               	bcf	3,6	;RP1=0, select bank1
  8433  1B0A  0187               	clrf	7	;volatile
  8434  1B0B                     l3044:
  8435                           
  8436                           ;main.c: 59:     TRISD = 0b00000000;
  8437  1B0B  0188               	clrf	8	;volatile
  8438  1B0C                     l3046:
  8439                           
  8440                           ;main.c: 61:     PORTC = 0;
  8441  1B0C  1283               	bcf	3,5	;RP0=0, select bank0
  8442  1B0D  1303               	bcf	3,6	;RP1=0, select bank0
  8443  1B0E  0187               	clrf	7	;volatile
  8444  1B0F                     l3048:
  8445                           
  8446                           ;main.c: 62:     PORTD = 0;
  8447  1B0F  0188               	clrf	8	;volatile
  8448  1B10                     l47:
  8449  1B10  0008               	return
  8450  1B11                     __end_of_setup:
  8451                           
  8452                           	psect	text24
  8453  1BED                     __ptext24:	
  8454 ;; *************** function _Lcd_Write_String *****************
  8455 ;; Defined at:
  8456 ;;		line 110 in file "LCD.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;  a               2    8[COMMON] PTR unsigned char 
  8459 ;;		 -> s(20), STR_1(15), 
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;  i               2    3[BANK0 ] int 
  8462 ;; Return value:  Size  Location     Type
  8463 ;;                  1    wreg      void 
  8464 ;; Registers used:
  8465 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8466 ;; Tracked objects:
  8467 ;;		On entry : 0/0
  8468 ;;		On exit  : 0/0
  8469 ;;		Unchanged: 0/0
  8470 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8471 ;;      Params:         2       0       0       0       0
  8472 ;;      Locals:         0       2       0       0       0
  8473 ;;      Temps:          0       3       0       0       0
  8474 ;;      Totals:         2       5       0       0       0
  8475 ;;Total ram usage:        7 bytes
  8476 ;; Hardware stack levels used:    1
  8477 ;; Hardware stack levels required when called:    3
  8478 ;; This function calls:
  8479 ;;		_Lcd_Write_Char
  8480 ;; This function is called by:
  8481 ;;		_main
  8482 ;; This function uses a non-reentrant model
  8483 ;;
  8484                           
  8485                           
  8486                           ;psect for function _Lcd_Write_String
  8487  1BED                     _Lcd_Write_String:
  8488  1BED                     l3820:	
  8489                           ;incstack = 0
  8490                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8491                           
  8492                           
  8493                           ;LCD.c: 110: void Lcd_Write_String(char *a);LCD.c: 111: {;LCD.c: 112:  int i;;LCD.c: 113
      +                          :  for(i=0;a[i]!='\0';i++)
  8494  1BED  1283               	bcf	3,5	;RP0=0, select bank0
  8495  1BEE  1303               	bcf	3,6	;RP1=0, select bank0
  8496  1BEF  01A3               	clrf	Lcd_Write_String@i
  8497  1BF0  01A4               	clrf	Lcd_Write_String@i+1
  8498  1BF1  2C16               	goto	l3826
  8499  1BF2                     l3822:
  8500                           
  8501                           ;LCD.c: 114:     Lcd_Write_Char(a[i]);
  8502  1BF2  0823               	movf	Lcd_Write_String@i,w
  8503  1BF3  0778               	addwf	Lcd_Write_String@a,w
  8504  1BF4  00A1               	movwf	??_Lcd_Write_String+1
  8505  1BF5  0879               	movf	Lcd_Write_String@a+1,w
  8506  1BF6  00A0               	movwf	??_Lcd_Write_String
  8507  1BF7  1803               	skipnc
  8508  1BF8  0AA0               	incf	??_Lcd_Write_String,f
  8509  1BF9  1FA3               	btfss	Lcd_Write_String@i,7
  8510  1BFA  2BFC               	goto	u6570
  8511  1BFB  03A0               	decf	??_Lcd_Write_String,f
  8512  1BFC                     u6570:
  8513  1BFC  1283               	bcf	3,5	;RP0=0, select bank0
  8514  1BFD  1303               	bcf	3,6	;RP1=0, select bank0
  8515  1BFE  0820               	movf	??_Lcd_Write_String,w
  8516  1BFF  00A2               	movwf	??_Lcd_Write_String+2
  8517  1C00  0822               	movf	??_Lcd_Write_String+2,w
  8518  1C01  00FF               	movwf	btemp+1
  8519  1C02  0821               	movf	??_Lcd_Write_String+1,w
  8520  1C03  0084               	movwf	4
  8521  1C04  160A  158A  2000  160A  158A  	fcall	stringtab
  8522  1C09  160A  158A  2323  160A  158A  	fcall	_Lcd_Write_Char
  8523  1C0E                     l3824:
  8524  1C0E  3001               	movlw	1
  8525  1C0F  1283               	bcf	3,5	;RP0=0, select bank0
  8526  1C10  1303               	bcf	3,6	;RP1=0, select bank0
  8527  1C11  07A3               	addwf	Lcd_Write_String@i,f
  8528  1C12  1803               	skipnc
  8529  1C13  0AA4               	incf	Lcd_Write_String@i+1,f
  8530  1C14  3000               	movlw	0
  8531  1C15  07A4               	addwf	Lcd_Write_String@i+1,f
  8532  1C16                     l3826:
  8533  1C16  0823               	movf	Lcd_Write_String@i,w
  8534  1C17  0778               	addwf	Lcd_Write_String@a,w
  8535  1C18  00A1               	movwf	??_Lcd_Write_String+1
  8536  1C19  0879               	movf	Lcd_Write_String@a+1,w
  8537  1C1A  00A0               	movwf	??_Lcd_Write_String
  8538  1C1B  1803               	skipnc
  8539  1C1C  0AA0               	incf	??_Lcd_Write_String,f
  8540  1C1D  1FA3               	btfss	Lcd_Write_String@i,7
  8541  1C1E  2C20               	goto	u6580
  8542  1C1F  03A0               	decf	??_Lcd_Write_String,f
  8543  1C20                     u6580:
  8544  1C20  1283               	bcf	3,5	;RP0=0, select bank0
  8545  1C21  1303               	bcf	3,6	;RP1=0, select bank0
  8546  1C22  0820               	movf	??_Lcd_Write_String,w
  8547  1C23  00A2               	movwf	??_Lcd_Write_String+2
  8548  1C24  0822               	movf	??_Lcd_Write_String+2,w
  8549  1C25  00FF               	movwf	btemp+1
  8550  1C26  0821               	movf	??_Lcd_Write_String+1,w
  8551  1C27  0084               	movwf	4
  8552  1C28  160A  158A  2000  160A  158A  	fcall	stringtab
  8553  1C2D  3A00               	xorlw	0
  8554  1C2E  1D03               	skipz
  8555  1C2F  2C31               	goto	u6591
  8556  1C30  2C32               	goto	u6590
  8557  1C31                     u6591:
  8558  1C31  2BF2               	goto	l3822
  8559  1C32                     u6590:
  8560  1C32                     l97:
  8561  1C32  0008               	return
  8562  1C33                     __end_of_Lcd_Write_String:
  8563                           
  8564                           	psect	text25
  8565  1B23                     __ptext25:	
  8566 ;; *************** function _Lcd_Write_Char *****************
  8567 ;; Defined at:
  8568 ;;		line 94 in file "LCD.c"
  8569 ;; Parameters:    Size  Location     Type
  8570 ;;  a               1    wreg     unsigned char 
  8571 ;; Auto vars:     Size  Location     Type
  8572 ;;  a               1    7[COMMON] unsigned char 
  8573 ;;  y               1    6[COMMON] unsigned char 
  8574 ;;  temp            1    0        unsigned char 
  8575 ;; Return value:  Size  Location     Type
  8576 ;;                  1    wreg      void 
  8577 ;; Registers used:
  8578 ;;		wreg, status,2, status,0, pclath, cstack
  8579 ;; Tracked objects:
  8580 ;;		On entry : 0/0
  8581 ;;		On exit  : 0/0
  8582 ;;		Unchanged: 0/0
  8583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8584 ;;      Params:         0       0       0       0       0
  8585 ;;      Locals:         3       0       0       0       0
  8586 ;;      Temps:          1       0       0       0       0
  8587 ;;      Totals:         4       0       0       0       0
  8588 ;;Total ram usage:        4 bytes
  8589 ;; Hardware stack levels used:    1
  8590 ;; Hardware stack levels required when called:    2
  8591 ;; This function calls:
  8592 ;;		_Lcd_Port
  8593 ;; This function is called by:
  8594 ;;		_Lcd_Write_String
  8595 ;; This function uses a non-reentrant model
  8596 ;;
  8597                           
  8598                           
  8599                           ;psect for function _Lcd_Write_Char
  8600  1B23                     _Lcd_Write_Char:
  8601                           
  8602                           ;incstack = 0
  8603                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  8604                           ;Lcd_Write_Char@a stored from wreg
  8605  1B23  00F7               	movwf	Lcd_Write_Char@a
  8606  1B24                     l3518:
  8607                           
  8608                           ;LCD.c: 98:    y = a&0xF0;
  8609  1B24  0877               	movf	Lcd_Write_Char@a,w
  8610  1B25  39F0               	andlw	240
  8611  1B26  00F4               	movwf	??_Lcd_Write_Char
  8612  1B27  0874               	movf	??_Lcd_Write_Char,w
  8613  1B28  00F6               	movwf	Lcd_Write_Char@y
  8614  1B29                     l3520:
  8615                           
  8616                           ;LCD.c: 99:    PORTDbits.RD2 = 1;
  8617  1B29  1283               	bcf	3,5	;RP0=0, select bank0
  8618  1B2A  1303               	bcf	3,6	;RP1=0, select bank0
  8619  1B2B  1508               	bsf	8,2	;volatile
  8620  1B2C                     l3522:
  8621                           
  8622                           ;LCD.c: 100:    Lcd_Port(a);
  8623  1B2C  0877               	movf	Lcd_Write_Char@a,w
  8624  1B2D  160A  158A  22DE  160A  158A  	fcall	_Lcd_Port
  8625  1B32                     l3524:
  8626                           
  8627                           ;LCD.c: 101:    PORTDbits.RD3 = 1;
  8628  1B32  1283               	bcf	3,5	;RP0=0, select bank0
  8629  1B33  1303               	bcf	3,6	;RP1=0, select bank0
  8630  1B34  1588               	bsf	8,3	;volatile
  8631  1B35                     l3526:
  8632                           
  8633                           ;LCD.c: 102:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  8634  1B35  301A               	movlw	26
  8635  1B36  00F4               	movwf	??_Lcd_Write_Char
  8636  1B37                     u7087:
  8637  1B37  0BF4               	decfsz	??_Lcd_Write_Char,f
  8638  1B38  2B37               	goto	u7087
  8639  1B39  0000               	nop
  8640  1B3A                     l3528:
  8641                           
  8642                           ;LCD.c: 103:    PORTDbits.RD3 = 0;
  8643  1B3A  1283               	bcf	3,5	;RP0=0, select bank0
  8644  1B3B  1303               	bcf	3,6	;RP1=0, select bank0
  8645  1B3C  1188               	bcf	8,3	;volatile
  8646  1B3D                     l3530:
  8647                           
  8648                           ;LCD.c: 106:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  8649  1B3D  301A               	movlw	26
  8650  1B3E  00F4               	movwf	??_Lcd_Write_Char
  8651  1B3F                     u7097:
  8652  1B3F  0BF4               	decfsz	??_Lcd_Write_Char,f
  8653  1B40  2B3F               	goto	u7097
  8654  1B41  0000               	nop
  8655  1B42                     l91:
  8656  1B42  0008               	return
  8657  1B43                     __end_of_Lcd_Write_Char:
  8658                           
  8659                           	psect	text26
  8660  1B68                     __ptext26:	
  8661 ;; *************** function _Lcd_Set_Cursor *****************
  8662 ;; Defined at:
  8663 ;;		line 45 in file "LCD.c"
  8664 ;; Parameters:    Size  Location     Type
  8665 ;;  a               1    wreg     unsigned char 
  8666 ;;  b               1    7[COMMON] unsigned char 
  8667 ;; Auto vars:     Size  Location     Type
  8668 ;;  a               1    0[BANK0 ] unsigned char 
  8669 ;;  temp            1    1[BANK0 ] unsigned char 
  8670 ;;  y               1    0        unsigned char 
  8671 ;;  z               1    0        unsigned char 
  8672 ;; Return value:  Size  Location     Type
  8673 ;;                  1    wreg      void 
  8674 ;; Registers used:
  8675 ;;		wreg, status,2, status,0, pclath, cstack
  8676 ;; Tracked objects:
  8677 ;;		On entry : 0/0
  8678 ;;		On exit  : 0/0
  8679 ;;		Unchanged: 0/0
  8680 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8681 ;;      Params:         1       0       0       0       0
  8682 ;;      Locals:         0       2       0       0       0
  8683 ;;      Temps:          1       0       0       0       0
  8684 ;;      Totals:         2       2       0       0       0
  8685 ;;Total ram usage:        4 bytes
  8686 ;; Hardware stack levels used:    1
  8687 ;; Hardware stack levels required when called:    3
  8688 ;; This function calls:
  8689 ;;		_Lcd_Cmd
  8690 ;; This function is called by:
  8691 ;;		_main
  8692 ;; This function uses a non-reentrant model
  8693 ;;
  8694                           
  8695                           
  8696                           ;psect for function _Lcd_Set_Cursor
  8697  1B68                     _Lcd_Set_Cursor:
  8698                           
  8699                           ;incstack = 0
  8700                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  8701                           ;Lcd_Set_Cursor@a stored from wreg
  8702  1B68  1283               	bcf	3,5	;RP0=0, select bank0
  8703  1B69  1303               	bcf	3,6	;RP1=0, select bank0
  8704  1B6A  00A0               	movwf	Lcd_Set_Cursor@a
  8705  1B6B                     l3808:
  8706                           
  8707                           ;LCD.c: 45: void Lcd_Set_Cursor(char a, char b);LCD.c: 46: {;LCD.c: 47:  char temp,z,y;;
      +                          LCD.c: 48:  if(a == 1)
  8708  1B6B  0320               	decf	Lcd_Set_Cursor@a,w
  8709  1B6C  1D03               	btfss	3,2
  8710  1B6D  2B6F               	goto	u6551
  8711  1B6E  2B70               	goto	u6550
  8712  1B6F                     u6551:
  8713  1B6F  2B7C               	goto	l3814
  8714  1B70                     u6550:
  8715  1B70                     l3810:
  8716                           
  8717                           ;LCD.c: 49:  {;LCD.c: 50:    temp = 0x80 + b - 1;
  8718  1B70  0877               	movf	Lcd_Set_Cursor@b,w
  8719  1B71  3E7F               	addlw	127
  8720  1B72  00F8               	movwf	??_Lcd_Set_Cursor
  8721  1B73  0878               	movf	??_Lcd_Set_Cursor,w
  8722  1B74  00A1               	movwf	Lcd_Set_Cursor@temp
  8723  1B75                     l3812:
  8724                           
  8725                           ;LCD.c: 55:       Lcd_Cmd(temp);
  8726  1B75  0821               	movf	Lcd_Set_Cursor@temp,w
  8727  1B76  120A  158A  2005  160A  158A  	fcall	_Lcd_Cmd
  8728                           
  8729                           ;LCD.c: 56:  }
  8730  1B7B  2B8D               	goto	l85
  8731  1B7C                     l3814:
  8732  1B7C  3002               	movlw	2
  8733  1B7D  0620               	xorwf	Lcd_Set_Cursor@a,w
  8734  1B7E  1D03               	btfss	3,2
  8735  1B7F  2B81               	goto	u6561
  8736  1B80  2B82               	goto	u6560
  8737  1B81                     u6561:
  8738  1B81  2B8D               	goto	l85
  8739  1B82                     u6560:
  8740  1B82                     l3816:
  8741                           
  8742                           ;LCD.c: 58:  {;LCD.c: 59:   temp = 0xC0 + b - 1;
  8743  1B82  0877               	movf	Lcd_Set_Cursor@b,w
  8744  1B83  3EBF               	addlw	191
  8745  1B84  00F8               	movwf	??_Lcd_Set_Cursor
  8746  1B85  0878               	movf	??_Lcd_Set_Cursor,w
  8747  1B86  00A1               	movwf	Lcd_Set_Cursor@temp
  8748  1B87                     l3818:
  8749                           
  8750                           ;LCD.c: 64:         Lcd_Cmd(temp);
  8751  1B87  0821               	movf	Lcd_Set_Cursor@temp,w
  8752  1B88  120A  158A  2005  160A  158A  	fcall	_Lcd_Cmd
  8753  1B8D                     l85:
  8754  1B8D  0008               	return
  8755  1B8E                     __end_of_Lcd_Set_Cursor:
  8756                           
  8757                           	psect	text27
  8758  1C79                     __ptext27:	
  8759 ;; *************** function _Lcd_Init *****************
  8760 ;; Defined at:
  8761 ;;		line 68 in file "LCD.c"
  8762 ;; Parameters:    Size  Location     Type
  8763 ;;		None
  8764 ;; Auto vars:     Size  Location     Type
  8765 ;;		None
  8766 ;; Return value:  Size  Location     Type
  8767 ;;                  1    wreg      void 
  8768 ;; Registers used:
  8769 ;;		wreg, status,2, status,0, pclath, cstack
  8770 ;; Tracked objects:
  8771 ;;		On entry : 0/0
  8772 ;;		On exit  : 0/0
  8773 ;;		Unchanged: 0/0
  8774 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8775 ;;      Params:         0       0       0       0       0
  8776 ;;      Locals:         0       0       0       0       0
  8777 ;;      Temps:          2       0       0       0       0
  8778 ;;      Totals:         2       0       0       0       0
  8779 ;;Total ram usage:        2 bytes
  8780 ;; Hardware stack levels used:    1
  8781 ;; Hardware stack levels required when called:    3
  8782 ;; This function calls:
  8783 ;;		_Lcd_Cmd
  8784 ;;		_Lcd_Port
  8785 ;; This function is called by:
  8786 ;;		_main
  8787 ;; This function uses a non-reentrant model
  8788 ;;
  8789                           
  8790                           
  8791                           ;psect for function _Lcd_Init
  8792  1C79                     _Lcd_Init:
  8793  1C79                     l3796:	
  8794                           ;incstack = 0
  8795                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  8796                           
  8797                           
  8798                           ;LCD.c: 70:   Lcd_Port(0x00);
  8799  1C79  3000               	movlw	0
  8800  1C7A  160A  158A  22DE  160A  158A  	fcall	_Lcd_Port
  8801  1C7F                     l3798:
  8802                           
  8803                           ;LCD.c: 71:    _delay((unsigned long)((20)*(8000000/4000.0)));
  8804  1C7F  3034               	movlw	52
  8805  1C80  00F8               	movwf	??_Lcd_Init+1
  8806  1C81  30F1               	movlw	241
  8807  1C82  00F7               	movwf	??_Lcd_Init
  8808  1C83                     u7107:
  8809  1C83  0BF7               	decfsz	??_Lcd_Init,f
  8810  1C84  2C83               	goto	u7107
  8811  1C85  0BF8               	decfsz	??_Lcd_Init+1,f
  8812  1C86  2C83               	goto	u7107
  8813  1C87  2C88               	nop2
  8814  1C88                     l3800:
  8815                           
  8816                           ;LCD.c: 72:   Lcd_Cmd(0x3F);
  8817  1C88  303F               	movlw	63
  8818  1C89  120A  158A  2005  160A  158A  	fcall	_Lcd_Cmd
  8819                           
  8820                           ;LCD.c: 73:  _delay((unsigned long)((10)*(8000000/4000.0)));
  8821  1C8E  301A               	movlw	26
  8822  1C8F  00F8               	movwf	??_Lcd_Init+1
  8823  1C90  30F8               	movlw	248
  8824  1C91  00F7               	movwf	??_Lcd_Init
  8825  1C92                     u7117:
  8826  1C92  0BF7               	decfsz	??_Lcd_Init,f
  8827  1C93  2C92               	goto	u7117
  8828  1C94  0BF8               	decfsz	??_Lcd_Init+1,f
  8829  1C95  2C92               	goto	u7117
  8830  1C96  0000               	nop
  8831  1C97                     l3802:
  8832                           
  8833                           ;LCD.c: 74:   Lcd_Cmd(0x3F);
  8834  1C97  303F               	movlw	63
  8835  1C98  120A  158A  2005  160A  158A  	fcall	_Lcd_Cmd
  8836  1C9D                     l3804:
  8837                           
  8838                           ;LCD.c: 75:  _delay((unsigned long)((200)*(8000000/4000000.0)));
  8839  1C9D  3085               	movlw	133
  8840  1C9E  00F7               	movwf	??_Lcd_Init
  8841  1C9F                     u7127:
  8842  1C9F  0BF7               	decfsz	??_Lcd_Init,f
  8843  1CA0  2C9F               	goto	u7127
  8844                           
  8845                           ;LCD.c: 76:   Lcd_Cmd(0x3F);
  8846  1CA1  303F               	movlw	63
  8847  1CA2  120A  158A  2005  160A  158A  	fcall	_Lcd_Cmd
  8848                           
  8849                           ;LCD.c: 78:   Lcd_Cmd (0x32);
  8850  1CA7  3032               	movlw	50
  8851  1CA8  120A  158A  2005  160A  158A  	fcall	_Lcd_Cmd
  8852                           
  8853                           ;LCD.c: 79:   Lcd_Cmd (0x38);
  8854  1CAD  3038               	movlw	56
  8855  1CAE  120A  158A  2005  160A  158A  	fcall	_Lcd_Cmd
  8856                           
  8857                           ;LCD.c: 80:   Lcd_Cmd (0x0C);
  8858  1CB3  300C               	movlw	12
  8859  1CB4  120A  158A  2005  160A  158A  	fcall	_Lcd_Cmd
  8860                           
  8861                           ;LCD.c: 81:   Lcd_Cmd (0x06);
  8862  1CB9  3006               	movlw	6
  8863  1CBA  120A  158A  2005  160A  158A  	fcall	_Lcd_Cmd
  8864  1CBF                     l88:
  8865  1CBF  0008               	return
  8866  1CC0                     __end_of_Lcd_Init:
  8867                           
  8868                           	psect	text28
  8869  1AF7                     __ptext28:	
  8870 ;; *************** function _Lcd_Clear *****************
  8871 ;; Defined at:
  8872 ;;		line 39 in file "LCD.c"
  8873 ;; Parameters:    Size  Location     Type
  8874 ;;		None
  8875 ;; Auto vars:     Size  Location     Type
  8876 ;;		None
  8877 ;; Return value:  Size  Location     Type
  8878 ;;                  1    wreg      void 
  8879 ;; Registers used:
  8880 ;;		wreg, status,2, status,0, pclath, cstack
  8881 ;; Tracked objects:
  8882 ;;		On entry : 0/0
  8883 ;;		On exit  : 0/0
  8884 ;;		Unchanged: 0/0
  8885 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8886 ;;      Params:         0       0       0       0       0
  8887 ;;      Locals:         0       0       0       0       0
  8888 ;;      Temps:          0       0       0       0       0
  8889 ;;      Totals:         0       0       0       0       0
  8890 ;;Total ram usage:        0 bytes
  8891 ;; Hardware stack levels used:    1
  8892 ;; Hardware stack levels required when called:    3
  8893 ;; This function calls:
  8894 ;;		_Lcd_Cmd
  8895 ;; This function is called by:
  8896 ;;		_main
  8897 ;; This function uses a non-reentrant model
  8898 ;;
  8899                           
  8900                           
  8901                           ;psect for function _Lcd_Clear
  8902  1AF7                     _Lcd_Clear:
  8903  1AF7                     l3806:	
  8904                           ;incstack = 0
  8905                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  8906                           
  8907                           
  8908                           ;LCD.c: 41:  Lcd_Cmd(0);
  8909  1AF7  3000               	movlw	0
  8910  1AF8  120A  158A  2005  160A  158A  	fcall	_Lcd_Cmd
  8911                           
  8912                           ;LCD.c: 42:  Lcd_Cmd(1);
  8913  1AFD  3001               	movlw	1
  8914  1AFE  120A  158A  2005  160A  158A  	fcall	_Lcd_Cmd
  8915  1B03                     l79:
  8916  1B03  0008               	return
  8917  1B04                     __end_of_Lcd_Clear:
  8918                           
  8919                           	psect	text29
  8920  0805                     __ptext29:	
  8921 ;; *************** function _Lcd_Cmd *****************
  8922 ;; Defined at:
  8923 ;;		line 30 in file "LCD.c"
  8924 ;; Parameters:    Size  Location     Type
  8925 ;;  a               1    wreg     unsigned char 
  8926 ;; Auto vars:     Size  Location     Type
  8927 ;;  a               1    6[COMMON] unsigned char 
  8928 ;; Return value:  Size  Location     Type
  8929 ;;                  1    wreg      void 
  8930 ;; Registers used:
  8931 ;;		wreg, status,2, status,0, pclath, cstack
  8932 ;; Tracked objects:
  8933 ;;		On entry : 0/0
  8934 ;;		On exit  : 0/0
  8935 ;;		Unchanged: 0/0
  8936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8937 ;;      Params:         0       0       0       0       0
  8938 ;;      Locals:         1       0       0       0       0
  8939 ;;      Temps:          2       0       0       0       0
  8940 ;;      Totals:         3       0       0       0       0
  8941 ;;Total ram usage:        3 bytes
  8942 ;; Hardware stack levels used:    1
  8943 ;; Hardware stack levels required when called:    2
  8944 ;; This function calls:
  8945 ;;		_Lcd_Port
  8946 ;; This function is called by:
  8947 ;;		_Lcd_Clear
  8948 ;;		_Lcd_Set_Cursor
  8949 ;;		_Lcd_Init
  8950 ;;		_Lcd_Shift_Right
  8951 ;;		_Lcd_Shift_Left
  8952 ;; This function uses a non-reentrant model
  8953 ;;
  8954                           
  8955                           
  8956                           ;psect for function _Lcd_Cmd
  8957  0805                     _Lcd_Cmd:
  8958                           
  8959                           ;incstack = 0
  8960                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  8961                           ;Lcd_Cmd@a stored from wreg
  8962  0805  00F6               	movwf	Lcd_Cmd@a
  8963  0806                     l3508:
  8964                           
  8965                           ;LCD.c: 30: void Lcd_Cmd(char a);LCD.c: 31: {;LCD.c: 32:  PORTDbits.RD2 = 0;
  8966  0806  1283               	bcf	3,5	;RP0=0, select bank0
  8967  0807  1303               	bcf	3,6	;RP1=0, select bank0
  8968  0808  1108               	bcf	8,2	;volatile
  8969  0809                     l3510:
  8970                           
  8971                           ;LCD.c: 33:  Lcd_Port(a);
  8972  0809  0876               	movf	Lcd_Cmd@a,w
  8973  080A  160A  158A  22DE  120A  158A  	fcall	_Lcd_Port
  8974  080F                     l3512:
  8975                           
  8976                           ;LCD.c: 34:  PORTDbits.RD3 = 1;
  8977  080F  1283               	bcf	3,5	;RP0=0, select bank0
  8978  0810  1303               	bcf	3,6	;RP1=0, select bank0
  8979  0811  1588               	bsf	8,3	;volatile
  8980  0812                     l3514:
  8981                           
  8982                           ;LCD.c: 35:         _delay((unsigned long)((4)*(8000000/4000.0)));
  8983  0812  300B               	movlw	11
  8984  0813  00F5               	movwf	??_Lcd_Cmd+1
  8985  0814  3062               	movlw	98
  8986  0815  00F4               	movwf	??_Lcd_Cmd
  8987  0816                     u7137:
  8988  0816  0BF4               	decfsz	??_Lcd_Cmd,f
  8989  0817  2816               	goto	u7137
  8990  0818  0BF5               	decfsz	??_Lcd_Cmd+1,f
  8991  0819  2816               	goto	u7137
  8992  081A  0000               	nop
  8993  081B                     l3516:
  8994                           
  8995                           ;LCD.c: 36:         PORTDbits.RD3 = 0;
  8996  081B  1283               	bcf	3,5	;RP0=0, select bank0
  8997  081C  1303               	bcf	3,6	;RP1=0, select bank0
  8998  081D  1188               	bcf	8,3	;volatile
  8999  081E                     l76:
  9000  081E  0008               	return
  9001  081F                     __end_of_Lcd_Cmd:
  9002                           
  9003                           	psect	text30
  9004  1ADE                     __ptext30:	
  9005 ;; *************** function _Lcd_Port *****************
  9006 ;; Defined at:
  9007 ;;		line 23 in file "LCD.c"
  9008 ;; Parameters:    Size  Location     Type
  9009 ;;  a               1    wreg     unsigned char 
  9010 ;; Auto vars:     Size  Location     Type
  9011 ;;  a               1    3[COMMON] unsigned char 
  9012 ;; Return value:  Size  Location     Type
  9013 ;;                  1    wreg      void 
  9014 ;; Registers used:
  9015 ;;		wreg
  9016 ;; Tracked objects:
  9017 ;;		On entry : 0/0
  9018 ;;		On exit  : 0/0
  9019 ;;		Unchanged: 0/0
  9020 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9021 ;;      Params:         0       0       0       0       0
  9022 ;;      Locals:         1       0       0       0       0
  9023 ;;      Temps:          0       0       0       0       0
  9024 ;;      Totals:         1       0       0       0       0
  9025 ;;Total ram usage:        1 bytes
  9026 ;; Hardware stack levels used:    1
  9027 ;; Hardware stack levels required when called:    1
  9028 ;; This function calls:
  9029 ;;		Nothing
  9030 ;; This function is called by:
  9031 ;;		_Lcd_Cmd
  9032 ;;		_Lcd_Init
  9033 ;;		_Lcd_Write_Char
  9034 ;; This function uses a non-reentrant model
  9035 ;;
  9036                           
  9037                           
  9038                           ;psect for function _Lcd_Port
  9039  1ADE                     _Lcd_Port:
  9040                           
  9041                           ;incstack = 0
  9042                           ; Regs used in _Lcd_Port: [wreg]
  9043                           ;Lcd_Port@a stored from wreg
  9044  1ADE  00F3               	movwf	Lcd_Port@a
  9045  1ADF                     l3462:
  9046                           
  9047                           ;LCD.c: 23: void Lcd_Port(char a);LCD.c: 24: {;LCD.c: 26:     PORTC = a;
  9048  1ADF  0873               	movf	Lcd_Port@a,w
  9049  1AE0  1283               	bcf	3,5	;RP0=0, select bank0
  9050  1AE1  1303               	bcf	3,6	;RP1=0, select bank0
  9051  1AE2  0087               	movwf	7	;volatile
  9052  1AE3                     l73:
  9053  1AE3  0008               	return
  9054  1AE4                     __end_of_Lcd_Port:
  9055                           
  9056                           	psect	text31
  9057  1BB7                     __ptext31:	
  9058 ;; *************** function _AADC *****************
  9059 ;; Defined at:
  9060 ;;		line 15 in file "ADC.c"
  9061 ;; Parameters:    Size  Location     Type
  9062 ;;  banderaADC      1    wreg     unsigned char 
  9063 ;;  Num_Pot         1    3[COMMON] unsigned char 
  9064 ;; Auto vars:     Size  Location     Type
  9065 ;;  banderaADC      1    6[COMMON] unsigned char 
  9066 ;;  pot             1    5[COMMON] unsigned char 
  9067 ;; Return value:  Size  Location     Type
  9068 ;;                  1    wreg      unsigned char 
  9069 ;; Registers used:
  9070 ;;		wreg, status,2, status,0
  9071 ;; Tracked objects:
  9072 ;;		On entry : 0/0
  9073 ;;		On exit  : 0/0
  9074 ;;		Unchanged: 0/0
  9075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9076 ;;      Params:         1       0       0       0       0
  9077 ;;      Locals:         2       0       0       0       0
  9078 ;;      Temps:          1       0       0       0       0
  9079 ;;      Totals:         4       0       0       0       0
  9080 ;;Total ram usage:        4 bytes
  9081 ;; Hardware stack levels used:    1
  9082 ;; Hardware stack levels required when called:    1
  9083 ;; This function calls:
  9084 ;;		Nothing
  9085 ;; This function is called by:
  9086 ;;		_main
  9087 ;; This function uses a non-reentrant model
  9088 ;;
  9089                           
  9090                           
  9091                           ;psect for function _AADC
  9092  1BB7                     _AADC:
  9093                           
  9094                           ;incstack = 0
  9095                           ; Regs used in _AADC: [wreg+status,2+status,0]
  9096                           ;AADC@banderaADC stored from wreg
  9097  1BB7  00F6               	movwf	AADC@banderaADC
  9098  1BB8                     l3060:
  9099                           
  9100                           ;ADC.c: 16:     uint8_t pot;;ADC.c: 17:     ADCON1bits.ADFM = 0;
  9101  1BB8  1683               	bsf	3,5	;RP0=1, select bank1
  9102  1BB9  1303               	bcf	3,6	;RP1=0, select bank1
  9103  1BBA  139F               	bcf	31,7	;volatile
  9104  1BBB                     l3062:
  9105                           
  9106                           ;ADC.c: 18:     INTCON = 0b11101000;
  9107  1BBB  30E8               	movlw	232
  9108  1BBC  008B               	movwf	11	;volatile
  9109  1BBD                     l3064:
  9110                           
  9111                           ;ADC.c: 22:     PIE1bits.ADIE = 1;
  9112  1BBD  170C               	bsf	12,6	;volatile
  9113  1BBE                     l3066:
  9114                           
  9115                           ;ADC.c: 23:     PIR1bits.ADIF = 0;
  9116  1BBE  1283               	bcf	3,5	;RP0=0, select bank0
  9117  1BBF  1303               	bcf	3,6	;RP1=0, select bank0
  9118  1BC0  130C               	bcf	12,6	;volatile
  9119  1BC1                     l3068:
  9120                           
  9121                           ;ADC.c: 24:     if (banderaADC == 1 && Num_Pot ==1){
  9122  1BC1  0376               	decf	AADC@banderaADC,w
  9123  1BC2  1D03               	btfss	3,2
  9124  1BC3  2BC5               	goto	u5061
  9125  1BC4  2BC6               	goto	u5060
  9126  1BC5                     u5061:
  9127  1BC5  2BD7               	goto	l3080
  9128  1BC6                     u5060:
  9129  1BC6                     l3070:
  9130  1BC6  0373               	decf	AADC@Num_Pot,w
  9131  1BC7  1D03               	btfss	3,2
  9132  1BC8  2BCA               	goto	u5071
  9133  1BC9  2BCB               	goto	u5070
  9134  1BCA                     u5071:
  9135  1BCA  2BD7               	goto	l3080
  9136  1BCB                     u5070:
  9137  1BCB                     l3072:
  9138                           
  9139                           ;ADC.c: 25:          ADCON0 = 0b01000001;
  9140  1BCB  3041               	movlw	65
  9141  1BCC  009F               	movwf	31	;volatile
  9142                           
  9143                           ;ADC.c: 26:         _delay((unsigned long)((20)*(8000000/4000000.0)));
  9144  1BCD  300D               	movlw	13
  9145  1BCE  00F4               	movwf	??_AADC
  9146  1BCF                     u7147:
  9147  1BCF  0BF4               	decfsz	??_AADC,f
  9148  1BD0  2BCF               	goto	u7147
  9149  1BD1                     l3074:
  9150                           
  9151                           ;ADC.c: 27:         ADCON0bits.GO = 1;
  9152  1BD1  1283               	bcf	3,5	;RP0=0, select bank0
  9153  1BD2  1303               	bcf	3,6	;RP1=0, select bank0
  9154  1BD3  149F               	bsf	31,1	;volatile
  9155  1BD4                     l3076:
  9156  1BD4                     l3078:
  9157                           
  9158                           ;ADC.c: 29:         pot=1;
  9159  1BD4  01F5               	clrf	AADC@pot
  9160  1BD5  0AF5               	incf	AADC@pot,f
  9161                           
  9162                           ;ADC.c: 30:     } else if (banderaADC==1 && Num_Pot ==0){
  9163  1BD6  2BEB               	goto	l123
  9164  1BD7                     l3080:
  9165  1BD7  0376               	decf	AADC@banderaADC,w
  9166  1BD8  1D03               	btfss	3,2
  9167  1BD9  2BDB               	goto	u5081
  9168  1BDA  2BDC               	goto	u5080
  9169  1BDB                     u5081:
  9170  1BDB  2BEB               	goto	l123
  9171  1BDC                     u5080:
  9172  1BDC                     l3082:
  9173  1BDC  0873               	movf	AADC@Num_Pot,w
  9174  1BDD  1D03               	btfss	3,2
  9175  1BDE  2BE0               	goto	u5091
  9176  1BDF  2BE1               	goto	u5090
  9177  1BE0                     u5091:
  9178  1BE0  2BEB               	goto	l123
  9179  1BE1                     u5090:
  9180  1BE1                     l3084:
  9181                           
  9182                           ;ADC.c: 31:         ADCON0 = 0b01000101;
  9183  1BE1  3045               	movlw	69
  9184  1BE2  009F               	movwf	31	;volatile
  9185                           
  9186                           ;ADC.c: 32:         _delay((unsigned long)((20)*(8000000/4000000.0)));
  9187  1BE3  300D               	movlw	13
  9188  1BE4  00F4               	movwf	??_AADC
  9189  1BE5                     u7157:
  9190  1BE5  0BF4               	decfsz	??_AADC,f
  9191  1BE6  2BE5               	goto	u7157
  9192  1BE7                     l3086:
  9193                           
  9194                           ;ADC.c: 33:         ADCON0bits.GO = 1;
  9195  1BE7  1283               	bcf	3,5	;RP0=0, select bank0
  9196  1BE8  1303               	bcf	3,6	;RP1=0, select bank0
  9197  1BE9  149F               	bsf	31,1	;volatile
  9198  1BEA                     l3088:
  9199  1BEA                     l3090:
  9200                           
  9201                           ;ADC.c: 35:         pot=0;
  9202  1BEA  01F5               	clrf	AADC@pot
  9203  1BEB                     l123:
  9204                           
  9205                           ;ADC.c: 37:     return(pot);
  9206  1BEB  0875               	movf	AADC@pot,w
  9207  1BEC                     l125:
  9208  1BEC  0008               	return
  9209  1BED                     __end_of_AADC:
  9210                           
  9211                           	psect	text32
  9212  07D3                     __ptext32:	
  9213 ;; *************** function _ISR *****************
  9214 ;; Defined at:
  9215 ;;		line 71 in file "main.c"
  9216 ;; Parameters:    Size  Location     Type
  9217 ;;		None
  9218 ;; Auto vars:     Size  Location     Type
  9219 ;;		None
  9220 ;; Return value:  Size  Location     Type
  9221 ;;                  1    wreg      void 
  9222 ;; Registers used:
  9223 ;;		wreg, status,2, status,0
  9224 ;; Tracked objects:
  9225 ;;		On entry : 0/0
  9226 ;;		On exit  : 0/0
  9227 ;;		Unchanged: 0/0
  9228 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9229 ;;      Params:         0       0       0       0       0
  9230 ;;      Locals:         0       0       0       0       0
  9231 ;;      Temps:          3       0       0       0       0
  9232 ;;      Totals:         3       0       0       0       0
  9233 ;;Total ram usage:        3 bytes
  9234 ;; Hardware stack levels used:    1
  9235 ;; This function calls:
  9236 ;;		Nothing
  9237 ;; This function is called by:
  9238 ;;		Interrupt level 1
  9239 ;; This function uses a non-reentrant model
  9240 ;;
  9241                           
  9242                           
  9243                           ;psect for function _ISR
  9244  07D3                     _ISR:
  9245  07D3                     i1l3378:
  9246                           
  9247                           ;main.c: 72:     if (PIR1bits.ADIF==1){
  9248  07D3  1283               	bcf	3,5	;RP0=0, select bank0
  9249  07D4  1303               	bcf	3,6	;RP1=0, select bank0
  9250  07D5  1F0C               	btfss	12,6	;volatile
  9251  07D6  2FD8               	goto	u562_21
  9252  07D7  2FD9               	goto	u562_20
  9253  07D8                     u562_21:
  9254  07D8  2FF8               	goto	i1l56
  9255  07D9                     u562_20:
  9256  07D9                     i1l3380:
  9257                           
  9258                           ;main.c: 73:         if (pot ==1){
  9259  07D9  036C               	decf	_pot,w
  9260  07DA  1D03               	btfss	3,2
  9261  07DB  2FDD               	goto	u563_21
  9262  07DC  2FDE               	goto	u563_20
  9263  07DD                     u563_21:
  9264  07DD  2FE8               	goto	i1l3388
  9265  07DE                     u563_20:
  9266  07DE                     i1l3382:
  9267                           
  9268                           ;main.c: 74:             S1=ADRESH;
  9269  07DE  081E               	movf	30,w	;volatile
  9270  07DF  00F0               	movwf	??_ISR
  9271  07E0  0870               	movf	??_ISR,w
  9272  07E1  1683               	bsf	3,5	;RP0=1, select bank1
  9273  07E2  1303               	bcf	3,6	;RP1=0, select bank1
  9274  07E3  00EA               	movwf	_S1^(0+128)
  9275  07E4                     i1l3384:
  9276                           
  9277                           ;main.c: 75:             Num_Pot=0;
  9278  07E4  01EB               	clrf	_Num_Pot^(0+128)
  9279  07E5                     i1l3386:
  9280                           
  9281                           ;main.c: 76:             banderaADC=1;
  9282  07E5  01EC               	clrf	_banderaADC^(0+128)
  9283  07E6  0AEC               	incf	_banderaADC^(0+128),f
  9284                           
  9285                           ;main.c: 77:         }else if(pot ==0){
  9286  07E7  2FF6               	goto	i1l3396
  9287  07E8                     i1l3388:
  9288  07E8  086C               	movf	_pot,w
  9289  07E9  1D03               	btfss	3,2
  9290  07EA  2FEC               	goto	u564_21
  9291  07EB  2FED               	goto	u564_20
  9292  07EC                     u564_21:
  9293  07EC  2FF6               	goto	i1l3396
  9294  07ED                     u564_20:
  9295  07ED                     i1l3390:
  9296                           
  9297                           ;main.c: 78:             S2=ADRESH;
  9298  07ED  081E               	movf	30,w	;volatile
  9299  07EE  00F0               	movwf	??_ISR
  9300  07EF  0870               	movf	??_ISR,w
  9301  07F0  1683               	bsf	3,5	;RP0=1, select bank1
  9302  07F1  1303               	bcf	3,6	;RP1=0, select bank1
  9303  07F2  00E9               	movwf	_S2^(0+128)
  9304  07F3                     i1l3392:
  9305                           
  9306                           ;main.c: 79:             Num_Pot=1;
  9307  07F3  01EB               	clrf	_Num_Pot^(0+128)
  9308  07F4  0AEB               	incf	_Num_Pot^(0+128),f
  9309  07F5  2FE5               	goto	i1l3386
  9310  07F6                     i1l3396:
  9311                           
  9312                           ;main.c: 82:         PIR1bits.ADIF=0;
  9313  07F6  1283               	bcf	3,5	;RP0=0, select bank0
  9314  07F7  130C               	bcf	12,6	;volatile
  9315  07F8                     i1l56:
  9316  07F8  0872               	movf	??_ISR+2,w
  9317  07F9  008A               	movwf	10
  9318  07FA  0E71               	swapf	??_ISR+1,w
  9319  07FB  0083               	movwf	3
  9320  07FC  0EFE               	swapf	btemp,f
  9321  07FD  0E7E               	swapf	btemp,w
  9322  07FE  0009               	retfie
  9323  07FF                     __end_of_ISR:
  9324  007E                     btemp	set	126	;btemp
  9325  007E                     wtemp0	set	126
  9326                           
  9327                           	psect	intentry
  9328  0004                     __pintentry:	
  9329                           ;incstack = 0
  9330                           ; Regs used in _ISR: [wreg+status,2+status,0]
  9331                           
  9332  0004                     interrupt_function:
  9333  007E                     saved_w	set	btemp
  9334  0004  00FE               	movwf	btemp
  9335  0005  0E03               	swapf	3,w
  9336  0006  00F1               	movwf	??_ISR+1
  9337  0007  080A               	movf	10,w
  9338  0008  00F2               	movwf	??_ISR+2
  9339  0009  120A  118A  2FD3   	ljmp	_ISR
  9340                           
  9341                           	psect	config
  9342                           
  9343                           ;Config register CONFIG1 @ 0x2007
  9344                           ;	Oscillator Selection bits
  9345                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  9346                           ;	Watchdog Timer Enable bit
  9347                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9348                           ;	Power-up Timer Enable bit
  9349                           ;	PWRTE = OFF, PWRT disabled
  9350                           ;	RE3/MCLR pin function select bit
  9351                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9352                           ;	Code Protection bit
  9353                           ;	CP = OFF, Program memory code protection is disabled
  9354                           ;	Data Code Protection bit
  9355                           ;	CPD = OFF, Data memory code protection is disabled
  9356                           ;	Brown Out Reset Selection bits
  9357                           ;	BOREN = OFF, BOR disabled
  9358                           ;	Internal External Switchover bit
  9359                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9360                           ;	Fail-Safe Clock Monitor Enabled bit
  9361                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9362                           ;	Low Voltage Programming Enable bit
  9363                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9364                           ;	In-Circuit Debugger Mode bit
  9365                           ;	DEBUG = 0x1, unprogrammed default
  9366  2007                     	org	8199
  9367  2007  20D5               	dw	8405
  9368                           
  9369                           ;Config register CONFIG2 @ 0x2008
  9370                           ;	Brown-out Reset Selection bit
  9371                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9372                           ;	Flash Program Memory Self Write Enable bits
  9373                           ;	WRT = OFF, Write protection off
  9374  2008                     	org	8200
  9375  2008  3FFF               	dw	16383
  9376                           
  9377                           	psect	text1_split_1
  9378  002E                     u6730:
  9379  002E                     l3924:
  9380  002E  1683               	bsf	3,5	;RP0=1, select bank1
  9381  002F  1303               	bcf	3,6	;RP1=0, select bank1
  9382  0030  0848               	movf	(sprintf@fval+3)^(0+128),w
  9383  0031  1283               	bcf	3,5	;RP0=0, select bank0
  9384  0032  1303               	bcf	3,6	;RP1=0, select bank0
  9385  0033  00A3               	movwf	___fleq@ff1+3
  9386  0034  1683               	bsf	3,5	;RP0=1, select bank1
  9387  0035  1303               	bcf	3,6	;RP1=0, select bank1
  9388  0036  0847               	movf	(sprintf@fval+2)^(0+128),w
  9389  0037  1283               	bcf	3,5	;RP0=0, select bank0
  9390  0038  1303               	bcf	3,6	;RP1=0, select bank0
  9391  0039  00A2               	movwf	___fleq@ff1+2
  9392  003A  1683               	bsf	3,5	;RP0=1, select bank1
  9393  003B  1303               	bcf	3,6	;RP1=0, select bank1
  9394  003C  0846               	movf	(sprintf@fval+1)^(0+128),w
  9395  003D  1283               	bcf	3,5	;RP0=0, select bank0
  9396  003E  1303               	bcf	3,6	;RP1=0, select bank0
  9397  003F  00A1               	movwf	___fleq@ff1+1
  9398  0040  1683               	bsf	3,5	;RP0=1, select bank1
  9399  0041  1303               	bcf	3,6	;RP1=0, select bank1
  9400  0042  0845               	movf	sprintf@fval^(0+128),w
  9401  0043  1283               	bcf	3,5	;RP0=0, select bank0
  9402  0044  1303               	bcf	3,6	;RP1=0, select bank0
  9403  0045  00A0               	movwf	___fleq@ff1
  9404  0046  3000               	movlw	0
  9405  0047  00A7               	movwf	___fleq@ff2+3
  9406  0048  3000               	movlw	0
  9407  0049  00A6               	movwf	___fleq@ff2+2
  9408  004A  3000               	movlw	0
  9409  004B  00A5               	movwf	___fleq@ff2+1
  9410  004C  3000               	movlw	0
  9411  004D  00A4               	movwf	___fleq@ff2
  9412  004E  160A  158A  24C0  120A  118A  	fcall	___fleq
  9413  0053  1803               	btfsc	3,0
  9414  0054  2856               	goto	u6741
  9415  0055  2857               	goto	u6740
  9416  0056                     u6741:
  9417  0056  2939               	goto	l3944
  9418  0057                     u6740:
  9419  0057                     l3926:
  9420  0057  1683               	bsf	3,5	;RP0=1, select bank1
  9421  0058  1303               	bcf	3,6	;RP1=0, select bank1
  9422  0059  0848               	movf	(sprintf@fval+3)^(0+128),w
  9423  005A  1283               	bcf	3,5	;RP0=0, select bank0
  9424  005B  1303               	bcf	3,6	;RP1=0, select bank0
  9425  005C  00DA               	movwf	___fltol@f1+3
  9426  005D  1683               	bsf	3,5	;RP0=1, select bank1
  9427  005E  1303               	bcf	3,6	;RP1=0, select bank1
  9428  005F  0847               	movf	(sprintf@fval+2)^(0+128),w
  9429  0060  1283               	bcf	3,5	;RP0=0, select bank0
  9430  0061  1303               	bcf	3,6	;RP1=0, select bank0
  9431  0062  00D9               	movwf	___fltol@f1+2
  9432  0063  1683               	bsf	3,5	;RP0=1, select bank1
  9433  0064  1303               	bcf	3,6	;RP1=0, select bank1
  9434  0065  0846               	movf	(sprintf@fval+1)^(0+128),w
  9435  0066  1283               	bcf	3,5	;RP0=0, select bank0
  9436  0067  1303               	bcf	3,6	;RP1=0, select bank0
  9437  0068  00D8               	movwf	___fltol@f1+1
  9438  0069  1683               	bsf	3,5	;RP0=1, select bank1
  9439  006A  1303               	bcf	3,6	;RP1=0, select bank1
  9440  006B  0845               	movf	sprintf@fval^(0+128),w
  9441  006C  1283               	bcf	3,5	;RP0=0, select bank0
  9442  006D  1303               	bcf	3,6	;RP1=0, select bank0
  9443  006E  00D7               	movwf	___fltol@f1
  9444  006F  160A  158A  26E0  120A  118A  	fcall	___fltol
  9445  0074  1283               	bcf	3,5	;RP0=0, select bank0
  9446  0075  1303               	bcf	3,6	;RP1=0, select bank0
  9447  0076  085A               	movf	?___fltol+3,w
  9448  0077  0459               	iorwf	?___fltol+2,w
  9449  0078  0458               	iorwf	?___fltol+1,w
  9450  0079  0457               	iorwf	?___fltol,w
  9451  007A  1D03               	skipz
  9452  007B  287D               	goto	u6751
  9453  007C  287E               	goto	u6750
  9454  007D                     u6751:
  9455  007D  2939               	goto	l3944
  9456  007E                     u6750:
  9457  007E                     l3928:
  9458  007E  1683               	bsf	3,5	;RP0=1, select bank1
  9459  007F  1303               	bcf	3,6	;RP1=0, select bank1
  9460  0080  0844               	movf	(sprintf@eexp+1)^(0+128),w
  9461  0081  3A80               	xorlw	128
  9462  0082  00FF               	movwf	btemp+1
  9463  0083  3080               	movlw	128
  9464  0084  027F               	subwf	btemp+1,w
  9465  0085  1D03               	skipz
  9466  0086  2889               	goto	u6765
  9467  0087  3002               	movlw	2
  9468  0088  0243               	subwf	sprintf@eexp^(0+128),w
  9469  0089                     u6765:
  9470  0089  1C03               	skipc
  9471  008A  288C               	goto	u6761
  9472  008B  288D               	goto	u6760
  9473  008C                     u6761:
  9474  008C  2939               	goto	l3944
  9475  008D                     u6760:
  9476  008D                     l3930:
  9477                           
  9478                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9479  008D  1683               	bsf	3,5	;RP0=1, select bank1
  9480  008E  1303               	bcf	3,6	;RP1=0, select bank1
  9481  008F  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  9482  0090  1283               	bcf	3,5	;RP0=0, select bank0
  9483  0091  1303               	bcf	3,6	;RP1=0, select bank0
  9484  0092  00A3               	movwf	___flge@ff1+3
  9485  0093  1683               	bsf	3,5	;RP0=1, select bank1
  9486  0094  1303               	bcf	3,6	;RP1=0, select bank1
  9487  0095  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  9488  0096  1283               	bcf	3,5	;RP0=0, select bank0
  9489  0097  1303               	bcf	3,6	;RP1=0, select bank0
  9490  0098  00A2               	movwf	___flge@ff1+2
  9491  0099  1683               	bsf	3,5	;RP0=1, select bank1
  9492  009A  1303               	bcf	3,6	;RP1=0, select bank1
  9493  009B  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  9494  009C  1283               	bcf	3,5	;RP0=0, select bank0
  9495  009D  1303               	bcf	3,6	;RP1=0, select bank0
  9496  009E  00A1               	movwf	___flge@ff1+1
  9497  009F  1683               	bsf	3,5	;RP0=1, select bank1
  9498  00A0  1303               	bcf	3,6	;RP1=0, select bank1
  9499  00A1  083F               	movf	sprintf@tmpval^(0+128),w
  9500  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  9501  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  9502  00A4  00A0               	movwf	___flge@ff1
  9503  00A5  3040               	movlw	64
  9504  00A6  00A7               	movwf	___flge@ff2+3
  9505  00A7  3089               	movlw	137
  9506  00A8  00A6               	movwf	___flge@ff2+2
  9507  00A9  3070               	movlw	112
  9508  00AA  00A5               	movwf	___flge@ff2+1
  9509  00AB  305F               	movlw	95
  9510  00AC  00A4               	movwf	___flge@ff2
  9511  00AD  160A  158A  275C  120A  118A  	fcall	___flge
  9512  00B2  1803               	btfsc	3,0
  9513  00B3  28B5               	goto	u6771
  9514  00B4  28B6               	goto	u6770
  9515  00B5                     u6771:
  9516  00B5  28BF               	goto	l3934
  9517  00B6                     u6770:
  9518  00B6                     l3932:
  9519                           
  9520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  9521  00B6  30F7               	movlw	247
  9522  00B7  1683               	bsf	3,5	;RP0=1, select bank1
  9523  00B8  1303               	bcf	3,6	;RP1=0, select bank1
  9524  00B9  07C3               	addwf	sprintf@eexp^(0+128),f
  9525  00BA  1803               	skipnc
  9526  00BB  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  9527  00BC  30FF               	movlw	255
  9528  00BD  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  9529                           
  9530                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9531  00BE  28C7               	goto	l3936
  9532  00BF                     l3934:
  9533                           
  9534                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  9535  00BF  30F8               	movlw	248
  9536  00C0  1683               	bsf	3,5	;RP0=1, select bank1
  9537  00C1  1303               	bcf	3,6	;RP1=0, select bank1
  9538  00C2  07C3               	addwf	sprintf@eexp^(0+128),f
  9539  00C3  1803               	skipnc
  9540  00C4  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
  9541  00C5  30FF               	movlw	255
  9542  00C6  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
  9543  00C7                     l3936:
  9544                           
  9545                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9546  00C7  0843               	movf	sprintf@eexp^(0+128),w
  9547  00C8  120A  158A  249D  120A  118A  	fcall	_scale
  9548  00CD  1283               	bcf	3,5	;RP0=0, select bank0
  9549  00CE  1303               	bcf	3,6	;RP1=0, select bank0
  9550  00CF  0847               	movf	?_scale+3,w
  9551  00D0  1683               	bsf	3,5	;RP0=1, select bank1
  9552  00D1  1303               	bcf	3,6	;RP1=0, select bank1
  9553  00D2  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
  9554  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  9555  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  9556  00D5  0846               	movf	?_scale+2,w
  9557  00D6  1683               	bsf	3,5	;RP0=1, select bank1
  9558  00D7  1303               	bcf	3,6	;RP1=0, select bank1
  9559  00D8  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
  9560  00D9  1283               	bcf	3,5	;RP0=0, select bank0
  9561  00DA  1303               	bcf	3,6	;RP1=0, select bank0
  9562  00DB  0845               	movf	?_scale+1,w
  9563  00DC  1683               	bsf	3,5	;RP0=1, select bank1
  9564  00DD  1303               	bcf	3,6	;RP1=0, select bank1
  9565  00DE  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
  9566  00DF  1283               	bcf	3,5	;RP0=0, select bank0
  9567  00E0  1303               	bcf	3,6	;RP1=0, select bank0
  9568  00E1  0844               	movf	?_scale,w
  9569  00E2  1683               	bsf	3,5	;RP0=1, select bank1
  9570  00E3  1303               	bcf	3,6	;RP1=0, select bank1
  9571  00E4  00BF               	movwf	sprintf@tmpval^(0+128)
  9572  00E5                     l3938:
  9573  00E5  0848               	movf	(sprintf@fval+3)^(0+128),w
  9574  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  9575  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  9576  00E8  00A3               	movwf	__div_to_l_@f1+3
  9577  00E9  1683               	bsf	3,5	;RP0=1, select bank1
  9578  00EA  1303               	bcf	3,6	;RP1=0, select bank1
  9579  00EB  0847               	movf	(sprintf@fval+2)^(0+128),w
  9580  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  9581  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  9582  00EE  00A2               	movwf	__div_to_l_@f1+2
  9583  00EF  1683               	bsf	3,5	;RP0=1, select bank1
  9584  00F0  1303               	bcf	3,6	;RP1=0, select bank1
  9585  00F1  0846               	movf	(sprintf@fval+1)^(0+128),w
  9586  00F2  1283               	bcf	3,5	;RP0=0, select bank0
  9587  00F3  1303               	bcf	3,6	;RP1=0, select bank0
  9588  00F4  00A1               	movwf	__div_to_l_@f1+1
  9589  00F5  1683               	bsf	3,5	;RP0=1, select bank1
  9590  00F6  1303               	bcf	3,6	;RP1=0, select bank1
  9591  00F7  0845               	movf	sprintf@fval^(0+128),w
  9592  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  9593  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  9594  00FA  00A0               	movwf	__div_to_l_@f1
  9595  00FB  1683               	bsf	3,5	;RP0=1, select bank1
  9596  00FC  1303               	bcf	3,6	;RP1=0, select bank1
  9597  00FD  0842               	movf	(sprintf@tmpval+3)^(0+128),w
  9598  00FE  1283               	bcf	3,5	;RP0=0, select bank0
  9599  00FF  1303               	bcf	3,6	;RP1=0, select bank0
  9600  0100  00A7               	movwf	__div_to_l_@f2+3
  9601  0101  1683               	bsf	3,5	;RP0=1, select bank1
  9602  0102  1303               	bcf	3,6	;RP1=0, select bank1
  9603  0103  0841               	movf	(sprintf@tmpval+2)^(0+128),w
  9604  0104  1283               	bcf	3,5	;RP0=0, select bank0
  9605  0105  1303               	bcf	3,6	;RP1=0, select bank0
  9606  0106  00A6               	movwf	__div_to_l_@f2+2
  9607  0107  1683               	bsf	3,5	;RP0=1, select bank1
  9608  0108  1303               	bcf	3,6	;RP1=0, select bank1
  9609  0109  0840               	movf	(sprintf@tmpval+1)^(0+128),w
  9610  010A  1283               	bcf	3,5	;RP0=0, select bank0
  9611  010B  1303               	bcf	3,6	;RP1=0, select bank0
  9612  010C  00A5               	movwf	__div_to_l_@f2+1
  9613  010D  1683               	bsf	3,5	;RP0=1, select bank1
  9614  010E  1303               	bcf	3,6	;RP1=0, select bank1
  9615  010F  083F               	movf	sprintf@tmpval^(0+128),w
  9616  0110  1283               	bcf	3,5	;RP0=0, select bank0
  9617  0111  1303               	bcf	3,6	;RP1=0, select bank0
  9618  0112  00A4               	movwf	__div_to_l_@f2
  9619  0113  160A  118A  21B4  120A  118A  	fcall	__div_to_l_
  9620  0118  1283               	bcf	3,5	;RP0=0, select bank0
  9621  0119  1303               	bcf	3,6	;RP1=0, select bank0
  9622  011A  0823               	movf	?__div_to_l_+3,w
  9623  011B  1683               	bsf	3,5	;RP0=1, select bank1
  9624  011C  1303               	bcf	3,6	;RP1=0, select bank1
  9625  011D  00BA               	movwf	(sprintf@val+3)^(0+128)
  9626  011E  1283               	bcf	3,5	;RP0=0, select bank0
  9627  011F  1303               	bcf	3,6	;RP1=0, select bank0
  9628  0120  0822               	movf	?__div_to_l_+2,w
  9629  0121  1683               	bsf	3,5	;RP0=1, select bank1
  9630  0122  1303               	bcf	3,6	;RP1=0, select bank1
  9631  0123  00B9               	movwf	(sprintf@val+2)^(0+128)
  9632  0124  1283               	bcf	3,5	;RP0=0, select bank0
  9633  0125  1303               	bcf	3,6	;RP1=0, select bank0
  9634  0126  0821               	movf	?__div_to_l_+1,w
  9635  0127  1683               	bsf	3,5	;RP0=1, select bank1
  9636  0128  1303               	bcf	3,6	;RP1=0, select bank1
  9637  0129  00B8               	movwf	(sprintf@val+1)^(0+128)
  9638  012A  1283               	bcf	3,5	;RP0=0, select bank0
  9639  012B  1303               	bcf	3,6	;RP1=0, select bank0
  9640  012C  0820               	movf	?__div_to_l_,w
  9641  012D  1683               	bsf	3,5	;RP0=1, select bank1
  9642  012E  1303               	bcf	3,6	;RP1=0, select bank1
  9643  012F  00B7               	movwf	sprintf@val^(0+128)
  9644  0130                     l3942:
  9645                           
  9646                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9647  0130  3000               	movlw	0
  9648  0131  00C8               	movwf	(sprintf@fval+3)^(0+128)
  9649  0132  3000               	movlw	0
  9650  0133  00C7               	movwf	(sprintf@fval+2)^(0+128)
  9651  0134  3000               	movlw	0
  9652  0135  00C6               	movwf	(sprintf@fval+1)^(0+128)
  9653  0136  3000               	movlw	0
  9654  0137  00C5               	movwf	sprintf@fval^(0+128)
  9655                           
  9656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9657  0138  299F               	goto	l3950
  9658  0139                     l3944:
  9659                           
  9660                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9661  0139  1683               	bsf	3,5	;RP0=1, select bank1
  9662  013A  1303               	bcf	3,6	;RP1=0, select bank1
  9663  013B  0848               	movf	(sprintf@fval+3)^(0+128),w
  9664  013C  1283               	bcf	3,5	;RP0=0, select bank0
  9665  013D  1303               	bcf	3,6	;RP1=0, select bank0
  9666  013E  00DA               	movwf	___fltol@f1+3
  9667  013F  1683               	bsf	3,5	;RP0=1, select bank1
  9668  0140  1303               	bcf	3,6	;RP1=0, select bank1
  9669  0141  0847               	movf	(sprintf@fval+2)^(0+128),w
  9670  0142  1283               	bcf	3,5	;RP0=0, select bank0
  9671  0143  1303               	bcf	3,6	;RP1=0, select bank0
  9672  0144  00D9               	movwf	___fltol@f1+2
  9673  0145  1683               	bsf	3,5	;RP0=1, select bank1
  9674  0146  1303               	bcf	3,6	;RP1=0, select bank1
  9675  0147  0846               	movf	(sprintf@fval+1)^(0+128),w
  9676  0148  1283               	bcf	3,5	;RP0=0, select bank0
  9677  0149  1303               	bcf	3,6	;RP1=0, select bank0
  9678  014A  00D8               	movwf	___fltol@f1+1
  9679  014B  1683               	bsf	3,5	;RP0=1, select bank1
  9680  014C  1303               	bcf	3,6	;RP1=0, select bank1
  9681  014D  0845               	movf	sprintf@fval^(0+128),w
  9682  014E  1283               	bcf	3,5	;RP0=0, select bank0
  9683  014F  1303               	bcf	3,6	;RP1=0, select bank0
  9684  0150  00D7               	movwf	___fltol@f1
  9685  0151  160A  158A  26E0  120A  118A  	fcall	___fltol
  9686  0156  1283               	bcf	3,5	;RP0=0, select bank0
  9687  0157  1303               	bcf	3,6	;RP1=0, select bank0
  9688  0158  085A               	movf	?___fltol+3,w
  9689  0159  1683               	bsf	3,5	;RP0=1, select bank1
  9690  015A  1303               	bcf	3,6	;RP1=0, select bank1
  9691  015B  00BA               	movwf	(sprintf@val+3)^(0+128)
  9692  015C  1283               	bcf	3,5	;RP0=0, select bank0
  9693  015D  1303               	bcf	3,6	;RP1=0, select bank0
  9694  015E  0859               	movf	?___fltol+2,w
  9695  015F  1683               	bsf	3,5	;RP0=1, select bank1
  9696  0160  1303               	bcf	3,6	;RP1=0, select bank1
  9697  0161  00B9               	movwf	(sprintf@val+2)^(0+128)
  9698  0162  1283               	bcf	3,5	;RP0=0, select bank0
  9699  0163  1303               	bcf	3,6	;RP1=0, select bank0
  9700  0164  0858               	movf	?___fltol+1,w
  9701  0165  1683               	bsf	3,5	;RP0=1, select bank1
  9702  0166  1303               	bcf	3,6	;RP1=0, select bank1
  9703  0167  00B8               	movwf	(sprintf@val+1)^(0+128)
  9704  0168  1283               	bcf	3,5	;RP0=0, select bank0
  9705  0169  1303               	bcf	3,6	;RP1=0, select bank0
  9706  016A  0857               	movf	?___fltol,w
  9707  016B  1683               	bsf	3,5	;RP0=1, select bank1
  9708  016C  1303               	bcf	3,6	;RP1=0, select bank1
  9709  016D  00B7               	movwf	sprintf@val^(0+128)
  9710  016E                     l3946:
  9711                           
  9712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9713  016E  083A               	movf	(sprintf@val+3)^(0+128),w
  9714  016F  00F6               	movwf	___xxtofl@val+3
  9715  0170  0839               	movf	(sprintf@val+2)^(0+128),w
  9716  0171  00F5               	movwf	___xxtofl@val+2
  9717  0172  0838               	movf	(sprintf@val+1)^(0+128),w
  9718  0173  00F4               	movwf	___xxtofl@val+1
  9719  0174  0837               	movf	sprintf@val^(0+128),w
  9720  0175  00F3               	movwf	___xxtofl@val
  9721  0176  3000               	movlw	0
  9722  0177  160A  118A  203B  120A  118A  	fcall	___xxtofl
  9723  017C  0876               	movf	?___xxtofl+3,w
  9724  017D  1683               	bsf	3,5	;RP0=1, select bank1
  9725  017E  1303               	bcf	3,6	;RP1=0, select bank1
  9726  017F  00A3               	movwf	(___flsub@a+3)^(0+128)
  9727  0180  0875               	movf	?___xxtofl+2,w
  9728  0181  00A2               	movwf	(___flsub@a+2)^(0+128)
  9729  0182  0874               	movf	?___xxtofl+1,w
  9730  0183  00A1               	movwf	(___flsub@a+1)^(0+128)
  9731  0184  0873               	movf	?___xxtofl,w
  9732  0185  00A0               	movwf	___flsub@a^(0+128)
  9733  0186  0848               	movf	(sprintf@fval+3)^(0+128),w
  9734  0187  00A7               	movwf	(___flsub@b+3)^(0+128)
  9735  0188  0847               	movf	(sprintf@fval+2)^(0+128),w
  9736  0189  00A6               	movwf	(___flsub@b+2)^(0+128)
  9737  018A  0846               	movf	(sprintf@fval+1)^(0+128),w
  9738  018B  00A5               	movwf	(___flsub@b+1)^(0+128)
  9739  018C  0845               	movf	sprintf@fval^(0+128),w
  9740  018D  00A4               	movwf	___flsub@b^(0+128)
  9741  018E  160A  158A  2510  120A  118A  	fcall	___flsub
  9742  0193  1683               	bsf	3,5	;RP0=1, select bank1
  9743  0194  1303               	bcf	3,6	;RP1=0, select bank1
  9744  0195  0823               	movf	(?___flsub+3)^(0+128),w
  9745  0196  00C8               	movwf	(sprintf@fval+3)^(0+128)
  9746  0197  0822               	movf	(?___flsub+2)^(0+128),w
  9747  0198  00C7               	movwf	(sprintf@fval+2)^(0+128)
  9748  0199  0821               	movf	(?___flsub+1)^(0+128),w
  9749  019A  00C6               	movwf	(sprintf@fval+1)^(0+128)
  9750  019B  0820               	movf	?___flsub^(0+128),w
  9751  019C  00C5               	movwf	sprintf@fval^(0+128)
  9752  019D                     l3948:
  9753                           
  9754                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  9755  019D  01C3               	clrf	sprintf@eexp^(0+128)
  9756  019E  01C4               	clrf	(sprintf@eexp+1)^(0+128)
  9757  019F                     l3950:
  9758                           
  9759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9760  019F  01CC               	clrf	sprintf@c^(0+128)
  9761  01A0  0ACC               	incf	sprintf@c^(0+128),f
  9762  01A1                     l3956:
  9763                           
  9764                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9765  01A1  084C               	movf	sprintf@c^(0+128),w
  9766  01A2  00AD               	movwf	??_sprintf^(0+128)
  9767  01A3  3001               	movlw	1
  9768  01A4                     u6785:
  9769  01A4  1003               	clrc
  9770  01A5  0DAD               	rlf	??_sprintf^(0+128),f
  9771  01A6  3EFF               	addlw	-1
  9772  01A7  1D03               	skipz
  9773  01A8  29A4               	goto	u6785
  9774  01A9  1003               	clrc
  9775  01AA  0D2D               	rlf	??_sprintf^(0+128),w
  9776  01AB  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9777  01AC  0084               	movwf	4
  9778  01AD  160A  158A  200A  120A  118A  	fcall	stringdir
  9779  01B2  00AE               	movwf	(??_sprintf+1)^(0+128)
  9780  01B3  160A  158A  200A  120A  118A  	fcall	stringdir
  9781  01B8  00AF               	movwf	((??_sprintf+1)^(0+128)+1)
  9782  01B9  160A  158A  200A  120A  118A  	fcall	stringdir
  9783  01BE  00B0               	movwf	((??_sprintf+1)^(0+128)+2)
  9784  01BF  160A  158A  200A  120A  118A  	fcall	stringdir
  9785  01C4  00B1               	movwf	((??_sprintf+1)^(0+128)+3)
  9786  01C5  0831               	movf	(??_sprintf+4)^(0+128),w
  9787  01C6  023A               	subwf	(sprintf@val+3)^(0+128),w
  9788  01C7  1D03               	skipz
  9789  01C8  29D3               	goto	u6795
  9790  01C9  0830               	movf	(??_sprintf+3)^(0+128),w
  9791  01CA  0239               	subwf	(sprintf@val+2)^(0+128),w
  9792  01CB  1D03               	skipz
  9793  01CC  29D3               	goto	u6795
  9794  01CD  082F               	movf	(??_sprintf+2)^(0+128),w
  9795  01CE  0238               	subwf	(sprintf@val+1)^(0+128),w
  9796  01CF  1D03               	skipz
  9797  01D0  29D3               	goto	u6795
  9798  01D1  082E               	movf	(??_sprintf+1)^(0+128),w
  9799  01D2  0237               	subwf	sprintf@val^(0+128),w
  9800  01D3                     u6795:
  9801  01D3  1803               	skipnc
  9802  01D4  29D6               	goto	u6791
  9803  01D5  29D7               	goto	u6790
  9804  01D6                     u6791:
  9805  01D6  29D8               	goto	l3960
  9806  01D7                     u6790:
  9807  01D7  29E2               	goto	l3962
  9808  01D8                     l3960:
  9809  01D8  3001               	movlw	1
  9810  01D9  00AD               	movwf	??_sprintf^(0+128)
  9811  01DA  082D               	movf	??_sprintf^(0+128),w
  9812  01DB  07CC               	addwf	sprintf@c^(0+128),f
  9813  01DC  300A               	movlw	10
  9814  01DD  064C               	xorwf	sprintf@c^(0+128),w
  9815  01DE  1D03               	btfss	3,2
  9816  01DF  29E1               	goto	u6801
  9817  01E0  29E2               	goto	u6800
  9818  01E1                     u6801:
  9819  01E1  29A1               	goto	l3956
  9820  01E2                     u6800:
  9821  01E2                     l3962:
  9822                           
  9823                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9824  01E2  084C               	movf	sprintf@c^(0+128),w
  9825  01E3  074A               	addwf	sprintf@prec^(0+128),w
  9826  01E4  00AD               	movwf	??_sprintf^(0+128)
  9827  01E5  084B               	movf	(sprintf@prec+1)^(0+128),w
  9828  01E6  1803               	skipnc
  9829  01E7  0A4B               	incf	(sprintf@prec+1)^(0+128),w
  9830  01E8  00AE               	movwf	(??_sprintf^(0+128)+1)
  9831  01E9  0843               	movf	sprintf@eexp^(0+128),w
  9832  01EA  072D               	addwf	??_sprintf^(0+128),w
  9833  01EB  00AF               	movwf	(??_sprintf+2)^(0+128)
  9834  01EC  0844               	movf	(sprintf@eexp+1)^(0+128),w
  9835  01ED  1803               	skipnc
  9836  01EE  0A44               	incf	(sprintf@eexp+1)^(0+128),w
  9837  01EF  072E               	addwf	(??_sprintf+1)^(0+128),w
  9838  01F0  00B0               	movwf	(??_sprintf+3)^(0+128)
  9839  01F1  082F               	movf	(??_sprintf+2)^(0+128),w
  9840  01F2  02BD               	subwf	sprintf@width^(0+128),f
  9841  01F3  0830               	movf	(??_sprintf+3)^(0+128),w
  9842  01F4  1C03               	skipc
  9843  01F5  03BE               	decf	(sprintf@width+1)^(0+128),f
  9844  01F6  02BE               	subwf	(sprintf@width+1)^(0+128),f
  9845                           
  9846                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9847  01F7  084A               	movf	sprintf@prec^(0+128),w
  9848  01F8  044B               	iorwf	(sprintf@prec+1)^(0+128),w
  9849  01F9  1903               	btfsc	3,2
  9850  01FA  29FC               	goto	u6811
  9851  01FB  29FD               	goto	u6810
  9852  01FC                     u6811:
  9853  01FC  2A03               	goto	l3966
  9854  01FD                     u6810:
  9855  01FD                     l3964:
  9856                           
  9857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  9858  01FD  30FF               	movlw	255
  9859  01FE  07BD               	addwf	sprintf@width^(0+128),f
  9860  01FF  1803               	skipnc
  9861  0200  0ABE               	incf	(sprintf@width+1)^(0+128),f
  9862  0201  30FF               	movlw	255
  9863  0202  07BE               	addwf	(sprintf@width+1)^(0+128),f
  9864  0203                     l3966:
  9865                           
  9866                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  9867  0203  3003               	movlw	3
  9868  0204  053B               	andwf	sprintf@flag^(0+128),w
  9869  0205  00AD               	movwf	??_sprintf^(0+128)
  9870  0206  3000               	movlw	0
  9871  0207  053C               	andwf	(sprintf@flag+1)^(0+128),w
  9872  0208  00AE               	movwf	(??_sprintf+1)^(0+128)
  9873  0209  082D               	movf	??_sprintf^(0+128),w
  9874  020A  042E               	iorwf	(??_sprintf^(0+128)+1),w
  9875  020B  1903               	btfsc	3,2
  9876  020C  2A0E               	goto	u6821
  9877  020D  2A0F               	goto	u6820
  9878  020E                     u6821:
  9879  020E  2A24               	goto	l3976
  9880  020F                     u6820:
  9881  020F                     l3968:
  9882                           
  9883                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  9884  020F  30FF               	movlw	255
  9885  0210  07BD               	addwf	sprintf@width^(0+128),f
  9886  0211  1803               	skipnc
  9887  0212  0ABE               	incf	(sprintf@width+1)^(0+128),f
  9888  0213  30FF               	movlw	255
  9889  0214  07BE               	addwf	(sprintf@width+1)^(0+128),f
  9890  0215  2A24               	goto	l3976
  9891  0216                     l3970:
  9892                           
  9893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  9894  0216  3020               	movlw	32
  9895  0217  1683               	bsf	3,5	;RP0=1, select bank1
  9896  0218  1303               	bcf	3,6	;RP1=0, select bank1
  9897  0219  00AD               	movwf	??_sprintf^(0+128)
  9898  021A  0849               	movf	sprintf@sp^(0+128),w
  9899  021B  0084               	movwf	4
  9900  021C  082D               	movf	??_sprintf^(0+128),w
  9901  021D  1383               	bcf	3,7	;select IRP bank0
  9902  021E  0080               	movwf	0
  9903  021F                     l3972:
  9904  021F  3001               	movlw	1
  9905  0220  00AD               	movwf	??_sprintf^(0+128)
  9906  0221  082D               	movf	??_sprintf^(0+128),w
  9907  0222  07C9               	addwf	sprintf@sp^(0+128),f
  9908  0223  2A0F               	goto	l3968
  9909  0224                     l3976:
  9910                           
  9911                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  9912  0224  083E               	movf	(sprintf@width+1)^(0+128),w
  9913  0225  3A80               	xorlw	128
  9914  0226  00FF               	movwf	btemp+1
  9915  0227  3080               	movlw	128
  9916  0228  027F               	subwf	btemp+1,w
  9917  0229  1D03               	skipz
  9918  022A  2A2D               	goto	u6835
  9919  022B  3001               	movlw	1
  9920  022C  023D               	subwf	sprintf@width^(0+128),w
  9921  022D                     u6835:
  9922  022D  1803               	skipnc
  9923  022E  2A30               	goto	u6831
  9924  022F  2A31               	goto	u6830
  9925  0230                     u6831:
  9926  0230  2A16               	goto	l3970
  9927  0231                     u6830:
  9928  0231                     l3978:
  9929                           
  9930                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  9931  0231  3003               	movlw	3
  9932  0232  1683               	bsf	3,5	;RP0=1, select bank1
  9933  0233  1303               	bcf	3,6	;RP1=0, select bank1
  9934  0234  053B               	andwf	sprintf@flag^(0+128),w
  9935  0235  00AD               	movwf	??_sprintf^(0+128)
  9936  0236  3000               	movlw	0
  9937  0237  053C               	andwf	(sprintf@flag+1)^(0+128),w
  9938  0238  00AE               	movwf	(??_sprintf+1)^(0+128)
  9939  0239  082D               	movf	??_sprintf^(0+128),w
  9940  023A  042E               	iorwf	(??_sprintf^(0+128)+1),w
  9941  023B  1903               	btfsc	3,2
  9942  023C  2A3E               	goto	u6841
  9943  023D  2A3F               	goto	u6840
  9944  023E                     u6841:
  9945  023E  2AF1               	goto	l287
  9946  023F                     u6840:
  9947  023F                     l3980:
  9948                           
  9949                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  9950  023F  302D               	movlw	45
  9951  0240  00AD               	movwf	??_sprintf^(0+128)
  9952  0241  0849               	movf	sprintf@sp^(0+128),w
  9953  0242  0084               	movwf	4
  9954  0243  082D               	movf	??_sprintf^(0+128),w
  9955  0244  1383               	bcf	3,7	;select IRP bank0
  9956  0245  0080               	movwf	0
  9957  0246                     l3982:
  9958  0246  3001               	movlw	1
  9959  0247  00AD               	movwf	??_sprintf^(0+128)
  9960  0248  082D               	movf	??_sprintf^(0+128),w
  9961  0249  07C9               	addwf	sprintf@sp^(0+128),f
  9962  024A  2AF1               	goto	l287
  9963  024B                     l3984:
  9964                           
  9965                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  9966  024B  084C               	movf	sprintf@c^(0+128),w
  9967  024C  00AD               	movwf	??_sprintf^(0+128)
  9968  024D  3001               	movlw	1
  9969  024E                     u6855:
  9970  024E  1003               	clrc
  9971  024F  0DAD               	rlf	??_sprintf^(0+128),f
  9972  0250  3EFF               	addlw	-1
  9973  0251  1D03               	skipz
  9974  0252  2A4E               	goto	u6855
  9975  0253  1003               	clrc
  9976  0254  0D2D               	rlf	??_sprintf^(0+128),w
  9977  0255  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9978  0256  0084               	movwf	4
  9979  0257  160A  158A  200A  120A  118A  	fcall	stringdir
  9980  025C  1283               	bcf	3,5	;RP0=0, select bank0
  9981  025D  1303               	bcf	3,6	;RP1=0, select bank0
  9982  025E  00A0               	movwf	___lldiv@divisor
  9983  025F  160A  158A  200A  120A  118A  	fcall	stringdir
  9984  0264  00A1               	movwf	___lldiv@divisor+1
  9985  0265  160A  158A  200A  120A  118A  	fcall	stringdir
  9986  026A  00A2               	movwf	___lldiv@divisor+2
  9987  026B  160A  158A  200A  120A  118A  	fcall	stringdir
  9988  0270  00A3               	movwf	___lldiv@divisor+3
  9989  0271  1683               	bsf	3,5	;RP0=1, select bank1
  9990  0272  1303               	bcf	3,6	;RP1=0, select bank1
  9991  0273  083A               	movf	(sprintf@val+3)^(0+128),w
  9992  0274  1283               	bcf	3,5	;RP0=0, select bank0
  9993  0275  1303               	bcf	3,6	;RP1=0, select bank0
  9994  0276  00A7               	movwf	___lldiv@dividend+3
  9995  0277  1683               	bsf	3,5	;RP0=1, select bank1
  9996  0278  1303               	bcf	3,6	;RP1=0, select bank1
  9997  0279  0839               	movf	(sprintf@val+2)^(0+128),w
  9998  027A  1283               	bcf	3,5	;RP0=0, select bank0
  9999  027B  1303               	bcf	3,6	;RP1=0, select bank0
 10000  027C  00A6               	movwf	___lldiv@dividend+2
 10001  027D  1683               	bsf	3,5	;RP0=1, select bank1
 10002  027E  1303               	bcf	3,6	;RP1=0, select bank1
 10003  027F  0838               	movf	(sprintf@val+1)^(0+128),w
 10004  0280  1283               	bcf	3,5	;RP0=0, select bank0
 10005  0281  1303               	bcf	3,6	;RP1=0, select bank0
 10006  0282  00A5               	movwf	___lldiv@dividend+1
 10007  0283  1683               	bsf	3,5	;RP0=1, select bank1
 10008  0284  1303               	bcf	3,6	;RP1=0, select bank1
 10009  0285  0837               	movf	sprintf@val^(0+128),w
 10010  0286  1283               	bcf	3,5	;RP0=0, select bank0
 10011  0287  1303               	bcf	3,6	;RP1=0, select bank0
 10012  0288  00A4               	movwf	___lldiv@dividend
 10013  0289  160A  158A  260F  120A  118A  	fcall	___lldiv
 10014  028E  1283               	bcf	3,5	;RP0=0, select bank0
 10015  028F  1303               	bcf	3,6	;RP1=0, select bank0
 10016  0290  0823               	movf	?___lldiv+3,w
 10017  0291  1683               	bsf	3,5	;RP0=1, select bank1
 10018  0292  1303               	bcf	3,6	;RP1=0, select bank1
 10019  0293  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10020  0294  1283               	bcf	3,5	;RP0=0, select bank0
 10021  0295  1303               	bcf	3,6	;RP1=0, select bank0
 10022  0296  0822               	movf	?___lldiv+2,w
 10023  0297  1683               	bsf	3,5	;RP0=1, select bank1
 10024  0298  1303               	bcf	3,6	;RP1=0, select bank1
 10025  0299  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10026  029A  1283               	bcf	3,5	;RP0=0, select bank0
 10027  029B  1303               	bcf	3,6	;RP1=0, select bank0
 10028  029C  0821               	movf	?___lldiv+1,w
 10029  029D  1683               	bsf	3,5	;RP0=1, select bank1
 10030  029E  1303               	bcf	3,6	;RP1=0, select bank1
 10031  029F  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10032  02A0  1283               	bcf	3,5	;RP0=0, select bank0
 10033  02A1  1303               	bcf	3,6	;RP1=0, select bank0
 10034  02A2  0820               	movf	?___lldiv,w
 10035  02A3  1683               	bsf	3,5	;RP0=1, select bank1
 10036  02A4  1303               	bcf	3,6	;RP1=0, select bank1
 10037  02A5  00BF               	movwf	sprintf@tmpval^(0+128)
 10038  02A6                     l3986:
 10039                           
 10040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10041  02A6  3000               	movlw	0
 10042  02A7  1283               	bcf	3,5	;RP0=0, select bank0
 10043  02A8  1303               	bcf	3,6	;RP1=0, select bank0
 10044  02A9  00A3               	movwf	___llmod@divisor+3
 10045  02AA  3000               	movlw	0
 10046  02AB  00A2               	movwf	___llmod@divisor+2
 10047  02AC  3000               	movlw	0
 10048  02AD  00A1               	movwf	___llmod@divisor+1
 10049  02AE  300A               	movlw	10
 10050  02AF  00A0               	movwf	___llmod@divisor
 10051  02B0  1683               	bsf	3,5	;RP0=1, select bank1
 10052  02B1  1303               	bcf	3,6	;RP1=0, select bank1
 10053  02B2  0842               	movf	(sprintf@tmpval+3)^(0+128),w
 10054  02B3  1283               	bcf	3,5	;RP0=0, select bank0
 10055  02B4  1303               	bcf	3,6	;RP1=0, select bank0
 10056  02B5  00A7               	movwf	___llmod@dividend+3
 10057  02B6  1683               	bsf	3,5	;RP0=1, select bank1
 10058  02B7  1303               	bcf	3,6	;RP1=0, select bank1
 10059  02B8  0841               	movf	(sprintf@tmpval+2)^(0+128),w
 10060  02B9  1283               	bcf	3,5	;RP0=0, select bank0
 10061  02BA  1303               	bcf	3,6	;RP1=0, select bank0
 10062  02BB  00A6               	movwf	___llmod@dividend+2
 10063  02BC  1683               	bsf	3,5	;RP0=1, select bank1
 10064  02BD  1303               	bcf	3,6	;RP1=0, select bank1
 10065  02BE  0840               	movf	(sprintf@tmpval+1)^(0+128),w
 10066  02BF  1283               	bcf	3,5	;RP0=0, select bank0
 10067  02C0  1303               	bcf	3,6	;RP1=0, select bank0
 10068  02C1  00A5               	movwf	___llmod@dividend+1
 10069  02C2  1683               	bsf	3,5	;RP0=1, select bank1
 10070  02C3  1303               	bcf	3,6	;RP1=0, select bank1
 10071  02C4  083F               	movf	sprintf@tmpval^(0+128),w
 10072  02C5  1283               	bcf	3,5	;RP0=0, select bank0
 10073  02C6  1303               	bcf	3,6	;RP1=0, select bank0
 10074  02C7  00A4               	movwf	___llmod@dividend
 10075  02C8  160A  158A  2560  120A  118A  	fcall	___llmod
 10076  02CD  1283               	bcf	3,5	;RP0=0, select bank0
 10077  02CE  1303               	bcf	3,6	;RP1=0, select bank0
 10078  02CF  0823               	movf	?___llmod+3,w
 10079  02D0  1683               	bsf	3,5	;RP0=1, select bank1
 10080  02D1  1303               	bcf	3,6	;RP1=0, select bank1
 10081  02D2  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10082  02D3  1283               	bcf	3,5	;RP0=0, select bank0
 10083  02D4  1303               	bcf	3,6	;RP1=0, select bank0
 10084  02D5  0822               	movf	?___llmod+2,w
 10085  02D6  1683               	bsf	3,5	;RP0=1, select bank1
 10086  02D7  1303               	bcf	3,6	;RP1=0, select bank1
 10087  02D8  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10088  02D9  1283               	bcf	3,5	;RP0=0, select bank0
 10089  02DA  1303               	bcf	3,6	;RP1=0, select bank0
 10090  02DB  0821               	movf	?___llmod+1,w
 10091  02DC  1683               	bsf	3,5	;RP0=1, select bank1
 10092  02DD  1303               	bcf	3,6	;RP1=0, select bank1
 10093  02DE  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10094  02DF  1283               	bcf	3,5	;RP0=0, select bank0
 10095  02E0  1303               	bcf	3,6	;RP1=0, select bank0
 10096  02E1  0820               	movf	?___llmod,w
 10097  02E2  1683               	bsf	3,5	;RP0=1, select bank1
 10098  02E3  1303               	bcf	3,6	;RP1=0, select bank1
 10099  02E4  00BF               	movwf	sprintf@tmpval^(0+128)
 10100  02E5                     l3988:
 10101                           
 10102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10103  02E5  083F               	movf	sprintf@tmpval^(0+128),w
 10104  02E6  3E30               	addlw	48
 10105  02E7  00AD               	movwf	??_sprintf^(0+128)
 10106  02E8  0849               	movf	sprintf@sp^(0+128),w
 10107  02E9  0084               	movwf	4
 10108  02EA  082D               	movf	??_sprintf^(0+128),w
 10109  02EB  1383               	bcf	3,7	;select IRP bank0
 10110  02EC  0080               	movwf	0
 10111  02ED  3001               	movlw	1
 10112  02EE  00AD               	movwf	??_sprintf^(0+128)
 10113  02EF  082D               	movf	??_sprintf^(0+128),w
 10114  02F0  07C9               	addwf	sprintf@sp^(0+128),f
 10115  02F1                     l287:	
 10116                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
 10117                           
 10118                           
 10119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10120  02F1  3001               	movlw	1
 10121  02F2  02CC               	subwf	sprintf@c^(0+128),f
 10122  02F3  0A4C               	incf	sprintf@c^(0+128),w
 10123  02F4  1D03               	btfss	3,2
 10124  02F5  2AF7               	goto	u6861
 10125  02F6  2AF8               	goto	u6860
 10126  02F7                     u6861:
 10127  02F7  2A4B               	goto	l3984
 10128  02F8                     u6860:
 10129  02F8  2B0C               	goto	l3996
 10130  02F9                     l3990:
 10131                           
 10132                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10133  02F9  3030               	movlw	48
 10134  02FA  1683               	bsf	3,5	;RP0=1, select bank1
 10135  02FB  1303               	bcf	3,6	;RP1=0, select bank1
 10136  02FC  00AD               	movwf	??_sprintf^(0+128)
 10137  02FD  0849               	movf	sprintf@sp^(0+128),w
 10138  02FE  0084               	movwf	4
 10139  02FF  082D               	movf	??_sprintf^(0+128),w
 10140  0300  1383               	bcf	3,7	;select IRP bank0
 10141  0301  0080               	movwf	0
 10142  0302                     l3992:
 10143  0302  3001               	movlw	1
 10144  0303  00AD               	movwf	??_sprintf^(0+128)
 10145  0304  082D               	movf	??_sprintf^(0+128),w
 10146  0305  07C9               	addwf	sprintf@sp^(0+128),f
 10147  0306                     l3994:
 10148                           
 10149                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10150  0306  30FF               	movlw	255
 10151  0307  07C3               	addwf	sprintf@eexp^(0+128),f
 10152  0308  1803               	skipnc
 10153  0309  0AC4               	incf	(sprintf@eexp+1)^(0+128),f
 10154  030A  30FF               	movlw	255
 10155  030B  07C4               	addwf	(sprintf@eexp+1)^(0+128),f
 10156  030C                     l3996:
 10157                           
 10158                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10159  030C  0844               	movf	(sprintf@eexp+1)^(0+128),w
 10160  030D  3A80               	xorlw	128
 10161  030E  00FF               	movwf	btemp+1
 10162  030F  3080               	movlw	128
 10163  0310  027F               	subwf	btemp+1,w
 10164  0311  1D03               	skipz
 10165  0312  2B15               	goto	u6875
 10166  0313  3001               	movlw	1
 10167  0314  0243               	subwf	sprintf@eexp^(0+128),w
 10168  0315                     u6875:
 10169  0315  1803               	skipnc
 10170  0316  2B18               	goto	u6871
 10171  0317  2B19               	goto	u6870
 10172  0318                     u6871:
 10173  0318  2AF9               	goto	l3990
 10174  0319                     u6870:
 10175  0319                     l3998:
 10176                           
 10177                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10178  0319  1683               	bsf	3,5	;RP0=1, select bank1
 10179  031A  1303               	bcf	3,6	;RP1=0, select bank1
 10180  031B  084B               	movf	(sprintf@prec+1)^(0+128),w
 10181  031C  3A80               	xorlw	128
 10182  031D  00FF               	movwf	btemp+1
 10183  031E  3080               	movlw	128
 10184  031F  027F               	subwf	btemp+1,w
 10185  0320  1D03               	skipz
 10186  0321  2B24               	goto	u6885
 10187  0322  3009               	movlw	9
 10188  0323  024A               	subwf	sprintf@prec^(0+128),w
 10189  0324                     u6885:
 10190  0324  1C03               	skipc
 10191  0325  2B27               	goto	u6881
 10192  0326  2B28               	goto	u6880
 10193  0327                     u6881:
 10194  0327  2B2F               	goto	l4002
 10195  0328                     u6880:
 10196  0328                     l4000:
 10197                           
 10198                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10199  0328  3008               	movlw	8
 10200  0329  1683               	bsf	3,5	;RP0=1, select bank1
 10201  032A  1303               	bcf	3,6	;RP1=0, select bank1
 10202  032B  00AD               	movwf	??_sprintf^(0+128)
 10203  032C  082D               	movf	??_sprintf^(0+128),w
 10204  032D  00CC               	movwf	sprintf@c^(0+128)
 10205  032E  2B35               	goto	l294
 10206  032F                     l4002:
 10207                           
 10208                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10209  032F  1683               	bsf	3,5	;RP0=1, select bank1
 10210  0330  1303               	bcf	3,6	;RP1=0, select bank1
 10211  0331  084A               	movf	sprintf@prec^(0+128),w
 10212  0332  00AD               	movwf	??_sprintf^(0+128)
 10213  0333  082D               	movf	??_sprintf^(0+128),w
 10214  0334  00CC               	movwf	sprintf@c^(0+128)
 10215  0335                     l294:
 10216                           
 10217                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10218  0335  084C               	movf	sprintf@c^(0+128),w
 10219  0336  00AD               	movwf	??_sprintf^(0+128)
 10220  0337  01AE               	clrf	(??_sprintf^(0+128)+1)
 10221  0338  082D               	movf	??_sprintf^(0+128),w
 10222  0339  02CA               	subwf	sprintf@prec^(0+128),f
 10223  033A  082E               	movf	(??_sprintf+1)^(0+128),w
 10224  033B  1C03               	skipc
 10225  033C  03CB               	decf	(sprintf@prec+1)^(0+128),f
 10226  033D  02CB               	subwf	(sprintf@prec+1)^(0+128),f
 10227  033E                     l4004:
 10228                           
 10229                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10230  033E  084C               	movf	sprintf@c^(0+128),w
 10231  033F  1903               	btfsc	3,2
 10232  0340  2B42               	goto	u6891
 10233  0341  2B43               	goto	u6890
 10234  0342                     u6891:
 10235  0342  2B4E               	goto	l4010
 10236  0343                     u6890:
 10237  0343                     l4006:
 10238                           
 10239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10240  0343  302E               	movlw	46
 10241  0344  00AD               	movwf	??_sprintf^(0+128)
 10242  0345  0849               	movf	sprintf@sp^(0+128),w
 10243  0346  0084               	movwf	4
 10244  0347  082D               	movf	??_sprintf^(0+128),w
 10245  0348  1383               	bcf	3,7	;select IRP bank0
 10246  0349  0080               	movwf	0
 10247  034A                     l4008:
 10248  034A  3001               	movlw	1
 10249  034B  00AD               	movwf	??_sprintf^(0+128)
 10250  034C  082D               	movf	??_sprintf^(0+128),w
 10251  034D  07C9               	addwf	sprintf@sp^(0+128),f
 10252  034E                     l4010:
 10253                           
 10254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10255  034E  084C               	movf	sprintf@c^(0+128),w
 10256  034F  120A  158A  249D  120A  118A  	fcall	_scale
 10257  0354  1283               	bcf	3,5	;RP0=0, select bank0
 10258  0355  1303               	bcf	3,6	;RP1=0, select bank0
 10259  0356  0847               	movf	?_scale+3,w
 10260  0357  1683               	bsf	3,5	;RP0=1, select bank1
 10261  0358  1303               	bcf	3,6	;RP1=0, select bank1
 10262  0359  00B5               	movwf	(_sprintf$987+3)^(0+128)
 10263  035A  1283               	bcf	3,5	;RP0=0, select bank0
 10264  035B  1303               	bcf	3,6	;RP1=0, select bank0
 10265  035C  0846               	movf	?_scale+2,w
 10266  035D  1683               	bsf	3,5	;RP0=1, select bank1
 10267  035E  1303               	bcf	3,6	;RP1=0, select bank1
 10268  035F  00B4               	movwf	(_sprintf$987+2)^(0+128)
 10269  0360  1283               	bcf	3,5	;RP0=0, select bank0
 10270  0361  1303               	bcf	3,6	;RP1=0, select bank0
 10271  0362  0845               	movf	?_scale+1,w
 10272  0363  1683               	bsf	3,5	;RP0=1, select bank1
 10273  0364  1303               	bcf	3,6	;RP1=0, select bank1
 10274  0365  00B3               	movwf	(_sprintf$987+1)^(0+128)
 10275  0366  1283               	bcf	3,5	;RP0=0, select bank0
 10276  0367  1303               	bcf	3,6	;RP1=0, select bank0
 10277  0368  0844               	movf	?_scale,w
 10278  0369  1683               	bsf	3,5	;RP0=1, select bank1
 10279  036A  1303               	bcf	3,6	;RP1=0, select bank1
 10280  036B  00B2               	movwf	_sprintf$987^(0+128)
 10281  036C                     l4012:
 10282                           
 10283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10284  036C  0835               	movf	(_sprintf$987+3)^(0+128),w
 10285  036D  1283               	bcf	3,5	;RP0=0, select bank0
 10286  036E  1303               	bcf	3,6	;RP1=0, select bank0
 10287  036F  00B1               	movwf	___flmul@a+3
 10288  0370  1683               	bsf	3,5	;RP0=1, select bank1
 10289  0371  1303               	bcf	3,6	;RP1=0, select bank1
 10290  0372  0834               	movf	(_sprintf$987+2)^(0+128),w
 10291  0373  1283               	bcf	3,5	;RP0=0, select bank0
 10292  0374  1303               	bcf	3,6	;RP1=0, select bank0
 10293  0375  00B0               	movwf	___flmul@a+2
 10294  0376  1683               	bsf	3,5	;RP0=1, select bank1
 10295  0377  1303               	bcf	3,6	;RP1=0, select bank1
 10296  0378  0833               	movf	(_sprintf$987+1)^(0+128),w
 10297  0379  1283               	bcf	3,5	;RP0=0, select bank0
 10298  037A  1303               	bcf	3,6	;RP1=0, select bank0
 10299  037B  00AF               	movwf	___flmul@a+1
 10300  037C  1683               	bsf	3,5	;RP0=1, select bank1
 10301  037D  1303               	bcf	3,6	;RP1=0, select bank1
 10302  037E  0832               	movf	_sprintf$987^(0+128),w
 10303  037F  1283               	bcf	3,5	;RP0=0, select bank0
 10304  0380  1303               	bcf	3,6	;RP1=0, select bank0
 10305  0381  00AE               	movwf	___flmul@a
 10306  0382  1683               	bsf	3,5	;RP0=1, select bank1
 10307  0383  1303               	bcf	3,6	;RP1=0, select bank1
 10308  0384  0848               	movf	(sprintf@fval+3)^(0+128),w
 10309  0385  1283               	bcf	3,5	;RP0=0, select bank0
 10310  0386  1303               	bcf	3,6	;RP1=0, select bank0
 10311  0387  00AD               	movwf	___flmul@b+3
 10312  0388  1683               	bsf	3,5	;RP0=1, select bank1
 10313  0389  1303               	bcf	3,6	;RP1=0, select bank1
 10314  038A  0847               	movf	(sprintf@fval+2)^(0+128),w
 10315  038B  1283               	bcf	3,5	;RP0=0, select bank0
 10316  038C  1303               	bcf	3,6	;RP1=0, select bank0
 10317  038D  00AC               	movwf	___flmul@b+2
 10318  038E  1683               	bsf	3,5	;RP0=1, select bank1
 10319  038F  1303               	bcf	3,6	;RP1=0, select bank1
 10320  0390  0846               	movf	(sprintf@fval+1)^(0+128),w
 10321  0391  1283               	bcf	3,5	;RP0=0, select bank0
 10322  0392  1303               	bcf	3,6	;RP1=0, select bank0
 10323  0393  00AB               	movwf	___flmul@b+1
 10324  0394  1683               	bsf	3,5	;RP0=1, select bank1
 10325  0395  1303               	bcf	3,6	;RP1=0, select bank1
 10326  0396  0845               	movf	sprintf@fval^(0+128),w
 10327  0397  1283               	bcf	3,5	;RP0=0, select bank0
 10328  0398  1303               	bcf	3,6	;RP1=0, select bank0
 10329  0399  00AA               	movwf	___flmul@b
 10330  039A  120A  158A  213C  120A  118A  	fcall	___flmul
 10331  039F  1283               	bcf	3,5	;RP0=0, select bank0
 10332  03A0  1303               	bcf	3,6	;RP1=0, select bank0
 10333  03A1  082D               	movf	?___flmul+3,w
 10334  03A2  00DA               	movwf	___fltol@f1+3
 10335  03A3  082C               	movf	?___flmul+2,w
 10336  03A4  00D9               	movwf	___fltol@f1+2
 10337  03A5  082B               	movf	?___flmul+1,w
 10338  03A6  00D8               	movwf	___fltol@f1+1
 10339  03A7  082A               	movf	?___flmul,w
 10340  03A8  00D7               	movwf	___fltol@f1
 10341  03A9  160A  158A  26E0  120A  118A  	fcall	___fltol
 10342  03AE  1283               	bcf	3,5	;RP0=0, select bank0
 10343  03AF  1303               	bcf	3,6	;RP1=0, select bank0
 10344  03B0  085A               	movf	?___fltol+3,w
 10345  03B1  1683               	bsf	3,5	;RP0=1, select bank1
 10346  03B2  1303               	bcf	3,6	;RP1=0, select bank1
 10347  03B3  00BA               	movwf	(sprintf@val+3)^(0+128)
 10348  03B4  1283               	bcf	3,5	;RP0=0, select bank0
 10349  03B5  1303               	bcf	3,6	;RP1=0, select bank0
 10350  03B6  0859               	movf	?___fltol+2,w
 10351  03B7  1683               	bsf	3,5	;RP0=1, select bank1
 10352  03B8  1303               	bcf	3,6	;RP1=0, select bank1
 10353  03B9  00B9               	movwf	(sprintf@val+2)^(0+128)
 10354  03BA  1283               	bcf	3,5	;RP0=0, select bank0
 10355  03BB  1303               	bcf	3,6	;RP1=0, select bank0
 10356  03BC  0858               	movf	?___fltol+1,w
 10357  03BD  1683               	bsf	3,5	;RP0=1, select bank1
 10358  03BE  1303               	bcf	3,6	;RP1=0, select bank1
 10359  03BF  00B8               	movwf	(sprintf@val+1)^(0+128)
 10360  03C0  1283               	bcf	3,5	;RP0=0, select bank0
 10361  03C1  1303               	bcf	3,6	;RP1=0, select bank0
 10362  03C2  0857               	movf	?___fltol,w
 10363  03C3  1683               	bsf	3,5	;RP0=1, select bank1
 10364  03C4  1303               	bcf	3,6	;RP1=0, select bank1
 10365  03C5  00B7               	movwf	sprintf@val^(0+128)
 10366                           
 10367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10368  03C6  2CC8               	goto	l4022
 10369  03C7                     l4014:
 10370                           
 10371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10372  03C7  084C               	movf	sprintf@c^(0+128),w
 10373  03C8  00AD               	movwf	??_sprintf^(0+128)
 10374  03C9  3001               	movlw	1
 10375  03CA                     u6905:
 10376  03CA  1003               	clrc
 10377  03CB  0DAD               	rlf	??_sprintf^(0+128),f
 10378  03CC  3EFF               	addlw	-1
 10379  03CD  1D03               	skipz
 10380  03CE  2BCA               	goto	u6905
 10381  03CF  1003               	clrc
 10382  03D0  0D2D               	rlf	??_sprintf^(0+128),w
 10383  03D1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10384  03D2  0084               	movwf	4
 10385  03D3  160A  158A  200A  120A  118A  	fcall	stringdir
 10386  03D8  1283               	bcf	3,5	;RP0=0, select bank0
 10387  03D9  1303               	bcf	3,6	;RP1=0, select bank0
 10388  03DA  00A0               	movwf	___lldiv@divisor
 10389  03DB  160A  158A  200A  120A  118A  	fcall	stringdir
 10390  03E0  00A1               	movwf	___lldiv@divisor+1
 10391  03E1  160A  158A  200A  120A  118A  	fcall	stringdir
 10392  03E6  00A2               	movwf	___lldiv@divisor+2
 10393  03E7  160A  158A  200A  120A  118A  	fcall	stringdir
 10394  03EC  00A3               	movwf	___lldiv@divisor+3
 10395  03ED  1683               	bsf	3,5	;RP0=1, select bank1
 10396  03EE  1303               	bcf	3,6	;RP1=0, select bank1
 10397  03EF  083A               	movf	(sprintf@val+3)^(0+128),w
 10398  03F0  1283               	bcf	3,5	;RP0=0, select bank0
 10399  03F1  1303               	bcf	3,6	;RP1=0, select bank0
 10400  03F2  00A7               	movwf	___lldiv@dividend+3
 10401  03F3  1683               	bsf	3,5	;RP0=1, select bank1
 10402  03F4  1303               	bcf	3,6	;RP1=0, select bank1
 10403  03F5  0839               	movf	(sprintf@val+2)^(0+128),w
 10404  03F6  1283               	bcf	3,5	;RP0=0, select bank0
 10405  03F7  1303               	bcf	3,6	;RP1=0, select bank0
 10406  03F8  00A6               	movwf	___lldiv@dividend+2
 10407  03F9  1683               	bsf	3,5	;RP0=1, select bank1
 10408  03FA  1303               	bcf	3,6	;RP1=0, select bank1
 10409  03FB  0838               	movf	(sprintf@val+1)^(0+128),w
 10410  03FC  1283               	bcf	3,5	;RP0=0, select bank0
 10411  03FD  1303               	bcf	3,6	;RP1=0, select bank0
 10412  03FE  00A5               	movwf	___lldiv@dividend+1
 10413  03FF  1683               	bsf	3,5	;RP0=1, select bank1
 10414  0400  1303               	bcf	3,6	;RP1=0, select bank1
 10415  0401  0837               	movf	sprintf@val^(0+128),w
 10416  0402  1283               	bcf	3,5	;RP0=0, select bank0
 10417  0403  1303               	bcf	3,6	;RP1=0, select bank0
 10418  0404  00A4               	movwf	___lldiv@dividend
 10419  0405  160A  158A  260F  120A  118A  	fcall	___lldiv
 10420  040A  1283               	bcf	3,5	;RP0=0, select bank0
 10421  040B  1303               	bcf	3,6	;RP1=0, select bank0
 10422  040C  0823               	movf	?___lldiv+3,w
 10423  040D  1683               	bsf	3,5	;RP0=1, select bank1
 10424  040E  1303               	bcf	3,6	;RP1=0, select bank1
 10425  040F  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10426  0410  1283               	bcf	3,5	;RP0=0, select bank0
 10427  0411  1303               	bcf	3,6	;RP1=0, select bank0
 10428  0412  0822               	movf	?___lldiv+2,w
 10429  0413  1683               	bsf	3,5	;RP0=1, select bank1
 10430  0414  1303               	bcf	3,6	;RP1=0, select bank1
 10431  0415  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10432  0416  1283               	bcf	3,5	;RP0=0, select bank0
 10433  0417  1303               	bcf	3,6	;RP1=0, select bank0
 10434  0418  0821               	movf	?___lldiv+1,w
 10435  0419  1683               	bsf	3,5	;RP0=1, select bank1
 10436  041A  1303               	bcf	3,6	;RP1=0, select bank1
 10437  041B  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10438  041C  1283               	bcf	3,5	;RP0=0, select bank0
 10439  041D  1303               	bcf	3,6	;RP1=0, select bank0
 10440  041E  0820               	movf	?___lldiv,w
 10441  041F  1683               	bsf	3,5	;RP0=1, select bank1
 10442  0420  1303               	bcf	3,6	;RP1=0, select bank1
 10443  0421  00BF               	movwf	sprintf@tmpval^(0+128)
 10444  0422                     l4016:
 10445                           
 10446                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10447  0422  3000               	movlw	0
 10448  0423  1283               	bcf	3,5	;RP0=0, select bank0
 10449  0424  1303               	bcf	3,6	;RP1=0, select bank0
 10450  0425  00A3               	movwf	___llmod@divisor+3
 10451  0426  3000               	movlw	0
 10452  0427  00A2               	movwf	___llmod@divisor+2
 10453  0428  3000               	movlw	0
 10454  0429  00A1               	movwf	___llmod@divisor+1
 10455  042A  300A               	movlw	10
 10456  042B  00A0               	movwf	___llmod@divisor
 10457  042C  1683               	bsf	3,5	;RP0=1, select bank1
 10458  042D  1303               	bcf	3,6	;RP1=0, select bank1
 10459  042E  0842               	movf	(sprintf@tmpval+3)^(0+128),w
 10460  042F  1283               	bcf	3,5	;RP0=0, select bank0
 10461  0430  1303               	bcf	3,6	;RP1=0, select bank0
 10462  0431  00A7               	movwf	___llmod@dividend+3
 10463  0432  1683               	bsf	3,5	;RP0=1, select bank1
 10464  0433  1303               	bcf	3,6	;RP1=0, select bank1
 10465  0434  0841               	movf	(sprintf@tmpval+2)^(0+128),w
 10466  0435  1283               	bcf	3,5	;RP0=0, select bank0
 10467  0436  1303               	bcf	3,6	;RP1=0, select bank0
 10468  0437  00A6               	movwf	___llmod@dividend+2
 10469  0438  1683               	bsf	3,5	;RP0=1, select bank1
 10470  0439  1303               	bcf	3,6	;RP1=0, select bank1
 10471  043A  0840               	movf	(sprintf@tmpval+1)^(0+128),w
 10472  043B  1283               	bcf	3,5	;RP0=0, select bank0
 10473  043C  1303               	bcf	3,6	;RP1=0, select bank0
 10474  043D  00A5               	movwf	___llmod@dividend+1
 10475  043E  1683               	bsf	3,5	;RP0=1, select bank1
 10476  043F  1303               	bcf	3,6	;RP1=0, select bank1
 10477  0440  083F               	movf	sprintf@tmpval^(0+128),w
 10478  0441  1283               	bcf	3,5	;RP0=0, select bank0
 10479  0442  1303               	bcf	3,6	;RP1=0, select bank0
 10480  0443  00A4               	movwf	___llmod@dividend
 10481  0444  160A  158A  2560  120A  118A  	fcall	___llmod
 10482  0449  1283               	bcf	3,5	;RP0=0, select bank0
 10483  044A  1303               	bcf	3,6	;RP1=0, select bank0
 10484  044B  0823               	movf	?___llmod+3,w
 10485  044C  1683               	bsf	3,5	;RP0=1, select bank1
 10486  044D  1303               	bcf	3,6	;RP1=0, select bank1
 10487  044E  00C2               	movwf	(sprintf@tmpval+3)^(0+128)
 10488  044F  1283               	bcf	3,5	;RP0=0, select bank0
 10489  0450  1303               	bcf	3,6	;RP1=0, select bank0
 10490  0451  0822               	movf	?___llmod+2,w
 10491  0452  1683               	bsf	3,5	;RP0=1, select bank1
 10492  0453  1303               	bcf	3,6	;RP1=0, select bank1
 10493  0454  00C1               	movwf	(sprintf@tmpval+2)^(0+128)
 10494  0455  1283               	bcf	3,5	;RP0=0, select bank0
 10495  0456  1303               	bcf	3,6	;RP1=0, select bank0
 10496  0457  0821               	movf	?___llmod+1,w
 10497  0458  1683               	bsf	3,5	;RP0=1, select bank1
 10498  0459  1303               	bcf	3,6	;RP1=0, select bank1
 10499  045A  00C0               	movwf	(sprintf@tmpval+1)^(0+128)
 10500  045B  1283               	bcf	3,5	;RP0=0, select bank0
 10501  045C  1303               	bcf	3,6	;RP1=0, select bank0
 10502  045D  0820               	movf	?___llmod,w
 10503  045E  1683               	bsf	3,5	;RP0=1, select bank1
 10504  045F  1303               	bcf	3,6	;RP1=0, select bank1
 10505  0460  00BF               	movwf	sprintf@tmpval^(0+128)
 10506  0461                     l4018:
 10507                           
 10508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10509  0461  083F               	movf	sprintf@tmpval^(0+128),w
 10510  0462  3E30               	addlw	48
 10511  0463  00AD               	movwf	??_sprintf^(0+128)
 10512  0464  0849               	movf	sprintf@sp^(0+128),w
 10513  0465  0084               	movwf	4
 10514  0466  082D               	movf	??_sprintf^(0+128),w
 10515  0467  1383               	bcf	3,7	;select IRP bank0
 10516  0468  0080               	movwf	0
 10517  0469  3001               	movlw	1
 10518  046A  00AD               	movwf	??_sprintf^(0+128)
 10519  046B  082D               	movf	??_sprintf^(0+128),w
 10520  046C  07C9               	addwf	sprintf@sp^(0+128),f
 10521  046D                     l4020:
 10522                           
 10523                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10524  046D  084C               	movf	sprintf@c^(0+128),w
 10525  046E  00AD               	movwf	??_sprintf^(0+128)
 10526  046F  3001               	movlw	1
 10527  0470                     u6915:
 10528  0470  1003               	clrc
 10529  0471  0DAD               	rlf	??_sprintf^(0+128),f
 10530  0472  3EFF               	addlw	-1
 10531  0473  1D03               	skipz
 10532  0474  2C70               	goto	u6915
 10533  0475  1003               	clrc
 10534  0476  0D2D               	rlf	??_sprintf^(0+128),w
 10535  0477  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10536  0478  0084               	movwf	4
 10537  0479  160A  158A  200A  120A  118A  	fcall	stringdir
 10538  047E  1283               	bcf	3,5	;RP0=0, select bank0
 10539  047F  1303               	bcf	3,6	;RP1=0, select bank0
 10540  0480  00A0               	movwf	___llmod@divisor
 10541  0481  160A  158A  200A  120A  118A  	fcall	stringdir
 10542  0486  00A1               	movwf	___llmod@divisor+1
 10543  0487  160A  158A  200A  120A  118A  	fcall	stringdir
 10544  048C  00A2               	movwf	___llmod@divisor+2
 10545  048D  160A  158A  200A  120A  118A  	fcall	stringdir
 10546  0492  00A3               	movwf	___llmod@divisor+3
 10547  0493  1683               	bsf	3,5	;RP0=1, select bank1
 10548  0494  1303               	bcf	3,6	;RP1=0, select bank1
 10549  0495  083A               	movf	(sprintf@val+3)^(0+128),w
 10550  0496  1283               	bcf	3,5	;RP0=0, select bank0
 10551  0497  1303               	bcf	3,6	;RP1=0, select bank0
 10552  0498  00A7               	movwf	___llmod@dividend+3
 10553  0499  1683               	bsf	3,5	;RP0=1, select bank1
 10554  049A  1303               	bcf	3,6	;RP1=0, select bank1
 10555  049B  0839               	movf	(sprintf@val+2)^(0+128),w
 10556  049C  1283               	bcf	3,5	;RP0=0, select bank0
 10557  049D  1303               	bcf	3,6	;RP1=0, select bank0
 10558  049E  00A6               	movwf	___llmod@dividend+2
 10559  049F  1683               	bsf	3,5	;RP0=1, select bank1
 10560  04A0  1303               	bcf	3,6	;RP1=0, select bank1
 10561  04A1  0838               	movf	(sprintf@val+1)^(0+128),w
 10562  04A2  1283               	bcf	3,5	;RP0=0, select bank0
 10563  04A3  1303               	bcf	3,6	;RP1=0, select bank0
 10564  04A4  00A5               	movwf	___llmod@dividend+1
 10565  04A5  1683               	bsf	3,5	;RP0=1, select bank1
 10566  04A6  1303               	bcf	3,6	;RP1=0, select bank1
 10567  04A7  0837               	movf	sprintf@val^(0+128),w
 10568  04A8  1283               	bcf	3,5	;RP0=0, select bank0
 10569  04A9  1303               	bcf	3,6	;RP1=0, select bank0
 10570  04AA  00A4               	movwf	___llmod@dividend
 10571  04AB  160A  158A  2560  120A  118A  	fcall	___llmod
 10572  04B0  1283               	bcf	3,5	;RP0=0, select bank0
 10573  04B1  1303               	bcf	3,6	;RP1=0, select bank0
 10574  04B2  0823               	movf	?___llmod+3,w
 10575  04B3  1683               	bsf	3,5	;RP0=1, select bank1
 10576  04B4  1303               	bcf	3,6	;RP1=0, select bank1
 10577  04B5  00BA               	movwf	(sprintf@val+3)^(0+128)
 10578  04B6  1283               	bcf	3,5	;RP0=0, select bank0
 10579  04B7  1303               	bcf	3,6	;RP1=0, select bank0
 10580  04B8  0822               	movf	?___llmod+2,w
 10581  04B9  1683               	bsf	3,5	;RP0=1, select bank1
 10582  04BA  1303               	bcf	3,6	;RP1=0, select bank1
 10583  04BB  00B9               	movwf	(sprintf@val+2)^(0+128)
 10584  04BC  1283               	bcf	3,5	;RP0=0, select bank0
 10585  04BD  1303               	bcf	3,6	;RP1=0, select bank0
 10586  04BE  0821               	movf	?___llmod+1,w
 10587  04BF  1683               	bsf	3,5	;RP0=1, select bank1
 10588  04C0  1303               	bcf	3,6	;RP1=0, select bank1
 10589  04C1  00B8               	movwf	(sprintf@val+1)^(0+128)
 10590  04C2  1283               	bcf	3,5	;RP0=0, select bank0
 10591  04C3  1303               	bcf	3,6	;RP1=0, select bank0
 10592  04C4  0820               	movf	?___llmod,w
 10593  04C5  1683               	bsf	3,5	;RP0=1, select bank1
 10594  04C6  1303               	bcf	3,6	;RP1=0, select bank1
 10595  04C7  00B7               	movwf	sprintf@val^(0+128)
 10596  04C8                     l4022:
 10597                           
 10598                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10599  04C8  3001               	movlw	1
 10600  04C9  02CC               	subwf	sprintf@c^(0+128),f
 10601  04CA  0A4C               	incf	sprintf@c^(0+128),w
 10602  04CB  1D03               	btfss	3,2
 10603  04CC  2CCE               	goto	u6921
 10604  04CD  2CCF               	goto	u6920
 10605  04CE                     u6921:
 10606  04CE  2BC7               	goto	l4014
 10607  04CF                     u6920:
 10608  04CF  2CE1               	goto	l4030
 10609  04D0                     l4024:
 10610                           
 10611                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 10612  04D0  3030               	movlw	48
 10613  04D1  00AD               	movwf	??_sprintf^(0+128)
 10614  04D2  0849               	movf	sprintf@sp^(0+128),w
 10615  04D3  0084               	movwf	4
 10616  04D4  082D               	movf	??_sprintf^(0+128),w
 10617  04D5  1383               	bcf	3,7	;select IRP bank0
 10618  04D6  0080               	movwf	0
 10619  04D7                     l4026:
 10620  04D7  3001               	movlw	1
 10621  04D8  00AD               	movwf	??_sprintf^(0+128)
 10622  04D9  082D               	movf	??_sprintf^(0+128),w
 10623  04DA  07C9               	addwf	sprintf@sp^(0+128),f
 10624  04DB                     l4028:
 10625                           
 10626                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10627  04DB  30FF               	movlw	255
 10628  04DC  07CA               	addwf	sprintf@prec^(0+128),f
 10629  04DD  1803               	skipnc
 10630  04DE  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 10631  04DF  30FF               	movlw	255
 10632  04E0  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 10633  04E1                     l4030:
 10634                           
 10635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 10636  04E1  084A               	movf	sprintf@prec^(0+128),w
 10637  04E2  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 10638  04E3  1D03               	btfss	3,2
 10639  04E4  2CE6               	goto	u6931
 10640  04E5  2CE7               	goto	u6930
 10641  04E6                     u6931:
 10642  04E6  2CD0               	goto	l4024
 10643  04E7                     u6930:
 10644  04E7  2DAD               	goto	l4078
 10645  04E8                     l4032:
 10646                           
 10647                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
 10648  04E8  084A               	movf	sprintf@prec^(0+128),w
 10649  04E9  044B               	iorwf	(sprintf@prec+1)^(0+128),w
 10650  04EA  1D03               	btfss	3,2
 10651  04EB  2CED               	goto	u6941
 10652  04EC  2CEE               	goto	u6940
 10653  04ED                     u6941:
 10654  04ED  2CFC               	goto	l302
 10655  04EE                     u6940:
 10656  04EE                     l4034:
 10657  04EE  083A               	movf	(sprintf@val+3)^(0+128),w
 10658  04EF  0439               	iorwf	(sprintf@val+2)^(0+128),w
 10659  04F0  0438               	iorwf	(sprintf@val+1)^(0+128),w
 10660  04F1  0437               	iorwf	sprintf@val^(0+128),w
 10661  04F2  1D03               	skipz
 10662  04F3  2CF5               	goto	u6951
 10663  04F4  2CF6               	goto	u6950
 10664  04F5                     u6951:
 10665  04F5  2CFC               	goto	l302
 10666  04F6                     u6950:
 10667  04F6                     l4036:
 10668                           
 10669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10670  04F6  3001               	movlw	1
 10671  04F7  07CA               	addwf	sprintf@prec^(0+128),f
 10672  04F8  1803               	skipnc
 10673  04F9  0ACB               	incf	(sprintf@prec+1)^(0+128),f
 10674  04FA  3000               	movlw	0
 10675  04FB  07CB               	addwf	(sprintf@prec+1)^(0+128),f
 10676  04FC                     l302:
 10677                           
 10678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10679  04FC  084B               	movf	(sprintf@prec+1)^(0+128),w
 10680  04FD  3A80               	xorlw	128
 10681  04FE  3C80               	sublw	128
 10682  04FF  1D03               	skipz
 10683  0500  2D03               	goto	u6965
 10684  0501  084A               	movf	sprintf@prec^(0+128),w
 10685  0502  024C               	subwf	sprintf@c^(0+128),w
 10686  0503                     u6965:
 10687  0503  1803               	skipnc
 10688  0504  2D06               	goto	u6961
 10689  0505  2D07               	goto	u6960
 10690  0506                     u6961:
 10691  0506  2D0E               	goto	l4040
 10692  0507                     u6960:
 10693  0507                     l4038:
 10694                           
 10695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10696  0507  1683               	bsf	3,5	;RP0=1, select bank1
 10697  0508  1303               	bcf	3,6	;RP1=0, select bank1
 10698  0509  084A               	movf	sprintf@prec^(0+128),w
 10699  050A  00AD               	movwf	??_sprintf^(0+128)
 10700  050B  082D               	movf	??_sprintf^(0+128),w
 10701  050C  00CC               	movwf	sprintf@c^(0+128)
 10702  050D  2D26               	goto	l4044
 10703  050E                     l4040:
 10704  050E  1683               	bsf	3,5	;RP0=1, select bank1
 10705  050F  1303               	bcf	3,6	;RP1=0, select bank1
 10706  0510  084B               	movf	(sprintf@prec+1)^(0+128),w
 10707  0511  3A80               	xorlw	128
 10708  0512  00AD               	movwf	??_sprintf^(0+128)
 10709  0513  3080               	movlw	128
 10710  0514  022D               	subwf	??_sprintf^(0+128),w
 10711  0515  1D03               	skipz
 10712  0516  2D19               	goto	u6975
 10713  0517  084C               	movf	sprintf@c^(0+128),w
 10714  0518  024A               	subwf	sprintf@prec^(0+128),w
 10715  0519                     u6975:
 10716  0519  1803               	skipnc
 10717  051A  2D1C               	goto	u6971
 10718  051B  2D1D               	goto	u6970
 10719  051C                     u6971:
 10720  051C  2D26               	goto	l4044
 10721  051D                     u6970:
 10722  051D                     l4042:
 10723                           
 10724                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10725  051D  1683               	bsf	3,5	;RP0=1, select bank1
 10726  051E  1303               	bcf	3,6	;RP1=0, select bank1
 10727  051F  084C               	movf	sprintf@c^(0+128),w
 10728  0520  00AD               	movwf	??_sprintf^(0+128)
 10729  0521  01AE               	clrf	(??_sprintf^(0+128)+1)
 10730  0522  082D               	movf	??_sprintf^(0+128),w
 10731  0523  00CA               	movwf	sprintf@prec^(0+128)
 10732  0524  082E               	movf	(??_sprintf+1)^(0+128),w
 10733  0525  00CB               	movwf	(sprintf@prec+1)^(0+128)
 10734  0526                     l4044:
 10735                           
 10736                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10737  0526  1683               	bsf	3,5	;RP0=1, select bank1
 10738  0527  1303               	bcf	3,6	;RP1=0, select bank1
 10739  0528  083D               	movf	sprintf@width^(0+128),w
 10740  0529  043E               	iorwf	(sprintf@width+1)^(0+128),w
 10741  052A  1903               	btfsc	3,2
 10742  052B  2D2D               	goto	u6981
 10743  052C  2D2E               	goto	u6980
 10744  052D                     u6981:
 10745  052D  2D40               	goto	l4050
 10746  052E                     u6980:
 10747  052E                     l4046:
 10748  052E  3003               	movlw	3
 10749  052F  053B               	andwf	sprintf@flag^(0+128),w
 10750  0530  00AD               	movwf	??_sprintf^(0+128)
 10751  0531  3000               	movlw	0
 10752  0532  053C               	andwf	(sprintf@flag+1)^(0+128),w
 10753  0533  00AE               	movwf	(??_sprintf+1)^(0+128)
 10754  0534  082D               	movf	??_sprintf^(0+128),w
 10755  0535  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10756  0536  1903               	btfsc	3,2
 10757  0537  2D39               	goto	u6991
 10758  0538  2D3A               	goto	u6990
 10759  0539                     u6991:
 10760  0539  2D40               	goto	l4050
 10761  053A                     u6990:
 10762  053A                     l4048:
 10763                           
 10764                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10765  053A  30FF               	movlw	255
 10766  053B  07BD               	addwf	sprintf@width^(0+128),f
 10767  053C  1803               	skipnc
 10768  053D  0ABE               	incf	(sprintf@width+1)^(0+128),f
 10769  053E  30FF               	movlw	255
 10770  053F  07BE               	addwf	(sprintf@width+1)^(0+128),f
 10771  0540                     l4050:
 10772                           
 10773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 10774  0540  1F3C               	btfss	(sprintf@flag+1)^(0+128),6
 10775  0541  2D43               	goto	u7001
 10776  0542  2D44               	goto	u7000
 10777  0543                     u7001:
 10778  0543  2D5F               	goto	l4058
 10779  0544                     u7000:
 10780  0544                     l4052:
 10781                           
 10782                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 10783  0544  084B               	movf	(sprintf@prec+1)^(0+128),w
 10784  0545  3A80               	xorlw	128
 10785  0546  00AD               	movwf	??_sprintf^(0+128)
 10786  0547  083E               	movf	(sprintf@width+1)^(0+128),w
 10787  0548  3A80               	xorlw	128
 10788  0549  022D               	subwf	??_sprintf^(0+128),w
 10789  054A  1D03               	skipz
 10790  054B  2D4E               	goto	u7015
 10791  054C  083D               	movf	sprintf@width^(0+128),w
 10792  054D  024A               	subwf	sprintf@prec^(0+128),w
 10793  054E                     u7015:
 10794  054E  1803               	skipnc
 10795  054F  2D51               	goto	u7011
 10796  0550  2D52               	goto	u7010
 10797  0551                     u7011:
 10798  0551  2D5B               	goto	l4056
 10799  0552                     u7010:
 10800  0552                     l4054:
 10801                           
 10802                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 10803  0552  1683               	bsf	3,5	;RP0=1, select bank1
 10804  0553  1303               	bcf	3,6	;RP1=0, select bank1
 10805  0554  084A               	movf	sprintf@prec^(0+128),w
 10806  0555  02BD               	subwf	sprintf@width^(0+128),f
 10807  0556  084B               	movf	(sprintf@prec+1)^(0+128),w
 10808  0557  1C03               	skipc
 10809  0558  03BE               	decf	(sprintf@width+1)^(0+128),f
 10810  0559  02BE               	subwf	(sprintf@width+1)^(0+128),f
 10811  055A  2D5F               	goto	l4058
 10812  055B                     l4056:
 10813                           
 10814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 10815  055B  1683               	bsf	3,5	;RP0=1, select bank1
 10816  055C  1303               	bcf	3,6	;RP1=0, select bank1
 10817  055D  01BD               	clrf	sprintf@width^(0+128)
 10818  055E  01BE               	clrf	(sprintf@width+1)^(0+128)
 10819  055F                     l4058:
 10820                           
 10821                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 10822  055F  083E               	movf	(sprintf@width+1)^(0+128),w
 10823  0560  3A80               	xorlw	128
 10824  0561  3C80               	sublw	128
 10825  0562  1D03               	skipz
 10826  0563  2D66               	goto	u7025
 10827  0564  083D               	movf	sprintf@width^(0+128),w
 10828  0565  024C               	subwf	sprintf@c^(0+128),w
 10829  0566                     u7025:
 10830  0566  1803               	skipnc
 10831  0567  2D69               	goto	u7021
 10832  0568  2D6A               	goto	u7020
 10833  0569                     u7021:
 10834  0569  2D76               	goto	l4062
 10835  056A                     u7020:
 10836  056A                     l4060:
 10837                           
 10838                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 10839  056A  1683               	bsf	3,5	;RP0=1, select bank1
 10840  056B  1303               	bcf	3,6	;RP1=0, select bank1
 10841  056C  084C               	movf	sprintf@c^(0+128),w
 10842  056D  00AD               	movwf	??_sprintf^(0+128)
 10843  056E  01AE               	clrf	(??_sprintf^(0+128)+1)
 10844  056F  082D               	movf	??_sprintf^(0+128),w
 10845  0570  02BD               	subwf	sprintf@width^(0+128),f
 10846  0571  082E               	movf	(??_sprintf+1)^(0+128),w
 10847  0572  1C03               	skipc
 10848  0573  03BE               	decf	(sprintf@width+1)^(0+128),f
 10849  0574  02BE               	subwf	(sprintf@width+1)^(0+128),f
 10850  0575  2D7A               	goto	l4064
 10851  0576                     l4062:
 10852                           
 10853                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 10854  0576  1683               	bsf	3,5	;RP0=1, select bank1
 10855  0577  1303               	bcf	3,6	;RP1=0, select bank1
 10856  0578  01BD               	clrf	sprintf@width^(0+128)
 10857  0579  01BE               	clrf	(sprintf@width+1)^(0+128)
 10858  057A                     l4064:
 10859                           
 10860                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 10861  057A  083D               	movf	sprintf@width^(0+128),w
 10862  057B  043E               	iorwf	(sprintf@width+1)^(0+128),w
 10863  057C  1903               	btfsc	3,2
 10864  057D  2D7F               	goto	u7031
 10865  057E  2D80               	goto	u7030
 10866  057F                     u7031:
 10867  057F  2D97               	goto	l4072
 10868  0580                     u7030:
 10869  0580                     l4066:
 10870                           
 10871                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 10872  0580  3020               	movlw	32
 10873  0581  00AD               	movwf	??_sprintf^(0+128)
 10874  0582  0849               	movf	sprintf@sp^(0+128),w
 10875  0583  0084               	movwf	4
 10876  0584  082D               	movf	??_sprintf^(0+128),w
 10877  0585  1383               	bcf	3,7	;select IRP bank0
 10878  0586  0080               	movwf	0
 10879  0587                     l4068:
 10880  0587  3001               	movlw	1
 10881  0588  00AD               	movwf	??_sprintf^(0+128)
 10882  0589  082D               	movf	??_sprintf^(0+128),w
 10883  058A  07C9               	addwf	sprintf@sp^(0+128),f
 10884  058B                     l4070:
 10885  058B  30FF               	movlw	255
 10886  058C  07BD               	addwf	sprintf@width^(0+128),f
 10887  058D  1803               	skipnc
 10888  058E  0ABE               	incf	(sprintf@width+1)^(0+128),f
 10889  058F  30FF               	movlw	255
 10890  0590  07BE               	addwf	(sprintf@width+1)^(0+128),f
 10891  0591  083D               	movf	sprintf@width^(0+128),w
 10892  0592  043E               	iorwf	(sprintf@width+1)^(0+128),w
 10893  0593  1D03               	btfss	3,2
 10894  0594  2D96               	goto	u7041
 10895  0595  2D97               	goto	u7040
 10896  0596                     u7041:
 10897  0596  2D80               	goto	l4066
 10898  0597                     u7040:
 10899  0597                     l4072:
 10900                           
 10901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 10902  0597  3003               	movlw	3
 10903  0598  053B               	andwf	sprintf@flag^(0+128),w
 10904  0599  00AD               	movwf	??_sprintf^(0+128)
 10905  059A  3000               	movlw	0
 10906  059B  053C               	andwf	(sprintf@flag+1)^(0+128),w
 10907  059C  00AE               	movwf	(??_sprintf+1)^(0+128)
 10908  059D  082D               	movf	??_sprintf^(0+128),w
 10909  059E  042E               	iorwf	(??_sprintf^(0+128)+1),w
 10910  059F  1903               	btfsc	3,2
 10911  05A0  2DA2               	goto	u7051
 10912  05A1  2DA3               	goto	u7050
 10913  05A2                     u7051:
 10914  05A2  2DAD               	goto	l4078
 10915  05A3                     u7050:
 10916  05A3                     l4074:
 10917                           
 10918                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 10919  05A3  302D               	movlw	45
 10920  05A4  00AD               	movwf	??_sprintf^(0+128)
 10921  05A5  0849               	movf	sprintf@sp^(0+128),w
 10922  05A6  0084               	movwf	4
 10923  05A7  082D               	movf	??_sprintf^(0+128),w
 10924  05A8  1383               	bcf	3,7	;select IRP bank0
 10925  05A9  0080               	movwf	0
 10926  05AA  160A  118A  2D13   	goto	l3834
 10927  05AD                     l4078:
 10928                           
 10929                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 10930  05AD  3001               	movlw	1
 10931  05AE  07A8               	addwf	sprintf@f^(0+128),f
 10932  05AF  30FF               	movlw	-1
 10933  05B0  0728               	addwf	sprintf@f^(0+128),w
 10934  05B1  0084               	movwf	4
 10935  05B2  160A  158A  200A  120A  118A  	fcall	stringdir
 10936  05B7  00AD               	movwf	??_sprintf^(0+128)
 10937  05B8  082D               	movf	??_sprintf^(0+128),w
 10938  05B9  00CC               	movwf	sprintf@c^(0+128)
 10939  05BA  084C               	movf	sprintf@c^(0+128),w
 10940  05BB  1D03               	btfss	3,2
 10941  05BC  2DBE               	goto	u7061
 10942  05BD  2DC1               	goto	u7060
 10943  05BE                     u7061:
 10944  05BE  160A  118A  2D06   	goto	l3830
 10945  05C1                     u7060:
 10946  05C1                     l4080:
 10947                           
 10948                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 10949  05C1  0849               	movf	sprintf@sp^(0+128),w
 10950  05C2  0084               	movwf	4
 10951  05C3  1383               	bcf	3,7	;select IRP bank0
 10952  05C4  0180               	clrf	0
 10953  05C5                     l317:
 10954  05C5  0008               	return
 10955  05C6                     __end_of_sprintf:

Data Sizes:
    Strings     22
    Constant    144
    Data        2
    BSS         28
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      11
    BANK0            80     76      77
    BANK1            80     49      77
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_3(CODE[7]), STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> s(BANK1[20]), STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Write_String
    _sprintf->__div_to_l_
    _scale->___awmod
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___awmod
    ___flmul->___lwdiv
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    _sprintf->___fladd
    _scale->___flmul
    _fround->___flmul
    ___flmul->___xxtofl
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    _main->_sprintf
    _sprintf->___flsub

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     6      0   42263
                                             45 BANK1      4     4      0
                               _AADC
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___flmul
                           ___xxtofl
                              _setup
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   35421
                                              8 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    8239
                                             36 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              3 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1705
                                              0 BANK0      9     5      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              3 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             36 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              9 COMMON     1     1      0
                                              0 BANK0      7     3      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                             10 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              3 COMMON     4     2      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     634
                                              3 COMMON     4     4      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     634
                                              3 COMMON     7     7      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     746
                                              3 COMMON     4     0      4
                                              0 BANK0     10    10      0
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              3 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     772
                                              3 COMMON     2     2      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     601
                                              3 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             55 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                              0 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             56 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              3 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     986
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     490
                                              3 COMMON     4     4      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     530
                                              8 COMMON     2     0      2
                                              0 BANK0      5     5      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0     130
                                              4 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     524
                                              7 COMMON     2     1      1
                                              0 BANK0      2     2      0
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      93
                                              7 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      62
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      62
                                              4 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      31
                                              3 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _AADC                                                 4     3      1     190
                                              3 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AADC
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _setup
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     31      4D       7       96.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4C      4D       5       96.2%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A5      12        0.0%
ABS                  0      0      A5       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Feb 09 16:51:39 2021

                        _s 00D5                          pc 0002                         l61 0829  
                       l47 1B10                         l73 1AE3                         l91 1B42  
                       _S1 00EA                         l76 081E                         _S2 00E9  
                       l85 1B8D                         l79 1B03                         l88 1CBF  
                       l97 1C32               ___awdiv@sign 0026                         fsr 0004  
      ___wmul@multiplicand 0075        __Umul8_16@word_mpld 0022                        l123 1BEB  
                      l125 1BEC                        l302 04FC                        l321 1B4F  
                      l234 0FFF                        l323 1B67                        l227 07D2  
                      l317 05C5                        l502 1264                        l512 1F7A  
                      l520 1AF6                        l256 15C3                        l507 1CDE  
                      l515 1FE6                        l531 1F46                        l508 1CFA  
                      l516 1FFF                        l524 1F5B                        l509 1D0F  
                      l357 1E76                        l534 1F5B                        l542 1176  
                      l294 0335                        l287 02F1                        l801 10C0  
                      l802 10CC                        l538 11B3                        l474 1EDF  
                      l491 1273                        l539 1125                        l627 1C78  
                      l652 137E                        l492 11D6                        l661 14FB  
                      l549 11A6                        l637 103A                        l654 1355  
                      l750 0C08                        l495 1234                        l487 1E0E  
                      l648 12D7                        l744 0C9C                        l808 1B22  
                      l673 146D                        l577 1DB5                        l690 14EF  
                      l682 14CD                        l691 14FB                        l763 1BA4  
                      l756 0C90                        l669 1449                        l765 1BB6  
                      l694 1D5F                        l790 10F6                        l679 148F  
                      l794 10A4                        l788 105F                        _ISR 07D3  
                      _adc 007A                        _pot 006C                        fsr0 0004  
                      indf 0000               ___awmod@sign 0079               ___flmul@aexp 003C  
             ___flmul@bexp 003D                _sprintf$987 00B2               ___flmul@sign 0037  
             ___flmul@temp 0042               ___flmul@prod 003E                       ?_ISR 0070  
             ___fltol@exp1 0061                       l2310 1015                       l2302 1001  
                     l3040 1B04                       l2400 131D                       l2312 1019  
                     l2304 1007                       l2320 1036                       l2240 1DB7  
                     l4000 0328                       l3042 1B08                       l2410 1362  
                     l2402 1321                       l2330 1285                       l2314 1023  
                     l2306 100A                       l2250 1DCB                       l2242 1DBB  
                     l4010 034E                       l4002 032F                       l3060 1BB8  
                     l3044 1B0B                       l2500 14D2                       l2412 1364  
                     l2420 1376                       l2404 1322                       l2340 1299  
                     l2332 1286                       l2324 1274                       l2180 1B93  
                     l2316 1029                       l2308 1011                       l2260 1DE3  
                     l2252 1DD1                       l2244 1DC0                       l4020 046D  
                     l4012 036C                       l4004 033E                       l4100 08B4  
                     l3070 1BC6                       l3062 1BBB                       l3046 1B0C  
                     l2510 14E9                       l2502 14D7                       l2430 13A7  
                     l2422 1382                       l2414 1368                       l2406 1339  
                     l2350 12AF                       l2334 128B                       l2342 129B  
                     l2326 127B                       l2182 1B9A                       l2318 1030  
                     l2270 1E05                       l2262 1DED                       l2254 1DD4  
                     l2246 1DC2                       l2238 1DB6                       l4030 04E1  
                     l4014 03C7                       l4022 04C8                       l4006 0343  
                     l4110 092A                       l4102 08BD                       l3072 1BCB  
                     l3080 1BD7                       l3064 1BBD                       l3048 1B0F  
                     l2512 14EB                       l2504 14DF                       l2440 13BE  
                     l2432 13AB                       l2424 1387                       l2416 1369  
                     l2408 1359                       l2360 12C4                       l2352 12B5  
                     l2344 12A3                       l2336 1290                       l2328 1281  
                     l2184 1B9E                       l2600 0BB4                       l2520 0943  
                     l2280 1C3D                       l2272 1E0A                       l2264 1DF3  
                     l2256 1DDB                       l2248 1DC6                       l4040 050E  
                     l4024 04D0                       l4016 0422                       l4008 034A  
                     l4032 04E8                       l4104 0903                       l3090 1BEA  
                     l3082 1BDC                       l3074 1BD1                       l3066 1BBE  
                     l2514 14F6                       l2506 14E4                       l2450 1421  
                     l2442 13BF                       l2434 13AF                       l2418 1372  
                     l2370 12E1                       l2362 12CC                       l2354 12B9  
                     l2346 12A8                       l2338 1298                       l2186 1BAD  
                     l2178 1B91                       l2610 0BD9                       l2602 0BBD  
                     l2530 0958                       l2522 0949                       l2290 1C60  
                     l2282 1C40                       l2266 1DFA                       l2258 1DDF  
                     l4050 0540                       l4042 051D                       l4034 04EE  
                     l4026 04D7                       l4018 0461                       l4106 090D  
                     l3084 1BE1                       l3076 1BD4                       l3068 1BC1  
                     l2516 14FA                       l2508 14E5                       l2460 1456  
                     l2452 1427                       l2444 13C8                       l2436 13B8  
                     l2428 1390                       l2380 12F5                       l2372 12E5  
                     l2364 12CD                       l2356 12BA                       l2348 12AE  
                     l2188 1BB2                       l2620 0BF1                       l2612 0BE2  
                     l2604 0BCB                       l2540 0975                       l2532 0960  
                     l2524 094D                       l2292 1C66                       l2284 1C47  
                     l2276 1C33                       l3500 1ED1                       l2268 1E00  
                     l4060 056A                       l4052 0544                       l4044 0526  
                     l4036 04F6                       l4028 04DB                       l4108 0921  
                     l3086 1BE7                       l3078 1BD4                       l3510 0809  
                     l2470 1471                       l2454 142C                       l2438 13BA  
                     l2446 13CD                       l2390 1309                       l2382 12F9  
                     l2374 12E9                       l2358 12BF                       l2366 12CF  
                     l2630 0C20                       l2622 0C05                       l2606 0BD4  
                     l2614 0BE8                       l2550 098C                       l2542 0979  
                     l2534 0962                       l2526 094E                       l2518 093C  
                     l2294 1C67                       l2286 1C4B                       l2278 1C37  
                     l3502 1ED6                       l4070 058B                       l4062 0576  
                     l4054 0552                       l4046 052E                       l4038 0507  
                     l3088 1BEA                       l3512 080F                       l3520 1B29  
                     l2472 1474                       l2464 145F                       l2448 13E3  
                     l2456 143B                       l2480 1481                       l2392 130D  
                     l2384 12FD                       l2376 12ED                       l2368 12DD  
                     l3600 1168                       l2640 0C5B                       l2632 0C24  
                     l2616 0BEC                       l2608 0BD8                       l2552 098E  
                     l2544 097A                       l2536 096A                       l2528 0953  
                     l2296 1C6E                       l2288 1C4F                       l3504 1EDB  
                     l4072 0597                       l4064 057A                       l4056 055B  
                     l4048 053A                       l4080 05C1                       l3514 0812  
                     l3530 1B3D                       l3522 1B2C                       l2490 1494  
                     l2482 1482                       l2474 1476                       l2466 1468  
                     l2458 1451                       l2394 1311                       l2386 1301  
                     l2378 12F1                       l3610 1182                       l3602 1170  
                     l2650 0C88                       l2642 0C6A                       l2634 0C3D  
                     l2626 0C0D                       l2618 0BED                       l2570 09FF  
                     l2562 09A9                       l2554 0996                       l2546 097F  
                     l2538 096F                       l2298 1C74                       l4074 05A3  
                     l4066 0580                       l4058 055F                       l4146 15D9  
                     l4090 081F                       l3516 081B                       l3508 0806  
                     l3524 1B32                       l3700 1CC0                       l2492 1499  
                     l2484 1486                       l2476 147B                       l2468 146C  
                     l2396 1315                       l2388 1305                       l3620 11AB  
                     l3604 117A                       l3612 1194                       l2652 0C89  
                     l2644 0C74                       l2628 0C12                       l2636 0C43  
                     l2580 0A7C                       l2572 0A2B                       l2564 09B9  
                     l2556 099B                       l2548 0984                       l2740 1B12  
                     l3532 0CA0                       l4068 0587                       l4092 0849  
                     l3462 1ADF                       l3526 1B35                       l3518 1B24  
                     l3702 1CD6                       l2494 14A7                       l2486 148C  
                     l2478 147D                       l2398 1319                       l3630 11CA  
                     l2654 0C94                       l2646 0C76                       l2638 0C50  
                     l2590 0AFC                       l2582 0A99                       l2574 0A47  
                     l2566 09C6                       l2558 09A0                       l2742 1B13  
                     l3470 1E83                       l3550 0E26                       l3534 0CA4  
                     l4078 05AD                       l4094 0852                       _AADC 1BB7  
                     l3800 1C88                       l3528 1B3A                       l3704 1CF2  
                     l3720 1F9A                       l3712 1F5C                       l2496 14AB  
                     l3640 11F0                       l3624 11B4                       l2648 0C84  
                     l2592 0B29                       l2584 0AA9                       l2576 0A63  
                     l2568 09E3                       l2744 1B19                       l3480 1E94  
                     l3472 1E85                       l3464 1E77                       l3544 0D97  
                     l3536 0CA6                       l4096 0898                       l3802 1C97  
                     l3810 1B70                       l3706 1D0C                       l3722 1FBE  
                     l3714 1F72                       l2930 1AF6                       l2498 14C9  
                     l3650 1224                       l3642 11F2                       l3626 11C1  
                     l3618 119B                       l2594 0B39                       l2586 0AC6  
                     l2578 0A6C                       l2690 06DE                       l2682 05C9  
                     l2746 1B1F                       l3490 1EAC                       l3482 1E9A  
                     l3474 1E89                       l3466 1E7A                       l3562 0F44  
                     l3546 0D9E                       l3538 0CAD                       l3554 0E53  
                     l4098 08A0                       l3804 1C9D                       l3812 1B75  
                     l3820 1BED                       l3708 1D0E                       l3724 1FC2  
                     l3716 1F8E                       l2940 1EF6                       l3740 1D7E  
                     l3732 1D60                       l2860 1B49                       l3652 1225  
                     l3644 11FB                       l3636 11D7                       l3572 10F7  
                     l2596 0B66                       l2588 0ADF                       l2692 06E4  
                     l2684 05CF                       l2748 1B21                       l3492 1EBD  
                     l3484 1E9D                       l3476 1E8E                       l3468 1E7E  
                     l3564 0F4B                       l3556 0E5A                       l3900 169C  
                     l3806 1AF7                       l3814 1B7C                       l3822 1BF2  
                     l3726 1FFC                       l3718 1F96                       l2926 1AEC  
                     l2950 1F1A                       l2942 1F0B                       l2934 1EE0  
                     l3742 1D90                       l3734 1D6A                       l2862 1B56  
                     l3670 1259                       l3662 1240                       l3654 122E  
                     l3646 1204                       l3638 11DF                       l3590 113D  
                     l3574 110A                       l2598 0B8C                       l3494 1EC3  
                     l3486 1EA4                       l3478 1E92                       l3910 1733  
                     l3902 16BF                       l3830 1506                       l3816 1B82  
                     l3808 1B6B                       l3824 1C0E                       l3728 1FFE  
                     l2928 1AF4                       l2944 1F0C                       l2936 1EED  
                     l3680 1E24                       l3744 1D9E                       l3736 1D6D  
                     l2864 1B5D                       l2856 1B43                       l3760 1067  
                     l3752 103E                       l3672 1269                       l3656 1238  
                     l3664 1252                       l3648 1216                       l3592 1146  
                     l3584 1126                       l2696 078F                       l3496 1EC4  
                     l3488 1EA8                       l3568 0FD3                       l3920 17A3  
                     l3912 175A                       l3904 16C3                       l3840 152C  
                     l3832 150C                       l3818 1B87                       l3826 1C16  
                     l2946 1F14                       l3690 1E5E                       l3682 1E31  
                     l3746 1DA7                       l3738 1D7A                       l2866 1B63  
                     l2858 1B45                       l3770 1089                       l3754 1043  
                     l3594 114F                       l3586 112C                       l3578 1113  
                     l3498 1ECB                       l3930 008D                       l3922 17EA  
                     l3914 1763                       l3906 16C9                       l3842 1530  
                     l3850 156C                       l3834 1513                       l2964 1F3B  
                     l2956 1F22                       l2948 1F16                       l3692 1E5F  
                     l3684 1E35                       l3676 1E0F                       l3748 1DAD  
                     l3780 10BA                       l3772 108D                       l3764 1070  
                     l3756 1047                       l3596 115D                       l3588 113B  
                     l3932 00B6                       l3924 002E                       l3916 178C  
                     l3908 16E8                       l3860 1597                       l3852 157A  
                     l3844 1545                       l3836 1518                       l3828 14FF  
                     l2990 1D10                       l2966 1F4B                       l2958 1F34  
                     l3694 1E68                       l3686 1E3E                       l3678 1E21  
                     l3790 10ED                       l3782 10C4                       l3774 109B  
                     l3766 1075                       l3758 1057                       l3598 1167  
                     l3950 019F                       l3942 0130                       l3934 00BF  
                     l3926 0057                       l3918 1794                       l3862 15AA  
                     l3854 157B                       l3846 1558                       l3838 151C  
                     l2992 1D14                       l2968 1F50                       l3688 1E50  
                     l3696 1E6E                       l3792 10EE                       l3784 10CE  
                     l3776 10AB                       l3768 1082                       l3960 01D8  
                     l3936 00C7                       l3928 007E                       l3944 0139  
                     l3880 15F7                       l3872 15C5                       l3864 15AE  
                     l3856 157F                       l3848 155C                       l3786 10E4  
                     l3778 10B6                       l3970 0216                       l3962 01E2  
                     l3946 016E                       l3938 00E5                       l3890 164D  
                     l3882 1605                       l3874 15E1                       l3858 1582  
                     l3866 15BF                       l3796 1C79                       l3788 10E9  
                     l3980 023F                       l3972 021F                       l3964 01FD  
                     l3956 01A1                       l3948 019D                       l3892 1651  
                     l3884 1609                       l3876 15EF                       l3868 15C1  
                     l3798 1C7F                       l3990 02F9                       l3982 0246  
                     l3966 0203                       l3894 1678                       l3886 1630  
                     l3878 15F3                       l3992 0302                       l3984 024B  
                     l3968 020F                       l3976 0224                       l3896 1683  
                     l3888 1649                       l3994 0306                       l3986 02A6  
                     l3978 0231                       l3898 1689                       l3996 030C  
                     l3988 02E5                       l3998 0319                       STR_1 18A0  
                     STR_2 18AF                       STR_3 18AF                       u3000 1DE3  
                     u3001 1DE2                       u3010 1DED                       u3011 1DEC  
                     u3110 1C74                       u3030 1E00                       u3111 1C73  
                     u3031 1DFF                       u3015 1DE9                       u3200 1290  
                     u4000 0C88                       u3120 1007                       u3040 1E05  
                     u3201 128F                       u4001 0C87                       u3105 1C68  
                     u3121 1006                       u3041 1E04                       u3025 1DF4  
                     u3210 12AE                       u3050 1C3D                       u4010 05CF  
                     u3211 12AD                       u3051 1C3C                       u4011 05CE  
                     u3300 1359                       u3220 12B9                       u3140 1019  
                     u3301 1358                       u3221 12B8                       u3141 1018  
                     u3310 1368                       u3230 12BF                       u3070 1C4F  
                     u3150 1023                       u3311 1367                       u3231 12BE  
                     u3071 1C4E                       u3151 1022                       u3135 100B  
                     u3240 12C4                       u3241 12C3                       u3065 1C41  
                     u4025 05EC                       u3410 13E3                       u3330 137E  
                     u3250 12DD                       u3090 1C60                       u3170 1036  
                     u4050 06E4                       u3411 13E2                       u3331 137D  
                     u3251 12DC                       u3091 1C5F                       u3171 1035  
                     u3155 101F                       u4051 06E3                       u4035 0648  
                     u3500 147B                       u3340 1382                       u3260 12E1  
                     u3180 1285                       u3501 147A                       u3421 13FA  
                     u3413 13DF                       u3405 13C1                       u3341 1381  
                     u3325 136B                       u3261 12E0                       u3181 1284  
                     u3085 1C50                       u3165 102A                       u4045 069D  
                     u3510 1481                       u3430 140E                       u3422 13FB  
                     u3350 1387                       u3270 1339                       u3190 128B  
                     u3511 1480                       u3431 140F                       u3423 1400  
                     u3351 1386                       u3271 1338                       u3191 128A  
                     u3095 1C5C                       u3600 14D7                       u3520 1486  
                     u3440 142C                       u3432 1414                       u3424 1401  
                     u3280 1344                       u3601 14D6                       u3521 1485  
                     u3441 142B                       u3433 1415                       u3425 1406  
                     u3361 1399                       u3281 1342                       u4065 0701  
                     u3610 14E4                       u3530 148C                       u3450 1451  
                     u3426 1407                       u3370 13AB                       u3362 13A0  
                     u3290 1345                       u6010 1193                       u3611 14E3  
                     u3531 148B                       u3451 1450                       u3371 13AA  
                     u3363 13A7                       u3275 1335                       u6011 1192  
                     u4075 074E                       u5060 1BC6                       u3620 14E9  
                     u3540 1493                       u3460 1456                       u3380 13AF  
                     u6100 1234                       u6020 119A                       u3700 099B  
                     u4260 1B19                       u5061 1BC5                       u3621 14E8  
                     u3541 1492                       u3461 1455                       u3381 13AE  
                     u6101 1233                       u6021 1199                       u6005 1183  
                     u3701 099A                       u4085 079A                       u4261 1B18  
                     u5070 1BCB                       u3630 14FA                       u3550 1499  
                     u3390 13BE                       u6110 1238                       u2830 1B9E  
                     u3710 09A0                       u4270 1B1F                       u5071 1BCA  
                     u3631 14F9                       u3551 1498                       u3391 13BD  
                     u6111 1237                       u2831 1B9D                       u3711 099F  
                     u4271 1B1E                       u5080 1BDC                       u3560 14AB  
                     u3480 146C                       u6200 1E35                       u6120 123F  
                     u6040 11AB                       u3640 094D                       u7000 0544  
                     u5081 1BDB                       u3561 14AA                       u3481 146B  
                     u6201 1E34                       u6121 123E                       u6041 11AA  
                     u3801 0AEE                       u3721 09F1                       u3641 094C  
                     u7001 0543                       u5090 1BE1                       u3570 14BA  
                     u3490 1471                       u6050 11C1                       u2850 1BB2  
                     u3802 0AF5                       u3722 09F8                       u3650 0953  
                     u7010 0552                       u5091 1BE0                       u3491 1470  
                     u3475 1461                       u6051 11C0                       u6035 119D  
                     u2851 1BB1                       u3811 0B1B                       u3803 0AFC  
                     u3731 0A0D                       u3723 09FF                       u3651 0952  
                     u7011 0551                       u6300 1F9A                       u3580 14C9  
                     u6220 1E50                       u4540 1B49                       u6140 1251  
                     u6060 11D5                       u3812 0B22                       u3732 0A14  
                     u3660 0958                       u7020 056A                       u6301 1F99  
                     u3581 14C8                       u6221 1E4F                       u4541 1B48  
                     u6141 1250                       u6061 11D4                       u2845 1BA5  
                     u3821 0B48                       u3813 0B29                       u3741 0A39  
                     u3733 0A1B                       u3661 0957                       u7021 0569  
                     u3590 14D2                       u6150 1258                       u3910 0BEC  
                     u3830 0B72                       u3822 0B4F                       u3742 0A40  
                     u3670 0979                       u7030 0580                       u6311 1FA9  
                     u3591 14D1                       u3575 14B5                       u6215 1E37  
                     u6151 1257                       u6135 1241                       u3911 0BEB  
                     u3823 0B56                       u3751 0A55                       u3743 0A47  
                     u3671 0978                       u7031 057F                       u7015 054E  
                     u6320 1FC2                       u6312 1FAA                       u6240 1E6E  
                     u6400 1DAD                       u6080 1216                       u3920 0BF1  
                     u3752 0A5C                       u3680 097F                       u2960 1DBB  
                     u7040 0597                       u6321 1FC1                       u6313 1FAF  
                     u6241 1E6D                       u6225 1E4C                       u6401 1DAC  
                     u6081 1215                       u3921 0BF0                       u3905 0BDB  
                     u3841 0B7E                       u3753 0A63                       u3681 097E  
                     u2961 1DBA                       u7041 0596                       u7025 0566  
                     u6250 1CD6                       u6314 1FB0                       u4810 1F33  
                     u4570 1B63                       u6410 1043                       u6170 1269  
                     u3930 0C05                       u3850 0B9A                       u3842 0B85  
                     u3690 0984                       u2970 1DC6                       u7050 05A3  
                     u7107 1C83                       u6251 1CD5                       u6331 1FD1  
                     u6315 1FB5                       u4811 1F32                       u6235 1E60  
                     u4571 1B62                       u4555 1B50                       u6411 1042  
                     u6171 1268                       u6075 11FD                       u3931 0C04  
                     u3843 0B8C                       u3835 0B6D                       u3771 0A8B  
                     u3691 0983                       u2971 1DC5                       u7051 05A2  
                     u6260 1CF2                       u6340 1FFC                       u6332 1FD2  
                     u6316 1FB6                       u4820 1F3A                       u6180 1E21  
                     u6500 10C0                       u6420 1047                       u3940 0C0C  
                     u3772 0A92                       u2980 1DD1                       u7060 05C1  
                     u7117 1C92                       u6261 1CF1                       u6341 1FFB  
                     u6333 1FD7                       u4821 1F39                       u4805 1F23  
                     u6181 1E20                       u4565 1B57                       u6501 10BF  
                     u6421 1046                       u6165 125B                       u6085 1212  
                     u3941 0C0B                       u3861 0BA6                       u3781 0AB8  
                     u3773 0A99                       u3765 0A65                       u2981 1DD0  
                     u7061 05BE                       u6270 1D0C                       u6334 1FD8  
                     u4750 1AF4                       u6350 1D6A                       u6510 10C4  
                     u6430 1067                       u3950 0C12                       u3862 0BAD  
                     u3782 0ABF                       u5710 1EBD                       u7127 1C9F  
                     u6271 1D0B                       u6335 1FDD                       u4751 1AF3  
                     u6351 1D69                       u6511 10C3                       u6431 1066  
                     u6095 1227                       u3951 0C11                       u3863 0BB4  
                     u3855 0B95                       u3783 0AC6                       u5711 1EBC  
                     i1l56 07F8                       u6336 1FDE                       u6280 1F72  
                     u4840 1F4B                       u4760 1EED                       u6520 10D9  
                     u3960 0C24                       u5800 0D9E                       u6600 150C  
                     u7137 0816                       u6345 1FF8                       u6281 1F71  
                     u4841 1F4A                       u4761 1EEC                       u3961 0C23  
                     u5705 1EAD                       u5801 0D9D                       u6601 150B  
                     u6290 1F8E                       u4850 1F50                       u4770 1F04  
                     u6370 1D7E                       u6530 10E9                       u6450 1088  
                     u3970 0C33                       u3890 0BD8                       u5730 1ED1  
                     u5650 1E7E                       u6610 152C                       u7147 1BCF  
                     u6275 1D08                       u6291 1F8D                       u4851 1F4F  
                     u4835 1F3D                       u6195 1E26                       u6371 1D7D  
                     u6531 10E8                       u6451 1087                       u3891 0BD7  
                     u3875 0BB6                       u3795 0AC8                       u5731 1ED0  
                     u5715 1EB9                       u5651 1E7D                       u2995 1DD5  
                     u6611 152B                       u4780 1F1A                       u6380 1D90  
                     u6540 10ED                       u3980 0C50                       u5740 1ED6  
                     u5660 1E89                       u6700 175A                       u6620 156C  
                     u7157 1BE5                       u4781 1F19                       u6381 1D8F  
                     u6365 1D6F                       u6541 10EC                       u6525 10D4  
                     u6445 107A                       u3981 0C4F                       u3885 0BCD  
                     u5741 1ED5                       u5725 1EC5                       u5661 1E88  
                     u6701 1759                       u6621 156B                       u7077 0932  
                     u6550 1B70                       u4790 1F21                       u6470 10AA  
                     u3990 0C6A                       u5670 1E9A                       u5750 0CA4  
                     u6710 178C                       u6630 157A                       u6551 1B6F  
                     u7087 1B37                       u4791 1F20                       u4775 1EFF  
                     u6471 10A9                       u3991 0C69                       u3975 0C2E  
                     u5671 1E99                       u5815 0DB1                       u5751 0CA3  
                     u6711 178B                       u6631 1579                       u6560 1B82  
                     u5920 110A                       u5840 0E5A                       u5760 0CAD  
                     u6800 01E2                       u6720 17A3                       u6640 15BE  
                     u6561 1B81                       u7097 1B3F                       u6385 1D8C  
                     u6465 109C                       u5921 1109                       u3985 0C4C  
                     u5905 0F9A                       u5841 0E59                       u5825 0DED  
                     u5761 0CAC                       u6801 01E1                       u6721 17A2  
                     u6641 15BD                       u6570 1BFC                       u6490 10BA  
                     u5930 1124                       u5690 1EAC                       u6810 01FD  
                     u6730 002E                       u6650 15EF                       u6395 1D9F  
                     u6491 10B9                       u5931 1123                       u3995 0C66  
                     u5691 1EAB                       u5915 0FD6                       u5835 0E29  
                     u6811 01FC                       u6731 17FA                       u6651 15EC  
                     u6580 1C20                       u6820 020F                       u6740 0057  
                     u6660 15F3                       u6485 10AF                       u5685 1E9E  
                     u6821 020E                       u6741 0056                       u6725 179F  
                     u6661 15F2                       u6590 1C32                       u5950 115D  
                     u6830 0231                       u6750 007E                       u6670 1630  
                     u6591 1C31                       u5951 115C                       u5855 0E7C  
                     u5775 0CCF                       u6831 0230                       u6751 007D  
                     u6735 17F5                       u6671 162F                       u5880 0F4B  
                     u6920 04CF                       u6840 023F                       u6760 008D  
                     u6680 1678                       u5945 1148                       u5881 0F4A  
                     u5865 0EB8                       u5785 0D0B                       u6921 04CE  
                     u6905 03CA                       u6841 023E                       u6761 008C  
                     u6681 1677                       u5970 1176                       u6930 04E7  
                     u6770 00B6                       u6690 16C3                       u5971 1175  
                     u5955 1159                       u5875 0F03                       u5795 0D56  
                     u6931 04E6                       u6915 0470                       u6835 022D  
                     u6771 00B5                       u6691 16C2                       u5980 117A  
                     u6940 04EE                       u6860 02F8                       u5981 1179  
                     u5965 1169                       u6941 04ED                       u6861 02F7  
                     u6765 0089                       u5990 1181                       u6950 04F6  
                     u6870 0319                       u6790 01D7                       u5991 1180  
                     u5895 0F5E                       u6951 04F5                       u6871 0318  
                     u6855 024E                       u6791 01D6                       u6960 0507  
                     u6880 0328                       u6961 0506                       u6881 0327  
                     u6785 01A4                       u6970 051D                       u6890 0343  
                     u6971 051C                       u6891 0342                       u6875 0315  
                     u6795 01D3                       u6980 052E                       u6981 052D  
                     u6965 0503                       u6885 0324                       u6990 053A  
                     u6991 0539                       u6975 0519             AADC@banderaADC 0076  
        ?_Lcd_Write_String 0078                       _main 081F                       btemp 007E  
                     start 000C         ??_Lcd_Write_String 0020            __end_of_Lcd_Cmd 081F  
                    ??_ISR 0070                      ?_AADC 0073              ___fltol@sign1 0060  
          __end_of___fladd 14FC                      ?_main 0070            __end_of___awdiv 1EE0  
          __end_of___flneg 1AF7            __end_of___awmod 1E0F            __end_of___flmul 0C9D  
          __end_of___flsub 1D60            __end_of___fltol 1F5C                      _ANSEL 0188  
          __end_of___lldiv 1E77            ___awdiv@divisor 0020            __end_of___llmod 1DB6  
          __end_of___lwdiv 1C79            __end_of___lwmod 103B            ___awdiv@counter 0025  
                    _PORTC 0007                      _PORTD 0008    __size_of_Lcd_Set_Cursor 0026  
                    _TRISC 0087                      _TRISD 0088            __end_of_dpowers 18A0  
                    _scale 0C9D            __end_of_isdigit 1B23                      _setup 1B04  
                    pclath 000A                      status 0003                      wtemp0 007E  
          __end_of_sprintf 05C6               __end_of_AADC 1BED           __end_of_Lcd_Init 1CC0  
         __end_of_Lcd_Port 1AE4            __initialization 000F               __end_of_main 093C  
                   ??_AADC 0074                     ??_main 00CD         __size_of_Lcd_Clear 000D  
     __size_of__tdiv_to_l_ 00BD                     _ADCON0 001F           ___llmod@dividend 0024  
                   ?_scale 0044                     _ADRESH 001E           ___awdiv@dividend 0022  
                   ?_setup 0070                     i1l3380 07D9                     i1l3390 07ED  
                   i1l3382 07DE                     i1l3392 07F3                     i1l3384 07E4  
                   i1l3386 07E5                     i1l3378 07D3                     i1l3396 07F6  
                   i1l3388 07E8                     _INTCON 000B                     u562_20 07D9  
                   u562_21 07D8                     u563_20 07DE                     u563_21 07DD  
                   u564_20 07ED                     u564_21 07EC                  ??_Lcd_Cmd 0074  
  __size_of_Lcd_Write_Char 0020           __end_of___xxtofl 10F7           __end_of__powers_ 1844  
                   ___flge 1F5C                     ___fleq 1CC0                  ??___fladd 0060  
                   ___wmul 1B43                  ??___awdiv 0024                  ??___flneg 0077  
                ??___awmod 0077                  ??___flmul 0032                  ??___flsub 007A  
                ??___fltol 005B                  ??___lldiv 0073                  ??___llmod 0073  
                ??___lwdiv 0079                  ??___lwmod 0077                     _fround 05C6  
         ___awdiv@quotient 0027            ___awmod@divisor 0073            ___awmod@counter 0078  
                ??_isdigit 0073         __size_of__Umul8_16 0029                     saved_w 007E  
                ??_sprintf 00AD            Lcd_Set_Cursor@a 0020            Lcd_Set_Cursor@b 0077  
               ___flge@ff1 0020                 ___flge@ff2 0024               ___xxtofl@arg 0026  
             ___xxtofl@exp 0025               ___xxtofl@val 0073                 ___fleq@ff1 0020  
               ___fleq@ff2 0024    __end_of__initialization 002A                 ___flneg@f1 0073  
        __end_of_Lcd_Clear 1B04                 ___fltol@f1 0057             __pcstackCOMMON 0070  
             __pidataBANK1 0803              __end_of_scale 1000              __end_of_setup 1B11  
                  AADC@pot 0075             _Lcd_Set_Cursor 1B68                 __div_to_l_ 11B4  
               _banderaADC 00EC                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
          __div_to_l_@exp1 0079            __div_to_l_@cntr 0078                    ??_scale 0048  
          __div_to_l_@quot 0074               sprintf@width 00BD                    ??_setup 0073  
               __pbssBANK0 006C                 __pbssBANK1 00D1              __div_to_l_@f1 0020  
            __div_to_l_@f2 0024          __end_of__Umul8_16 1BB7                 __pmaintext 081F  
                  ?___flge 0020                    ?___fleq 0020                    ?___wmul 0073  
               __pintentry 0004                    ?_fround 0044  __size_of_Lcd_Write_String 0046  
   __end_of_Lcd_Set_Cursor 1B8E                  ?___xxtofl 0073                 ??_Lcd_Init 0077  
               ??_Lcd_Port 0073                 __stringtab 1800             _Lcd_Write_Char 1B23  
                  _Lcd_Cmd 0805          __end_of__npowers_ 1878                    _Num_Pot 00EB  
          __size_of___flge 00A4            __size_of___fleq 0050                    ___fladd 1274  
                  ___awdiv 1E77                    ___flneg 1AEC                    ___awmod 1DB6  
                  ___flmul 093C                    ___flsub 1D10                    ___fltol 1EE0  
                  ___lldiv 1E0F            __size_of___wmul 0025                    ___llmod 1D60  
                  ___lwdiv 1C33                 _fround$984 0053                 _fround$985 004F  
                  ___lwmod 1001            __size_of_fround 020D            ?_Lcd_Set_Cursor 0077  
                  __ptext1 14FC                    __ptext2 0C9D                    __ptext3 1DB6  
                  __ptext4 1E77                    __ptext5 1B11                    __ptext6 05C6  
                  __ptext7 1001                    __ptext8 1C33                    __ptext9 093C  
             __size_of_ISR 002C                ?__div_to_l_ 0020                    _dpowers 1878  
                  _isdigit 1B11                 ??___xxtofl 0020           ___awmod@dividend 0075  
                  _sprintf 14FC                    clrloop0 1AE5     __end_of_Lcd_Write_Char 1B43  
     end_of_initialization 002A            ___lldiv@divisor 0020            ___lldiv@counter 0078  
                  psplit$0 E0030                  Lcd_Port@a 0073             __tdiv_to_l_@f1 0020  
           __tdiv_to_l_@f2 0024              ??__tdiv_to_l_ 0073                  _PORTDbits 0008  
              ___fladd@grs 006B                AADC@Num_Pot 0073              ___xxtofl@sign 0024  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0078          Lcd_Write_String@i 0023  
              ___flmul@grs 0038        __size_of__div_to_l_ 00C0                  _Lcd_Clear 1AF7  
           __end_of___flge 2000             __end_of___fleq 1D10             __end_of___wmul 1B68  
         _Lcd_Write_String 1BED          pnum$text1_split_1 0030             __end_of_fround 07D3  
      start_initialization 000F                __end_of_ISR 07FF        __end_of__tdiv_to_l_ 11B4  
        __size_of_Lcd_Init 0047          __size_of_Lcd_Port 0006            ___llmod@divisor 0020  
          ___llmod@counter 0074                 ?_Lcd_Clear 0070                   ??___flge 0073  
                 ??___fleq 0073                   ??___wmul 0077                  __Umul8_16 1B8E  
              __pdataBANK1 00EB            Lcd_Write_Char@a 0077            Lcd_Write_Char@y 0076  
                 ??_fround 0048              sprintf@tmpval 00BF                  ___fladd@a 005C  
                ___fladd@b 0058                 fround@prec 0057                  ___flmul@a 002E  
                ___flmul@b 002A                __pbssCOMMON 007A                  ___flsub@a 00A0  
                ___flsub@b 00A4                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0          __size_of___xxtofl 00BC                   ?_Lcd_Cmd 0070  
              sprintf@flag 00BB                sprintf@eexp 00C3                sprintf@fval 00C5  
              sprintf@prec 00CA           ___lwdiv@dividend 0022           ??_Lcd_Set_Cursor 0078  
                 ?___fladd 0058                   ?___awdiv 0020                   ?___flneg 0073  
                 ?___awmod 0073                   ?___flmul 002A                   ?___flsub 00A0  
                 ?___fltol 0057                   ?___lldiv 0020                   ?___llmod 0020  
                __npowers_ 1844                 ?__Umul8_16 0073                   ?___lwdiv 0020  
                 ?___lwmod 0073                  __pstrings 1800                __tdiv_to_l_ 10F7  
             ??__div_to_l_ 0073                  _conversor 00D1                   ?_isdigit 0070  
                _scale$986 0052           ___lwdiv@quotient 0024                   ?_sprintf 00A8  
           __size_of_scale 0363             __size_of_setup 000D          interrupt_function 0004  
           ___wmul@product 0077                  clear_ram0 1AE4                   _PIE1bits 008C  
                 Lcd_Cmd@a 0076                   _PIR1bits 000C         __end_of__div_to_l_ 1274  
              ??_Lcd_Clear 0077                 _ADCON0bits 001F                __stringbase 180F  
               _ADCON1bits 009F          ___wmul@multiplier 0073           ??_Lcd_Write_Char 0074  
                 _Lcd_Init 1C79                   _Lcd_Port 1ADE   __end_of_Lcd_Write_String 1C33  
         __size_of_Lcd_Cmd 001A                ??__Umul8_16 0075           __size_of___fladd 0288  
         __size_of___awdiv 0069           __size_of___flneg 000B           __size_of___awmod 0059  
         __size_of___flmul 0361           __size_of___flsub 0050           __size_of___fltol 007C  
         __size_of___lldiv 0068           __size_of___llmod 0056           __size_of___lwdiv 0046  
         __size_of___lwmod 003A         __end_of__stringtab 1810                _isdigit$801 0073  
               sprintf@val 00B7                   ___xxtofl 103B           __size_of_isdigit 0012  
          ___lwdiv@divisor 0020            ___lwdiv@counter 0026                   __ptext10 1B8E  
                 __ptext11 10F7                   __ptext20 1AEC                   __ptext12 11B4  
                 __ptext21 1F5C                   __ptext13 103B                   __ptext30 1ADE  
                 __ptext22 1CC0                   __ptext14 1B43                   __ptext31 1BB7  
                 __ptext23 1B04                   __ptext15 1D60                   __ptext32 07D3  
                 __ptext24 1BED                   __ptext16 1E0F                   __ptext25 1B23  
                 __ptext17 1EE0                   __ptext26 1B68                   __ptext18 1D10  
                 __ptext27 1C79                   __ptext19 1274                   __ptext28 1AF7  
                 __ptext29 0805                   __powers_ 1810              __size_of_AADC 0036  
         __size_of_sprintf F0CA              __size_of_main 011D                  pnum$text1 000E  
                 isdigit@c 0074                   scale@scl 0056                   intlevel1 0000  
                sprintf@ap 00B6           __tdiv_to_l_@exp1 002D           __tdiv_to_l_@cntr 002C  
                sprintf@sp 00C9           __tdiv_to_l_@quot 0028           ___lwmod@dividend 0075  
         ___lldiv@dividend 0024                  stringcode 180A         Lcd_Set_Cursor@temp 0021  
             ?__tdiv_to_l_ 0020     __Umul8_16@multiplicand 0073                   sprintf@c 00CC  
                 sprintf@f 00A8           ___lldiv@quotient 0074            ___lwmod@divisor 0073  
          ___lwmod@counter 0078                   stringdir 180A                   stringtab 1800  
            ___fladd@signs 0068               ___fladd@aexp 0069               ___fladd@bexp 006A  
     __Umul8_16@multiplier 0024          __Umul8_16@product 0020  
