

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 20 22:41:01 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	psect	text2_split_1,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008F                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0092                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  0105                     	;# 
   153  0107                     	;# 
   154  0108                     	;# 
   155  0109                     	;# 
   156  010C                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0185                     	;# 
   162  0187                     	;# 
   163  0188                     	;# 
   164  0189                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0000                     	;# 
   168  0001                     	;# 
   169  0002                     	;# 
   170  0003                     	;# 
   171  0004                     	;# 
   172  0005                     	;# 
   173  0006                     	;# 
   174  0007                     	;# 
   175  0008                     	;# 
   176  0009                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000D                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0013                     	;# 
   188  0014                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  0088                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  0105                     	;# 
   231  0107                     	;# 
   232  0108                     	;# 
   233  0109                     	;# 
   234  010C                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  0185                     	;# 
   240  0187                     	;# 
   241  0188                     	;# 
   242  0189                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  008F                     	;# 
   290  0090                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  0105                     	;# 
   309  0107                     	;# 
   310  0108                     	;# 
   311  0109                     	;# 
   312  010C                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010E                     	;# 
   316  010F                     	;# 
   317  0185                     	;# 
   318  0187                     	;# 
   319  0188                     	;# 
   320  0189                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0008                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  000E                     	;# 
   339  000F                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0014                     	;# 
   345  0015                     	;# 
   346  0015                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  0081                     	;# 
   359  0085                     	;# 
   360  0086                     	;# 
   361  0087                     	;# 
   362  0088                     	;# 
   363  0089                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  008F                     	;# 
   368  0090                     	;# 
   369  0091                     	;# 
   370  0092                     	;# 
   371  0093                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0094                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009C                     	;# 
   383  009D                     	;# 
   384  009E                     	;# 
   385  009F                     	;# 
   386  0105                     	;# 
   387  0107                     	;# 
   388  0108                     	;# 
   389  0109                     	;# 
   390  010C                     	;# 
   391  010C                     	;# 
   392  010D                     	;# 
   393  010E                     	;# 
   394  010F                     	;# 
   395  0185                     	;# 
   396  0187                     	;# 
   397  0188                     	;# 
   398  0189                     	;# 
   399  018C                     	;# 
   400  018D                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  000E                     	;# 
   417  000F                     	;# 
   418  0010                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0013                     	;# 
   422  0014                     	;# 
   423  0015                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0017                     	;# 
   427  0018                     	;# 
   428  0019                     	;# 
   429  001A                     	;# 
   430  001B                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  001D                     	;# 
   434  001E                     	;# 
   435  001F                     	;# 
   436  0081                     	;# 
   437  0085                     	;# 
   438  0086                     	;# 
   439  0087                     	;# 
   440  0088                     	;# 
   441  0089                     	;# 
   442  008C                     	;# 
   443  008D                     	;# 
   444  008E                     	;# 
   445  008F                     	;# 
   446  0090                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0094                     	;# 
   453  0095                     	;# 
   454  0096                     	;# 
   455  0097                     	;# 
   456  0098                     	;# 
   457  0099                     	;# 
   458  009A                     	;# 
   459  009B                     	;# 
   460  009C                     	;# 
   461  009D                     	;# 
   462  009E                     	;# 
   463  009F                     	;# 
   464  0105                     	;# 
   465  0107                     	;# 
   466  0108                     	;# 
   467  0109                     	;# 
   468  010C                     	;# 
   469  010C                     	;# 
   470  010D                     	;# 
   471  010E                     	;# 
   472  010F                     	;# 
   473  0185                     	;# 
   474  0187                     	;# 
   475  0188                     	;# 
   476  0189                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479                           
   480                           	psect	idataBANK0
   481  00D4                     __pidataBANK0:
   482                           
   483                           ;initializer for _banderaADC
   484  00D4  3401               	retlw	1
   485                           
   486                           	psect	strings
   487  0003                     __pstrings:
   488  0003                     stringtab:
   489  0003                     __stringtab:
   490                           
   491                           ;	String table - string pointers are 1 byte each
   492  0003  1BFF               	btfsc	btemp+1,7
   493  0004  280D               	ljmp	stringcode
   494  0005  1383               	bcf	3,7
   495  0006  187F               	btfsc	btemp+1,0
   496  0007  1783               	bsf	3,7
   497  0008  0800               	movf	0,w
   498  0009  0A84               	incf	4,f
   499  000A  1903               	skipnz
   500  000B  0AFF               	incf	btemp+1,f
   501  000C  0008               	return
   502  000D                     stringcode:
   503  000D                     stringdir:
   504  000D  3000               	movlw	high stringdir
   505  000E  008A               	movwf	10
   506  000F  0804               	movf	4,w
   507  0010  0A84               	incf	4,f
   508  0011  0782               	addwf	2,f
   509  0012                     __stringbase:
   510  0012  3400               	retlw	0
   511  0013                     __end_of__stringtab:
   512  0013                     __powers_:
   513  0013  3400               	retlw	0
   514  0014  3400               	retlw	0
   515  0015  3480               	retlw	128
   516  0016  343F               	retlw	63
   517  0017  3400               	retlw	0
   518  0018  3400               	retlw	0
   519  0019  3420               	retlw	32
   520  001A  3441               	retlw	65
   521  001B  3400               	retlw	0
   522  001C  3400               	retlw	0
   523  001D  34C8               	retlw	200
   524  001E  3442               	retlw	66
   525  001F  3400               	retlw	0
   526  0020  3400               	retlw	0
   527  0021  347A               	retlw	122
   528  0022  3444               	retlw	68
   529  0023  3400               	retlw	0
   530  0024  3440               	retlw	64
   531  0025  341C               	retlw	28
   532  0026  3446               	retlw	70
   533  0027  3400               	retlw	0
   534  0028  3450               	retlw	80
   535  0029  34C3               	retlw	195
   536  002A  3447               	retlw	71
   537  002B  3400               	retlw	0
   538  002C  3424               	retlw	36
   539  002D  3474               	retlw	116
   540  002E  3449               	retlw	73
   541  002F  3480               	retlw	128
   542  0030  3496               	retlw	150
   543  0031  3418               	retlw	24
   544  0032  344B               	retlw	75
   545  0033  3420               	retlw	32
   546  0034  34BC               	retlw	188
   547  0035  34BE               	retlw	190
   548  0036  344C               	retlw	76
   549  0037  3428               	retlw	40
   550  0038  346B               	retlw	107
   551  0039  346E               	retlw	110
   552  003A  344E               	retlw	78
   553  003B  34F9               	retlw	249
   554  003C  3402               	retlw	2
   555  003D  3415               	retlw	21
   556  003E  3450               	retlw	80
   557  003F  34EC               	retlw	236
   558  0040  3478               	retlw	120
   559  0041  34AD               	retlw	173
   560  0042  3460               	retlw	96
   561  0043  34CA               	retlw	202
   562  0044  34F2               	retlw	242
   563  0045  3449               	retlw	73
   564  0046  3471               	retlw	113
   565  0047                     __end_of__powers_:
   566  0047                     __npowers_:
   567  0047  3400               	retlw	0
   568  0048  3400               	retlw	0
   569  0049  3480               	retlw	128
   570  004A  343F               	retlw	63
   571  004B  34CD               	retlw	205
   572  004C  34CC               	retlw	204
   573  004D  34CC               	retlw	204
   574  004E  343D               	retlw	61
   575  004F  340A               	retlw	10
   576  0050  34D7               	retlw	215
   577  0051  3423               	retlw	35
   578  0052  343C               	retlw	60
   579  0053  346F               	retlw	111
   580  0054  3412               	retlw	18
   581  0055  3483               	retlw	131
   582  0056  343A               	retlw	58
   583  0057  3417               	retlw	23
   584  0058  34B7               	retlw	183
   585  0059  34D1               	retlw	209
   586  005A  3438               	retlw	56
   587  005B  34AC               	retlw	172
   588  005C  34C5               	retlw	197
   589  005D  3427               	retlw	39
   590  005E  3437               	retlw	55
   591  005F  34BD               	retlw	189
   592  0060  3437               	retlw	55
   593  0061  3486               	retlw	134
   594  0062  3435               	retlw	53
   595  0063  3495               	retlw	149
   596  0064  34BF               	retlw	191
   597  0065  34D6               	retlw	214
   598  0066  3433               	retlw	51
   599  0067  3477               	retlw	119
   600  0068  34CC               	retlw	204
   601  0069  342B               	retlw	43
   602  006A  3432               	retlw	50
   603  006B  345F               	retlw	95
   604  006C  3470               	retlw	112
   605  006D  3489               	retlw	137
   606  006E  3430               	retlw	48
   607  006F  34FF               	retlw	255
   608  0070  34E6               	retlw	230
   609  0071  34DB               	retlw	219
   610  0072  342E               	retlw	46
   611  0073  3408               	retlw	8
   612  0074  34E5               	retlw	229
   613  0075  343C               	retlw	60
   614  0076  341E               	retlw	30
   615  0077  3460               	retlw	96
   616  0078  3442               	retlw	66
   617  0079  34A2               	retlw	162
   618  007A  340D               	retlw	13
   619  007B                     __end_of__npowers_:
   620  007B                     _dpowers:
   621  007B  3401               	retlw	1
   622  007C  3400               	retlw	0
   623  007D  3400               	retlw	0
   624  007E  3400               	retlw	0
   625  007F  340A               	retlw	10
   626  0080  3400               	retlw	0
   627  0081  3400               	retlw	0
   628  0082  3400               	retlw	0
   629  0083  3464               	retlw	100
   630  0084  3400               	retlw	0
   631  0085  3400               	retlw	0
   632  0086  3400               	retlw	0
   633  0087  34E8               	retlw	232
   634  0088  3403               	retlw	3
   635  0089  3400               	retlw	0
   636  008A  3400               	retlw	0
   637  008B  3410               	retlw	16
   638  008C  3427               	retlw	39
   639  008D  3400               	retlw	0
   640  008E  3400               	retlw	0
   641  008F  34A0               	retlw	160
   642  0090  3486               	retlw	134
   643  0091  3401               	retlw	1
   644  0092  3400               	retlw	0
   645  0093  3440               	retlw	64
   646  0094  3442               	retlw	66
   647  0095  340F               	retlw	15
   648  0096  3400               	retlw	0
   649  0097  3480               	retlw	128
   650  0098  3496               	retlw	150
   651  0099  3498               	retlw	152
   652  009A  3400               	retlw	0
   653  009B  3400               	retlw	0
   654  009C  34E1               	retlw	225
   655  009D  34F5               	retlw	245
   656  009E  3405               	retlw	5
   657  009F  3400               	retlw	0
   658  00A0  34CA               	retlw	202
   659  00A1  349A               	retlw	154
   660  00A2  343B               	retlw	59
   661  00A3                     __end_of_dpowers:
   662  0014                     _SSPCON	set	20
   663  0019                     _TXREG	set	25
   664  000B                     _INTCONbits	set	11
   665  0018                     _RCSTAbits	set	24
   666  0013                     _SSPBUF	set	19
   667  0007                     _PORTCbits	set	7
   668  0005                     _PORTAbits	set	5
   669  0009                     _PORTE	set	9
   670  0008                     _PORTD	set	8
   671  0007                     _PORTC	set	7
   672  0009                     _PORTEbits	set	9
   673  0006                     _PORTB	set	6
   674  0094                     _SSPSTATbits	set	148
   675  0094                     _SSPSTAT	set	148
   676  0099                     _SPBRG	set	153
   677  008C                     _PIE1bits	set	140
   678  0098                     _TXSTAbits	set	152
   679  0087                     _TRISCbits	set	135
   680  0086                     _TRISB	set	134
   681  0089                     _TRISE	set	137
   682  0087                     _TRISC	set	135
   683  0088                     _TRISD	set	136
   684  043B                     _TRISC3	set	1083
   685  043D                     _TRISC5	set	1085
   686  04C1                     _TRMT	set	1217
   687  0187                     _BAUDCTLbits	set	391
   688  0188                     _ANSEL	set	392
   689  00A3                     STR_1:
   690  00A3  3453               	retlw	83	;'S'
   691  00A4  3431               	retlw	49	;'1'
   692  00A5  343A               	retlw	58	;':'
   693  00A6  3420               	retlw	32	;' '
   694  00A7  3420               	retlw	32	;' '
   695  00A8  3420               	retlw	32	;' '
   696  00A9  3453               	retlw	83	;'S'
   697  00AA  3432               	retlw	50	;'2'
   698  00AB  343A               	retlw	58	;':'
   699  00AC  3420               	retlw	32	;' '
   700  00AD  3420               	retlw	32	;' '
   701  00AE  3420               	retlw	32	;' '
   702  00AF  3420               	retlw	32	;' '
   703  00B0  3453               	retlw	83	;'S'
   704  00B1  3433               	retlw	51	;'3'
   705  00B2  343A               	retlw	58	;':'
   706  00B3  3420               	retlw	32	;' '
   707  00B4  340A               	retlw	10
   708  00B5  3400               	retlw	0
   709  00B6                     STR_7:
   710  00B6  3425               	retlw	37	;'%'
   711  00B7  3433               	retlw	51	;'3'
   712  00B8  342E               	retlw	46	;'.'
   713  00B9  3430               	retlw	48	;'0'
   714  00BA  3466               	retlw	102	;'f'
   715  00BB  3443               	retlw	67	;'C'
   716  00BC  3400               	retlw	0
   717  00BD                     STR_5:
   718  00BD  3425               	retlw	37	;'%'
   719  00BE  3433               	retlw	51	;'3'
   720  00BF  342E               	retlw	46	;'.'
   721  00C0  3432               	retlw	50	;'2'
   722  00C1  3466               	retlw	102	;'f'
   723  00C2  3456               	retlw	86	;'V'
   724  00C3  3400               	retlw	0
   725  00C4                     STR_2:
   726  00C4  3453               	retlw	83	;'S'
   727  00C5  3431               	retlw	49	;'1'
   728  00C6  343A               	retlw	58	;':'
   729  00C7  3400               	retlw	0
   730  00C8                     STR_3:
   731  00C8  3453               	retlw	83	;'S'
   732  00C9  3432               	retlw	50	;'2'
   733  00CA  343A               	retlw	58	;':'
   734  00CB  3400               	retlw	0
   735  00CC                     STR_4:
   736  00CC  3453               	retlw	83	;'S'
   737  00CD  3433               	retlw	51	;'3'
   738  00CE  343A               	retlw	58	;':'
   739  00CF  3400               	retlw	0
   740  00D0                     STR_6:
   741  00D0  3425               	retlw	37	;'%'
   742  00D1  3464               	retlw	100	;'d'
   743  00D2  3400               	retlw	0
   744                           
   745                           	psect	cinit
   746  07E3                     start_initialization:	
   747                           ; #config settings
   748                           
   749  07E3                     __initialization:
   750                           
   751                           ; Initialize objects allocated to BANK0
   752  07E3  120A  118A  20D4  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   753  07E8  00EF               	movwf	__pdataBANK0& (0+127)
   754                           
   755                           ; Clear objects allocated to BANK3
   756  07E9  1783               	bsf	3,7	;select IRP bank2
   757  07EA  3090               	movlw	low __pbssBANK3
   758  07EB  0084               	movwf	4
   759  07EC  30B8               	movlw	low (__pbssBANK3+40)
   760  07ED  160A  158A  20B9  120A  118A  	fcall	clear_ram0
   761                           
   762                           ; Clear objects allocated to BANK1
   763  07F2  1383               	bcf	3,7	;select IRP bank0
   764  07F3  30CA               	movlw	low __pbssBANK1
   765  07F4  0084               	movwf	4
   766  07F5  30EE               	movlw	low (__pbssBANK1+36)
   767  07F6  160A  158A  20B9  120A  118A  	fcall	clear_ram0
   768                           
   769                           ; Clear objects allocated to BANK0
   770  07FB  01EE               	clrf	__pbssBANK0& (0+127)
   771  07FC                     end_of_initialization:	
   772                           ;End of C runtime variable initialization code
   773                           
   774  07FC                     __end_of__initialization:
   775  07FC  0183               	clrf	3
   776  07FD  160A  118A  2874   	ljmp	_main	;jump to C main() function
   777                           
   778                           	psect	bssBANK0
   779  006E                     __pbssBANK0:
   780  006E                     _mensaje:
   781  006E                     	ds	1
   782                           
   783                           	psect	dataBANK0
   784  006F                     __pdataBANK0:
   785  006F                     _banderaADC:
   786  006F                     	ds	1
   787                           
   788                           	psect	bssBANK1
   789  00CA                     __pbssBANK1:
   790  00CA                     _n:
   791  00CA                     	ds	4
   792  00CE                     _p:
   793  00CE                     	ds	4
   794  00D2                     _x:
   795  00D2                     	ds	4
   796  00D6                     _count:
   797  00D6                     	ds	1
   798  00D7                     _esclavo1:
   799  00D7                     	ds	1
   800  00D8                     _adc:
   801  00D8                     	ds	1
   802  00D9                     _s:
   803  00D9                     	ds	20
   804  00ED                     _lmm:
   805  00ED                     	ds	1
   806                           
   807                           	psect	bssBANK3
   808  0190                     __pbssBANK3:
   809  0190                     _c:
   810  0190                     	ds	20
   811  01A4                     _l:
   812  01A4                     	ds	20
   813                           
   814                           	psect	clrtext
   815  18B9                     clear_ram0:	
   816                           ;	Called with FSR containing the base address, and
   817                           ;	W with the last address+1
   818                           
   819  18B9  0064               	clrwdt	;clear the watchdog before getting into this loop
   820  18BA                     clrloop0:
   821  18BA  0180               	clrf	0	;clear RAM location pointed to by FSR
   822  18BB  0A84               	incf	4,f	;increment pointer
   823  18BC  0604               	xorwf	4,w	;XOR with final address
   824  18BD  1903               	btfsc	3,2	;have we reached the end yet?
   825  18BE  3400               	retlw	0	;all done for this memory range, return
   826  18BF  0604               	xorwf	4,w	;XOR again to restore value
   827  18C0  28BA               	goto	clrloop0	;do the next byte
   828                           
   829                           	psect	cstackBANK1
   830  00A0                     __pcstackBANK1:
   831  00A0                     ?_sprintf:
   832  00A0                     sprintf@sp:	
   833                           ; 2 bytes @ 0x0
   834                           
   835                           
   836                           ; 2 bytes @ 0x0
   837  00A0                     	ds	2
   838  00A2                     sprintf@f:
   839                           
   840                           ; 1 bytes @ 0x2
   841  00A2                     	ds	5
   842  00A7                     ??_sprintf:
   843                           
   844                           ; 1 bytes @ 0x7
   845  00A7                     	ds	5
   846  00AC                     _sprintf$1253:
   847                           
   848                           ; 4 bytes @ 0xC
   849  00AC                     	ds	4
   850  00B0                     sprintf@ap:
   851                           
   852                           ; 1 bytes @ 0x10
   853  00B0                     	ds	1
   854  00B1                     sprintf@flag:
   855                           
   856                           ; 2 bytes @ 0x11
   857  00B1                     	ds	2
   858  00B3                     sprintf@width:
   859                           
   860                           ; 2 bytes @ 0x13
   861  00B3                     	ds	2
   862  00B5                     sprintf@tmpval:
   863                           
   864                           ; 4 bytes @ 0x15
   865  00B5                     	ds	4
   866  00B9                     sprintf@val:
   867                           
   868                           ; 4 bytes @ 0x19
   869  00B9                     	ds	4
   870  00BD                     sprintf@eexp:
   871                           
   872                           ; 2 bytes @ 0x1D
   873  00BD                     	ds	2
   874  00BF                     sprintf@fval:
   875                           
   876                           ; 4 bytes @ 0x1F
   877  00BF                     	ds	4
   878  00C3                     sprintf@prec:
   879                           
   880                           ; 2 bytes @ 0x23
   881  00C3                     	ds	2
   882  00C5                     sprintf@c:
   883                           
   884                           ; 1 bytes @ 0x25
   885  00C5                     	ds	1
   886  00C6                     ??_main:
   887                           
   888                           ; 1 bytes @ 0x26
   889  00C6                     	ds	4
   890                           
   891                           	psect	cstackCOMMON
   892  0070                     __pcstackCOMMON:
   893  0070                     ?_isdigit:
   894  0070                     ?___fleq:	
   895                           ; 1 bit 
   896                           
   897  0070                     ?___flge:	
   898                           ; 1 bit 
   899                           
   900  0070                     ?_spiInit:	
   901                           ; 1 bit 
   902                           
   903  0070                     ?_INIT_UART:	
   904                           ; 1 bytes @ 0x0
   905                           
   906  0070                     ??_INIT_UART:	
   907                           ; 1 bytes @ 0x0
   908                           
   909  0070                     ?_write:	
   910                           ; 1 bytes @ 0x0
   911                           
   912  0070                     ?_spiRead:	
   913                           ; 1 bytes @ 0x0
   914                           
   915  0070                     ??_spiRead:	
   916                           ; 1 bytes @ 0x0
   917                           
   918  0070                     ??_isdigit:	
   919                           ; 1 bytes @ 0x0
   920                           
   921  0070                     ?_Lcd_Port:	
   922                           ; 1 bytes @ 0x0
   923                           
   924  0070                     ??_Lcd_Port:	
   925                           ; 1 bytes @ 0x0
   926                           
   927  0070                     ?_Lcd_Cmd:	
   928                           ; 1 bytes @ 0x0
   929                           
   930  0070                     ?_Lcd_Clear:	
   931                           ; 1 bytes @ 0x0
   932                           
   933  0070                     ?_Lcd_Init:	
   934                           ; 1 bytes @ 0x0
   935                           
   936  0070                     ?_Lcd_Write_Char:	
   937                           ; 1 bytes @ 0x0
   938                           
   939  0070                     ?_setup:	
   940                           ; 1 bytes @ 0x0
   941                           
   942  0070                     ??_setup:	
   943                           ; 1 bytes @ 0x0
   944                           
   945  0070                     ?_main:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0070                     ?_spiReceiveWait:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0070                     ??_spiReceiveWait:	
   952                           ; 1 bytes @ 0x0
   953                           
   954  0070                     ?__Umul8_16:	
   955                           ; 1 bytes @ 0x0
   956                           
   957  0070                     ?___wmul:	
   958                           ; 2 bytes @ 0x0
   959                           
   960  0070                     ?___awmod:	
   961                           ; 2 bytes @ 0x0
   962                           
   963  0070                     ?___lwmod:	
   964                           ; 2 bytes @ 0x0
   965                           
   966  0070                     ?__tdiv_to_l_:	
   967                           ; 2 bytes @ 0x0
   968                           
   969  0070                     ?__div_to_l_:	
   970                           ; 4 bytes @ 0x0
   971                           
   972  0070                     ?___lldiv:	
   973                           ; 4 bytes @ 0x0
   974                           
   975  0070                     ?___flneg:	
   976                           ; 4 bytes @ 0x0
   977                           
   978  0070                     ?___xxtofl:	
   979                           ; 4 bytes @ 0x0
   980                           
   981  0070                     Lcd_Port@a:	
   982                           ; 4 bytes @ 0x0
   983                           
   984  0070                     spiInit@sDataSample:	
   985                           ; 1 bytes @ 0x0
   986                           
   987  0070                     __Umul8_16@multiplicand:	
   988                           ; 1 bytes @ 0x0
   989                           
   990  0070                     _isdigit$1057:	
   991                           ; 1 bytes @ 0x0
   992                           
   993  0070                     write@entrada:	
   994                           ; 1 bytes @ 0x0
   995                           
   996  0070                     ___wmul@multiplier:	
   997                           ; 2 bytes @ 0x0
   998                           
   999  0070                     ___awmod@divisor:	
  1000                           ; 2 bytes @ 0x0
  1001                           
  1002  0070                     ___lwmod@divisor:	
  1003                           ; 2 bytes @ 0x0
  1004                           
  1005  0070                     ___lldiv@divisor:	
  1006                           ; 2 bytes @ 0x0
  1007                           
  1008  0070                     __div_to_l_@f1:	
  1009                           ; 4 bytes @ 0x0
  1010                           
  1011  0070                     ___fleq@ff1:	
  1012                           ; 4 bytes @ 0x0
  1013                           
  1014  0070                     ___flge@ff1:	
  1015                           ; 4 bytes @ 0x0
  1016                           
  1017  0070                     ___flneg@f1:	
  1018                           ; 4 bytes @ 0x0
  1019                           
  1020  0070                     __tdiv_to_l_@f1:	
  1021                           ; 4 bytes @ 0x0
  1022                           
  1023  0070                     ___xxtofl@val:	
  1024                           ; 4 bytes @ 0x0
  1025                           
  1026                           
  1027                           ; 4 bytes @ 0x0
  1028  0070                     	ds	1
  1029  0071                     ??_Lcd_Cmd:
  1030  0071                     ??_Lcd_Write_Char:	
  1031                           ; 1 bytes @ 0x1
  1032                           
  1033  0071                     spiInit@sClockIdle:	
  1034                           ; 1 bytes @ 0x1
  1035                           
  1036  0071                     isdigit@c:	
  1037                           ; 1 bytes @ 0x1
  1038                           
  1039                           
  1040                           ; 1 bytes @ 0x1
  1041  0071                     	ds	1
  1042  0072                     ??_write:
  1043  0072                     ??__Umul8_16:	
  1044                           ; 1 bytes @ 0x2
  1045                           
  1046  0072                     Lcd_Write_Char@a:	
  1047                           ; 1 bytes @ 0x2
  1048                           
  1049  0072                     spiInit@sTransmitEdge:	
  1050                           ; 1 bytes @ 0x2
  1051                           
  1052  0072                     ___wmul@multiplicand:	
  1053                           ; 1 bytes @ 0x2
  1054                           
  1055  0072                     ___awmod@dividend:	
  1056                           ; 2 bytes @ 0x2
  1057                           
  1058  0072                     ___lwmod@dividend:	
  1059                           ; 2 bytes @ 0x2
  1060                           
  1061                           
  1062                           ; 2 bytes @ 0x2
  1063  0072                     	ds	1
  1064  0073                     ??_spiInit:
  1065  0073                     ?_Lcd_Write_String:	
  1066                           ; 1 bytes @ 0x3
  1067                           
  1068  0073                     Lcd_Cmd@a:	
  1069                           ; 1 bytes @ 0x3
  1070                           
  1071  0073                     spiInit@sType:	
  1072                           ; 1 bytes @ 0x3
  1073                           
  1074  0073                     Lcd_Write_String@a:	
  1075                           ; 1 bytes @ 0x3
  1076                           
  1077                           
  1078                           ; 2 bytes @ 0x3
  1079  0073                     	ds	1
  1080  0074                     ??_Lcd_Clear:
  1081  0074                     ?_Lcd_Set_Cursor:	
  1082                           ; 1 bytes @ 0x4
  1083                           
  1084  0074                     ??_Lcd_Init:	
  1085                           ; 1 bytes @ 0x4
  1086                           
  1087  0074                     ??___wmul:	
  1088                           ; 1 bytes @ 0x4
  1089                           
  1090  0074                     ??___awmod:	
  1091                           ; 1 bytes @ 0x4
  1092                           
  1093  0074                     ??___flneg:	
  1094                           ; 1 bytes @ 0x4
  1095                           
  1096  0074                     ??___lwmod:	
  1097                           ; 1 bytes @ 0x4
  1098                           
  1099  0074                     ??___xxtofl:	
  1100                           ; 1 bytes @ 0x4
  1101                           
  1102  0074                     Lcd_Set_Cursor@b:	
  1103                           ; 1 bytes @ 0x4
  1104                           
  1105  0074                     ___wmul@product:	
  1106                           ; 1 bytes @ 0x4
  1107                           
  1108  0074                     __Umul8_16@product:	
  1109                           ; 2 bytes @ 0x4
  1110                           
  1111  0074                     ___lldiv@dividend:	
  1112                           ; 2 bytes @ 0x4
  1113                           
  1114  0074                     __div_to_l_@f2:	
  1115                           ; 4 bytes @ 0x4
  1116                           
  1117  0074                     ___fleq@ff2:	
  1118                           ; 4 bytes @ 0x4
  1119                           
  1120  0074                     ___flge@ff2:	
  1121                           ; 4 bytes @ 0x4
  1122                           
  1123  0074                     __tdiv_to_l_@f2:	
  1124                           ; 4 bytes @ 0x4
  1125                           
  1126                           
  1127                           ; 4 bytes @ 0x4
  1128  0074                     	ds	1
  1129  0075                     ??_Lcd_Set_Cursor:
  1130  0075                     ??_Lcd_Write_String:	
  1131                           ; 1 bytes @ 0x5
  1132                           
  1133  0075                     ___awmod@counter:	
  1134                           ; 1 bytes @ 0x5
  1135                           
  1136  0075                     ___lwmod@counter:	
  1137                           ; 1 bytes @ 0x5
  1138                           
  1139                           
  1140                           ; 1 bytes @ 0x5
  1141  0075                     	ds	1
  1142  0076                     ?___lwdiv:
  1143  0076                     Lcd_Set_Cursor@a:	
  1144                           ; 2 bytes @ 0x6
  1145                           
  1146  0076                     ___awmod@sign:	
  1147                           ; 1 bytes @ 0x6
  1148                           
  1149  0076                     ___lwdiv@divisor:	
  1150                           ; 1 bytes @ 0x6
  1151                           
  1152  0076                     __Umul8_16@word_mpld:	
  1153                           ; 2 bytes @ 0x6
  1154                           
  1155                           
  1156                           ; 2 bytes @ 0x6
  1157  0076                     	ds	1
  1158  0077                     ?___awdiv:
  1159  0077                     Lcd_Set_Cursor@temp:	
  1160                           ; 2 bytes @ 0x7
  1161                           
  1162  0077                     ___awdiv@divisor:	
  1163                           ; 1 bytes @ 0x7
  1164                           
  1165                           
  1166                           ; 2 bytes @ 0x7
  1167  0077                     	ds	1
  1168  0078                     ??__tdiv_to_l_:
  1169  0078                     ??__div_to_l_:	
  1170                           ; 1 bytes @ 0x8
  1171                           
  1172  0078                     ??___lldiv:	
  1173                           ; 1 bytes @ 0x8
  1174                           
  1175  0078                     ??___fleq:	
  1176                           ; 1 bytes @ 0x8
  1177                           
  1178  0078                     ??___flge:	
  1179                           ; 1 bytes @ 0x8
  1180                           
  1181  0078                     __Umul8_16@multiplier:	
  1182                           ; 1 bytes @ 0x8
  1183                           
  1184  0078                     ___xxtofl@sign:	
  1185                           ; 1 bytes @ 0x8
  1186                           
  1187  0078                     Lcd_Write_String@i:	
  1188                           ; 1 bytes @ 0x8
  1189                           
  1190  0078                     ___lwdiv@dividend:	
  1191                           ; 2 bytes @ 0x8
  1192                           
  1193                           
  1194                           ; 2 bytes @ 0x8
  1195  0078                     	ds	1
  1196  0079                     ___xxtofl@exp:
  1197  0079                     ___awdiv@dividend:	
  1198                           ; 1 bytes @ 0x9
  1199                           
  1200  0079                     ___lldiv@quotient:	
  1201                           ; 2 bytes @ 0x9
  1202                           
  1203                           
  1204                           ; 4 bytes @ 0x9
  1205  0079                     	ds	1
  1206  007A                     ??___lwdiv:
  1207  007A                     ___xxtofl@arg:	
  1208                           ; 1 bytes @ 0xA
  1209                           
  1210                           
  1211                           ; 4 bytes @ 0xA
  1212  007A                     	ds	1
  1213  007B                     ??___awdiv:
  1214  007B                     ___lwdiv@quotient:	
  1215                           ; 1 bytes @ 0xB
  1216                           
  1217                           
  1218                           ; 2 bytes @ 0xB
  1219  007B                     	ds	2
  1220  007D                     ___lldiv@counter:
  1221  007D                     ___lwdiv@counter:	
  1222                           ; 1 bytes @ 0xD
  1223                           
  1224                           
  1225                           ; 1 bytes @ 0xD
  1226  007D                     	ds	1
  1227  007E                     ??___flsub:
  1228                           
  1229                           	psect	cstackBANK0
  1230  0020                     __pcstackBANK0:	
  1231                           ; 1 bytes @ 0xE
  1232                           
  1233  0020                     ?___llmod:
  1234  0020                     ___awdiv@counter:	
  1235                           ; 4 bytes @ 0x0
  1236                           
  1237  0020                     __div_to_l_@quot:	
  1238                           ; 1 bytes @ 0x0
  1239                           
  1240  0020                     __tdiv_to_l_@quot:	
  1241                           ; 4 bytes @ 0x0
  1242                           
  1243  0020                     ___llmod@divisor:	
  1244                           ; 4 bytes @ 0x0
  1245                           
  1246                           
  1247                           ; 4 bytes @ 0x0
  1248  0020                     	ds	1
  1249  0021                     ___awdiv@sign:
  1250                           
  1251                           ; 1 bytes @ 0x1
  1252  0021                     	ds	1
  1253  0022                     ___awdiv@quotient:
  1254                           
  1255                           ; 2 bytes @ 0x2
  1256  0022                     	ds	2
  1257  0024                     ?___flmul:
  1258  0024                     __div_to_l_@cntr:	
  1259                           ; 4 bytes @ 0x4
  1260                           
  1261  0024                     __tdiv_to_l_@cntr:	
  1262                           ; 1 bytes @ 0x4
  1263                           
  1264  0024                     ___llmod@dividend:	
  1265                           ; 1 bytes @ 0x4
  1266                           
  1267  0024                     ___flmul@b:	
  1268                           ; 4 bytes @ 0x4
  1269                           
  1270                           
  1271                           ; 4 bytes @ 0x4
  1272  0024                     	ds	1
  1273  0025                     __div_to_l_@exp1:
  1274  0025                     __tdiv_to_l_@exp1:	
  1275                           ; 1 bytes @ 0x5
  1276                           
  1277                           
  1278                           ; 1 bytes @ 0x5
  1279  0025                     	ds	3
  1280  0028                     ??___llmod:
  1281  0028                     ___flmul@a:	
  1282                           ; 1 bytes @ 0x8
  1283                           
  1284                           
  1285                           ; 4 bytes @ 0x8
  1286  0028                     	ds	1
  1287  0029                     ___llmod@counter:
  1288                           
  1289                           ; 1 bytes @ 0x9
  1290  0029                     	ds	3
  1291  002C                     ??___flmul:
  1292                           
  1293                           ; 1 bytes @ 0xC
  1294  002C                     	ds	5
  1295  0031                     ___flmul@sign:
  1296                           
  1297                           ; 1 bytes @ 0x11
  1298  0031                     	ds	1
  1299  0032                     ___flmul@grs:
  1300                           
  1301                           ; 4 bytes @ 0x12
  1302  0032                     	ds	4
  1303  0036                     ___flmul@aexp:
  1304                           
  1305                           ; 1 bytes @ 0x16
  1306  0036                     	ds	1
  1307  0037                     ___flmul@bexp:
  1308                           
  1309                           ; 1 bytes @ 0x17
  1310  0037                     	ds	1
  1311  0038                     ___flmul@prod:
  1312                           
  1313                           ; 4 bytes @ 0x18
  1314  0038                     	ds	4
  1315  003C                     ___flmul@temp:
  1316                           
  1317                           ; 2 bytes @ 0x1C
  1318  003C                     	ds	2
  1319  003E                     ?_fround:
  1320  003E                     ?_scale:	
  1321                           ; 4 bytes @ 0x1E
  1322                           
  1323                           
  1324                           ; 4 bytes @ 0x1E
  1325  003E                     	ds	4
  1326  0042                     ??_fround:
  1327  0042                     ??_scale:	
  1328                           ; 1 bytes @ 0x22
  1329                           
  1330                           
  1331                           ; 1 bytes @ 0x22
  1332  0042                     	ds	7
  1333  0049                     _fround$1251:
  1334                           
  1335                           ; 4 bytes @ 0x29
  1336  0049                     	ds	3
  1337  004C                     _scale$1252:
  1338                           
  1339                           ; 4 bytes @ 0x2C
  1340  004C                     	ds	1
  1341  004D                     _fround$1250:
  1342                           
  1343                           ; 4 bytes @ 0x2D
  1344  004D                     	ds	3
  1345  0050                     scale@scl:
  1346                           
  1347                           ; 1 bytes @ 0x30
  1348  0050                     	ds	1
  1349  0051                     ?___fltol:
  1350  0051                     fround@prec:	
  1351                           ; 4 bytes @ 0x31
  1352                           
  1353  0051                     ___fltol@f1:	
  1354                           ; 1 bytes @ 0x31
  1355                           
  1356                           
  1357                           ; 4 bytes @ 0x31
  1358  0051                     	ds	1
  1359  0052                     ?___fladd:
  1360  0052                     ___fladd@b:	
  1361                           ; 4 bytes @ 0x32
  1362                           
  1363                           
  1364                           ; 4 bytes @ 0x32
  1365  0052                     	ds	3
  1366  0055                     ??___fltol:
  1367                           
  1368                           ; 1 bytes @ 0x35
  1369  0055                     	ds	1
  1370  0056                     ___fladd@a:
  1371                           
  1372                           ; 4 bytes @ 0x36
  1373  0056                     	ds	4
  1374  005A                     ??___fladd:
  1375  005A                     ___fltol@sign1:	
  1376                           ; 1 bytes @ 0x3A
  1377                           
  1378                           
  1379                           ; 1 bytes @ 0x3A
  1380  005A                     	ds	1
  1381  005B                     ___fltol@exp1:
  1382                           
  1383                           ; 1 bytes @ 0x3B
  1384  005B                     	ds	7
  1385  0062                     ___fladd@signs:
  1386                           
  1387                           ; 1 bytes @ 0x42
  1388  0062                     	ds	1
  1389  0063                     ___fladd@aexp:
  1390                           
  1391                           ; 1 bytes @ 0x43
  1392  0063                     	ds	1
  1393  0064                     ___fladd@bexp:
  1394                           
  1395                           ; 1 bytes @ 0x44
  1396  0064                     	ds	1
  1397  0065                     ___fladd@grs:
  1398                           
  1399                           ; 1 bytes @ 0x45
  1400  0065                     	ds	1
  1401  0066                     ?___flsub:
  1402  0066                     ___flsub@a:	
  1403                           ; 4 bytes @ 0x46
  1404                           
  1405                           
  1406                           ; 4 bytes @ 0x46
  1407  0066                     	ds	4
  1408  006A                     ___flsub@b:
  1409                           
  1410                           ; 4 bytes @ 0x4A
  1411  006A                     	ds	4
  1412                           
  1413                           	psect	maintext
  1414  1074                     __pmaintext:	
  1415 ;;
  1416 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1417 ;;
  1418 ;; *************** function _main *****************
  1419 ;; Defined at:
  1420 ;;		line 88 in file "main.c"
  1421 ;; Parameters:    Size  Location     Type
  1422 ;;		None
  1423 ;; Auto vars:     Size  Location     Type
  1424 ;;		None
  1425 ;; Return value:  Size  Location     Type
  1426 ;;                  1    wreg      void 
  1427 ;; Registers used:
  1428 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1429 ;; Tracked objects:
  1430 ;;		On entry : B00/0
  1431 ;;		On exit  : 0/0
  1432 ;;		Unchanged: 0/0
  1433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1434 ;;      Params:         0       0       0       0       0
  1435 ;;      Locals:         0       0       0       0       0
  1436 ;;      Temps:          0       0       4       0       0
  1437 ;;      Totals:         0       0       4       0       0
  1438 ;;Total ram usage:        4 bytes
  1439 ;; Hardware stack levels required when called:    4
  1440 ;; This function calls:
  1441 ;;		_INIT_UART
  1442 ;;		_Lcd_Clear
  1443 ;;		_Lcd_Init
  1444 ;;		_Lcd_Set_Cursor
  1445 ;;		_Lcd_Write_String
  1446 ;;		___flmul
  1447 ;;		___xxtofl
  1448 ;;		_setup
  1449 ;;		_spiInit
  1450 ;;		_spiRead
  1451 ;;		_sprintf
  1452 ;;		_write
  1453 ;; This function is called by:
  1454 ;;		Startup code after reset
  1455 ;; This function uses a non-reentrant model
  1456 ;;
  1457                           
  1458                           
  1459                           ;psect for function _main
  1460  1074                     _main:
  1461  1074                     l3562:	
  1462                           ;incstack = 0
  1463                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1464                           
  1465                           
  1466                           ;main.c: 90:     setup();
  1467  1074  160A  158A  20EB  160A  118A  	fcall	_setup
  1468                           
  1469                           ;main.c: 91:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
  1470  1079  01F0               	clrf	spiInit@sDataSample
  1471  107A  01F1               	clrf	spiInit@sClockIdle
  1472  107B  01F2               	clrf	spiInit@sTransmitEdge
  1473  107C  3020               	movlw	32
  1474  107D  160A  158A  2114  160A  118A  	fcall	_spiInit
  1475                           
  1476                           ;main.c: 92:     INIT_UART();
  1477  1082  160A  158A  20FF  160A  118A  	fcall	_INIT_UART
  1478                           
  1479                           ;main.c: 94:     Lcd_Init();
  1480  1087  160A  158A  2206  160A  118A  	fcall	_Lcd_Init
  1481                           
  1482                           ;main.c: 95:     Lcd_Clear();
  1483  108C  160A  158A  20CC  160A  118A  	fcall	_Lcd_Clear
  1484  1091                     l109:	
  1485                           ;main.c: 98:     while (1) {
  1486                           
  1487                           
  1488                           ;main.c: 102:         Lcd_Set_Cursor(1, 1);
  1489  1091  01F4               	clrf	Lcd_Set_Cursor@b
  1490  1092  0AF4               	incf	Lcd_Set_Cursor@b,f
  1491  1093  3001               	movlw	1
  1492  1094  160A  158A  215F  160A  118A  	fcall	_Lcd_Set_Cursor
  1493  1099                     l3564:
  1494                           
  1495                           ;main.c: 103:         Lcd_Write_String("S1:   S2:    S3: \n");
  1496  1099  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1497  109A  00F3               	movwf	Lcd_Write_String@a
  1498  109B  3080               	movlw	128
  1499  109C  00F4               	movwf	Lcd_Write_String@a+1
  1500  109D  160A  158A  2247  160A  118A  	fcall	_Lcd_Write_String
  1501  10A2                     l3566:
  1502                           
  1503                           ;main.c: 106:         write("S1:");
  1504  10A2  30B2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1505  10A3  00F0               	movwf	write@entrada
  1506  10A4  3080               	movlw	128
  1507  10A5  00F1               	movwf	write@entrada+1
  1508  10A6  160A  118A  2009  160A  118A  	fcall	_write
  1509  10AB                     l3568:
  1510                           
  1511                           ;main.c: 107:         write(s);
  1512  10AB  30D9               	movlw	(low (_s| 0))& (0+255)
  1513  10AC  00F0               	movwf	write@entrada
  1514  10AD  3000               	movlw	0
  1515  10AE  00F1               	movwf	write@entrada+1
  1516  10AF  160A  118A  2009  160A  118A  	fcall	_write
  1517  10B4                     l3570:
  1518                           
  1519                           ;main.c: 108:         write("S2:");
  1520  10B4  30B6               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1521  10B5  00F0               	movwf	write@entrada
  1522  10B6  3080               	movlw	128
  1523  10B7  00F1               	movwf	write@entrada+1
  1524  10B8  160A  118A  2009  160A  118A  	fcall	_write
  1525  10BD                     l3572:
  1526                           
  1527                           ;main.c: 109:         write(c);
  1528  10BD  3090               	movlw	(low (_c| (0+256)))& (0+255)
  1529  10BE  00F0               	movwf	write@entrada
  1530  10BF  3001               	movlw	1
  1531  10C0  00F1               	movwf	write@entrada+1
  1532  10C1  160A  118A  2009  160A  118A  	fcall	_write
  1533  10C6                     l3574:
  1534                           
  1535                           ;main.c: 110:         write("S3:");
  1536  10C6  30BA               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1537  10C7  00F0               	movwf	write@entrada
  1538  10C8  3080               	movlw	128
  1539  10C9  00F1               	movwf	write@entrada+1
  1540  10CA  160A  118A  2009  160A  118A  	fcall	_write
  1541  10CF                     l3576:
  1542                           
  1543                           ;main.c: 111:         write(l);
  1544  10CF  30A4               	movlw	(low (_l| (0+256)))& (0+255)
  1545  10D0  00F0               	movwf	write@entrada
  1546  10D1  3001               	movlw	1
  1547  10D2  00F1               	movwf	write@entrada+1
  1548  10D3  160A  118A  2009  160A  118A  	fcall	_write
  1549  10D8                     l3578:
  1550                           
  1551                           ;main.c: 112:         write(0xA);
  1552  10D8  300A               	movlw	10
  1553  10D9  00F0               	movwf	write@entrada
  1554  10DA  3000               	movlw	0
  1555  10DB  00F1               	movwf	write@entrada+1
  1556  10DC  160A  118A  2009  160A  118A  	fcall	_write
  1557  10E1                     l3580:
  1558                           
  1559                           ;main.c: 115:         x = adc * 0.0195;
  1560  10E1  303C               	movlw	60
  1561  10E2  1283               	bcf	3,5	;RP0=0, select bank0
  1562  10E3  1303               	bcf	3,6	;RP1=0, select bank0
  1563  10E4  00A7               	movwf	___flmul@b+3
  1564  10E5  309F               	movlw	159
  1565  10E6  00A6               	movwf	___flmul@b+2
  1566  10E7  30BE               	movlw	190
  1567  10E8  00A5               	movwf	___flmul@b+1
  1568  10E9  3077               	movlw	119
  1569  10EA  00A4               	movwf	___flmul@b
  1570  10EB  1683               	bsf	3,5	;RP0=1, select bank1
  1571  10EC  1303               	bcf	3,6	;RP1=0, select bank1
  1572  10ED  0858               	movf	_adc^(0+128),w
  1573  10EE  00C6               	movwf	??_main^(0+128)
  1574  10EF  01C7               	clrf	(??_main^(0+128)+1)
  1575  10F0  01C8               	clrf	(??_main^(0+128)+2)
  1576  10F1  01C9               	clrf	(??_main^(0+128)+3)
  1577  10F2  0849               	movf	(??_main+3)^(0+128),w
  1578  10F3  00F3               	movwf	___xxtofl@val+3
  1579  10F4  0848               	movf	(??_main+2)^(0+128),w
  1580  10F5  00F2               	movwf	___xxtofl@val+2
  1581  10F6  0847               	movf	(??_main+1)^(0+128),w
  1582  10F7  00F1               	movwf	___xxtofl@val+1
  1583  10F8  0846               	movf	??_main^(0+128),w
  1584  10F9  00F0               	movwf	___xxtofl@val
  1585  10FA  3001               	movlw	1
  1586  10FB  160A  158A  253B  160A  118A  	fcall	___xxtofl
  1587  1100  0873               	movf	?___xxtofl+3,w
  1588  1101  1283               	bcf	3,5	;RP0=0, select bank0
  1589  1102  1303               	bcf	3,6	;RP1=0, select bank0
  1590  1103  00AB               	movwf	___flmul@a+3
  1591  1104  0872               	movf	?___xxtofl+2,w
  1592  1105  00AA               	movwf	___flmul@a+2
  1593  1106  0871               	movf	?___xxtofl+1,w
  1594  1107  00A9               	movwf	___flmul@a+1
  1595  1108  0870               	movf	?___xxtofl,w
  1596  1109  00A8               	movwf	___flmul@a
  1597  110A  120A  158A  249F  160A  118A  	fcall	___flmul
  1598  110F  1283               	bcf	3,5	;RP0=0, select bank0
  1599  1110  1303               	bcf	3,6	;RP1=0, select bank0
  1600  1111  0827               	movf	?___flmul+3,w
  1601  1112  1683               	bsf	3,5	;RP0=1, select bank1
  1602  1113  1303               	bcf	3,6	;RP1=0, select bank1
  1603  1114  00D5               	movwf	(_x+3)^(0+128)
  1604  1115  1283               	bcf	3,5	;RP0=0, select bank0
  1605  1116  1303               	bcf	3,6	;RP1=0, select bank0
  1606  1117  0826               	movf	?___flmul+2,w
  1607  1118  1683               	bsf	3,5	;RP0=1, select bank1
  1608  1119  1303               	bcf	3,6	;RP1=0, select bank1
  1609  111A  00D4               	movwf	(_x+2)^(0+128)
  1610  111B  1283               	bcf	3,5	;RP0=0, select bank0
  1611  111C  1303               	bcf	3,6	;RP1=0, select bank0
  1612  111D  0825               	movf	?___flmul+1,w
  1613  111E  1683               	bsf	3,5	;RP0=1, select bank1
  1614  111F  1303               	bcf	3,6	;RP1=0, select bank1
  1615  1120  00D3               	movwf	(_x+1)^(0+128)
  1616  1121  1283               	bcf	3,5	;RP0=0, select bank0
  1617  1122  1303               	bcf	3,6	;RP1=0, select bank0
  1618  1123  0824               	movf	?___flmul,w
  1619  1124  1683               	bsf	3,5	;RP0=1, select bank1
  1620  1125  1303               	bcf	3,6	;RP1=0, select bank1
  1621  1126  00D2               	movwf	_x^(0+128)
  1622  1127                     l3582:
  1623                           
  1624                           ;main.c: 116:         Lcd_Set_Cursor(2, 1);
  1625  1127  01F4               	clrf	Lcd_Set_Cursor@b
  1626  1128  0AF4               	incf	Lcd_Set_Cursor@b,f
  1627  1129  3002               	movlw	2
  1628  112A  160A  158A  215F  160A  118A  	fcall	_Lcd_Set_Cursor
  1629  112F                     l3584:
  1630                           
  1631                           ;main.c: 117:         sprintf(s, "%3.2fV", x);
  1632  112F  30D9               	movlw	(low (_s| 0))& (0+255)
  1633  1130  1683               	bsf	3,5	;RP0=1, select bank1
  1634  1131  1303               	bcf	3,6	;RP1=0, select bank1
  1635  1132  00A0               	movwf	sprintf@sp^(0+128)
  1636  1133  3000               	movlw	0
  1637  1134  00A1               	movwf	(sprintf@sp+1)^(0+128)
  1638  1135  30AB               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1639  1136  00C6               	movwf	??_main^(0+128)
  1640  1137  0846               	movf	??_main^(0+128),w
  1641  1138  00A2               	movwf	sprintf@f^(0+128)
  1642  1139  0855               	movf	(_x+3)^(0+128),w
  1643  113A  00A6               	movwf	((?_sprintf+3)^(0+128)+3)
  1644  113B  0854               	movf	(_x+2)^(0+128),w
  1645  113C  00A5               	movwf	((?_sprintf+2)^(0+128)+3)
  1646  113D  0853               	movf	(_x+1)^(0+128),w
  1647  113E  00A4               	movwf	((?_sprintf+1)^(0+128)+3)
  1648  113F  0852               	movf	_x^(0+128),w
  1649  1140  00A3               	movwf	(?_sprintf^(0+128)+3)
  1650  1141  160A  118A  253B  160A  118A  	fcall	_sprintf
  1651  1146                     l3586:
  1652                           
  1653                           ;main.c: 118:         Lcd_Write_String(s);
  1654  1146  30D9               	movlw	(low (_s| 0))& (0+255)
  1655  1147  00F3               	movwf	Lcd_Write_String@a
  1656  1148  3000               	movlw	0
  1657  1149  00F4               	movwf	Lcd_Write_String@a+1
  1658  114A  160A  158A  2247  160A  118A  	fcall	_Lcd_Write_String
  1659  114F                     l3588:
  1660                           
  1661                           ;main.c: 121:         Lcd_Set_Cursor(2, 8);
  1662  114F  3008               	movlw	8
  1663  1150  1683               	bsf	3,5	;RP0=1, select bank1
  1664  1151  1303               	bcf	3,6	;RP1=0, select bank1
  1665  1152  00C6               	movwf	??_main^(0+128)
  1666  1153  0846               	movf	??_main^(0+128),w
  1667  1154  00F4               	movwf	Lcd_Set_Cursor@b
  1668  1155  3002               	movlw	2
  1669  1156  160A  158A  215F  160A  118A  	fcall	_Lcd_Set_Cursor
  1670  115B                     l3590:
  1671                           
  1672                           ;main.c: 122:         sprintf(c, "%d", count);
  1673  115B  3090               	movlw	(low (_c| (0+256)))& (0+255)
  1674  115C  1683               	bsf	3,5	;RP0=1, select bank1
  1675  115D  1303               	bcf	3,6	;RP1=0, select bank1
  1676  115E  00A0               	movwf	sprintf@sp^(0+128)
  1677  115F  3001               	movlw	1
  1678  1160  00A1               	movwf	(sprintf@sp+1)^(0+128)
  1679  1161  30BE               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1680  1162  00C6               	movwf	??_main^(0+128)
  1681  1163  0846               	movf	??_main^(0+128),w
  1682  1164  00A2               	movwf	sprintf@f^(0+128)
  1683  1165  0856               	movf	_count^(0+128),w
  1684  1166  00C7               	movwf	(??_main+1)^(0+128)
  1685  1167  01C8               	clrf	((??_main+1)^(0+128)+1)
  1686  1168  0847               	movf	(??_main+1)^(0+128),w
  1687  1169  00A3               	movwf	(?_sprintf^(0+128)+3)
  1688  116A  0848               	movf	(??_main+2)^(0+128),w
  1689  116B  00A4               	movwf	((?_sprintf+1)^(0+128)+3)
  1690  116C  160A  118A  253B  160A  118A  	fcall	_sprintf
  1691  1171                     l3592:
  1692                           
  1693                           ;main.c: 123:         Lcd_Write_String(c);
  1694  1171  3090               	movlw	(low (_c| (0+256)))& (0+255)
  1695  1172  00F3               	movwf	Lcd_Write_String@a
  1696  1173  3001               	movlw	1
  1697  1174  00F4               	movwf	Lcd_Write_String@a+1
  1698  1175  160A  158A  2247  160A  118A  	fcall	_Lcd_Write_String
  1699  117A                     l3594:
  1700                           
  1701                           ;main.c: 126:         p = 1.95 * lmm;
  1702  117A  303F               	movlw	63
  1703  117B  1283               	bcf	3,5	;RP0=0, select bank0
  1704  117C  1303               	bcf	3,6	;RP1=0, select bank0
  1705  117D  00A7               	movwf	___flmul@b+3
  1706  117E  30F9               	movlw	249
  1707  117F  00A6               	movwf	___flmul@b+2
  1708  1180  3099               	movlw	153
  1709  1181  00A5               	movwf	___flmul@b+1
  1710  1182  309A               	movlw	154
  1711  1183  00A4               	movwf	___flmul@b
  1712  1184  1683               	bsf	3,5	;RP0=1, select bank1
  1713  1185  1303               	bcf	3,6	;RP1=0, select bank1
  1714  1186  086D               	movf	_lmm^(0+128),w
  1715  1187  00C6               	movwf	??_main^(0+128)
  1716  1188  01C7               	clrf	(??_main^(0+128)+1)
  1717  1189  01C8               	clrf	(??_main^(0+128)+2)
  1718  118A  01C9               	clrf	(??_main^(0+128)+3)
  1719  118B  0849               	movf	(??_main+3)^(0+128),w
  1720  118C  00F3               	movwf	___xxtofl@val+3
  1721  118D  0848               	movf	(??_main+2)^(0+128),w
  1722  118E  00F2               	movwf	___xxtofl@val+2
  1723  118F  0847               	movf	(??_main+1)^(0+128),w
  1724  1190  00F1               	movwf	___xxtofl@val+1
  1725  1191  0846               	movf	??_main^(0+128),w
  1726  1192  00F0               	movwf	___xxtofl@val
  1727  1193  3001               	movlw	1
  1728  1194  160A  158A  253B  160A  118A  	fcall	___xxtofl
  1729  1199  0873               	movf	?___xxtofl+3,w
  1730  119A  1283               	bcf	3,5	;RP0=0, select bank0
  1731  119B  1303               	bcf	3,6	;RP1=0, select bank0
  1732  119C  00AB               	movwf	___flmul@a+3
  1733  119D  0872               	movf	?___xxtofl+2,w
  1734  119E  00AA               	movwf	___flmul@a+2
  1735  119F  0871               	movf	?___xxtofl+1,w
  1736  11A0  00A9               	movwf	___flmul@a+1
  1737  11A1  0870               	movf	?___xxtofl,w
  1738  11A2  00A8               	movwf	___flmul@a
  1739  11A3  120A  158A  249F  160A  118A  	fcall	___flmul
  1740  11A8  1283               	bcf	3,5	;RP0=0, select bank0
  1741  11A9  1303               	bcf	3,6	;RP1=0, select bank0
  1742  11AA  0827               	movf	?___flmul+3,w
  1743  11AB  1683               	bsf	3,5	;RP0=1, select bank1
  1744  11AC  1303               	bcf	3,6	;RP1=0, select bank1
  1745  11AD  00D1               	movwf	(_p+3)^(0+128)
  1746  11AE  1283               	bcf	3,5	;RP0=0, select bank0
  1747  11AF  1303               	bcf	3,6	;RP1=0, select bank0
  1748  11B0  0826               	movf	?___flmul+2,w
  1749  11B1  1683               	bsf	3,5	;RP0=1, select bank1
  1750  11B2  1303               	bcf	3,6	;RP1=0, select bank1
  1751  11B3  00D0               	movwf	(_p+2)^(0+128)
  1752  11B4  1283               	bcf	3,5	;RP0=0, select bank0
  1753  11B5  1303               	bcf	3,6	;RP1=0, select bank0
  1754  11B6  0825               	movf	?___flmul+1,w
  1755  11B7  1683               	bsf	3,5	;RP0=1, select bank1
  1756  11B8  1303               	bcf	3,6	;RP1=0, select bank1
  1757  11B9  00CF               	movwf	(_p+1)^(0+128)
  1758  11BA  1283               	bcf	3,5	;RP0=0, select bank0
  1759  11BB  1303               	bcf	3,6	;RP1=0, select bank0
  1760  11BC  0824               	movf	?___flmul,w
  1761  11BD  1683               	bsf	3,5	;RP0=1, select bank1
  1762  11BE  1303               	bcf	3,6	;RP1=0, select bank1
  1763  11BF  00CE               	movwf	_p^(0+128)
  1764                           
  1765                           ;main.c: 128:         Lcd_Set_Cursor(2, 13);
  1766  11C0  300D               	movlw	13
  1767  11C1  00C6               	movwf	??_main^(0+128)
  1768  11C2  0846               	movf	??_main^(0+128),w
  1769  11C3  00F4               	movwf	Lcd_Set_Cursor@b
  1770  11C4  3002               	movlw	2
  1771  11C5  160A  158A  215F  160A  118A  	fcall	_Lcd_Set_Cursor
  1772  11CA                     l3596:
  1773                           
  1774                           ;main.c: 129:         sprintf(l, "%3.0fC", p);
  1775  11CA  30A4               	movlw	(low (_l| (0+256)))& (0+255)
  1776  11CB  1683               	bsf	3,5	;RP0=1, select bank1
  1777  11CC  1303               	bcf	3,6	;RP1=0, select bank1
  1778  11CD  00A0               	movwf	sprintf@sp^(0+128)
  1779  11CE  3001               	movlw	1
  1780  11CF  00A1               	movwf	(sprintf@sp+1)^(0+128)
  1781  11D0  30A4               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1782  11D1  00C6               	movwf	??_main^(0+128)
  1783  11D2  0846               	movf	??_main^(0+128),w
  1784  11D3  00A2               	movwf	sprintf@f^(0+128)
  1785  11D4  0851               	movf	(_p+3)^(0+128),w
  1786  11D5  00A6               	movwf	((?_sprintf+3)^(0+128)+3)
  1787  11D6  0850               	movf	(_p+2)^(0+128),w
  1788  11D7  00A5               	movwf	((?_sprintf+2)^(0+128)+3)
  1789  11D8  084F               	movf	(_p+1)^(0+128),w
  1790  11D9  00A4               	movwf	((?_sprintf+1)^(0+128)+3)
  1791  11DA  084E               	movf	_p^(0+128),w
  1792  11DB  00A3               	movwf	(?_sprintf^(0+128)+3)
  1793  11DC  160A  118A  253B  160A  118A  	fcall	_sprintf
  1794  11E1                     l3598:
  1795                           
  1796                           ;main.c: 130:         Lcd_Write_String(l);
  1797  11E1  30A4               	movlw	(low (_l| (0+256)))& (0+255)
  1798  11E2  00F3               	movwf	Lcd_Write_String@a
  1799  11E3  3001               	movlw	1
  1800  11E4  00F4               	movwf	Lcd_Write_String@a+1
  1801  11E5  160A  158A  2247  160A  118A  	fcall	_Lcd_Write_String
  1802  11EA                     l3600:
  1803                           
  1804                           ;main.c: 135:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1805  11EA  3003               	movlw	3
  1806  11EB  1683               	bsf	3,5	;RP0=1, select bank1
  1807  11EC  1303               	bcf	3,6	;RP1=0, select bank1
  1808  11ED  00C7               	movwf	(??_main^(0+128)+1)
  1809  11EE  3097               	movlw	151
  1810  11EF  00C6               	movwf	??_main^(0+128)
  1811  11F0                     u5777:
  1812  11F0  0BC6               	decfsz	??_main^(0+128),f
  1813  11F1  29F0               	goto	u5777
  1814  11F2  0BC7               	decfsz	(??_main^(0+128)+1),f
  1815  11F3  29F0               	goto	u5777
  1816  11F4                     l3602:
  1817                           
  1818                           ;main.c: 136:         PORTCbits.RC0 = 0;
  1819  11F4  1283               	bcf	3,5	;RP0=0, select bank0
  1820  11F5  1303               	bcf	3,6	;RP1=0, select bank0
  1821  11F6  1007               	bcf	7,0	;volatile
  1822  11F7                     l3604:
  1823                           
  1824                           ;main.c: 137:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1825  11F7  3003               	movlw	3
  1826  11F8  1683               	bsf	3,5	;RP0=1, select bank1
  1827  11F9  1303               	bcf	3,6	;RP1=0, select bank1
  1828  11FA  00C7               	movwf	(??_main^(0+128)+1)
  1829  11FB  3097               	movlw	151
  1830  11FC  00C6               	movwf	??_main^(0+128)
  1831  11FD                     u5787:
  1832  11FD  0BC6               	decfsz	??_main^(0+128),f
  1833  11FE  29FD               	goto	u5787
  1834  11FF  0BC7               	decfsz	(??_main^(0+128)+1),f
  1835  1200  29FD               	goto	u5787
  1836  1201                     l3606:
  1837                           
  1838                           ;main.c: 138:         SSPBUF = 0;
  1839  1201  1283               	bcf	3,5	;RP0=0, select bank0
  1840  1202  1303               	bcf	3,6	;RP1=0, select bank0
  1841  1203  0193               	clrf	19	;volatile
  1842  1204                     l3608:
  1843                           
  1844                           ;main.c: 139:         adc = spiRead();
  1845  1204  160A  118A  2000  160A  118A  	fcall	_spiRead
  1846  1209  1683               	bsf	3,5	;RP0=1, select bank1
  1847  120A  1303               	bcf	3,6	;RP1=0, select bank1
  1848  120B  00C6               	movwf	??_main^(0+128)
  1849  120C  0846               	movf	??_main^(0+128),w
  1850  120D  00D8               	movwf	_adc^(0+128)
  1851  120E                     l3610:
  1852                           
  1853                           ;main.c: 140:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1854  120E  3003               	movlw	3
  1855  120F  1683               	bsf	3,5	;RP0=1, select bank1
  1856  1210  1303               	bcf	3,6	;RP1=0, select bank1
  1857  1211  00C7               	movwf	(??_main^(0+128)+1)
  1858  1212  3097               	movlw	151
  1859  1213  00C6               	movwf	??_main^(0+128)
  1860  1214                     u5797:
  1861  1214  0BC6               	decfsz	??_main^(0+128),f
  1862  1215  2A14               	goto	u5797
  1863  1216  0BC7               	decfsz	(??_main^(0+128)+1),f
  1864  1217  2A14               	goto	u5797
  1865  1218                     l3612:
  1866                           
  1867                           ;main.c: 141:         PORTCbits.RC0 = 1;
  1868  1218  1283               	bcf	3,5	;RP0=0, select bank0
  1869  1219  1303               	bcf	3,6	;RP1=0, select bank0
  1870  121A  1407               	bsf	7,0	;volatile
  1871  121B                     l3614:
  1872                           
  1873                           ;main.c: 142:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1874  121B  3003               	movlw	3
  1875  121C  1683               	bsf	3,5	;RP0=1, select bank1
  1876  121D  1303               	bcf	3,6	;RP1=0, select bank1
  1877  121E  00C8               	movwf	(??_main^(0+128)+2)
  1878  121F  3008               	movlw	8
  1879  1220  00C7               	movwf	(??_main^(0+128)+1)
  1880  1221  3076               	movlw	118
  1881  1222  00C6               	movwf	??_main^(0+128)
  1882  1223                     u5807:
  1883  1223  0BC6               	decfsz	??_main^(0+128),f
  1884  1224  2A23               	goto	u5807
  1885  1225  0BC7               	decfsz	(??_main^(0+128)+1),f
  1886  1226  2A23               	goto	u5807
  1887  1227  0BC8               	decfsz	(??_main^(0+128)+2),f
  1888  1228  2A23               	goto	u5807
  1889  1229  0000               	nop
  1890  122A                     l3616:
  1891                           
  1892                           ;main.c: 145:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1893  122A  301A               	movlw	26
  1894  122B  1683               	bsf	3,5	;RP0=1, select bank1
  1895  122C  1303               	bcf	3,6	;RP1=0, select bank1
  1896  122D  00C7               	movwf	(??_main^(0+128)+1)
  1897  122E  30F7               	movlw	247
  1898  122F  00C6               	movwf	??_main^(0+128)
  1899  1230                     u5817:
  1900  1230  0BC6               	decfsz	??_main^(0+128),f
  1901  1231  2A30               	goto	u5817
  1902  1232  0BC7               	decfsz	(??_main^(0+128)+1),f
  1903  1233  2A30               	goto	u5817
  1904  1234  2A35               	nop2
  1905  1235                     l3618:
  1906                           
  1907                           ;main.c: 146:         PORTCbits.RC1 = 0;
  1908  1235  1283               	bcf	3,5	;RP0=0, select bank0
  1909  1236  1303               	bcf	3,6	;RP1=0, select bank0
  1910  1237  1087               	bcf	7,1	;volatile
  1911  1238                     l3620:
  1912                           
  1913                           ;main.c: 147:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1914  1238  301A               	movlw	26
  1915  1239  1683               	bsf	3,5	;RP0=1, select bank1
  1916  123A  1303               	bcf	3,6	;RP1=0, select bank1
  1917  123B  00C7               	movwf	(??_main^(0+128)+1)
  1918  123C  30F7               	movlw	247
  1919  123D  00C6               	movwf	??_main^(0+128)
  1920  123E                     u5827:
  1921  123E  0BC6               	decfsz	??_main^(0+128),f
  1922  123F  2A3E               	goto	u5827
  1923  1240  0BC7               	decfsz	(??_main^(0+128)+1),f
  1924  1241  2A3E               	goto	u5827
  1925  1242  2A43               	nop2
  1926  1243                     l3622:
  1927                           
  1928                           ;main.c: 148:         SSPBUF = PORTD;
  1929  1243  1283               	bcf	3,5	;RP0=0, select bank0
  1930  1244  1303               	bcf	3,6	;RP1=0, select bank0
  1931  1245  0808               	movf	8,w	;volatile
  1932  1246  0093               	movwf	19	;volatile
  1933  1247                     l3624:
  1934                           
  1935                           ;main.c: 149:         count = spiRead();
  1936  1247  160A  118A  2000  160A  118A  	fcall	_spiRead
  1937  124C  1683               	bsf	3,5	;RP0=1, select bank1
  1938  124D  1303               	bcf	3,6	;RP1=0, select bank1
  1939  124E  00C6               	movwf	??_main^(0+128)
  1940  124F  0846               	movf	??_main^(0+128),w
  1941  1250  00D6               	movwf	_count^(0+128)
  1942  1251                     l3626:
  1943                           
  1944                           ;main.c: 150:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1945  1251  3003               	movlw	3
  1946  1252  1683               	bsf	3,5	;RP0=1, select bank1
  1947  1253  1303               	bcf	3,6	;RP1=0, select bank1
  1948  1254  00C7               	movwf	(??_main^(0+128)+1)
  1949  1255  3097               	movlw	151
  1950  1256  00C6               	movwf	??_main^(0+128)
  1951  1257                     u5837:
  1952  1257  0BC6               	decfsz	??_main^(0+128),f
  1953  1258  2A57               	goto	u5837
  1954  1259  0BC7               	decfsz	(??_main^(0+128)+1),f
  1955  125A  2A57               	goto	u5837
  1956  125B                     l3628:
  1957                           
  1958                           ;main.c: 151:         PORTCbits.RC1 = 1;
  1959  125B  1283               	bcf	3,5	;RP0=0, select bank0
  1960  125C  1303               	bcf	3,6	;RP1=0, select bank0
  1961  125D  1487               	bsf	7,1	;volatile
  1962  125E                     l3630:
  1963                           
  1964                           ;main.c: 152:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1965  125E  3003               	movlw	3
  1966  125F  1683               	bsf	3,5	;RP0=1, select bank1
  1967  1260  1303               	bcf	3,6	;RP1=0, select bank1
  1968  1261  00C8               	movwf	(??_main^(0+128)+2)
  1969  1262  3008               	movlw	8
  1970  1263  00C7               	movwf	(??_main^(0+128)+1)
  1971  1264  3076               	movlw	118
  1972  1265  00C6               	movwf	??_main^(0+128)
  1973  1266                     u5847:
  1974  1266  0BC6               	decfsz	??_main^(0+128),f
  1975  1267  2A66               	goto	u5847
  1976  1268  0BC7               	decfsz	(??_main^(0+128)+1),f
  1977  1269  2A66               	goto	u5847
  1978  126A  0BC8               	decfsz	(??_main^(0+128)+2),f
  1979  126B  2A66               	goto	u5847
  1980  126C  0000               	nop
  1981  126D                     l3632:
  1982                           
  1983                           ;main.c: 155:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1984  126D  301A               	movlw	26
  1985  126E  1683               	bsf	3,5	;RP0=1, select bank1
  1986  126F  1303               	bcf	3,6	;RP1=0, select bank1
  1987  1270  00C7               	movwf	(??_main^(0+128)+1)
  1988  1271  30F7               	movlw	247
  1989  1272  00C6               	movwf	??_main^(0+128)
  1990  1273                     u5857:
  1991  1273  0BC6               	decfsz	??_main^(0+128),f
  1992  1274  2A73               	goto	u5857
  1993  1275  0BC7               	decfsz	(??_main^(0+128)+1),f
  1994  1276  2A73               	goto	u5857
  1995  1277  2A78               	nop2
  1996  1278                     l3634:
  1997                           
  1998                           ;main.c: 156:         PORTCbits.RC2 = 0;
  1999  1278  1283               	bcf	3,5	;RP0=0, select bank0
  2000  1279  1303               	bcf	3,6	;RP1=0, select bank0
  2001  127A  1107               	bcf	7,2	;volatile
  2002  127B                     l3636:
  2003                           
  2004                           ;main.c: 157:         _delay((unsigned long)((10)*(8000000/4000.0)));
  2005  127B  301A               	movlw	26
  2006  127C  1683               	bsf	3,5	;RP0=1, select bank1
  2007  127D  1303               	bcf	3,6	;RP1=0, select bank1
  2008  127E  00C7               	movwf	(??_main^(0+128)+1)
  2009  127F  30F7               	movlw	247
  2010  1280  00C6               	movwf	??_main^(0+128)
  2011  1281                     u5867:
  2012  1281  0BC6               	decfsz	??_main^(0+128),f
  2013  1282  2A81               	goto	u5867
  2014  1283  0BC7               	decfsz	(??_main^(0+128)+1),f
  2015  1284  2A81               	goto	u5867
  2016  1285  2A86               	nop2
  2017  1286                     l3638:
  2018                           
  2019                           ;main.c: 158:         SSPBUF = 0;
  2020  1286  1283               	bcf	3,5	;RP0=0, select bank0
  2021  1287  1303               	bcf	3,6	;RP1=0, select bank0
  2022  1288  0193               	clrf	19	;volatile
  2023  1289                     l3640:
  2024                           
  2025                           ;main.c: 159:         lmm = spiRead();
  2026  1289  160A  118A  2000  160A  118A  	fcall	_spiRead
  2027  128E  1683               	bsf	3,5	;RP0=1, select bank1
  2028  128F  1303               	bcf	3,6	;RP1=0, select bank1
  2029  1290  00C6               	movwf	??_main^(0+128)
  2030  1291  0846               	movf	??_main^(0+128),w
  2031  1292  00ED               	movwf	_lmm^(0+128)
  2032                           
  2033                           ;main.c: 160:         _delay((unsigned long)((1)*(8000000/4000.0)));
  2034  1293  3003               	movlw	3
  2035  1294  1683               	bsf	3,5	;RP0=1, select bank1
  2036  1295  1303               	bcf	3,6	;RP1=0, select bank1
  2037  1296  00C7               	movwf	(??_main^(0+128)+1)
  2038  1297  3097               	movlw	151
  2039  1298  00C6               	movwf	??_main^(0+128)
  2040  1299                     u5877:
  2041  1299  0BC6               	decfsz	??_main^(0+128),f
  2042  129A  2A99               	goto	u5877
  2043  129B  0BC7               	decfsz	(??_main^(0+128)+1),f
  2044  129C  2A99               	goto	u5877
  2045  129D                     l3642:
  2046                           
  2047                           ;main.c: 161:         PORTCbits.RC2 = 1;
  2048  129D  1283               	bcf	3,5	;RP0=0, select bank0
  2049  129E  1303               	bcf	3,6	;RP1=0, select bank0
  2050  129F  1507               	bsf	7,2	;volatile
  2051                           
  2052                           ;main.c: 162:         _delay((unsigned long)((200)*(8000000/4000.0)));
  2053  12A0  3003               	movlw	3
  2054  12A1  1683               	bsf	3,5	;RP0=1, select bank1
  2055  12A2  1303               	bcf	3,6	;RP1=0, select bank1
  2056  12A3  00C8               	movwf	(??_main^(0+128)+2)
  2057  12A4  3008               	movlw	8
  2058  12A5  00C7               	movwf	(??_main^(0+128)+1)
  2059  12A6  3076               	movlw	118
  2060  12A7  00C6               	movwf	??_main^(0+128)
  2061  12A8                     u5887:
  2062  12A8  0BC6               	decfsz	??_main^(0+128),f
  2063  12A9  2AA8               	goto	u5887
  2064  12AA  0BC7               	decfsz	(??_main^(0+128)+1),f
  2065  12AB  2AA8               	goto	u5887
  2066  12AC  0BC8               	decfsz	(??_main^(0+128)+2),f
  2067  12AD  2AA8               	goto	u5887
  2068  12AE  0000               	nop
  2069  12AF  2891               	goto	l109
  2070  12B0  120A  118A  2800   	ljmp	start
  2071  12B3                     __end_of_main:
  2072                           
  2073                           	psect	text1
  2074  1009                     __ptext1:	
  2075 ;; *************** function _write *****************
  2076 ;; Defined at:
  2077 ;;		line 24 in file "UART.c"
  2078 ;; Parameters:    Size  Location     Type
  2079 ;;  entrada         2    0[COMMON] PTR unsigned char 
  2080 ;;		 -> RAM(512), l(20), STR_4(4), c(20), 
  2081 ;;		 -> STR_3(4), s(20), STR_2(4), 
  2082 ;; Auto vars:     Size  Location     Type
  2083 ;;		None
  2084 ;; Return value:  Size  Location     Type
  2085 ;;                  1    wreg      void 
  2086 ;; Registers used:
  2087 ;;		wreg, fsr0l, fsr0h, btemp+1, pclath
  2088 ;; Tracked objects:
  2089 ;;		On entry : 0/0
  2090 ;;		On exit  : 0/0
  2091 ;;		Unchanged: 0/0
  2092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2093 ;;      Params:         2       0       0       0       0
  2094 ;;      Locals:         0       0       0       0       0
  2095 ;;      Temps:          2       0       0       0       0
  2096 ;;      Totals:         4       0       0       0       0
  2097 ;;Total ram usage:        4 bytes
  2098 ;; Hardware stack levels used:    2
  2099 ;; This function calls:
  2100 ;;		Nothing
  2101 ;; This function is called by:
  2102 ;;		_main
  2103 ;; This function uses a non-reentrant model
  2104 ;;
  2105                           
  2106                           
  2107                           ;psect for function _write
  2108  1009                     _write:
  2109  1009                     l3250:	
  2110                           ;incstack = 0
  2111                           ; Regs used in _write: [wreg-fsr0h+btemp+1+pclath]
  2112                           
  2113                           
  2114                           ;UART.c: 25:     TXREG = entrada[0];
  2115  1009  0871               	movf	write@entrada+1,w
  2116  100A  1283               	bcf	3,5	;RP0=0, select bank0
  2117  100B  1303               	bcf	3,6	;RP1=0, select bank0
  2118  100C  00FF               	movwf	btemp+1
  2119  100D  0870               	movf	write@entrada,w
  2120  100E  0084               	movwf	4
  2121  100F  120A  118A  2003  160A  118A  	fcall	stringtab
  2122  1014  0099               	movwf	25	;volatile
  2123  1015                     l136:	
  2124                           ;UART.c: 27:     }
  2125                           
  2126                           
  2127                           ;UART.c: 26:     while (TRMT == 0) {
  2128  1015  1683               	bsf	3,5	;RP0=1, select bank1
  2129  1016  1303               	bcf	3,6	;RP1=0, select bank1
  2130  1017  1C98               	btfss	24,1	;volatile
  2131  1018  281A               	goto	u5191
  2132  1019  281B               	goto	u5190
  2133  101A                     u5191:
  2134  101A  2815               	goto	l136
  2135  101B                     u5190:
  2136  101B                     l3252:
  2137                           
  2138                           ;UART.c: 28:     TXREG = entrada[1];
  2139  101B  3001               	movlw	1
  2140  101C  00F2               	movwf	??_write
  2141  101D  3000               	movlw	0
  2142  101E  00F3               	movwf	??_write+1
  2143  101F  0872               	movf	??_write,w
  2144  1020  0770               	addwf	write@entrada,w
  2145  1021  0084               	movwf	4
  2146  1022  0873               	movf	??_write+1,w
  2147  1023  1803               	skipnc
  2148  1024  0A73               	incf	??_write+1,w
  2149  1025  0771               	addwf	write@entrada+1,w
  2150  1026  1283               	bcf	3,5	;RP0=0, select bank0
  2151  1027  1303               	bcf	3,6	;RP1=0, select bank0
  2152  1028  00FF               	movwf	btemp+1
  2153  1029  120A  118A  2003  160A  118A  	fcall	stringtab
  2154  102E  0099               	movwf	25	;volatile
  2155  102F                     l139:	
  2156                           ;UART.c: 30:     }
  2157                           
  2158                           
  2159                           ;UART.c: 29:     while (TRMT == 0) {
  2160  102F  1683               	bsf	3,5	;RP0=1, select bank1
  2161  1030  1303               	bcf	3,6	;RP1=0, select bank1
  2162  1031  1C98               	btfss	24,1	;volatile
  2163  1032  2834               	goto	u5201
  2164  1033  2835               	goto	u5200
  2165  1034                     u5201:
  2166  1034  282F               	goto	l139
  2167  1035                     u5200:
  2168  1035                     l3254:
  2169                           
  2170                           ;UART.c: 31:     TXREG = entrada[2];
  2171  1035  3002               	movlw	2
  2172  1036  00F2               	movwf	??_write
  2173  1037  3000               	movlw	0
  2174  1038  00F3               	movwf	??_write+1
  2175  1039  0872               	movf	??_write,w
  2176  103A  0770               	addwf	write@entrada,w
  2177  103B  0084               	movwf	4
  2178  103C  0873               	movf	??_write+1,w
  2179  103D  1803               	skipnc
  2180  103E  0A73               	incf	??_write+1,w
  2181  103F  0771               	addwf	write@entrada+1,w
  2182  1040  1283               	bcf	3,5	;RP0=0, select bank0
  2183  1041  1303               	bcf	3,6	;RP1=0, select bank0
  2184  1042  00FF               	movwf	btemp+1
  2185  1043  120A  118A  2003  160A  118A  	fcall	stringtab
  2186  1048  0099               	movwf	25	;volatile
  2187  1049                     l142:	
  2188                           ;UART.c: 33:     }
  2189                           
  2190                           
  2191                           ;UART.c: 32:     while (TRMT == 0) {
  2192  1049  1683               	bsf	3,5	;RP0=1, select bank1
  2193  104A  1303               	bcf	3,6	;RP1=0, select bank1
  2194  104B  1C98               	btfss	24,1	;volatile
  2195  104C  284E               	goto	u5211
  2196  104D  284F               	goto	u5210
  2197  104E                     u5211:
  2198  104E  2849               	goto	l142
  2199  104F                     u5210:
  2200  104F                     l3256:
  2201                           
  2202                           ;UART.c: 34:     TXREG = entrada[3];
  2203  104F  3003               	movlw	3
  2204  1050  00F2               	movwf	??_write
  2205  1051  3000               	movlw	0
  2206  1052  00F3               	movwf	??_write+1
  2207  1053  0872               	movf	??_write,w
  2208  1054  0770               	addwf	write@entrada,w
  2209  1055  0084               	movwf	4
  2210  1056  0873               	movf	??_write+1,w
  2211  1057  1803               	skipnc
  2212  1058  0A73               	incf	??_write+1,w
  2213  1059  0771               	addwf	write@entrada+1,w
  2214  105A  1283               	bcf	3,5	;RP0=0, select bank0
  2215  105B  1303               	bcf	3,6	;RP1=0, select bank0
  2216  105C  00FF               	movwf	btemp+1
  2217  105D  120A  118A  2003  160A  118A  	fcall	stringtab
  2218  1062  0099               	movwf	25	;volatile
  2219  1063                     l145:	
  2220                           ;UART.c: 36:     }
  2221                           
  2222                           
  2223                           ;UART.c: 35:     while (TRMT == 0) {
  2224  1063  1683               	bsf	3,5	;RP0=1, select bank1
  2225  1064  1303               	bcf	3,6	;RP1=0, select bank1
  2226  1065  1C98               	btfss	24,1	;volatile
  2227  1066  2868               	goto	u5221
  2228  1067  2869               	goto	u5220
  2229  1068                     u5221:
  2230  1068  2863               	goto	l145
  2231  1069                     u5220:
  2232  1069                     l3258:
  2233                           
  2234                           ;UART.c: 37:     TXREG = 0x20;
  2235  1069  3020               	movlw	32
  2236  106A  1283               	bcf	3,5	;RP0=0, select bank0
  2237  106B  1303               	bcf	3,6	;RP1=0, select bank0
  2238  106C  0099               	movwf	25	;volatile
  2239  106D                     l148:	
  2240                           ;UART.c: 39:     }
  2241                           
  2242                           
  2243                           ;UART.c: 38:     while (TRMT == 0) {
  2244  106D  1683               	bsf	3,5	;RP0=1, select bank1
  2245  106E  1303               	bcf	3,6	;RP1=0, select bank1
  2246  106F  1C98               	btfss	24,1	;volatile
  2247  1070  2872               	goto	u5231
  2248  1071  2873               	goto	u5230
  2249  1072                     u5231:
  2250  1072  286D               	goto	l148
  2251  1073                     u5230:
  2252  1073                     l151:
  2253  1073  0008               	return
  2254  1074                     __end_of_write:
  2255                           
  2256                           	psect	text2
  2257  153B                     __ptext2:	
  2258 ;; *************** function _sprintf *****************
  2259 ;; Defined at:
  2260 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2261 ;; Parameters:    Size  Location     Type
  2262 ;;  sp              2    0[BANK1 ] PTR unsigned char 
  2263 ;;		 -> l(20), c(20), s(20), 
  2264 ;;  f               1    2[BANK1 ] PTR const unsigned char 
  2265 ;;		 -> STR_7(7), STR_6(3), STR_5(7), 
  2266 ;; Auto vars:     Size  Location     Type
  2267 ;;  fval            4   31[BANK1 ] PTR const unsigned char 
  2268 ;;  val             4   25[BANK1 ] unsigned long 
  2269 ;;  tmpval          4   21[BANK1 ] struct .
  2270 ;;  prec            2   35[BANK1 ] int 
  2271 ;;  eexp            2   29[BANK1 ] int 
  2272 ;;  width           2   19[BANK1 ] int 
  2273 ;;  flag            2   17[BANK1 ] unsigned short 
  2274 ;;  cp              2    0        PTR const unsigned char 
  2275 ;;  len             2    0        unsigned int 
  2276 ;;  c               1   37[BANK1 ] unsigned char 
  2277 ;;  ap              1   16[BANK1 ] PTR void [1]
  2278 ;;		 -> ?_sprintf(2), 
  2279 ;;  d               1    0        unsigned char 
  2280 ;; Return value:  Size  Location     Type
  2281 ;;                  2    0[BANK1 ] int 
  2282 ;; Registers used:
  2283 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2284 ;; Tracked objects:
  2285 ;;		On entry : 0/0
  2286 ;;		On exit  : 0/0
  2287 ;;		Unchanged: 0/0
  2288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2289 ;;      Params:         0       0       7       0       0
  2290 ;;      Locals:         0       0      26       0       0
  2291 ;;      Temps:          0       0       5       0       0
  2292 ;;      Totals:         0       0      38       0       0
  2293 ;;Total ram usage:       38 bytes
  2294 ;; Hardware stack levels used:    1
  2295 ;; Hardware stack levels required when called:    3
  2296 ;; This function calls:
  2297 ;;		___awdiv
  2298 ;;		___fladd
  2299 ;;		___fleq
  2300 ;;		___flge
  2301 ;;		___flmul
  2302 ;;		___flneg
  2303 ;;		___flsub
  2304 ;;		___fltol
  2305 ;;		___lldiv
  2306 ;;		___llmod
  2307 ;;		___wmul
  2308 ;;		___xxtofl
  2309 ;;		__div_to_l_
  2310 ;;		__tdiv_to_l_
  2311 ;;		_fround
  2312 ;;		_isdigit
  2313 ;;		_scale
  2314 ;; This function is called by:
  2315 ;;		_main
  2316 ;; This function uses a non-reentrant model
  2317 ;;
  2318                           
  2319                           
  2320                           ;psect for function _sprintf
  2321  153B                     _sprintf:
  2322  153B                     l3260:	
  2323                           ;incstack = 0
  2324                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2325                           
  2326                           
  2327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2328  153B  30A3               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  2329  153C  1683               	bsf	3,5	;RP0=1, select bank1
  2330  153D  1303               	bcf	3,6	;RP1=0, select bank1
  2331  153E  00A7               	movwf	??_sprintf^(0+128)
  2332  153F  0827               	movf	??_sprintf^(0+128),w
  2333  1540  00B0               	movwf	sprintf@ap^(0+128)
  2334  1541                     L1:
  2335                           
  2336                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2337  1541  120A  118A  2FC8   	goto	l3546
  2338  1544                     l3262:
  2339                           
  2340                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2341  1544  3025               	movlw	37
  2342  1545  0645               	xorwf	sprintf@c^(0+128),w
  2343  1546  1903               	btfsc	3,2
  2344  1547  2D49               	goto	u5241
  2345  1548  2D4A               	goto	u5240
  2346  1549                     u5241:
  2347  1549  2D5A               	goto	l3268
  2348  154A                     u5240:
  2349  154A                     l3264:
  2350                           
  2351                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2352  154A  0845               	movf	sprintf@c^(0+128),w
  2353  154B  00A7               	movwf	??_sprintf^(0+128)
  2354  154C  0820               	movf	sprintf@sp^(0+128),w
  2355  154D  0084               	movwf	4
  2356  154E  1783               	bsf	3,7
  2357  154F  1C21               	btfss	(sprintf@sp+1)^(0+128),0
  2358  1550  1383               	bcf	3,7
  2359  1551  0827               	movf	??_sprintf^(0+128),w
  2360  1552  0080               	movwf	0
  2361  1553                     l3266:
  2362  1553  3001               	movlw	1
  2363  1554  07A0               	addwf	sprintf@sp^(0+128),f
  2364  1555  1803               	skipnc
  2365  1556  0AA1               	incf	(sprintf@sp+1)^(0+128),f
  2366  1557  3000               	movlw	0
  2367  1558  07A1               	addwf	(sprintf@sp+1)^(0+128),f
  2368                           
  2369                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2370  1559  2D41               	goto	L1
  2371  155A                     l3268:
  2372                           
  2373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2374  155A  01B3               	clrf	sprintf@width^(0+128)
  2375  155B  01B4               	clrf	(sprintf@width+1)^(0+128)
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2378  155C  01B1               	clrf	sprintf@flag^(0+128)
  2379  155D  01B2               	clrf	(sprintf@flag+1)^(0+128)
  2380  155E                     l3270:
  2381                           
  2382                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2383  155E  0822               	movf	sprintf@f^(0+128),w
  2384  155F  0084               	movwf	4
  2385  1560  120A  118A  200D  160A  118A  	fcall	stringdir
  2386  1565  160A  158A  20D9  160A  118A  	fcall	_isdigit
  2387  156A  1C03               	btfss	3,0
  2388  156B  2D6D               	goto	u5251
  2389  156C  2D6E               	goto	u5250
  2390  156D                     u5251:
  2391  156D  2DAE               	goto	l3282
  2392  156E                     u5250:
  2393  156E                     l3272:
  2394                           
  2395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2396  156E  1683               	bsf	3,5	;RP0=1, select bank1
  2397  156F  1303               	bcf	3,6	;RP1=0, select bank1
  2398  1570  01B3               	clrf	sprintf@width^(0+128)
  2399  1571  01B4               	clrf	(sprintf@width+1)^(0+128)
  2400  1572                     l3274:
  2401                           
  2402                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2403  1572  300A               	movlw	10
  2404  1573  00F0               	movwf	___wmul@multiplier
  2405  1574  3000               	movlw	0
  2406  1575  00F1               	movwf	___wmul@multiplier+1
  2407  1576  1683               	bsf	3,5	;RP0=1, select bank1
  2408  1577  1303               	bcf	3,6	;RP1=0, select bank1
  2409  1578  0834               	movf	(sprintf@width+1)^(0+128),w
  2410  1579  00F3               	movwf	___wmul@multiplicand+1
  2411  157A  0833               	movf	sprintf@width^(0+128),w
  2412  157B  00F2               	movwf	___wmul@multiplicand
  2413  157C  160A  158A  21A7  160A  118A  	fcall	___wmul
  2414  1581  0871               	movf	?___wmul+1,w
  2415  1582  1683               	bsf	3,5	;RP0=1, select bank1
  2416  1583  1303               	bcf	3,6	;RP1=0, select bank1
  2417  1584  00B4               	movwf	(sprintf@width+1)^(0+128)
  2418  1585  0870               	movf	?___wmul,w
  2419  1586  00B3               	movwf	sprintf@width^(0+128)
  2420  1587                     l3276:
  2421                           
  2422                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2423  1587  0822               	movf	sprintf@f^(0+128),w
  2424  1588  0084               	movwf	4
  2425  1589  120A  118A  200D  160A  118A  	fcall	stringdir
  2426  158E  3ED0               	addlw	208
  2427  158F  00A7               	movwf	??_sprintf^(0+128)
  2428  1590  30FF               	movlw	255
  2429  1591  1803               	skipnc
  2430  1592  3000               	movlw	0
  2431  1593  00A8               	movwf	(??_sprintf^(0+128)+1)
  2432  1594  0827               	movf	??_sprintf^(0+128),w
  2433  1595  07B3               	addwf	sprintf@width^(0+128),f
  2434  1596  1803               	skipnc
  2435  1597  0AB4               	incf	(sprintf@width+1)^(0+128),f
  2436  1598  0828               	movf	(??_sprintf+1)^(0+128),w
  2437  1599  07B4               	addwf	(sprintf@width+1)^(0+128),f
  2438  159A                     l3278:
  2439  159A  3001               	movlw	1
  2440  159B  00A7               	movwf	??_sprintf^(0+128)
  2441  159C  0827               	movf	??_sprintf^(0+128),w
  2442  159D  07A2               	addwf	sprintf@f^(0+128),f
  2443  159E                     l3280:
  2444                           
  2445                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2446  159E  0822               	movf	sprintf@f^(0+128),w
  2447  159F  0084               	movwf	4
  2448  15A0  120A  118A  200D  160A  118A  	fcall	stringdir
  2449  15A5  160A  158A  20D9  160A  118A  	fcall	_isdigit
  2450  15AA  1803               	btfsc	3,0
  2451  15AB  2DAD               	goto	u5261
  2452  15AC  2DAE               	goto	u5260
  2453  15AD                     u5261:
  2454  15AD  2D72               	goto	l3274
  2455  15AE                     u5260:
  2456  15AE                     l3282:
  2457                           
  2458                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2459  15AE  1683               	bsf	3,5	;RP0=1, select bank1
  2460  15AF  1303               	bcf	3,6	;RP1=0, select bank1
  2461  15B0  0822               	movf	sprintf@f^(0+128),w
  2462  15B1  0084               	movwf	4
  2463  15B2  120A  118A  200D  160A  118A  	fcall	stringdir
  2464  15B7  3A2E               	xorlw	46
  2465  15B8  1D03               	skipz
  2466  15B9  2DBB               	goto	u5271
  2467  15BA  2DBC               	goto	u5270
  2468  15BB                     u5271:
  2469  15BB  2E01               	goto	l3298
  2470  15BC                     u5270:
  2471  15BC                     l3284:
  2472                           
  2473                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2474  15BC  1732               	bsf	(sprintf@flag^(0+128)+1),6
  2475  15BD                     l3286:
  2476                           
  2477                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2478  15BD  3001               	movlw	1
  2479  15BE  00A7               	movwf	??_sprintf^(0+128)
  2480  15BF  0827               	movf	??_sprintf^(0+128),w
  2481  15C0  07A2               	addwf	sprintf@f^(0+128),f
  2482  15C1                     l3288:
  2483                           
  2484                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2485  15C1  01C3               	clrf	sprintf@prec^(0+128)
  2486  15C2  01C4               	clrf	(sprintf@prec+1)^(0+128)
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2489  15C3  2DF0               	goto	l3296
  2490  15C4                     l3290:
  2491                           
  2492                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2493  15C4  300A               	movlw	10
  2494  15C5  00F0               	movwf	___wmul@multiplier
  2495  15C6  3000               	movlw	0
  2496  15C7  00F1               	movwf	___wmul@multiplier+1
  2497  15C8  1683               	bsf	3,5	;RP0=1, select bank1
  2498  15C9  1303               	bcf	3,6	;RP1=0, select bank1
  2499  15CA  0844               	movf	(sprintf@prec+1)^(0+128),w
  2500  15CB  00F3               	movwf	___wmul@multiplicand+1
  2501  15CC  0843               	movf	sprintf@prec^(0+128),w
  2502  15CD  00F2               	movwf	___wmul@multiplicand
  2503  15CE  160A  158A  21A7  160A  118A  	fcall	___wmul
  2504  15D3  0871               	movf	?___wmul+1,w
  2505  15D4  1683               	bsf	3,5	;RP0=1, select bank1
  2506  15D5  1303               	bcf	3,6	;RP1=0, select bank1
  2507  15D6  00C4               	movwf	(sprintf@prec+1)^(0+128)
  2508  15D7  0870               	movf	?___wmul,w
  2509  15D8  00C3               	movwf	sprintf@prec^(0+128)
  2510  15D9                     l3292:
  2511                           
  2512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2513  15D9  0822               	movf	sprintf@f^(0+128),w
  2514  15DA  0084               	movwf	4
  2515  15DB  120A  118A  200D  160A  118A  	fcall	stringdir
  2516  15E0  3ED0               	addlw	208
  2517  15E1  00A7               	movwf	??_sprintf^(0+128)
  2518  15E2  30FF               	movlw	255
  2519  15E3  1803               	skipnc
  2520  15E4  3000               	movlw	0
  2521  15E5  00A8               	movwf	(??_sprintf^(0+128)+1)
  2522  15E6  0827               	movf	??_sprintf^(0+128),w
  2523  15E7  07C3               	addwf	sprintf@prec^(0+128),f
  2524  15E8  1803               	skipnc
  2525  15E9  0AC4               	incf	(sprintf@prec+1)^(0+128),f
  2526  15EA  0828               	movf	(??_sprintf+1)^(0+128),w
  2527  15EB  07C4               	addwf	(sprintf@prec+1)^(0+128),f
  2528  15EC                     l3294:
  2529  15EC  3001               	movlw	1
  2530  15ED  00A7               	movwf	??_sprintf^(0+128)
  2531  15EE  0827               	movf	??_sprintf^(0+128),w
  2532  15EF  07A2               	addwf	sprintf@f^(0+128),f
  2533  15F0                     l3296:
  2534                           
  2535                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2536  15F0  0822               	movf	sprintf@f^(0+128),w
  2537  15F1  0084               	movwf	4
  2538  15F2  120A  118A  200D  160A  118A  	fcall	stringdir
  2539  15F7  160A  158A  20D9  160A  118A  	fcall	_isdigit
  2540  15FC  1803               	btfsc	3,0
  2541  15FD  2DFF               	goto	u5281
  2542  15FE  2E00               	goto	u5280
  2543  15FF                     u5281:
  2544  15FF  2DC4               	goto	l3290
  2545  1600                     u5280:
  2546  1600  2E07               	goto	l3304
  2547  1601                     l3298:
  2548                           
  2549                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2550  1601  01C3               	clrf	sprintf@prec^(0+128)
  2551  1602  01C4               	clrf	(sprintf@prec+1)^(0+128)
  2552  1603                     l3300:
  2553                           
  2554                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2555  1603  1632               	bsf	(sprintf@flag^(0+128)+1),4
  2556  1604  2E07               	goto	l3304
  2557  1605                     l319:	
  2558                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2559                           
  2560                           
  2561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2562  1605  1532               	bsf	(sprintf@flag^(0+128)+1),2
  2563                           
  2564                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2565  1606  2E29               	goto	l3306
  2566  1607                     l3304:
  2567  1607  3001               	movlw	1
  2568  1608  1683               	bsf	3,5	;RP0=1, select bank1
  2569  1609  1303               	bcf	3,6	;RP1=0, select bank1
  2570  160A  07A2               	addwf	sprintf@f^(0+128),f
  2571  160B  30FF               	movlw	-1
  2572  160C  0722               	addwf	sprintf@f^(0+128),w
  2573  160D  0084               	movwf	4
  2574  160E  120A  118A  200D  160A  118A  	fcall	stringdir
  2575  1613  00C5               	movwf	sprintf@c^(0+128)
  2576  1614  00A7               	movwf	??_sprintf^(0+128)
  2577  1615  01A8               	clrf	(??_sprintf^(0+128)+1)
  2578                           
  2579                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2580                           ; Switch size 1, requested type "simple"
  2581                           ; Number of cases is 1, Range of values is 0 to 0
  2582                           ; switch strategies available:
  2583                           ; Name         Instructions Cycles
  2584                           ; simple_byte            4     3 (average)
  2585                           ; direct_byte           11     8 (fixed)
  2586                           ; jumptable            260     6 (fixed)
  2587                           ;	Chosen strategy is simple_byte
  2588  1616  0828               	movf	(??_sprintf+1)^(0+128),w
  2589  1617  3A00               	xorlw	0	; case 0
  2590  1618  1903               	skipnz
  2591  1619  2E1B               	goto	l3664
  2592  161A  2D41               	goto	L1
  2593  161B                     l3664:
  2594                           
  2595                           ; Switch size 1, requested type "simple"
  2596                           ; Number of cases is 4, Range of values is 0 to 105
  2597                           ; switch strategies available:
  2598                           ; Name         Instructions Cycles
  2599                           ; simple_byte           13     7 (average)
  2600                           ; jumptable            260     6 (fixed)
  2601                           ;	Chosen strategy is simple_byte
  2602  161B  0827               	movf	??_sprintf^(0+128),w
  2603  161C  3A00               	xorlw	0	; case 0
  2604  161D  1903               	skipnz
  2605  161E  2FFD               	goto	L3
  2606  161F  3A64               	xorlw	100	; case 100
  2607  1620  1903               	skipnz
  2608  1621  2E29               	goto	l3306
  2609  1622  3A02               	xorlw	2	; case 102
  2610  1623  1903               	skipnz
  2611  1624  2E05               	goto	l319
  2612  1625  3A0F               	xorlw	15	; case 105
  2613  1626  1903               	skipnz
  2614  1627  2E29               	goto	l3306
  2615  1628  2D41               	goto	L1
  2616  1629                     l3306:
  2617                           
  2618                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2619  1629  3000               	movlw	0
  2620  162A  0531               	andwf	sprintf@flag^(0+128),w
  2621  162B  00A7               	movwf	??_sprintf^(0+128)
  2622  162C  3007               	movlw	7
  2623  162D  0532               	andwf	(sprintf@flag+1)^(0+128),w
  2624  162E  00A8               	movwf	(??_sprintf+1)^(0+128)
  2625  162F  0827               	movf	??_sprintf^(0+128),w
  2626  1630  0428               	iorwf	(??_sprintf^(0+128)+1),w
  2627  1631  1903               	btfsc	3,2
  2628  1632  2E34               	goto	u5291
  2629  1633  2E37               	goto	u5290
  2630  1634                     u5291:
  2631  1634  120A  118A  2E21   	goto	l3468
  2632  1637                     u5290:
  2633  1637                     l3308:
  2634                           
  2635                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2636  1637  1E32               	btfss	(sprintf@flag+1)^(0+128),4
  2637  1638  2E3A               	goto	u5301
  2638  1639  2E3B               	goto	u5300
  2639  163A                     u5301:
  2640  163A  2E3F               	goto	l3312
  2641  163B                     u5300:
  2642  163B                     l3310:
  2643                           
  2644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2645  163B  3006               	movlw	6
  2646  163C  00C3               	movwf	sprintf@prec^(0+128)
  2647  163D  3000               	movlw	0
  2648  163E  00C4               	movwf	(sprintf@prec^(0+128)+1)
  2649  163F                     l3312:
  2650                           
  2651                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2652  163F  0830               	movf	sprintf@ap^(0+128),w
  2653  1640  0084               	movwf	4
  2654  1641  1383               	bcf	3,7	;select IRP bank0
  2655  1642  0800               	movf	0,w
  2656  1643  00BF               	movwf	sprintf@fval^(0+128)
  2657  1644  0A84               	incf	4,f
  2658  1645  0800               	movf	0,w
  2659  1646  00C0               	movwf	(sprintf@fval+1)^(0+128)
  2660  1647  0A84               	incf	4,f
  2661  1648  0800               	movf	0,w
  2662  1649  00C1               	movwf	(sprintf@fval+2)^(0+128)
  2663  164A  0A84               	incf	4,f
  2664  164B  0800               	movf	0,w
  2665  164C  00C2               	movwf	(sprintf@fval+3)^(0+128)
  2666  164D                     l3314:
  2667  164D  3004               	movlw	4
  2668  164E  00A7               	movwf	??_sprintf^(0+128)
  2669  164F  0827               	movf	??_sprintf^(0+128),w
  2670  1650  07B0               	addwf	sprintf@ap^(0+128),f
  2671  1651                     l3316:
  2672                           
  2673                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2674  1651  0842               	movf	(sprintf@fval+3)^(0+128),w
  2675  1652  00F3               	movwf	___flge@ff1+3
  2676  1653  0841               	movf	(sprintf@fval+2)^(0+128),w
  2677  1654  00F2               	movwf	___flge@ff1+2
  2678  1655  0840               	movf	(sprintf@fval+1)^(0+128),w
  2679  1656  00F1               	movwf	___flge@ff1+1
  2680  1657  083F               	movf	sprintf@fval^(0+128),w
  2681  1658  00F0               	movwf	___flge@ff1
  2682  1659  3000               	movlw	0
  2683  165A  00F7               	movwf	___flge@ff2+3
  2684  165B  3000               	movlw	0
  2685  165C  00F6               	movwf	___flge@ff2+2
  2686  165D  3000               	movlw	0
  2687  165E  00F5               	movwf	___flge@ff2+1
  2688  165F  3000               	movlw	0
  2689  1660  00F4               	movwf	___flge@ff2
  2690  1661  160A  158A  2499  160A  118A  	fcall	___flge
  2691  1666  1803               	btfsc	3,0
  2692  1667  2E69               	goto	u5311
  2693  1668  2E6A               	goto	u5310
  2694  1669                     u5311:
  2695  1669  2E87               	goto	l3322
  2696  166A                     u5310:
  2697  166A                     l3318:
  2698                           
  2699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2700  166A  1683               	bsf	3,5	;RP0=1, select bank1
  2701  166B  1303               	bcf	3,6	;RP1=0, select bank1
  2702  166C  0842               	movf	(sprintf@fval+3)^(0+128),w
  2703  166D  00F3               	movwf	___flneg@f1+3
  2704  166E  0841               	movf	(sprintf@fval+2)^(0+128),w
  2705  166F  00F2               	movwf	___flneg@f1+2
  2706  1670  0840               	movf	(sprintf@fval+1)^(0+128),w
  2707  1671  00F1               	movwf	___flneg@f1+1
  2708  1672  083F               	movf	sprintf@fval^(0+128),w
  2709  1673  00F0               	movwf	___flneg@f1
  2710  1674  160A  158A  20C1  160A  118A  	fcall	___flneg
  2711  1679  0873               	movf	?___flneg+3,w
  2712  167A  1683               	bsf	3,5	;RP0=1, select bank1
  2713  167B  1303               	bcf	3,6	;RP1=0, select bank1
  2714  167C  00C2               	movwf	(sprintf@fval+3)^(0+128)
  2715  167D  0872               	movf	?___flneg+2,w
  2716  167E  00C1               	movwf	(sprintf@fval+2)^(0+128)
  2717  167F  0871               	movf	?___flneg+1,w
  2718  1680  00C0               	movwf	(sprintf@fval+1)^(0+128)
  2719  1681  0870               	movf	?___flneg,w
  2720  1682  00BF               	movwf	sprintf@fval^(0+128)
  2721  1683                     l3320:
  2722                           
  2723                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2724  1683  3003               	movlw	3
  2725  1684  04B1               	iorwf	sprintf@flag^(0+128),f
  2726  1685  3000               	movlw	0
  2727  1686  04B2               	iorwf	(sprintf@flag+1)^(0+128),f
  2728  1687                     l3322:
  2729                           
  2730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2731  1687  1683               	bsf	3,5	;RP0=1, select bank1
  2732  1688  1303               	bcf	3,6	;RP1=0, select bank1
  2733  1689  01BD               	clrf	sprintf@eexp^(0+128)
  2734  168A  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  2735  168B                     l3324:
  2736                           
  2737                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2738  168B  0842               	movf	(sprintf@fval+3)^(0+128),w
  2739  168C  00F3               	movwf	___fleq@ff1+3
  2740  168D  0841               	movf	(sprintf@fval+2)^(0+128),w
  2741  168E  00F2               	movwf	___fleq@ff1+2
  2742  168F  0840               	movf	(sprintf@fval+1)^(0+128),w
  2743  1690  00F1               	movwf	___fleq@ff1+1
  2744  1691  083F               	movf	sprintf@fval^(0+128),w
  2745  1692  00F0               	movwf	___fleq@ff1
  2746  1693  3000               	movlw	0
  2747  1694  00F7               	movwf	___fleq@ff2+3
  2748  1695  3000               	movlw	0
  2749  1696  00F6               	movwf	___fleq@ff2+2
  2750  1697  3000               	movlw	0
  2751  1698  00F5               	movwf	___fleq@ff2+1
  2752  1699  3000               	movlw	0
  2753  169A  00F4               	movwf	___fleq@ff2
  2754  169B  160A  158A  22CD  160A  118A  	fcall	___fleq
  2755  16A0  1803               	btfsc	3,0
  2756  16A1  2EA3               	goto	u5321
  2757  16A2  2EA4               	goto	u5320
  2758  16A3                     u5321:
  2759  16A3  2F94               	goto	l3350
  2760  16A4                     u5320:
  2761  16A4                     l3326:
  2762                           
  2763                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2764  16A4  1003               	clrc
  2765  16A5  1683               	bsf	3,5	;RP0=1, select bank1
  2766  16A6  1303               	bcf	3,6	;RP1=0, select bank1
  2767  16A7  0D41               	rlf	(sprintf@fval+2)^(0+128),w
  2768  16A8  0D42               	rlf	(sprintf@fval+3)^(0+128),w
  2769  16A9  3E82               	addlw	130
  2770  16AA  00BD               	movwf	sprintf@eexp^(0+128)
  2771  16AB  30FF               	movlw	255
  2772  16AC  1803               	skipnc
  2773  16AD  3000               	movlw	0
  2774  16AE  00BE               	movwf	(sprintf@eexp^(0+128)+1)
  2775  16AF                     l3328:
  2776                           
  2777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2778  16AF  30FF               	movlw	255
  2779  16B0  07BD               	addwf	sprintf@eexp^(0+128),f
  2780  16B1  1803               	skipnc
  2781  16B2  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2782  16B3  30FF               	movlw	255
  2783  16B4  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2784  16B5                     l3330:
  2785                           
  2786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2787  16B5  3003               	movlw	3
  2788  16B6  00F0               	movwf	___wmul@multiplier
  2789  16B7  3000               	movlw	0
  2790  16B8  00F1               	movwf	___wmul@multiplier+1
  2791  16B9  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2792  16BA  00F3               	movwf	___wmul@multiplicand+1
  2793  16BB  083D               	movf	sprintf@eexp^(0+128),w
  2794  16BC  00F2               	movwf	___wmul@multiplicand
  2795  16BD  160A  158A  21A7  160A  118A  	fcall	___wmul
  2796  16C2  0871               	movf	?___wmul+1,w
  2797  16C3  1683               	bsf	3,5	;RP0=1, select bank1
  2798  16C4  1303               	bcf	3,6	;RP1=0, select bank1
  2799  16C5  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  2800  16C6  0870               	movf	?___wmul,w
  2801  16C7  00BD               	movwf	sprintf@eexp^(0+128)
  2802  16C8                     l3332:
  2803                           
  2804                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2805  16C8  300A               	movlw	10
  2806  16C9  00F7               	movwf	___awdiv@divisor
  2807  16CA  3000               	movlw	0
  2808  16CB  00F8               	movwf	___awdiv@divisor+1
  2809  16CC  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2810  16CD  00FA               	movwf	___awdiv@dividend+1
  2811  16CE  083D               	movf	sprintf@eexp^(0+128),w
  2812  16CF  00F9               	movwf	___awdiv@dividend
  2813  16D0  160A  158A  2430  160A  118A  	fcall	___awdiv
  2814  16D5  0878               	movf	?___awdiv+1,w
  2815  16D6  1683               	bsf	3,5	;RP0=1, select bank1
  2816  16D7  1303               	bcf	3,6	;RP1=0, select bank1
  2817  16D8  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  2818  16D9  0877               	movf	?___awdiv,w
  2819  16DA  00BD               	movwf	sprintf@eexp^(0+128)
  2820  16DB                     l3334:
  2821                           
  2822                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2823  16DB  1FBE               	btfss	(sprintf@eexp+1)^(0+128),7
  2824  16DC  2EDE               	goto	u5331
  2825  16DD  2EDF               	goto	u5330
  2826  16DE                     u5331:
  2827  16DE  2EE5               	goto	l3338
  2828  16DF                     u5330:
  2829  16DF                     l3336:
  2830                           
  2831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2832  16DF  30FF               	movlw	255
  2833  16E0  07BD               	addwf	sprintf@eexp^(0+128),f
  2834  16E1  1803               	skipnc
  2835  16E2  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2836  16E3  30FF               	movlw	255
  2837  16E4  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2838  16E5                     l3338:
  2839                           
  2840                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2841  16E5  033D               	decf	sprintf@eexp^(0+128),w
  2842  16E6  3AFF               	xorlw	255
  2843  16E7  120A  158A  2140  160A  118A  	fcall	_scale
  2844  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2845  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2846  16EE  0841               	movf	?_scale+3,w
  2847  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2848  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2849  16F1  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  2850  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2851  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2852  16F4  0840               	movf	?_scale+2,w
  2853  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2854  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2855  16F7  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  2856  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2857  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2858  16FA  083F               	movf	?_scale+1,w
  2859  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2860  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2861  16FD  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  2862  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2863  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2864  1700  083E               	movf	?_scale,w
  2865  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2866  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2867  1703  00B5               	movwf	sprintf@tmpval^(0+128)
  2868  1704                     l3340:
  2869                           
  2870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2871  1704  0842               	movf	(sprintf@fval+3)^(0+128),w
  2872  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2873  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2874  1707  00A7               	movwf	___flmul@b+3
  2875  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2876  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2877  170A  0841               	movf	(sprintf@fval+2)^(0+128),w
  2878  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2879  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2880  170D  00A6               	movwf	___flmul@b+2
  2881  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2882  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2883  1710  0840               	movf	(sprintf@fval+1)^(0+128),w
  2884  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2885  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2886  1713  00A5               	movwf	___flmul@b+1
  2887  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2888  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2889  1716  083F               	movf	sprintf@fval^(0+128),w
  2890  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2891  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2892  1719  00A4               	movwf	___flmul@b
  2893  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2894  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2895  171C  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  2896  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2897  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2898  171F  00AB               	movwf	___flmul@a+3
  2899  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2900  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2901  1722  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  2902  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2903  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2904  1725  00AA               	movwf	___flmul@a+2
  2905  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2906  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2907  1728  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  2908  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2909  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2910  172B  00A9               	movwf	___flmul@a+1
  2911  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2912  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2913  172E  0835               	movf	sprintf@tmpval^(0+128),w
  2914  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2915  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2916  1731  00A8               	movwf	___flmul@a
  2917  1732  120A  158A  249F  160A  118A  	fcall	___flmul
  2918  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2919  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2920  1739  0827               	movf	?___flmul+3,w
  2921  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2922  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2923  173C  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  2924  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2925  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2926  173F  0826               	movf	?___flmul+2,w
  2927  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2928  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2929  1742  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  2930  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2931  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2932  1745  0825               	movf	?___flmul+1,w
  2933  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2934  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2935  1748  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  2936  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2937  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2938  174B  0824               	movf	?___flmul,w
  2939  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2940  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2941  174E  00B5               	movwf	sprintf@tmpval^(0+128)
  2942  174F                     l3342:
  2943                           
  2944                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2945  174F  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  2946  1750  00F3               	movwf	___flge@ff1+3
  2947  1751  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  2948  1752  00F2               	movwf	___flge@ff1+2
  2949  1753  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  2950  1754  00F1               	movwf	___flge@ff1+1
  2951  1755  0835               	movf	sprintf@tmpval^(0+128),w
  2952  1756  00F0               	movwf	___flge@ff1
  2953  1757  303F               	movlw	63
  2954  1758  00F7               	movwf	___flge@ff2+3
  2955  1759  3080               	movlw	128
  2956  175A  00F6               	movwf	___flge@ff2+2
  2957  175B  3000               	movlw	0
  2958  175C  00F5               	movwf	___flge@ff2+1
  2959  175D  3000               	movlw	0
  2960  175E  00F4               	movwf	___flge@ff2
  2961  175F  160A  158A  2499  160A  118A  	fcall	___flge
  2962  1764  1803               	btfsc	3,0
  2963  1765  2F67               	goto	u5341
  2964  1766  2F68               	goto	u5340
  2965  1767                     u5341:
  2966  1767  2F71               	goto	l3346
  2967  1768                     u5340:
  2968  1768                     l3344:
  2969                           
  2970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2971  1768  30FF               	movlw	255
  2972  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2973  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2974  176B  07BD               	addwf	sprintf@eexp^(0+128),f
  2975  176C  1803               	skipnc
  2976  176D  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2977  176E  30FF               	movlw	255
  2978  176F  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2979  1770  2F94               	goto	l3350
  2980  1771                     l3346:
  2981  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2982  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2983  1773  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  2984  1774  00F3               	movwf	___flge@ff1+3
  2985  1775  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  2986  1776  00F2               	movwf	___flge@ff1+2
  2987  1777  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  2988  1778  00F1               	movwf	___flge@ff1+1
  2989  1779  0835               	movf	sprintf@tmpval^(0+128),w
  2990  177A  00F0               	movwf	___flge@ff1
  2991  177B  3041               	movlw	65
  2992  177C  00F7               	movwf	___flge@ff2+3
  2993  177D  3020               	movlw	32
  2994  177E  00F6               	movwf	___flge@ff2+2
  2995  177F  3000               	movlw	0
  2996  1780  00F5               	movwf	___flge@ff2+1
  2997  1781  3000               	movlw	0
  2998  1782  00F4               	movwf	___flge@ff2
  2999  1783  160A  158A  2499  160A  118A  	fcall	___flge
  3000  1788  1C03               	btfss	3,0
  3001  1789  2F8B               	goto	u5351
  3002  178A  2F8C               	goto	u5350
  3003  178B                     u5351:
  3004  178B  2F94               	goto	l3350
  3005  178C                     u5350:
  3006  178C                     l3348:
  3007                           
  3008                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3009  178C  3001               	movlw	1
  3010  178D  1683               	bsf	3,5	;RP0=1, select bank1
  3011  178E  1303               	bcf	3,6	;RP1=0, select bank1
  3012  178F  07BD               	addwf	sprintf@eexp^(0+128),f
  3013  1790  1803               	skipnc
  3014  1791  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  3015  1792  3000               	movlw	0
  3016  1793  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  3017  1794                     l3350:
  3018                           
  3019                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  3020  1794  1683               	bsf	3,5	;RP0=1, select bank1
  3021  1795  1303               	bcf	3,6	;RP1=0, select bank1
  3022  1796  0844               	movf	(sprintf@prec+1)^(0+128),w
  3023  1797  3A80               	xorlw	128
  3024  1798  00FF               	movwf	btemp+1
  3025  1799  3080               	movlw	128
  3026  179A  027F               	subwf	btemp+1,w
  3027  179B  1D03               	skipz
  3028  179C  2F9F               	goto	u5365
  3029  179D  300D               	movlw	13
  3030  179E  0243               	subwf	sprintf@prec^(0+128),w
  3031  179F                     u5365:
  3032  179F  1803               	skipnc
  3033  17A0  2FA2               	goto	u5361
  3034  17A1  2FA3               	goto	u5360
  3035  17A2                     u5361:
  3036  17A2  2FEA               	goto	l3354
  3037  17A3                     u5360:
  3038  17A3                     l3352:
  3039                           
  3040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  3041  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  3042  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  3043  17A5  0843               	movf	sprintf@prec^(0+128),w
  3044  17A6  160A  158A  25F5  160A  118A  	fcall	_fround
  3045  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  3046  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  3047  17AD  0841               	movf	?_fround+3,w
  3048  17AE  00D5               	movwf	___fladd@b+3
  3049  17AF  0840               	movf	?_fround+2,w
  3050  17B0  00D4               	movwf	___fladd@b+2
  3051  17B1  083F               	movf	?_fround+1,w
  3052  17B2  00D3               	movwf	___fladd@b+1
  3053  17B3  083E               	movf	?_fround,w
  3054  17B4  00D2               	movwf	___fladd@b
  3055  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  3056  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  3057  17B7  0842               	movf	(sprintf@fval+3)^(0+128),w
  3058  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  3059  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  3060  17BA  00D9               	movwf	___fladd@a+3
  3061  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  3062  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  3063  17BD  0841               	movf	(sprintf@fval+2)^(0+128),w
  3064  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  3065  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  3066  17C0  00D8               	movwf	___fladd@a+2
  3067  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  3068  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  3069  17C3  0840               	movf	(sprintf@fval+1)^(0+128),w
  3070  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  3071  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  3072  17C6  00D7               	movwf	___fladd@a+1
  3073  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  3074  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  3075  17C9  083F               	movf	sprintf@fval^(0+128),w
  3076  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  3077  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  3078  17CC  00D6               	movwf	___fladd@a
  3079  17CD  160A  118A  22B3  160A  118A  	fcall	___fladd
  3080  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  3081  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  3082  17D4  0855               	movf	?___fladd+3,w
  3083  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  3084  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  3085  17D7  00C2               	movwf	(sprintf@fval+3)^(0+128)
  3086  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  3087  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  3088  17DA  0854               	movf	?___fladd+2,w
  3089  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  3090  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  3091  17DD  00C1               	movwf	(sprintf@fval+2)^(0+128)
  3092  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  3093  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  3094  17E0  0853               	movf	?___fladd+1,w
  3095  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  3096  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  3097  17E3  00C0               	movwf	(sprintf@fval+1)^(0+128)
  3098  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  3099  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  3100  17E6  0852               	movf	?___fladd,w
  3101  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  3102  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  3103  17E9  00BF               	movwf	sprintf@fval^(0+128)
  3104  17EA                     l3354:
  3105                           
  3106                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3107  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  3108  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  3109  17EC  083E               	movf	(sprintf@eexp+1)^(0+128),w
  3110  17ED  3A80               	xorlw	128
  3111  17EE  00FF               	movwf	btemp+1
  3112  17EF  3080               	movlw	128
  3113  17F0  027F               	subwf	btemp+1,w
  3114  17F1  1D03               	skipz
  3115  17F2  2FF5               	goto	u5375
  3116  17F3  300A               	movlw	10
  3117  17F4  023D               	subwf	sprintf@eexp^(0+128),w
  3118  17F5                     u5375:
  3119  17F5  1803               	skipnc
  3120  17F6  2FFA               	goto	u5371
  3121  17F7  120A  118A  29BA   	goto	u5370
  3122  17FA                     u5371:
  3123  17FA  120A  118A  2A0B   	goto	l3362
  3124  17FD                     L3:
  3125  17FD                     L2:
  3126  17FD  120A  118A  2FDC   	ljmp	l3548
  3127                           
  3128                           	psect	text3
  3129  0940                     __ptext3:	
  3130 ;; *************** function _scale *****************
  3131 ;; Defined at:
  3132 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3133 ;; Parameters:    Size  Location     Type
  3134 ;;  scl             1    wreg     char 
  3135 ;; Auto vars:     Size  Location     Type
  3136 ;;  scl             1   48[BANK0 ] char 
  3137 ;; Return value:  Size  Location     Type
  3138 ;;                  4   30[BANK0 ] char 
  3139 ;; Registers used:
  3140 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3141 ;; Tracked objects:
  3142 ;;		On entry : 0/0
  3143 ;;		On exit  : 0/0
  3144 ;;		Unchanged: 0/0
  3145 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3146 ;;      Params:         0       4       0       0       0
  3147 ;;      Locals:         0       5       0       0       0
  3148 ;;      Temps:          0      10       0       0       0
  3149 ;;      Totals:         0      19       0       0       0
  3150 ;;Total ram usage:       19 bytes
  3151 ;; Hardware stack levels used:    1
  3152 ;; Hardware stack levels required when called:    2
  3153 ;; This function calls:
  3154 ;;		___awdiv
  3155 ;;		___awmod
  3156 ;;		___flmul
  3157 ;; This function is called by:
  3158 ;;		_sprintf
  3159 ;; This function uses a non-reentrant model
  3160 ;;
  3161                           
  3162                           
  3163                           ;psect for function _scale
  3164  0940                     _scale:
  3165                           
  3166                           ;incstack = 0
  3167                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3168                           ;scale@scl stored from wreg
  3169  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3170  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3171  0942  00D0               	movwf	scale@scl
  3172  0943                     l2850:
  3173                           
  3174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3175  0943  1FD0               	btfss	scale@scl,7
  3176  0944  2946               	goto	u4161
  3177  0945  2947               	goto	u4160
  3178  0946                     u4161:
  3179  0946  2AF4               	goto	l2872
  3180  0947                     u4160:
  3181  0947                     l2852:
  3182                           
  3183                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3184  0947  09D0               	comf	scale@scl,f
  3185  0948  0AD0               	incf	scale@scl,f
  3186  0949                     l2854:
  3187                           
  3188                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3189  0949  0850               	movf	scale@scl,w
  3190  094A  3A80               	xorlw	128
  3191  094B  3E12               	addlw	-238
  3192  094C  1C03               	skipc
  3193  094D  294F               	goto	u4171
  3194  094E  2950               	goto	u4170
  3195  094F                     u4171:
  3196  094F  2A38               	goto	l2862
  3197  0950                     u4170:
  3198  0950                     l2856:
  3199                           
  3200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3201  0950  300A               	movlw	10
  3202  0951  00F7               	movwf	___awdiv@divisor
  3203  0952  3000               	movlw	0
  3204  0953  00F8               	movwf	___awdiv@divisor+1
  3205  0954  0850               	movf	scale@scl,w
  3206  0955  00F2               	movwf	___awmod@dividend
  3207  0956  01F3               	clrf	___awmod@dividend+1
  3208  0957  1BF2               	btfsc	___awmod@dividend,7
  3209  0958  03F3               	decf	___awmod@dividend+1,f
  3210  0959  3064               	movlw	100
  3211  095A  00F0               	movwf	___awmod@divisor
  3212  095B  3000               	movlw	0
  3213  095C  00F1               	movwf	___awmod@divisor+1
  3214  095D  160A  158A  2371  120A  158A  	fcall	___awmod
  3215  0962  0871               	movf	?___awmod+1,w
  3216  0963  00FA               	movwf	___awdiv@dividend+1
  3217  0964  0870               	movf	?___awmod,w
  3218  0965  00F9               	movwf	___awdiv@dividend
  3219  0966  160A  158A  2430  120A  158A  	fcall	___awdiv
  3220  096B  0877               	movf	?___awdiv,w
  3221  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3222  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3223  096E  00C2               	movwf	??_scale
  3224  096F  3001               	movlw	1
  3225  0970                     u4185:
  3226  0970  1003               	clrc
  3227  0971  0DC2               	rlf	??_scale,f
  3228  0972  3EFF               	addlw	-1
  3229  0973  1D03               	skipz
  3230  0974  2970               	goto	u4185
  3231  0975  1003               	clrc
  3232  0976  0D42               	rlf	??_scale,w
  3233  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3234  0978  0084               	movwf	4
  3235  0979  120A  118A  200D  120A  158A  	fcall	stringdir
  3236  097E  00C3               	movwf	??_scale+1
  3237  097F  120A  118A  200D  120A  158A  	fcall	stringdir
  3238  0984  00C4               	movwf	??_scale+2
  3239  0985  120A  118A  200D  120A  158A  	fcall	stringdir
  3240  098A  00C5               	movwf	??_scale+3
  3241  098B  120A  118A  200D  120A  158A  	fcall	stringdir
  3242  0990  00C6               	movwf	??_scale+4
  3243  0991  0846               	movf	??_scale+4,w
  3244  0992  00A7               	movwf	___flmul@b+3
  3245  0993  0845               	movf	??_scale+3,w
  3246  0994  00A6               	movwf	___flmul@b+2
  3247  0995  0844               	movf	??_scale+2,w
  3248  0996  00A5               	movwf	___flmul@b+1
  3249  0997  0843               	movf	??_scale+1,w
  3250  0998  00A4               	movwf	___flmul@b
  3251  0999  3064               	movlw	100
  3252  099A  00F7               	movwf	___awdiv@divisor
  3253  099B  3000               	movlw	0
  3254  099C  00F8               	movwf	___awdiv@divisor+1
  3255  099D  0850               	movf	scale@scl,w
  3256  099E  00F9               	movwf	___awdiv@dividend
  3257  099F  01FA               	clrf	___awdiv@dividend+1
  3258  09A0  1BF9               	btfsc	___awdiv@dividend,7
  3259  09A1  03FA               	decf	___awdiv@dividend+1,f
  3260  09A2  160A  158A  2430  120A  158A  	fcall	___awdiv
  3261  09A7  0877               	movf	?___awdiv,w
  3262  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  3263  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  3264  09AA  00C7               	movwf	??_scale+5
  3265  09AB  3001               	movlw	1
  3266  09AC                     u4195:
  3267  09AC  1003               	clrc
  3268  09AD  0DC7               	rlf	??_scale+5,f
  3269  09AE  3EFF               	addlw	-1
  3270  09AF  1D03               	skipz
  3271  09B0  29AC               	goto	u4195
  3272  09B1  1003               	clrc
  3273  09B2  0D47               	rlf	??_scale+5,w
  3274  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3275  09B4  0084               	movwf	4
  3276  09B5  120A  118A  200D  120A  158A  	fcall	stringdir
  3277  09BA  00C8               	movwf	??_scale+6
  3278  09BB  120A  118A  200D  120A  158A  	fcall	stringdir
  3279  09C0  00C9               	movwf	??_scale+7
  3280  09C1  120A  118A  200D  120A  158A  	fcall	stringdir
  3281  09C6  00CA               	movwf	??_scale+8
  3282  09C7  120A  118A  200D  120A  158A  	fcall	stringdir
  3283  09CC  00CB               	movwf	??_scale+9
  3284  09CD  084B               	movf	??_scale+9,w
  3285  09CE  00AB               	movwf	___flmul@a+3
  3286  09CF  084A               	movf	??_scale+8,w
  3287  09D0  00AA               	movwf	___flmul@a+2
  3288  09D1  0849               	movf	??_scale+7,w
  3289  09D2  00A9               	movwf	___flmul@a+1
  3290  09D3  0848               	movf	??_scale+6,w
  3291  09D4  00A8               	movwf	___flmul@a
  3292  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  3293  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  3294  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  3295  09DC  0827               	movf	?___flmul+3,w
  3296  09DD  00CF               	movwf	_scale$1252+3
  3297  09DE  0826               	movf	?___flmul+2,w
  3298  09DF  00CE               	movwf	_scale$1252+2
  3299  09E0  0825               	movf	?___flmul+1,w
  3300  09E1  00CD               	movwf	_scale$1252+1
  3301  09E2  0824               	movf	?___flmul,w
  3302  09E3  00CC               	movwf	_scale$1252
  3303                           
  3304                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3305  09E4  300A               	movlw	10
  3306  09E5  00F0               	movwf	___awmod@divisor
  3307  09E6  3000               	movlw	0
  3308  09E7  00F1               	movwf	___awmod@divisor+1
  3309  09E8  0850               	movf	scale@scl,w
  3310  09E9  00F2               	movwf	___awmod@dividend
  3311  09EA  01F3               	clrf	___awmod@dividend+1
  3312  09EB  1BF2               	btfsc	___awmod@dividend,7
  3313  09EC  03F3               	decf	___awmod@dividend+1,f
  3314  09ED  160A  158A  2371  120A  158A  	fcall	___awmod
  3315  09F2  0870               	movf	?___awmod,w
  3316  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3317  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3318  09F5  00C2               	movwf	??_scale
  3319  09F6  3001               	movlw	1
  3320  09F7                     u4205:
  3321  09F7  1003               	clrc
  3322  09F8  0DC2               	rlf	??_scale,f
  3323  09F9  3EFF               	addlw	-1
  3324  09FA  1D03               	skipz
  3325  09FB  29F7               	goto	u4205
  3326  09FC  1003               	clrc
  3327  09FD  0D42               	rlf	??_scale,w
  3328  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3329  09FF  0084               	movwf	4
  3330  0A00  120A  118A  200D  120A  158A  	fcall	stringdir
  3331  0A05  00C3               	movwf	??_scale+1
  3332  0A06  120A  118A  200D  120A  158A  	fcall	stringdir
  3333  0A0B  00C4               	movwf	??_scale+2
  3334  0A0C  120A  118A  200D  120A  158A  	fcall	stringdir
  3335  0A11  00C5               	movwf	??_scale+3
  3336  0A12  120A  118A  200D  120A  158A  	fcall	stringdir
  3337  0A17  00C6               	movwf	??_scale+4
  3338  0A18  0846               	movf	??_scale+4,w
  3339  0A19  00A7               	movwf	___flmul@b+3
  3340  0A1A  0845               	movf	??_scale+3,w
  3341  0A1B  00A6               	movwf	___flmul@b+2
  3342  0A1C  0844               	movf	??_scale+2,w
  3343  0A1D  00A5               	movwf	___flmul@b+1
  3344  0A1E  0843               	movf	??_scale+1,w
  3345  0A1F  00A4               	movwf	___flmul@b
  3346  0A20  084F               	movf	_scale$1252+3,w
  3347  0A21  00AB               	movwf	___flmul@a+3
  3348  0A22  084E               	movf	_scale$1252+2,w
  3349  0A23  00AA               	movwf	___flmul@a+2
  3350  0A24  084D               	movf	_scale$1252+1,w
  3351  0A25  00A9               	movwf	___flmul@a+1
  3352  0A26  084C               	movf	_scale$1252,w
  3353  0A27  00A8               	movwf	___flmul@a
  3354  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  3355  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  3356  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  3357  0A2F  0827               	movf	?___flmul+3,w
  3358  0A30  00C1               	movwf	?_scale+3
  3359  0A31  0826               	movf	?___flmul+2,w
  3360  0A32  00C0               	movwf	?_scale+2
  3361  0A33  0825               	movf	?___flmul+1,w
  3362  0A34  00BF               	movwf	?_scale+1
  3363  0A35  0824               	movf	?___flmul,w
  3364  0A36  00BE               	movwf	?_scale
  3365  0A37  2C9E               	goto	l297
  3366  0A38                     l2862:
  3367  0A38  0850               	movf	scale@scl,w
  3368  0A39  3A80               	xorlw	128
  3369  0A3A  3E75               	addlw	-139
  3370  0A3B  1C03               	skipc
  3371  0A3C  2A3E               	goto	u4211
  3372  0A3D  2A3F               	goto	u4210
  3373  0A3E                     u4211:
  3374  0A3E  2AC7               	goto	l2868
  3375  0A3F                     u4210:
  3376  0A3F                     l2864:
  3377                           
  3378                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3379  0A3F  300A               	movlw	10
  3380  0A40  00F0               	movwf	___awmod@divisor
  3381  0A41  3000               	movlw	0
  3382  0A42  00F1               	movwf	___awmod@divisor+1
  3383  0A43  0850               	movf	scale@scl,w
  3384  0A44  00F2               	movwf	___awmod@dividend
  3385  0A45  01F3               	clrf	___awmod@dividend+1
  3386  0A46  1BF2               	btfsc	___awmod@dividend,7
  3387  0A47  03F3               	decf	___awmod@dividend+1,f
  3388  0A48  160A  158A  2371  120A  158A  	fcall	___awmod
  3389  0A4D  0870               	movf	?___awmod,w
  3390  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  3391  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  3392  0A50  00C2               	movwf	??_scale
  3393  0A51  3001               	movlw	1
  3394  0A52                     u4225:
  3395  0A52  1003               	clrc
  3396  0A53  0DC2               	rlf	??_scale,f
  3397  0A54  3EFF               	addlw	-1
  3398  0A55  1D03               	skipz
  3399  0A56  2A52               	goto	u4225
  3400  0A57  1003               	clrc
  3401  0A58  0D42               	rlf	??_scale,w
  3402  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3403  0A5A  0084               	movwf	4
  3404  0A5B  120A  118A  200D  120A  158A  	fcall	stringdir
  3405  0A60  00C3               	movwf	??_scale+1
  3406  0A61  120A  118A  200D  120A  158A  	fcall	stringdir
  3407  0A66  00C4               	movwf	??_scale+2
  3408  0A67  120A  118A  200D  120A  158A  	fcall	stringdir
  3409  0A6C  00C5               	movwf	??_scale+3
  3410  0A6D  120A  118A  200D  120A  158A  	fcall	stringdir
  3411  0A72  00C6               	movwf	??_scale+4
  3412  0A73  0846               	movf	??_scale+4,w
  3413  0A74  00A7               	movwf	___flmul@b+3
  3414  0A75  0845               	movf	??_scale+3,w
  3415  0A76  00A6               	movwf	___flmul@b+2
  3416  0A77  0844               	movf	??_scale+2,w
  3417  0A78  00A5               	movwf	___flmul@b+1
  3418  0A79  0843               	movf	??_scale+1,w
  3419  0A7A  00A4               	movwf	___flmul@b
  3420  0A7B  300A               	movlw	10
  3421  0A7C  00F7               	movwf	___awdiv@divisor
  3422  0A7D  3000               	movlw	0
  3423  0A7E  00F8               	movwf	___awdiv@divisor+1
  3424  0A7F  0850               	movf	scale@scl,w
  3425  0A80  00F9               	movwf	___awdiv@dividend
  3426  0A81  01FA               	clrf	___awdiv@dividend+1
  3427  0A82  1BF9               	btfsc	___awdiv@dividend,7
  3428  0A83  03FA               	decf	___awdiv@dividend+1,f
  3429  0A84  160A  158A  2430  120A  158A  	fcall	___awdiv
  3430  0A89  0877               	movf	?___awdiv,w
  3431  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  3432  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  3433  0A8C  00C7               	movwf	??_scale+5
  3434  0A8D  3001               	movlw	1
  3435  0A8E                     u4235:
  3436  0A8E  1003               	clrc
  3437  0A8F  0DC7               	rlf	??_scale+5,f
  3438  0A90  3EFF               	addlw	-1
  3439  0A91  1D03               	skipz
  3440  0A92  2A8E               	goto	u4235
  3441  0A93  1003               	clrc
  3442  0A94  0D47               	rlf	??_scale+5,w
  3443  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3444  0A96  0084               	movwf	4
  3445  0A97  120A  118A  200D  120A  158A  	fcall	stringdir
  3446  0A9C  00C8               	movwf	??_scale+6
  3447  0A9D  120A  118A  200D  120A  158A  	fcall	stringdir
  3448  0AA2  00C9               	movwf	??_scale+7
  3449  0AA3  120A  118A  200D  120A  158A  	fcall	stringdir
  3450  0AA8  00CA               	movwf	??_scale+8
  3451  0AA9  120A  118A  200D  120A  158A  	fcall	stringdir
  3452  0AAE  00CB               	movwf	??_scale+9
  3453  0AAF  084B               	movf	??_scale+9,w
  3454  0AB0  00AB               	movwf	___flmul@a+3
  3455  0AB1  084A               	movf	??_scale+8,w
  3456  0AB2  00AA               	movwf	___flmul@a+2
  3457  0AB3  0849               	movf	??_scale+7,w
  3458  0AB4  00A9               	movwf	___flmul@a+1
  3459  0AB5  0848               	movf	??_scale+6,w
  3460  0AB6  00A8               	movwf	___flmul@a
  3461  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  3462  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3463  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3464  0ABE  0827               	movf	?___flmul+3,w
  3465  0ABF  00C1               	movwf	?_scale+3
  3466  0AC0  0826               	movf	?___flmul+2,w
  3467  0AC1  00C0               	movwf	?_scale+2
  3468  0AC2  0825               	movf	?___flmul+1,w
  3469  0AC3  00BF               	movwf	?_scale+1
  3470  0AC4  0824               	movf	?___flmul,w
  3471  0AC5  00BE               	movwf	?_scale
  3472  0AC6  2C9E               	goto	l297
  3473  0AC7                     l2868:
  3474                           
  3475                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3476  0AC7  0850               	movf	scale@scl,w
  3477  0AC8  00C2               	movwf	??_scale
  3478  0AC9  3001               	movlw	1
  3479  0ACA                     u4245:
  3480  0ACA  1003               	clrc
  3481  0ACB  0DC2               	rlf	??_scale,f
  3482  0ACC  3EFF               	addlw	-1
  3483  0ACD  1D03               	skipz
  3484  0ACE  2ACA               	goto	u4245
  3485  0ACF  1003               	clrc
  3486  0AD0  0D42               	rlf	??_scale,w
  3487  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3488  0AD2  0084               	movwf	4
  3489  0AD3  120A  118A  200D  120A  158A  	fcall	stringdir
  3490  0AD8  00C3               	movwf	??_scale+1
  3491  0AD9  120A  118A  200D  120A  158A  	fcall	stringdir
  3492  0ADE  00C4               	movwf	??_scale+2
  3493  0ADF  120A  118A  200D  120A  158A  	fcall	stringdir
  3494  0AE4  00C5               	movwf	??_scale+3
  3495  0AE5  120A  118A  200D  120A  158A  	fcall	stringdir
  3496  0AEA  00C6               	movwf	??_scale+4
  3497  0AEB  0846               	movf	??_scale+4,w
  3498  0AEC  00C1               	movwf	?_scale+3
  3499  0AED  0845               	movf	??_scale+3,w
  3500  0AEE  00C0               	movwf	?_scale+2
  3501  0AEF  0844               	movf	??_scale+2,w
  3502  0AF0  00BF               	movwf	?_scale+1
  3503  0AF1  0843               	movf	??_scale+1,w
  3504  0AF2  00BE               	movwf	?_scale
  3505  0AF3  2C9E               	goto	l297
  3506  0AF4                     l2872:
  3507                           
  3508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3509  0AF4  0850               	movf	scale@scl,w
  3510  0AF5  3A80               	xorlw	128
  3511  0AF6  3E12               	addlw	-238
  3512  0AF7  1C03               	skipc
  3513  0AF8  2AFA               	goto	u4251
  3514  0AF9  2AFB               	goto	u4250
  3515  0AFA                     u4251:
  3516  0AFA  2BE3               	goto	l2880
  3517  0AFB                     u4250:
  3518  0AFB                     l2874:
  3519                           
  3520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3521  0AFB  300A               	movlw	10
  3522  0AFC  00F7               	movwf	___awdiv@divisor
  3523  0AFD  3000               	movlw	0
  3524  0AFE  00F8               	movwf	___awdiv@divisor+1
  3525  0AFF  0850               	movf	scale@scl,w
  3526  0B00  00F2               	movwf	___awmod@dividend
  3527  0B01  01F3               	clrf	___awmod@dividend+1
  3528  0B02  1BF2               	btfsc	___awmod@dividend,7
  3529  0B03  03F3               	decf	___awmod@dividend+1,f
  3530  0B04  3064               	movlw	100
  3531  0B05  00F0               	movwf	___awmod@divisor
  3532  0B06  3000               	movlw	0
  3533  0B07  00F1               	movwf	___awmod@divisor+1
  3534  0B08  160A  158A  2371  120A  158A  	fcall	___awmod
  3535  0B0D  0871               	movf	?___awmod+1,w
  3536  0B0E  00FA               	movwf	___awdiv@dividend+1
  3537  0B0F  0870               	movf	?___awmod,w
  3538  0B10  00F9               	movwf	___awdiv@dividend
  3539  0B11  160A  158A  2430  120A  158A  	fcall	___awdiv
  3540  0B16  0877               	movf	?___awdiv,w
  3541  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3542  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  3543  0B19  00C2               	movwf	??_scale
  3544  0B1A  3001               	movlw	1
  3545  0B1B                     u4265:
  3546  0B1B  1003               	clrc
  3547  0B1C  0DC2               	rlf	??_scale,f
  3548  0B1D  3EFF               	addlw	-1
  3549  0B1E  1D03               	skipz
  3550  0B1F  2B1B               	goto	u4265
  3551  0B20  1003               	clrc
  3552  0B21  0D42               	rlf	??_scale,w
  3553  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3554  0B23  0084               	movwf	4
  3555  0B24  120A  118A  200D  120A  158A  	fcall	stringdir
  3556  0B29  00C3               	movwf	??_scale+1
  3557  0B2A  120A  118A  200D  120A  158A  	fcall	stringdir
  3558  0B2F  00C4               	movwf	??_scale+2
  3559  0B30  120A  118A  200D  120A  158A  	fcall	stringdir
  3560  0B35  00C5               	movwf	??_scale+3
  3561  0B36  120A  118A  200D  120A  158A  	fcall	stringdir
  3562  0B3B  00C6               	movwf	??_scale+4
  3563  0B3C  0846               	movf	??_scale+4,w
  3564  0B3D  00A7               	movwf	___flmul@b+3
  3565  0B3E  0845               	movf	??_scale+3,w
  3566  0B3F  00A6               	movwf	___flmul@b+2
  3567  0B40  0844               	movf	??_scale+2,w
  3568  0B41  00A5               	movwf	___flmul@b+1
  3569  0B42  0843               	movf	??_scale+1,w
  3570  0B43  00A4               	movwf	___flmul@b
  3571  0B44  3064               	movlw	100
  3572  0B45  00F7               	movwf	___awdiv@divisor
  3573  0B46  3000               	movlw	0
  3574  0B47  00F8               	movwf	___awdiv@divisor+1
  3575  0B48  0850               	movf	scale@scl,w
  3576  0B49  00F9               	movwf	___awdiv@dividend
  3577  0B4A  01FA               	clrf	___awdiv@dividend+1
  3578  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  3579  0B4C  03FA               	decf	___awdiv@dividend+1,f
  3580  0B4D  160A  158A  2430  120A  158A  	fcall	___awdiv
  3581  0B52  0877               	movf	?___awdiv,w
  3582  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  3583  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  3584  0B55  00C7               	movwf	??_scale+5
  3585  0B56  3001               	movlw	1
  3586  0B57                     u4275:
  3587  0B57  1003               	clrc
  3588  0B58  0DC7               	rlf	??_scale+5,f
  3589  0B59  3EFF               	addlw	-1
  3590  0B5A  1D03               	skipz
  3591  0B5B  2B57               	goto	u4275
  3592  0B5C  1003               	clrc
  3593  0B5D  0D47               	rlf	??_scale+5,w
  3594  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3595  0B5F  0084               	movwf	4
  3596  0B60  120A  118A  200D  120A  158A  	fcall	stringdir
  3597  0B65  00C8               	movwf	??_scale+6
  3598  0B66  120A  118A  200D  120A  158A  	fcall	stringdir
  3599  0B6B  00C9               	movwf	??_scale+7
  3600  0B6C  120A  118A  200D  120A  158A  	fcall	stringdir
  3601  0B71  00CA               	movwf	??_scale+8
  3602  0B72  120A  118A  200D  120A  158A  	fcall	stringdir
  3603  0B77  00CB               	movwf	??_scale+9
  3604  0B78  084B               	movf	??_scale+9,w
  3605  0B79  00AB               	movwf	___flmul@a+3
  3606  0B7A  084A               	movf	??_scale+8,w
  3607  0B7B  00AA               	movwf	___flmul@a+2
  3608  0B7C  0849               	movf	??_scale+7,w
  3609  0B7D  00A9               	movwf	___flmul@a+1
  3610  0B7E  0848               	movf	??_scale+6,w
  3611  0B7F  00A8               	movwf	___flmul@a
  3612  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  3613  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  3614  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  3615  0B87  0827               	movf	?___flmul+3,w
  3616  0B88  00CF               	movwf	_scale$1252+3
  3617  0B89  0826               	movf	?___flmul+2,w
  3618  0B8A  00CE               	movwf	_scale$1252+2
  3619  0B8B  0825               	movf	?___flmul+1,w
  3620  0B8C  00CD               	movwf	_scale$1252+1
  3621  0B8D  0824               	movf	?___flmul,w
  3622  0B8E  00CC               	movwf	_scale$1252
  3623                           
  3624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3625  0B8F  300A               	movlw	10
  3626  0B90  00F0               	movwf	___awmod@divisor
  3627  0B91  3000               	movlw	0
  3628  0B92  00F1               	movwf	___awmod@divisor+1
  3629  0B93  0850               	movf	scale@scl,w
  3630  0B94  00F2               	movwf	___awmod@dividend
  3631  0B95  01F3               	clrf	___awmod@dividend+1
  3632  0B96  1BF2               	btfsc	___awmod@dividend,7
  3633  0B97  03F3               	decf	___awmod@dividend+1,f
  3634  0B98  160A  158A  2371  120A  158A  	fcall	___awmod
  3635  0B9D  0870               	movf	?___awmod,w
  3636  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  3637  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  3638  0BA0  00C2               	movwf	??_scale
  3639  0BA1  3001               	movlw	1
  3640  0BA2                     u4285:
  3641  0BA2  1003               	clrc
  3642  0BA3  0DC2               	rlf	??_scale,f
  3643  0BA4  3EFF               	addlw	-1
  3644  0BA5  1D03               	skipz
  3645  0BA6  2BA2               	goto	u4285
  3646  0BA7  1003               	clrc
  3647  0BA8  0D42               	rlf	??_scale,w
  3648  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3649  0BAA  0084               	movwf	4
  3650  0BAB  120A  118A  200D  120A  158A  	fcall	stringdir
  3651  0BB0  00C3               	movwf	??_scale+1
  3652  0BB1  120A  118A  200D  120A  158A  	fcall	stringdir
  3653  0BB6  00C4               	movwf	??_scale+2
  3654  0BB7  120A  118A  200D  120A  158A  	fcall	stringdir
  3655  0BBC  00C5               	movwf	??_scale+3
  3656  0BBD  120A  118A  200D  120A  158A  	fcall	stringdir
  3657  0BC2  00C6               	movwf	??_scale+4
  3658  0BC3  0846               	movf	??_scale+4,w
  3659  0BC4  00A7               	movwf	___flmul@b+3
  3660  0BC5  0845               	movf	??_scale+3,w
  3661  0BC6  00A6               	movwf	___flmul@b+2
  3662  0BC7  0844               	movf	??_scale+2,w
  3663  0BC8  00A5               	movwf	___flmul@b+1
  3664  0BC9  0843               	movf	??_scale+1,w
  3665  0BCA  00A4               	movwf	___flmul@b
  3666  0BCB  084F               	movf	_scale$1252+3,w
  3667  0BCC  00AB               	movwf	___flmul@a+3
  3668  0BCD  084E               	movf	_scale$1252+2,w
  3669  0BCE  00AA               	movwf	___flmul@a+2
  3670  0BCF  084D               	movf	_scale$1252+1,w
  3671  0BD0  00A9               	movwf	___flmul@a+1
  3672  0BD1  084C               	movf	_scale$1252,w
  3673  0BD2  00A8               	movwf	___flmul@a
  3674  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  3675  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  3676  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  3677  0BDA  0827               	movf	?___flmul+3,w
  3678  0BDB  00C1               	movwf	?_scale+3
  3679  0BDC  0826               	movf	?___flmul+2,w
  3680  0BDD  00C0               	movwf	?_scale+2
  3681  0BDE  0825               	movf	?___flmul+1,w
  3682  0BDF  00BF               	movwf	?_scale+1
  3683  0BE0  0824               	movf	?___flmul,w
  3684  0BE1  00BE               	movwf	?_scale
  3685  0BE2  2C9E               	goto	l297
  3686  0BE3                     l2880:
  3687  0BE3  0850               	movf	scale@scl,w
  3688  0BE4  3A80               	xorlw	128
  3689  0BE5  3E75               	addlw	-139
  3690  0BE6  1C03               	skipc
  3691  0BE7  2BE9               	goto	u4291
  3692  0BE8  2BEA               	goto	u4290
  3693  0BE9                     u4291:
  3694  0BE9  2C72               	goto	l2886
  3695  0BEA                     u4290:
  3696  0BEA                     l2882:
  3697                           
  3698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3699  0BEA  300A               	movlw	10
  3700  0BEB  00F0               	movwf	___awmod@divisor
  3701  0BEC  3000               	movlw	0
  3702  0BED  00F1               	movwf	___awmod@divisor+1
  3703  0BEE  0850               	movf	scale@scl,w
  3704  0BEF  00F2               	movwf	___awmod@dividend
  3705  0BF0  01F3               	clrf	___awmod@dividend+1
  3706  0BF1  1BF2               	btfsc	___awmod@dividend,7
  3707  0BF2  03F3               	decf	___awmod@dividend+1,f
  3708  0BF3  160A  158A  2371  120A  158A  	fcall	___awmod
  3709  0BF8  0870               	movf	?___awmod,w
  3710  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  3711  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  3712  0BFB  00C2               	movwf	??_scale
  3713  0BFC  3001               	movlw	1
  3714  0BFD                     u4305:
  3715  0BFD  1003               	clrc
  3716  0BFE  0DC2               	rlf	??_scale,f
  3717  0BFF  3EFF               	addlw	-1
  3718  0C00  1D03               	skipz
  3719  0C01  2BFD               	goto	u4305
  3720  0C02  1003               	clrc
  3721  0C03  0D42               	rlf	??_scale,w
  3722  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3723  0C05  0084               	movwf	4
  3724  0C06  120A  118A  200D  120A  158A  	fcall	stringdir
  3725  0C0B  00C3               	movwf	??_scale+1
  3726  0C0C  120A  118A  200D  120A  158A  	fcall	stringdir
  3727  0C11  00C4               	movwf	??_scale+2
  3728  0C12  120A  118A  200D  120A  158A  	fcall	stringdir
  3729  0C17  00C5               	movwf	??_scale+3
  3730  0C18  120A  118A  200D  120A  158A  	fcall	stringdir
  3731  0C1D  00C6               	movwf	??_scale+4
  3732  0C1E  0846               	movf	??_scale+4,w
  3733  0C1F  00A7               	movwf	___flmul@b+3
  3734  0C20  0845               	movf	??_scale+3,w
  3735  0C21  00A6               	movwf	___flmul@b+2
  3736  0C22  0844               	movf	??_scale+2,w
  3737  0C23  00A5               	movwf	___flmul@b+1
  3738  0C24  0843               	movf	??_scale+1,w
  3739  0C25  00A4               	movwf	___flmul@b
  3740  0C26  300A               	movlw	10
  3741  0C27  00F7               	movwf	___awdiv@divisor
  3742  0C28  3000               	movlw	0
  3743  0C29  00F8               	movwf	___awdiv@divisor+1
  3744  0C2A  0850               	movf	scale@scl,w
  3745  0C2B  00F9               	movwf	___awdiv@dividend
  3746  0C2C  01FA               	clrf	___awdiv@dividend+1
  3747  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  3748  0C2E  03FA               	decf	___awdiv@dividend+1,f
  3749  0C2F  160A  158A  2430  120A  158A  	fcall	___awdiv
  3750  0C34  0877               	movf	?___awdiv,w
  3751  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  3752  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  3753  0C37  00C7               	movwf	??_scale+5
  3754  0C38  3001               	movlw	1
  3755  0C39                     u4315:
  3756  0C39  1003               	clrc
  3757  0C3A  0DC7               	rlf	??_scale+5,f
  3758  0C3B  3EFF               	addlw	-1
  3759  0C3C  1D03               	skipz
  3760  0C3D  2C39               	goto	u4315
  3761  0C3E  1003               	clrc
  3762  0C3F  0D47               	rlf	??_scale+5,w
  3763  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3764  0C41  0084               	movwf	4
  3765  0C42  120A  118A  200D  120A  158A  	fcall	stringdir
  3766  0C47  00C8               	movwf	??_scale+6
  3767  0C48  120A  118A  200D  120A  158A  	fcall	stringdir
  3768  0C4D  00C9               	movwf	??_scale+7
  3769  0C4E  120A  118A  200D  120A  158A  	fcall	stringdir
  3770  0C53  00CA               	movwf	??_scale+8
  3771  0C54  120A  118A  200D  120A  158A  	fcall	stringdir
  3772  0C59  00CB               	movwf	??_scale+9
  3773  0C5A  084B               	movf	??_scale+9,w
  3774  0C5B  00AB               	movwf	___flmul@a+3
  3775  0C5C  084A               	movf	??_scale+8,w
  3776  0C5D  00AA               	movwf	___flmul@a+2
  3777  0C5E  0849               	movf	??_scale+7,w
  3778  0C5F  00A9               	movwf	___flmul@a+1
  3779  0C60  0848               	movf	??_scale+6,w
  3780  0C61  00A8               	movwf	___flmul@a
  3781  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  3782  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  3783  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  3784  0C69  0827               	movf	?___flmul+3,w
  3785  0C6A  00C1               	movwf	?_scale+3
  3786  0C6B  0826               	movf	?___flmul+2,w
  3787  0C6C  00C0               	movwf	?_scale+2
  3788  0C6D  0825               	movf	?___flmul+1,w
  3789  0C6E  00BF               	movwf	?_scale+1
  3790  0C6F  0824               	movf	?___flmul,w
  3791  0C70  00BE               	movwf	?_scale
  3792  0C71  2C9E               	goto	l297
  3793  0C72                     l2886:
  3794                           
  3795                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3796  0C72  0850               	movf	scale@scl,w
  3797  0C73  00C2               	movwf	??_scale
  3798  0C74  3001               	movlw	1
  3799  0C75                     u4325:
  3800  0C75  1003               	clrc
  3801  0C76  0DC2               	rlf	??_scale,f
  3802  0C77  3EFF               	addlw	-1
  3803  0C78  1D03               	skipz
  3804  0C79  2C75               	goto	u4325
  3805  0C7A  1003               	clrc
  3806  0C7B  0D42               	rlf	??_scale,w
  3807  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3808  0C7D  0084               	movwf	4
  3809  0C7E  120A  118A  200D  120A  158A  	fcall	stringdir
  3810  0C83  00C3               	movwf	??_scale+1
  3811  0C84  120A  118A  200D  120A  158A  	fcall	stringdir
  3812  0C89  00C4               	movwf	??_scale+2
  3813  0C8A  120A  118A  200D  120A  158A  	fcall	stringdir
  3814  0C8F  00C5               	movwf	??_scale+3
  3815  0C90  120A  118A  200D  120A  158A  	fcall	stringdir
  3816  0C95  00C6               	movwf	??_scale+4
  3817  0C96  0846               	movf	??_scale+4,w
  3818  0C97  00C1               	movwf	?_scale+3
  3819  0C98  0845               	movf	??_scale+3,w
  3820  0C99  00C0               	movwf	?_scale+2
  3821  0C9A  0844               	movf	??_scale+2,w
  3822  0C9B  00BF               	movwf	?_scale+1
  3823  0C9C  0843               	movf	??_scale+1,w
  3824  0C9D  00BE               	movwf	?_scale
  3825  0C9E                     l297:
  3826  0C9E  0008               	return
  3827  0C9F                     __end_of_scale:
  3828                           
  3829                           	psect	text4
  3830  1B71                     __ptext4:	
  3831 ;; *************** function ___awmod *****************
  3832 ;; Defined at:
  3833 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3834 ;; Parameters:    Size  Location     Type
  3835 ;;  divisor         2    0[COMMON] int 
  3836 ;;  dividend        2    2[COMMON] int 
  3837 ;; Auto vars:     Size  Location     Type
  3838 ;;  sign            1    6[COMMON] unsigned char 
  3839 ;;  counter         1    5[COMMON] unsigned char 
  3840 ;; Return value:  Size  Location     Type
  3841 ;;                  2    0[COMMON] int 
  3842 ;; Registers used:
  3843 ;;		wreg, status,2, status,0
  3844 ;; Tracked objects:
  3845 ;;		On entry : 0/0
  3846 ;;		On exit  : 0/0
  3847 ;;		Unchanged: 0/0
  3848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3849 ;;      Params:         4       0       0       0       0
  3850 ;;      Locals:         2       0       0       0       0
  3851 ;;      Temps:          1       0       0       0       0
  3852 ;;      Totals:         7       0       0       0       0
  3853 ;;Total ram usage:        7 bytes
  3854 ;; Hardware stack levels used:    1
  3855 ;; This function calls:
  3856 ;;		Nothing
  3857 ;; This function is called by:
  3858 ;;		_scale
  3859 ;; This function uses a non-reentrant model
  3860 ;;
  3861                           
  3862                           
  3863                           ;psect for function ___awmod
  3864  1B71                     ___awmod:
  3865  1B71                     l2388:	
  3866                           ;incstack = 0
  3867                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3868                           
  3869  1B71  01F6               	clrf	___awmod@sign
  3870  1B72                     l2390:
  3871  1B72  1FF3               	btfss	___awmod@dividend+1,7
  3872  1B73  2B75               	goto	u3021
  3873  1B74  2B76               	goto	u3020
  3874  1B75                     u3021:
  3875  1B75  2B7D               	goto	l2396
  3876  1B76                     u3020:
  3877  1B76                     l2392:
  3878  1B76  09F2               	comf	___awmod@dividend,f
  3879  1B77  09F3               	comf	___awmod@dividend+1,f
  3880  1B78  0AF2               	incf	___awmod@dividend,f
  3881  1B79  1903               	skipnz
  3882  1B7A  0AF3               	incf	___awmod@dividend+1,f
  3883  1B7B                     l2394:
  3884  1B7B  01F6               	clrf	___awmod@sign
  3885  1B7C  0AF6               	incf	___awmod@sign,f
  3886  1B7D                     l2396:
  3887  1B7D  1FF1               	btfss	___awmod@divisor+1,7
  3888  1B7E  2B80               	goto	u3031
  3889  1B7F  2B81               	goto	u3030
  3890  1B80                     u3031:
  3891  1B80  2B86               	goto	l2400
  3892  1B81                     u3030:
  3893  1B81                     l2398:
  3894  1B81  09F0               	comf	___awmod@divisor,f
  3895  1B82  09F1               	comf	___awmod@divisor+1,f
  3896  1B83  0AF0               	incf	___awmod@divisor,f
  3897  1B84  1903               	skipnz
  3898  1B85  0AF1               	incf	___awmod@divisor+1,f
  3899  1B86                     l2400:
  3900  1B86  0870               	movf	___awmod@divisor,w
  3901  1B87  0471               	iorwf	___awmod@divisor+1,w
  3902  1B88  1903               	btfsc	3,2
  3903  1B89  2B8B               	goto	u3041
  3904  1B8A  2B8C               	goto	u3040
  3905  1B8B                     u3041:
  3906  1B8B  2BBB               	goto	l2418
  3907  1B8C                     u3040:
  3908  1B8C                     l2402:
  3909  1B8C  01F5               	clrf	___awmod@counter
  3910  1B8D  0AF5               	incf	___awmod@counter,f
  3911  1B8E  2B9A               	goto	l2408
  3912  1B8F                     l2404:
  3913  1B8F  3001               	movlw	1
  3914  1B90                     u3055:
  3915  1B90  1003               	clrc
  3916  1B91  0DF0               	rlf	___awmod@divisor,f
  3917  1B92  0DF1               	rlf	___awmod@divisor+1,f
  3918  1B93  3EFF               	addlw	-1
  3919  1B94  1D03               	skipz
  3920  1B95  2B90               	goto	u3055
  3921  1B96                     l2406:
  3922  1B96  3001               	movlw	1
  3923  1B97  00F4               	movwf	??___awmod
  3924  1B98  0874               	movf	??___awmod,w
  3925  1B99  07F5               	addwf	___awmod@counter,f
  3926  1B9A                     l2408:
  3927  1B9A  1FF1               	btfss	___awmod@divisor+1,7
  3928  1B9B  2B9D               	goto	u3061
  3929  1B9C  2B9E               	goto	u3060
  3930  1B9D                     u3061:
  3931  1B9D  2B8F               	goto	l2404
  3932  1B9E                     u3060:
  3933  1B9E                     l2410:
  3934  1B9E  0871               	movf	___awmod@divisor+1,w
  3935  1B9F  0273               	subwf	___awmod@dividend+1,w
  3936  1BA0  1D03               	skipz
  3937  1BA1  2BA4               	goto	u3075
  3938  1BA2  0870               	movf	___awmod@divisor,w
  3939  1BA3  0272               	subwf	___awmod@dividend,w
  3940  1BA4                     u3075:
  3941  1BA4  1C03               	skipc
  3942  1BA5  2BA7               	goto	u3071
  3943  1BA6  2BA8               	goto	u3070
  3944  1BA7                     u3071:
  3945  1BA7  2BAE               	goto	l2414
  3946  1BA8                     u3070:
  3947  1BA8                     l2412:
  3948  1BA8  0870               	movf	___awmod@divisor,w
  3949  1BA9  02F2               	subwf	___awmod@dividend,f
  3950  1BAA  0871               	movf	___awmod@divisor+1,w
  3951  1BAB  1C03               	skipc
  3952  1BAC  03F3               	decf	___awmod@dividend+1,f
  3953  1BAD  02F3               	subwf	___awmod@dividend+1,f
  3954  1BAE                     l2414:
  3955  1BAE  3001               	movlw	1
  3956  1BAF                     u3085:
  3957  1BAF  1003               	clrc
  3958  1BB0  0CF1               	rrf	___awmod@divisor+1,f
  3959  1BB1  0CF0               	rrf	___awmod@divisor,f
  3960  1BB2  3EFF               	addlw	-1
  3961  1BB3  1D03               	skipz
  3962  1BB4  2BAF               	goto	u3085
  3963  1BB5                     l2416:
  3964  1BB5  3001               	movlw	1
  3965  1BB6  02F5               	subwf	___awmod@counter,f
  3966  1BB7  1D03               	btfss	3,2
  3967  1BB8  2BBA               	goto	u3091
  3968  1BB9  2BBB               	goto	u3090
  3969  1BBA                     u3091:
  3970  1BBA  2B9E               	goto	l2410
  3971  1BBB                     u3090:
  3972  1BBB                     l2418:
  3973  1BBB  0876               	movf	___awmod@sign,w
  3974  1BBC  1903               	btfsc	3,2
  3975  1BBD  2BBF               	goto	u3101
  3976  1BBE  2BC0               	goto	u3100
  3977  1BBF                     u3101:
  3978  1BBF  2BC5               	goto	l2422
  3979  1BC0                     u3100:
  3980  1BC0                     l2420:
  3981  1BC0  09F2               	comf	___awmod@dividend,f
  3982  1BC1  09F3               	comf	___awmod@dividend+1,f
  3983  1BC2  0AF2               	incf	___awmod@dividend,f
  3984  1BC3  1903               	skipnz
  3985  1BC4  0AF3               	incf	___awmod@dividend+1,f
  3986  1BC5                     l2422:
  3987  1BC5  0873               	movf	___awmod@dividend+1,w
  3988  1BC6  00F1               	movwf	?___awmod+1
  3989  1BC7  0872               	movf	___awmod@dividend,w
  3990  1BC8  00F0               	movwf	?___awmod
  3991  1BC9                     l559:
  3992  1BC9  0008               	return
  3993  1BCA                     __end_of___awmod:
  3994                           
  3995                           	psect	text5
  3996  1C30                     __ptext5:	
  3997 ;; *************** function ___awdiv *****************
  3998 ;; Defined at:
  3999 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4000 ;; Parameters:    Size  Location     Type
  4001 ;;  divisor         2    7[COMMON] int 
  4002 ;;  dividend        2    9[COMMON] int 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;  quotient        2    2[BANK0 ] int 
  4005 ;;  sign            1    1[BANK0 ] unsigned char 
  4006 ;;  counter         1    0[BANK0 ] unsigned char 
  4007 ;; Return value:  Size  Location     Type
  4008 ;;                  2    7[COMMON] int 
  4009 ;; Registers used:
  4010 ;;		wreg, status,2, status,0
  4011 ;; Tracked objects:
  4012 ;;		On entry : 0/0
  4013 ;;		On exit  : 0/0
  4014 ;;		Unchanged: 0/0
  4015 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4016 ;;      Params:         4       0       0       0       0
  4017 ;;      Locals:         0       4       0       0       0
  4018 ;;      Temps:          1       0       0       0       0
  4019 ;;      Totals:         5       4       0       0       0
  4020 ;;Total ram usage:        9 bytes
  4021 ;; Hardware stack levels used:    1
  4022 ;; This function calls:
  4023 ;;		Nothing
  4024 ;; This function is called by:
  4025 ;;		_scale
  4026 ;;		_sprintf
  4027 ;; This function uses a non-reentrant model
  4028 ;;
  4029                           
  4030                           
  4031                           ;psect for function ___awdiv
  4032  1C30                     ___awdiv:
  4033  1C30                     l2344:	
  4034                           ;incstack = 0
  4035                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4036                           
  4037  1C30  1283               	bcf	3,5	;RP0=0, select bank0
  4038  1C31  1303               	bcf	3,6	;RP1=0, select bank0
  4039  1C32  01A1               	clrf	___awdiv@sign
  4040  1C33                     l2346:
  4041  1C33  1FF8               	btfss	___awdiv@divisor+1,7
  4042  1C34  2C36               	goto	u2921
  4043  1C35  2C37               	goto	u2920
  4044  1C36                     u2921:
  4045  1C36  2C3E               	goto	l2352
  4046  1C37                     u2920:
  4047  1C37                     l2348:
  4048  1C37  09F7               	comf	___awdiv@divisor,f
  4049  1C38  09F8               	comf	___awdiv@divisor+1,f
  4050  1C39  0AF7               	incf	___awdiv@divisor,f
  4051  1C3A  1903               	skipnz
  4052  1C3B  0AF8               	incf	___awdiv@divisor+1,f
  4053  1C3C                     l2350:
  4054  1C3C  01A1               	clrf	___awdiv@sign
  4055  1C3D  0AA1               	incf	___awdiv@sign,f
  4056  1C3E                     l2352:
  4057  1C3E  1FFA               	btfss	___awdiv@dividend+1,7
  4058  1C3F  2C41               	goto	u2931
  4059  1C40  2C42               	goto	u2930
  4060  1C41                     u2931:
  4061  1C41  2C4B               	goto	l2358
  4062  1C42                     u2930:
  4063  1C42                     l2354:
  4064  1C42  09F9               	comf	___awdiv@dividend,f
  4065  1C43  09FA               	comf	___awdiv@dividend+1,f
  4066  1C44  0AF9               	incf	___awdiv@dividend,f
  4067  1C45  1903               	skipnz
  4068  1C46  0AFA               	incf	___awdiv@dividend+1,f
  4069  1C47                     l2356:
  4070  1C47  3001               	movlw	1
  4071  1C48  00FB               	movwf	??___awdiv
  4072  1C49  087B               	movf	??___awdiv,w
  4073  1C4A  06A1               	xorwf	___awdiv@sign,f
  4074  1C4B                     l2358:
  4075  1C4B  01A2               	clrf	___awdiv@quotient
  4076  1C4C  01A3               	clrf	___awdiv@quotient+1
  4077  1C4D                     l2360:
  4078  1C4D  0877               	movf	___awdiv@divisor,w
  4079  1C4E  0478               	iorwf	___awdiv@divisor+1,w
  4080  1C4F  1903               	btfsc	3,2
  4081  1C50  2C52               	goto	u2941
  4082  1C51  2C53               	goto	u2940
  4083  1C52                     u2941:
  4084  1C52  2C8A               	goto	l2380
  4085  1C53                     u2940:
  4086  1C53                     l2362:
  4087  1C53  01A0               	clrf	___awdiv@counter
  4088  1C54  0AA0               	incf	___awdiv@counter,f
  4089  1C55  2C61               	goto	l2368
  4090  1C56                     l2364:
  4091  1C56  3001               	movlw	1
  4092  1C57                     u2955:
  4093  1C57  1003               	clrc
  4094  1C58  0DF7               	rlf	___awdiv@divisor,f
  4095  1C59  0DF8               	rlf	___awdiv@divisor+1,f
  4096  1C5A  3EFF               	addlw	-1
  4097  1C5B  1D03               	skipz
  4098  1C5C  2C57               	goto	u2955
  4099  1C5D                     l2366:
  4100  1C5D  3001               	movlw	1
  4101  1C5E  00FB               	movwf	??___awdiv
  4102  1C5F  087B               	movf	??___awdiv,w
  4103  1C60  07A0               	addwf	___awdiv@counter,f
  4104  1C61                     l2368:
  4105  1C61  1FF8               	btfss	___awdiv@divisor+1,7
  4106  1C62  2C64               	goto	u2961
  4107  1C63  2C65               	goto	u2960
  4108  1C64                     u2961:
  4109  1C64  2C56               	goto	l2364
  4110  1C65                     u2960:
  4111  1C65                     l2370:
  4112  1C65  3001               	movlw	1
  4113  1C66                     u2975:
  4114  1C66  1003               	clrc
  4115  1C67  0DA2               	rlf	___awdiv@quotient,f
  4116  1C68  0DA3               	rlf	___awdiv@quotient+1,f
  4117  1C69  3EFF               	addlw	-1
  4118  1C6A  1D03               	skipz
  4119  1C6B  2C66               	goto	u2975
  4120  1C6C  0878               	movf	___awdiv@divisor+1,w
  4121  1C6D  027A               	subwf	___awdiv@dividend+1,w
  4122  1C6E  1D03               	skipz
  4123  1C6F  2C72               	goto	u2985
  4124  1C70  0877               	movf	___awdiv@divisor,w
  4125  1C71  0279               	subwf	___awdiv@dividend,w
  4126  1C72                     u2985:
  4127  1C72  1C03               	skipc
  4128  1C73  2C75               	goto	u2981
  4129  1C74  2C76               	goto	u2980
  4130  1C75                     u2981:
  4131  1C75  2C7D               	goto	l2376
  4132  1C76                     u2980:
  4133  1C76                     l2372:
  4134  1C76  0877               	movf	___awdiv@divisor,w
  4135  1C77  02F9               	subwf	___awdiv@dividend,f
  4136  1C78  0878               	movf	___awdiv@divisor+1,w
  4137  1C79  1C03               	skipc
  4138  1C7A  03FA               	decf	___awdiv@dividend+1,f
  4139  1C7B  02FA               	subwf	___awdiv@dividend+1,f
  4140  1C7C                     l2374:
  4141  1C7C  1422               	bsf	___awdiv@quotient,0
  4142  1C7D                     l2376:
  4143  1C7D  3001               	movlw	1
  4144  1C7E                     u2995:
  4145  1C7E  1003               	clrc
  4146  1C7F  0CF8               	rrf	___awdiv@divisor+1,f
  4147  1C80  0CF7               	rrf	___awdiv@divisor,f
  4148  1C81  3EFF               	addlw	-1
  4149  1C82  1D03               	skipz
  4150  1C83  2C7E               	goto	u2995
  4151  1C84                     l2378:
  4152  1C84  3001               	movlw	1
  4153  1C85  02A0               	subwf	___awdiv@counter,f
  4154  1C86  1D03               	btfss	3,2
  4155  1C87  2C89               	goto	u3001
  4156  1C88  2C8A               	goto	u3000
  4157  1C89                     u3001:
  4158  1C89  2C65               	goto	l2370
  4159  1C8A                     u3000:
  4160  1C8A                     l2380:
  4161  1C8A  0821               	movf	___awdiv@sign,w
  4162  1C8B  1903               	btfsc	3,2
  4163  1C8C  2C8E               	goto	u3011
  4164  1C8D  2C8F               	goto	u3010
  4165  1C8E                     u3011:
  4166  1C8E  2C94               	goto	l2384
  4167  1C8F                     u3010:
  4168  1C8F                     l2382:
  4169  1C8F  09A2               	comf	___awdiv@quotient,f
  4170  1C90  09A3               	comf	___awdiv@quotient+1,f
  4171  1C91  0AA2               	incf	___awdiv@quotient,f
  4172  1C92  1903               	skipnz
  4173  1C93  0AA3               	incf	___awdiv@quotient+1,f
  4174  1C94                     l2384:
  4175  1C94  0823               	movf	___awdiv@quotient+1,w
  4176  1C95  00F8               	movwf	?___awdiv+1
  4177  1C96  0822               	movf	___awdiv@quotient,w
  4178  1C97  00F7               	movwf	?___awdiv
  4179  1C98                     l546:
  4180  1C98  0008               	return
  4181  1C99                     __end_of___awdiv:
  4182                           
  4183                           	psect	text6
  4184  18D9                     __ptext6:	
  4185 ;; *************** function _isdigit *****************
  4186 ;; Defined at:
  4187 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4188 ;; Parameters:    Size  Location     Type
  4189 ;;  c               1    wreg     unsigned char 
  4190 ;; Auto vars:     Size  Location     Type
  4191 ;;  c               1    1[COMMON] unsigned char 
  4192 ;; Return value:  Size  Location     Type
  4193 ;;		None               void
  4194 ;; Registers used:
  4195 ;;		wreg, status,2, status,0
  4196 ;; Tracked objects:
  4197 ;;		On entry : 0/0
  4198 ;;		On exit  : 0/0
  4199 ;;		Unchanged: 0/0
  4200 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4201 ;;      Params:         0       0       0       0       0
  4202 ;;      Locals:         2       0       0       0       0
  4203 ;;      Temps:          0       0       0       0       0
  4204 ;;      Totals:         2       0       0       0       0
  4205 ;;Total ram usage:        2 bytes
  4206 ;; Hardware stack levels used:    1
  4207 ;; This function calls:
  4208 ;;		Nothing
  4209 ;; This function is called by:
  4210 ;;		_sprintf
  4211 ;; This function uses a non-reentrant model
  4212 ;;
  4213                           
  4214                           
  4215                           ;psect for function _isdigit
  4216  18D9                     _isdigit:
  4217                           
  4218                           ;incstack = 0
  4219                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4220                           ;isdigit@c stored from wreg
  4221  18D9  00F1               	movwf	isdigit@c
  4222  18DA                     l2890:
  4223  18DA  01F0               	clrf	_isdigit$1057
  4224  18DB                     l2892:
  4225  18DB  303A               	movlw	58
  4226  18DC  0271               	subwf	isdigit@c,w
  4227  18DD  1803               	skipnc
  4228  18DE  28E0               	goto	u4331
  4229  18DF  28E1               	goto	u4330
  4230  18E0                     u4331:
  4231  18E0  28E9               	goto	l2898
  4232  18E1                     u4330:
  4233  18E1                     l2894:
  4234  18E1  3030               	movlw	48
  4235  18E2  0271               	subwf	isdigit@c,w
  4236  18E3  1C03               	skipc
  4237  18E4  28E6               	goto	u4341
  4238  18E5  28E7               	goto	u4340
  4239  18E6                     u4341:
  4240  18E6  28E9               	goto	l2898
  4241  18E7                     u4340:
  4242  18E7                     l2896:
  4243  18E7  01F0               	clrf	_isdigit$1057
  4244  18E8  0AF0               	incf	_isdigit$1057,f
  4245  18E9                     l2898:
  4246  18E9  0C70               	rrf	_isdigit$1057,w
  4247  18EA                     l880:
  4248  18EA  0008               	return
  4249  18EB                     __end_of_isdigit:
  4250                           
  4251                           	psect	text7
  4252  1DF5                     __ptext7:	
  4253 ;; *************** function _fround *****************
  4254 ;; Defined at:
  4255 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;  prec            1    wreg     unsigned char 
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  prec            1   49[BANK0 ] unsigned char 
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  4   30[BANK0 ] unsigned char 
  4262 ;; Registers used:
  4263 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4269 ;;      Params:         0       4       0       0       0
  4270 ;;      Locals:         0       9       0       0       0
  4271 ;;      Temps:          0       7       0       0       0
  4272 ;;      Totals:         0      20       0       0       0
  4273 ;;Total ram usage:       20 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    2
  4276 ;; This function calls:
  4277 ;;		___flmul
  4278 ;;		___lwdiv
  4279 ;;		___lwmod
  4280 ;; This function is called by:
  4281 ;;		_sprintf
  4282 ;; This function uses a non-reentrant model
  4283 ;;
  4284                           
  4285                           
  4286                           ;psect for function _fround
  4287  1DF5                     _fround:
  4288                           
  4289                           ;incstack = 0
  4290                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4291                           ;fround@prec stored from wreg
  4292  1DF5  1283               	bcf	3,5	;RP0=0, select bank0
  4293  1DF6  1303               	bcf	3,6	;RP1=0, select bank0
  4294  1DF7  00D1               	movwf	fround@prec
  4295  1DF8                     l2832:
  4296                           
  4297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4298  1DF8  306E               	movlw	110
  4299  1DF9  0251               	subwf	fround@prec,w
  4300  1DFA  1C03               	skipc
  4301  1DFB  2DFD               	goto	u4081
  4302  1DFC  2DFE               	goto	u4080
  4303  1DFD                     u4081:
  4304  1DFD  2F0B               	goto	l2840
  4305  1DFE                     u4080:
  4306  1DFE                     l2834:
  4307                           
  4308                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4309  1DFE  303F               	movlw	63
  4310  1DFF  00A7               	movwf	___flmul@b+3
  4311  1E00  3000               	movlw	0
  4312  1E01  00A6               	movwf	___flmul@b+2
  4313  1E02  3000               	movlw	0
  4314  1E03  00A5               	movwf	___flmul@b+1
  4315  1E04  3000               	movlw	0
  4316  1E05  00A4               	movwf	___flmul@b
  4317  1E06  3064               	movlw	100
  4318  1E07  00F6               	movwf	___lwdiv@divisor
  4319  1E08  3000               	movlw	0
  4320  1E09  00F7               	movwf	___lwdiv@divisor+1
  4321  1E0A  0851               	movf	fround@prec,w
  4322  1E0B  00C2               	movwf	??_fround
  4323  1E0C  01C3               	clrf	??_fround+1
  4324  1E0D  0842               	movf	??_fround,w
  4325  1E0E  00F8               	movwf	___lwdiv@dividend
  4326  1E0F  0843               	movf	??_fround+1,w
  4327  1E10  00F9               	movwf	___lwdiv@dividend+1
  4328  1E11  160A  158A  2289  160A  158A  	fcall	___lwdiv
  4329  1E16  0876               	movf	?___lwdiv,w
  4330  1E17  1283               	bcf	3,5	;RP0=0, select bank0
  4331  1E18  1303               	bcf	3,6	;RP1=0, select bank0
  4332  1E19  00C4               	movwf	??_fround+2
  4333  1E1A  3001               	movlw	1
  4334  1E1B                     u4095:
  4335  1E1B  1003               	clrc
  4336  1E1C  0DC4               	rlf	??_fround+2,f
  4337  1E1D  3EFF               	addlw	-1
  4338  1E1E  1D03               	skipz
  4339  1E1F  2E1B               	goto	u4095
  4340  1E20  1003               	clrc
  4341  1E21  0D44               	rlf	??_fround+2,w
  4342  1E22  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4343  1E23  0084               	movwf	4
  4344  1E24  120A  118A  200D  160A  158A  	fcall	stringdir
  4345  1E29  00C5               	movwf	??_fround+3
  4346  1E2A  120A  118A  200D  160A  158A  	fcall	stringdir
  4347  1E2F  00C6               	movwf	??_fround+4
  4348  1E30  120A  118A  200D  160A  158A  	fcall	stringdir
  4349  1E35  00C7               	movwf	??_fround+5
  4350  1E36  120A  118A  200D  160A  158A  	fcall	stringdir
  4351  1E3B  00C8               	movwf	??_fround+6
  4352  1E3C  0848               	movf	??_fround+6,w
  4353  1E3D  00AB               	movwf	___flmul@a+3
  4354  1E3E  0847               	movf	??_fround+5,w
  4355  1E3F  00AA               	movwf	___flmul@a+2
  4356  1E40  0846               	movf	??_fround+4,w
  4357  1E41  00A9               	movwf	___flmul@a+1
  4358  1E42  0845               	movf	??_fround+3,w
  4359  1E43  00A8               	movwf	___flmul@a
  4360  1E44  120A  158A  249F  160A  158A  	fcall	___flmul
  4361  1E49  1283               	bcf	3,5	;RP0=0, select bank0
  4362  1E4A  1303               	bcf	3,6	;RP1=0, select bank0
  4363  1E4B  0827               	movf	?___flmul+3,w
  4364  1E4C  00D0               	movwf	_fround$1250+3
  4365  1E4D  0826               	movf	?___flmul+2,w
  4366  1E4E  00CF               	movwf	_fround$1250+2
  4367  1E4F  0825               	movf	?___flmul+1,w
  4368  1E50  00CE               	movwf	_fround$1250+1
  4369  1E51  0824               	movf	?___flmul,w
  4370  1E52  00CD               	movwf	_fround$1250
  4371                           
  4372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4373  1E53  300A               	movlw	10
  4374  1E54  00F6               	movwf	___lwdiv@divisor
  4375  1E55  3000               	movlw	0
  4376  1E56  00F7               	movwf	___lwdiv@divisor+1
  4377  1E57  0851               	movf	fround@prec,w
  4378  1E58  00C2               	movwf	??_fround
  4379  1E59  01C3               	clrf	??_fround+1
  4380  1E5A  0842               	movf	??_fround,w
  4381  1E5B  00F2               	movwf	___lwmod@dividend
  4382  1E5C  0843               	movf	??_fround+1,w
  4383  1E5D  00F3               	movwf	___lwmod@dividend+1
  4384  1E5E  3064               	movlw	100
  4385  1E5F  00F0               	movwf	___lwmod@divisor
  4386  1E60  3000               	movlw	0
  4387  1E61  00F1               	movwf	___lwmod@divisor+1
  4388  1E62  160A  158A  21CC  160A  158A  	fcall	___lwmod
  4389  1E67  0871               	movf	?___lwmod+1,w
  4390  1E68  00F9               	movwf	___lwdiv@dividend+1
  4391  1E69  0870               	movf	?___lwmod,w
  4392  1E6A  00F8               	movwf	___lwdiv@dividend
  4393  1E6B  160A  158A  2289  160A  158A  	fcall	___lwdiv
  4394  1E70  0876               	movf	?___lwdiv,w
  4395  1E71  1283               	bcf	3,5	;RP0=0, select bank0
  4396  1E72  1303               	bcf	3,6	;RP1=0, select bank0
  4397  1E73  00C4               	movwf	??_fround+2
  4398  1E74  3001               	movlw	1
  4399  1E75                     u4105:
  4400  1E75  1003               	clrc
  4401  1E76  0DC4               	rlf	??_fround+2,f
  4402  1E77  3EFF               	addlw	-1
  4403  1E78  1D03               	skipz
  4404  1E79  2E75               	goto	u4105
  4405  1E7A  1003               	clrc
  4406  1E7B  0D44               	rlf	??_fround+2,w
  4407  1E7C  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4408  1E7D  0084               	movwf	4
  4409  1E7E  120A  118A  200D  160A  158A  	fcall	stringdir
  4410  1E83  00C5               	movwf	??_fround+3
  4411  1E84  120A  118A  200D  160A  158A  	fcall	stringdir
  4412  1E89  00C6               	movwf	??_fround+4
  4413  1E8A  120A  118A  200D  160A  158A  	fcall	stringdir
  4414  1E8F  00C7               	movwf	??_fround+5
  4415  1E90  120A  118A  200D  160A  158A  	fcall	stringdir
  4416  1E95  00C8               	movwf	??_fround+6
  4417  1E96  0848               	movf	??_fround+6,w
  4418  1E97  00A7               	movwf	___flmul@b+3
  4419  1E98  0847               	movf	??_fround+5,w
  4420  1E99  00A6               	movwf	___flmul@b+2
  4421  1E9A  0846               	movf	??_fround+4,w
  4422  1E9B  00A5               	movwf	___flmul@b+1
  4423  1E9C  0845               	movf	??_fround+3,w
  4424  1E9D  00A4               	movwf	___flmul@b
  4425  1E9E  0850               	movf	_fround$1250+3,w
  4426  1E9F  00AB               	movwf	___flmul@a+3
  4427  1EA0  084F               	movf	_fround$1250+2,w
  4428  1EA1  00AA               	movwf	___flmul@a+2
  4429  1EA2  084E               	movf	_fround$1250+1,w
  4430  1EA3  00A9               	movwf	___flmul@a+1
  4431  1EA4  084D               	movf	_fround$1250,w
  4432  1EA5  00A8               	movwf	___flmul@a
  4433  1EA6  120A  158A  249F  160A  158A  	fcall	___flmul
  4434  1EAB  1283               	bcf	3,5	;RP0=0, select bank0
  4435  1EAC  1303               	bcf	3,6	;RP1=0, select bank0
  4436  1EAD  0827               	movf	?___flmul+3,w
  4437  1EAE  00CC               	movwf	_fround$1251+3
  4438  1EAF  0826               	movf	?___flmul+2,w
  4439  1EB0  00CB               	movwf	_fround$1251+2
  4440  1EB1  0825               	movf	?___flmul+1,w
  4441  1EB2  00CA               	movwf	_fround$1251+1
  4442  1EB3  0824               	movf	?___flmul,w
  4443  1EB4  00C9               	movwf	_fround$1251
  4444                           
  4445                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4446  1EB5  300A               	movlw	10
  4447  1EB6  00F0               	movwf	___lwmod@divisor
  4448  1EB7  3000               	movlw	0
  4449  1EB8  00F1               	movwf	___lwmod@divisor+1
  4450  1EB9  0851               	movf	fround@prec,w
  4451  1EBA  00C2               	movwf	??_fround
  4452  1EBB  01C3               	clrf	??_fround+1
  4453  1EBC  0842               	movf	??_fround,w
  4454  1EBD  00F2               	movwf	___lwmod@dividend
  4455  1EBE  0843               	movf	??_fround+1,w
  4456  1EBF  00F3               	movwf	___lwmod@dividend+1
  4457  1EC0  160A  158A  21CC  160A  158A  	fcall	___lwmod
  4458  1EC5  0870               	movf	?___lwmod,w
  4459  1EC6  1283               	bcf	3,5	;RP0=0, select bank0
  4460  1EC7  1303               	bcf	3,6	;RP1=0, select bank0
  4461  1EC8  00C4               	movwf	??_fround+2
  4462  1EC9  3001               	movlw	1
  4463  1ECA                     u4115:
  4464  1ECA  1003               	clrc
  4465  1ECB  0DC4               	rlf	??_fround+2,f
  4466  1ECC  3EFF               	addlw	-1
  4467  1ECD  1D03               	skipz
  4468  1ECE  2ECA               	goto	u4115
  4469  1ECF  1003               	clrc
  4470  1ED0  0D44               	rlf	??_fround+2,w
  4471  1ED1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4472  1ED2  0084               	movwf	4
  4473  1ED3  120A  118A  200D  160A  158A  	fcall	stringdir
  4474  1ED8  00C5               	movwf	??_fround+3
  4475  1ED9  120A  118A  200D  160A  158A  	fcall	stringdir
  4476  1EDE  00C6               	movwf	??_fround+4
  4477  1EDF  120A  118A  200D  160A  158A  	fcall	stringdir
  4478  1EE4  00C7               	movwf	??_fround+5
  4479  1EE5  120A  118A  200D  160A  158A  	fcall	stringdir
  4480  1EEA  00C8               	movwf	??_fround+6
  4481  1EEB  0848               	movf	??_fround+6,w
  4482  1EEC  00A7               	movwf	___flmul@b+3
  4483  1EED  0847               	movf	??_fround+5,w
  4484  1EEE  00A6               	movwf	___flmul@b+2
  4485  1EEF  0846               	movf	??_fround+4,w
  4486  1EF0  00A5               	movwf	___flmul@b+1
  4487  1EF1  0845               	movf	??_fround+3,w
  4488  1EF2  00A4               	movwf	___flmul@b
  4489  1EF3  084C               	movf	_fround$1251+3,w
  4490  1EF4  00AB               	movwf	___flmul@a+3
  4491  1EF5  084B               	movf	_fround$1251+2,w
  4492  1EF6  00AA               	movwf	___flmul@a+2
  4493  1EF7  084A               	movf	_fround$1251+1,w
  4494  1EF8  00A9               	movwf	___flmul@a+1
  4495  1EF9  0849               	movf	_fround$1251,w
  4496  1EFA  00A8               	movwf	___flmul@a
  4497  1EFB  120A  158A  249F  160A  158A  	fcall	___flmul
  4498  1F00  1283               	bcf	3,5	;RP0=0, select bank0
  4499  1F01  1303               	bcf	3,6	;RP1=0, select bank0
  4500  1F02  0827               	movf	?___flmul+3,w
  4501  1F03  00C1               	movwf	?_fround+3
  4502  1F04  0826               	movf	?___flmul+2,w
  4503  1F05  00C0               	movwf	?_fround+2
  4504  1F06  0825               	movf	?___flmul+1,w
  4505  1F07  00BF               	movwf	?_fround+1
  4506  1F08  0824               	movf	?___flmul,w
  4507  1F09  00BE               	movwf	?_fround
  4508  1F0A  2FFF               	goto	l290
  4509  1F0B                     l2840:
  4510  1F0B  300B               	movlw	11
  4511  1F0C  0251               	subwf	fround@prec,w
  4512  1F0D  1C03               	skipc
  4513  1F0E  2F10               	goto	u4121
  4514  1F0F  2F11               	goto	u4120
  4515  1F10                     u4121:
  4516  1F10  2FBC               	goto	l2846
  4517  1F11                     u4120:
  4518  1F11                     l2842:
  4519                           
  4520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4521  1F11  303F               	movlw	63
  4522  1F12  00A7               	movwf	___flmul@b+3
  4523  1F13  3000               	movlw	0
  4524  1F14  00A6               	movwf	___flmul@b+2
  4525  1F15  3000               	movlw	0
  4526  1F16  00A5               	movwf	___flmul@b+1
  4527  1F17  3000               	movlw	0
  4528  1F18  00A4               	movwf	___flmul@b
  4529  1F19  300A               	movlw	10
  4530  1F1A  00F6               	movwf	___lwdiv@divisor
  4531  1F1B  3000               	movlw	0
  4532  1F1C  00F7               	movwf	___lwdiv@divisor+1
  4533  1F1D  0851               	movf	fround@prec,w
  4534  1F1E  00C2               	movwf	??_fround
  4535  1F1F  01C3               	clrf	??_fround+1
  4536  1F20  0842               	movf	??_fround,w
  4537  1F21  00F8               	movwf	___lwdiv@dividend
  4538  1F22  0843               	movf	??_fround+1,w
  4539  1F23  00F9               	movwf	___lwdiv@dividend+1
  4540  1F24  160A  158A  2289  160A  158A  	fcall	___lwdiv
  4541  1F29  0876               	movf	?___lwdiv,w
  4542  1F2A  1283               	bcf	3,5	;RP0=0, select bank0
  4543  1F2B  1303               	bcf	3,6	;RP1=0, select bank0
  4544  1F2C  00C4               	movwf	??_fround+2
  4545  1F2D  3001               	movlw	1
  4546  1F2E                     u4135:
  4547  1F2E  1003               	clrc
  4548  1F2F  0DC4               	rlf	??_fround+2,f
  4549  1F30  3EFF               	addlw	-1
  4550  1F31  1D03               	skipz
  4551  1F32  2F2E               	goto	u4135
  4552  1F33  1003               	clrc
  4553  1F34  0D44               	rlf	??_fround+2,w
  4554  1F35  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4555  1F36  0084               	movwf	4
  4556  1F37  120A  118A  200D  160A  158A  	fcall	stringdir
  4557  1F3C  00C5               	movwf	??_fround+3
  4558  1F3D  120A  118A  200D  160A  158A  	fcall	stringdir
  4559  1F42  00C6               	movwf	??_fround+4
  4560  1F43  120A  118A  200D  160A  158A  	fcall	stringdir
  4561  1F48  00C7               	movwf	??_fround+5
  4562  1F49  120A  118A  200D  160A  158A  	fcall	stringdir
  4563  1F4E  00C8               	movwf	??_fround+6
  4564  1F4F  0848               	movf	??_fround+6,w
  4565  1F50  00AB               	movwf	___flmul@a+3
  4566  1F51  0847               	movf	??_fround+5,w
  4567  1F52  00AA               	movwf	___flmul@a+2
  4568  1F53  0846               	movf	??_fround+4,w
  4569  1F54  00A9               	movwf	___flmul@a+1
  4570  1F55  0845               	movf	??_fround+3,w
  4571  1F56  00A8               	movwf	___flmul@a
  4572  1F57  120A  158A  249F  160A  158A  	fcall	___flmul
  4573  1F5C  1283               	bcf	3,5	;RP0=0, select bank0
  4574  1F5D  1303               	bcf	3,6	;RP1=0, select bank0
  4575  1F5E  0827               	movf	?___flmul+3,w
  4576  1F5F  00D0               	movwf	_fround$1250+3
  4577  1F60  0826               	movf	?___flmul+2,w
  4578  1F61  00CF               	movwf	_fround$1250+2
  4579  1F62  0825               	movf	?___flmul+1,w
  4580  1F63  00CE               	movwf	_fround$1250+1
  4581  1F64  0824               	movf	?___flmul,w
  4582  1F65  00CD               	movwf	_fround$1250
  4583                           
  4584                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4585  1F66  300A               	movlw	10
  4586  1F67  00F0               	movwf	___lwmod@divisor
  4587  1F68  3000               	movlw	0
  4588  1F69  00F1               	movwf	___lwmod@divisor+1
  4589  1F6A  0851               	movf	fround@prec,w
  4590  1F6B  00C2               	movwf	??_fround
  4591  1F6C  01C3               	clrf	??_fround+1
  4592  1F6D  0842               	movf	??_fround,w
  4593  1F6E  00F2               	movwf	___lwmod@dividend
  4594  1F6F  0843               	movf	??_fround+1,w
  4595  1F70  00F3               	movwf	___lwmod@dividend+1
  4596  1F71  160A  158A  21CC  160A  158A  	fcall	___lwmod
  4597  1F76  0870               	movf	?___lwmod,w
  4598  1F77  1283               	bcf	3,5	;RP0=0, select bank0
  4599  1F78  1303               	bcf	3,6	;RP1=0, select bank0
  4600  1F79  00C4               	movwf	??_fround+2
  4601  1F7A  3001               	movlw	1
  4602  1F7B                     u4145:
  4603  1F7B  1003               	clrc
  4604  1F7C  0DC4               	rlf	??_fround+2,f
  4605  1F7D  3EFF               	addlw	-1
  4606  1F7E  1D03               	skipz
  4607  1F7F  2F7B               	goto	u4145
  4608  1F80  1003               	clrc
  4609  1F81  0D44               	rlf	??_fround+2,w
  4610  1F82  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4611  1F83  0084               	movwf	4
  4612  1F84  120A  118A  200D  160A  158A  	fcall	stringdir
  4613  1F89  00C5               	movwf	??_fround+3
  4614  1F8A  120A  118A  200D  160A  158A  	fcall	stringdir
  4615  1F8F  00C6               	movwf	??_fround+4
  4616  1F90  120A  118A  200D  160A  158A  	fcall	stringdir
  4617  1F95  00C7               	movwf	??_fround+5
  4618  1F96  120A  118A  200D  160A  158A  	fcall	stringdir
  4619  1F9B  00C8               	movwf	??_fround+6
  4620  1F9C  0848               	movf	??_fround+6,w
  4621  1F9D  00A7               	movwf	___flmul@b+3
  4622  1F9E  0847               	movf	??_fround+5,w
  4623  1F9F  00A6               	movwf	___flmul@b+2
  4624  1FA0  0846               	movf	??_fround+4,w
  4625  1FA1  00A5               	movwf	___flmul@b+1
  4626  1FA2  0845               	movf	??_fround+3,w
  4627  1FA3  00A4               	movwf	___flmul@b
  4628  1FA4  0850               	movf	_fround$1250+3,w
  4629  1FA5  00AB               	movwf	___flmul@a+3
  4630  1FA6  084F               	movf	_fround$1250+2,w
  4631  1FA7  00AA               	movwf	___flmul@a+2
  4632  1FA8  084E               	movf	_fround$1250+1,w
  4633  1FA9  00A9               	movwf	___flmul@a+1
  4634  1FAA  084D               	movf	_fround$1250,w
  4635  1FAB  00A8               	movwf	___flmul@a
  4636  1FAC  120A  158A  249F  160A  158A  	fcall	___flmul
  4637  1FB1  1283               	bcf	3,5	;RP0=0, select bank0
  4638  1FB2  1303               	bcf	3,6	;RP1=0, select bank0
  4639  1FB3  0827               	movf	?___flmul+3,w
  4640  1FB4  00C1               	movwf	?_fround+3
  4641  1FB5  0826               	movf	?___flmul+2,w
  4642  1FB6  00C0               	movwf	?_fround+2
  4643  1FB7  0825               	movf	?___flmul+1,w
  4644  1FB8  00BF               	movwf	?_fround+1
  4645  1FB9  0824               	movf	?___flmul,w
  4646  1FBA  00BE               	movwf	?_fround
  4647  1FBB  2FFF               	goto	l290
  4648  1FBC                     l2846:
  4649                           
  4650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4651  1FBC  303F               	movlw	63
  4652  1FBD  00A7               	movwf	___flmul@b+3
  4653  1FBE  3000               	movlw	0
  4654  1FBF  00A6               	movwf	___flmul@b+2
  4655  1FC0  3000               	movlw	0
  4656  1FC1  00A5               	movwf	___flmul@b+1
  4657  1FC2  3000               	movlw	0
  4658  1FC3  00A4               	movwf	___flmul@b
  4659  1FC4  0851               	movf	fround@prec,w
  4660  1FC5  00C2               	movwf	??_fround
  4661  1FC6  3001               	movlw	1
  4662  1FC7                     u4155:
  4663  1FC7  1003               	clrc
  4664  1FC8  0DC2               	rlf	??_fround,f
  4665  1FC9  3EFF               	addlw	-1
  4666  1FCA  1D03               	skipz
  4667  1FCB  2FC7               	goto	u4155
  4668  1FCC  1003               	clrc
  4669  1FCD  0D42               	rlf	??_fround,w
  4670  1FCE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4671  1FCF  0084               	movwf	4
  4672  1FD0  120A  118A  200D  160A  158A  	fcall	stringdir
  4673  1FD5  00C3               	movwf	??_fround+1
  4674  1FD6  120A  118A  200D  160A  158A  	fcall	stringdir
  4675  1FDB  00C4               	movwf	??_fround+2
  4676  1FDC  120A  118A  200D  160A  158A  	fcall	stringdir
  4677  1FE1  00C5               	movwf	??_fround+3
  4678  1FE2  120A  118A  200D  160A  158A  	fcall	stringdir
  4679  1FE7  00C6               	movwf	??_fround+4
  4680  1FE8  0846               	movf	??_fround+4,w
  4681  1FE9  00AB               	movwf	___flmul@a+3
  4682  1FEA  0845               	movf	??_fround+3,w
  4683  1FEB  00AA               	movwf	___flmul@a+2
  4684  1FEC  0844               	movf	??_fround+2,w
  4685  1FED  00A9               	movwf	___flmul@a+1
  4686  1FEE  0843               	movf	??_fround+1,w
  4687  1FEF  00A8               	movwf	___flmul@a
  4688  1FF0  120A  158A  249F  160A  158A  	fcall	___flmul
  4689  1FF5  1283               	bcf	3,5	;RP0=0, select bank0
  4690  1FF6  1303               	bcf	3,6	;RP1=0, select bank0
  4691  1FF7  0827               	movf	?___flmul+3,w
  4692  1FF8  00C1               	movwf	?_fround+3
  4693  1FF9  0826               	movf	?___flmul+2,w
  4694  1FFA  00C0               	movwf	?_fround+2
  4695  1FFB  0825               	movf	?___flmul+1,w
  4696  1FFC  00BF               	movwf	?_fround+1
  4697  1FFD  0824               	movf	?___flmul,w
  4698  1FFE  00BE               	movwf	?_fround
  4699  1FFF                     l290:
  4700  1FFF  0008               	return
  4701  2000                     __end_of_fround:
  4702                           
  4703                           	psect	text8
  4704  19CC                     __ptext8:	
  4705 ;; *************** function ___lwmod *****************
  4706 ;; Defined at:
  4707 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4708 ;; Parameters:    Size  Location     Type
  4709 ;;  divisor         2    0[COMMON] unsigned int 
  4710 ;;  dividend        2    2[COMMON] unsigned int 
  4711 ;; Auto vars:     Size  Location     Type
  4712 ;;  counter         1    5[COMMON] unsigned char 
  4713 ;; Return value:  Size  Location     Type
  4714 ;;                  2    0[COMMON] unsigned int 
  4715 ;; Registers used:
  4716 ;;		wreg, status,2, status,0
  4717 ;; Tracked objects:
  4718 ;;		On entry : 0/0
  4719 ;;		On exit  : 0/0
  4720 ;;		Unchanged: 0/0
  4721 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4722 ;;      Params:         4       0       0       0       0
  4723 ;;      Locals:         1       0       0       0       0
  4724 ;;      Temps:          1       0       0       0       0
  4725 ;;      Totals:         6       0       0       0       0
  4726 ;;Total ram usage:        6 bytes
  4727 ;; Hardware stack levels used:    1
  4728 ;; This function calls:
  4729 ;;		Nothing
  4730 ;; This function is called by:
  4731 ;;		_fround
  4732 ;; This function uses a non-reentrant model
  4733 ;;
  4734                           
  4735                           
  4736                           ;psect for function ___lwmod
  4737  19CC                     ___lwmod:
  4738  19CC                     l2452:	
  4739                           ;incstack = 0
  4740                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4741                           
  4742  19CC  0870               	movf	___lwmod@divisor,w
  4743  19CD  0471               	iorwf	___lwmod@divisor+1,w
  4744  19CE  1903               	btfsc	3,2
  4745  19CF  29D1               	goto	u3181
  4746  19D0  29D2               	goto	u3180
  4747  19D1                     u3181:
  4748  19D1  2A01               	goto	l2470
  4749  19D2                     u3180:
  4750  19D2                     l2454:
  4751  19D2  01F5               	clrf	___lwmod@counter
  4752  19D3  0AF5               	incf	___lwmod@counter,f
  4753  19D4  29E0               	goto	l2460
  4754  19D5                     l2456:
  4755  19D5  3001               	movlw	1
  4756  19D6                     u3195:
  4757  19D6  1003               	clrc
  4758  19D7  0DF0               	rlf	___lwmod@divisor,f
  4759  19D8  0DF1               	rlf	___lwmod@divisor+1,f
  4760  19D9  3EFF               	addlw	-1
  4761  19DA  1D03               	skipz
  4762  19DB  29D6               	goto	u3195
  4763  19DC                     l2458:
  4764  19DC  3001               	movlw	1
  4765  19DD  00F4               	movwf	??___lwmod
  4766  19DE  0874               	movf	??___lwmod,w
  4767  19DF  07F5               	addwf	___lwmod@counter,f
  4768  19E0                     l2460:
  4769  19E0  1FF1               	btfss	___lwmod@divisor+1,7
  4770  19E1  29E3               	goto	u3201
  4771  19E2  29E4               	goto	u3200
  4772  19E3                     u3201:
  4773  19E3  29D5               	goto	l2456
  4774  19E4                     u3200:
  4775  19E4                     l2462:
  4776  19E4  0871               	movf	___lwmod@divisor+1,w
  4777  19E5  0273               	subwf	___lwmod@dividend+1,w
  4778  19E6  1D03               	skipz
  4779  19E7  29EA               	goto	u3215
  4780  19E8  0870               	movf	___lwmod@divisor,w
  4781  19E9  0272               	subwf	___lwmod@dividend,w
  4782  19EA                     u3215:
  4783  19EA  1C03               	skipc
  4784  19EB  29ED               	goto	u3211
  4785  19EC  29EE               	goto	u3210
  4786  19ED                     u3211:
  4787  19ED  29F4               	goto	l2466
  4788  19EE                     u3210:
  4789  19EE                     l2464:
  4790  19EE  0870               	movf	___lwmod@divisor,w
  4791  19EF  02F2               	subwf	___lwmod@dividend,f
  4792  19F0  0871               	movf	___lwmod@divisor+1,w
  4793  19F1  1C03               	skipc
  4794  19F2  03F3               	decf	___lwmod@dividend+1,f
  4795  19F3  02F3               	subwf	___lwmod@dividend+1,f
  4796  19F4                     l2466:
  4797  19F4  3001               	movlw	1
  4798  19F5                     u3225:
  4799  19F5  1003               	clrc
  4800  19F6  0CF1               	rrf	___lwmod@divisor+1,f
  4801  19F7  0CF0               	rrf	___lwmod@divisor,f
  4802  19F8  3EFF               	addlw	-1
  4803  19F9  1D03               	skipz
  4804  19FA  29F5               	goto	u3225
  4805  19FB                     l2468:
  4806  19FB  3001               	movlw	1
  4807  19FC  02F5               	subwf	___lwmod@counter,f
  4808  19FD  1D03               	btfss	3,2
  4809  19FE  2A00               	goto	u3231
  4810  19FF  2A01               	goto	u3230
  4811  1A00                     u3231:
  4812  1A00  29E4               	goto	l2462
  4813  1A01                     u3230:
  4814  1A01                     l2470:
  4815  1A01  0873               	movf	___lwmod@dividend+1,w
  4816  1A02  00F1               	movwf	?___lwmod+1
  4817  1A03  0872               	movf	___lwmod@dividend,w
  4818  1A04  00F0               	movwf	?___lwmod
  4819  1A05                     l709:
  4820  1A05  0008               	return
  4821  1A06                     __end_of___lwmod:
  4822                           
  4823                           	psect	text9
  4824  1A89                     __ptext9:	
  4825 ;; *************** function ___lwdiv *****************
  4826 ;; Defined at:
  4827 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4828 ;; Parameters:    Size  Location     Type
  4829 ;;  divisor         2    6[COMMON] unsigned int 
  4830 ;;  dividend        2    8[COMMON] unsigned int 
  4831 ;; Auto vars:     Size  Location     Type
  4832 ;;  quotient        2   11[COMMON] unsigned int 
  4833 ;;  counter         1   13[COMMON] unsigned char 
  4834 ;; Return value:  Size  Location     Type
  4835 ;;                  2    6[COMMON] unsigned int 
  4836 ;; Registers used:
  4837 ;;		wreg, status,2, status,0
  4838 ;; Tracked objects:
  4839 ;;		On entry : 0/0
  4840 ;;		On exit  : 0/0
  4841 ;;		Unchanged: 0/0
  4842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4843 ;;      Params:         4       0       0       0       0
  4844 ;;      Locals:         3       0       0       0       0
  4845 ;;      Temps:          1       0       0       0       0
  4846 ;;      Totals:         8       0       0       0       0
  4847 ;;Total ram usage:        8 bytes
  4848 ;; Hardware stack levels used:    1
  4849 ;; This function calls:
  4850 ;;		Nothing
  4851 ;; This function is called by:
  4852 ;;		_fround
  4853 ;; This function uses a non-reentrant model
  4854 ;;
  4855                           
  4856                           
  4857                           ;psect for function ___lwdiv
  4858  1A89                     ___lwdiv:
  4859  1A89                     l2426:	
  4860                           ;incstack = 0
  4861                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4862                           
  4863  1A89  01FB               	clrf	___lwdiv@quotient
  4864  1A8A  01FC               	clrf	___lwdiv@quotient+1
  4865  1A8B                     l2428:
  4866  1A8B  0876               	movf	___lwdiv@divisor,w
  4867  1A8C  0477               	iorwf	___lwdiv@divisor+1,w
  4868  1A8D  1903               	btfsc	3,2
  4869  1A8E  2A90               	goto	u3111
  4870  1A8F  2A91               	goto	u3110
  4871  1A90                     u3111:
  4872  1A90  2AC8               	goto	l2448
  4873  1A91                     u3110:
  4874  1A91                     l2430:
  4875  1A91  01FD               	clrf	___lwdiv@counter
  4876  1A92  0AFD               	incf	___lwdiv@counter,f
  4877  1A93  2A9F               	goto	l2436
  4878  1A94                     l2432:
  4879  1A94  3001               	movlw	1
  4880  1A95                     u3125:
  4881  1A95  1003               	clrc
  4882  1A96  0DF6               	rlf	___lwdiv@divisor,f
  4883  1A97  0DF7               	rlf	___lwdiv@divisor+1,f
  4884  1A98  3EFF               	addlw	-1
  4885  1A99  1D03               	skipz
  4886  1A9A  2A95               	goto	u3125
  4887  1A9B                     l2434:
  4888  1A9B  3001               	movlw	1
  4889  1A9C  00FA               	movwf	??___lwdiv
  4890  1A9D  087A               	movf	??___lwdiv,w
  4891  1A9E  07FD               	addwf	___lwdiv@counter,f
  4892  1A9F                     l2436:
  4893  1A9F  1FF7               	btfss	___lwdiv@divisor+1,7
  4894  1AA0  2AA2               	goto	u3131
  4895  1AA1  2AA3               	goto	u3130
  4896  1AA2                     u3131:
  4897  1AA2  2A94               	goto	l2432
  4898  1AA3                     u3130:
  4899  1AA3                     l2438:
  4900  1AA3  3001               	movlw	1
  4901  1AA4                     u3145:
  4902  1AA4  1003               	clrc
  4903  1AA5  0DFB               	rlf	___lwdiv@quotient,f
  4904  1AA6  0DFC               	rlf	___lwdiv@quotient+1,f
  4905  1AA7  3EFF               	addlw	-1
  4906  1AA8  1D03               	skipz
  4907  1AA9  2AA4               	goto	u3145
  4908  1AAA  0877               	movf	___lwdiv@divisor+1,w
  4909  1AAB  0279               	subwf	___lwdiv@dividend+1,w
  4910  1AAC  1D03               	skipz
  4911  1AAD  2AB0               	goto	u3155
  4912  1AAE  0876               	movf	___lwdiv@divisor,w
  4913  1AAF  0278               	subwf	___lwdiv@dividend,w
  4914  1AB0                     u3155:
  4915  1AB0  1C03               	skipc
  4916  1AB1  2AB3               	goto	u3151
  4917  1AB2  2AB4               	goto	u3150
  4918  1AB3                     u3151:
  4919  1AB3  2ABB               	goto	l2444
  4920  1AB4                     u3150:
  4921  1AB4                     l2440:
  4922  1AB4  0876               	movf	___lwdiv@divisor,w
  4923  1AB5  02F8               	subwf	___lwdiv@dividend,f
  4924  1AB6  0877               	movf	___lwdiv@divisor+1,w
  4925  1AB7  1C03               	skipc
  4926  1AB8  03F9               	decf	___lwdiv@dividend+1,f
  4927  1AB9  02F9               	subwf	___lwdiv@dividend+1,f
  4928  1ABA                     l2442:
  4929  1ABA  147B               	bsf	___lwdiv@quotient,0
  4930  1ABB                     l2444:
  4931  1ABB  3001               	movlw	1
  4932  1ABC                     u3165:
  4933  1ABC  1003               	clrc
  4934  1ABD  0CF7               	rrf	___lwdiv@divisor+1,f
  4935  1ABE  0CF6               	rrf	___lwdiv@divisor,f
  4936  1ABF  3EFF               	addlw	-1
  4937  1AC0  1D03               	skipz
  4938  1AC1  2ABC               	goto	u3165
  4939  1AC2                     l2446:
  4940  1AC2  3001               	movlw	1
  4941  1AC3  02FD               	subwf	___lwdiv@counter,f
  4942  1AC4  1D03               	btfss	3,2
  4943  1AC5  2AC7               	goto	u3171
  4944  1AC6  2AC8               	goto	u3170
  4945  1AC7                     u3171:
  4946  1AC7  2AA3               	goto	l2438
  4947  1AC8                     u3170:
  4948  1AC8                     l2448:
  4949  1AC8  087C               	movf	___lwdiv@quotient+1,w
  4950  1AC9  00F7               	movwf	?___lwdiv+1
  4951  1ACA  087B               	movf	___lwdiv@quotient,w
  4952  1ACB  00F6               	movwf	?___lwdiv
  4953  1ACC                     l699:
  4954  1ACC  0008               	return
  4955  1ACD                     __end_of___lwdiv:
  4956                           
  4957                           	psect	text10
  4958  0C9F                     __ptext10:	
  4959 ;; *************** function ___flmul *****************
  4960 ;; Defined at:
  4961 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;  b               4    4[BANK0 ] unsigned int 
  4964 ;;  a               4    8[BANK0 ] unsigned int 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;  prod            4   24[BANK0 ] struct .
  4967 ;;  grs             4   18[BANK0 ] unsigned long 
  4968 ;;  temp            2   28[BANK0 ] struct .
  4969 ;;  bexp            1   23[BANK0 ] unsigned char 
  4970 ;;  aexp            1   22[BANK0 ] unsigned char 
  4971 ;;  sign            1   17[BANK0 ] unsigned char 
  4972 ;; Return value:  Size  Location     Type
  4973 ;;                  4    4[BANK0 ] unsigned char 
  4974 ;; Registers used:
  4975 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4976 ;; Tracked objects:
  4977 ;;		On entry : 0/0
  4978 ;;		On exit  : 0/0
  4979 ;;		Unchanged: 0/0
  4980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4981 ;;      Params:         0       8       0       0       0
  4982 ;;      Locals:         0      13       0       0       0
  4983 ;;      Temps:          0       5       0       0       0
  4984 ;;      Totals:         0      26       0       0       0
  4985 ;;Total ram usage:       26 bytes
  4986 ;; Hardware stack levels used:    1
  4987 ;; Hardware stack levels required when called:    1
  4988 ;; This function calls:
  4989 ;;		__Umul8_16
  4990 ;; This function is called by:
  4991 ;;		_main
  4992 ;;		_fround
  4993 ;;		_scale
  4994 ;;		_sprintf
  4995 ;; This function uses a non-reentrant model
  4996 ;;
  4997                           
  4998                           
  4999                           ;psect for function ___flmul
  5000  0C9F                     ___flmul:
  5001  0C9F                     l2668:	
  5002                           ;incstack = 0
  5003                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5004                           
  5005  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  5006  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  5007  0CA1  0827               	movf	___flmul@b+3,w
  5008  0CA2  3980               	andlw	128
  5009  0CA3  00AC               	movwf	??___flmul
  5010  0CA4  082C               	movf	??___flmul,w
  5011  0CA5  00B1               	movwf	___flmul@sign
  5012  0CA6                     l2670:
  5013  0CA6  0827               	movf	___flmul@b+3,w
  5014  0CA7  00AC               	movwf	??___flmul
  5015  0CA8  072C               	addwf	??___flmul,w
  5016  0CA9  00AD               	movwf	??___flmul+1
  5017  0CAA  082D               	movf	??___flmul+1,w
  5018  0CAB  00B7               	movwf	___flmul@bexp
  5019  0CAC                     l2672:
  5020  0CAC  1FA6               	btfss	___flmul@b+2,7
  5021  0CAD  2CAF               	goto	u3701
  5022  0CAE  2CB0               	goto	u3700
  5023  0CAF                     u3701:
  5024  0CAF  2CB1               	goto	l2676
  5025  0CB0                     u3700:
  5026  0CB0                     l2674:
  5027  0CB0  1437               	bsf	___flmul@bexp,0
  5028  0CB1                     l2676:
  5029  0CB1  0837               	movf	___flmul@bexp,w
  5030  0CB2  1903               	btfsc	3,2
  5031  0CB3  2CB5               	goto	u3711
  5032  0CB4  2CB6               	goto	u3710
  5033  0CB5                     u3711:
  5034  0CB5  2CC5               	goto	l2684
  5035  0CB6                     u3710:
  5036  0CB6                     l2678:
  5037  0CB6  0A37               	incf	___flmul@bexp,w
  5038  0CB7  1D03               	btfss	3,2
  5039  0CB8  2CBA               	goto	u3721
  5040  0CB9  2CBB               	goto	u3720
  5041  0CBA                     u3721:
  5042  0CBA  2CC3               	goto	l2682
  5043  0CBB                     u3720:
  5044  0CBB                     l2680:
  5045  0CBB  3000               	movlw	0
  5046  0CBC  00A7               	movwf	___flmul@b+3
  5047  0CBD  3000               	movlw	0
  5048  0CBE  00A6               	movwf	___flmul@b+2
  5049  0CBF  3000               	movlw	0
  5050  0CC0  00A5               	movwf	___flmul@b+1
  5051  0CC1  3000               	movlw	0
  5052  0CC2  00A4               	movwf	___flmul@b
  5053  0CC3                     l2682:
  5054  0CC3  17A6               	bsf	___flmul@b+2,7
  5055  0CC4  2CCD               	goto	l2686
  5056  0CC5                     l2684:
  5057  0CC5  3000               	movlw	0
  5058  0CC6  00A7               	movwf	___flmul@b+3
  5059  0CC7  3000               	movlw	0
  5060  0CC8  00A6               	movwf	___flmul@b+2
  5061  0CC9  3000               	movlw	0
  5062  0CCA  00A5               	movwf	___flmul@b+1
  5063  0CCB  3000               	movlw	0
  5064  0CCC  00A4               	movwf	___flmul@b
  5065  0CCD                     l2686:
  5066  0CCD  082B               	movf	___flmul@a+3,w
  5067  0CCE  3980               	andlw	128
  5068  0CCF  00AC               	movwf	??___flmul
  5069  0CD0  082C               	movf	??___flmul,w
  5070  0CD1  06B1               	xorwf	___flmul@sign,f
  5071  0CD2                     l2688:
  5072  0CD2  082B               	movf	___flmul@a+3,w
  5073  0CD3  00AC               	movwf	??___flmul
  5074  0CD4  072C               	addwf	??___flmul,w
  5075  0CD5  00AD               	movwf	??___flmul+1
  5076  0CD6  082D               	movf	??___flmul+1,w
  5077  0CD7  00B6               	movwf	___flmul@aexp
  5078  0CD8                     l2690:
  5079  0CD8  1FAA               	btfss	___flmul@a+2,7
  5080  0CD9  2CDB               	goto	u3731
  5081  0CDA  2CDC               	goto	u3730
  5082  0CDB                     u3731:
  5083  0CDB  2CDD               	goto	l2694
  5084  0CDC                     u3730:
  5085  0CDC                     l2692:
  5086  0CDC  1436               	bsf	___flmul@aexp,0
  5087  0CDD                     l2694:
  5088  0CDD  0836               	movf	___flmul@aexp,w
  5089  0CDE  1903               	btfsc	3,2
  5090  0CDF  2CE1               	goto	u3741
  5091  0CE0  2CE2               	goto	u3740
  5092  0CE1                     u3741:
  5093  0CE1  2CF1               	goto	l2702
  5094  0CE2                     u3740:
  5095  0CE2                     l2696:
  5096  0CE2  0A36               	incf	___flmul@aexp,w
  5097  0CE3  1D03               	btfss	3,2
  5098  0CE4  2CE6               	goto	u3751
  5099  0CE5  2CE7               	goto	u3750
  5100  0CE6                     u3751:
  5101  0CE6  2CEF               	goto	l2700
  5102  0CE7                     u3750:
  5103  0CE7                     l2698:
  5104  0CE7  3000               	movlw	0
  5105  0CE8  00AB               	movwf	___flmul@a+3
  5106  0CE9  3000               	movlw	0
  5107  0CEA  00AA               	movwf	___flmul@a+2
  5108  0CEB  3000               	movlw	0
  5109  0CEC  00A9               	movwf	___flmul@a+1
  5110  0CED  3000               	movlw	0
  5111  0CEE  00A8               	movwf	___flmul@a
  5112  0CEF                     l2700:
  5113  0CEF  17AA               	bsf	___flmul@a+2,7
  5114  0CF0  2CF9               	goto	l2704
  5115  0CF1                     l2702:
  5116  0CF1  3000               	movlw	0
  5117  0CF2  00AB               	movwf	___flmul@a+3
  5118  0CF3  3000               	movlw	0
  5119  0CF4  00AA               	movwf	___flmul@a+2
  5120  0CF5  3000               	movlw	0
  5121  0CF6  00A9               	movwf	___flmul@a+1
  5122  0CF7  3000               	movlw	0
  5123  0CF8  00A8               	movwf	___flmul@a
  5124  0CF9                     l2704:
  5125  0CF9  0836               	movf	___flmul@aexp,w
  5126  0CFA  1903               	btfsc	3,2
  5127  0CFB  2CFD               	goto	u3761
  5128  0CFC  2CFE               	goto	u3760
  5129  0CFD                     u3761:
  5130  0CFD  2D03               	goto	l2708
  5131  0CFE                     u3760:
  5132  0CFE                     l2706:
  5133  0CFE  0837               	movf	___flmul@bexp,w
  5134  0CFF  1D03               	btfss	3,2
  5135  0D00  2D02               	goto	u3771
  5136  0D01  2D03               	goto	u3770
  5137  0D02                     u3771:
  5138  0D02  2D0C               	goto	l2712
  5139  0D03                     u3770:
  5140  0D03                     l2708:
  5141  0D03  3000               	movlw	0
  5142  0D04  00A7               	movwf	?___flmul+3
  5143  0D05  3000               	movlw	0
  5144  0D06  00A6               	movwf	?___flmul+2
  5145  0D07  3000               	movlw	0
  5146  0D08  00A5               	movwf	?___flmul+1
  5147  0D09  3000               	movlw	0
  5148  0D0A  00A4               	movwf	?___flmul
  5149  0D0B  2FFF               	goto	l816
  5150  0D0C                     l2712:
  5151  0D0C  0824               	movf	___flmul@b,w
  5152  0D0D  00AC               	movwf	??___flmul
  5153  0D0E  082C               	movf	??___flmul,w
  5154  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  5155  0D10  082A               	movf	___flmul@a+2,w
  5156  0D11  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5157  0D16  0871               	movf	?__Umul8_16+1,w
  5158  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  5159  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  5160  0D19  00BD               	movwf	___flmul@temp+1
  5161  0D1A  0870               	movf	?__Umul8_16,w
  5162  0D1B  00BC               	movwf	___flmul@temp
  5163  0D1C                     l2714:
  5164  0D1C  083C               	movf	___flmul@temp,w
  5165  0D1D  00AC               	movwf	??___flmul
  5166  0D1E  01AD               	clrf	??___flmul+1
  5167  0D1F  01AE               	clrf	??___flmul+2
  5168  0D20  01AF               	clrf	??___flmul+3
  5169  0D21  082F               	movf	??___flmul+3,w
  5170  0D22  00B5               	movwf	___flmul@grs+3
  5171  0D23  082E               	movf	??___flmul+2,w
  5172  0D24  00B4               	movwf	___flmul@grs+2
  5173  0D25  082D               	movf	??___flmul+1,w
  5174  0D26  00B3               	movwf	___flmul@grs+1
  5175  0D27  082C               	movf	??___flmul,w
  5176  0D28  00B2               	movwf	___flmul@grs
  5177  0D29                     l2716:
  5178  0D29  083D               	movf	___flmul@temp+1,w
  5179  0D2A  00AC               	movwf	??___flmul
  5180  0D2B  01AD               	clrf	??___flmul+1
  5181  0D2C  01AE               	clrf	??___flmul+2
  5182  0D2D  01AF               	clrf	??___flmul+3
  5183  0D2E  082F               	movf	??___flmul+3,w
  5184  0D2F  00BB               	movwf	___flmul@prod+3
  5185  0D30  082E               	movf	??___flmul+2,w
  5186  0D31  00BA               	movwf	___flmul@prod+2
  5187  0D32  082D               	movf	??___flmul+1,w
  5188  0D33  00B9               	movwf	___flmul@prod+1
  5189  0D34  082C               	movf	??___flmul,w
  5190  0D35  00B8               	movwf	___flmul@prod
  5191  0D36  0825               	movf	___flmul@b+1,w
  5192  0D37  00AC               	movwf	??___flmul
  5193  0D38  082C               	movf	??___flmul,w
  5194  0D39  00F0               	movwf	__Umul8_16@multiplicand
  5195  0D3A  0829               	movf	___flmul@a+1,w
  5196  0D3B  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5197  0D40  0871               	movf	?__Umul8_16+1,w
  5198  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  5199  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  5200  0D43  00BD               	movwf	___flmul@temp+1
  5201  0D44  0870               	movf	?__Umul8_16,w
  5202  0D45  00BC               	movwf	___flmul@temp
  5203  0D46                     l2718:
  5204  0D46  083C               	movf	___flmul@temp,w
  5205  0D47  00AC               	movwf	??___flmul
  5206  0D48  01AD               	clrf	??___flmul+1
  5207  0D49  01AE               	clrf	??___flmul+2
  5208  0D4A  01AF               	clrf	??___flmul+3
  5209  0D4B  082C               	movf	??___flmul,w
  5210  0D4C  07B2               	addwf	___flmul@grs,f
  5211  0D4D  082D               	movf	??___flmul+1,w
  5212  0D4E  1103               	clrz
  5213  0D4F  1803               	skipnc
  5214  0D50  3E01               	addlw	1
  5215  0D51  1903               	skipnz
  5216  0D52  2D54               	goto	u3781
  5217  0D53  07B3               	addwf	___flmul@grs+1,f
  5218  0D54                     u3781:
  5219  0D54  082E               	movf	??___flmul+2,w
  5220  0D55  1103               	clrz
  5221  0D56  1803               	skipnc
  5222  0D57  3E01               	addlw	1
  5223  0D58  1903               	skipnz
  5224  0D59  2D5B               	goto	u3782
  5225  0D5A  07B4               	addwf	___flmul@grs+2,f
  5226  0D5B                     u3782:
  5227  0D5B  082F               	movf	??___flmul+3,w
  5228  0D5C  1103               	clrz
  5229  0D5D  1803               	skipnc
  5230  0D5E  3E01               	addlw	1
  5231  0D5F  1903               	skipnz
  5232  0D60  2D62               	goto	u3783
  5233  0D61  07B5               	addwf	___flmul@grs+3,f
  5234  0D62                     u3783:
  5235  0D62                     l2720:
  5236  0D62  083D               	movf	___flmul@temp+1,w
  5237  0D63  00AC               	movwf	??___flmul
  5238  0D64  01AD               	clrf	??___flmul+1
  5239  0D65  01AE               	clrf	??___flmul+2
  5240  0D66  01AF               	clrf	??___flmul+3
  5241  0D67  082C               	movf	??___flmul,w
  5242  0D68  07B8               	addwf	___flmul@prod,f
  5243  0D69  082D               	movf	??___flmul+1,w
  5244  0D6A  1103               	clrz
  5245  0D6B  1803               	skipnc
  5246  0D6C  3E01               	addlw	1
  5247  0D6D  1903               	skipnz
  5248  0D6E  2D70               	goto	u3791
  5249  0D6F  07B9               	addwf	___flmul@prod+1,f
  5250  0D70                     u3791:
  5251  0D70  082E               	movf	??___flmul+2,w
  5252  0D71  1103               	clrz
  5253  0D72  1803               	skipnc
  5254  0D73  3E01               	addlw	1
  5255  0D74  1903               	skipnz
  5256  0D75  2D77               	goto	u3792
  5257  0D76  07BA               	addwf	___flmul@prod+2,f
  5258  0D77                     u3792:
  5259  0D77  082F               	movf	??___flmul+3,w
  5260  0D78  1103               	clrz
  5261  0D79  1803               	skipnc
  5262  0D7A  3E01               	addlw	1
  5263  0D7B  1903               	skipnz
  5264  0D7C  2D7E               	goto	u3793
  5265  0D7D  07BB               	addwf	___flmul@prod+3,f
  5266  0D7E                     u3793:
  5267  0D7E  0826               	movf	___flmul@b+2,w
  5268  0D7F  00AC               	movwf	??___flmul
  5269  0D80  082C               	movf	??___flmul,w
  5270  0D81  00F0               	movwf	__Umul8_16@multiplicand
  5271  0D82  0828               	movf	___flmul@a,w
  5272  0D83  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5273  0D88  0871               	movf	?__Umul8_16+1,w
  5274  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  5275  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  5276  0D8B  00BD               	movwf	___flmul@temp+1
  5277  0D8C  0870               	movf	?__Umul8_16,w
  5278  0D8D  00BC               	movwf	___flmul@temp
  5279  0D8E                     l2722:
  5280  0D8E  083C               	movf	___flmul@temp,w
  5281  0D8F  00AC               	movwf	??___flmul
  5282  0D90  01AD               	clrf	??___flmul+1
  5283  0D91  01AE               	clrf	??___flmul+2
  5284  0D92  01AF               	clrf	??___flmul+3
  5285  0D93  082C               	movf	??___flmul,w
  5286  0D94  07B2               	addwf	___flmul@grs,f
  5287  0D95  082D               	movf	??___flmul+1,w
  5288  0D96  1103               	clrz
  5289  0D97  1803               	skipnc
  5290  0D98  3E01               	addlw	1
  5291  0D99  1903               	skipnz
  5292  0D9A  2D9C               	goto	u3801
  5293  0D9B  07B3               	addwf	___flmul@grs+1,f
  5294  0D9C                     u3801:
  5295  0D9C  082E               	movf	??___flmul+2,w
  5296  0D9D  1103               	clrz
  5297  0D9E  1803               	skipnc
  5298  0D9F  3E01               	addlw	1
  5299  0DA0  1903               	skipnz
  5300  0DA1  2DA3               	goto	u3802
  5301  0DA2  07B4               	addwf	___flmul@grs+2,f
  5302  0DA3                     u3802:
  5303  0DA3  082F               	movf	??___flmul+3,w
  5304  0DA4  1103               	clrz
  5305  0DA5  1803               	skipnc
  5306  0DA6  3E01               	addlw	1
  5307  0DA7  1903               	skipnz
  5308  0DA8  2DAA               	goto	u3803
  5309  0DA9  07B5               	addwf	___flmul@grs+3,f
  5310  0DAA                     u3803:
  5311  0DAA                     l2724:
  5312  0DAA  083D               	movf	___flmul@temp+1,w
  5313  0DAB  00AC               	movwf	??___flmul
  5314  0DAC  01AD               	clrf	??___flmul+1
  5315  0DAD  01AE               	clrf	??___flmul+2
  5316  0DAE  01AF               	clrf	??___flmul+3
  5317  0DAF  082C               	movf	??___flmul,w
  5318  0DB0  07B8               	addwf	___flmul@prod,f
  5319  0DB1  082D               	movf	??___flmul+1,w
  5320  0DB2  1103               	clrz
  5321  0DB3  1803               	skipnc
  5322  0DB4  3E01               	addlw	1
  5323  0DB5  1903               	skipnz
  5324  0DB6  2DB8               	goto	u3811
  5325  0DB7  07B9               	addwf	___flmul@prod+1,f
  5326  0DB8                     u3811:
  5327  0DB8  082E               	movf	??___flmul+2,w
  5328  0DB9  1103               	clrz
  5329  0DBA  1803               	skipnc
  5330  0DBB  3E01               	addlw	1
  5331  0DBC  1903               	skipnz
  5332  0DBD  2DBF               	goto	u3812
  5333  0DBE  07BA               	addwf	___flmul@prod+2,f
  5334  0DBF                     u3812:
  5335  0DBF  082F               	movf	??___flmul+3,w
  5336  0DC0  1103               	clrz
  5337  0DC1  1803               	skipnc
  5338  0DC2  3E01               	addlw	1
  5339  0DC3  1903               	skipnz
  5340  0DC4  2DC6               	goto	u3813
  5341  0DC5  07BB               	addwf	___flmul@prod+3,f
  5342  0DC6                     u3813:
  5343  0DC6                     l2726:
  5344  0DC6  3008               	movlw	8
  5345  0DC7  00AC               	movwf	??___flmul
  5346  0DC8                     u3825:
  5347  0DC8  1003               	clrc
  5348  0DC9  0DB2               	rlf	___flmul@grs,f
  5349  0DCA  0DB3               	rlf	___flmul@grs+1,f
  5350  0DCB  0DB4               	rlf	___flmul@grs+2,f
  5351  0DCC  0DB5               	rlf	___flmul@grs+3,f
  5352  0DCD  0BAC               	decfsz	??___flmul,f
  5353  0DCE  2DC8               	goto	u3825
  5354  0DCF                     l2728:
  5355  0DCF  0825               	movf	___flmul@b+1,w
  5356  0DD0  00AC               	movwf	??___flmul
  5357  0DD1  082C               	movf	??___flmul,w
  5358  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  5359  0DD3  0828               	movf	___flmul@a,w
  5360  0DD4  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5361  0DD9  0871               	movf	?__Umul8_16+1,w
  5362  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  5363  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  5364  0DDC  00BD               	movwf	___flmul@temp+1
  5365  0DDD  0870               	movf	?__Umul8_16,w
  5366  0DDE  00BC               	movwf	___flmul@temp
  5367  0DDF                     l2730:
  5368  0DDF  083C               	movf	___flmul@temp,w
  5369  0DE0  00AC               	movwf	??___flmul
  5370  0DE1  083D               	movf	___flmul@temp+1,w
  5371  0DE2  00AD               	movwf	??___flmul+1
  5372  0DE3  01AE               	clrf	??___flmul+2
  5373  0DE4  01AF               	clrf	??___flmul+3
  5374  0DE5  082C               	movf	??___flmul,w
  5375  0DE6  07B2               	addwf	___flmul@grs,f
  5376  0DE7  082D               	movf	??___flmul+1,w
  5377  0DE8  1103               	clrz
  5378  0DE9  1803               	skipnc
  5379  0DEA  3E01               	addlw	1
  5380  0DEB  1903               	skipnz
  5381  0DEC  2DEE               	goto	u3831
  5382  0DED  07B3               	addwf	___flmul@grs+1,f
  5383  0DEE                     u3831:
  5384  0DEE  082E               	movf	??___flmul+2,w
  5385  0DEF  1103               	clrz
  5386  0DF0  1803               	skipnc
  5387  0DF1  3E01               	addlw	1
  5388  0DF2  1903               	skipnz
  5389  0DF3  2DF5               	goto	u3832
  5390  0DF4  07B4               	addwf	___flmul@grs+2,f
  5391  0DF5                     u3832:
  5392  0DF5  082F               	movf	??___flmul+3,w
  5393  0DF6  1103               	clrz
  5394  0DF7  1803               	skipnc
  5395  0DF8  3E01               	addlw	1
  5396  0DF9  1903               	skipnz
  5397  0DFA  2DFC               	goto	u3833
  5398  0DFB  07B5               	addwf	___flmul@grs+3,f
  5399  0DFC                     u3833:
  5400  0DFC                     l2732:
  5401  0DFC  0824               	movf	___flmul@b,w
  5402  0DFD  00AC               	movwf	??___flmul
  5403  0DFE  082C               	movf	??___flmul,w
  5404  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  5405  0E00  0829               	movf	___flmul@a+1,w
  5406  0E01  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5407  0E06  0871               	movf	?__Umul8_16+1,w
  5408  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  5409  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  5410  0E09  00BD               	movwf	___flmul@temp+1
  5411  0E0A  0870               	movf	?__Umul8_16,w
  5412  0E0B  00BC               	movwf	___flmul@temp
  5413  0E0C                     l2734:
  5414  0E0C  083C               	movf	___flmul@temp,w
  5415  0E0D  00AC               	movwf	??___flmul
  5416  0E0E  083D               	movf	___flmul@temp+1,w
  5417  0E0F  00AD               	movwf	??___flmul+1
  5418  0E10  01AE               	clrf	??___flmul+2
  5419  0E11  01AF               	clrf	??___flmul+3
  5420  0E12  082C               	movf	??___flmul,w
  5421  0E13  07B2               	addwf	___flmul@grs,f
  5422  0E14  082D               	movf	??___flmul+1,w
  5423  0E15  1103               	clrz
  5424  0E16  1803               	skipnc
  5425  0E17  3E01               	addlw	1
  5426  0E18  1903               	skipnz
  5427  0E19  2E1B               	goto	u3841
  5428  0E1A  07B3               	addwf	___flmul@grs+1,f
  5429  0E1B                     u3841:
  5430  0E1B  082E               	movf	??___flmul+2,w
  5431  0E1C  1103               	clrz
  5432  0E1D  1803               	skipnc
  5433  0E1E  3E01               	addlw	1
  5434  0E1F  1903               	skipnz
  5435  0E20  2E22               	goto	u3842
  5436  0E21  07B4               	addwf	___flmul@grs+2,f
  5437  0E22                     u3842:
  5438  0E22  082F               	movf	??___flmul+3,w
  5439  0E23  1103               	clrz
  5440  0E24  1803               	skipnc
  5441  0E25  3E01               	addlw	1
  5442  0E26  1903               	skipnz
  5443  0E27  2E29               	goto	u3843
  5444  0E28  07B5               	addwf	___flmul@grs+3,f
  5445  0E29                     u3843:
  5446  0E29                     l2736:
  5447  0E29  3008               	movlw	8
  5448  0E2A  00AC               	movwf	??___flmul
  5449  0E2B                     u3855:
  5450  0E2B  1003               	clrc
  5451  0E2C  0DB2               	rlf	___flmul@grs,f
  5452  0E2D  0DB3               	rlf	___flmul@grs+1,f
  5453  0E2E  0DB4               	rlf	___flmul@grs+2,f
  5454  0E2F  0DB5               	rlf	___flmul@grs+3,f
  5455  0E30  0BAC               	decfsz	??___flmul,f
  5456  0E31  2E2B               	goto	u3855
  5457  0E32  0824               	movf	___flmul@b,w
  5458  0E33  00AC               	movwf	??___flmul
  5459  0E34  082C               	movf	??___flmul,w
  5460  0E35  00F0               	movwf	__Umul8_16@multiplicand
  5461  0E36  0828               	movf	___flmul@a,w
  5462  0E37  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5463  0E3C  0871               	movf	?__Umul8_16+1,w
  5464  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5465  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5466  0E3F  00BD               	movwf	___flmul@temp+1
  5467  0E40  0870               	movf	?__Umul8_16,w
  5468  0E41  00BC               	movwf	___flmul@temp
  5469  0E42                     l2738:
  5470  0E42  083C               	movf	___flmul@temp,w
  5471  0E43  00AC               	movwf	??___flmul
  5472  0E44  083D               	movf	___flmul@temp+1,w
  5473  0E45  00AD               	movwf	??___flmul+1
  5474  0E46  01AE               	clrf	??___flmul+2
  5475  0E47  01AF               	clrf	??___flmul+3
  5476  0E48  082C               	movf	??___flmul,w
  5477  0E49  07B2               	addwf	___flmul@grs,f
  5478  0E4A  082D               	movf	??___flmul+1,w
  5479  0E4B  1103               	clrz
  5480  0E4C  1803               	skipnc
  5481  0E4D  3E01               	addlw	1
  5482  0E4E  1903               	skipnz
  5483  0E4F  2E51               	goto	u3861
  5484  0E50  07B3               	addwf	___flmul@grs+1,f
  5485  0E51                     u3861:
  5486  0E51  082E               	movf	??___flmul+2,w
  5487  0E52  1103               	clrz
  5488  0E53  1803               	skipnc
  5489  0E54  3E01               	addlw	1
  5490  0E55  1903               	skipnz
  5491  0E56  2E58               	goto	u3862
  5492  0E57  07B4               	addwf	___flmul@grs+2,f
  5493  0E58                     u3862:
  5494  0E58  082F               	movf	??___flmul+3,w
  5495  0E59  1103               	clrz
  5496  0E5A  1803               	skipnc
  5497  0E5B  3E01               	addlw	1
  5498  0E5C  1903               	skipnz
  5499  0E5D  2E5F               	goto	u3863
  5500  0E5E  07B5               	addwf	___flmul@grs+3,f
  5501  0E5F                     u3863:
  5502  0E5F                     l2740:
  5503  0E5F  0825               	movf	___flmul@b+1,w
  5504  0E60  00AC               	movwf	??___flmul
  5505  0E61  082C               	movf	??___flmul,w
  5506  0E62  00F0               	movwf	__Umul8_16@multiplicand
  5507  0E63  082A               	movf	___flmul@a+2,w
  5508  0E64  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5509  0E69  0871               	movf	?__Umul8_16+1,w
  5510  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  5511  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  5512  0E6C  00BD               	movwf	___flmul@temp+1
  5513  0E6D  0870               	movf	?__Umul8_16,w
  5514  0E6E  00BC               	movwf	___flmul@temp
  5515  0E6F  083C               	movf	___flmul@temp,w
  5516  0E70  00AC               	movwf	??___flmul
  5517  0E71  083D               	movf	___flmul@temp+1,w
  5518  0E72  00AD               	movwf	??___flmul+1
  5519  0E73  01AE               	clrf	??___flmul+2
  5520  0E74  01AF               	clrf	??___flmul+3
  5521  0E75  082C               	movf	??___flmul,w
  5522  0E76  07B8               	addwf	___flmul@prod,f
  5523  0E77  082D               	movf	??___flmul+1,w
  5524  0E78  1103               	clrz
  5525  0E79  1803               	skipnc
  5526  0E7A  3E01               	addlw	1
  5527  0E7B  1903               	skipnz
  5528  0E7C  2E7E               	goto	u3871
  5529  0E7D  07B9               	addwf	___flmul@prod+1,f
  5530  0E7E                     u3871:
  5531  0E7E  082E               	movf	??___flmul+2,w
  5532  0E7F  1103               	clrz
  5533  0E80  1803               	skipnc
  5534  0E81  3E01               	addlw	1
  5535  0E82  1903               	skipnz
  5536  0E83  2E85               	goto	u3872
  5537  0E84  07BA               	addwf	___flmul@prod+2,f
  5538  0E85                     u3872:
  5539  0E85  082F               	movf	??___flmul+3,w
  5540  0E86  1103               	clrz
  5541  0E87  1803               	skipnc
  5542  0E88  3E01               	addlw	1
  5543  0E89  1903               	skipnz
  5544  0E8A  2E8C               	goto	u3873
  5545  0E8B  07BB               	addwf	___flmul@prod+3,f
  5546  0E8C                     u3873:
  5547  0E8C                     l2742:
  5548  0E8C  0826               	movf	___flmul@b+2,w
  5549  0E8D  00AC               	movwf	??___flmul
  5550  0E8E  082C               	movf	??___flmul,w
  5551  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  5552  0E90  0829               	movf	___flmul@a+1,w
  5553  0E91  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5554  0E96  0871               	movf	?__Umul8_16+1,w
  5555  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  5556  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  5557  0E99  00BD               	movwf	___flmul@temp+1
  5558  0E9A  0870               	movf	?__Umul8_16,w
  5559  0E9B  00BC               	movwf	___flmul@temp
  5560  0E9C                     l2744:
  5561  0E9C  083C               	movf	___flmul@temp,w
  5562  0E9D  00AC               	movwf	??___flmul
  5563  0E9E  083D               	movf	___flmul@temp+1,w
  5564  0E9F  00AD               	movwf	??___flmul+1
  5565  0EA0  01AE               	clrf	??___flmul+2
  5566  0EA1  01AF               	clrf	??___flmul+3
  5567  0EA2  082C               	movf	??___flmul,w
  5568  0EA3  07B8               	addwf	___flmul@prod,f
  5569  0EA4  082D               	movf	??___flmul+1,w
  5570  0EA5  1103               	clrz
  5571  0EA6  1803               	skipnc
  5572  0EA7  3E01               	addlw	1
  5573  0EA8  1903               	skipnz
  5574  0EA9  2EAB               	goto	u3881
  5575  0EAA  07B9               	addwf	___flmul@prod+1,f
  5576  0EAB                     u3881:
  5577  0EAB  082E               	movf	??___flmul+2,w
  5578  0EAC  1103               	clrz
  5579  0EAD  1803               	skipnc
  5580  0EAE  3E01               	addlw	1
  5581  0EAF  1903               	skipnz
  5582  0EB0  2EB2               	goto	u3882
  5583  0EB1  07BA               	addwf	___flmul@prod+2,f
  5584  0EB2                     u3882:
  5585  0EB2  082F               	movf	??___flmul+3,w
  5586  0EB3  1103               	clrz
  5587  0EB4  1803               	skipnc
  5588  0EB5  3E01               	addlw	1
  5589  0EB6  1903               	skipnz
  5590  0EB7  2EB9               	goto	u3883
  5591  0EB8  07BB               	addwf	___flmul@prod+3,f
  5592  0EB9                     u3883:
  5593  0EB9  0826               	movf	___flmul@b+2,w
  5594  0EBA  00AC               	movwf	??___flmul
  5595  0EBB  082C               	movf	??___flmul,w
  5596  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  5597  0EBD  082A               	movf	___flmul@a+2,w
  5598  0EBE  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5599  0EC3  0871               	movf	?__Umul8_16+1,w
  5600  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  5601  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  5602  0EC6  00BD               	movwf	___flmul@temp+1
  5603  0EC7  0870               	movf	?__Umul8_16,w
  5604  0EC8  00BC               	movwf	___flmul@temp
  5605  0EC9                     l2746:
  5606  0EC9  083C               	movf	___flmul@temp,w
  5607  0ECA  00AC               	movwf	??___flmul
  5608  0ECB  083D               	movf	___flmul@temp+1,w
  5609  0ECC  00AD               	movwf	??___flmul+1
  5610  0ECD  01AE               	clrf	??___flmul+2
  5611  0ECE  01AF               	clrf	??___flmul+3
  5612  0ECF  3008               	movlw	8
  5613  0ED0                     u3895:
  5614  0ED0  1003               	clrc
  5615  0ED1  0DAC               	rlf	??___flmul,f
  5616  0ED2  0DAD               	rlf	??___flmul+1,f
  5617  0ED3  0DAE               	rlf	??___flmul+2,f
  5618  0ED4  0DAF               	rlf	??___flmul+3,f
  5619  0ED5                     u3890:
  5620  0ED5  3EFF               	addlw	-1
  5621  0ED6  1D03               	skipz
  5622  0ED7  2ED0               	goto	u3895
  5623  0ED8  082C               	movf	??___flmul,w
  5624  0ED9  07B8               	addwf	___flmul@prod,f
  5625  0EDA  082D               	movf	??___flmul+1,w
  5626  0EDB  1103               	clrz
  5627  0EDC  1803               	skipnc
  5628  0EDD  3E01               	addlw	1
  5629  0EDE  1903               	skipnz
  5630  0EDF  2EE1               	goto	u3901
  5631  0EE0  07B9               	addwf	___flmul@prod+1,f
  5632  0EE1                     u3901:
  5633  0EE1  082E               	movf	??___flmul+2,w
  5634  0EE2  1103               	clrz
  5635  0EE3  1803               	skipnc
  5636  0EE4  3E01               	addlw	1
  5637  0EE5  1903               	skipnz
  5638  0EE6  2EE8               	goto	u3902
  5639  0EE7  07BA               	addwf	___flmul@prod+2,f
  5640  0EE8                     u3902:
  5641  0EE8  082F               	movf	??___flmul+3,w
  5642  0EE9  1103               	clrz
  5643  0EEA  1803               	skipnc
  5644  0EEB  3E01               	addlw	1
  5645  0EEC  1903               	skipnz
  5646  0EED  2EEF               	goto	u3903
  5647  0EEE  07BB               	addwf	___flmul@prod+3,f
  5648  0EEF                     u3903:
  5649  0EEF                     l2748:
  5650  0EEF  0832               	movf	___flmul@grs,w
  5651  0EF0  00AC               	movwf	??___flmul
  5652  0EF1  0833               	movf	___flmul@grs+1,w
  5653  0EF2  00AD               	movwf	??___flmul+1
  5654  0EF3  0834               	movf	___flmul@grs+2,w
  5655  0EF4  00AE               	movwf	??___flmul+2
  5656  0EF5  0835               	movf	___flmul@grs+3,w
  5657  0EF6  00AF               	movwf	??___flmul+3
  5658  0EF7  3018               	movlw	24
  5659  0EF8                     u3915:
  5660  0EF8  1003               	clrc
  5661  0EF9  0CAF               	rrf	??___flmul+3,f
  5662  0EFA  0CAE               	rrf	??___flmul+2,f
  5663  0EFB  0CAD               	rrf	??___flmul+1,f
  5664  0EFC  0CAC               	rrf	??___flmul,f
  5665  0EFD                     u3910:
  5666  0EFD  3EFF               	addlw	-1
  5667  0EFE  1D03               	skipz
  5668  0EFF  2EF8               	goto	u3915
  5669  0F00  082C               	movf	??___flmul,w
  5670  0F01  07B8               	addwf	___flmul@prod,f
  5671  0F02  082D               	movf	??___flmul+1,w
  5672  0F03  1103               	clrz
  5673  0F04  1803               	skipnc
  5674  0F05  3E01               	addlw	1
  5675  0F06  1903               	skipnz
  5676  0F07  2F09               	goto	u3921
  5677  0F08  07B9               	addwf	___flmul@prod+1,f
  5678  0F09                     u3921:
  5679  0F09  082E               	movf	??___flmul+2,w
  5680  0F0A  1103               	clrz
  5681  0F0B  1803               	skipnc
  5682  0F0C  3E01               	addlw	1
  5683  0F0D  1903               	skipnz
  5684  0F0E  2F10               	goto	u3922
  5685  0F0F  07BA               	addwf	___flmul@prod+2,f
  5686  0F10                     u3922:
  5687  0F10  082F               	movf	??___flmul+3,w
  5688  0F11  1103               	clrz
  5689  0F12  1803               	skipnc
  5690  0F13  3E01               	addlw	1
  5691  0F14  1903               	skipnz
  5692  0F15  2F17               	goto	u3923
  5693  0F16  07BB               	addwf	___flmul@prod+3,f
  5694  0F17                     u3923:
  5695  0F17                     l2750:
  5696  0F17  3008               	movlw	8
  5697  0F18  00AC               	movwf	??___flmul
  5698  0F19                     u3935:
  5699  0F19  1003               	clrc
  5700  0F1A  0DB2               	rlf	___flmul@grs,f
  5701  0F1B  0DB3               	rlf	___flmul@grs+1,f
  5702  0F1C  0DB4               	rlf	___flmul@grs+2,f
  5703  0F1D  0DB5               	rlf	___flmul@grs+3,f
  5704  0F1E  0BAC               	decfsz	??___flmul,f
  5705  0F1F  2F19               	goto	u3935
  5706  0F20                     l2752:
  5707  0F20  0837               	movf	___flmul@bexp,w
  5708  0F21  0736               	addwf	___flmul@aexp,w
  5709  0F22  00AC               	movwf	??___flmul
  5710  0F23  01AD               	clrf	??___flmul+1
  5711  0F24  0DAD               	rlf	??___flmul+1,f
  5712  0F25  082C               	movf	??___flmul,w
  5713  0F26  3E82               	addlw	130
  5714  0F27  00BC               	movwf	___flmul@temp
  5715  0F28  082D               	movf	??___flmul+1,w
  5716  0F29  1803               	skipnc
  5717  0F2A  3E01               	addlw	1
  5718  0F2B  3EFF               	addlw	255
  5719  0F2C  00BD               	movwf	___flmul@temp+1
  5720  0F2D  2F4B               	goto	l2764
  5721  0F2E                     l2754:
  5722  0F2E  3001               	movlw	1
  5723  0F2F  00AC               	movwf	??___flmul
  5724  0F30                     u3945:
  5725  0F30  1003               	clrc
  5726  0F31  0DB8               	rlf	___flmul@prod,f
  5727  0F32  0DB9               	rlf	___flmul@prod+1,f
  5728  0F33  0DBA               	rlf	___flmul@prod+2,f
  5729  0F34  0DBB               	rlf	___flmul@prod+3,f
  5730  0F35  0BAC               	decfsz	??___flmul,f
  5731  0F36  2F30               	goto	u3945
  5732  0F37                     l2756:
  5733  0F37  1FB5               	btfss	___flmul@grs+3,7
  5734  0F38  2F3A               	goto	u3951
  5735  0F39  2F3B               	goto	u3950
  5736  0F3A                     u3951:
  5737  0F3A  2F3C               	goto	l2760
  5738  0F3B                     u3950:
  5739  0F3B                     l2758:
  5740  0F3B  1438               	bsf	___flmul@prod,0
  5741  0F3C                     l2760:
  5742  0F3C  3001               	movlw	1
  5743  0F3D  00AC               	movwf	??___flmul
  5744  0F3E                     u3965:
  5745  0F3E  1003               	clrc
  5746  0F3F  0DB2               	rlf	___flmul@grs,f
  5747  0F40  0DB3               	rlf	___flmul@grs+1,f
  5748  0F41  0DB4               	rlf	___flmul@grs+2,f
  5749  0F42  0DB5               	rlf	___flmul@grs+3,f
  5750  0F43  0BAC               	decfsz	??___flmul,f
  5751  0F44  2F3E               	goto	u3965
  5752  0F45                     l2762:
  5753  0F45  30FF               	movlw	255
  5754  0F46  07BC               	addwf	___flmul@temp,f
  5755  0F47  1803               	skipnc
  5756  0F48  0ABD               	incf	___flmul@temp+1,f
  5757  0F49  30FF               	movlw	255
  5758  0F4A  07BD               	addwf	___flmul@temp+1,f
  5759  0F4B                     l2764:
  5760  0F4B  1FBA               	btfss	___flmul@prod+2,7
  5761  0F4C  2F4E               	goto	u3971
  5762  0F4D  2F4F               	goto	u3970
  5763  0F4E                     u3971:
  5764  0F4E  2F2E               	goto	l2754
  5765  0F4F                     u3970:
  5766  0F4F                     l2766:
  5767  0F4F  01B6               	clrf	___flmul@aexp
  5768  0F50                     l2768:
  5769  0F50  1FB5               	btfss	___flmul@grs+3,7
  5770  0F51  2F53               	goto	u3981
  5771  0F52  2F54               	goto	u3980
  5772  0F53                     u3981:
  5773  0F53  2F70               	goto	l2776
  5774  0F54                     u3980:
  5775  0F54                     l2770:
  5776  0F54  30FF               	movlw	255
  5777  0F55  0532               	andwf	___flmul@grs,w
  5778  0F56  00AC               	movwf	??___flmul
  5779  0F57  30FF               	movlw	255
  5780  0F58  0533               	andwf	___flmul@grs+1,w
  5781  0F59  00AD               	movwf	??___flmul+1
  5782  0F5A  30FF               	movlw	255
  5783  0F5B  0534               	andwf	___flmul@grs+2,w
  5784  0F5C  00AE               	movwf	??___flmul+2
  5785  0F5D  307F               	movlw	127
  5786  0F5E  0535               	andwf	___flmul@grs+3,w
  5787  0F5F  00AF               	movwf	??___flmul+3
  5788  0F60  082F               	movf	??___flmul+3,w
  5789  0F61  042E               	iorwf	??___flmul+2,w
  5790  0F62  042D               	iorwf	??___flmul+1,w
  5791  0F63  042C               	iorwf	??___flmul,w
  5792  0F64  1903               	skipnz
  5793  0F65  2F67               	goto	u3991
  5794  0F66  2F68               	goto	u3990
  5795  0F67                     u3991:
  5796  0F67  2F6B               	goto	l822
  5797  0F68                     u3990:
  5798  0F68                     l2772:
  5799  0F68  01B6               	clrf	___flmul@aexp
  5800  0F69  0AB6               	incf	___flmul@aexp,f
  5801  0F6A  2F70               	goto	l2776
  5802  0F6B                     l822:
  5803  0F6B  1C38               	btfss	___flmul@prod,0
  5804  0F6C  2F6E               	goto	u4001
  5805  0F6D  2F6F               	goto	u4000
  5806  0F6E                     u4001:
  5807  0F6E  2F70               	goto	l2776
  5808  0F6F                     u4000:
  5809  0F6F  2F68               	goto	l2772
  5810  0F70                     l2776:
  5811  0F70  0836               	movf	___flmul@aexp,w
  5812  0F71  1903               	btfsc	3,2
  5813  0F72  2F74               	goto	u4011
  5814  0F73  2F75               	goto	u4010
  5815  0F74                     u4011:
  5816  0F74  2FA6               	goto	l2786
  5817  0F75                     u4010:
  5818  0F75                     l2778:
  5819  0F75  3001               	movlw	1
  5820  0F76  07B8               	addwf	___flmul@prod,f
  5821  0F77  3000               	movlw	0
  5822  0F78  1803               	skipnc
  5823  0F79  3001               	movlw	1
  5824  0F7A  07B9               	addwf	___flmul@prod+1,f
  5825  0F7B  3000               	movlw	0
  5826  0F7C  1803               	skipnc
  5827  0F7D  3001               	movlw	1
  5828  0F7E  07BA               	addwf	___flmul@prod+2,f
  5829  0F7F  3000               	movlw	0
  5830  0F80  1803               	skipnc
  5831  0F81  3001               	movlw	1
  5832  0F82  07BB               	addwf	___flmul@prod+3,f
  5833  0F83                     l2780:
  5834  0F83  1C3B               	btfss	___flmul@prod+3,0
  5835  0F84  2F86               	goto	u4021
  5836  0F85  2F87               	goto	u4020
  5837  0F86                     u4021:
  5838  0F86  2FA6               	goto	l2786
  5839  0F87                     u4020:
  5840  0F87                     l2782:
  5841  0F87  0838               	movf	___flmul@prod,w
  5842  0F88  00AC               	movwf	??___flmul
  5843  0F89  0839               	movf	___flmul@prod+1,w
  5844  0F8A  00AD               	movwf	??___flmul+1
  5845  0F8B  083A               	movf	___flmul@prod+2,w
  5846  0F8C  00AE               	movwf	??___flmul+2
  5847  0F8D  083B               	movf	___flmul@prod+3,w
  5848  0F8E  00AF               	movwf	??___flmul+3
  5849  0F8F  3001               	movlw	1
  5850  0F90  00B0               	movwf	??___flmul+4
  5851  0F91                     u4035:
  5852  0F91  0D2F               	rlf	??___flmul+3,w
  5853  0F92  0CAF               	rrf	??___flmul+3,f
  5854  0F93  0CAE               	rrf	??___flmul+2,f
  5855  0F94  0CAD               	rrf	??___flmul+1,f
  5856  0F95  0CAC               	rrf	??___flmul,f
  5857  0F96                     u4030:
  5858  0F96  0BB0               	decfsz	??___flmul+4,f
  5859  0F97  2F91               	goto	u4035
  5860  0F98  082F               	movf	??___flmul+3,w
  5861  0F99  00BB               	movwf	___flmul@prod+3
  5862  0F9A  082E               	movf	??___flmul+2,w
  5863  0F9B  00BA               	movwf	___flmul@prod+2
  5864  0F9C  082D               	movf	??___flmul+1,w
  5865  0F9D  00B9               	movwf	___flmul@prod+1
  5866  0F9E  082C               	movf	??___flmul,w
  5867  0F9F  00B8               	movwf	___flmul@prod
  5868  0FA0                     l2784:
  5869  0FA0  3001               	movlw	1
  5870  0FA1  07BC               	addwf	___flmul@temp,f
  5871  0FA2  1803               	skipnc
  5872  0FA3  0ABD               	incf	___flmul@temp+1,f
  5873  0FA4  3000               	movlw	0
  5874  0FA5  07BD               	addwf	___flmul@temp+1,f
  5875  0FA6                     l2786:
  5876  0FA6  083D               	movf	___flmul@temp+1,w
  5877  0FA7  3A80               	xorlw	128
  5878  0FA8  00FF               	movwf	btemp+1
  5879  0FA9  3080               	movlw	128
  5880  0FAA  027F               	subwf	btemp+1,w
  5881  0FAB  1D03               	skipz
  5882  0FAC  2FAF               	goto	u4045
  5883  0FAD  30FF               	movlw	255
  5884  0FAE  023C               	subwf	___flmul@temp,w
  5885  0FAF                     u4045:
  5886  0FAF  1C03               	skipc
  5887  0FB0  2FB2               	goto	u4041
  5888  0FB1  2FB3               	goto	u4040
  5889  0FB2                     u4041:
  5890  0FB2  2FBE               	goto	l2790
  5891  0FB3                     u4040:
  5892  0FB3                     l2788:
  5893  0FB3  307F               	movlw	127
  5894  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  5895  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  5896  0FB6  00BB               	movwf	___flmul@prod+3
  5897  0FB7  3080               	movlw	128
  5898  0FB8  00BA               	movwf	___flmul@prod+2
  5899  0FB9  3000               	movlw	0
  5900  0FBA  00B9               	movwf	___flmul@prod+1
  5901  0FBB  3000               	movlw	0
  5902  0FBC  00B8               	movwf	___flmul@prod
  5903  0FBD  2FF3               	goto	l828
  5904  0FBE                     l2790:
  5905  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  5906  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  5907  0FC0  083D               	movf	___flmul@temp+1,w
  5908  0FC1  3A80               	xorlw	128
  5909  0FC2  00FF               	movwf	btemp+1
  5910  0FC3  3080               	movlw	128
  5911  0FC4  027F               	subwf	btemp+1,w
  5912  0FC5  1D03               	skipz
  5913  0FC6  2FC9               	goto	u4055
  5914  0FC7  3001               	movlw	1
  5915  0FC8  023C               	subwf	___flmul@temp,w
  5916  0FC9                     u4055:
  5917  0FC9  1803               	skipnc
  5918  0FCA  2FCC               	goto	u4051
  5919  0FCB  2FCD               	goto	u4050
  5920  0FCC                     u4051:
  5921  0FCC  2FD9               	goto	l2796
  5922  0FCD                     u4050:
  5923  0FCD                     l2792:
  5924  0FCD  3000               	movlw	0
  5925  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  5926  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  5927  0FD0  00BB               	movwf	___flmul@prod+3
  5928  0FD1  3000               	movlw	0
  5929  0FD2  00BA               	movwf	___flmul@prod+2
  5930  0FD3  3000               	movlw	0
  5931  0FD4  00B9               	movwf	___flmul@prod+1
  5932  0FD5  3000               	movlw	0
  5933  0FD6  00B8               	movwf	___flmul@prod
  5934  0FD7                     l2794:
  5935  0FD7  01B1               	clrf	___flmul@sign
  5936  0FD8  2FF3               	goto	l828
  5937  0FD9                     l2796:
  5938  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  5939  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  5940  0FDB  083C               	movf	___flmul@temp,w
  5941  0FDC  00AC               	movwf	??___flmul
  5942  0FDD  082C               	movf	??___flmul,w
  5943  0FDE  00B7               	movwf	___flmul@bexp
  5944  0FDF  30FF               	movlw	255
  5945  0FE0  05B8               	andwf	___flmul@prod,f
  5946  0FE1  30FF               	movlw	255
  5947  0FE2  05B9               	andwf	___flmul@prod+1,f
  5948  0FE3  307F               	movlw	127
  5949  0FE4  05BA               	andwf	___flmul@prod+2,f
  5950  0FE5  3000               	movlw	0
  5951  0FE6  05BB               	andwf	___flmul@prod+3,f
  5952  0FE7                     l2798:
  5953  0FE7  1C37               	btfss	___flmul@bexp,0
  5954  0FE8  2FEA               	goto	u4061
  5955  0FE9  2FEB               	goto	u4060
  5956  0FEA                     u4061:
  5957  0FEA  2FEC               	goto	l2802
  5958  0FEB                     u4060:
  5959  0FEB                     l2800:
  5960  0FEB  17BA               	bsf	___flmul@prod+2,7
  5961  0FEC                     l2802:
  5962  0FEC  0837               	movf	___flmul@bexp,w
  5963  0FED  00AC               	movwf	??___flmul
  5964  0FEE  1003               	clrc
  5965  0FEF  0C2C               	rrf	??___flmul,w
  5966  0FF0  00AD               	movwf	??___flmul+1
  5967  0FF1  082D               	movf	??___flmul+1,w
  5968  0FF2  00BB               	movwf	___flmul@prod+3
  5969  0FF3                     l828:
  5970  0FF3  0831               	movf	___flmul@sign,w
  5971  0FF4  00AC               	movwf	??___flmul
  5972  0FF5  082C               	movf	??___flmul,w
  5973  0FF6  04BB               	iorwf	___flmul@prod+3,f
  5974  0FF7                     l2804:
  5975  0FF7  083B               	movf	___flmul@prod+3,w
  5976  0FF8  00A7               	movwf	?___flmul+3
  5977  0FF9  083A               	movf	___flmul@prod+2,w
  5978  0FFA  00A6               	movwf	?___flmul+2
  5979  0FFB  0839               	movf	___flmul@prod+1,w
  5980  0FFC  00A5               	movwf	?___flmul+1
  5981  0FFD  0838               	movf	___flmul@prod,w
  5982  0FFE  00A4               	movwf	?___flmul
  5983  0FFF                     l816:
  5984  0FFF  0008               	return
  5985  1000                     __end_of___flmul:
  5986                           
  5987                           	psect	text11
  5988  00D5                     __ptext11:	
  5989 ;; *************** function __Umul8_16 *****************
  5990 ;; Defined at:
  5991 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5992 ;; Parameters:    Size  Location     Type
  5993 ;;  multiplier      1    wreg     unsigned char 
  5994 ;;  multiplicand    1    0[COMMON] unsigned char 
  5995 ;; Auto vars:     Size  Location     Type
  5996 ;;  multiplier      1    8[COMMON] unsigned char 
  5997 ;;  word_mpld       2    6[COMMON] unsigned int 
  5998 ;;  product         2    4[COMMON] unsigned int 
  5999 ;; Return value:  Size  Location     Type
  6000 ;;                  2    0[COMMON] unsigned int 
  6001 ;; Registers used:
  6002 ;;		wreg, status,2, status,0
  6003 ;; Tracked objects:
  6004 ;;		On entry : 0/0
  6005 ;;		On exit  : 0/0
  6006 ;;		Unchanged: 0/0
  6007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6008 ;;      Params:         2       0       0       0       0
  6009 ;;      Locals:         5       0       0       0       0
  6010 ;;      Temps:          2       0       0       0       0
  6011 ;;      Totals:         9       0       0       0       0
  6012 ;;Total ram usage:        9 bytes
  6013 ;; Hardware stack levels used:    1
  6014 ;; This function calls:
  6015 ;;		Nothing
  6016 ;; This function is called by:
  6017 ;;		___flmul
  6018 ;; This function uses a non-reentrant model
  6019 ;;
  6020                           
  6021                           
  6022                           ;psect for function __Umul8_16
  6023  00D5                     __Umul8_16:
  6024                           
  6025                           ;incstack = 0
  6026                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6027                           ;__Umul8_16@multiplier stored from wreg
  6028  00D5  00F8               	movwf	__Umul8_16@multiplier
  6029  00D6                     l2328:
  6030  00D6  01F4               	clrf	__Umul8_16@product
  6031  00D7  01F5               	clrf	__Umul8_16@product+1
  6032  00D8                     l2330:
  6033  00D8  0870               	movf	__Umul8_16@multiplicand,w
  6034  00D9  00F2               	movwf	??__Umul8_16
  6035  00DA  01F3               	clrf	??__Umul8_16+1
  6036  00DB  0872               	movf	??__Umul8_16,w
  6037  00DC  00F6               	movwf	__Umul8_16@word_mpld
  6038  00DD  0873               	movf	??__Umul8_16+1,w
  6039  00DE  00F7               	movwf	__Umul8_16@word_mpld+1
  6040  00DF                     l2332:
  6041  00DF  1C78               	btfss	__Umul8_16@multiplier,0
  6042  00E0  28E2               	goto	u2891
  6043  00E1  28E3               	goto	u2890
  6044  00E2                     u2891:
  6045  00E2  28E9               	goto	l835
  6046  00E3                     u2890:
  6047  00E3                     l2334:
  6048  00E3  0876               	movf	__Umul8_16@word_mpld,w
  6049  00E4  07F4               	addwf	__Umul8_16@product,f
  6050  00E5  1803               	skipnc
  6051  00E6  0AF5               	incf	__Umul8_16@product+1,f
  6052  00E7  0877               	movf	__Umul8_16@word_mpld+1,w
  6053  00E8  07F5               	addwf	__Umul8_16@product+1,f
  6054  00E9                     l835:
  6055  00E9  3001               	movlw	1
  6056  00EA                     u2905:
  6057  00EA  1003               	clrc
  6058  00EB  0DF6               	rlf	__Umul8_16@word_mpld,f
  6059  00EC  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6060  00ED  3EFF               	addlw	-1
  6061  00EE  1D03               	skipz
  6062  00EF  28EA               	goto	u2905
  6063  00F0  1003               	clrc
  6064  00F1  0CF8               	rrf	__Umul8_16@multiplier,f
  6065  00F2                     l2336:
  6066  00F2  0878               	movf	__Umul8_16@multiplier,w
  6067  00F3  1D03               	btfss	3,2
  6068  00F4  28F6               	goto	u2911
  6069  00F5  28F7               	goto	u2910
  6070  00F6                     u2911:
  6071  00F6  28DF               	goto	l2332
  6072  00F7                     u2910:
  6073  00F7                     l2338:
  6074  00F7  0875               	movf	__Umul8_16@product+1,w
  6075  00F8  00F1               	movwf	?__Umul8_16+1
  6076  00F9  0874               	movf	__Umul8_16@product,w
  6077  00FA  00F0               	movwf	?__Umul8_16
  6078  00FB                     l837:
  6079  00FB  0008               	return
  6080  00FC                     __end_of__Umul8_16:
  6081                           
  6082                           	psect	text12
  6083  0883                     __ptext12:	
  6084 ;; *************** function __tdiv_to_l_ *****************
  6085 ;; Defined at:
  6086 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  6087 ;; Parameters:    Size  Location     Type
  6088 ;;  f1              4    0[COMMON] float 
  6089 ;;  f2              4    4[COMMON] float 
  6090 ;; Auto vars:     Size  Location     Type
  6091 ;;  quot            4    0[BANK0 ] unsigned long 
  6092 ;;  exp1            1    5[BANK0 ] unsigned char 
  6093 ;;  cntr            1    4[BANK0 ] unsigned char 
  6094 ;; Return value:  Size  Location     Type
  6095 ;;                  4    0[COMMON] unsigned long 
  6096 ;; Registers used:
  6097 ;;		wreg, status,2, status,0
  6098 ;; Tracked objects:
  6099 ;;		On entry : 0/0
  6100 ;;		On exit  : 0/0
  6101 ;;		Unchanged: 0/0
  6102 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6103 ;;      Params:         8       0       0       0       0
  6104 ;;      Locals:         0       6       0       0       0
  6105 ;;      Temps:          4       0       0       0       0
  6106 ;;      Totals:        12       6       0       0       0
  6107 ;;Total ram usage:       18 bytes
  6108 ;; Hardware stack levels used:    1
  6109 ;; This function calls:
  6110 ;;		Nothing
  6111 ;; This function is called by:
  6112 ;;		_sprintf
  6113 ;; This function uses a non-reentrant model
  6114 ;;
  6115                           
  6116                           
  6117                           ;psect for function __tdiv_to_l_
  6118  0883                     __tdiv_to_l_:
  6119  0883                     l2902:	
  6120                           ;incstack = 0
  6121                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6122                           
  6123  0883  0870               	movf	__tdiv_to_l_@f1,w
  6124  0884  00F8               	movwf	??__tdiv_to_l_
  6125  0885  0871               	movf	__tdiv_to_l_@f1+1,w
  6126  0886  00F9               	movwf	??__tdiv_to_l_+1
  6127  0887  0872               	movf	__tdiv_to_l_@f1+2,w
  6128  0888  00FA               	movwf	??__tdiv_to_l_+2
  6129  0889  1003               	clrc
  6130  088A  0D79               	rlf	??__tdiv_to_l_+1,w
  6131  088B  0D7A               	rlf	??__tdiv_to_l_+2,w
  6132  088C  00FB               	movwf	??__tdiv_to_l_+3
  6133  088D  087B               	movf	??__tdiv_to_l_+3,w
  6134  088E  1283               	bcf	3,5	;RP0=0, select bank0
  6135  088F  1303               	bcf	3,6	;RP1=0, select bank0
  6136  0890  00A5               	movwf	__tdiv_to_l_@exp1
  6137  0891  0825               	movf	__tdiv_to_l_@exp1,w
  6138  0892  1D03               	btfss	3,2
  6139  0893  2895               	goto	u4351
  6140  0894  2896               	goto	u4350
  6141  0895                     u4351:
  6142  0895  289F               	goto	l2908
  6143  0896                     u4350:
  6144  0896                     l2904:
  6145  0896  3000               	movlw	0
  6146  0897  00F3               	movwf	?__tdiv_to_l_+3
  6147  0898  3000               	movlw	0
  6148  0899  00F2               	movwf	?__tdiv_to_l_+2
  6149  089A  3000               	movlw	0
  6150  089B  00F1               	movwf	?__tdiv_to_l_+1
  6151  089C  3000               	movlw	0
  6152  089D  00F0               	movwf	?__tdiv_to_l_
  6153  089E  293F               	goto	l610
  6154  089F                     l2908:
  6155  089F  0874               	movf	__tdiv_to_l_@f2,w
  6156  08A0  00F8               	movwf	??__tdiv_to_l_
  6157  08A1  0875               	movf	__tdiv_to_l_@f2+1,w
  6158  08A2  00F9               	movwf	??__tdiv_to_l_+1
  6159  08A3  0876               	movf	__tdiv_to_l_@f2+2,w
  6160  08A4  00FA               	movwf	??__tdiv_to_l_+2
  6161  08A5  1003               	clrc
  6162  08A6  0D79               	rlf	??__tdiv_to_l_+1,w
  6163  08A7  0D7A               	rlf	??__tdiv_to_l_+2,w
  6164  08A8  00FB               	movwf	??__tdiv_to_l_+3
  6165  08A9  087B               	movf	??__tdiv_to_l_+3,w
  6166  08AA  00A4               	movwf	__tdiv_to_l_@cntr
  6167  08AB  0824               	movf	__tdiv_to_l_@cntr,w
  6168  08AC  1D03               	btfss	3,2
  6169  08AD  28AF               	goto	u4361
  6170  08AE  28B0               	goto	u4360
  6171  08AF                     u4361:
  6172  08AF  28B1               	goto	l611
  6173  08B0                     u4360:
  6174  08B0  2896               	goto	l2904
  6175  08B1                     l611:
  6176  08B1  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6177  08B2                     l2914:
  6178  08B2  30FF               	movlw	255
  6179  08B3  05F0               	andwf	__tdiv_to_l_@f1,f
  6180  08B4  30FF               	movlw	255
  6181  08B5  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6182  08B6  3000               	movlw	0
  6183  08B7  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6184  08B8                     l2916:
  6185  08B8  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6186  08B9  30FF               	movlw	255
  6187  08BA  05F4               	andwf	__tdiv_to_l_@f2,f
  6188  08BB  30FF               	movlw	255
  6189  08BC  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6190  08BD  3000               	movlw	0
  6191  08BE  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6192  08BF  3000               	movlw	0
  6193  08C0  00A3               	movwf	__tdiv_to_l_@quot+3
  6194  08C1  3000               	movlw	0
  6195  08C2  00A2               	movwf	__tdiv_to_l_@quot+2
  6196  08C3  3000               	movlw	0
  6197  08C4  00A1               	movwf	__tdiv_to_l_@quot+1
  6198  08C5  3000               	movlw	0
  6199  08C6  00A0               	movwf	__tdiv_to_l_@quot
  6200  08C7                     l2918:
  6201  08C7  307F               	movlw	127
  6202  08C8  02A5               	subwf	__tdiv_to_l_@exp1,f
  6203  08C9                     l2920:
  6204  08C9  3098               	movlw	152
  6205  08CA  0724               	addwf	__tdiv_to_l_@cntr,w
  6206  08CB  00F8               	movwf	??__tdiv_to_l_
  6207  08CC  0878               	movf	??__tdiv_to_l_,w
  6208  08CD  02A5               	subwf	__tdiv_to_l_@exp1,f
  6209  08CE  3018               	movlw	24
  6210  08CF  00F8               	movwf	??__tdiv_to_l_
  6211  08D0  0878               	movf	??__tdiv_to_l_,w
  6212  08D1  00A4               	movwf	__tdiv_to_l_@cntr
  6213  08D2                     l2922:
  6214  08D2  3001               	movlw	1
  6215  08D3  00F8               	movwf	??__tdiv_to_l_
  6216  08D4                     u4375:
  6217  08D4  1003               	clrc
  6218  08D5  0DA0               	rlf	__tdiv_to_l_@quot,f
  6219  08D6  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6220  08D7  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6221  08D8  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6222  08D9  0BF8               	decfsz	??__tdiv_to_l_,f
  6223  08DA  28D4               	goto	u4375
  6224  08DB                     l2924:
  6225  08DB  0876               	movf	__tdiv_to_l_@f2+2,w
  6226  08DC  0272               	subwf	__tdiv_to_l_@f1+2,w
  6227  08DD  1D03               	skipz
  6228  08DE  28E5               	goto	u4385
  6229  08DF  0875               	movf	__tdiv_to_l_@f2+1,w
  6230  08E0  0271               	subwf	__tdiv_to_l_@f1+1,w
  6231  08E1  1D03               	skipz
  6232  08E2  28E5               	goto	u4385
  6233  08E3  0874               	movf	__tdiv_to_l_@f2,w
  6234  08E4  0270               	subwf	__tdiv_to_l_@f1,w
  6235  08E5                     u4385:
  6236  08E5  1C03               	skipc
  6237  08E6  28E8               	goto	u4381
  6238  08E7  28E9               	goto	u4380
  6239  08E8                     u4381:
  6240  08E8  28F4               	goto	l2930
  6241  08E9                     u4380:
  6242  08E9                     l2926:
  6243  08E9  0874               	movf	__tdiv_to_l_@f2,w
  6244  08EA  02F0               	subwf	__tdiv_to_l_@f1,f
  6245  08EB  0875               	movf	__tdiv_to_l_@f2+1,w
  6246  08EC  1C03               	skipc
  6247  08ED  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6248  08EE  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6249  08EF  0876               	movf	__tdiv_to_l_@f2+2,w
  6250  08F0  1C03               	skipc
  6251  08F1  0A76               	incf	__tdiv_to_l_@f2+2,w
  6252  08F2  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6253  08F3                     l2928:
  6254  08F3  1420               	bsf	__tdiv_to_l_@quot,0
  6255  08F4                     l2930:
  6256  08F4  3001               	movlw	1
  6257  08F5                     u4395:
  6258  08F5  1003               	clrc
  6259  08F6  0DF0               	rlf	__tdiv_to_l_@f1,f
  6260  08F7  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6261  08F8  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6262  08F9  3EFF               	addlw	-1
  6263  08FA  1D03               	skipz
  6264  08FB  28F5               	goto	u4395
  6265  08FC                     l2932:
  6266  08FC  3001               	movlw	1
  6267  08FD  02A4               	subwf	__tdiv_to_l_@cntr,f
  6268  08FE  1D03               	btfss	3,2
  6269  08FF  2901               	goto	u4401
  6270  0900  2902               	goto	u4400
  6271  0901                     u4401:
  6272  0901  28D2               	goto	l2922
  6273  0902                     u4400:
  6274  0902                     l614:
  6275  0902  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6276  0903  2905               	goto	u4411
  6277  0904  2906               	goto	u4410
  6278  0905                     u4411:
  6279  0905  2920               	goto	l2942
  6280  0906                     u4410:
  6281  0906                     l2934:
  6282  0906  0825               	movf	__tdiv_to_l_@exp1,w
  6283  0907  3A80               	xorlw	128
  6284  0908  3E97               	addlw	151
  6285  0909  1803               	skipnc
  6286  090A  290C               	goto	u4421
  6287  090B  290D               	goto	u4420
  6288  090C                     u4421:
  6289  090C  290E               	goto	l2940
  6290  090D                     u4420:
  6291  090D  2896               	goto	l2904
  6292  090E                     l2940:
  6293  090E  3001               	movlw	1
  6294  090F                     u4435:
  6295  090F  1003               	clrc
  6296  0910  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6297  0911  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6298  0912  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6299  0913  0CA0               	rrf	__tdiv_to_l_@quot,f
  6300  0914  3EFF               	addlw	-1
  6301  0915  1D03               	skipz
  6302  0916  290F               	goto	u4435
  6303  0917  3001               	movlw	1
  6304  0918  00F8               	movwf	??__tdiv_to_l_
  6305  0919  0878               	movf	??__tdiv_to_l_,w
  6306  091A  07A5               	addwf	__tdiv_to_l_@exp1,f
  6307  091B  1D03               	btfss	3,2
  6308  091C  291E               	goto	u4441
  6309  091D  291F               	goto	u4440
  6310  091E                     u4441:
  6311  091E  290E               	goto	l2940
  6312  091F                     u4440:
  6313  091F  2937               	goto	l2950
  6314  0920                     l2942:
  6315  0920  3018               	movlw	24
  6316  0921  0225               	subwf	__tdiv_to_l_@exp1,w
  6317  0922  1C03               	skipc
  6318  0923  2925               	goto	u4451
  6319  0924  2926               	goto	u4450
  6320  0925                     u4451:
  6321  0925  2932               	goto	l621
  6322  0926                     u4450:
  6323  0926  2896               	goto	l2904
  6324  0927                     l2948:
  6325  0927  3001               	movlw	1
  6326  0928  00F8               	movwf	??__tdiv_to_l_
  6327  0929                     u4465:
  6328  0929  1003               	clrc
  6329  092A  0DA0               	rlf	__tdiv_to_l_@quot,f
  6330  092B  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6331  092C  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6332  092D  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6333  092E  0BF8               	decfsz	??__tdiv_to_l_,f
  6334  092F  2929               	goto	u4465
  6335  0930  3001               	movlw	1
  6336  0931  02A5               	subwf	__tdiv_to_l_@exp1,f
  6337  0932                     l621:
  6338  0932  0825               	movf	__tdiv_to_l_@exp1,w
  6339  0933  1D03               	btfss	3,2
  6340  0934  2936               	goto	u4471
  6341  0935  2937               	goto	u4470
  6342  0936                     u4471:
  6343  0936  2927               	goto	l2948
  6344  0937                     u4470:
  6345  0937                     l2950:
  6346  0937  0823               	movf	__tdiv_to_l_@quot+3,w
  6347  0938  00F3               	movwf	?__tdiv_to_l_+3
  6348  0939  0822               	movf	__tdiv_to_l_@quot+2,w
  6349  093A  00F2               	movwf	?__tdiv_to_l_+2
  6350  093B  0821               	movf	__tdiv_to_l_@quot+1,w
  6351  093C  00F1               	movwf	?__tdiv_to_l_+1
  6352  093D  0820               	movf	__tdiv_to_l_@quot,w
  6353  093E  00F0               	movwf	?__tdiv_to_l_
  6354  093F                     l610:
  6355  093F  0008               	return
  6356  0940                     __end_of__tdiv_to_l_:
  6357                           
  6358                           	psect	text13
  6359  00FC                     __ptext13:	
  6360 ;; *************** function __div_to_l_ *****************
  6361 ;; Defined at:
  6362 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6363 ;; Parameters:    Size  Location     Type
  6364 ;;  f1              4    0[COMMON] unsigned long 
  6365 ;;  f2              4    4[COMMON] unsigned long 
  6366 ;; Auto vars:     Size  Location     Type
  6367 ;;  quot            4    0[BANK0 ] unsigned long 
  6368 ;;  exp1            1    5[BANK0 ] unsigned char 
  6369 ;;  cntr            1    4[BANK0 ] unsigned char 
  6370 ;; Return value:  Size  Location     Type
  6371 ;;                  4    0[COMMON] unsigned long 
  6372 ;; Registers used:
  6373 ;;		wreg, status,2, status,0
  6374 ;; Tracked objects:
  6375 ;;		On entry : 0/0
  6376 ;;		On exit  : 0/0
  6377 ;;		Unchanged: 0/0
  6378 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6379 ;;      Params:         8       0       0       0       0
  6380 ;;      Locals:         0       6       0       0       0
  6381 ;;      Temps:          1       0       0       0       0
  6382 ;;      Totals:         9       6       0       0       0
  6383 ;;Total ram usage:       15 bytes
  6384 ;; Hardware stack levels used:    1
  6385 ;; This function calls:
  6386 ;;		Nothing
  6387 ;; This function is called by:
  6388 ;;		_sprintf
  6389 ;; This function uses a non-reentrant model
  6390 ;;
  6391                           
  6392                           
  6393                           ;psect for function __div_to_l_
  6394  00FC                     __div_to_l_:
  6395  00FC                     l2954:	
  6396                           ;incstack = 0
  6397                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6398                           
  6399  00FC  1003               	clrc
  6400  00FD  0D72               	rlf	__div_to_l_@f1+2,w
  6401  00FE  0D73               	rlf	__div_to_l_@f1+3,w
  6402  00FF  00F8               	movwf	??__div_to_l_
  6403  0100  0878               	movf	??__div_to_l_,w
  6404  0101  1283               	bcf	3,5	;RP0=0, select bank0
  6405  0102  1303               	bcf	3,6	;RP1=0, select bank0
  6406  0103  00A5               	movwf	__div_to_l_@exp1
  6407  0104  0825               	movf	__div_to_l_@exp1,w
  6408  0105  1D03               	btfss	3,2
  6409  0106  2908               	goto	u4481
  6410  0107  2909               	goto	u4480
  6411  0108                     u4481:
  6412  0108  2912               	goto	l2960
  6413  0109                     u4480:
  6414  0109                     l2956:
  6415  0109  3000               	movlw	0
  6416  010A  00F3               	movwf	?__div_to_l_+3
  6417  010B  3000               	movlw	0
  6418  010C  00F2               	movwf	?__div_to_l_+2
  6419  010D  3000               	movlw	0
  6420  010E  00F1               	movwf	?__div_to_l_+1
  6421  010F  3000               	movlw	0
  6422  0110  00F0               	movwf	?__div_to_l_
  6423  0111  29B9               	goto	l563
  6424  0112                     l2960:
  6425  0112  1003               	clrc
  6426  0113  0D76               	rlf	__div_to_l_@f2+2,w
  6427  0114  0D77               	rlf	__div_to_l_@f2+3,w
  6428  0115  00F8               	movwf	??__div_to_l_
  6429  0116  0878               	movf	??__div_to_l_,w
  6430  0117  00A4               	movwf	__div_to_l_@cntr
  6431  0118  0824               	movf	__div_to_l_@cntr,w
  6432  0119  1D03               	btfss	3,2
  6433  011A  291C               	goto	u4491
  6434  011B  291D               	goto	u4490
  6435  011C                     u4491:
  6436  011C  291E               	goto	l564
  6437  011D                     u4490:
  6438  011D  2909               	goto	l2956
  6439  011E                     l564:
  6440  011E  17F2               	bsf	__div_to_l_@f1+2,7
  6441  011F                     l2966:
  6442  011F  30FF               	movlw	255
  6443  0120  05F0               	andwf	__div_to_l_@f1,f
  6444  0121  30FF               	movlw	255
  6445  0122  05F1               	andwf	__div_to_l_@f1+1,f
  6446  0123  30FF               	movlw	255
  6447  0124  05F2               	andwf	__div_to_l_@f1+2,f
  6448  0125  3000               	movlw	0
  6449  0126  05F3               	andwf	__div_to_l_@f1+3,f
  6450  0127                     l2968:
  6451  0127  17F6               	bsf	__div_to_l_@f2+2,7
  6452  0128  30FF               	movlw	255
  6453  0129  05F4               	andwf	__div_to_l_@f2,f
  6454  012A  30FF               	movlw	255
  6455  012B  05F5               	andwf	__div_to_l_@f2+1,f
  6456  012C  30FF               	movlw	255
  6457  012D  05F6               	andwf	__div_to_l_@f2+2,f
  6458  012E  3000               	movlw	0
  6459  012F  05F7               	andwf	__div_to_l_@f2+3,f
  6460  0130  3000               	movlw	0
  6461  0131  00A3               	movwf	__div_to_l_@quot+3
  6462  0132  3000               	movlw	0
  6463  0133  00A2               	movwf	__div_to_l_@quot+2
  6464  0134  3000               	movlw	0
  6465  0135  00A1               	movwf	__div_to_l_@quot+1
  6466  0136  3000               	movlw	0
  6467  0137  00A0               	movwf	__div_to_l_@quot
  6468  0138                     l2970:
  6469  0138  307F               	movlw	127
  6470  0139  02A5               	subwf	__div_to_l_@exp1,f
  6471  013A                     l2972:
  6472  013A  30A0               	movlw	160
  6473  013B  0724               	addwf	__div_to_l_@cntr,w
  6474  013C  00F8               	movwf	??__div_to_l_
  6475  013D  0878               	movf	??__div_to_l_,w
  6476  013E  02A5               	subwf	__div_to_l_@exp1,f
  6477  013F  3020               	movlw	32
  6478  0140  00F8               	movwf	??__div_to_l_
  6479  0141  0878               	movf	??__div_to_l_,w
  6480  0142  00A4               	movwf	__div_to_l_@cntr
  6481  0143                     l2974:
  6482  0143  3001               	movlw	1
  6483  0144  00F8               	movwf	??__div_to_l_
  6484  0145                     u4505:
  6485  0145  1003               	clrc
  6486  0146  0DA0               	rlf	__div_to_l_@quot,f
  6487  0147  0DA1               	rlf	__div_to_l_@quot+1,f
  6488  0148  0DA2               	rlf	__div_to_l_@quot+2,f
  6489  0149  0DA3               	rlf	__div_to_l_@quot+3,f
  6490  014A  0BF8               	decfsz	??__div_to_l_,f
  6491  014B  2945               	goto	u4505
  6492  014C                     l2976:
  6493  014C  0877               	movf	__div_to_l_@f2+3,w
  6494  014D  0273               	subwf	__div_to_l_@f1+3,w
  6495  014E  1D03               	skipz
  6496  014F  295A               	goto	u4515
  6497  0150  0876               	movf	__div_to_l_@f2+2,w
  6498  0151  0272               	subwf	__div_to_l_@f1+2,w
  6499  0152  1D03               	skipz
  6500  0153  295A               	goto	u4515
  6501  0154  0875               	movf	__div_to_l_@f2+1,w
  6502  0155  0271               	subwf	__div_to_l_@f1+1,w
  6503  0156  1D03               	skipz
  6504  0157  295A               	goto	u4515
  6505  0158  0874               	movf	__div_to_l_@f2,w
  6506  0159  0270               	subwf	__div_to_l_@f1,w
  6507  015A                     u4515:
  6508  015A  1C03               	skipc
  6509  015B  295D               	goto	u4511
  6510  015C  295E               	goto	u4510
  6511  015D                     u4511:
  6512  015D  296D               	goto	l2982
  6513  015E                     u4510:
  6514  015E                     l2978:
  6515  015E  0874               	movf	__div_to_l_@f2,w
  6516  015F  02F0               	subwf	__div_to_l_@f1,f
  6517  0160  0875               	movf	__div_to_l_@f2+1,w
  6518  0161  1C03               	skipc
  6519  0162  0F75               	incfsz	__div_to_l_@f2+1,w
  6520  0163  02F1               	subwf	__div_to_l_@f1+1,f
  6521  0164  0876               	movf	__div_to_l_@f2+2,w
  6522  0165  1C03               	skipc
  6523  0166  0F76               	incfsz	__div_to_l_@f2+2,w
  6524  0167  02F2               	subwf	__div_to_l_@f1+2,f
  6525  0168  0877               	movf	__div_to_l_@f2+3,w
  6526  0169  1C03               	skipc
  6527  016A  0F77               	incfsz	__div_to_l_@f2+3,w
  6528  016B  02F3               	subwf	__div_to_l_@f1+3,f
  6529  016C                     l2980:
  6530  016C  1420               	bsf	__div_to_l_@quot,0
  6531  016D                     l2982:
  6532  016D  3001               	movlw	1
  6533  016E  00F8               	movwf	??__div_to_l_
  6534  016F                     u4525:
  6535  016F  1003               	clrc
  6536  0170  0DF0               	rlf	__div_to_l_@f1,f
  6537  0171  0DF1               	rlf	__div_to_l_@f1+1,f
  6538  0172  0DF2               	rlf	__div_to_l_@f1+2,f
  6539  0173  0DF3               	rlf	__div_to_l_@f1+3,f
  6540  0174  0BF8               	decfsz	??__div_to_l_,f
  6541  0175  296F               	goto	u4525
  6542  0176                     l2984:
  6543  0176  3001               	movlw	1
  6544  0177  02A4               	subwf	__div_to_l_@cntr,f
  6545  0178  1D03               	btfss	3,2
  6546  0179  297B               	goto	u4531
  6547  017A  297C               	goto	u4530
  6548  017B                     u4531:
  6549  017B  2943               	goto	l2974
  6550  017C                     u4530:
  6551  017C                     l567:
  6552  017C  1FA5               	btfss	__div_to_l_@exp1,7
  6553  017D  297F               	goto	u4541
  6554  017E  2980               	goto	u4540
  6555  017F                     u4541:
  6556  017F  299A               	goto	l2994
  6557  0180                     u4540:
  6558  0180                     l2986:
  6559  0180  0825               	movf	__div_to_l_@exp1,w
  6560  0181  3A80               	xorlw	128
  6561  0182  3E9F               	addlw	159
  6562  0183  1803               	skipnc
  6563  0184  2986               	goto	u4551
  6564  0185  2987               	goto	u4550
  6565  0186                     u4551:
  6566  0186  2988               	goto	l2992
  6567  0187                     u4550:
  6568  0187  2909               	goto	l2956
  6569  0188                     l2992:
  6570  0188  3001               	movlw	1
  6571  0189                     u4565:
  6572  0189  1003               	clrc
  6573  018A  0CA3               	rrf	__div_to_l_@quot+3,f
  6574  018B  0CA2               	rrf	__div_to_l_@quot+2,f
  6575  018C  0CA1               	rrf	__div_to_l_@quot+1,f
  6576  018D  0CA0               	rrf	__div_to_l_@quot,f
  6577  018E  3EFF               	addlw	-1
  6578  018F  1D03               	skipz
  6579  0190  2989               	goto	u4565
  6580  0191  3001               	movlw	1
  6581  0192  00F8               	movwf	??__div_to_l_
  6582  0193  0878               	movf	??__div_to_l_,w
  6583  0194  07A5               	addwf	__div_to_l_@exp1,f
  6584  0195  1D03               	btfss	3,2
  6585  0196  2998               	goto	u4571
  6586  0197  2999               	goto	u4570
  6587  0198                     u4571:
  6588  0198  2988               	goto	l2992
  6589  0199                     u4570:
  6590  0199  29B1               	goto	l3002
  6591  019A                     l2994:
  6592  019A  3020               	movlw	32
  6593  019B  0225               	subwf	__div_to_l_@exp1,w
  6594  019C  1C03               	skipc
  6595  019D  299F               	goto	u4581
  6596  019E  29A0               	goto	u4580
  6597  019F                     u4581:
  6598  019F  29AC               	goto	l574
  6599  01A0                     u4580:
  6600  01A0  2909               	goto	l2956
  6601  01A1                     l3000:
  6602  01A1  3001               	movlw	1
  6603  01A2  00F8               	movwf	??__div_to_l_
  6604  01A3                     u4595:
  6605  01A3  1003               	clrc
  6606  01A4  0DA0               	rlf	__div_to_l_@quot,f
  6607  01A5  0DA1               	rlf	__div_to_l_@quot+1,f
  6608  01A6  0DA2               	rlf	__div_to_l_@quot+2,f
  6609  01A7  0DA3               	rlf	__div_to_l_@quot+3,f
  6610  01A8  0BF8               	decfsz	??__div_to_l_,f
  6611  01A9  29A3               	goto	u4595
  6612  01AA  3001               	movlw	1
  6613  01AB  02A5               	subwf	__div_to_l_@exp1,f
  6614  01AC                     l574:
  6615  01AC  0825               	movf	__div_to_l_@exp1,w
  6616  01AD  1D03               	btfss	3,2
  6617  01AE  29B0               	goto	u4601
  6618  01AF  29B1               	goto	u4600
  6619  01B0                     u4601:
  6620  01B0  29A1               	goto	l3000
  6621  01B1                     u4600:
  6622  01B1                     l3002:
  6623  01B1  0823               	movf	__div_to_l_@quot+3,w
  6624  01B2  00F3               	movwf	?__div_to_l_+3
  6625  01B3  0822               	movf	__div_to_l_@quot+2,w
  6626  01B4  00F2               	movwf	?__div_to_l_+2
  6627  01B5  0821               	movf	__div_to_l_@quot+1,w
  6628  01B6  00F1               	movwf	?__div_to_l_+1
  6629  01B7  0820               	movf	__div_to_l_@quot,w
  6630  01B8  00F0               	movwf	?__div_to_l_
  6631  01B9                     l563:
  6632  01B9  0008               	return
  6633  01BA                     __end_of__div_to_l_:
  6634                           
  6635                           	psect	text14
  6636  1D3B                     __ptext14:	
  6637 ;; *************** function ___xxtofl *****************
  6638 ;; Defined at:
  6639 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  6640 ;; Parameters:    Size  Location     Type
  6641 ;;  sign            1    wreg     unsigned char 
  6642 ;;  val             4    0[COMMON] long 
  6643 ;; Auto vars:     Size  Location     Type
  6644 ;;  sign            1    8[COMMON] unsigned char 
  6645 ;;  arg             4   10[COMMON] unsigned long 
  6646 ;;  exp             1    9[COMMON] unsigned char 
  6647 ;; Return value:  Size  Location     Type
  6648 ;;                  4    0[COMMON] unsigned char 
  6649 ;; Registers used:
  6650 ;;		wreg, status,2, status,0
  6651 ;; Tracked objects:
  6652 ;;		On entry : 0/0
  6653 ;;		On exit  : 0/0
  6654 ;;		Unchanged: 0/0
  6655 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6656 ;;      Params:         4       0       0       0       0
  6657 ;;      Locals:         6       0       0       0       0
  6658 ;;      Temps:          4       0       0       0       0
  6659 ;;      Totals:        14       0       0       0       0
  6660 ;;Total ram usage:       14 bytes
  6661 ;; Hardware stack levels used:    1
  6662 ;; This function calls:
  6663 ;;		Nothing
  6664 ;; This function is called by:
  6665 ;;		_main
  6666 ;;		_sprintf
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           
  6671                           ;psect for function ___xxtofl
  6672  1D3B                     ___xxtofl:
  6673                           
  6674                           ;incstack = 0
  6675                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6676                           ;___xxtofl@sign stored from wreg
  6677  1D3B  00F8               	movwf	___xxtofl@sign
  6678  1D3C                     l3146:
  6679  1D3C  0878               	movf	___xxtofl@sign,w
  6680  1D3D  1903               	btfsc	3,2
  6681  1D3E  2D40               	goto	u4991
  6682  1D3F  2D41               	goto	u4990
  6683  1D40                     u4991:
  6684  1D40  2D55               	goto	l3152
  6685  1D41                     u4990:
  6686  1D41                     l3148:
  6687  1D41  1FF3               	btfss	___xxtofl@val+3,7
  6688  1D42  2D44               	goto	u5001
  6689  1D43  2D45               	goto	u5000
  6690  1D44                     u5001:
  6691  1D44  2D55               	goto	l3152
  6692  1D45                     u5000:
  6693  1D45                     l3150:
  6694  1D45  0970               	comf	___xxtofl@val,w
  6695  1D46  00FA               	movwf	___xxtofl@arg
  6696  1D47  0971               	comf	___xxtofl@val+1,w
  6697  1D48  00FB               	movwf	___xxtofl@arg+1
  6698  1D49  0972               	comf	___xxtofl@val+2,w
  6699  1D4A  00FC               	movwf	___xxtofl@arg+2
  6700  1D4B  0973               	comf	___xxtofl@val+3,w
  6701  1D4C  00FD               	movwf	___xxtofl@arg+3
  6702  1D4D  0AFA               	incf	___xxtofl@arg,f
  6703  1D4E  1903               	skipnz
  6704  1D4F  0AFB               	incf	___xxtofl@arg+1,f
  6705  1D50  1903               	skipnz
  6706  1D51  0AFC               	incf	___xxtofl@arg+2,f
  6707  1D52  1903               	skipnz
  6708  1D53  0AFD               	incf	___xxtofl@arg+3,f
  6709  1D54  2D5D               	goto	l860
  6710  1D55                     l3152:
  6711  1D55  0873               	movf	___xxtofl@val+3,w
  6712  1D56  00FD               	movwf	___xxtofl@arg+3
  6713  1D57  0872               	movf	___xxtofl@val+2,w
  6714  1D58  00FC               	movwf	___xxtofl@arg+2
  6715  1D59  0871               	movf	___xxtofl@val+1,w
  6716  1D5A  00FB               	movwf	___xxtofl@arg+1
  6717  1D5B  0870               	movf	___xxtofl@val,w
  6718  1D5C  00FA               	movwf	___xxtofl@arg
  6719  1D5D                     l860:
  6720  1D5D  0873               	movf	___xxtofl@val+3,w
  6721  1D5E  0472               	iorwf	___xxtofl@val+2,w
  6722  1D5F  0471               	iorwf	___xxtofl@val+1,w
  6723  1D60  0470               	iorwf	___xxtofl@val,w
  6724  1D61  1D03               	skipz
  6725  1D62  2D64               	goto	u5011
  6726  1D63  2D65               	goto	u5010
  6727  1D64                     u5011:
  6728  1D64  2D6E               	goto	l3158
  6729  1D65                     u5010:
  6730  1D65                     l3154:
  6731  1D65  3000               	movlw	0
  6732  1D66  00F3               	movwf	?___xxtofl+3
  6733  1D67  3000               	movlw	0
  6734  1D68  00F2               	movwf	?___xxtofl+2
  6735  1D69  3000               	movlw	0
  6736  1D6A  00F1               	movwf	?___xxtofl+1
  6737  1D6B  3000               	movlw	0
  6738  1D6C  00F0               	movwf	?___xxtofl
  6739  1D6D  2DF4               	goto	l862
  6740  1D6E                     l3158:
  6741  1D6E  3096               	movlw	150
  6742  1D6F  00F4               	movwf	??___xxtofl
  6743  1D70  0874               	movf	??___xxtofl,w
  6744  1D71  00F9               	movwf	___xxtofl@exp
  6745  1D72  2D80               	goto	l3162
  6746  1D73                     l3160:
  6747  1D73  3001               	movlw	1
  6748  1D74  00F4               	movwf	??___xxtofl
  6749  1D75  0874               	movf	??___xxtofl,w
  6750  1D76  07F9               	addwf	___xxtofl@exp,f
  6751  1D77  3001               	movlw	1
  6752  1D78                     u5025:
  6753  1D78  1003               	clrc
  6754  1D79  0CFD               	rrf	___xxtofl@arg+3,f
  6755  1D7A  0CFC               	rrf	___xxtofl@arg+2,f
  6756  1D7B  0CFB               	rrf	___xxtofl@arg+1,f
  6757  1D7C  0CFA               	rrf	___xxtofl@arg,f
  6758  1D7D  3EFF               	addlw	-1
  6759  1D7E  1D03               	skipz
  6760  1D7F  2D78               	goto	u5025
  6761  1D80                     l3162:
  6762  1D80  30FE               	movlw	254
  6763  1D81  057D               	andwf	___xxtofl@arg+3,w
  6764  1D82  1D03               	btfss	3,2
  6765  1D83  2D85               	goto	u5031
  6766  1D84  2D86               	goto	u5030
  6767  1D85                     u5031:
  6768  1D85  2D73               	goto	l3160
  6769  1D86                     u5030:
  6770  1D86  2DA2               	goto	l866
  6771  1D87                     l3164:
  6772  1D87  3001               	movlw	1
  6773  1D88  00F4               	movwf	??___xxtofl
  6774  1D89  0874               	movf	??___xxtofl,w
  6775  1D8A  07F9               	addwf	___xxtofl@exp,f
  6776  1D8B                     l3166:
  6777  1D8B  3001               	movlw	1
  6778  1D8C  07FA               	addwf	___xxtofl@arg,f
  6779  1D8D  3000               	movlw	0
  6780  1D8E  1803               	skipnc
  6781  1D8F  3001               	movlw	1
  6782  1D90  07FB               	addwf	___xxtofl@arg+1,f
  6783  1D91  3000               	movlw	0
  6784  1D92  1803               	skipnc
  6785  1D93  3001               	movlw	1
  6786  1D94  07FC               	addwf	___xxtofl@arg+2,f
  6787  1D95  3000               	movlw	0
  6788  1D96  1803               	skipnc
  6789  1D97  3001               	movlw	1
  6790  1D98  07FD               	addwf	___xxtofl@arg+3,f
  6791  1D99                     l3168:
  6792  1D99  3001               	movlw	1
  6793  1D9A                     u5045:
  6794  1D9A  1003               	clrc
  6795  1D9B  0CFD               	rrf	___xxtofl@arg+3,f
  6796  1D9C  0CFC               	rrf	___xxtofl@arg+2,f
  6797  1D9D  0CFB               	rrf	___xxtofl@arg+1,f
  6798  1D9E  0CFA               	rrf	___xxtofl@arg,f
  6799  1D9F  3EFF               	addlw	-1
  6800  1DA0  1D03               	skipz
  6801  1DA1  2D9A               	goto	u5045
  6802  1DA2                     l866:
  6803  1DA2  30FF               	movlw	255
  6804  1DA3  057D               	andwf	___xxtofl@arg+3,w
  6805  1DA4  1D03               	btfss	3,2
  6806  1DA5  2DA7               	goto	u5051
  6807  1DA6  2DA8               	goto	u5050
  6808  1DA7                     u5051:
  6809  1DA7  2D87               	goto	l3164
  6810  1DA8                     u5050:
  6811  1DA8  2DB4               	goto	l3172
  6812  1DA9                     l3170:
  6813  1DA9  3001               	movlw	1
  6814  1DAA  02F9               	subwf	___xxtofl@exp,f
  6815  1DAB  3001               	movlw	1
  6816  1DAC  00F4               	movwf	??___xxtofl
  6817  1DAD                     u5065:
  6818  1DAD  1003               	clrc
  6819  1DAE  0DFA               	rlf	___xxtofl@arg,f
  6820  1DAF  0DFB               	rlf	___xxtofl@arg+1,f
  6821  1DB0  0DFC               	rlf	___xxtofl@arg+2,f
  6822  1DB1  0DFD               	rlf	___xxtofl@arg+3,f
  6823  1DB2  0BF4               	decfsz	??___xxtofl,f
  6824  1DB3  2DAD               	goto	u5065
  6825  1DB4                     l3172:
  6826  1DB4  1BFC               	btfsc	___xxtofl@arg+2,7
  6827  1DB5  2DB7               	goto	u5071
  6828  1DB6  2DB8               	goto	u5070
  6829  1DB7                     u5071:
  6830  1DB7  2DBE               	goto	l873
  6831  1DB8                     u5070:
  6832  1DB8                     l3174:
  6833  1DB8  3002               	movlw	2
  6834  1DB9  0279               	subwf	___xxtofl@exp,w
  6835  1DBA  1803               	skipnc
  6836  1DBB  2DBD               	goto	u5081
  6837  1DBC  2DBE               	goto	u5080
  6838  1DBD                     u5081:
  6839  1DBD  2DA9               	goto	l3170
  6840  1DBE                     u5080:
  6841  1DBE                     l873:
  6842  1DBE  1879               	btfsc	___xxtofl@exp,0
  6843  1DBF  2DC1               	goto	u5091
  6844  1DC0  2DC2               	goto	u5090
  6845  1DC1                     u5091:
  6846  1DC1  2DCA               	goto	l874
  6847  1DC2                     u5090:
  6848  1DC2                     l3176:
  6849  1DC2  30FF               	movlw	255
  6850  1DC3  05FA               	andwf	___xxtofl@arg,f
  6851  1DC4  30FF               	movlw	255
  6852  1DC5  05FB               	andwf	___xxtofl@arg+1,f
  6853  1DC6  307F               	movlw	127
  6854  1DC7  05FC               	andwf	___xxtofl@arg+2,f
  6855  1DC8  30FF               	movlw	255
  6856  1DC9  05FD               	andwf	___xxtofl@arg+3,f
  6857  1DCA                     l874:
  6858  1DCA  1003               	clrc
  6859  1DCB  0CF9               	rrf	___xxtofl@exp,f
  6860  1DCC                     l3178:
  6861  1DCC  0879               	movf	___xxtofl@exp,w
  6862  1DCD  00F4               	movwf	??___xxtofl
  6863  1DCE  01F5               	clrf	??___xxtofl+1
  6864  1DCF  01F6               	clrf	??___xxtofl+2
  6865  1DD0  01F7               	clrf	??___xxtofl+3
  6866  1DD1  3018               	movlw	24
  6867  1DD2                     u5105:
  6868  1DD2  1003               	clrc
  6869  1DD3  0DF4               	rlf	??___xxtofl,f
  6870  1DD4  0DF5               	rlf	??___xxtofl+1,f
  6871  1DD5  0DF6               	rlf	??___xxtofl+2,f
  6872  1DD6  0DF7               	rlf	??___xxtofl+3,f
  6873  1DD7                     u5100:
  6874  1DD7  3EFF               	addlw	-1
  6875  1DD8  1D03               	skipz
  6876  1DD9  2DD2               	goto	u5105
  6877  1DDA  0874               	movf	??___xxtofl,w
  6878  1DDB  04FA               	iorwf	___xxtofl@arg,f
  6879  1DDC  0875               	movf	??___xxtofl+1,w
  6880  1DDD  04FB               	iorwf	___xxtofl@arg+1,f
  6881  1DDE  0876               	movf	??___xxtofl+2,w
  6882  1DDF  04FC               	iorwf	___xxtofl@arg+2,f
  6883  1DE0  0877               	movf	??___xxtofl+3,w
  6884  1DE1  04FD               	iorwf	___xxtofl@arg+3,f
  6885  1DE2                     l3180:
  6886  1DE2  0878               	movf	___xxtofl@sign,w
  6887  1DE3  1903               	btfsc	3,2
  6888  1DE4  2DE6               	goto	u5111
  6889  1DE5  2DE7               	goto	u5110
  6890  1DE6                     u5111:
  6891  1DE6  2DEC               	goto	l3186
  6892  1DE7                     u5110:
  6893  1DE7                     l3182:
  6894  1DE7  1FF3               	btfss	___xxtofl@val+3,7
  6895  1DE8  2DEA               	goto	u5121
  6896  1DE9  2DEB               	goto	u5120
  6897  1DEA                     u5121:
  6898  1DEA  2DEC               	goto	l3186
  6899  1DEB                     u5120:
  6900  1DEB                     l3184:
  6901  1DEB  17FD               	bsf	___xxtofl@arg+3,7
  6902  1DEC                     l3186:
  6903  1DEC  087D               	movf	___xxtofl@arg+3,w
  6904  1DED  00F3               	movwf	?___xxtofl+3
  6905  1DEE  087C               	movf	___xxtofl@arg+2,w
  6906  1DEF  00F2               	movwf	?___xxtofl+2
  6907  1DF0  087B               	movf	___xxtofl@arg+1,w
  6908  1DF1  00F1               	movwf	?___xxtofl+1
  6909  1DF2  087A               	movf	___xxtofl@arg,w
  6910  1DF3  00F0               	movwf	?___xxtofl
  6911  1DF4                     l862:
  6912  1DF4  0008               	return
  6913  1DF5                     __end_of___xxtofl:
  6914                           
  6915                           	psect	text15
  6916  19A7                     __ptext15:	
  6917 ;; *************** function ___wmul *****************
  6918 ;; Defined at:
  6919 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6920 ;; Parameters:    Size  Location     Type
  6921 ;;  multiplier      2    0[COMMON] unsigned int 
  6922 ;;  multiplicand    2    2[COMMON] unsigned int 
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;  product         2    4[COMMON] unsigned int 
  6925 ;; Return value:  Size  Location     Type
  6926 ;;                  2    0[COMMON] unsigned int 
  6927 ;; Registers used:
  6928 ;;		wreg, status,2, status,0
  6929 ;; Tracked objects:
  6930 ;;		On entry : 0/0
  6931 ;;		On exit  : 0/0
  6932 ;;		Unchanged: 0/0
  6933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6934 ;;      Params:         4       0       0       0       0
  6935 ;;      Locals:         2       0       0       0       0
  6936 ;;      Temps:          0       0       0       0       0
  6937 ;;      Totals:         6       0       0       0       0
  6938 ;;Total ram usage:        6 bytes
  6939 ;; Hardware stack levels used:    1
  6940 ;; This function calls:
  6941 ;;		Nothing
  6942 ;; This function is called by:
  6943 ;;		_sprintf
  6944 ;; This function uses a non-reentrant model
  6945 ;;
  6946                           
  6947                           
  6948                           ;psect for function ___wmul
  6949  19A7                     ___wmul:
  6950  19A7                     l3006:	
  6951                           ;incstack = 0
  6952                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6953                           
  6954  19A7  01F4               	clrf	___wmul@product
  6955  19A8  01F5               	clrf	___wmul@product+1
  6956  19A9                     l3008:
  6957  19A9  1C70               	btfss	___wmul@multiplier,0
  6958  19AA  29AC               	goto	u4611
  6959  19AB  29AD               	goto	u4610
  6960  19AC                     u4611:
  6961  19AC  29B3               	goto	l393
  6962  19AD                     u4610:
  6963  19AD                     l3010:
  6964  19AD  0872               	movf	___wmul@multiplicand,w
  6965  19AE  07F4               	addwf	___wmul@product,f
  6966  19AF  1803               	skipnc
  6967  19B0  0AF5               	incf	___wmul@product+1,f
  6968  19B1  0873               	movf	___wmul@multiplicand+1,w
  6969  19B2  07F5               	addwf	___wmul@product+1,f
  6970  19B3                     l393:
  6971  19B3  3001               	movlw	1
  6972  19B4                     u4625:
  6973  19B4  1003               	clrc
  6974  19B5  0DF2               	rlf	___wmul@multiplicand,f
  6975  19B6  0DF3               	rlf	___wmul@multiplicand+1,f
  6976  19B7  3EFF               	addlw	-1
  6977  19B8  1D03               	skipz
  6978  19B9  29B4               	goto	u4625
  6979  19BA                     l3012:
  6980  19BA  3001               	movlw	1
  6981  19BB                     u4635:
  6982  19BB  1003               	clrc
  6983  19BC  0CF1               	rrf	___wmul@multiplier+1,f
  6984  19BD  0CF0               	rrf	___wmul@multiplier,f
  6985  19BE  3EFF               	addlw	-1
  6986  19BF  1D03               	skipz
  6987  19C0  29BB               	goto	u4635
  6988  19C1                     l3014:
  6989  19C1  0870               	movf	___wmul@multiplier,w
  6990  19C2  0471               	iorwf	___wmul@multiplier+1,w
  6991  19C3  1D03               	btfss	3,2
  6992  19C4  29C6               	goto	u4641
  6993  19C5  29C7               	goto	u4640
  6994  19C6                     u4641:
  6995  19C6  29A9               	goto	l3008
  6996  19C7                     u4640:
  6997  19C7                     l3016:
  6998  19C7  0875               	movf	___wmul@product+1,w
  6999  19C8  00F1               	movwf	?___wmul+1
  7000  19C9  0874               	movf	___wmul@product,w
  7001  19CA  00F0               	movwf	?___wmul
  7002  19CB                     l395:
  7003  19CB  0008               	return
  7004  19CC                     __end_of___wmul:
  7005                           
  7006                           	psect	text16
  7007  1B1B                     __ptext16:	
  7008 ;; *************** function ___llmod *****************
  7009 ;; Defined at:
  7010 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  7011 ;; Parameters:    Size  Location     Type
  7012 ;;  divisor         4    0[BANK0 ] unsigned long 
  7013 ;;  dividend        4    4[BANK0 ] unsigned long 
  7014 ;; Auto vars:     Size  Location     Type
  7015 ;;  counter         1    9[BANK0 ] unsigned char 
  7016 ;; Return value:  Size  Location     Type
  7017 ;;                  4    0[BANK0 ] unsigned long 
  7018 ;; Registers used:
  7019 ;;		wreg, status,2, status,0
  7020 ;; Tracked objects:
  7021 ;;		On entry : 0/0
  7022 ;;		On exit  : 0/0
  7023 ;;		Unchanged: 0/0
  7024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7025 ;;      Params:         0       8       0       0       0
  7026 ;;      Locals:         0       1       0       0       0
  7027 ;;      Temps:          0       1       0       0       0
  7028 ;;      Totals:         0      10       0       0       0
  7029 ;;Total ram usage:       10 bytes
  7030 ;; Hardware stack levels used:    1
  7031 ;; This function calls:
  7032 ;;		Nothing
  7033 ;; This function is called by:
  7034 ;;		_sprintf
  7035 ;; This function uses a non-reentrant model
  7036 ;;
  7037                           
  7038                           
  7039                           ;psect for function ___llmod
  7040  1B1B                     ___llmod:
  7041  1B1B                     l3120:	
  7042                           ;incstack = 0
  7043                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7044                           
  7045  1B1B  1283               	bcf	3,5	;RP0=0, select bank0
  7046  1B1C  1303               	bcf	3,6	;RP1=0, select bank0
  7047  1B1D  0823               	movf	___llmod@divisor+3,w
  7048  1B1E  0422               	iorwf	___llmod@divisor+2,w
  7049  1B1F  0421               	iorwf	___llmod@divisor+1,w
  7050  1B20  0420               	iorwf	___llmod@divisor,w
  7051  1B21  1903               	skipnz
  7052  1B22  2B24               	goto	u4931
  7053  1B23  2B25               	goto	u4930
  7054  1B24                     u4931:
  7055  1B24  2B68               	goto	l3136
  7056  1B25                     u4930:
  7057  1B25                     l3122:
  7058  1B25  01A9               	clrf	___llmod@counter
  7059  1B26  0AA9               	incf	___llmod@counter,f
  7060  1B27  2B35               	goto	l3126
  7061  1B28                     l3124:
  7062  1B28  3001               	movlw	1
  7063  1B29  00A8               	movwf	??___llmod
  7064  1B2A                     u4945:
  7065  1B2A  1003               	clrc
  7066  1B2B  0DA0               	rlf	___llmod@divisor,f
  7067  1B2C  0DA1               	rlf	___llmod@divisor+1,f
  7068  1B2D  0DA2               	rlf	___llmod@divisor+2,f
  7069  1B2E  0DA3               	rlf	___llmod@divisor+3,f
  7070  1B2F  0BA8               	decfsz	??___llmod,f
  7071  1B30  2B2A               	goto	u4945
  7072  1B31  3001               	movlw	1
  7073  1B32  00A8               	movwf	??___llmod
  7074  1B33  0828               	movf	??___llmod,w
  7075  1B34  07A9               	addwf	___llmod@counter,f
  7076  1B35                     l3126:
  7077  1B35  1FA3               	btfss	___llmod@divisor+3,7
  7078  1B36  2B38               	goto	u4951
  7079  1B37  2B39               	goto	u4950
  7080  1B38                     u4951:
  7081  1B38  2B28               	goto	l3124
  7082  1B39                     u4950:
  7083  1B39                     l3128:
  7084  1B39  0823               	movf	___llmod@divisor+3,w
  7085  1B3A  0227               	subwf	___llmod@dividend+3,w
  7086  1B3B  1D03               	skipz
  7087  1B3C  2B47               	goto	u4965
  7088  1B3D  0822               	movf	___llmod@divisor+2,w
  7089  1B3E  0226               	subwf	___llmod@dividend+2,w
  7090  1B3F  1D03               	skipz
  7091  1B40  2B47               	goto	u4965
  7092  1B41  0821               	movf	___llmod@divisor+1,w
  7093  1B42  0225               	subwf	___llmod@dividend+1,w
  7094  1B43  1D03               	skipz
  7095  1B44  2B47               	goto	u4965
  7096  1B45  0820               	movf	___llmod@divisor,w
  7097  1B46  0224               	subwf	___llmod@dividend,w
  7098  1B47                     u4965:
  7099  1B47  1C03               	skipc
  7100  1B48  2B4A               	goto	u4961
  7101  1B49  2B4B               	goto	u4960
  7102  1B4A                     u4961:
  7103  1B4A  2B59               	goto	l3132
  7104  1B4B                     u4960:
  7105  1B4B                     l3130:
  7106  1B4B  0820               	movf	___llmod@divisor,w
  7107  1B4C  02A4               	subwf	___llmod@dividend,f
  7108  1B4D  0821               	movf	___llmod@divisor+1,w
  7109  1B4E  1C03               	skipc
  7110  1B4F  0F21               	incfsz	___llmod@divisor+1,w
  7111  1B50  02A5               	subwf	___llmod@dividend+1,f
  7112  1B51  0822               	movf	___llmod@divisor+2,w
  7113  1B52  1C03               	skipc
  7114  1B53  0F22               	incfsz	___llmod@divisor+2,w
  7115  1B54  02A6               	subwf	___llmod@dividend+2,f
  7116  1B55  0823               	movf	___llmod@divisor+3,w
  7117  1B56  1C03               	skipc
  7118  1B57  0F23               	incfsz	___llmod@divisor+3,w
  7119  1B58  02A7               	subwf	___llmod@dividend+3,f
  7120  1B59                     l3132:
  7121  1B59  3001               	movlw	1
  7122  1B5A                     u4975:
  7123  1B5A  1003               	clrc
  7124  1B5B  0CA3               	rrf	___llmod@divisor+3,f
  7125  1B5C  0CA2               	rrf	___llmod@divisor+2,f
  7126  1B5D  0CA1               	rrf	___llmod@divisor+1,f
  7127  1B5E  0CA0               	rrf	___llmod@divisor,f
  7128  1B5F  3EFF               	addlw	-1
  7129  1B60  1D03               	skipz
  7130  1B61  2B5A               	goto	u4975
  7131  1B62                     l3134:
  7132  1B62  3001               	movlw	1
  7133  1B63  02A9               	subwf	___llmod@counter,f
  7134  1B64  1D03               	btfss	3,2
  7135  1B65  2B67               	goto	u4981
  7136  1B66  2B68               	goto	u4980
  7137  1B67                     u4981:
  7138  1B67  2B39               	goto	l3128
  7139  1B68                     u4980:
  7140  1B68                     l3136:
  7141  1B68  0827               	movf	___llmod@dividend+3,w
  7142  1B69  00A3               	movwf	?___llmod+3
  7143  1B6A  0826               	movf	___llmod@dividend+2,w
  7144  1B6B  00A2               	movwf	?___llmod+2
  7145  1B6C  0825               	movf	___llmod@dividend+1,w
  7146  1B6D  00A1               	movwf	?___llmod+1
  7147  1B6E  0824               	movf	___llmod@dividend,w
  7148  1B6F  00A0               	movwf	?___llmod
  7149  1B70                     l649:
  7150  1B70  0008               	return
  7151  1B71                     __end_of___llmod:
  7152                           
  7153                           	psect	text17
  7154  1BCA                     __ptext17:	
  7155 ;; *************** function ___lldiv *****************
  7156 ;; Defined at:
  7157 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  7158 ;; Parameters:    Size  Location     Type
  7159 ;;  divisor         4    0[COMMON] unsigned long 
  7160 ;;  dividend        4    4[COMMON] unsigned long 
  7161 ;; Auto vars:     Size  Location     Type
  7162 ;;  quotient        4    9[COMMON] unsigned long 
  7163 ;;  counter         1   13[COMMON] unsigned char 
  7164 ;; Return value:  Size  Location     Type
  7165 ;;                  4    0[COMMON] unsigned long 
  7166 ;; Registers used:
  7167 ;;		wreg, status,2, status,0
  7168 ;; Tracked objects:
  7169 ;;		On entry : 0/0
  7170 ;;		On exit  : 0/0
  7171 ;;		Unchanged: 0/0
  7172 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7173 ;;      Params:         8       0       0       0       0
  7174 ;;      Locals:         5       0       0       0       0
  7175 ;;      Temps:          1       0       0       0       0
  7176 ;;      Totals:        14       0       0       0       0
  7177 ;;Total ram usage:       14 bytes
  7178 ;; Hardware stack levels used:    1
  7179 ;; This function calls:
  7180 ;;		Nothing
  7181 ;; This function is called by:
  7182 ;;		_sprintf
  7183 ;; This function uses a non-reentrant model
  7184 ;;
  7185                           
  7186                           
  7187                           ;psect for function ___lldiv
  7188  1BCA                     ___lldiv:
  7189  1BCA                     l3020:	
  7190                           ;incstack = 0
  7191                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7192                           
  7193  1BCA  3000               	movlw	0
  7194  1BCB  00FC               	movwf	___lldiv@quotient+3
  7195  1BCC  3000               	movlw	0
  7196  1BCD  00FB               	movwf	___lldiv@quotient+2
  7197  1BCE  3000               	movlw	0
  7198  1BCF  00FA               	movwf	___lldiv@quotient+1
  7199  1BD0  3000               	movlw	0
  7200  1BD1  00F9               	movwf	___lldiv@quotient
  7201  1BD2  0873               	movf	___lldiv@divisor+3,w
  7202  1BD3  0472               	iorwf	___lldiv@divisor+2,w
  7203  1BD4  0471               	iorwf	___lldiv@divisor+1,w
  7204  1BD5  0470               	iorwf	___lldiv@divisor,w
  7205  1BD6  1903               	skipnz
  7206  1BD7  2BD9               	goto	u4651
  7207  1BD8  2BDA               	goto	u4650
  7208  1BD9                     u4651:
  7209  1BD9  2C27               	goto	l3040
  7210  1BDA                     u4650:
  7211  1BDA                     l3022:
  7212  1BDA  01FD               	clrf	___lldiv@counter
  7213  1BDB  0AFD               	incf	___lldiv@counter,f
  7214  1BDC  2BEA               	goto	l3026
  7215  1BDD                     l3024:
  7216  1BDD  3001               	movlw	1
  7217  1BDE  00F8               	movwf	??___lldiv
  7218  1BDF                     u4665:
  7219  1BDF  1003               	clrc
  7220  1BE0  0DF0               	rlf	___lldiv@divisor,f
  7221  1BE1  0DF1               	rlf	___lldiv@divisor+1,f
  7222  1BE2  0DF2               	rlf	___lldiv@divisor+2,f
  7223  1BE3  0DF3               	rlf	___lldiv@divisor+3,f
  7224  1BE4  0BF8               	decfsz	??___lldiv,f
  7225  1BE5  2BDF               	goto	u4665
  7226  1BE6  3001               	movlw	1
  7227  1BE7  00F8               	movwf	??___lldiv
  7228  1BE8  0878               	movf	??___lldiv,w
  7229  1BE9  07FD               	addwf	___lldiv@counter,f
  7230  1BEA                     l3026:
  7231  1BEA  1FF3               	btfss	___lldiv@divisor+3,7
  7232  1BEB  2BED               	goto	u4671
  7233  1BEC  2BEE               	goto	u4670
  7234  1BED                     u4671:
  7235  1BED  2BDD               	goto	l3024
  7236  1BEE                     u4670:
  7237  1BEE                     l3028:
  7238  1BEE  3001               	movlw	1
  7239  1BEF  00F8               	movwf	??___lldiv
  7240  1BF0                     u4685:
  7241  1BF0  1003               	clrc
  7242  1BF1  0DF9               	rlf	___lldiv@quotient,f
  7243  1BF2  0DFA               	rlf	___lldiv@quotient+1,f
  7244  1BF3  0DFB               	rlf	___lldiv@quotient+2,f
  7245  1BF4  0DFC               	rlf	___lldiv@quotient+3,f
  7246  1BF5  0BF8               	decfsz	??___lldiv,f
  7247  1BF6  2BF0               	goto	u4685
  7248  1BF7                     l3030:
  7249  1BF7  0873               	movf	___lldiv@divisor+3,w
  7250  1BF8  0277               	subwf	___lldiv@dividend+3,w
  7251  1BF9  1D03               	skipz
  7252  1BFA  2C05               	goto	u4695
  7253  1BFB  0872               	movf	___lldiv@divisor+2,w
  7254  1BFC  0276               	subwf	___lldiv@dividend+2,w
  7255  1BFD  1D03               	skipz
  7256  1BFE  2C05               	goto	u4695
  7257  1BFF  0871               	movf	___lldiv@divisor+1,w
  7258  1C00  0275               	subwf	___lldiv@dividend+1,w
  7259  1C01  1D03               	skipz
  7260  1C02  2C05               	goto	u4695
  7261  1C03  0870               	movf	___lldiv@divisor,w
  7262  1C04  0274               	subwf	___lldiv@dividend,w
  7263  1C05                     u4695:
  7264  1C05  1C03               	skipc
  7265  1C06  2C08               	goto	u4691
  7266  1C07  2C09               	goto	u4690
  7267  1C08                     u4691:
  7268  1C08  2C18               	goto	l3036
  7269  1C09                     u4690:
  7270  1C09                     l3032:
  7271  1C09  0870               	movf	___lldiv@divisor,w
  7272  1C0A  02F4               	subwf	___lldiv@dividend,f
  7273  1C0B  0871               	movf	___lldiv@divisor+1,w
  7274  1C0C  1C03               	skipc
  7275  1C0D  0F71               	incfsz	___lldiv@divisor+1,w
  7276  1C0E  02F5               	subwf	___lldiv@dividend+1,f
  7277  1C0F  0872               	movf	___lldiv@divisor+2,w
  7278  1C10  1C03               	skipc
  7279  1C11  0F72               	incfsz	___lldiv@divisor+2,w
  7280  1C12  02F6               	subwf	___lldiv@dividend+2,f
  7281  1C13  0873               	movf	___lldiv@divisor+3,w
  7282  1C14  1C03               	skipc
  7283  1C15  0F73               	incfsz	___lldiv@divisor+3,w
  7284  1C16  02F7               	subwf	___lldiv@dividend+3,f
  7285  1C17                     l3034:
  7286  1C17  1479               	bsf	___lldiv@quotient,0
  7287  1C18                     l3036:
  7288  1C18  3001               	movlw	1
  7289  1C19                     u4705:
  7290  1C19  1003               	clrc
  7291  1C1A  0CF3               	rrf	___lldiv@divisor+3,f
  7292  1C1B  0CF2               	rrf	___lldiv@divisor+2,f
  7293  1C1C  0CF1               	rrf	___lldiv@divisor+1,f
  7294  1C1D  0CF0               	rrf	___lldiv@divisor,f
  7295  1C1E  3EFF               	addlw	-1
  7296  1C1F  1D03               	skipz
  7297  1C20  2C19               	goto	u4705
  7298  1C21                     l3038:
  7299  1C21  3001               	movlw	1
  7300  1C22  02FD               	subwf	___lldiv@counter,f
  7301  1C23  1D03               	btfss	3,2
  7302  1C24  2C26               	goto	u4711
  7303  1C25  2C27               	goto	u4710
  7304  1C26                     u4711:
  7305  1C26  2BEE               	goto	l3028
  7306  1C27                     u4710:
  7307  1C27                     l3040:
  7308  1C27  087C               	movf	___lldiv@quotient+3,w
  7309  1C28  00F3               	movwf	?___lldiv+3
  7310  1C29  087B               	movf	___lldiv@quotient+2,w
  7311  1C2A  00F2               	movwf	?___lldiv+2
  7312  1C2B  087A               	movf	___lldiv@quotient+1,w
  7313  1C2C  00F1               	movwf	?___lldiv+1
  7314  1C2D  0879               	movf	___lldiv@quotient,w
  7315  1C2E  00F0               	movwf	?___lldiv
  7316  1C2F                     l429:
  7317  1C2F  0008               	return
  7318  1C30                     __end_of___lldiv:
  7319                           
  7320                           	psect	text18
  7321  0807                     __ptext18:	
  7322 ;; *************** function ___fltol *****************
  7323 ;; Defined at:
  7324 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7325 ;; Parameters:    Size  Location     Type
  7326 ;;  f1              4   49[BANK0 ] unsigned long 
  7327 ;; Auto vars:     Size  Location     Type
  7328 ;;  exp1            1   59[BANK0 ] unsigned char 
  7329 ;;  sign1           1   58[BANK0 ] unsigned char 
  7330 ;; Return value:  Size  Location     Type
  7331 ;;                  4   49[BANK0 ] long 
  7332 ;; Registers used:
  7333 ;;		wreg, status,2, status,0
  7334 ;; Tracked objects:
  7335 ;;		On entry : 0/0
  7336 ;;		On exit  : 0/0
  7337 ;;		Unchanged: 0/0
  7338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7339 ;;      Params:         0       4       0       0       0
  7340 ;;      Locals:         0       2       0       0       0
  7341 ;;      Temps:          0       5       0       0       0
  7342 ;;      Totals:         0      11       0       0       0
  7343 ;;Total ram usage:       11 bytes
  7344 ;; Hardware stack levels used:    1
  7345 ;; This function calls:
  7346 ;;		Nothing
  7347 ;; This function is called by:
  7348 ;;		_sprintf
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           
  7353                           ;psect for function ___fltol
  7354  0807                     ___fltol:
  7355  0807                     l3084:	
  7356                           ;incstack = 0
  7357                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7358                           
  7359  0807  1003               	clrc
  7360  0808  1283               	bcf	3,5	;RP0=0, select bank0
  7361  0809  1303               	bcf	3,6	;RP1=0, select bank0
  7362  080A  0D53               	rlf	___fltol@f1+2,w
  7363  080B  0D54               	rlf	___fltol@f1+3,w
  7364  080C  00D5               	movwf	??___fltol
  7365  080D  0855               	movf	??___fltol,w
  7366  080E  00DB               	movwf	___fltol@exp1
  7367  080F  085B               	movf	___fltol@exp1,w
  7368  0810  1D03               	btfss	3,2
  7369  0811  2813               	goto	u4831
  7370  0812  2814               	goto	u4830
  7371  0813                     u4831:
  7372  0813  281D               	goto	l3090
  7373  0814                     u4830:
  7374  0814                     l3086:
  7375  0814  3000               	movlw	0
  7376  0815  00D4               	movwf	?___fltol+3
  7377  0816  3000               	movlw	0
  7378  0817  00D3               	movwf	?___fltol+2
  7379  0818  3000               	movlw	0
  7380  0819  00D2               	movwf	?___fltol+1
  7381  081A  3000               	movlw	0
  7382  081B  00D1               	movwf	?___fltol
  7383  081C  2882               	goto	l596
  7384  081D                     l3090:
  7385  081D  0851               	movf	___fltol@f1,w
  7386  081E  00D5               	movwf	??___fltol
  7387  081F  0852               	movf	___fltol@f1+1,w
  7388  0820  00D6               	movwf	??___fltol+1
  7389  0821  0853               	movf	___fltol@f1+2,w
  7390  0822  00D7               	movwf	??___fltol+2
  7391  0823  0854               	movf	___fltol@f1+3,w
  7392  0824  00D8               	movwf	??___fltol+3
  7393  0825  301F               	movlw	31
  7394  0826                     u4845:
  7395  0826  1003               	clrc
  7396  0827  0CD8               	rrf	??___fltol+3,f
  7397  0828  0CD7               	rrf	??___fltol+2,f
  7398  0829  0CD6               	rrf	??___fltol+1,f
  7399  082A  0CD5               	rrf	??___fltol,f
  7400  082B                     u4840:
  7401  082B  3EFF               	addlw	-1
  7402  082C  1D03               	skipz
  7403  082D  2826               	goto	u4845
  7404  082E  0855               	movf	??___fltol,w
  7405  082F  00D9               	movwf	??___fltol+4
  7406  0830  0859               	movf	??___fltol+4,w
  7407  0831  00DA               	movwf	___fltol@sign1
  7408  0832                     l3092:
  7409  0832  17D3               	bsf	___fltol@f1+2,7
  7410  0833                     l3094:
  7411  0833  30FF               	movlw	255
  7412  0834  05D1               	andwf	___fltol@f1,f
  7413  0835  30FF               	movlw	255
  7414  0836  05D2               	andwf	___fltol@f1+1,f
  7415  0837  30FF               	movlw	255
  7416  0838  05D3               	andwf	___fltol@f1+2,f
  7417  0839  3000               	movlw	0
  7418  083A  05D4               	andwf	___fltol@f1+3,f
  7419  083B                     l3096:
  7420  083B  3096               	movlw	150
  7421  083C  02DB               	subwf	___fltol@exp1,f
  7422  083D                     l3098:
  7423  083D  1FDB               	btfss	___fltol@exp1,7
  7424  083E  2840               	goto	u4851
  7425  083F  2841               	goto	u4850
  7426  0840                     u4851:
  7427  0840  285B               	goto	l3108
  7428  0841                     u4850:
  7429  0841                     l3100:
  7430  0841  085B               	movf	___fltol@exp1,w
  7431  0842  3A80               	xorlw	128
  7432  0843  3E97               	addlw	151
  7433  0844  1803               	skipnc
  7434  0845  2847               	goto	u4861
  7435  0846  2848               	goto	u4860
  7436  0847                     u4861:
  7437  0847  2849               	goto	l3106
  7438  0848                     u4860:
  7439  0848  2814               	goto	l3086
  7440  0849                     l3106:
  7441  0849  3001               	movlw	1
  7442  084A                     u4875:
  7443  084A  1003               	clrc
  7444  084B  0CD4               	rrf	___fltol@f1+3,f
  7445  084C  0CD3               	rrf	___fltol@f1+2,f
  7446  084D  0CD2               	rrf	___fltol@f1+1,f
  7447  084E  0CD1               	rrf	___fltol@f1,f
  7448  084F  3EFF               	addlw	-1
  7449  0850  1D03               	skipz
  7450  0851  284A               	goto	u4875
  7451  0852  3001               	movlw	1
  7452  0853  00D5               	movwf	??___fltol
  7453  0854  0855               	movf	??___fltol,w
  7454  0855  07DB               	addwf	___fltol@exp1,f
  7455  0856  1D03               	btfss	3,2
  7456  0857  2859               	goto	u4881
  7457  0858  285A               	goto	u4880
  7458  0859                     u4881:
  7459  0859  2849               	goto	l3106
  7460  085A                     u4880:
  7461  085A  2872               	goto	l3116
  7462  085B                     l3108:
  7463  085B  3020               	movlw	32
  7464  085C  025B               	subwf	___fltol@exp1,w
  7465  085D  1C03               	skipc
  7466  085E  2860               	goto	u4891
  7467  085F  2861               	goto	u4890
  7468  0860                     u4891:
  7469  0860  286D               	goto	l603
  7470  0861                     u4890:
  7471  0861  2814               	goto	l3086
  7472  0862                     l3114:
  7473  0862  3001               	movlw	1
  7474  0863  00D5               	movwf	??___fltol
  7475  0864                     u4905:
  7476  0864  1003               	clrc
  7477  0865  0DD1               	rlf	___fltol@f1,f
  7478  0866  0DD2               	rlf	___fltol@f1+1,f
  7479  0867  0DD3               	rlf	___fltol@f1+2,f
  7480  0868  0DD4               	rlf	___fltol@f1+3,f
  7481  0869  0BD5               	decfsz	??___fltol,f
  7482  086A  2864               	goto	u4905
  7483  086B  3001               	movlw	1
  7484  086C  02DB               	subwf	___fltol@exp1,f
  7485  086D                     l603:
  7486  086D  085B               	movf	___fltol@exp1,w
  7487  086E  1D03               	btfss	3,2
  7488  086F  2871               	goto	u4911
  7489  0870  2872               	goto	u4910
  7490  0871                     u4911:
  7491  0871  2862               	goto	l3114
  7492  0872                     u4910:
  7493  0872                     l3116:
  7494  0872  085A               	movf	___fltol@sign1,w
  7495  0873  1903               	btfsc	3,2
  7496  0874  2876               	goto	u4921
  7497  0875  2877               	goto	u4920
  7498  0876                     u4921:
  7499  0876  2882               	goto	l606
  7500  0877                     u4920:
  7501  0877                     l3118:
  7502  0877  09D1               	comf	___fltol@f1,f
  7503  0878  09D2               	comf	___fltol@f1+1,f
  7504  0879  09D3               	comf	___fltol@f1+2,f
  7505  087A  09D4               	comf	___fltol@f1+3,f
  7506  087B  0AD1               	incf	___fltol@f1,f
  7507  087C  1903               	skipnz
  7508  087D  0AD2               	incf	___fltol@f1+1,f
  7509  087E  1903               	skipnz
  7510  087F  0AD3               	incf	___fltol@f1+2,f
  7511  0880  1903               	skipnz
  7512  0881  0AD4               	incf	___fltol@f1+3,f
  7513  0882                     l606:
  7514  0882                     l596:
  7515  0882  0008               	return
  7516  0883                     __end_of___fltol:
  7517                           
  7518                           	psect	text19
  7519  1983                     __ptext19:	
  7520 ;; *************** function ___flsub *****************
  7521 ;; Defined at:
  7522 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7523 ;; Parameters:    Size  Location     Type
  7524 ;;  a               4   70[BANK0 ] long 
  7525 ;;  b               4   74[BANK0 ] long 
  7526 ;; Auto vars:     Size  Location     Type
  7527 ;;		None
  7528 ;; Return value:  Size  Location     Type
  7529 ;;                  4   70[BANK0 ] long 
  7530 ;; Registers used:
  7531 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7532 ;; Tracked objects:
  7533 ;;		On entry : 0/0
  7534 ;;		On exit  : 0/0
  7535 ;;		Unchanged: 0/0
  7536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7537 ;;      Params:         0       8       0       0       0
  7538 ;;      Locals:         0       0       0       0       0
  7539 ;;      Temps:          0       0       0       0       0
  7540 ;;      Totals:         0       8       0       0       0
  7541 ;;Total ram usage:        8 bytes
  7542 ;; Hardware stack levels used:    1
  7543 ;; Hardware stack levels required when called:    1
  7544 ;; This function calls:
  7545 ;;		___fladd
  7546 ;; This function is called by:
  7547 ;;		_sprintf
  7548 ;; This function uses a non-reentrant model
  7549 ;;
  7550                           
  7551                           
  7552                           ;psect for function ___flsub
  7553  1983                     ___flsub:
  7554  1983                     l3140:	
  7555                           ;incstack = 0
  7556                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7557                           
  7558  1983  3080               	movlw	128
  7559  1984  1283               	bcf	3,5	;RP0=0, select bank0
  7560  1985  1303               	bcf	3,6	;RP1=0, select bank0
  7561  1986  06E9               	xorwf	___flsub@a+3,f
  7562  1987                     l3142:
  7563  1987  086D               	movf	___flsub@b+3,w
  7564  1988  00D5               	movwf	___fladd@b+3
  7565  1989  086C               	movf	___flsub@b+2,w
  7566  198A  00D4               	movwf	___fladd@b+2
  7567  198B  086B               	movf	___flsub@b+1,w
  7568  198C  00D3               	movwf	___fladd@b+1
  7569  198D  086A               	movf	___flsub@b,w
  7570  198E  00D2               	movwf	___fladd@b
  7571  198F  0869               	movf	___flsub@a+3,w
  7572  1990  00D9               	movwf	___fladd@a+3
  7573  1991  0868               	movf	___flsub@a+2,w
  7574  1992  00D8               	movwf	___fladd@a+2
  7575  1993  0867               	movf	___flsub@a+1,w
  7576  1994  00D7               	movwf	___fladd@a+1
  7577  1995  0866               	movf	___flsub@a,w
  7578  1996  00D6               	movwf	___fladd@a
  7579  1997  160A  118A  22B3  160A  158A  	fcall	___fladd
  7580  199C  1283               	bcf	3,5	;RP0=0, select bank0
  7581  199D  1303               	bcf	3,6	;RP1=0, select bank0
  7582  199E  0855               	movf	?___fladd+3,w
  7583  199F  00E9               	movwf	?___flsub+3
  7584  19A0  0854               	movf	?___fladd+2,w
  7585  19A1  00E8               	movwf	?___flsub+2
  7586  19A2  0853               	movf	?___fladd+1,w
  7587  19A3  00E7               	movwf	?___flsub+1
  7588  19A4  0852               	movf	?___fladd,w
  7589  19A5  00E6               	movwf	?___flsub
  7590  19A6                     l766:
  7591  19A6  0008               	return
  7592  19A7                     __end_of___flsub:
  7593                           
  7594                           	psect	text20
  7595  12B3                     __ptext20:	
  7596 ;; *************** function ___fladd *****************
  7597 ;; Defined at:
  7598 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7599 ;; Parameters:    Size  Location     Type
  7600 ;;  b               4   50[BANK0 ] long 
  7601 ;;  a               4   54[BANK0 ] long 
  7602 ;; Auto vars:     Size  Location     Type
  7603 ;;  grs             1   69[BANK0 ] unsigned char 
  7604 ;;  bexp            1   68[BANK0 ] unsigned char 
  7605 ;;  aexp            1   67[BANK0 ] unsigned char 
  7606 ;;  signs           1   66[BANK0 ] unsigned char 
  7607 ;; Return value:  Size  Location     Type
  7608 ;;                  4   50[BANK0 ] unsigned char 
  7609 ;; Registers used:
  7610 ;;		wreg, status,2, status,0, btemp+1
  7611 ;; Tracked objects:
  7612 ;;		On entry : 0/0
  7613 ;;		On exit  : 0/0
  7614 ;;		Unchanged: 0/0
  7615 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7616 ;;      Params:         0       8       0       0       0
  7617 ;;      Locals:         0       4       0       0       0
  7618 ;;      Temps:          0       8       0       0       0
  7619 ;;      Totals:         0      20       0       0       0
  7620 ;;Total ram usage:       20 bytes
  7621 ;; Hardware stack levels used:    1
  7622 ;; This function calls:
  7623 ;;		Nothing
  7624 ;; This function is called by:
  7625 ;;		_sprintf
  7626 ;;		___flsub
  7627 ;; This function uses a non-reentrant model
  7628 ;;
  7629                           
  7630                           
  7631                           ;psect for function ___fladd
  7632  12B3                     ___fladd:
  7633  12B3                     l2474:	
  7634                           ;incstack = 0
  7635                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7636                           
  7637  12B3  1283               	bcf	3,5	;RP0=0, select bank0
  7638  12B4  1303               	bcf	3,6	;RP1=0, select bank0
  7639  12B5  0855               	movf	___fladd@b+3,w
  7640  12B6  3980               	andlw	128
  7641  12B7  00DA               	movwf	??___fladd
  7642  12B8  085A               	movf	??___fladd,w
  7643  12B9  00E2               	movwf	___fladd@signs
  7644  12BA                     l2476:
  7645  12BA  0855               	movf	___fladd@b+3,w
  7646  12BB  00DA               	movwf	??___fladd
  7647  12BC  075A               	addwf	??___fladd,w
  7648  12BD  00DB               	movwf	??___fladd+1
  7649  12BE  085B               	movf	??___fladd+1,w
  7650  12BF  00E4               	movwf	___fladd@bexp
  7651  12C0                     l2478:
  7652  12C0  1FD4               	btfss	___fladd@b+2,7
  7653  12C1  2AC3               	goto	u3241
  7654  12C2  2AC4               	goto	u3240
  7655  12C3                     u3241:
  7656  12C3  2AC5               	goto	l2482
  7657  12C4                     u3240:
  7658  12C4                     l2480:
  7659  12C4  1464               	bsf	___fladd@bexp,0
  7660  12C5                     l2482:
  7661  12C5  0864               	movf	___fladd@bexp,w
  7662  12C6  1903               	btfsc	3,2
  7663  12C7  2AC9               	goto	u3251
  7664  12C8  2ACA               	goto	u3250
  7665  12C9                     u3251:
  7666  12C9  2ADA               	goto	l2492
  7667  12CA                     u3250:
  7668  12CA                     l2484:
  7669  12CA  0A64               	incf	___fladd@bexp,w
  7670  12CB  1D03               	btfss	3,2
  7671  12CC  2ACE               	goto	u3261
  7672  12CD  2ACF               	goto	u3260
  7673  12CE                     u3261:
  7674  12CE  2AD7               	goto	l2488
  7675  12CF                     u3260:
  7676  12CF                     l2486:
  7677  12CF  3000               	movlw	0
  7678  12D0  00D5               	movwf	___fladd@b+3
  7679  12D1  3000               	movlw	0
  7680  12D2  00D4               	movwf	___fladd@b+2
  7681  12D3  3000               	movlw	0
  7682  12D4  00D3               	movwf	___fladd@b+1
  7683  12D5  3000               	movlw	0
  7684  12D6  00D2               	movwf	___fladd@b
  7685  12D7                     l2488:
  7686  12D7  17D4               	bsf	___fladd@b+2,7
  7687  12D8                     l2490:
  7688  12D8  01D5               	clrf	___fladd@b+3
  7689  12D9  2AE2               	goto	l2494
  7690  12DA                     l2492:
  7691  12DA  3000               	movlw	0
  7692  12DB  00D5               	movwf	___fladd@b+3
  7693  12DC  3000               	movlw	0
  7694  12DD  00D4               	movwf	___fladd@b+2
  7695  12DE  3000               	movlw	0
  7696  12DF  00D3               	movwf	___fladd@b+1
  7697  12E0  3000               	movlw	0
  7698  12E1  00D2               	movwf	___fladd@b
  7699  12E2                     l2494:
  7700  12E2  0859               	movf	___fladd@a+3,w
  7701  12E3  3980               	andlw	128
  7702  12E4  00DA               	movwf	??___fladd
  7703  12E5  085A               	movf	??___fladd,w
  7704  12E6  00E3               	movwf	___fladd@aexp
  7705  12E7                     l2496:
  7706  12E7  0863               	movf	___fladd@aexp,w
  7707  12E8  0662               	xorwf	___fladd@signs,w
  7708  12E9  1903               	skipnz
  7709  12EA  2AEC               	goto	u3271
  7710  12EB  2AED               	goto	u3270
  7711  12EC                     u3271:
  7712  12EC  2AEE               	goto	l2500
  7713  12ED                     u3270:
  7714  12ED                     l2498:
  7715  12ED  1762               	bsf	___fladd@signs,6
  7716  12EE                     l2500:
  7717  12EE  0859               	movf	___fladd@a+3,w
  7718  12EF  00DA               	movwf	??___fladd
  7719  12F0  075A               	addwf	??___fladd,w
  7720  12F1  00DB               	movwf	??___fladd+1
  7721  12F2  085B               	movf	??___fladd+1,w
  7722  12F3  00E3               	movwf	___fladd@aexp
  7723  12F4                     l2502:
  7724  12F4  1FD8               	btfss	___fladd@a+2,7
  7725  12F5  2AF7               	goto	u3281
  7726  12F6  2AF8               	goto	u3280
  7727  12F7                     u3281:
  7728  12F7  2AF9               	goto	l2506
  7729  12F8                     u3280:
  7730  12F8                     l2504:
  7731  12F8  1463               	bsf	___fladd@aexp,0
  7732  12F9                     l2506:
  7733  12F9  0863               	movf	___fladd@aexp,w
  7734  12FA  1903               	btfsc	3,2
  7735  12FB  2AFD               	goto	u3291
  7736  12FC  2AFE               	goto	u3290
  7737  12FD                     u3291:
  7738  12FD  2B0E               	goto	l2516
  7739  12FE                     u3290:
  7740  12FE                     l2508:
  7741  12FE  0A63               	incf	___fladd@aexp,w
  7742  12FF  1D03               	btfss	3,2
  7743  1300  2B02               	goto	u3301
  7744  1301  2B03               	goto	u3300
  7745  1302                     u3301:
  7746  1302  2B0B               	goto	l2512
  7747  1303                     u3300:
  7748  1303                     l2510:
  7749  1303  3000               	movlw	0
  7750  1304  00D9               	movwf	___fladd@a+3
  7751  1305  3000               	movlw	0
  7752  1306  00D8               	movwf	___fladd@a+2
  7753  1307  3000               	movlw	0
  7754  1308  00D7               	movwf	___fladd@a+1
  7755  1309  3000               	movlw	0
  7756  130A  00D6               	movwf	___fladd@a
  7757  130B                     l2512:
  7758  130B  17D8               	bsf	___fladd@a+2,7
  7759  130C                     l2514:
  7760  130C  01D9               	clrf	___fladd@a+3
  7761  130D  2B16               	goto	l720
  7762  130E                     l2516:
  7763  130E  3000               	movlw	0
  7764  130F  00D9               	movwf	___fladd@a+3
  7765  1310  3000               	movlw	0
  7766  1311  00D8               	movwf	___fladd@a+2
  7767  1312  3000               	movlw	0
  7768  1313  00D7               	movwf	___fladd@a+1
  7769  1314  3000               	movlw	0
  7770  1315  00D6               	movwf	___fladd@a
  7771  1316                     l720:
  7772  1316  0864               	movf	___fladd@bexp,w
  7773  1317  0263               	subwf	___fladd@aexp,w
  7774  1318  1803               	skipnc
  7775  1319  2B1B               	goto	u3311
  7776  131A  2B1C               	goto	u3310
  7777  131B                     u3311:
  7778  131B  2B60               	goto	l2552
  7779  131C                     u3310:
  7780  131C                     l2518:
  7781  131C  1F62               	btfss	___fladd@signs,6
  7782  131D  2B1F               	goto	u3321
  7783  131E  2B20               	goto	u3320
  7784  131F                     u3321:
  7785  131F  2B24               	goto	l2522
  7786  1320                     u3320:
  7787  1320                     l2520:
  7788  1320  3080               	movlw	128
  7789  1321  00DA               	movwf	??___fladd
  7790  1322  085A               	movf	??___fladd,w
  7791  1323  06E2               	xorwf	___fladd@signs,f
  7792  1324                     l2522:
  7793  1324  0864               	movf	___fladd@bexp,w
  7794  1325  00DA               	movwf	??___fladd
  7795  1326  085A               	movf	??___fladd,w
  7796  1327  00E5               	movwf	___fladd@grs
  7797  1328                     l2524:
  7798  1328  0863               	movf	___fladd@aexp,w
  7799  1329  00DA               	movwf	??___fladd
  7800  132A  085A               	movf	??___fladd,w
  7801  132B  00E4               	movwf	___fladd@bexp
  7802  132C                     l2526:
  7803  132C  0865               	movf	___fladd@grs,w
  7804  132D  00DA               	movwf	??___fladd
  7805  132E  085A               	movf	??___fladd,w
  7806  132F  00E3               	movwf	___fladd@aexp
  7807  1330                     l2528:
  7808  1330  0852               	movf	___fladd@b,w
  7809  1331  00DA               	movwf	??___fladd
  7810  1332  085A               	movf	??___fladd,w
  7811  1333  00E5               	movwf	___fladd@grs
  7812  1334                     l2530:
  7813  1334  0856               	movf	___fladd@a,w
  7814  1335  00DA               	movwf	??___fladd
  7815  1336  085A               	movf	??___fladd,w
  7816  1337  00D2               	movwf	___fladd@b
  7817  1338                     l2532:
  7818  1338  0865               	movf	___fladd@grs,w
  7819  1339  00DA               	movwf	??___fladd
  7820  133A  085A               	movf	??___fladd,w
  7821  133B  00D6               	movwf	___fladd@a
  7822  133C                     l2534:
  7823  133C  0853               	movf	___fladd@b+1,w
  7824  133D  00DA               	movwf	??___fladd
  7825  133E  085A               	movf	??___fladd,w
  7826  133F  00E5               	movwf	___fladd@grs
  7827  1340                     l2536:
  7828  1340  0857               	movf	___fladd@a+1,w
  7829  1341  00DA               	movwf	??___fladd
  7830  1342  085A               	movf	??___fladd,w
  7831  1343  00D3               	movwf	___fladd@b+1
  7832  1344                     l2538:
  7833  1344  0865               	movf	___fladd@grs,w
  7834  1345  00DA               	movwf	??___fladd
  7835  1346  085A               	movf	??___fladd,w
  7836  1347  00D7               	movwf	___fladd@a+1
  7837  1348                     l2540:
  7838  1348  0854               	movf	___fladd@b+2,w
  7839  1349  00DA               	movwf	??___fladd
  7840  134A  085A               	movf	??___fladd,w
  7841  134B  00E5               	movwf	___fladd@grs
  7842  134C                     l2542:
  7843  134C  0858               	movf	___fladd@a+2,w
  7844  134D  00DA               	movwf	??___fladd
  7845  134E  085A               	movf	??___fladd,w
  7846  134F  00D4               	movwf	___fladd@b+2
  7847  1350                     l2544:
  7848  1350  0865               	movf	___fladd@grs,w
  7849  1351  00DA               	movwf	??___fladd
  7850  1352  085A               	movf	??___fladd,w
  7851  1353  00D8               	movwf	___fladd@a+2
  7852  1354                     l2546:
  7853  1354  0855               	movf	___fladd@b+3,w
  7854  1355  00DA               	movwf	??___fladd
  7855  1356  085A               	movf	??___fladd,w
  7856  1357  00E5               	movwf	___fladd@grs
  7857  1358                     l2548:
  7858  1358  0859               	movf	___fladd@a+3,w
  7859  1359  00DA               	movwf	??___fladd
  7860  135A  085A               	movf	??___fladd,w
  7861  135B  00D5               	movwf	___fladd@b+3
  7862  135C                     l2550:
  7863  135C  0865               	movf	___fladd@grs,w
  7864  135D  00DA               	movwf	??___fladd
  7865  135E  085A               	movf	??___fladd,w
  7866  135F  00D9               	movwf	___fladd@a+3
  7867  1360                     l2552:
  7868  1360  01E5               	clrf	___fladd@grs
  7869  1361                     l2554:
  7870  1361  0863               	movf	___fladd@aexp,w
  7871  1362  00DA               	movwf	??___fladd
  7872  1363  01DB               	clrf	??___fladd+1
  7873  1364  085B               	movf	??___fladd+1,w
  7874  1365  00DD               	movwf	??___fladd+3
  7875  1366  0864               	movf	___fladd@bexp,w
  7876  1367  025A               	subwf	??___fladd,w
  7877  1368  00DC               	movwf	??___fladd+2
  7878  1369  1C03               	skipc
  7879  136A  03DD               	decf	??___fladd+3,f
  7880  136B  085D               	movf	??___fladd+3,w
  7881  136C  3A80               	xorlw	128
  7882  136D  00FF               	movwf	btemp+1
  7883  136E  3080               	movlw	128
  7884  136F  027F               	subwf	btemp+1,w
  7885  1370  1D03               	skipz
  7886  1371  2B74               	goto	u3335
  7887  1372  301A               	movlw	26
  7888  1373  025C               	subwf	??___fladd+2,w
  7889  1374                     u3335:
  7890  1374  1C03               	skipc
  7891  1375  2B77               	goto	u3331
  7892  1376  2B78               	goto	u3330
  7893  1377                     u3331:
  7894  1377  2BB5               	goto	l2570
  7895  1378                     u3330:
  7896  1378                     l2556:
  7897  1378  1283               	bcf	3,5	;RP0=0, select bank0
  7898  1379  1303               	bcf	3,6	;RP1=0, select bank0
  7899  137A  0855               	movf	___fladd@b+3,w
  7900  137B  0454               	iorwf	___fladd@b+2,w
  7901  137C  0453               	iorwf	___fladd@b+1,w
  7902  137D  0452               	iorwf	___fladd@b,w
  7903  137E  1D03               	skipz
  7904  137F  2B81               	goto	u3341
  7905  1380  2B83               	goto	u3340
  7906  1381                     u3341:
  7907  1381  3001               	movlw	1
  7908  1382  2B84               	goto	u3350
  7909  1383                     u3340:
  7910  1383  3000               	movlw	0
  7911  1384                     u3350:
  7912  1384  00DA               	movwf	??___fladd
  7913  1385  085A               	movf	??___fladd,w
  7914  1386  00E5               	movwf	___fladd@grs
  7915  1387  3000               	movlw	0
  7916  1388  00D5               	movwf	___fladd@b+3
  7917  1389  3000               	movlw	0
  7918  138A  00D4               	movwf	___fladd@b+2
  7919  138B  3000               	movlw	0
  7920  138C  00D3               	movwf	___fladd@b+1
  7921  138D  3000               	movlw	0
  7922  138E  00D2               	movwf	___fladd@b
  7923  138F  0863               	movf	___fladd@aexp,w
  7924  1390  00DA               	movwf	??___fladd
  7925  1391  085A               	movf	??___fladd,w
  7926  1392  00E4               	movwf	___fladd@bexp
  7927  1393  2BBD               	goto	l724
  7928  1394                     l726:
  7929  1394  1C65               	btfss	___fladd@grs,0
  7930  1395  2B97               	goto	u3361
  7931  1396  2B98               	goto	u3360
  7932  1397                     u3361:
  7933  1397  2BA1               	goto	l2560
  7934  1398                     u3360:
  7935  1398                     l2558:
  7936  1398  0865               	movf	___fladd@grs,w
  7937  1399  00DA               	movwf	??___fladd
  7938  139A  1003               	clrc
  7939  139B  0C5A               	rrf	??___fladd,w
  7940  139C  3801               	iorlw	1
  7941  139D  00DB               	movwf	??___fladd+1
  7942  139E  085B               	movf	??___fladd+1,w
  7943  139F  00E5               	movwf	___fladd@grs
  7944  13A0  2BA3               	goto	l2562
  7945  13A1                     l2560:
  7946  13A1  1003               	clrc
  7947  13A2  0CE5               	rrf	___fladd@grs,f
  7948  13A3                     l2562:
  7949  13A3  1C52               	btfss	___fladd@b,0
  7950  13A4  2BA6               	goto	u3371
  7951  13A5  2BA7               	goto	u3370
  7952  13A6                     u3371:
  7953  13A6  2BA8               	goto	l2566
  7954  13A7                     u3370:
  7955  13A7                     l2564:
  7956  13A7  17E5               	bsf	___fladd@grs,7
  7957  13A8                     l2566:
  7958  13A8  3001               	movlw	1
  7959  13A9  00DA               	movwf	??___fladd
  7960  13AA                     u3385:
  7961  13AA  0D55               	rlf	___fladd@b+3,w
  7962  13AB  0CD5               	rrf	___fladd@b+3,f
  7963  13AC  0CD4               	rrf	___fladd@b+2,f
  7964  13AD  0CD3               	rrf	___fladd@b+1,f
  7965  13AE  0CD2               	rrf	___fladd@b,f
  7966  13AF  0BDA               	decfsz	??___fladd& (0+127),f
  7967  13B0  2BAA               	goto	u3385
  7968  13B1                     l2568:
  7969  13B1  3001               	movlw	1
  7970  13B2  00DA               	movwf	??___fladd
  7971  13B3  085A               	movf	??___fladd,w
  7972  13B4  07E4               	addwf	___fladd@bexp,f
  7973  13B5                     l2570:
  7974  13B5  1283               	bcf	3,5	;RP0=0, select bank0
  7975  13B6  1303               	bcf	3,6	;RP1=0, select bank0
  7976  13B7  0863               	movf	___fladd@aexp,w
  7977  13B8  0264               	subwf	___fladd@bexp,w
  7978  13B9  1C03               	skipc
  7979  13BA  2BBC               	goto	u3391
  7980  13BB  2BBD               	goto	u3390
  7981  13BC                     u3391:
  7982  13BC  2B94               	goto	l726
  7983  13BD                     u3390:
  7984  13BD                     l724:
  7985  13BD  1B62               	btfsc	___fladd@signs,6
  7986  13BE  2BC0               	goto	u3401
  7987  13BF  2BC1               	goto	u3400
  7988  13C0                     u3401:
  7989  13C0  2C0C               	goto	l2596
  7990  13C1                     u3400:
  7991  13C1                     l2572:
  7992  13C1  0864               	movf	___fladd@bexp,w
  7993  13C2  1D03               	btfss	3,2
  7994  13C3  2BC5               	goto	u3411
  7995  13C4  2BC6               	goto	u3410
  7996  13C5                     u3411:
  7997  13C5  2BCF               	goto	l2578
  7998  13C6                     u3410:
  7999  13C6                     l2574:
  8000  13C6  3000               	movlw	0
  8001  13C7  00D5               	movwf	?___fladd+3
  8002  13C8  3000               	movlw	0
  8003  13C9  00D4               	movwf	?___fladd+2
  8004  13CA  3000               	movlw	0
  8005  13CB  00D3               	movwf	?___fladd+1
  8006  13CC  3000               	movlw	0
  8007  13CD  00D2               	movwf	?___fladd
  8008  13CE  2D3A               	goto	l733
  8009  13CF                     l2578:
  8010  13CF  0856               	movf	___fladd@a,w
  8011  13D0  07D2               	addwf	___fladd@b,f
  8012  13D1  0857               	movf	___fladd@a+1,w
  8013  13D2  1103               	clrz
  8014  13D3  1803               	skipnc
  8015  13D4  3E01               	addlw	1
  8016  13D5  1903               	skipnz
  8017  13D6  2BD8               	goto	u3421
  8018  13D7  07D3               	addwf	___fladd@b+1,f
  8019  13D8                     u3421:
  8020  13D8  0858               	movf	___fladd@a+2,w
  8021  13D9  1103               	clrz
  8022  13DA  1803               	skipnc
  8023  13DB  3E01               	addlw	1
  8024  13DC  1903               	skipnz
  8025  13DD  2BDF               	goto	u3422
  8026  13DE  07D4               	addwf	___fladd@b+2,f
  8027  13DF                     u3422:
  8028  13DF  0859               	movf	___fladd@a+3,w
  8029  13E0  1103               	clrz
  8030  13E1  1803               	skipnc
  8031  13E2  3E01               	addlw	1
  8032  13E3  1903               	skipnz
  8033  13E4  2BE6               	goto	u3423
  8034  13E5  07D5               	addwf	___fladd@b+3,f
  8035  13E6                     u3423:
  8036  13E6                     l2580:
  8037  13E6  1C55               	btfss	___fladd@b+3,0
  8038  13E7  2BE9               	goto	u3431
  8039  13E8  2BEA               	goto	u3430
  8040  13E9                     u3431:
  8041  13E9  2CC0               	goto	l2630
  8042  13EA                     u3430:
  8043  13EA                     l2582:
  8044  13EA  1C65               	btfss	___fladd@grs,0
  8045  13EB  2BED               	goto	u3441
  8046  13EC  2BEE               	goto	u3440
  8047  13ED                     u3441:
  8048  13ED  2BF7               	goto	l2586
  8049  13EE                     u3440:
  8050  13EE                     l2584:
  8051  13EE  0865               	movf	___fladd@grs,w
  8052  13EF  00DA               	movwf	??___fladd
  8053  13F0  1003               	clrc
  8054  13F1  0C5A               	rrf	??___fladd,w
  8055  13F2  3801               	iorlw	1
  8056  13F3  00DB               	movwf	??___fladd+1
  8057  13F4  085B               	movf	??___fladd+1,w
  8058  13F5  00E5               	movwf	___fladd@grs
  8059  13F6  2BF9               	goto	l2588
  8060  13F7                     l2586:
  8061  13F7  1003               	clrc
  8062  13F8  0CE5               	rrf	___fladd@grs,f
  8063  13F9                     l2588:
  8064  13F9  1C52               	btfss	___fladd@b,0
  8065  13FA  2BFC               	goto	u3451
  8066  13FB  2BFD               	goto	u3450
  8067  13FC                     u3451:
  8068  13FC  2BFE               	goto	l2592
  8069  13FD                     u3450:
  8070  13FD                     l2590:
  8071  13FD  17E5               	bsf	___fladd@grs,7
  8072  13FE                     l2592:
  8073  13FE  3001               	movlw	1
  8074  13FF  00DA               	movwf	??___fladd
  8075  1400                     u3465:
  8076  1400  0D55               	rlf	___fladd@b+3,w
  8077  1401  0CD5               	rrf	___fladd@b+3,f
  8078  1402  0CD4               	rrf	___fladd@b+2,f
  8079  1403  0CD3               	rrf	___fladd@b+1,f
  8080  1404  0CD2               	rrf	___fladd@b,f
  8081  1405  0BDA               	decfsz	??___fladd& (0+127),f
  8082  1406  2C00               	goto	u3465
  8083  1407                     l2594:
  8084  1407  3001               	movlw	1
  8085  1408  00DA               	movwf	??___fladd
  8086  1409  085A               	movf	??___fladd,w
  8087  140A  07E4               	addwf	___fladd@bexp,f
  8088  140B  2CC0               	goto	l2630
  8089  140C                     l2596:
  8090  140C  0855               	movf	___fladd@b+3,w
  8091  140D  3A80               	xorlw	128
  8092  140E  00FF               	movwf	btemp+1
  8093  140F  0859               	movf	___fladd@a+3,w
  8094  1410  3A80               	xorlw	128
  8095  1411  027F               	subwf	btemp+1,w
  8096  1412  1D03               	skipz
  8097  1413  2C1E               	goto	u3473
  8098  1414  0858               	movf	___fladd@a+2,w
  8099  1415  0254               	subwf	___fladd@b+2,w
  8100  1416  1D03               	skipz
  8101  1417  2C1E               	goto	u3473
  8102  1418  0857               	movf	___fladd@a+1,w
  8103  1419  0253               	subwf	___fladd@b+1,w
  8104  141A  1D03               	skipz
  8105  141B  2C1E               	goto	u3473
  8106  141C  0856               	movf	___fladd@a,w
  8107  141D  0252               	subwf	___fladd@b,w
  8108  141E                     u3473:
  8109  141E  1803               	skipnc
  8110  141F  2C21               	goto	u3471
  8111  1420  2C22               	goto	u3470
  8112  1421                     u3471:
  8113  1421  2C7A               	goto	l2606
  8114  1422                     u3470:
  8115  1422                     l2598:
  8116  1422  30FF               	movlw	255
  8117  1423  00DA               	movwf	??___fladd
  8118  1424  30FF               	movlw	255
  8119  1425  00DB               	movwf	??___fladd+1
  8120  1426  30FF               	movlw	255
  8121  1427  00DC               	movwf	??___fladd+2
  8122  1428  30FF               	movlw	255
  8123  1429  00DD               	movwf	??___fladd+3
  8124  142A  0856               	movf	___fladd@a,w
  8125  142B  00DE               	movwf	??___fladd+4
  8126  142C  0857               	movf	___fladd@a+1,w
  8127  142D  00DF               	movwf	??___fladd+5
  8128  142E  0858               	movf	___fladd@a+2,w
  8129  142F  00E0               	movwf	??___fladd+6
  8130  1430  0859               	movf	___fladd@a+3,w
  8131  1431  00E1               	movwf	??___fladd+7
  8132  1432  0852               	movf	___fladd@b,w
  8133  1433  02DE               	subwf	??___fladd+4,f
  8134  1434  0853               	movf	___fladd@b+1,w
  8135  1435  1C03               	skipc
  8136  1436  0F53               	incfsz	___fladd@b+1,w
  8137  1437  2C39               	goto	u3481
  8138  1438  2C3A               	goto	u3482
  8139  1439                     u3481:
  8140  1439  02DF               	subwf	??___fladd+5,f
  8141  143A                     u3482:
  8142  143A  0854               	movf	___fladd@b+2,w
  8143  143B  1C03               	skipc
  8144  143C  0F54               	incfsz	___fladd@b+2,w
  8145  143D  2C3F               	goto	u3483
  8146  143E  2C40               	goto	u3484
  8147  143F                     u3483:
  8148  143F  02E0               	subwf	??___fladd+6,f
  8149  1440                     u3484:
  8150  1440  0855               	movf	___fladd@b+3,w
  8151  1441  1C03               	skipc
  8152  1442  0F55               	incfsz	___fladd@b+3,w
  8153  1443  2C45               	goto	u3485
  8154  1444  2C46               	goto	u3486
  8155  1445                     u3485:
  8156  1445  02E1               	subwf	??___fladd+7,f
  8157  1446                     u3486:
  8158  1446  085E               	movf	??___fladd+4,w
  8159  1447  07DA               	addwf	??___fladd,f
  8160  1448  085F               	movf	??___fladd+5,w
  8161  1449  1803               	skipnc
  8162  144A  0F5F               	incfsz	??___fladd+5,w
  8163  144B  2C4D               	goto	u3490
  8164  144C  2C4E               	goto	u3491
  8165  144D                     u3490:
  8166  144D  07DB               	addwf	??___fladd+1,f
  8167  144E                     u3491:
  8168  144E  0860               	movf	??___fladd+6,w
  8169  144F  1803               	skipnc
  8170  1450  0F60               	incfsz	??___fladd+6,w
  8171  1451  2C53               	goto	u3492
  8172  1452  2C54               	goto	u3493
  8173  1453                     u3492:
  8174  1453  07DC               	addwf	??___fladd+2,f
  8175  1454                     u3493:
  8176  1454  0861               	movf	??___fladd+7,w
  8177  1455  1803               	skipnc
  8178  1456  0A61               	incf	??___fladd+7,w
  8179  1457  07DD               	addwf	??___fladd+3,f
  8180  1458  085D               	movf	??___fladd+3,w
  8181  1459  00D5               	movwf	___fladd@b+3
  8182  145A  085C               	movf	??___fladd+2,w
  8183  145B  00D4               	movwf	___fladd@b+2
  8184  145C  085B               	movf	??___fladd+1,w
  8185  145D  00D3               	movwf	___fladd@b+1
  8186  145E  085A               	movf	??___fladd,w
  8187  145F  00D2               	movwf	___fladd@b
  8188  1460                     l2600:
  8189  1460  3080               	movlw	128
  8190  1461  00DA               	movwf	??___fladd
  8191  1462  085A               	movf	??___fladd,w
  8192  1463  06E2               	xorwf	___fladd@signs,f
  8193  1464  09E5               	comf	___fladd@grs,f
  8194  1465  0AE5               	incf	___fladd@grs,f
  8195  1466                     l2602:
  8196  1466  0865               	movf	___fladd@grs,w
  8197  1467  1D03               	btfss	3,2
  8198  1468  2C6A               	goto	u3501
  8199  1469  2C6B               	goto	u3500
  8200  146A                     u3501:
  8201  146A  2C88               	goto	l741
  8202  146B                     u3500:
  8203  146B                     l2604:
  8204  146B  3001               	movlw	1
  8205  146C  07D2               	addwf	___fladd@b,f
  8206  146D  3000               	movlw	0
  8207  146E  1803               	skipnc
  8208  146F  3001               	movlw	1
  8209  1470  07D3               	addwf	___fladd@b+1,f
  8210  1471  3000               	movlw	0
  8211  1472  1803               	skipnc
  8212  1473  3001               	movlw	1
  8213  1474  07D4               	addwf	___fladd@b+2,f
  8214  1475  3000               	movlw	0
  8215  1476  1803               	skipnc
  8216  1477  3001               	movlw	1
  8217  1478  07D5               	addwf	___fladd@b+3,f
  8218  1479  2C88               	goto	l741
  8219  147A                     l2606:
  8220  147A  0856               	movf	___fladd@a,w
  8221  147B  02D2               	subwf	___fladd@b,f
  8222  147C  0857               	movf	___fladd@a+1,w
  8223  147D  1C03               	skipc
  8224  147E  0F57               	incfsz	___fladd@a+1,w
  8225  147F  02D3               	subwf	___fladd@b+1,f
  8226  1480  0858               	movf	___fladd@a+2,w
  8227  1481  1C03               	skipc
  8228  1482  0F58               	incfsz	___fladd@a+2,w
  8229  1483  02D4               	subwf	___fladd@b+2,f
  8230  1484  0859               	movf	___fladd@a+3,w
  8231  1485  1C03               	skipc
  8232  1486  0F59               	incfsz	___fladd@a+3,w
  8233  1487  02D5               	subwf	___fladd@b+3,f
  8234  1488                     l741:
  8235  1488  0855               	movf	___fladd@b+3,w
  8236  1489  0454               	iorwf	___fladd@b+2,w
  8237  148A  0453               	iorwf	___fladd@b+1,w
  8238  148B  0452               	iorwf	___fladd@b,w
  8239  148C  1D03               	skipz
  8240  148D  2C8F               	goto	u3511
  8241  148E  2C90               	goto	u3510
  8242  148F                     u3511:
  8243  148F  2CBC               	goto	l2628
  8244  1490                     u3510:
  8245  1490                     l2608:
  8246  1490  0865               	movf	___fladd@grs,w
  8247  1491  1D03               	btfss	3,2
  8248  1492  2C94               	goto	u3521
  8249  1493  2C95               	goto	u3520
  8250  1494                     u3521:
  8251  1494  2CBC               	goto	l2628
  8252  1495                     u3520:
  8253  1495                     l2610:
  8254  1495  3000               	movlw	0
  8255  1496  00D5               	movwf	?___fladd+3
  8256  1497  3000               	movlw	0
  8257  1498  00D4               	movwf	?___fladd+2
  8258  1499  3000               	movlw	0
  8259  149A  00D3               	movwf	?___fladd+1
  8260  149B  3000               	movlw	0
  8261  149C  00D2               	movwf	?___fladd
  8262  149D  2D3A               	goto	l733
  8263  149E                     l2614:
  8264  149E  3001               	movlw	1
  8265  149F  00DA               	movwf	??___fladd
  8266  14A0                     u3535:
  8267  14A0  1003               	clrc
  8268  14A1  0DD2               	rlf	___fladd@b,f
  8269  14A2  0DD3               	rlf	___fladd@b+1,f
  8270  14A3  0DD4               	rlf	___fladd@b+2,f
  8271  14A4  0DD5               	rlf	___fladd@b+3,f
  8272  14A5  0BDA               	decfsz	??___fladd,f
  8273  14A6  2CA0               	goto	u3535
  8274  14A7                     l2616:
  8275  14A7  1FE5               	btfss	___fladd@grs,7
  8276  14A8  2CAA               	goto	u3541
  8277  14A9  2CAB               	goto	u3540
  8278  14AA                     u3541:
  8279  14AA  2CAC               	goto	l745
  8280  14AB                     u3540:
  8281  14AB                     l2618:
  8282  14AB  1452               	bsf	___fladd@b,0
  8283  14AC                     l745:
  8284  14AC  1C65               	btfss	___fladd@grs,0
  8285  14AD  2CAF               	goto	u3551
  8286  14AE  2CB0               	goto	u3550
  8287  14AF                     u3551:
  8288  14AF  2CB3               	goto	l2622
  8289  14B0                     u3550:
  8290  14B0                     l2620:
  8291  14B0  1403               	setc
  8292  14B1  0DE5               	rlf	___fladd@grs,f
  8293  14B2  2CB5               	goto	l2624
  8294  14B3                     l2622:
  8295  14B3  1003               	clrc
  8296  14B4  0DE5               	rlf	___fladd@grs,f
  8297  14B5                     l2624:
  8298  14B5  0864               	movf	___fladd@bexp,w
  8299  14B6  1903               	btfsc	3,2
  8300  14B7  2CB9               	goto	u3561
  8301  14B8  2CBA               	goto	u3560
  8302  14B9                     u3561:
  8303  14B9  2CBC               	goto	l2628
  8304  14BA                     u3560:
  8305  14BA                     l2626:
  8306  14BA  3001               	movlw	1
  8307  14BB  02E4               	subwf	___fladd@bexp,f
  8308  14BC                     l2628:
  8309  14BC  1FD4               	btfss	___fladd@b+2,7
  8310  14BD  2CBF               	goto	u3571
  8311  14BE  2CC0               	goto	u3570
  8312  14BF                     u3571:
  8313  14BF  2C9E               	goto	l2614
  8314  14C0                     u3570:
  8315  14C0                     l2630:
  8316  14C0  01E3               	clrf	___fladd@aexp
  8317  14C1                     l2632:
  8318  14C1  1FE5               	btfss	___fladd@grs,7
  8319  14C2  2CC4               	goto	u3581
  8320  14C3  2CC5               	goto	u3580
  8321  14C4                     u3581:
  8322  14C4  2CD3               	goto	l2640
  8323  14C5                     u3580:
  8324  14C5                     l2634:
  8325  14C5  0865               	movf	___fladd@grs,w
  8326  14C6  397F               	andlw	127
  8327  14C7  1903               	btfsc	3,2
  8328  14C8  2CCA               	goto	u3591
  8329  14C9  2CCB               	goto	u3590
  8330  14CA                     u3591:
  8331  14CA  2CCE               	goto	l751
  8332  14CB                     u3590:
  8333  14CB                     l2636:
  8334  14CB  01E3               	clrf	___fladd@aexp
  8335  14CC  0AE3               	incf	___fladd@aexp,f
  8336  14CD  2CD3               	goto	l2640
  8337  14CE                     l751:
  8338  14CE  1C52               	btfss	___fladd@b,0
  8339  14CF  2CD1               	goto	u3601
  8340  14D0  2CD2               	goto	u3600
  8341  14D1                     u3601:
  8342  14D1  2CD3               	goto	l2640
  8343  14D2                     u3600:
  8344  14D2  2CCB               	goto	l2636
  8345  14D3                     l2640:
  8346  14D3  0863               	movf	___fladd@aexp,w
  8347  14D4  1903               	btfsc	3,2
  8348  14D5  2CD7               	goto	u3611
  8349  14D6  2CD8               	goto	u3610
  8350  14D7                     u3611:
  8351  14D7  2D0C               	goto	l754
  8352  14D8                     u3610:
  8353  14D8                     l2642:
  8354  14D8  3001               	movlw	1
  8355  14D9  07D2               	addwf	___fladd@b,f
  8356  14DA  3000               	movlw	0
  8357  14DB  1803               	skipnc
  8358  14DC  3001               	movlw	1
  8359  14DD  07D3               	addwf	___fladd@b+1,f
  8360  14DE  3000               	movlw	0
  8361  14DF  1803               	skipnc
  8362  14E0  3001               	movlw	1
  8363  14E1  07D4               	addwf	___fladd@b+2,f
  8364  14E2  3000               	movlw	0
  8365  14E3  1803               	skipnc
  8366  14E4  3001               	movlw	1
  8367  14E5  07D5               	addwf	___fladd@b+3,f
  8368  14E6                     l2644:
  8369  14E6  1C55               	btfss	___fladd@b+3,0
  8370  14E7  2CE9               	goto	u3621
  8371  14E8  2CEA               	goto	u3620
  8372  14E9                     u3621:
  8373  14E9  2D0C               	goto	l754
  8374  14EA                     u3620:
  8375  14EA                     l2646:
  8376  14EA  0852               	movf	___fladd@b,w
  8377  14EB  00DA               	movwf	??___fladd
  8378  14EC  0853               	movf	___fladd@b+1,w
  8379  14ED  00DB               	movwf	??___fladd+1
  8380  14EE  0854               	movf	___fladd@b+2,w
  8381  14EF  00DC               	movwf	??___fladd+2
  8382  14F0  0855               	movf	___fladd@b+3,w
  8383  14F1  00DD               	movwf	??___fladd+3
  8384  14F2  3001               	movlw	1
  8385  14F3  00DE               	movwf	??___fladd+4
  8386  14F4                     u3635:
  8387  14F4  0D5D               	rlf	??___fladd+3,w
  8388  14F5  0CDD               	rrf	??___fladd+3,f
  8389  14F6  0CDC               	rrf	??___fladd+2,f
  8390  14F7  0CDB               	rrf	??___fladd+1,f
  8391  14F8  0CDA               	rrf	??___fladd,f
  8392  14F9                     u3630:
  8393  14F9  0BDE               	decfsz	??___fladd+4,f
  8394  14FA  2CF4               	goto	u3635
  8395  14FB  085D               	movf	??___fladd+3,w
  8396  14FC  00D5               	movwf	___fladd@b+3
  8397  14FD  085C               	movf	??___fladd+2,w
  8398  14FE  00D4               	movwf	___fladd@b+2
  8399  14FF  085B               	movf	??___fladd+1,w
  8400  1500  00D3               	movwf	___fladd@b+1
  8401  1501  085A               	movf	??___fladd,w
  8402  1502  00D2               	movwf	___fladd@b
  8403  1503  0A64               	incf	___fladd@bexp,w
  8404  1504  1903               	btfsc	3,2
  8405  1505  2D07               	goto	u3641
  8406  1506  2D08               	goto	u3640
  8407  1507                     u3641:
  8408  1507  2D0C               	goto	l754
  8409  1508                     u3640:
  8410  1508                     l2648:
  8411  1508  3001               	movlw	1
  8412  1509  00DA               	movwf	??___fladd
  8413  150A  085A               	movf	??___fladd,w
  8414  150B  07E4               	addwf	___fladd@bexp,f
  8415  150C                     l754:
  8416  150C  0A64               	incf	___fladd@bexp,w
  8417  150D  1903               	btfsc	3,2
  8418  150E  2D10               	goto	u3651
  8419  150F  2D11               	goto	u3650
  8420  1510                     u3651:
  8421  1510  2D16               	goto	l2652
  8422  1511                     u3650:
  8423  1511                     l2650:
  8424  1511  0864               	movf	___fladd@bexp,w
  8425  1512  1D03               	btfss	3,2
  8426  1513  2D15               	goto	u3661
  8427  1514  2D16               	goto	u3660
  8428  1515                     u3661:
  8429  1515  2D24               	goto	l2658
  8430  1516                     u3660:
  8431  1516                     l2652:
  8432  1516  3000               	movlw	0
  8433  1517  00D5               	movwf	___fladd@b+3
  8434  1518  3000               	movlw	0
  8435  1519  00D4               	movwf	___fladd@b+2
  8436  151A  3000               	movlw	0
  8437  151B  00D3               	movwf	___fladd@b+1
  8438  151C  3000               	movlw	0
  8439  151D  00D2               	movwf	___fladd@b
  8440  151E                     l2654:
  8441  151E  0864               	movf	___fladd@bexp,w
  8442  151F  1D03               	btfss	3,2
  8443  1520  2D22               	goto	u3671
  8444  1521  2D23               	goto	u3670
  8445  1522                     u3671:
  8446  1522  2D24               	goto	l2658
  8447  1523                     u3670:
  8448  1523                     l2656:
  8449  1523  01E2               	clrf	___fladd@signs
  8450  1524                     l2658:
  8451  1524  1C64               	btfss	___fladd@bexp,0
  8452  1525  2D27               	goto	u3681
  8453  1526  2D28               	goto	u3680
  8454  1527                     u3681:
  8455  1527  2D2A               	goto	l2662
  8456  1528                     u3680:
  8457  1528                     l2660:
  8458  1528  17D4               	bsf	___fladd@b+2,7
  8459  1529  2D2E               	goto	l762
  8460  152A                     l2662:
  8461  152A  307F               	movlw	127
  8462  152B  00DA               	movwf	??___fladd
  8463  152C  085A               	movf	??___fladd,w
  8464  152D  05D4               	andwf	___fladd@b+2,f
  8465  152E                     l762:
  8466  152E  0864               	movf	___fladd@bexp,w
  8467  152F  00DA               	movwf	??___fladd
  8468  1530  1003               	clrc
  8469  1531  0C5A               	rrf	??___fladd,w
  8470  1532  00DB               	movwf	??___fladd+1
  8471  1533  085B               	movf	??___fladd+1,w
  8472  1534  00D5               	movwf	___fladd@b+3
  8473  1535                     l2664:
  8474  1535  1FE2               	btfss	___fladd@signs,7
  8475  1536  2D38               	goto	u3691
  8476  1537  2D39               	goto	u3690
  8477  1538                     u3691:
  8478  1538  2D3A               	goto	l763
  8479  1539                     u3690:
  8480  1539                     l2666:
  8481  1539  17D5               	bsf	___fladd@b+3,7
  8482  153A                     l763:
  8483  153A                     l733:
  8484  153A  0008               	return
  8485  153B                     __end_of___fladd:
  8486                           
  8487                           	psect	text21
  8488  18C1                     __ptext21:	
  8489 ;; *************** function ___flneg *****************
  8490 ;; Defined at:
  8491 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8492 ;; Parameters:    Size  Location     Type
  8493 ;;  f1              4    0[COMMON] unsigned char 
  8494 ;; Auto vars:     Size  Location     Type
  8495 ;;		None
  8496 ;; Return value:  Size  Location     Type
  8497 ;;                  4    0[COMMON] unsigned char 
  8498 ;; Registers used:
  8499 ;;		wreg
  8500 ;; Tracked objects:
  8501 ;;		On entry : 0/0
  8502 ;;		On exit  : 0/0
  8503 ;;		Unchanged: 0/0
  8504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8505 ;;      Params:         4       0       0       0       0
  8506 ;;      Locals:         0       0       0       0       0
  8507 ;;      Temps:          0       0       0       0       0
  8508 ;;      Totals:         4       0       0       0       0
  8509 ;;Total ram usage:        4 bytes
  8510 ;; Hardware stack levels used:    1
  8511 ;; This function calls:
  8512 ;;		Nothing
  8513 ;; This function is called by:
  8514 ;;		_sprintf
  8515 ;; This function uses a non-reentrant model
  8516 ;;
  8517                           
  8518                           
  8519                           ;psect for function ___flneg
  8520  18C1                     ___flneg:
  8521  18C1                     l3076:	
  8522                           ;incstack = 0
  8523                           ; Regs used in ___flneg: [wreg]
  8524                           
  8525  18C1  0873               	movf	___flneg@f1+3,w
  8526  18C2  0472               	iorwf	___flneg@f1+2,w
  8527  18C3  0471               	iorwf	___flneg@f1+1,w
  8528  18C4  0470               	iorwf	___flneg@f1,w
  8529  18C5  1903               	skipnz
  8530  18C6  28C8               	goto	u4821
  8531  18C7  28C9               	goto	u4820
  8532  18C8                     u4821:
  8533  18C8  28CB               	goto	l3080
  8534  18C9                     u4820:
  8535  18C9                     l3078:
  8536  18C9  3080               	movlw	128
  8537  18CA  06F3               	xorwf	___flneg@f1+3,f
  8538  18CB                     l3080:
  8539  18CB                     l592:
  8540  18CB  0008               	return
  8541  18CC                     __end_of___flneg:
  8542                           
  8543                           	psect	text22
  8544  1C99                     __ptext22:	
  8545 ;; *************** function ___flge *****************
  8546 ;; Defined at:
  8547 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8548 ;; Parameters:    Size  Location     Type
  8549 ;;  ff1             4    0[COMMON] unsigned char 
  8550 ;;  ff2             4    4[COMMON] unsigned char 
  8551 ;; Auto vars:     Size  Location     Type
  8552 ;;		None
  8553 ;; Return value:  Size  Location     Type
  8554 ;;		None               void
  8555 ;; Registers used:
  8556 ;;		wreg, status,2, status,0
  8557 ;; Tracked objects:
  8558 ;;		On entry : 0/0
  8559 ;;		On exit  : 0/0
  8560 ;;		Unchanged: 0/0
  8561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8562 ;;      Params:         8       0       0       0       0
  8563 ;;      Locals:         0       0       0       0       0
  8564 ;;      Temps:          4       0       0       0       0
  8565 ;;      Totals:        12       0       0       0       0
  8566 ;;Total ram usage:       12 bytes
  8567 ;; Hardware stack levels used:    1
  8568 ;; This function calls:
  8569 ;;		Nothing
  8570 ;; This function is called by:
  8571 ;;		_sprintf
  8572 ;; This function uses a non-reentrant model
  8573 ;;
  8574                           
  8575                           
  8576                           ;psect for function ___flge
  8577  1C99                     ___flge:
  8578  1C99                     l3056:	
  8579                           ;incstack = 0
  8580                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8581                           
  8582  1C99  3000               	movlw	0
  8583  1C9A  0570               	andwf	___flge@ff1,w
  8584  1C9B  00F8               	movwf	??___flge
  8585  1C9C  3000               	movlw	0
  8586  1C9D  0571               	andwf	___flge@ff1+1,w
  8587  1C9E  00F9               	movwf	??___flge+1
  8588  1C9F  3080               	movlw	128
  8589  1CA0  0572               	andwf	___flge@ff1+2,w
  8590  1CA1  00FA               	movwf	??___flge+2
  8591  1CA2  307F               	movlw	127
  8592  1CA3  0573               	andwf	___flge@ff1+3,w
  8593  1CA4  00FB               	movwf	??___flge+3
  8594  1CA5  087B               	movf	??___flge+3,w
  8595  1CA6  047A               	iorwf	??___flge+2,w
  8596  1CA7  0479               	iorwf	??___flge+1,w
  8597  1CA8  0478               	iorwf	??___flge,w
  8598  1CA9  1D03               	skipz
  8599  1CAA  2CAC               	goto	u4751
  8600  1CAB  2CAD               	goto	u4750
  8601  1CAC                     u4751:
  8602  1CAC  2CB5               	goto	l584
  8603  1CAD                     u4750:
  8604  1CAD                     l3058:
  8605  1CAD  3000               	movlw	0
  8606  1CAE  00F3               	movwf	___flge@ff1+3
  8607  1CAF  3000               	movlw	0
  8608  1CB0  00F2               	movwf	___flge@ff1+2
  8609  1CB1  3000               	movlw	0
  8610  1CB2  00F1               	movwf	___flge@ff1+1
  8611  1CB3  3000               	movlw	0
  8612  1CB4  00F0               	movwf	___flge@ff1
  8613  1CB5                     l584:
  8614  1CB5  3000               	movlw	0
  8615  1CB6  0574               	andwf	___flge@ff2,w
  8616  1CB7  00F8               	movwf	??___flge
  8617  1CB8  3000               	movlw	0
  8618  1CB9  0575               	andwf	___flge@ff2+1,w
  8619  1CBA  00F9               	movwf	??___flge+1
  8620  1CBB  3080               	movlw	128
  8621  1CBC  0576               	andwf	___flge@ff2+2,w
  8622  1CBD  00FA               	movwf	??___flge+2
  8623  1CBE  307F               	movlw	127
  8624  1CBF  0577               	andwf	___flge@ff2+3,w
  8625  1CC0  00FB               	movwf	??___flge+3
  8626  1CC1  087B               	movf	??___flge+3,w
  8627  1CC2  047A               	iorwf	??___flge+2,w
  8628  1CC3  0479               	iorwf	??___flge+1,w
  8629  1CC4  0478               	iorwf	??___flge,w
  8630  1CC5  1D03               	skipz
  8631  1CC6  2CC8               	goto	u4761
  8632  1CC7  2CC9               	goto	u4760
  8633  1CC8                     u4761:
  8634  1CC8  2CD1               	goto	l3062
  8635  1CC9                     u4760:
  8636  1CC9                     l3060:
  8637  1CC9  3000               	movlw	0
  8638  1CCA  00F7               	movwf	___flge@ff2+3
  8639  1CCB  3000               	movlw	0
  8640  1CCC  00F6               	movwf	___flge@ff2+2
  8641  1CCD  3000               	movlw	0
  8642  1CCE  00F5               	movwf	___flge@ff2+1
  8643  1CCF  3000               	movlw	0
  8644  1CD0  00F4               	movwf	___flge@ff2
  8645  1CD1                     l3062:
  8646  1CD1  1FF3               	btfss	___flge@ff1+3,7
  8647  1CD2  2CD4               	goto	u4771
  8648  1CD3  2CD5               	goto	u4770
  8649  1CD4                     u4771:
  8650  1CD4  2CF9               	goto	l3066
  8651  1CD5                     u4770:
  8652  1CD5                     l3064:
  8653  1CD5  3000               	movlw	0
  8654  1CD6  00F8               	movwf	??___flge
  8655  1CD7  3000               	movlw	0
  8656  1CD8  00F9               	movwf	??___flge+1
  8657  1CD9  3000               	movlw	0
  8658  1CDA  00FA               	movwf	??___flge+2
  8659  1CDB  3080               	movlw	128
  8660  1CDC  00FB               	movwf	??___flge+3
  8661  1CDD  0870               	movf	___flge@ff1,w
  8662  1CDE  02F8               	subwf	??___flge,f
  8663  1CDF  0871               	movf	___flge@ff1+1,w
  8664  1CE0  1C03               	skipc
  8665  1CE1  0F71               	incfsz	___flge@ff1+1,w
  8666  1CE2  2CE4               	goto	u4781
  8667  1CE3  2CE5               	goto	u4782
  8668  1CE4                     u4781:
  8669  1CE4  02F9               	subwf	??___flge+1,f
  8670  1CE5                     u4782:
  8671  1CE5  0872               	movf	___flge@ff1+2,w
  8672  1CE6  1C03               	skipc
  8673  1CE7  0F72               	incfsz	___flge@ff1+2,w
  8674  1CE8  2CEA               	goto	u4783
  8675  1CE9  2CEB               	goto	u4784
  8676  1CEA                     u4783:
  8677  1CEA  02FA               	subwf	??___flge+2,f
  8678  1CEB                     u4784:
  8679  1CEB  0873               	movf	___flge@ff1+3,w
  8680  1CEC  1C03               	skipc
  8681  1CED  0F73               	incfsz	___flge@ff1+3,w
  8682  1CEE  2CF0               	goto	u4785
  8683  1CEF  2CF1               	goto	u4786
  8684  1CF0                     u4785:
  8685  1CF0  02FB               	subwf	??___flge+3,f
  8686  1CF1                     u4786:
  8687  1CF1  087B               	movf	??___flge+3,w
  8688  1CF2  00F3               	movwf	___flge@ff1+3
  8689  1CF3  087A               	movf	??___flge+2,w
  8690  1CF4  00F2               	movwf	___flge@ff1+2
  8691  1CF5  0879               	movf	??___flge+1,w
  8692  1CF6  00F1               	movwf	___flge@ff1+1
  8693  1CF7  0878               	movf	??___flge,w
  8694  1CF8  00F0               	movwf	___flge@ff1
  8695  1CF9                     l3066:
  8696  1CF9  1FF7               	btfss	___flge@ff2+3,7
  8697  1CFA  2CFC               	goto	u4791
  8698  1CFB  2CFD               	goto	u4790
  8699  1CFC                     u4791:
  8700  1CFC  2D21               	goto	l587
  8701  1CFD                     u4790:
  8702  1CFD                     l3068:
  8703  1CFD  3000               	movlw	0
  8704  1CFE  00F8               	movwf	??___flge
  8705  1CFF  3000               	movlw	0
  8706  1D00  00F9               	movwf	??___flge+1
  8707  1D01  3000               	movlw	0
  8708  1D02  00FA               	movwf	??___flge+2
  8709  1D03  3080               	movlw	128
  8710  1D04  00FB               	movwf	??___flge+3
  8711  1D05  0874               	movf	___flge@ff2,w
  8712  1D06  02F8               	subwf	??___flge,f
  8713  1D07  0875               	movf	___flge@ff2+1,w
  8714  1D08  1C03               	skipc
  8715  1D09  0F75               	incfsz	___flge@ff2+1,w
  8716  1D0A  2D0C               	goto	u4801
  8717  1D0B  2D0D               	goto	u4802
  8718  1D0C                     u4801:
  8719  1D0C  02F9               	subwf	??___flge+1,f
  8720  1D0D                     u4802:
  8721  1D0D  0876               	movf	___flge@ff2+2,w
  8722  1D0E  1C03               	skipc
  8723  1D0F  0F76               	incfsz	___flge@ff2+2,w
  8724  1D10  2D12               	goto	u4803
  8725  1D11  2D13               	goto	u4804
  8726  1D12                     u4803:
  8727  1D12  02FA               	subwf	??___flge+2,f
  8728  1D13                     u4804:
  8729  1D13  0877               	movf	___flge@ff2+3,w
  8730  1D14  1C03               	skipc
  8731  1D15  0F77               	incfsz	___flge@ff2+3,w
  8732  1D16  2D18               	goto	u4805
  8733  1D17  2D19               	goto	u4806
  8734  1D18                     u4805:
  8735  1D18  02FB               	subwf	??___flge+3,f
  8736  1D19                     u4806:
  8737  1D19  087B               	movf	??___flge+3,w
  8738  1D1A  00F7               	movwf	___flge@ff2+3
  8739  1D1B  087A               	movf	??___flge+2,w
  8740  1D1C  00F6               	movwf	___flge@ff2+2
  8741  1D1D  0879               	movf	??___flge+1,w
  8742  1D1E  00F5               	movwf	___flge@ff2+1
  8743  1D1F  0878               	movf	??___flge,w
  8744  1D20  00F4               	movwf	___flge@ff2
  8745  1D21                     l587:
  8746  1D21  3080               	movlw	128
  8747  1D22  06F3               	xorwf	___flge@ff1+3,f
  8748  1D23  3080               	movlw	128
  8749  1D24  06F7               	xorwf	___flge@ff2+3,f
  8750  1D25  0877               	movf	___flge@ff2+3,w
  8751  1D26  0273               	subwf	___flge@ff1+3,w
  8752  1D27  1D03               	skipz
  8753  1D28  2D33               	goto	u4815
  8754  1D29  0876               	movf	___flge@ff2+2,w
  8755  1D2A  0272               	subwf	___flge@ff1+2,w
  8756  1D2B  1D03               	skipz
  8757  1D2C  2D33               	goto	u4815
  8758  1D2D  0875               	movf	___flge@ff2+1,w
  8759  1D2E  0271               	subwf	___flge@ff1+1,w
  8760  1D2F  1D03               	skipz
  8761  1D30  2D33               	goto	u4815
  8762  1D31  0874               	movf	___flge@ff2,w
  8763  1D32  0270               	subwf	___flge@ff1,w
  8764  1D33                     u4815:
  8765  1D33  1803               	skipnc
  8766  1D34  2D36               	goto	u4811
  8767  1D35  2D37               	goto	u4810
  8768  1D36                     u4811:
  8769  1D36  2D39               	goto	l3072
  8770  1D37                     u4810:
  8771  1D37                     l3070:
  8772  1D37  1003               	clrc
  8773  1D38  2D3A               	goto	l588
  8774  1D39                     l3072:
  8775  1D39  1403               	setc
  8776  1D3A                     l588:
  8777  1D3A  0008               	return
  8778  1D3B                     __end_of___flge:
  8779                           
  8780                           	psect	text23
  8781  1ACD                     __ptext23:	
  8782 ;; *************** function ___fleq *****************
  8783 ;; Defined at:
  8784 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8785 ;; Parameters:    Size  Location     Type
  8786 ;;  ff1             4    0[COMMON] unsigned char 
  8787 ;;  ff2             4    4[COMMON] unsigned char 
  8788 ;; Auto vars:     Size  Location     Type
  8789 ;;		None
  8790 ;; Return value:  Size  Location     Type
  8791 ;;		None               void
  8792 ;; Registers used:
  8793 ;;		wreg, status,2, status,0
  8794 ;; Tracked objects:
  8795 ;;		On entry : 0/0
  8796 ;;		On exit  : 0/0
  8797 ;;		Unchanged: 0/0
  8798 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8799 ;;      Params:         8       0       0       0       0
  8800 ;;      Locals:         0       0       0       0       0
  8801 ;;      Temps:          4       0       0       0       0
  8802 ;;      Totals:        12       0       0       0       0
  8803 ;;Total ram usage:       12 bytes
  8804 ;; Hardware stack levels used:    1
  8805 ;; This function calls:
  8806 ;;		Nothing
  8807 ;; This function is called by:
  8808 ;;		_sprintf
  8809 ;; This function uses a non-reentrant model
  8810 ;;
  8811                           
  8812                           
  8813                           ;psect for function ___fleq
  8814  1ACD                     ___fleq:
  8815  1ACD                     l3044:	
  8816                           ;incstack = 0
  8817                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8818                           
  8819  1ACD  3000               	movlw	0
  8820  1ACE  0570               	andwf	___fleq@ff1,w
  8821  1ACF  00F8               	movwf	??___fleq
  8822  1AD0  3000               	movlw	0
  8823  1AD1  0571               	andwf	___fleq@ff1+1,w
  8824  1AD2  00F9               	movwf	??___fleq+1
  8825  1AD3  3080               	movlw	128
  8826  1AD4  0572               	andwf	___fleq@ff1+2,w
  8827  1AD5  00FA               	movwf	??___fleq+2
  8828  1AD6  307F               	movlw	127
  8829  1AD7  0573               	andwf	___fleq@ff1+3,w
  8830  1AD8  00FB               	movwf	??___fleq+3
  8831  1AD9  087B               	movf	??___fleq+3,w
  8832  1ADA  047A               	iorwf	??___fleq+2,w
  8833  1ADB  0479               	iorwf	??___fleq+1,w
  8834  1ADC  0478               	iorwf	??___fleq,w
  8835  1ADD  1D03               	skipz
  8836  1ADE  2AE0               	goto	u4721
  8837  1ADF  2AE1               	goto	u4720
  8838  1AE0                     u4721:
  8839  1AE0  2AE9               	goto	l579
  8840  1AE1                     u4720:
  8841  1AE1                     l3046:
  8842  1AE1  3000               	movlw	0
  8843  1AE2  00F3               	movwf	___fleq@ff1+3
  8844  1AE3  3000               	movlw	0
  8845  1AE4  00F2               	movwf	___fleq@ff1+2
  8846  1AE5  3000               	movlw	0
  8847  1AE6  00F1               	movwf	___fleq@ff1+1
  8848  1AE7  3000               	movlw	0
  8849  1AE8  00F0               	movwf	___fleq@ff1
  8850  1AE9                     l579:
  8851  1AE9  3000               	movlw	0
  8852  1AEA  0574               	andwf	___fleq@ff2,w
  8853  1AEB  00F8               	movwf	??___fleq
  8854  1AEC  3000               	movlw	0
  8855  1AED  0575               	andwf	___fleq@ff2+1,w
  8856  1AEE  00F9               	movwf	??___fleq+1
  8857  1AEF  3080               	movlw	128
  8858  1AF0  0576               	andwf	___fleq@ff2+2,w
  8859  1AF1  00FA               	movwf	??___fleq+2
  8860  1AF2  307F               	movlw	127
  8861  1AF3  0577               	andwf	___fleq@ff2+3,w
  8862  1AF4  00FB               	movwf	??___fleq+3
  8863  1AF5  087B               	movf	??___fleq+3,w
  8864  1AF6  047A               	iorwf	??___fleq+2,w
  8865  1AF7  0479               	iorwf	??___fleq+1,w
  8866  1AF8  0478               	iorwf	??___fleq,w
  8867  1AF9  1D03               	skipz
  8868  1AFA  2AFC               	goto	u4731
  8869  1AFB  2AFD               	goto	u4730
  8870  1AFC                     u4731:
  8871  1AFC  2B05               	goto	l580
  8872  1AFD                     u4730:
  8873  1AFD                     l3048:
  8874  1AFD  3000               	movlw	0
  8875  1AFE  00F7               	movwf	___fleq@ff2+3
  8876  1AFF  3000               	movlw	0
  8877  1B00  00F6               	movwf	___fleq@ff2+2
  8878  1B01  3000               	movlw	0
  8879  1B02  00F5               	movwf	___fleq@ff2+1
  8880  1B03  3000               	movlw	0
  8881  1B04  00F4               	movwf	___fleq@ff2
  8882  1B05                     l580:
  8883  1B05  0877               	movf	___fleq@ff2+3,w
  8884  1B06  0673               	xorwf	___fleq@ff1+3,w
  8885  1B07  1D03               	skipz
  8886  1B08  2B13               	goto	u4745
  8887  1B09  0876               	movf	___fleq@ff2+2,w
  8888  1B0A  0672               	xorwf	___fleq@ff1+2,w
  8889  1B0B  1D03               	skipz
  8890  1B0C  2B13               	goto	u4745
  8891  1B0D  0875               	movf	___fleq@ff2+1,w
  8892  1B0E  0671               	xorwf	___fleq@ff1+1,w
  8893  1B0F  1D03               	skipz
  8894  1B10  2B13               	goto	u4745
  8895  1B11  0874               	movf	___fleq@ff2,w
  8896  1B12  0670               	xorwf	___fleq@ff1,w
  8897  1B13                     u4745:
  8898  1B13  1903               	skipnz
  8899  1B14  2B16               	goto	u4741
  8900  1B15  2B17               	goto	u4740
  8901  1B16                     u4741:
  8902  1B16  2B19               	goto	l3052
  8903  1B17                     u4740:
  8904  1B17                     l3050:
  8905  1B17  1003               	clrc
  8906  1B18  2B1A               	goto	l581
  8907  1B19                     l3052:
  8908  1B19  1403               	setc
  8909  1B1A                     l581:
  8910  1B1A  0008               	return
  8911  1B1B                     __end_of___fleq:
  8912                           
  8913                           	psect	text24
  8914  1000                     __ptext24:	
  8915 ;; *************** function _spiRead *****************
  8916 ;; Defined at:
  8917 ;;		line 47 in file "SPI.c"
  8918 ;; Parameters:    Size  Location     Type
  8919 ;;		None
  8920 ;; Auto vars:     Size  Location     Type
  8921 ;;		None
  8922 ;; Return value:  Size  Location     Type
  8923 ;;                  1    wreg      unsigned char 
  8924 ;; Registers used:
  8925 ;;		wreg, status,2, status,0, pclath, cstack
  8926 ;; Tracked objects:
  8927 ;;		On entry : 0/0
  8928 ;;		On exit  : 0/0
  8929 ;;		Unchanged: 0/0
  8930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8931 ;;      Params:         0       0       0       0       0
  8932 ;;      Locals:         0       0       0       0       0
  8933 ;;      Temps:          0       0       0       0       0
  8934 ;;      Totals:         0       0       0       0       0
  8935 ;;Total ram usage:        0 bytes
  8936 ;; Hardware stack levels used:    1
  8937 ;; Hardware stack levels required when called:    1
  8938 ;; This function calls:
  8939 ;;		_spiReceiveWait
  8940 ;; This function is called by:
  8941 ;;		_main
  8942 ;; This function uses a non-reentrant model
  8943 ;;
  8944                           
  8945                           
  8946                           ;psect for function _spiRead
  8947  1000                     _spiRead:
  8948  1000                     l3556:	
  8949                           ;incstack = 0
  8950                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  8951                           
  8952                           
  8953                           ;SPI.c: 49:     spiReceiveWait();
  8954  1000  120A  158A  2000  160A  118A  	fcall	_spiReceiveWait
  8955  1005                     l3558:
  8956                           
  8957                           ;SPI.c: 50:     return(SSPBUF);
  8958  1005  1283               	bcf	3,5	;RP0=0, select bank0
  8959  1006  1303               	bcf	3,6	;RP1=0, select bank0
  8960  1007  0813               	movf	19,w	;volatile
  8961  1008                     l188:
  8962  1008  0008               	return
  8963  1009                     __end_of_spiRead:
  8964                           
  8965                           	psect	text25
  8966  0800                     __ptext25:	
  8967 ;; *************** function _spiReceiveWait *****************
  8968 ;; Defined at:
  8969 ;;		line 29 in file "SPI.c"
  8970 ;; Parameters:    Size  Location     Type
  8971 ;;		None
  8972 ;; Auto vars:     Size  Location     Type
  8973 ;;		None
  8974 ;; Return value:  Size  Location     Type
  8975 ;;                  1    wreg      void 
  8976 ;; Registers used:
  8977 ;;		None
  8978 ;; Tracked objects:
  8979 ;;		On entry : 0/0
  8980 ;;		On exit  : 0/0
  8981 ;;		Unchanged: 0/0
  8982 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8983 ;;      Params:         0       0       0       0       0
  8984 ;;      Locals:         0       0       0       0       0
  8985 ;;      Temps:          0       0       0       0       0
  8986 ;;      Totals:         0       0       0       0       0
  8987 ;;Total ram usage:        0 bytes
  8988 ;; Hardware stack levels used:    1
  8989 ;; This function calls:
  8990 ;;		Nothing
  8991 ;; This function is called by:
  8992 ;;		_spiRead
  8993 ;; This function uses a non-reentrant model
  8994 ;;
  8995                           
  8996                           
  8997                           ;psect for function _spiReceiveWait
  8998  0800                     _spiReceiveWait:
  8999  0800                     l2830:	
  9000                           ;incstack = 0
  9001                           ; Regs used in _spiReceiveWait: []
  9002                           
  9003  0800                     l174:	
  9004                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  9005                           
  9006  0800  1683               	bsf	3,5	;RP0=1, select bank1
  9007  0801  1303               	bcf	3,6	;RP1=0, select bank1
  9008  0802  1C14               	btfss	20,0	;volatile
  9009  0803  2805               	goto	u4071
  9010  0804  2806               	goto	u4070
  9011  0805                     u4071:
  9012  0805  2800               	goto	l174
  9013  0806                     u4070:
  9014  0806                     l177:
  9015  0806  0008               	return
  9016  0807                     __end_of_spiReceiveWait:
  9017                           
  9018                           	psect	text26
  9019  1914                     __ptext26:	
  9020 ;; *************** function _spiInit *****************
  9021 ;; Defined at:
  9022 ;;		line 12 in file "SPI.c"
  9023 ;; Parameters:    Size  Location     Type
  9024 ;;  sType           1    wreg     enum E1264
  9025 ;;  sDataSample     1    0[COMMON] enum E1272
  9026 ;;  sClockIdle      1    1[COMMON] enum E1276
  9027 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  9028 ;; Auto vars:     Size  Location     Type
  9029 ;;  sType           1    3[COMMON] enum E1264
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  1    wreg      void 
  9032 ;; Registers used:
  9033 ;;		wreg, status,2, status,0
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9039 ;;      Params:         3       0       0       0       0
  9040 ;;      Locals:         1       0       0       0       0
  9041 ;;      Temps:          0       0       0       0       0
  9042 ;;      Totals:         4       0       0       0       0
  9043 ;;Total ram usage:        4 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; This function calls:
  9046 ;;		Nothing
  9047 ;; This function is called by:
  9048 ;;		_main
  9049 ;; This function uses a non-reentrant model
  9050 ;;
  9051                           
  9052                           
  9053                           ;psect for function _spiInit
  9054  1914                     _spiInit:
  9055                           
  9056                           ;incstack = 0
  9057                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  9058                           ;spiInit@sType stored from wreg
  9059  1914  00F3               	movwf	spiInit@sType
  9060  1915                     l3236:
  9061                           
  9062                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  9063  1915  1683               	bsf	3,5	;RP0=1, select bank1
  9064  1916  1303               	bcf	3,6	;RP1=0, select bank1
  9065  1917  1287               	bcf	7,5	;volatile
  9066                           
  9067                           ;SPI.c: 15:     if(sType & 0b00000100)
  9068  1918  1D73               	btfss	spiInit@sType,2
  9069  1919  291B               	goto	u5181
  9070  191A  291C               	goto	u5180
  9071  191B                     u5181:
  9072  191B  2920               	goto	l3242
  9073  191C                     u5180:
  9074  191C                     l3238:
  9075                           
  9076                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  9077  191C  0872               	movf	spiInit@sTransmitEdge,w
  9078  191D  0094               	movwf	20	;volatile
  9079  191E                     l3240:
  9080                           
  9081                           ;SPI.c: 18:         TRISC3 = 1;
  9082  191E  1587               	bsf	7,3	;volatile
  9083                           
  9084                           ;SPI.c: 19:     }
  9085  191F  2924               	goto	l170
  9086  1920                     l3242:
  9087                           
  9088                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  9089  1920  0870               	movf	spiInit@sDataSample,w
  9090  1921  0472               	iorwf	spiInit@sTransmitEdge,w
  9091  1922  0094               	movwf	20	;volatile
  9092  1923                     l3244:
  9093                           
  9094                           ;SPI.c: 23:         TRISC3 = 0;
  9095  1923  1187               	bcf	7,3	;volatile
  9096  1924                     l170:	
  9097                           ;SPI.c: 24:     }
  9098                           
  9099                           
  9100                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  9101  1924  0873               	movf	spiInit@sType,w
  9102  1925  0471               	iorwf	spiInit@sClockIdle,w
  9103  1926  1283               	bcf	3,5	;RP0=0, select bank0
  9104  1927  1303               	bcf	3,6	;RP1=0, select bank0
  9105  1928  0094               	movwf	20	;volatile
  9106  1929                     l171:
  9107  1929  0008               	return
  9108  192A                     __end_of_spiInit:
  9109                           
  9110                           	psect	text27
  9111  18EB                     __ptext27:	
  9112 ;; *************** function _setup *****************
  9113 ;; Defined at:
  9114 ;;		line 73 in file "main.c"
  9115 ;; Parameters:    Size  Location     Type
  9116 ;;		None
  9117 ;; Auto vars:     Size  Location     Type
  9118 ;;		None
  9119 ;; Return value:  Size  Location     Type
  9120 ;;                  1    wreg      void 
  9121 ;; Registers used:
  9122 ;;		wreg, status,2
  9123 ;; Tracked objects:
  9124 ;;		On entry : 0/0
  9125 ;;		On exit  : 0/0
  9126 ;;		Unchanged: 0/0
  9127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9128 ;;      Params:         0       0       0       0       0
  9129 ;;      Locals:         0       0       0       0       0
  9130 ;;      Temps:          0       0       0       0       0
  9131 ;;      Totals:         0       0       0       0       0
  9132 ;;Total ram usage:        0 bytes
  9133 ;; Hardware stack levels used:    1
  9134 ;; This function calls:
  9135 ;;		Nothing
  9136 ;; This function is called by:
  9137 ;;		_main
  9138 ;; This function uses a non-reentrant model
  9139 ;;
  9140                           
  9141                           
  9142                           ;psect for function _setup
  9143  18EB                     _setup:
  9144  18EB                     l3222:	
  9145                           ;incstack = 0
  9146                           ; Regs used in _setup: [wreg+status,2]
  9147                           
  9148                           
  9149                           ;main.c: 74:     TRISD = 0b00000000;
  9150  18EB  1683               	bsf	3,5	;RP0=1, select bank1
  9151  18EC  1303               	bcf	3,6	;RP1=0, select bank1
  9152  18ED  0188               	clrf	8	;volatile
  9153  18EE                     l3224:
  9154                           
  9155                           ;main.c: 75:     TRISC = 0b10010000;
  9156  18EE  3090               	movlw	144
  9157  18EF  0087               	movwf	7	;volatile
  9158  18F0                     l3226:
  9159                           
  9160                           ;main.c: 76:     TRISE = 0b00000000;
  9161  18F0  0189               	clrf	9	;volatile
  9162  18F1                     l3228:
  9163                           
  9164                           ;main.c: 77:     TRISB = 0b00000000;
  9165  18F1  0186               	clrf	6	;volatile
  9166  18F2                     l3230:
  9167                           
  9168                           ;main.c: 78:     ANSEL = 0b00000011;
  9169  18F2  3003               	movlw	3
  9170  18F3  1683               	bsf	3,5	;RP0=1, select bank3
  9171  18F4  1703               	bsf	3,6	;RP1=1, select bank3
  9172  18F5  0088               	movwf	8	;volatile
  9173                           
  9174                           ;main.c: 79:     PORTC = 0;
  9175  18F6  1283               	bcf	3,5	;RP0=0, select bank0
  9176  18F7  1303               	bcf	3,6	;RP1=0, select bank0
  9177  18F8  0187               	clrf	7	;volatile
  9178                           
  9179                           ;main.c: 80:     PORTD = 0;
  9180  18F9  0188               	clrf	8	;volatile
  9181                           
  9182                           ;main.c: 81:     PORTE = 0;
  9183  18FA  0189               	clrf	9	;volatile
  9184                           
  9185                           ;main.c: 82:     PORTB = 0;
  9186  18FB  0186               	clrf	6	;volatile
  9187  18FC                     l3232:
  9188                           
  9189                           ;main.c: 83:     PORTAbits.RA0 = 1;
  9190  18FC  1405               	bsf	5,0	;volatile
  9191  18FD                     l3234:
  9192                           
  9193                           ;main.c: 84:     PORTAbits.RA1 = 1;
  9194  18FD  1485               	bsf	5,1	;volatile
  9195  18FE                     l104:
  9196  18FE  0008               	return
  9197  18FF                     __end_of_setup:
  9198                           
  9199                           	psect	text28
  9200  1A47                     __ptext28:	
  9201 ;; *************** function _Lcd_Write_String *****************
  9202 ;; Defined at:
  9203 ;;		line 67 in file "LCD.c"
  9204 ;; Parameters:    Size  Location     Type
  9205 ;;  a               2    3[COMMON] PTR unsigned char 
  9206 ;;		 -> l(20), c(20), s(20), STR_1(19), 
  9207 ;; Auto vars:     Size  Location     Type
  9208 ;;  i               2    8[COMMON] int 
  9209 ;; Return value:  Size  Location     Type
  9210 ;;                  1    wreg      void 
  9211 ;; Registers used:
  9212 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9213 ;; Tracked objects:
  9214 ;;		On entry : 0/0
  9215 ;;		On exit  : 0/0
  9216 ;;		Unchanged: 0/0
  9217 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9218 ;;      Params:         2       0       0       0       0
  9219 ;;      Locals:         2       0       0       0       0
  9220 ;;      Temps:          3       0       0       0       0
  9221 ;;      Totals:         7       0       0       0       0
  9222 ;;Total ram usage:        7 bytes
  9223 ;; Hardware stack levels used:    1
  9224 ;; Hardware stack levels required when called:    2
  9225 ;; This function calls:
  9226 ;;		_Lcd_Write_Char
  9227 ;; This function is called by:
  9228 ;;		_main
  9229 ;; This function uses a non-reentrant model
  9230 ;;
  9231                           
  9232                           
  9233                           ;psect for function _Lcd_Write_String
  9234  1A47                     _Lcd_Write_String:
  9235  1A47                     l3214:	
  9236                           ;incstack = 0
  9237                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9238                           
  9239                           
  9240                           ;LCD.c: 68:     int i;;LCD.c: 69:     for (i = 0; a[i] != '\0'; i++)
  9241  1A47  01F8               	clrf	Lcd_Write_String@i
  9242  1A48  01F9               	clrf	Lcd_Write_String@i+1
  9243  1A49  2A6C               	goto	l3220
  9244  1A4A                     l3216:
  9245                           
  9246                           ;LCD.c: 70:         Lcd_Write_Char(a[i]);
  9247  1A4A  0878               	movf	Lcd_Write_String@i,w
  9248  1A4B  0773               	addwf	Lcd_Write_String@a,w
  9249  1A4C  00F6               	movwf	??_Lcd_Write_String+1
  9250  1A4D  0874               	movf	Lcd_Write_String@a+1,w
  9251  1A4E  00F5               	movwf	??_Lcd_Write_String
  9252  1A4F  1803               	skipnc
  9253  1A50  0AF5               	incf	??_Lcd_Write_String,f
  9254  1A51  1FF8               	btfss	Lcd_Write_String@i,7
  9255  1A52  2A54               	goto	u5150
  9256  1A53  03F5               	decf	??_Lcd_Write_String,f
  9257  1A54                     u5150:
  9258  1A54  0875               	movf	??_Lcd_Write_String,w
  9259  1A55  00F7               	movwf	??_Lcd_Write_String+2
  9260  1A56  0877               	movf	??_Lcd_Write_String+2,w
  9261  1A57  1283               	bcf	3,5	;RP0=0, select bank0
  9262  1A58  1303               	bcf	3,6	;RP1=0, select bank0
  9263  1A59  00FF               	movwf	btemp+1
  9264  1A5A  0876               	movf	??_Lcd_Write_String+1,w
  9265  1A5B  0084               	movwf	4
  9266  1A5C  120A  118A  2003  160A  158A  	fcall	stringtab
  9267  1A61  160A  158A  2144  160A  158A  	fcall	_Lcd_Write_Char
  9268  1A66                     l3218:
  9269  1A66  3001               	movlw	1
  9270  1A67  07F8               	addwf	Lcd_Write_String@i,f
  9271  1A68  1803               	skipnc
  9272  1A69  0AF9               	incf	Lcd_Write_String@i+1,f
  9273  1A6A  3000               	movlw	0
  9274  1A6B  07F9               	addwf	Lcd_Write_String@i+1,f
  9275  1A6C                     l3220:
  9276  1A6C  0878               	movf	Lcd_Write_String@i,w
  9277  1A6D  0773               	addwf	Lcd_Write_String@a,w
  9278  1A6E  00F6               	movwf	??_Lcd_Write_String+1
  9279  1A6F  0874               	movf	Lcd_Write_String@a+1,w
  9280  1A70  00F5               	movwf	??_Lcd_Write_String
  9281  1A71  1803               	skipnc
  9282  1A72  0AF5               	incf	??_Lcd_Write_String,f
  9283  1A73  1FF8               	btfss	Lcd_Write_String@i,7
  9284  1A74  2A76               	goto	u5160
  9285  1A75  03F5               	decf	??_Lcd_Write_String,f
  9286  1A76                     u5160:
  9287  1A76  0875               	movf	??_Lcd_Write_String,w
  9288  1A77  00F7               	movwf	??_Lcd_Write_String+2
  9289  1A78  0877               	movf	??_Lcd_Write_String+2,w
  9290  1A79  1283               	bcf	3,5	;RP0=0, select bank0
  9291  1A7A  1303               	bcf	3,6	;RP1=0, select bank0
  9292  1A7B  00FF               	movwf	btemp+1
  9293  1A7C  0876               	movf	??_Lcd_Write_String+1,w
  9294  1A7D  0084               	movwf	4
  9295  1A7E  120A  118A  2003  160A  158A  	fcall	stringtab
  9296  1A83  3A00               	xorlw	0
  9297  1A84  1D03               	skipz
  9298  1A85  2A87               	goto	u5171
  9299  1A86  2A88               	goto	u5170
  9300  1A87                     u5171:
  9301  1A87  2A4A               	goto	l3216
  9302  1A88                     u5170:
  9303  1A88                     l33:
  9304  1A88  0008               	return
  9305  1A89                     __end_of_Lcd_Write_String:
  9306                           
  9307                           	psect	text29
  9308  1944                     __ptext29:	
  9309 ;; *************** function _Lcd_Write_Char *****************
  9310 ;; Defined at:
  9311 ;;		line 58 in file "LCD.c"
  9312 ;; Parameters:    Size  Location     Type
  9313 ;;  a               1    wreg     unsigned char 
  9314 ;; Auto vars:     Size  Location     Type
  9315 ;;  a               1    2[COMMON] unsigned char 
  9316 ;; Return value:  Size  Location     Type
  9317 ;;                  1    wreg      void 
  9318 ;; Registers used:
  9319 ;;		wreg, status,2, status,0, pclath, cstack
  9320 ;; Tracked objects:
  9321 ;;		On entry : 0/0
  9322 ;;		On exit  : 0/0
  9323 ;;		Unchanged: 0/0
  9324 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9325 ;;      Params:         0       0       0       0       0
  9326 ;;      Locals:         1       0       0       0       0
  9327 ;;      Temps:          1       0       0       0       0
  9328 ;;      Totals:         2       0       0       0       0
  9329 ;;Total ram usage:        2 bytes
  9330 ;; Hardware stack levels used:    1
  9331 ;; Hardware stack levels required when called:    1
  9332 ;; This function calls:
  9333 ;;		_Lcd_Port
  9334 ;; This function is called by:
  9335 ;;		_Lcd_Write_String
  9336 ;; This function uses a non-reentrant model
  9337 ;;
  9338                           
  9339                           
  9340                           ;psect for function _Lcd_Write_Char
  9341  1944                     _Lcd_Write_Char:
  9342                           
  9343                           ;incstack = 0
  9344                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9345                           ;Lcd_Write_Char@a stored from wreg
  9346  1944  00F2               	movwf	Lcd_Write_Char@a
  9347  1945                     l2818:
  9348                           
  9349                           ;LCD.c: 59:     PORTEbits.RE0 = 1;
  9350  1945  1283               	bcf	3,5	;RP0=0, select bank0
  9351  1946  1303               	bcf	3,6	;RP1=0, select bank0
  9352  1947  1409               	bsf	9,0	;volatile
  9353  1948                     l2820:
  9354                           
  9355                           ;LCD.c: 60:     Lcd_Port(a);
  9356  1948  0872               	movf	Lcd_Write_Char@a,w
  9357  1949  160A  158A  20B3  160A  158A  	fcall	_Lcd_Port
  9358  194E                     l2822:
  9359                           
  9360                           ;LCD.c: 61:     PORTEbits.RE1 = 1;
  9361  194E  1283               	bcf	3,5	;RP0=0, select bank0
  9362  194F  1303               	bcf	3,6	;RP1=0, select bank0
  9363  1950  1489               	bsf	9,1	;volatile
  9364  1951                     l2824:
  9365                           
  9366                           ;LCD.c: 62:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9367  1951  301A               	movlw	26
  9368  1952  00F1               	movwf	??_Lcd_Write_Char
  9369  1953                     u5897:
  9370  1953  0BF1               	decfsz	??_Lcd_Write_Char,f
  9371  1954  2953               	goto	u5897
  9372  1955  0000               	nop
  9373  1956                     l2826:
  9374                           
  9375                           ;LCD.c: 63:     PORTEbits.RE1 = 0;
  9376  1956  1283               	bcf	3,5	;RP0=0, select bank0
  9377  1957  1303               	bcf	3,6	;RP1=0, select bank0
  9378  1958  1089               	bcf	9,1	;volatile
  9379  1959                     l2828:
  9380                           
  9381                           ;LCD.c: 64:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9382  1959  301A               	movlw	26
  9383  195A  00F1               	movwf	??_Lcd_Write_Char
  9384  195B                     u5907:
  9385  195B  0BF1               	decfsz	??_Lcd_Write_Char,f
  9386  195C  295B               	goto	u5907
  9387  195D  0000               	nop
  9388  195E                     l27:
  9389  195E  0008               	return
  9390  195F                     __end_of_Lcd_Write_Char:
  9391                           
  9392                           	psect	text30
  9393  195F                     __ptext30:	
  9394 ;; *************** function _Lcd_Set_Cursor *****************
  9395 ;; Defined at:
  9396 ;;		line 33 in file "LCD.c"
  9397 ;; Parameters:    Size  Location     Type
  9398 ;;  a               1    wreg     unsigned char 
  9399 ;;  b               1    4[COMMON] unsigned char 
  9400 ;; Auto vars:     Size  Location     Type
  9401 ;;  a               1    6[COMMON] unsigned char 
  9402 ;;  temp            1    7[COMMON] unsigned char 
  9403 ;; Return value:  Size  Location     Type
  9404 ;;                  1    wreg      void 
  9405 ;; Registers used:
  9406 ;;		wreg, status,2, status,0, pclath, cstack
  9407 ;; Tracked objects:
  9408 ;;		On entry : 0/0
  9409 ;;		On exit  : 0/0
  9410 ;;		Unchanged: 0/0
  9411 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9412 ;;      Params:         1       0       0       0       0
  9413 ;;      Locals:         2       0       0       0       0
  9414 ;;      Temps:          1       0       0       0       0
  9415 ;;      Totals:         4       0       0       0       0
  9416 ;;Total ram usage:        4 bytes
  9417 ;; Hardware stack levels used:    1
  9418 ;; Hardware stack levels required when called:    2
  9419 ;; This function calls:
  9420 ;;		_Lcd_Cmd
  9421 ;; This function is called by:
  9422 ;;		_main
  9423 ;; This function uses a non-reentrant model
  9424 ;;
  9425                           
  9426                           
  9427                           ;psect for function _Lcd_Set_Cursor
  9428  195F                     _Lcd_Set_Cursor:
  9429                           
  9430                           ;incstack = 0
  9431                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9432                           ;Lcd_Set_Cursor@a stored from wreg
  9433  195F  00F6               	movwf	Lcd_Set_Cursor@a
  9434  1960                     l3192:
  9435                           
  9436                           ;LCD.c: 34:     char temp;;LCD.c: 35:     if (a == 1) {
  9437  1960  0376               	decf	Lcd_Set_Cursor@a,w
  9438  1961  1D03               	btfss	3,2
  9439  1962  2964               	goto	u5131
  9440  1963  2965               	goto	u5130
  9441  1964                     u5131:
  9442  1964  2971               	goto	l3198
  9443  1965                     u5130:
  9444  1965                     l3194:
  9445                           
  9446                           ;LCD.c: 36:         temp = 0x80 + b - 1;
  9447  1965  0874               	movf	Lcd_Set_Cursor@b,w
  9448  1966  3E7F               	addlw	127
  9449  1967  00F5               	movwf	??_Lcd_Set_Cursor
  9450  1968  0875               	movf	??_Lcd_Set_Cursor,w
  9451  1969  00F7               	movwf	Lcd_Set_Cursor@temp
  9452  196A                     l3196:
  9453                           
  9454                           ;LCD.c: 37:         Lcd_Cmd(temp);
  9455  196A  0877               	movf	Lcd_Set_Cursor@temp,w
  9456  196B  160A  158A  212A  160A  158A  	fcall	_Lcd_Cmd
  9457                           
  9458                           ;LCD.c: 38:     } else if (a == 2) {
  9459  1970  2982               	goto	l21
  9460  1971                     l3198:
  9461  1971  3002               	movlw	2
  9462  1972  0676               	xorwf	Lcd_Set_Cursor@a,w
  9463  1973  1D03               	btfss	3,2
  9464  1974  2976               	goto	u5141
  9465  1975  2977               	goto	u5140
  9466  1976                     u5141:
  9467  1976  2982               	goto	l21
  9468  1977                     u5140:
  9469  1977                     l3200:
  9470                           
  9471                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  9472  1977  0874               	movf	Lcd_Set_Cursor@b,w
  9473  1978  3EBF               	addlw	191
  9474  1979  00F5               	movwf	??_Lcd_Set_Cursor
  9475  197A  0875               	movf	??_Lcd_Set_Cursor,w
  9476  197B  00F7               	movwf	Lcd_Set_Cursor@temp
  9477  197C                     l3202:
  9478                           
  9479                           ;LCD.c: 40:         Lcd_Cmd(temp);
  9480  197C  0877               	movf	Lcd_Set_Cursor@temp,w
  9481  197D  160A  158A  212A  160A  158A  	fcall	_Lcd_Cmd
  9482  1982                     l21:
  9483  1982  0008               	return
  9484  1983                     __end_of_Lcd_Set_Cursor:
  9485                           
  9486                           	psect	text31
  9487  1A06                     __ptext31:	
  9488 ;; *************** function _Lcd_Init *****************
  9489 ;; Defined at:
  9490 ;;		line 44 in file "LCD.c"
  9491 ;; Parameters:    Size  Location     Type
  9492 ;;		None
  9493 ;; Auto vars:     Size  Location     Type
  9494 ;;		None
  9495 ;; Return value:  Size  Location     Type
  9496 ;;                  1    wreg      void 
  9497 ;; Registers used:
  9498 ;;		wreg, status,2, status,0, pclath, cstack
  9499 ;; Tracked objects:
  9500 ;;		On entry : 0/0
  9501 ;;		On exit  : 0/0
  9502 ;;		Unchanged: 0/0
  9503 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9504 ;;      Params:         0       0       0       0       0
  9505 ;;      Locals:         0       0       0       0       0
  9506 ;;      Temps:          2       0       0       0       0
  9507 ;;      Totals:         2       0       0       0       0
  9508 ;;Total ram usage:        2 bytes
  9509 ;; Hardware stack levels used:    1
  9510 ;; Hardware stack levels required when called:    2
  9511 ;; This function calls:
  9512 ;;		_Lcd_Cmd
  9513 ;;		_Lcd_Port
  9514 ;; This function is called by:
  9515 ;;		_main
  9516 ;; This function uses a non-reentrant model
  9517 ;;
  9518                           
  9519                           
  9520                           ;psect for function _Lcd_Init
  9521  1A06                     _Lcd_Init:
  9522  1A06                     l3204:	
  9523                           ;incstack = 0
  9524                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9525                           
  9526                           
  9527                           ;LCD.c: 45:     Lcd_Port(0x00);
  9528  1A06  3000               	movlw	0
  9529  1A07  160A  158A  20B3  160A  158A  	fcall	_Lcd_Port
  9530  1A0C                     l3206:
  9531                           
  9532                           ;LCD.c: 46:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9533  1A0C  3034               	movlw	52
  9534  1A0D  00F5               	movwf	??_Lcd_Init+1
  9535  1A0E  30F1               	movlw	241
  9536  1A0F  00F4               	movwf	??_Lcd_Init
  9537  1A10                     u5917:
  9538  1A10  0BF4               	decfsz	??_Lcd_Init,f
  9539  1A11  2A10               	goto	u5917
  9540  1A12  0BF5               	decfsz	??_Lcd_Init+1,f
  9541  1A13  2A10               	goto	u5917
  9542  1A14  2A15               	nop2
  9543  1A15                     l3208:
  9544                           
  9545                           ;LCD.c: 47:     Lcd_Cmd(0x3F);
  9546  1A15  303F               	movlw	63
  9547  1A16  160A  158A  212A  160A  158A  	fcall	_Lcd_Cmd
  9548                           
  9549                           ;LCD.c: 48:     _delay((unsigned long)((10)*(8000000/4000.0)));
  9550  1A1B  301A               	movlw	26
  9551  1A1C  00F5               	movwf	??_Lcd_Init+1
  9552  1A1D  30F8               	movlw	248
  9553  1A1E  00F4               	movwf	??_Lcd_Init
  9554  1A1F                     u5927:
  9555  1A1F  0BF4               	decfsz	??_Lcd_Init,f
  9556  1A20  2A1F               	goto	u5927
  9557  1A21  0BF5               	decfsz	??_Lcd_Init+1,f
  9558  1A22  2A1F               	goto	u5927
  9559  1A23  0000               	nop
  9560  1A24                     l3210:
  9561                           
  9562                           ;LCD.c: 49:     Lcd_Cmd(0x3F);
  9563  1A24  303F               	movlw	63
  9564  1A25  160A  158A  212A  160A  158A  	fcall	_Lcd_Cmd
  9565  1A2A                     l3212:
  9566                           
  9567                           ;LCD.c: 50:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  9568  1A2A  3085               	movlw	133
  9569  1A2B  00F4               	movwf	??_Lcd_Init
  9570  1A2C                     u5937:
  9571  1A2C  0BF4               	decfsz	??_Lcd_Init,f
  9572  1A2D  2A2C               	goto	u5937
  9573                           
  9574                           ;LCD.c: 51:     Lcd_Cmd(0x3F);
  9575  1A2E  303F               	movlw	63
  9576  1A2F  160A  158A  212A  160A  158A  	fcall	_Lcd_Cmd
  9577                           
  9578                           ;LCD.c: 53:     Lcd_Cmd(0x38);
  9579  1A34  3038               	movlw	56
  9580  1A35  160A  158A  212A  160A  158A  	fcall	_Lcd_Cmd
  9581                           
  9582                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
  9583  1A3A  300C               	movlw	12
  9584  1A3B  160A  158A  212A  160A  158A  	fcall	_Lcd_Cmd
  9585                           
  9586                           ;LCD.c: 55:     Lcd_Cmd(0x06);
  9587  1A40  3006               	movlw	6
  9588  1A41  160A  158A  212A  160A  158A  	fcall	_Lcd_Cmd
  9589  1A46                     l24:
  9590  1A46  0008               	return
  9591  1A47                     __end_of_Lcd_Init:
  9592                           
  9593                           	psect	text32
  9594  18CC                     __ptext32:	
  9595 ;; *************** function _Lcd_Clear *****************
  9596 ;; Defined at:
  9597 ;;		line 28 in file "LCD.c"
  9598 ;; Parameters:    Size  Location     Type
  9599 ;;		None
  9600 ;; Auto vars:     Size  Location     Type
  9601 ;;		None
  9602 ;; Return value:  Size  Location     Type
  9603 ;;                  1    wreg      void 
  9604 ;; Registers used:
  9605 ;;		wreg, status,2, status,0, pclath, cstack
  9606 ;; Tracked objects:
  9607 ;;		On entry : 0/0
  9608 ;;		On exit  : 0/0
  9609 ;;		Unchanged: 0/0
  9610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9611 ;;      Params:         0       0       0       0       0
  9612 ;;      Locals:         0       0       0       0       0
  9613 ;;      Temps:          0       0       0       0       0
  9614 ;;      Totals:         0       0       0       0       0
  9615 ;;Total ram usage:        0 bytes
  9616 ;; Hardware stack levels used:    1
  9617 ;; Hardware stack levels required when called:    2
  9618 ;; This function calls:
  9619 ;;		_Lcd_Cmd
  9620 ;; This function is called by:
  9621 ;;		_main
  9622 ;; This function uses a non-reentrant model
  9623 ;;
  9624                           
  9625                           
  9626                           ;psect for function _Lcd_Clear
  9627  18CC                     _Lcd_Clear:
  9628  18CC                     l3190:	
  9629                           ;incstack = 0
  9630                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9631                           
  9632                           
  9633                           ;LCD.c: 29:     Lcd_Cmd(0);
  9634  18CC  3000               	movlw	0
  9635  18CD  160A  158A  212A  160A  158A  	fcall	_Lcd_Cmd
  9636                           
  9637                           ;LCD.c: 30:     Lcd_Cmd(1);
  9638  18D2  3001               	movlw	1
  9639  18D3  160A  158A  212A  160A  158A  	fcall	_Lcd_Cmd
  9640  18D8                     l15:
  9641  18D8  0008               	return
  9642  18D9                     __end_of_Lcd_Clear:
  9643                           
  9644                           	psect	text33
  9645  192A                     __ptext33:	
  9646 ;; *************** function _Lcd_Cmd *****************
  9647 ;; Defined at:
  9648 ;;		line 20 in file "LCD.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;  a               1    wreg     unsigned char 
  9651 ;; Auto vars:     Size  Location     Type
  9652 ;;  a               1    3[COMMON] unsigned char 
  9653 ;; Return value:  Size  Location     Type
  9654 ;;                  1    wreg      void 
  9655 ;; Registers used:
  9656 ;;		wreg, status,2, status,0, pclath, cstack
  9657 ;; Tracked objects:
  9658 ;;		On entry : 0/0
  9659 ;;		On exit  : 0/0
  9660 ;;		Unchanged: 0/0
  9661 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9662 ;;      Params:         0       0       0       0       0
  9663 ;;      Locals:         1       0       0       0       0
  9664 ;;      Temps:          2       0       0       0       0
  9665 ;;      Totals:         3       0       0       0       0
  9666 ;;Total ram usage:        3 bytes
  9667 ;; Hardware stack levels used:    1
  9668 ;; Hardware stack levels required when called:    1
  9669 ;; This function calls:
  9670 ;;		_Lcd_Port
  9671 ;; This function is called by:
  9672 ;;		_Lcd_Clear
  9673 ;;		_Lcd_Set_Cursor
  9674 ;;		_Lcd_Init
  9675 ;; This function uses a non-reentrant model
  9676 ;;
  9677                           
  9678                           
  9679                           ;psect for function _Lcd_Cmd
  9680  192A                     _Lcd_Cmd:
  9681                           
  9682                           ;incstack = 0
  9683                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9684                           ;Lcd_Cmd@a stored from wreg
  9685  192A  00F3               	movwf	Lcd_Cmd@a
  9686  192B                     l2808:
  9687                           
  9688                           ;LCD.c: 21:     PORTEbits.RE0 = 0;
  9689  192B  1283               	bcf	3,5	;RP0=0, select bank0
  9690  192C  1303               	bcf	3,6	;RP1=0, select bank0
  9691  192D  1009               	bcf	9,0	;volatile
  9692  192E                     l2810:
  9693                           
  9694                           ;LCD.c: 22:     Lcd_Port(a);
  9695  192E  0873               	movf	Lcd_Cmd@a,w
  9696  192F  160A  158A  20B3  160A  158A  	fcall	_Lcd_Port
  9697  1934                     l2812:
  9698                           
  9699                           ;LCD.c: 23:     PORTEbits.RE1 = 1;
  9700  1934  1283               	bcf	3,5	;RP0=0, select bank0
  9701  1935  1303               	bcf	3,6	;RP1=0, select bank0
  9702  1936  1489               	bsf	9,1	;volatile
  9703  1937                     l2814:
  9704                           
  9705                           ;LCD.c: 24:     _delay((unsigned long)((4)*(8000000/4000.0)));
  9706  1937  300B               	movlw	11
  9707  1938  00F2               	movwf	??_Lcd_Cmd+1
  9708  1939  3062               	movlw	98
  9709  193A  00F1               	movwf	??_Lcd_Cmd
  9710  193B                     u5947:
  9711  193B  0BF1               	decfsz	??_Lcd_Cmd,f
  9712  193C  293B               	goto	u5947
  9713  193D  0BF2               	decfsz	??_Lcd_Cmd+1,f
  9714  193E  293B               	goto	u5947
  9715  193F  0000               	nop
  9716  1940                     l2816:
  9717                           
  9718                           ;LCD.c: 25:     PORTEbits.RE1 = 0;
  9719  1940  1283               	bcf	3,5	;RP0=0, select bank0
  9720  1941  1303               	bcf	3,6	;RP1=0, select bank0
  9721  1942  1089               	bcf	9,1	;volatile
  9722  1943                     l12:
  9723  1943  0008               	return
  9724  1944                     __end_of_Lcd_Cmd:
  9725                           
  9726                           	psect	text34
  9727  18B3                     __ptext34:	
  9728 ;; *************** function _Lcd_Port *****************
  9729 ;; Defined at:
  9730 ;;		line 16 in file "LCD.c"
  9731 ;; Parameters:    Size  Location     Type
  9732 ;;  a               1    wreg     unsigned char 
  9733 ;; Auto vars:     Size  Location     Type
  9734 ;;  a               1    0[COMMON] unsigned char 
  9735 ;; Return value:  Size  Location     Type
  9736 ;;                  1    wreg      void 
  9737 ;; Registers used:
  9738 ;;		wreg
  9739 ;; Tracked objects:
  9740 ;;		On entry : 0/0
  9741 ;;		On exit  : 0/0
  9742 ;;		Unchanged: 0/0
  9743 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9744 ;;      Params:         0       0       0       0       0
  9745 ;;      Locals:         1       0       0       0       0
  9746 ;;      Temps:          0       0       0       0       0
  9747 ;;      Totals:         1       0       0       0       0
  9748 ;;Total ram usage:        1 bytes
  9749 ;; Hardware stack levels used:    1
  9750 ;; This function calls:
  9751 ;;		Nothing
  9752 ;; This function is called by:
  9753 ;;		_Lcd_Cmd
  9754 ;;		_Lcd_Init
  9755 ;;		_Lcd_Write_Char
  9756 ;; This function uses a non-reentrant model
  9757 ;;
  9758                           
  9759                           
  9760                           ;psect for function _Lcd_Port
  9761  18B3                     _Lcd_Port:
  9762                           
  9763                           ;incstack = 0
  9764                           ; Regs used in _Lcd_Port: [wreg]
  9765                           ;Lcd_Port@a stored from wreg
  9766  18B3  00F0               	movwf	Lcd_Port@a
  9767  18B4                     l2342:
  9768                           
  9769                           ;LCD.c: 17:     PORTB = a;
  9770  18B4  0870               	movf	Lcd_Port@a,w
  9771  18B5  1283               	bcf	3,5	;RP0=0, select bank0
  9772  18B6  1303               	bcf	3,6	;RP1=0, select bank0
  9773  18B7  0086               	movwf	6	;volatile
  9774  18B8                     l9:
  9775  18B8  0008               	return
  9776  18B9                     __end_of_Lcd_Port:
  9777                           
  9778                           	psect	text35
  9779  18FF                     __ptext35:	
  9780 ;; *************** function _INIT_UART *****************
  9781 ;; Defined at:
  9782 ;;		line 10 in file "UART.c"
  9783 ;; Parameters:    Size  Location     Type
  9784 ;;		None
  9785 ;; Auto vars:     Size  Location     Type
  9786 ;;		None
  9787 ;; Return value:  Size  Location     Type
  9788 ;;                  1    wreg      void 
  9789 ;; Registers used:
  9790 ;;		wreg
  9791 ;; Tracked objects:
  9792 ;;		On entry : 0/0
  9793 ;;		On exit  : 0/0
  9794 ;;		Unchanged: 0/0
  9795 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9796 ;;      Params:         0       0       0       0       0
  9797 ;;      Locals:         0       0       0       0       0
  9798 ;;      Temps:          0       0       0       0       0
  9799 ;;      Totals:         0       0       0       0       0
  9800 ;;Total ram usage:        0 bytes
  9801 ;; Hardware stack levels used:    1
  9802 ;; This function calls:
  9803 ;;		Nothing
  9804 ;; This function is called by:
  9805 ;;		_main
  9806 ;; This function uses a non-reentrant model
  9807 ;;
  9808                           
  9809                           
  9810                           ;psect for function _INIT_UART
  9811  18FF                     _INIT_UART:
  9812  18FF                     l3246:	
  9813                           ;incstack = 0
  9814                           ; Regs used in _INIT_UART: [wreg]
  9815                           
  9816                           
  9817                           ;UART.c: 11:     TRISCbits.TRISC7=1 ;
  9818  18FF  1683               	bsf	3,5	;RP0=1, select bank1
  9819  1900  1303               	bcf	3,6	;RP1=0, select bank1
  9820  1901  1787               	bsf	7,7	;volatile
  9821                           
  9822                           ;UART.c: 12:     TXSTAbits.SYNC = 0;
  9823  1902  1218               	bcf	24,4	;volatile
  9824                           
  9825                           ;UART.c: 13:     RCSTAbits.SPEN = 1;
  9826  1903  1283               	bcf	3,5	;RP0=0, select bank0
  9827  1904  1303               	bcf	3,6	;RP1=0, select bank0
  9828  1905  1798               	bsf	24,7	;volatile
  9829                           
  9830                           ;UART.c: 14:     PIE1bits.RCIE = 1;
  9831  1906  1683               	bsf	3,5	;RP0=1, select bank1
  9832  1907  1303               	bcf	3,6	;RP1=0, select bank1
  9833  1908  168C               	bsf	12,5	;volatile
  9834                           
  9835                           ;UART.c: 15:     INTCONbits.GIE = 1;
  9836  1909  178B               	bsf	11,7	;volatile
  9837                           
  9838                           ;UART.c: 16:     TXSTAbits.BRGH = 0;
  9839  190A  1118               	bcf	24,2	;volatile
  9840                           
  9841                           ;UART.c: 17:     BAUDCTLbits.BRG16 = 1;
  9842  190B  1683               	bsf	3,5	;RP0=1, select bank3
  9843  190C  1703               	bsf	3,6	;RP1=1, select bank3
  9844  190D  1587               	bsf	7,3	;volatile
  9845                           
  9846                           ;UART.c: 18:     TXSTAbits.TXEN = 1;
  9847  190E  1683               	bsf	3,5	;RP0=1, select bank1
  9848  190F  1303               	bcf	3,6	;RP1=0, select bank1
  9849  1910  1698               	bsf	24,5	;volatile
  9850  1911                     l3248:
  9851                           
  9852                           ;UART.c: 19:     SPBRG = 25;
  9853  1911  3019               	movlw	25
  9854  1912  0099               	movwf	25	;volatile
  9855  1913                     l133:
  9856  1913  0008               	return
  9857  1914                     __end_of_INIT_UART:
  9858  007E                     btemp	set	126	;btemp
  9859  007E                     wtemp0	set	126
  9860                           
  9861                           	psect	config
  9862                           
  9863                           ;Config register CONFIG1 @ 0x2007
  9864                           ;	Oscillator Selection bits
  9865                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  9866                           ;	Watchdog Timer Enable bit
  9867                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9868                           ;	Power-up Timer Enable bit
  9869                           ;	PWRTE = OFF, PWRT disabled
  9870                           ;	RE3/MCLR pin function select bit
  9871                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9872                           ;	Code Protection bit
  9873                           ;	CP = OFF, Program memory code protection is disabled
  9874                           ;	Data Code Protection bit
  9875                           ;	CPD = OFF, Data memory code protection is disabled
  9876                           ;	Brown Out Reset Selection bits
  9877                           ;	BOREN = OFF, BOR disabled
  9878                           ;	Internal External Switchover bit
  9879                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9880                           ;	Fail-Safe Clock Monitor Enabled bit
  9881                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9882                           ;	Low Voltage Programming Enable bit
  9883                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9884                           ;	In-Circuit Debugger Mode bit
  9885                           ;	DEBUG = 0x1, unprogrammed default
  9886  2007                     	org	8199
  9887  2007  20D5               	dw	8405
  9888                           
  9889                           ;Config register CONFIG2 @ 0x2008
  9890                           ;	Brown-out Reset Selection bit
  9891                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9892                           ;	Flash Program Memory Self Write Enable bits
  9893                           ;	WRT = OFF, Write protection off
  9894  2008                     	org	8200
  9895  2008  3FFF               	dw	16383
  9896                           
  9897                           	psect	text2_split_1
  9898  01BA                     u5370:
  9899  01BA                     l3356:
  9900  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  9901  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  9902  01BC  0842               	movf	(sprintf@fval+3)^(0+128),w
  9903  01BD  00F3               	movwf	___fleq@ff1+3
  9904  01BE  0841               	movf	(sprintf@fval+2)^(0+128),w
  9905  01BF  00F2               	movwf	___fleq@ff1+2
  9906  01C0  0840               	movf	(sprintf@fval+1)^(0+128),w
  9907  01C1  00F1               	movwf	___fleq@ff1+1
  9908  01C2  083F               	movf	sprintf@fval^(0+128),w
  9909  01C3  00F0               	movwf	___fleq@ff1
  9910  01C4  3000               	movlw	0
  9911  01C5  00F7               	movwf	___fleq@ff2+3
  9912  01C6  3000               	movlw	0
  9913  01C7  00F6               	movwf	___fleq@ff2+2
  9914  01C8  3000               	movlw	0
  9915  01C9  00F5               	movwf	___fleq@ff2+1
  9916  01CA  3000               	movlw	0
  9917  01CB  00F4               	movwf	___fleq@ff2
  9918  01CC  160A  158A  22CD  120A  118A  	fcall	___fleq
  9919  01D1  1803               	btfsc	3,0
  9920  01D2  29D4               	goto	u5381
  9921  01D3  29D5               	goto	u5380
  9922  01D4                     u5381:
  9923  01D4  2A7D               	goto	l3376
  9924  01D5                     u5380:
  9925  01D5                     l3358:
  9926  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  9927  01D6  1303               	bcf	3,6	;RP1=0, select bank1
  9928  01D7  0842               	movf	(sprintf@fval+3)^(0+128),w
  9929  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  9930  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  9931  01DA  00D4               	movwf	___fltol@f1+3
  9932  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  9933  01DC  1303               	bcf	3,6	;RP1=0, select bank1
  9934  01DD  0841               	movf	(sprintf@fval+2)^(0+128),w
  9935  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  9936  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  9937  01E0  00D3               	movwf	___fltol@f1+2
  9938  01E1  1683               	bsf	3,5	;RP0=1, select bank1
  9939  01E2  1303               	bcf	3,6	;RP1=0, select bank1
  9940  01E3  0840               	movf	(sprintf@fval+1)^(0+128),w
  9941  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  9942  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  9943  01E6  00D2               	movwf	___fltol@f1+1
  9944  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  9945  01E8  1303               	bcf	3,6	;RP1=0, select bank1
  9946  01E9  083F               	movf	sprintf@fval^(0+128),w
  9947  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  9948  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  9949  01EC  00D1               	movwf	___fltol@f1
  9950  01ED  120A  158A  2007  120A  118A  	fcall	___fltol
  9951  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  9952  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  9953  01F4  0854               	movf	?___fltol+3,w
  9954  01F5  0453               	iorwf	?___fltol+2,w
  9955  01F6  0452               	iorwf	?___fltol+1,w
  9956  01F7  0451               	iorwf	?___fltol,w
  9957  01F8  1D03               	skipz
  9958  01F9  29FB               	goto	u5391
  9959  01FA  29FC               	goto	u5390
  9960  01FB                     u5391:
  9961  01FB  2A7D               	goto	l3376
  9962  01FC                     u5390:
  9963  01FC                     l3360:
  9964  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  9965  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  9966  01FE  083E               	movf	(sprintf@eexp+1)^(0+128),w
  9967  01FF  3A80               	xorlw	128
  9968  0200  00FF               	movwf	btemp+1
  9969  0201  3080               	movlw	128
  9970  0202  027F               	subwf	btemp+1,w
  9971  0203  1D03               	skipz
  9972  0204  2A07               	goto	u5405
  9973  0205  3002               	movlw	2
  9974  0206  023D               	subwf	sprintf@eexp^(0+128),w
  9975  0207                     u5405:
  9976  0207  1C03               	skipc
  9977  0208  2A0A               	goto	u5401
  9978  0209  2A0B               	goto	u5400
  9979  020A                     u5401:
  9980  020A  2A7D               	goto	l3376
  9981  020B                     u5400:
  9982  020B                     l3362:
  9983                           
  9984                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9985  020B  1683               	bsf	3,5	;RP0=1, select bank1
  9986  020C  1303               	bcf	3,6	;RP1=0, select bank1
  9987  020D  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  9988  020E  00F3               	movwf	___flge@ff1+3
  9989  020F  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  9990  0210  00F2               	movwf	___flge@ff1+2
  9991  0211  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  9992  0212  00F1               	movwf	___flge@ff1+1
  9993  0213  0835               	movf	sprintf@tmpval^(0+128),w
  9994  0214  00F0               	movwf	___flge@ff1
  9995  0215  3040               	movlw	64
  9996  0216  00F7               	movwf	___flge@ff2+3
  9997  0217  3089               	movlw	137
  9998  0218  00F6               	movwf	___flge@ff2+2
  9999  0219  3070               	movlw	112
 10000  021A  00F5               	movwf	___flge@ff2+1
 10001  021B  305F               	movlw	95
 10002  021C  00F4               	movwf	___flge@ff2
 10003  021D  160A  158A  2499  120A  118A  	fcall	___flge
 10004  0222  1803               	btfsc	3,0
 10005  0223  2A25               	goto	u5411
 10006  0224  2A26               	goto	u5410
 10007  0225                     u5411:
 10008  0225  2A2F               	goto	l3366
 10009  0226                     u5410:
 10010  0226                     l3364:
 10011                           
 10012                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10013  0226  30F7               	movlw	247
 10014  0227  1683               	bsf	3,5	;RP0=1, select bank1
 10015  0228  1303               	bcf	3,6	;RP1=0, select bank1
 10016  0229  07BD               	addwf	sprintf@eexp^(0+128),f
 10017  022A  1803               	skipnc
 10018  022B  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
 10019  022C  30FF               	movlw	255
 10020  022D  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
 10021                           
 10022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10023  022E  2A37               	goto	l3368
 10024  022F                     l3366:
 10025                           
 10026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10027  022F  30F8               	movlw	248
 10028  0230  1683               	bsf	3,5	;RP0=1, select bank1
 10029  0231  1303               	bcf	3,6	;RP1=0, select bank1
 10030  0232  07BD               	addwf	sprintf@eexp^(0+128),f
 10031  0233  1803               	skipnc
 10032  0234  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
 10033  0235  30FF               	movlw	255
 10034  0236  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
 10035  0237                     l3368:
 10036                           
 10037                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10038  0237  083D               	movf	sprintf@eexp^(0+128),w
 10039  0238  120A  158A  2140  120A  118A  	fcall	_scale
 10040  023D  1283               	bcf	3,5	;RP0=0, select bank0
 10041  023E  1303               	bcf	3,6	;RP1=0, select bank0
 10042  023F  0841               	movf	?_scale+3,w
 10043  0240  1683               	bsf	3,5	;RP0=1, select bank1
 10044  0241  1303               	bcf	3,6	;RP1=0, select bank1
 10045  0242  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
 10046  0243  1283               	bcf	3,5	;RP0=0, select bank0
 10047  0244  1303               	bcf	3,6	;RP1=0, select bank0
 10048  0245  0840               	movf	?_scale+2,w
 10049  0246  1683               	bsf	3,5	;RP0=1, select bank1
 10050  0247  1303               	bcf	3,6	;RP1=0, select bank1
 10051  0248  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
 10052  0249  1283               	bcf	3,5	;RP0=0, select bank0
 10053  024A  1303               	bcf	3,6	;RP1=0, select bank0
 10054  024B  083F               	movf	?_scale+1,w
 10055  024C  1683               	bsf	3,5	;RP0=1, select bank1
 10056  024D  1303               	bcf	3,6	;RP1=0, select bank1
 10057  024E  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
 10058  024F  1283               	bcf	3,5	;RP0=0, select bank0
 10059  0250  1303               	bcf	3,6	;RP1=0, select bank0
 10060  0251  083E               	movf	?_scale,w
 10061  0252  1683               	bsf	3,5	;RP0=1, select bank1
 10062  0253  1303               	bcf	3,6	;RP1=0, select bank1
 10063  0254  00B5               	movwf	sprintf@tmpval^(0+128)
 10064  0255                     l3370:
 10065  0255  0842               	movf	(sprintf@fval+3)^(0+128),w
 10066  0256  00F3               	movwf	__div_to_l_@f1+3
 10067  0257  0841               	movf	(sprintf@fval+2)^(0+128),w
 10068  0258  00F2               	movwf	__div_to_l_@f1+2
 10069  0259  0840               	movf	(sprintf@fval+1)^(0+128),w
 10070  025A  00F1               	movwf	__div_to_l_@f1+1
 10071  025B  083F               	movf	sprintf@fval^(0+128),w
 10072  025C  00F0               	movwf	__div_to_l_@f1
 10073  025D  0838               	movf	(sprintf@tmpval+3)^(0+128),w
 10074  025E  00F7               	movwf	__div_to_l_@f2+3
 10075  025F  0837               	movf	(sprintf@tmpval+2)^(0+128),w
 10076  0260  00F6               	movwf	__div_to_l_@f2+2
 10077  0261  0836               	movf	(sprintf@tmpval+1)^(0+128),w
 10078  0262  00F5               	movwf	__div_to_l_@f2+1
 10079  0263  0835               	movf	sprintf@tmpval^(0+128),w
 10080  0264  00F4               	movwf	__div_to_l_@f2
 10081  0265  120A  118A  20FC  120A  118A  	fcall	__div_to_l_
 10082  026A  0873               	movf	?__div_to_l_+3,w
 10083  026B  1683               	bsf	3,5	;RP0=1, select bank1
 10084  026C  1303               	bcf	3,6	;RP1=0, select bank1
 10085  026D  00BC               	movwf	(sprintf@val+3)^(0+128)
 10086  026E  0872               	movf	?__div_to_l_+2,w
 10087  026F  00BB               	movwf	(sprintf@val+2)^(0+128)
 10088  0270  0871               	movf	?__div_to_l_+1,w
 10089  0271  00BA               	movwf	(sprintf@val+1)^(0+128)
 10090  0272  0870               	movf	?__div_to_l_,w
 10091  0273  00B9               	movwf	sprintf@val^(0+128)
 10092  0274                     l3374:
 10093                           
 10094                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10095  0274  3000               	movlw	0
 10096  0275  00C2               	movwf	(sprintf@fval+3)^(0+128)
 10097  0276  3000               	movlw	0
 10098  0277  00C1               	movwf	(sprintf@fval+2)^(0+128)
 10099  0278  3000               	movlw	0
 10100  0279  00C0               	movwf	(sprintf@fval+1)^(0+128)
 10101  027A  3000               	movlw	0
 10102  027B  00BF               	movwf	sprintf@fval^(0+128)
 10103                           
 10104                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10105  027C  2B01               	goto	l3382
 10106  027D                     l3376:
 10107                           
 10108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10109  027D  1683               	bsf	3,5	;RP0=1, select bank1
 10110  027E  1303               	bcf	3,6	;RP1=0, select bank1
 10111  027F  0842               	movf	(sprintf@fval+3)^(0+128),w
 10112  0280  1283               	bcf	3,5	;RP0=0, select bank0
 10113  0281  1303               	bcf	3,6	;RP1=0, select bank0
 10114  0282  00D4               	movwf	___fltol@f1+3
 10115  0283  1683               	bsf	3,5	;RP0=1, select bank1
 10116  0284  1303               	bcf	3,6	;RP1=0, select bank1
 10117  0285  0841               	movf	(sprintf@fval+2)^(0+128),w
 10118  0286  1283               	bcf	3,5	;RP0=0, select bank0
 10119  0287  1303               	bcf	3,6	;RP1=0, select bank0
 10120  0288  00D3               	movwf	___fltol@f1+2
 10121  0289  1683               	bsf	3,5	;RP0=1, select bank1
 10122  028A  1303               	bcf	3,6	;RP1=0, select bank1
 10123  028B  0840               	movf	(sprintf@fval+1)^(0+128),w
 10124  028C  1283               	bcf	3,5	;RP0=0, select bank0
 10125  028D  1303               	bcf	3,6	;RP1=0, select bank0
 10126  028E  00D2               	movwf	___fltol@f1+1
 10127  028F  1683               	bsf	3,5	;RP0=1, select bank1
 10128  0290  1303               	bcf	3,6	;RP1=0, select bank1
 10129  0291  083F               	movf	sprintf@fval^(0+128),w
 10130  0292  1283               	bcf	3,5	;RP0=0, select bank0
 10131  0293  1303               	bcf	3,6	;RP1=0, select bank0
 10132  0294  00D1               	movwf	___fltol@f1
 10133  0295  120A  158A  2007  120A  118A  	fcall	___fltol
 10134  029A  1283               	bcf	3,5	;RP0=0, select bank0
 10135  029B  1303               	bcf	3,6	;RP1=0, select bank0
 10136  029C  0854               	movf	?___fltol+3,w
 10137  029D  1683               	bsf	3,5	;RP0=1, select bank1
 10138  029E  1303               	bcf	3,6	;RP1=0, select bank1
 10139  029F  00BC               	movwf	(sprintf@val+3)^(0+128)
 10140  02A0  1283               	bcf	3,5	;RP0=0, select bank0
 10141  02A1  1303               	bcf	3,6	;RP1=0, select bank0
 10142  02A2  0853               	movf	?___fltol+2,w
 10143  02A3  1683               	bsf	3,5	;RP0=1, select bank1
 10144  02A4  1303               	bcf	3,6	;RP1=0, select bank1
 10145  02A5  00BB               	movwf	(sprintf@val+2)^(0+128)
 10146  02A6  1283               	bcf	3,5	;RP0=0, select bank0
 10147  02A7  1303               	bcf	3,6	;RP1=0, select bank0
 10148  02A8  0852               	movf	?___fltol+1,w
 10149  02A9  1683               	bsf	3,5	;RP0=1, select bank1
 10150  02AA  1303               	bcf	3,6	;RP1=0, select bank1
 10151  02AB  00BA               	movwf	(sprintf@val+1)^(0+128)
 10152  02AC  1283               	bcf	3,5	;RP0=0, select bank0
 10153  02AD  1303               	bcf	3,6	;RP1=0, select bank0
 10154  02AE  0851               	movf	?___fltol,w
 10155  02AF  1683               	bsf	3,5	;RP0=1, select bank1
 10156  02B0  1303               	bcf	3,6	;RP1=0, select bank1
 10157  02B1  00B9               	movwf	sprintf@val^(0+128)
 10158  02B2                     l3378:
 10159                           
 10160                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10161  02B2  083C               	movf	(sprintf@val+3)^(0+128),w
 10162  02B3  00F3               	movwf	___xxtofl@val+3
 10163  02B4  083B               	movf	(sprintf@val+2)^(0+128),w
 10164  02B5  00F2               	movwf	___xxtofl@val+2
 10165  02B6  083A               	movf	(sprintf@val+1)^(0+128),w
 10166  02B7  00F1               	movwf	___xxtofl@val+1
 10167  02B8  0839               	movf	sprintf@val^(0+128),w
 10168  02B9  00F0               	movwf	___xxtofl@val
 10169  02BA  3000               	movlw	0
 10170  02BB  160A  158A  253B  120A  118A  	fcall	___xxtofl
 10171  02C0  0873               	movf	?___xxtofl+3,w
 10172  02C1  1283               	bcf	3,5	;RP0=0, select bank0
 10173  02C2  1303               	bcf	3,6	;RP1=0, select bank0
 10174  02C3  00E9               	movwf	___flsub@a+3
 10175  02C4  0872               	movf	?___xxtofl+2,w
 10176  02C5  00E8               	movwf	___flsub@a+2
 10177  02C6  0871               	movf	?___xxtofl+1,w
 10178  02C7  00E7               	movwf	___flsub@a+1
 10179  02C8  0870               	movf	?___xxtofl,w
 10180  02C9  00E6               	movwf	___flsub@a
 10181  02CA  1683               	bsf	3,5	;RP0=1, select bank1
 10182  02CB  1303               	bcf	3,6	;RP1=0, select bank1
 10183  02CC  0842               	movf	(sprintf@fval+3)^(0+128),w
 10184  02CD  1283               	bcf	3,5	;RP0=0, select bank0
 10185  02CE  1303               	bcf	3,6	;RP1=0, select bank0
 10186  02CF  00ED               	movwf	___flsub@b+3
 10187  02D0  1683               	bsf	3,5	;RP0=1, select bank1
 10188  02D1  1303               	bcf	3,6	;RP1=0, select bank1
 10189  02D2  0841               	movf	(sprintf@fval+2)^(0+128),w
 10190  02D3  1283               	bcf	3,5	;RP0=0, select bank0
 10191  02D4  1303               	bcf	3,6	;RP1=0, select bank0
 10192  02D5  00EC               	movwf	___flsub@b+2
 10193  02D6  1683               	bsf	3,5	;RP0=1, select bank1
 10194  02D7  1303               	bcf	3,6	;RP1=0, select bank1
 10195  02D8  0840               	movf	(sprintf@fval+1)^(0+128),w
 10196  02D9  1283               	bcf	3,5	;RP0=0, select bank0
 10197  02DA  1303               	bcf	3,6	;RP1=0, select bank0
 10198  02DB  00EB               	movwf	___flsub@b+1
 10199  02DC  1683               	bsf	3,5	;RP0=1, select bank1
 10200  02DD  1303               	bcf	3,6	;RP1=0, select bank1
 10201  02DE  083F               	movf	sprintf@fval^(0+128),w
 10202  02DF  1283               	bcf	3,5	;RP0=0, select bank0
 10203  02E0  1303               	bcf	3,6	;RP1=0, select bank0
 10204  02E1  00EA               	movwf	___flsub@b
 10205  02E2  160A  158A  2183  120A  118A  	fcall	___flsub
 10206  02E7  1283               	bcf	3,5	;RP0=0, select bank0
 10207  02E8  1303               	bcf	3,6	;RP1=0, select bank0
 10208  02E9  0869               	movf	?___flsub+3,w
 10209  02EA  1683               	bsf	3,5	;RP0=1, select bank1
 10210  02EB  1303               	bcf	3,6	;RP1=0, select bank1
 10211  02EC  00C2               	movwf	(sprintf@fval+3)^(0+128)
 10212  02ED  1283               	bcf	3,5	;RP0=0, select bank0
 10213  02EE  1303               	bcf	3,6	;RP1=0, select bank0
 10214  02EF  0868               	movf	?___flsub+2,w
 10215  02F0  1683               	bsf	3,5	;RP0=1, select bank1
 10216  02F1  1303               	bcf	3,6	;RP1=0, select bank1
 10217  02F2  00C1               	movwf	(sprintf@fval+2)^(0+128)
 10218  02F3  1283               	bcf	3,5	;RP0=0, select bank0
 10219  02F4  1303               	bcf	3,6	;RP1=0, select bank0
 10220  02F5  0867               	movf	?___flsub+1,w
 10221  02F6  1683               	bsf	3,5	;RP0=1, select bank1
 10222  02F7  1303               	bcf	3,6	;RP1=0, select bank1
 10223  02F8  00C0               	movwf	(sprintf@fval+1)^(0+128)
 10224  02F9  1283               	bcf	3,5	;RP0=0, select bank0
 10225  02FA  1303               	bcf	3,6	;RP1=0, select bank0
 10226  02FB  0866               	movf	?___flsub,w
 10227  02FC  1683               	bsf	3,5	;RP0=1, select bank1
 10228  02FD  1303               	bcf	3,6	;RP1=0, select bank1
 10229  02FE  00BF               	movwf	sprintf@fval^(0+128)
 10230  02FF                     l3380:
 10231                           
 10232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10233  02FF  01BD               	clrf	sprintf@eexp^(0+128)
 10234  0300  01BE               	clrf	(sprintf@eexp+1)^(0+128)
 10235  0301                     l3382:
 10236                           
 10237                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10238  0301  01C5               	clrf	sprintf@c^(0+128)
 10239  0302  0AC5               	incf	sprintf@c^(0+128),f
 10240  0303                     l3388:
 10241                           
 10242                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10243  0303  0845               	movf	sprintf@c^(0+128),w
 10244  0304  00A7               	movwf	??_sprintf^(0+128)
 10245  0305  3001               	movlw	1
 10246  0306                     u5425:
 10247  0306  1003               	clrc
 10248  0307  0DA7               	rlf	??_sprintf^(0+128),f
 10249  0308  3EFF               	addlw	-1
 10250  0309  1D03               	skipz
 10251  030A  2B06               	goto	u5425
 10252  030B  1003               	clrc
 10253  030C  0D27               	rlf	??_sprintf^(0+128),w
 10254  030D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10255  030E  0084               	movwf	4
 10256  030F  120A  118A  200D  120A  118A  	fcall	stringdir
 10257  0314  00A8               	movwf	(??_sprintf+1)^(0+128)
 10258  0315  120A  118A  200D  120A  118A  	fcall	stringdir
 10259  031A  00A9               	movwf	((??_sprintf+1)^(0+128)+1)
 10260  031B  120A  118A  200D  120A  118A  	fcall	stringdir
 10261  0320  00AA               	movwf	((??_sprintf+1)^(0+128)+2)
 10262  0321  120A  118A  200D  120A  118A  	fcall	stringdir
 10263  0326  00AB               	movwf	((??_sprintf+1)^(0+128)+3)
 10264  0327  082B               	movf	(??_sprintf+4)^(0+128),w
 10265  0328  023C               	subwf	(sprintf@val+3)^(0+128),w
 10266  0329  1D03               	skipz
 10267  032A  2B35               	goto	u5435
 10268  032B  082A               	movf	(??_sprintf+3)^(0+128),w
 10269  032C  023B               	subwf	(sprintf@val+2)^(0+128),w
 10270  032D  1D03               	skipz
 10271  032E  2B35               	goto	u5435
 10272  032F  0829               	movf	(??_sprintf+2)^(0+128),w
 10273  0330  023A               	subwf	(sprintf@val+1)^(0+128),w
 10274  0331  1D03               	skipz
 10275  0332  2B35               	goto	u5435
 10276  0333  0828               	movf	(??_sprintf+1)^(0+128),w
 10277  0334  0239               	subwf	sprintf@val^(0+128),w
 10278  0335                     u5435:
 10279  0335  1803               	skipnc
 10280  0336  2B38               	goto	u5431
 10281  0337  2B39               	goto	u5430
 10282  0338                     u5431:
 10283  0338  2B3A               	goto	l3392
 10284  0339                     u5430:
 10285  0339  2B44               	goto	l3394
 10286  033A                     l3392:
 10287  033A  3001               	movlw	1
 10288  033B  00A7               	movwf	??_sprintf^(0+128)
 10289  033C  0827               	movf	??_sprintf^(0+128),w
 10290  033D  07C5               	addwf	sprintf@c^(0+128),f
 10291  033E  300A               	movlw	10
 10292  033F  0645               	xorwf	sprintf@c^(0+128),w
 10293  0340  1D03               	btfss	3,2
 10294  0341  2B43               	goto	u5441
 10295  0342  2B44               	goto	u5440
 10296  0343                     u5441:
 10297  0343  2B03               	goto	l3388
 10298  0344                     u5440:
 10299  0344                     l3394:
 10300                           
 10301                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10302  0344  0845               	movf	sprintf@c^(0+128),w
 10303  0345  0743               	addwf	sprintf@prec^(0+128),w
 10304  0346  00A7               	movwf	??_sprintf^(0+128)
 10305  0347  0844               	movf	(sprintf@prec+1)^(0+128),w
 10306  0348  1803               	skipnc
 10307  0349  0A44               	incf	(sprintf@prec+1)^(0+128),w
 10308  034A  00A8               	movwf	(??_sprintf^(0+128)+1)
 10309  034B  083D               	movf	sprintf@eexp^(0+128),w
 10310  034C  0727               	addwf	??_sprintf^(0+128),w
 10311  034D  00A9               	movwf	(??_sprintf+2)^(0+128)
 10312  034E  083E               	movf	(sprintf@eexp+1)^(0+128),w
 10313  034F  1803               	skipnc
 10314  0350  0A3E               	incf	(sprintf@eexp+1)^(0+128),w
 10315  0351  0728               	addwf	(??_sprintf+1)^(0+128),w
 10316  0352  00AA               	movwf	(??_sprintf+3)^(0+128)
 10317  0353  0829               	movf	(??_sprintf+2)^(0+128),w
 10318  0354  02B3               	subwf	sprintf@width^(0+128),f
 10319  0355  082A               	movf	(??_sprintf+3)^(0+128),w
 10320  0356  1C03               	skipc
 10321  0357  03B4               	decf	(sprintf@width+1)^(0+128),f
 10322  0358  02B4               	subwf	(sprintf@width+1)^(0+128),f
 10323                           
 10324                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10325  0359  0843               	movf	sprintf@prec^(0+128),w
 10326  035A  0444               	iorwf	(sprintf@prec+1)^(0+128),w
 10327  035B  1903               	btfsc	3,2
 10328  035C  2B5E               	goto	u5451
 10329  035D  2B5F               	goto	u5450
 10330  035E                     u5451:
 10331  035E  2B65               	goto	l3398
 10332  035F                     u5450:
 10333  035F                     l3396:
 10334                           
 10335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10336  035F  30FF               	movlw	255
 10337  0360  07B3               	addwf	sprintf@width^(0+128),f
 10338  0361  1803               	skipnc
 10339  0362  0AB4               	incf	(sprintf@width+1)^(0+128),f
 10340  0363  30FF               	movlw	255
 10341  0364  07B4               	addwf	(sprintf@width+1)^(0+128),f
 10342  0365                     l3398:
 10343                           
 10344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10345  0365  3003               	movlw	3
 10346  0366  0531               	andwf	sprintf@flag^(0+128),w
 10347  0367  00A7               	movwf	??_sprintf^(0+128)
 10348  0368  3000               	movlw	0
 10349  0369  0532               	andwf	(sprintf@flag+1)^(0+128),w
 10350  036A  00A8               	movwf	(??_sprintf+1)^(0+128)
 10351  036B  0827               	movf	??_sprintf^(0+128),w
 10352  036C  0428               	iorwf	(??_sprintf^(0+128)+1),w
 10353  036D  1903               	btfsc	3,2
 10354  036E  2B70               	goto	u5461
 10355  036F  2B71               	goto	u5460
 10356  0370                     u5461:
 10357  0370  2B8A               	goto	l3408
 10358  0371                     u5460:
 10359  0371                     l3400:
 10360                           
 10361                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10362  0371  30FF               	movlw	255
 10363  0372  07B3               	addwf	sprintf@width^(0+128),f
 10364  0373  1803               	skipnc
 10365  0374  0AB4               	incf	(sprintf@width+1)^(0+128),f
 10366  0375  30FF               	movlw	255
 10367  0376  07B4               	addwf	(sprintf@width+1)^(0+128),f
 10368  0377  2B8A               	goto	l3408
 10369  0378                     l3402:
 10370                           
 10371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10372  0378  3020               	movlw	32
 10373  0379  1683               	bsf	3,5	;RP0=1, select bank1
 10374  037A  1303               	bcf	3,6	;RP1=0, select bank1
 10375  037B  00A7               	movwf	??_sprintf^(0+128)
 10376  037C  0820               	movf	sprintf@sp^(0+128),w
 10377  037D  0084               	movwf	4
 10378  037E  1783               	bsf	3,7
 10379  037F  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10380  0380  1383               	bcf	3,7
 10381  0381  0827               	movf	??_sprintf^(0+128),w
 10382  0382  0080               	movwf	0
 10383  0383                     l3404:
 10384  0383  3001               	movlw	1
 10385  0384  07A0               	addwf	sprintf@sp^(0+128),f
 10386  0385  1803               	skipnc
 10387  0386  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 10388  0387  3000               	movlw	0
 10389  0388  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 10390  0389  2B71               	goto	l3400
 10391  038A                     l3408:
 10392                           
 10393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10394  038A  0834               	movf	(sprintf@width+1)^(0+128),w
 10395  038B  3A80               	xorlw	128
 10396  038C  00FF               	movwf	btemp+1
 10397  038D  3080               	movlw	128
 10398  038E  027F               	subwf	btemp+1,w
 10399  038F  1D03               	skipz
 10400  0390  2B93               	goto	u5475
 10401  0391  3001               	movlw	1
 10402  0392  0233               	subwf	sprintf@width^(0+128),w
 10403  0393                     u5475:
 10404  0393  1803               	skipnc
 10405  0394  2B96               	goto	u5471
 10406  0395  2B97               	goto	u5470
 10407  0396                     u5471:
 10408  0396  2B78               	goto	l3402
 10409  0397                     u5470:
 10410  0397                     l3410:
 10411                           
 10412                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10413  0397  3003               	movlw	3
 10414  0398  1683               	bsf	3,5	;RP0=1, select bank1
 10415  0399  1303               	bcf	3,6	;RP1=0, select bank1
 10416  039A  0531               	andwf	sprintf@flag^(0+128),w
 10417  039B  00A7               	movwf	??_sprintf^(0+128)
 10418  039C  3000               	movlw	0
 10419  039D  0532               	andwf	(sprintf@flag+1)^(0+128),w
 10420  039E  00A8               	movwf	(??_sprintf+1)^(0+128)
 10421  039F  0827               	movf	??_sprintf^(0+128),w
 10422  03A0  0428               	iorwf	(??_sprintf^(0+128)+1),w
 10423  03A1  1903               	btfsc	3,2
 10424  03A2  2BA4               	goto	u5481
 10425  03A3  2BA5               	goto	u5480
 10426  03A4                     u5481:
 10427  03A4  2C3A               	goto	l3424
 10428  03A5                     u5480:
 10429  03A5                     l3412:
 10430                           
 10431                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10432  03A5  302D               	movlw	45
 10433  03A6  00A7               	movwf	??_sprintf^(0+128)
 10434  03A7  0820               	movf	sprintf@sp^(0+128),w
 10435  03A8  0084               	movwf	4
 10436  03A9  1783               	bsf	3,7
 10437  03AA  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10438  03AB  1383               	bcf	3,7
 10439  03AC  0827               	movf	??_sprintf^(0+128),w
 10440  03AD  0080               	movwf	0
 10441  03AE                     l3414:
 10442  03AE  3001               	movlw	1
 10443  03AF  07A0               	addwf	sprintf@sp^(0+128),f
 10444  03B0  1803               	skipnc
 10445  03B1  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 10446  03B2  3000               	movlw	0
 10447  03B3  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 10448  03B4  2C3A               	goto	l3424
 10449  03B5                     l3416:
 10450                           
 10451                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10452  03B5  0845               	movf	sprintf@c^(0+128),w
 10453  03B6  00A7               	movwf	??_sprintf^(0+128)
 10454  03B7  3001               	movlw	1
 10455  03B8                     u5495:
 10456  03B8  1003               	clrc
 10457  03B9  0DA7               	rlf	??_sprintf^(0+128),f
 10458  03BA  3EFF               	addlw	-1
 10459  03BB  1D03               	skipz
 10460  03BC  2BB8               	goto	u5495
 10461  03BD  1003               	clrc
 10462  03BE  0D27               	rlf	??_sprintf^(0+128),w
 10463  03BF  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10464  03C0  0084               	movwf	4
 10465  03C1  120A  118A  200D  120A  118A  	fcall	stringdir
 10466  03C6  00F0               	movwf	___lldiv@divisor
 10467  03C7  120A  118A  200D  120A  118A  	fcall	stringdir
 10468  03CC  00F1               	movwf	___lldiv@divisor+1
 10469  03CD  120A  118A  200D  120A  118A  	fcall	stringdir
 10470  03D2  00F2               	movwf	___lldiv@divisor+2
 10471  03D3  120A  118A  200D  120A  118A  	fcall	stringdir
 10472  03D8  00F3               	movwf	___lldiv@divisor+3
 10473  03D9  083C               	movf	(sprintf@val+3)^(0+128),w
 10474  03DA  00F7               	movwf	___lldiv@dividend+3
 10475  03DB  083B               	movf	(sprintf@val+2)^(0+128),w
 10476  03DC  00F6               	movwf	___lldiv@dividend+2
 10477  03DD  083A               	movf	(sprintf@val+1)^(0+128),w
 10478  03DE  00F5               	movwf	___lldiv@dividend+1
 10479  03DF  0839               	movf	sprintf@val^(0+128),w
 10480  03E0  00F4               	movwf	___lldiv@dividend
 10481  03E1  160A  158A  23CA  120A  118A  	fcall	___lldiv
 10482  03E6  0873               	movf	?___lldiv+3,w
 10483  03E7  1683               	bsf	3,5	;RP0=1, select bank1
 10484  03E8  1303               	bcf	3,6	;RP1=0, select bank1
 10485  03E9  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
 10486  03EA  0872               	movf	?___lldiv+2,w
 10487  03EB  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
 10488  03EC  0871               	movf	?___lldiv+1,w
 10489  03ED  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
 10490  03EE  0870               	movf	?___lldiv,w
 10491  03EF  00B5               	movwf	sprintf@tmpval^(0+128)
 10492  03F0                     l3418:
 10493                           
 10494                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10495  03F0  3000               	movlw	0
 10496  03F1  1283               	bcf	3,5	;RP0=0, select bank0
 10497  03F2  1303               	bcf	3,6	;RP1=0, select bank0
 10498  03F3  00A3               	movwf	___llmod@divisor+3
 10499  03F4  3000               	movlw	0
 10500  03F5  00A2               	movwf	___llmod@divisor+2
 10501  03F6  3000               	movlw	0
 10502  03F7  00A1               	movwf	___llmod@divisor+1
 10503  03F8  300A               	movlw	10
 10504  03F9  00A0               	movwf	___llmod@divisor
 10505  03FA  1683               	bsf	3,5	;RP0=1, select bank1
 10506  03FB  1303               	bcf	3,6	;RP1=0, select bank1
 10507  03FC  0838               	movf	(sprintf@tmpval+3)^(0+128),w
 10508  03FD  1283               	bcf	3,5	;RP0=0, select bank0
 10509  03FE  1303               	bcf	3,6	;RP1=0, select bank0
 10510  03FF  00A7               	movwf	___llmod@dividend+3
 10511  0400  1683               	bsf	3,5	;RP0=1, select bank1
 10512  0401  1303               	bcf	3,6	;RP1=0, select bank1
 10513  0402  0837               	movf	(sprintf@tmpval+2)^(0+128),w
 10514  0403  1283               	bcf	3,5	;RP0=0, select bank0
 10515  0404  1303               	bcf	3,6	;RP1=0, select bank0
 10516  0405  00A6               	movwf	___llmod@dividend+2
 10517  0406  1683               	bsf	3,5	;RP0=1, select bank1
 10518  0407  1303               	bcf	3,6	;RP1=0, select bank1
 10519  0408  0836               	movf	(sprintf@tmpval+1)^(0+128),w
 10520  0409  1283               	bcf	3,5	;RP0=0, select bank0
 10521  040A  1303               	bcf	3,6	;RP1=0, select bank0
 10522  040B  00A5               	movwf	___llmod@dividend+1
 10523  040C  1683               	bsf	3,5	;RP0=1, select bank1
 10524  040D  1303               	bcf	3,6	;RP1=0, select bank1
 10525  040E  0835               	movf	sprintf@tmpval^(0+128),w
 10526  040F  1283               	bcf	3,5	;RP0=0, select bank0
 10527  0410  1303               	bcf	3,6	;RP1=0, select bank0
 10528  0411  00A4               	movwf	___llmod@dividend
 10529  0412  160A  158A  231B  120A  118A  	fcall	___llmod
 10530  0417  1283               	bcf	3,5	;RP0=0, select bank0
 10531  0418  1303               	bcf	3,6	;RP1=0, select bank0
 10532  0419  0823               	movf	?___llmod+3,w
 10533  041A  1683               	bsf	3,5	;RP0=1, select bank1
 10534  041B  1303               	bcf	3,6	;RP1=0, select bank1
 10535  041C  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
 10536  041D  1283               	bcf	3,5	;RP0=0, select bank0
 10537  041E  1303               	bcf	3,6	;RP1=0, select bank0
 10538  041F  0822               	movf	?___llmod+2,w
 10539  0420  1683               	bsf	3,5	;RP0=1, select bank1
 10540  0421  1303               	bcf	3,6	;RP1=0, select bank1
 10541  0422  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
 10542  0423  1283               	bcf	3,5	;RP0=0, select bank0
 10543  0424  1303               	bcf	3,6	;RP1=0, select bank0
 10544  0425  0821               	movf	?___llmod+1,w
 10545  0426  1683               	bsf	3,5	;RP0=1, select bank1
 10546  0427  1303               	bcf	3,6	;RP1=0, select bank1
 10547  0428  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
 10548  0429  1283               	bcf	3,5	;RP0=0, select bank0
 10549  042A  1303               	bcf	3,6	;RP1=0, select bank0
 10550  042B  0820               	movf	?___llmod,w
 10551  042C  1683               	bsf	3,5	;RP0=1, select bank1
 10552  042D  1303               	bcf	3,6	;RP1=0, select bank1
 10553  042E  00B5               	movwf	sprintf@tmpval^(0+128)
 10554  042F                     l3420:
 10555                           
 10556                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10557  042F  0835               	movf	sprintf@tmpval^(0+128),w
 10558  0430  3E30               	addlw	48
 10559  0431  00A7               	movwf	??_sprintf^(0+128)
 10560  0432  0820               	movf	sprintf@sp^(0+128),w
 10561  0433  0084               	movwf	4
 10562  0434  1783               	bsf	3,7
 10563  0435  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10564  0436  1383               	bcf	3,7
 10565  0437  0827               	movf	??_sprintf^(0+128),w
 10566  0438  0080               	movwf	0
 10567  0439  2BAE               	goto	l3414
 10568  043A                     l3424:
 10569                           
 10570                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10571  043A  3001               	movlw	1
 10572  043B  02C5               	subwf	sprintf@c^(0+128),f
 10573  043C  0A45               	incf	sprintf@c^(0+128),w
 10574  043D  1D03               	btfss	3,2
 10575  043E  2C40               	goto	u5501
 10576  043F  2C41               	goto	u5500
 10577  0440                     u5501:
 10578  0440  2BB5               	goto	l3416
 10579  0441                     u5500:
 10580  0441  2C59               	goto	l3432
 10581  0442                     l3426:
 10582                           
 10583                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10584  0442  3030               	movlw	48
 10585  0443  1683               	bsf	3,5	;RP0=1, select bank1
 10586  0444  1303               	bcf	3,6	;RP1=0, select bank1
 10587  0445  00A7               	movwf	??_sprintf^(0+128)
 10588  0446  0820               	movf	sprintf@sp^(0+128),w
 10589  0447  0084               	movwf	4
 10590  0448  1783               	bsf	3,7
 10591  0449  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10592  044A  1383               	bcf	3,7
 10593  044B  0827               	movf	??_sprintf^(0+128),w
 10594  044C  0080               	movwf	0
 10595  044D                     l3428:
 10596  044D  3001               	movlw	1
 10597  044E  07A0               	addwf	sprintf@sp^(0+128),f
 10598  044F  1803               	skipnc
 10599  0450  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 10600  0451  3000               	movlw	0
 10601  0452  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 10602  0453                     l3430:
 10603                           
 10604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10605  0453  30FF               	movlw	255
 10606  0454  07BD               	addwf	sprintf@eexp^(0+128),f
 10607  0455  1803               	skipnc
 10608  0456  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
 10609  0457  30FF               	movlw	255
 10610  0458  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
 10611  0459                     l3432:
 10612                           
 10613                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10614  0459  083E               	movf	(sprintf@eexp+1)^(0+128),w
 10615  045A  3A80               	xorlw	128
 10616  045B  00FF               	movwf	btemp+1
 10617  045C  3080               	movlw	128
 10618  045D  027F               	subwf	btemp+1,w
 10619  045E  1D03               	skipz
 10620  045F  2C62               	goto	u5515
 10621  0460  3001               	movlw	1
 10622  0461  023D               	subwf	sprintf@eexp^(0+128),w
 10623  0462                     u5515:
 10624  0462  1803               	skipnc
 10625  0463  2C65               	goto	u5511
 10626  0464  2C66               	goto	u5510
 10627  0465                     u5511:
 10628  0465  2C42               	goto	l3426
 10629  0466                     u5510:
 10630  0466                     l3434:
 10631                           
 10632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10633  0466  1683               	bsf	3,5	;RP0=1, select bank1
 10634  0467  1303               	bcf	3,6	;RP1=0, select bank1
 10635  0468  0844               	movf	(sprintf@prec+1)^(0+128),w
 10636  0469  3A80               	xorlw	128
 10637  046A  00FF               	movwf	btemp+1
 10638  046B  3080               	movlw	128
 10639  046C  027F               	subwf	btemp+1,w
 10640  046D  1D03               	skipz
 10641  046E  2C71               	goto	u5525
 10642  046F  3009               	movlw	9
 10643  0470  0243               	subwf	sprintf@prec^(0+128),w
 10644  0471                     u5525:
 10645  0471  1C03               	skipc
 10646  0472  2C74               	goto	u5521
 10647  0473  2C75               	goto	u5520
 10648  0474                     u5521:
 10649  0474  2C7C               	goto	l3438
 10650  0475                     u5520:
 10651  0475                     l3436:
 10652                           
 10653                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10654  0475  3008               	movlw	8
 10655  0476  1683               	bsf	3,5	;RP0=1, select bank1
 10656  0477  1303               	bcf	3,6	;RP1=0, select bank1
 10657  0478  00A7               	movwf	??_sprintf^(0+128)
 10658  0479  0827               	movf	??_sprintf^(0+128),w
 10659  047A  00C5               	movwf	sprintf@c^(0+128)
 10660  047B  2C82               	goto	l359
 10661  047C                     l3438:
 10662                           
 10663                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10664  047C  1683               	bsf	3,5	;RP0=1, select bank1
 10665  047D  1303               	bcf	3,6	;RP1=0, select bank1
 10666  047E  0843               	movf	sprintf@prec^(0+128),w
 10667  047F  00A7               	movwf	??_sprintf^(0+128)
 10668  0480  0827               	movf	??_sprintf^(0+128),w
 10669  0481  00C5               	movwf	sprintf@c^(0+128)
 10670  0482                     l359:
 10671                           
 10672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10673  0482  0845               	movf	sprintf@c^(0+128),w
 10674  0483  00A7               	movwf	??_sprintf^(0+128)
 10675  0484  01A8               	clrf	(??_sprintf^(0+128)+1)
 10676  0485  0827               	movf	??_sprintf^(0+128),w
 10677  0486  02C3               	subwf	sprintf@prec^(0+128),f
 10678  0487  0828               	movf	(??_sprintf+1)^(0+128),w
 10679  0488  1C03               	skipc
 10680  0489  03C4               	decf	(sprintf@prec+1)^(0+128),f
 10681  048A  02C4               	subwf	(sprintf@prec+1)^(0+128),f
 10682  048B                     l3440:
 10683                           
 10684                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10685  048B  0845               	movf	sprintf@c^(0+128),w
 10686  048C  1903               	btfsc	3,2
 10687  048D  2C8F               	goto	u5531
 10688  048E  2C90               	goto	u5530
 10689  048F                     u5531:
 10690  048F  2C9F               	goto	l3446
 10691  0490                     u5530:
 10692  0490                     l3442:
 10693                           
 10694                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10695  0490  302E               	movlw	46
 10696  0491  00A7               	movwf	??_sprintf^(0+128)
 10697  0492  0820               	movf	sprintf@sp^(0+128),w
 10698  0493  0084               	movwf	4
 10699  0494  1783               	bsf	3,7
 10700  0495  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10701  0496  1383               	bcf	3,7
 10702  0497  0827               	movf	??_sprintf^(0+128),w
 10703  0498  0080               	movwf	0
 10704  0499                     l3444:
 10705  0499  3001               	movlw	1
 10706  049A  07A0               	addwf	sprintf@sp^(0+128),f
 10707  049B  1803               	skipnc
 10708  049C  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 10709  049D  3000               	movlw	0
 10710  049E  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 10711  049F                     l3446:
 10712                           
 10713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10714  049F  0845               	movf	sprintf@c^(0+128),w
 10715  04A0  120A  158A  2140  120A  118A  	fcall	_scale
 10716  04A5  1283               	bcf	3,5	;RP0=0, select bank0
 10717  04A6  1303               	bcf	3,6	;RP1=0, select bank0
 10718  04A7  0841               	movf	?_scale+3,w
 10719  04A8  1683               	bsf	3,5	;RP0=1, select bank1
 10720  04A9  1303               	bcf	3,6	;RP1=0, select bank1
 10721  04AA  00AF               	movwf	(_sprintf$1253+3)^(0+128)
 10722  04AB  1283               	bcf	3,5	;RP0=0, select bank0
 10723  04AC  1303               	bcf	3,6	;RP1=0, select bank0
 10724  04AD  0840               	movf	?_scale+2,w
 10725  04AE  1683               	bsf	3,5	;RP0=1, select bank1
 10726  04AF  1303               	bcf	3,6	;RP1=0, select bank1
 10727  04B0  00AE               	movwf	(_sprintf$1253+2)^(0+128)
 10728  04B1  1283               	bcf	3,5	;RP0=0, select bank0
 10729  04B2  1303               	bcf	3,6	;RP1=0, select bank0
 10730  04B3  083F               	movf	?_scale+1,w
 10731  04B4  1683               	bsf	3,5	;RP0=1, select bank1
 10732  04B5  1303               	bcf	3,6	;RP1=0, select bank1
 10733  04B6  00AD               	movwf	(_sprintf$1253+1)^(0+128)
 10734  04B7  1283               	bcf	3,5	;RP0=0, select bank0
 10735  04B8  1303               	bcf	3,6	;RP1=0, select bank0
 10736  04B9  083E               	movf	?_scale,w
 10737  04BA  1683               	bsf	3,5	;RP0=1, select bank1
 10738  04BB  1303               	bcf	3,6	;RP1=0, select bank1
 10739  04BC  00AC               	movwf	_sprintf$1253^(0+128)
 10740                           
 10741                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10742  04BD  082F               	movf	(_sprintf$1253+3)^(0+128),w
 10743  04BE  1283               	bcf	3,5	;RP0=0, select bank0
 10744  04BF  1303               	bcf	3,6	;RP1=0, select bank0
 10745  04C0  00AB               	movwf	___flmul@a+3
 10746  04C1  1683               	bsf	3,5	;RP0=1, select bank1
 10747  04C2  1303               	bcf	3,6	;RP1=0, select bank1
 10748  04C3  082E               	movf	(_sprintf$1253+2)^(0+128),w
 10749  04C4  1283               	bcf	3,5	;RP0=0, select bank0
 10750  04C5  1303               	bcf	3,6	;RP1=0, select bank0
 10751  04C6  00AA               	movwf	___flmul@a+2
 10752  04C7  1683               	bsf	3,5	;RP0=1, select bank1
 10753  04C8  1303               	bcf	3,6	;RP1=0, select bank1
 10754  04C9  082D               	movf	(_sprintf$1253+1)^(0+128),w
 10755  04CA  1283               	bcf	3,5	;RP0=0, select bank0
 10756  04CB  1303               	bcf	3,6	;RP1=0, select bank0
 10757  04CC  00A9               	movwf	___flmul@a+1
 10758  04CD  1683               	bsf	3,5	;RP0=1, select bank1
 10759  04CE  1303               	bcf	3,6	;RP1=0, select bank1
 10760  04CF  082C               	movf	_sprintf$1253^(0+128),w
 10761  04D0  1283               	bcf	3,5	;RP0=0, select bank0
 10762  04D1  1303               	bcf	3,6	;RP1=0, select bank0
 10763  04D2  00A8               	movwf	___flmul@a
 10764  04D3  1683               	bsf	3,5	;RP0=1, select bank1
 10765  04D4  1303               	bcf	3,6	;RP1=0, select bank1
 10766  04D5  0842               	movf	(sprintf@fval+3)^(0+128),w
 10767  04D6  1283               	bcf	3,5	;RP0=0, select bank0
 10768  04D7  1303               	bcf	3,6	;RP1=0, select bank0
 10769  04D8  00A7               	movwf	___flmul@b+3
 10770  04D9  1683               	bsf	3,5	;RP0=1, select bank1
 10771  04DA  1303               	bcf	3,6	;RP1=0, select bank1
 10772  04DB  0841               	movf	(sprintf@fval+2)^(0+128),w
 10773  04DC  1283               	bcf	3,5	;RP0=0, select bank0
 10774  04DD  1303               	bcf	3,6	;RP1=0, select bank0
 10775  04DE  00A6               	movwf	___flmul@b+2
 10776  04DF  1683               	bsf	3,5	;RP0=1, select bank1
 10777  04E0  1303               	bcf	3,6	;RP1=0, select bank1
 10778  04E1  0840               	movf	(sprintf@fval+1)^(0+128),w
 10779  04E2  1283               	bcf	3,5	;RP0=0, select bank0
 10780  04E3  1303               	bcf	3,6	;RP1=0, select bank0
 10781  04E4  00A5               	movwf	___flmul@b+1
 10782  04E5  1683               	bsf	3,5	;RP0=1, select bank1
 10783  04E6  1303               	bcf	3,6	;RP1=0, select bank1
 10784  04E7  083F               	movf	sprintf@fval^(0+128),w
 10785  04E8  1283               	bcf	3,5	;RP0=0, select bank0
 10786  04E9  1303               	bcf	3,6	;RP1=0, select bank0
 10787  04EA  00A4               	movwf	___flmul@b
 10788  04EB  120A  158A  249F  120A  118A  	fcall	___flmul
 10789  04F0  1283               	bcf	3,5	;RP0=0, select bank0
 10790  04F1  1303               	bcf	3,6	;RP1=0, select bank0
 10791  04F2  0827               	movf	?___flmul+3,w
 10792  04F3  00D4               	movwf	___fltol@f1+3
 10793  04F4  0826               	movf	?___flmul+2,w
 10794  04F5  00D3               	movwf	___fltol@f1+2
 10795  04F6  0825               	movf	?___flmul+1,w
 10796  04F7  00D2               	movwf	___fltol@f1+1
 10797  04F8  0824               	movf	?___flmul,w
 10798  04F9  00D1               	movwf	___fltol@f1
 10799  04FA  120A  158A  2007  120A  118A  	fcall	___fltol
 10800  04FF  1283               	bcf	3,5	;RP0=0, select bank0
 10801  0500  1303               	bcf	3,6	;RP1=0, select bank0
 10802  0501  0854               	movf	?___fltol+3,w
 10803  0502  1683               	bsf	3,5	;RP0=1, select bank1
 10804  0503  1303               	bcf	3,6	;RP1=0, select bank1
 10805  0504  00BC               	movwf	(sprintf@val+3)^(0+128)
 10806  0505  1283               	bcf	3,5	;RP0=0, select bank0
 10807  0506  1303               	bcf	3,6	;RP1=0, select bank0
 10808  0507  0853               	movf	?___fltol+2,w
 10809  0508  1683               	bsf	3,5	;RP0=1, select bank1
 10810  0509  1303               	bcf	3,6	;RP1=0, select bank1
 10811  050A  00BB               	movwf	(sprintf@val+2)^(0+128)
 10812  050B  1283               	bcf	3,5	;RP0=0, select bank0
 10813  050C  1303               	bcf	3,6	;RP1=0, select bank0
 10814  050D  0852               	movf	?___fltol+1,w
 10815  050E  1683               	bsf	3,5	;RP0=1, select bank1
 10816  050F  1303               	bcf	3,6	;RP1=0, select bank1
 10817  0510  00BA               	movwf	(sprintf@val+1)^(0+128)
 10818  0511  1283               	bcf	3,5	;RP0=0, select bank0
 10819  0512  1303               	bcf	3,6	;RP1=0, select bank0
 10820  0513  0851               	movf	?___fltol,w
 10821  0514  1683               	bsf	3,5	;RP0=1, select bank1
 10822  0515  1303               	bcf	3,6	;RP1=0, select bank1
 10823  0516  00B9               	movwf	sprintf@val^(0+128)
 10824                           
 10825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10826  0517  2DFD               	goto	l3458
 10827  0518                     l3448:
 10828                           
 10829                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10830  0518  0845               	movf	sprintf@c^(0+128),w
 10831  0519  00A7               	movwf	??_sprintf^(0+128)
 10832  051A  3001               	movlw	1
 10833  051B                     u5545:
 10834  051B  1003               	clrc
 10835  051C  0DA7               	rlf	??_sprintf^(0+128),f
 10836  051D  3EFF               	addlw	-1
 10837  051E  1D03               	skipz
 10838  051F  2D1B               	goto	u5545
 10839  0520  1003               	clrc
 10840  0521  0D27               	rlf	??_sprintf^(0+128),w
 10841  0522  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10842  0523  0084               	movwf	4
 10843  0524  120A  118A  200D  120A  118A  	fcall	stringdir
 10844  0529  00F0               	movwf	___lldiv@divisor
 10845  052A  120A  118A  200D  120A  118A  	fcall	stringdir
 10846  052F  00F1               	movwf	___lldiv@divisor+1
 10847  0530  120A  118A  200D  120A  118A  	fcall	stringdir
 10848  0535  00F2               	movwf	___lldiv@divisor+2
 10849  0536  120A  118A  200D  120A  118A  	fcall	stringdir
 10850  053B  00F3               	movwf	___lldiv@divisor+3
 10851  053C  083C               	movf	(sprintf@val+3)^(0+128),w
 10852  053D  00F7               	movwf	___lldiv@dividend+3
 10853  053E  083B               	movf	(sprintf@val+2)^(0+128),w
 10854  053F  00F6               	movwf	___lldiv@dividend+2
 10855  0540  083A               	movf	(sprintf@val+1)^(0+128),w
 10856  0541  00F5               	movwf	___lldiv@dividend+1
 10857  0542  0839               	movf	sprintf@val^(0+128),w
 10858  0543  00F4               	movwf	___lldiv@dividend
 10859  0544  160A  158A  23CA  120A  118A  	fcall	___lldiv
 10860  0549  0873               	movf	?___lldiv+3,w
 10861  054A  1683               	bsf	3,5	;RP0=1, select bank1
 10862  054B  1303               	bcf	3,6	;RP1=0, select bank1
 10863  054C  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
 10864  054D  0872               	movf	?___lldiv+2,w
 10865  054E  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
 10866  054F  0871               	movf	?___lldiv+1,w
 10867  0550  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
 10868  0551  0870               	movf	?___lldiv,w
 10869  0552  00B5               	movwf	sprintf@tmpval^(0+128)
 10870  0553                     l3450:
 10871                           
 10872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10873  0553  3000               	movlw	0
 10874  0554  1283               	bcf	3,5	;RP0=0, select bank0
 10875  0555  1303               	bcf	3,6	;RP1=0, select bank0
 10876  0556  00A3               	movwf	___llmod@divisor+3
 10877  0557  3000               	movlw	0
 10878  0558  00A2               	movwf	___llmod@divisor+2
 10879  0559  3000               	movlw	0
 10880  055A  00A1               	movwf	___llmod@divisor+1
 10881  055B  300A               	movlw	10
 10882  055C  00A0               	movwf	___llmod@divisor
 10883  055D  1683               	bsf	3,5	;RP0=1, select bank1
 10884  055E  1303               	bcf	3,6	;RP1=0, select bank1
 10885  055F  0838               	movf	(sprintf@tmpval+3)^(0+128),w
 10886  0560  1283               	bcf	3,5	;RP0=0, select bank0
 10887  0561  1303               	bcf	3,6	;RP1=0, select bank0
 10888  0562  00A7               	movwf	___llmod@dividend+3
 10889  0563  1683               	bsf	3,5	;RP0=1, select bank1
 10890  0564  1303               	bcf	3,6	;RP1=0, select bank1
 10891  0565  0837               	movf	(sprintf@tmpval+2)^(0+128),w
 10892  0566  1283               	bcf	3,5	;RP0=0, select bank0
 10893  0567  1303               	bcf	3,6	;RP1=0, select bank0
 10894  0568  00A6               	movwf	___llmod@dividend+2
 10895  0569  1683               	bsf	3,5	;RP0=1, select bank1
 10896  056A  1303               	bcf	3,6	;RP1=0, select bank1
 10897  056B  0836               	movf	(sprintf@tmpval+1)^(0+128),w
 10898  056C  1283               	bcf	3,5	;RP0=0, select bank0
 10899  056D  1303               	bcf	3,6	;RP1=0, select bank0
 10900  056E  00A5               	movwf	___llmod@dividend+1
 10901  056F  1683               	bsf	3,5	;RP0=1, select bank1
 10902  0570  1303               	bcf	3,6	;RP1=0, select bank1
 10903  0571  0835               	movf	sprintf@tmpval^(0+128),w
 10904  0572  1283               	bcf	3,5	;RP0=0, select bank0
 10905  0573  1303               	bcf	3,6	;RP1=0, select bank0
 10906  0574  00A4               	movwf	___llmod@dividend
 10907  0575  160A  158A  231B  120A  118A  	fcall	___llmod
 10908  057A  1283               	bcf	3,5	;RP0=0, select bank0
 10909  057B  1303               	bcf	3,6	;RP1=0, select bank0
 10910  057C  0823               	movf	?___llmod+3,w
 10911  057D  1683               	bsf	3,5	;RP0=1, select bank1
 10912  057E  1303               	bcf	3,6	;RP1=0, select bank1
 10913  057F  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
 10914  0580  1283               	bcf	3,5	;RP0=0, select bank0
 10915  0581  1303               	bcf	3,6	;RP1=0, select bank0
 10916  0582  0822               	movf	?___llmod+2,w
 10917  0583  1683               	bsf	3,5	;RP0=1, select bank1
 10918  0584  1303               	bcf	3,6	;RP1=0, select bank1
 10919  0585  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
 10920  0586  1283               	bcf	3,5	;RP0=0, select bank0
 10921  0587  1303               	bcf	3,6	;RP1=0, select bank0
 10922  0588  0821               	movf	?___llmod+1,w
 10923  0589  1683               	bsf	3,5	;RP0=1, select bank1
 10924  058A  1303               	bcf	3,6	;RP1=0, select bank1
 10925  058B  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
 10926  058C  1283               	bcf	3,5	;RP0=0, select bank0
 10927  058D  1303               	bcf	3,6	;RP1=0, select bank0
 10928  058E  0820               	movf	?___llmod,w
 10929  058F  1683               	bsf	3,5	;RP0=1, select bank1
 10930  0590  1303               	bcf	3,6	;RP1=0, select bank1
 10931  0591  00B5               	movwf	sprintf@tmpval^(0+128)
 10932  0592                     l3452:
 10933                           
 10934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10935  0592  0835               	movf	sprintf@tmpval^(0+128),w
 10936  0593  3E30               	addlw	48
 10937  0594  00A7               	movwf	??_sprintf^(0+128)
 10938  0595  0820               	movf	sprintf@sp^(0+128),w
 10939  0596  0084               	movwf	4
 10940  0597  1783               	bsf	3,7
 10941  0598  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10942  0599  1383               	bcf	3,7
 10943  059A  0827               	movf	??_sprintf^(0+128),w
 10944  059B  0080               	movwf	0
 10945  059C                     l3454:
 10946  059C  3001               	movlw	1
 10947  059D  07A0               	addwf	sprintf@sp^(0+128),f
 10948  059E  1803               	skipnc
 10949  059F  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 10950  05A0  3000               	movlw	0
 10951  05A1  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 10952  05A2                     l3456:
 10953                           
 10954                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10955  05A2  0845               	movf	sprintf@c^(0+128),w
 10956  05A3  00A7               	movwf	??_sprintf^(0+128)
 10957  05A4  3001               	movlw	1
 10958  05A5                     u5555:
 10959  05A5  1003               	clrc
 10960  05A6  0DA7               	rlf	??_sprintf^(0+128),f
 10961  05A7  3EFF               	addlw	-1
 10962  05A8  1D03               	skipz
 10963  05A9  2DA5               	goto	u5555
 10964  05AA  1003               	clrc
 10965  05AB  0D27               	rlf	??_sprintf^(0+128),w
 10966  05AC  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10967  05AD  0084               	movwf	4
 10968  05AE  120A  118A  200D  120A  118A  	fcall	stringdir
 10969  05B3  1283               	bcf	3,5	;RP0=0, select bank0
 10970  05B4  1303               	bcf	3,6	;RP1=0, select bank0
 10971  05B5  00A0               	movwf	___llmod@divisor
 10972  05B6  120A  118A  200D  120A  118A  	fcall	stringdir
 10973  05BB  00A1               	movwf	___llmod@divisor+1
 10974  05BC  120A  118A  200D  120A  118A  	fcall	stringdir
 10975  05C1  00A2               	movwf	___llmod@divisor+2
 10976  05C2  120A  118A  200D  120A  118A  	fcall	stringdir
 10977  05C7  00A3               	movwf	___llmod@divisor+3
 10978  05C8  1683               	bsf	3,5	;RP0=1, select bank1
 10979  05C9  1303               	bcf	3,6	;RP1=0, select bank1
 10980  05CA  083C               	movf	(sprintf@val+3)^(0+128),w
 10981  05CB  1283               	bcf	3,5	;RP0=0, select bank0
 10982  05CC  1303               	bcf	3,6	;RP1=0, select bank0
 10983  05CD  00A7               	movwf	___llmod@dividend+3
 10984  05CE  1683               	bsf	3,5	;RP0=1, select bank1
 10985  05CF  1303               	bcf	3,6	;RP1=0, select bank1
 10986  05D0  083B               	movf	(sprintf@val+2)^(0+128),w
 10987  05D1  1283               	bcf	3,5	;RP0=0, select bank0
 10988  05D2  1303               	bcf	3,6	;RP1=0, select bank0
 10989  05D3  00A6               	movwf	___llmod@dividend+2
 10990  05D4  1683               	bsf	3,5	;RP0=1, select bank1
 10991  05D5  1303               	bcf	3,6	;RP1=0, select bank1
 10992  05D6  083A               	movf	(sprintf@val+1)^(0+128),w
 10993  05D7  1283               	bcf	3,5	;RP0=0, select bank0
 10994  05D8  1303               	bcf	3,6	;RP1=0, select bank0
 10995  05D9  00A5               	movwf	___llmod@dividend+1
 10996  05DA  1683               	bsf	3,5	;RP0=1, select bank1
 10997  05DB  1303               	bcf	3,6	;RP1=0, select bank1
 10998  05DC  0839               	movf	sprintf@val^(0+128),w
 10999  05DD  1283               	bcf	3,5	;RP0=0, select bank0
 11000  05DE  1303               	bcf	3,6	;RP1=0, select bank0
 11001  05DF  00A4               	movwf	___llmod@dividend
 11002  05E0  160A  158A  231B  120A  118A  	fcall	___llmod
 11003  05E5  1283               	bcf	3,5	;RP0=0, select bank0
 11004  05E6  1303               	bcf	3,6	;RP1=0, select bank0
 11005  05E7  0823               	movf	?___llmod+3,w
 11006  05E8  1683               	bsf	3,5	;RP0=1, select bank1
 11007  05E9  1303               	bcf	3,6	;RP1=0, select bank1
 11008  05EA  00BC               	movwf	(sprintf@val+3)^(0+128)
 11009  05EB  1283               	bcf	3,5	;RP0=0, select bank0
 11010  05EC  1303               	bcf	3,6	;RP1=0, select bank0
 11011  05ED  0822               	movf	?___llmod+2,w
 11012  05EE  1683               	bsf	3,5	;RP0=1, select bank1
 11013  05EF  1303               	bcf	3,6	;RP1=0, select bank1
 11014  05F0  00BB               	movwf	(sprintf@val+2)^(0+128)
 11015  05F1  1283               	bcf	3,5	;RP0=0, select bank0
 11016  05F2  1303               	bcf	3,6	;RP1=0, select bank0
 11017  05F3  0821               	movf	?___llmod+1,w
 11018  05F4  1683               	bsf	3,5	;RP0=1, select bank1
 11019  05F5  1303               	bcf	3,6	;RP1=0, select bank1
 11020  05F6  00BA               	movwf	(sprintf@val+1)^(0+128)
 11021  05F7  1283               	bcf	3,5	;RP0=0, select bank0
 11022  05F8  1303               	bcf	3,6	;RP1=0, select bank0
 11023  05F9  0820               	movf	?___llmod,w
 11024  05FA  1683               	bsf	3,5	;RP0=1, select bank1
 11025  05FB  1303               	bcf	3,6	;RP1=0, select bank1
 11026  05FC  00B9               	movwf	sprintf@val^(0+128)
 11027  05FD                     l3458:
 11028                           
 11029                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11030  05FD  3001               	movlw	1
 11031  05FE  02C5               	subwf	sprintf@c^(0+128),f
 11032  05FF  0A45               	incf	sprintf@c^(0+128),w
 11033  0600  1D03               	btfss	3,2
 11034  0601  2E03               	goto	u5561
 11035  0602  2E04               	goto	u5560
 11036  0603                     u5561:
 11037  0603  2D18               	goto	l3448
 11038  0604                     u5560:
 11039  0604  2E1A               	goto	l3466
 11040  0605                     l3460:
 11041                           
 11042                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11043  0605  3030               	movlw	48
 11044  0606  00A7               	movwf	??_sprintf^(0+128)
 11045  0607  0820               	movf	sprintf@sp^(0+128),w
 11046  0608  0084               	movwf	4
 11047  0609  1783               	bsf	3,7
 11048  060A  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 11049  060B  1383               	bcf	3,7
 11050  060C  0827               	movf	??_sprintf^(0+128),w
 11051  060D  0080               	movwf	0
 11052  060E                     l3462:
 11053  060E  3001               	movlw	1
 11054  060F  07A0               	addwf	sprintf@sp^(0+128),f
 11055  0610  1803               	skipnc
 11056  0611  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 11057  0612  3000               	movlw	0
 11058  0613  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 11059  0614                     l3464:
 11060                           
 11061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11062  0614  30FF               	movlw	255
 11063  0615  07C3               	addwf	sprintf@prec^(0+128),f
 11064  0616  1803               	skipnc
 11065  0617  0AC4               	incf	(sprintf@prec+1)^(0+128),f
 11066  0618  30FF               	movlw	255
 11067  0619  07C4               	addwf	(sprintf@prec+1)^(0+128),f
 11068  061A                     l3466:
 11069                           
 11070                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11071  061A  0843               	movf	sprintf@prec^(0+128),w
 11072  061B  0444               	iorwf	(sprintf@prec+1)^(0+128),w
 11073  061C  1D03               	btfss	3,2
 11074  061D  2E1F               	goto	u5571
 11075  061E  2E20               	goto	u5570
 11076  061F                     u5571:
 11077  061F  2E05               	goto	l3460
 11078  0620                     u5570:
 11079  0620  2FC8               	goto	l3546
 11080  0621                     l3468:
 11081                           
 11082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11083  0621  0830               	movf	sprintf@ap^(0+128),w
 11084  0622  0084               	movwf	4
 11085  0623  1383               	bcf	3,7	;select IRP bank0
 11086  0624  0800               	movf	0,w
 11087  0625  00A7               	movwf	??_sprintf^(0+128)
 11088  0626  0A84               	incf	4,f
 11089  0627  0800               	movf	0,w
 11090  0628  00A8               	movwf	(??_sprintf^(0+128)+1)
 11091  0629  0827               	movf	??_sprintf^(0+128),w
 11092  062A  00B9               	movwf	sprintf@val^(0+128)
 11093  062B  0828               	movf	(??_sprintf+1)^(0+128),w
 11094  062C  00BA               	movwf	(sprintf@val+1)^(0+128)
 11095  062D  3000               	movlw	0
 11096  062E  1BBA               	btfsc	(sprintf@val+1)^(0+128),7
 11097  062F  30FF               	movlw	255
 11098  0630  00BB               	movwf	(sprintf@val+2)^(0+128)
 11099  0631  00BC               	movwf	(sprintf@val+3)^(0+128)
 11100  0632                     l3470:
 11101  0632  3002               	movlw	2
 11102  0633  00A7               	movwf	??_sprintf^(0+128)
 11103  0634  0827               	movf	??_sprintf^(0+128),w
 11104  0635  07B0               	addwf	sprintf@ap^(0+128),f
 11105  0636                     l3472:
 11106                           
 11107                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 11108  0636  1FBC               	btfss	(sprintf@val+3)^(0+128),7
 11109  0637  2E39               	goto	u5581
 11110  0638  2E3A               	goto	u5580
 11111  0639                     u5581:
 11112  0639  2E49               	goto	l3478
 11113  063A                     u5580:
 11114  063A                     l3474:
 11115                           
 11116                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 11117  063A  3003               	movlw	3
 11118  063B  04B1               	iorwf	sprintf@flag^(0+128),f
 11119  063C  3000               	movlw	0
 11120  063D  04B2               	iorwf	(sprintf@flag+1)^(0+128),f
 11121  063E                     l3476:
 11122                           
 11123                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 11124  063E  09B9               	comf	sprintf@val^(0+128),f
 11125  063F  09BA               	comf	(sprintf@val+1)^(0+128),f
 11126  0640  09BB               	comf	(sprintf@val+2)^(0+128),f
 11127  0641  09BC               	comf	(sprintf@val+3)^(0+128),f
 11128  0642  0AB9               	incf	sprintf@val^(0+128),f
 11129  0643  1903               	skipnz
 11130  0644  0ABA               	incf	(sprintf@val+1)^(0+128),f
 11131  0645  1903               	skipnz
 11132  0646  0ABB               	incf	(sprintf@val+2)^(0+128),f
 11133  0647  1903               	skipnz
 11134  0648  0ABC               	incf	(sprintf@val+3)^(0+128),f
 11135  0649                     l3478:
 11136                           
 11137                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 11138  0649  0843               	movf	sprintf@prec^(0+128),w
 11139  064A  0444               	iorwf	(sprintf@prec+1)^(0+128),w
 11140  064B  1D03               	btfss	3,2
 11141  064C  2E4E               	goto	u5591
 11142  064D  2E4F               	goto	u5590
 11143  064E                     u5591:
 11144  064E  2E5D               	goto	l3484
 11145  064F                     u5590:
 11146  064F                     l3480:
 11147  064F  083C               	movf	(sprintf@val+3)^(0+128),w
 11148  0650  043B               	iorwf	(sprintf@val+2)^(0+128),w
 11149  0651  043A               	iorwf	(sprintf@val+1)^(0+128),w
 11150  0652  0439               	iorwf	sprintf@val^(0+128),w
 11151  0653  1D03               	skipz
 11152  0654  2E56               	goto	u5601
 11153  0655  2E57               	goto	u5600
 11154  0656                     u5601:
 11155  0656  2E5D               	goto	l3484
 11156  0657                     u5600:
 11157  0657                     l3482:
 11158                           
 11159                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11160  0657  3001               	movlw	1
 11161  0658  07C3               	addwf	sprintf@prec^(0+128),f
 11162  0659  1803               	skipnc
 11163  065A  0AC4               	incf	(sprintf@prec+1)^(0+128),f
 11164  065B  3000               	movlw	0
 11165  065C  07C4               	addwf	(sprintf@prec+1)^(0+128),f
 11166  065D                     l3484:
 11167                           
 11168                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11169  065D  01C5               	clrf	sprintf@c^(0+128)
 11170  065E  0AC5               	incf	sprintf@c^(0+128),f
 11171  065F                     l3490:
 11172                           
 11173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 11174  065F  0845               	movf	sprintf@c^(0+128),w
 11175  0660  00A7               	movwf	??_sprintf^(0+128)
 11176  0661  3001               	movlw	1
 11177  0662                     u5615:
 11178  0662  1003               	clrc
 11179  0663  0DA7               	rlf	??_sprintf^(0+128),f
 11180  0664  3EFF               	addlw	-1
 11181  0665  1D03               	skipz
 11182  0666  2E62               	goto	u5615
 11183  0667  1003               	clrc
 11184  0668  0D27               	rlf	??_sprintf^(0+128),w
 11185  0669  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11186  066A  0084               	movwf	4
 11187  066B  120A  118A  200D  120A  118A  	fcall	stringdir
 11188  0670  00A8               	movwf	(??_sprintf+1)^(0+128)
 11189  0671  120A  118A  200D  120A  118A  	fcall	stringdir
 11190  0676  00A9               	movwf	((??_sprintf+1)^(0+128)+1)
 11191  0677  120A  118A  200D  120A  118A  	fcall	stringdir
 11192  067C  00AA               	movwf	((??_sprintf+1)^(0+128)+2)
 11193  067D  120A  118A  200D  120A  118A  	fcall	stringdir
 11194  0682  00AB               	movwf	((??_sprintf+1)^(0+128)+3)
 11195  0683  082B               	movf	(??_sprintf+4)^(0+128),w
 11196  0684  023C               	subwf	(sprintf@val+3)^(0+128),w
 11197  0685  1D03               	skipz
 11198  0686  2E91               	goto	u5625
 11199  0687  082A               	movf	(??_sprintf+3)^(0+128),w
 11200  0688  023B               	subwf	(sprintf@val+2)^(0+128),w
 11201  0689  1D03               	skipz
 11202  068A  2E91               	goto	u5625
 11203  068B  0829               	movf	(??_sprintf+2)^(0+128),w
 11204  068C  023A               	subwf	(sprintf@val+1)^(0+128),w
 11205  068D  1D03               	skipz
 11206  068E  2E91               	goto	u5625
 11207  068F  0828               	movf	(??_sprintf+1)^(0+128),w
 11208  0690  0239               	subwf	sprintf@val^(0+128),w
 11209  0691                     u5625:
 11210  0691  1803               	skipnc
 11211  0692  2E94               	goto	u5621
 11212  0693  2E95               	goto	u5620
 11213  0694                     u5621:
 11214  0694  2E96               	goto	l3494
 11215  0695                     u5620:
 11216  0695  2EA0               	goto	l3496
 11217  0696                     l3494:
 11218  0696  3001               	movlw	1
 11219  0697  00A7               	movwf	??_sprintf^(0+128)
 11220  0698  0827               	movf	??_sprintf^(0+128),w
 11221  0699  07C5               	addwf	sprintf@c^(0+128),f
 11222  069A  300A               	movlw	10
 11223  069B  0645               	xorwf	sprintf@c^(0+128),w
 11224  069C  1D03               	btfss	3,2
 11225  069D  2E9F               	goto	u5631
 11226  069E  2EA0               	goto	u5630
 11227  069F                     u5631:
 11228  069F  2E5F               	goto	l3490
 11229  06A0                     u5630:
 11230  06A0                     l3496:
 11231                           
 11232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11233  06A0  0844               	movf	(sprintf@prec+1)^(0+128),w
 11234  06A1  3A80               	xorlw	128
 11235  06A2  3C80               	sublw	128
 11236  06A3  1D03               	skipz
 11237  06A4  2EA7               	goto	u5645
 11238  06A5  0843               	movf	sprintf@prec^(0+128),w
 11239  06A6  0245               	subwf	sprintf@c^(0+128),w
 11240  06A7                     u5645:
 11241  06A7  1803               	skipnc
 11242  06A8  2EAA               	goto	u5641
 11243  06A9  2EAB               	goto	u5640
 11244  06AA                     u5641:
 11245  06AA  2EB2               	goto	l3500
 11246  06AB                     u5640:
 11247  06AB                     l3498:
 11248                           
 11249                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11250  06AB  1683               	bsf	3,5	;RP0=1, select bank1
 11251  06AC  1303               	bcf	3,6	;RP1=0, select bank1
 11252  06AD  0843               	movf	sprintf@prec^(0+128),w
 11253  06AE  00A7               	movwf	??_sprintf^(0+128)
 11254  06AF  0827               	movf	??_sprintf^(0+128),w
 11255  06B0  00C5               	movwf	sprintf@c^(0+128)
 11256  06B1  2ECA               	goto	l3504
 11257  06B2                     l3500:
 11258  06B2  1683               	bsf	3,5	;RP0=1, select bank1
 11259  06B3  1303               	bcf	3,6	;RP1=0, select bank1
 11260  06B4  0844               	movf	(sprintf@prec+1)^(0+128),w
 11261  06B5  3A80               	xorlw	128
 11262  06B6  00A7               	movwf	??_sprintf^(0+128)
 11263  06B7  3080               	movlw	128
 11264  06B8  0227               	subwf	??_sprintf^(0+128),w
 11265  06B9  1D03               	skipz
 11266  06BA  2EBD               	goto	u5655
 11267  06BB  0845               	movf	sprintf@c^(0+128),w
 11268  06BC  0243               	subwf	sprintf@prec^(0+128),w
 11269  06BD                     u5655:
 11270  06BD  1803               	skipnc
 11271  06BE  2EC0               	goto	u5651
 11272  06BF  2EC1               	goto	u5650
 11273  06C0                     u5651:
 11274  06C0  2ECA               	goto	l3504
 11275  06C1                     u5650:
 11276  06C1                     l3502:
 11277                           
 11278                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11279  06C1  1683               	bsf	3,5	;RP0=1, select bank1
 11280  06C2  1303               	bcf	3,6	;RP1=0, select bank1
 11281  06C3  0845               	movf	sprintf@c^(0+128),w
 11282  06C4  00A7               	movwf	??_sprintf^(0+128)
 11283  06C5  01A8               	clrf	(??_sprintf^(0+128)+1)
 11284  06C6  0827               	movf	??_sprintf^(0+128),w
 11285  06C7  00C3               	movwf	sprintf@prec^(0+128)
 11286  06C8  0828               	movf	(??_sprintf+1)^(0+128),w
 11287  06C9  00C4               	movwf	(sprintf@prec+1)^(0+128)
 11288  06CA                     l3504:
 11289                           
 11290                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11291  06CA  1683               	bsf	3,5	;RP0=1, select bank1
 11292  06CB  1303               	bcf	3,6	;RP1=0, select bank1
 11293  06CC  0833               	movf	sprintf@width^(0+128),w
 11294  06CD  0434               	iorwf	(sprintf@width+1)^(0+128),w
 11295  06CE  1903               	btfsc	3,2
 11296  06CF  2ED1               	goto	u5661
 11297  06D0  2ED2               	goto	u5660
 11298  06D1                     u5661:
 11299  06D1  2EE4               	goto	l3510
 11300  06D2                     u5660:
 11301  06D2                     l3506:
 11302  06D2  3003               	movlw	3
 11303  06D3  0531               	andwf	sprintf@flag^(0+128),w
 11304  06D4  00A7               	movwf	??_sprintf^(0+128)
 11305  06D5  3000               	movlw	0
 11306  06D6  0532               	andwf	(sprintf@flag+1)^(0+128),w
 11307  06D7  00A8               	movwf	(??_sprintf+1)^(0+128)
 11308  06D8  0827               	movf	??_sprintf^(0+128),w
 11309  06D9  0428               	iorwf	(??_sprintf^(0+128)+1),w
 11310  06DA  1903               	btfsc	3,2
 11311  06DB  2EDD               	goto	u5671
 11312  06DC  2EDE               	goto	u5670
 11313  06DD                     u5671:
 11314  06DD  2EE4               	goto	l3510
 11315  06DE                     u5670:
 11316  06DE                     l3508:
 11317                           
 11318                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11319  06DE  30FF               	movlw	255
 11320  06DF  07B3               	addwf	sprintf@width^(0+128),f
 11321  06E0  1803               	skipnc
 11322  06E1  0AB4               	incf	(sprintf@width+1)^(0+128),f
 11323  06E2  30FF               	movlw	255
 11324  06E3  07B4               	addwf	(sprintf@width+1)^(0+128),f
 11325  06E4                     l3510:
 11326                           
 11327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11328  06E4  1F32               	btfss	(sprintf@flag+1)^(0+128),6
 11329  06E5  2EE7               	goto	u5681
 11330  06E6  2EE8               	goto	u5680
 11331  06E7                     u5681:
 11332  06E7  2F03               	goto	l3518
 11333  06E8                     u5680:
 11334  06E8                     l3512:
 11335                           
 11336                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11337  06E8  0844               	movf	(sprintf@prec+1)^(0+128),w
 11338  06E9  3A80               	xorlw	128
 11339  06EA  00A7               	movwf	??_sprintf^(0+128)
 11340  06EB  0834               	movf	(sprintf@width+1)^(0+128),w
 11341  06EC  3A80               	xorlw	128
 11342  06ED  0227               	subwf	??_sprintf^(0+128),w
 11343  06EE  1D03               	skipz
 11344  06EF  2EF2               	goto	u5695
 11345  06F0  0833               	movf	sprintf@width^(0+128),w
 11346  06F1  0243               	subwf	sprintf@prec^(0+128),w
 11347  06F2                     u5695:
 11348  06F2  1803               	skipnc
 11349  06F3  2EF5               	goto	u5691
 11350  06F4  2EF6               	goto	u5690
 11351  06F5                     u5691:
 11352  06F5  2EFF               	goto	l3516
 11353  06F6                     u5690:
 11354  06F6                     l3514:
 11355                           
 11356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11357  06F6  1683               	bsf	3,5	;RP0=1, select bank1
 11358  06F7  1303               	bcf	3,6	;RP1=0, select bank1
 11359  06F8  0843               	movf	sprintf@prec^(0+128),w
 11360  06F9  02B3               	subwf	sprintf@width^(0+128),f
 11361  06FA  0844               	movf	(sprintf@prec+1)^(0+128),w
 11362  06FB  1C03               	skipc
 11363  06FC  03B4               	decf	(sprintf@width+1)^(0+128),f
 11364  06FD  02B4               	subwf	(sprintf@width+1)^(0+128),f
 11365  06FE  2F03               	goto	l3518
 11366  06FF                     l3516:
 11367                           
 11368                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11369  06FF  1683               	bsf	3,5	;RP0=1, select bank1
 11370  0700  1303               	bcf	3,6	;RP1=0, select bank1
 11371  0701  01B3               	clrf	sprintf@width^(0+128)
 11372  0702  01B4               	clrf	(sprintf@width+1)^(0+128)
 11373  0703                     l3518:
 11374                           
 11375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11376  0703  0834               	movf	(sprintf@width+1)^(0+128),w
 11377  0704  3A80               	xorlw	128
 11378  0705  3C80               	sublw	128
 11379  0706  1D03               	skipz
 11380  0707  2F0A               	goto	u5705
 11381  0708  0833               	movf	sprintf@width^(0+128),w
 11382  0709  0245               	subwf	sprintf@c^(0+128),w
 11383  070A                     u5705:
 11384  070A  1803               	skipnc
 11385  070B  2F0D               	goto	u5701
 11386  070C  2F0E               	goto	u5700
 11387  070D                     u5701:
 11388  070D  2F1A               	goto	l3522
 11389  070E                     u5700:
 11390  070E                     l3520:
 11391                           
 11392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11393  070E  1683               	bsf	3,5	;RP0=1, select bank1
 11394  070F  1303               	bcf	3,6	;RP1=0, select bank1
 11395  0710  0845               	movf	sprintf@c^(0+128),w
 11396  0711  00A7               	movwf	??_sprintf^(0+128)
 11397  0712  01A8               	clrf	(??_sprintf^(0+128)+1)
 11398  0713  0827               	movf	??_sprintf^(0+128),w
 11399  0714  02B3               	subwf	sprintf@width^(0+128),f
 11400  0715  0828               	movf	(??_sprintf+1)^(0+128),w
 11401  0716  1C03               	skipc
 11402  0717  03B4               	decf	(sprintf@width+1)^(0+128),f
 11403  0718  02B4               	subwf	(sprintf@width+1)^(0+128),f
 11404  0719  2F1E               	goto	l3524
 11405  071A                     l3522:
 11406                           
 11407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11408  071A  1683               	bsf	3,5	;RP0=1, select bank1
 11409  071B  1303               	bcf	3,6	;RP1=0, select bank1
 11410  071C  01B3               	clrf	sprintf@width^(0+128)
 11411  071D  01B4               	clrf	(sprintf@width+1)^(0+128)
 11412  071E                     l3524:
 11413                           
 11414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11415  071E  0833               	movf	sprintf@width^(0+128),w
 11416  071F  0434               	iorwf	(sprintf@width+1)^(0+128),w
 11417  0720  1903               	btfsc	3,2
 11418  0721  2F23               	goto	u5711
 11419  0722  2F24               	goto	u5710
 11420  0723                     u5711:
 11421  0723  2F3F               	goto	l3532
 11422  0724                     u5710:
 11423  0724                     l3526:
 11424                           
 11425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11426  0724  3020               	movlw	32
 11427  0725  00A7               	movwf	??_sprintf^(0+128)
 11428  0726  0820               	movf	sprintf@sp^(0+128),w
 11429  0727  0084               	movwf	4
 11430  0728  1783               	bsf	3,7
 11431  0729  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 11432  072A  1383               	bcf	3,7
 11433  072B  0827               	movf	??_sprintf^(0+128),w
 11434  072C  0080               	movwf	0
 11435  072D                     l3528:
 11436  072D  3001               	movlw	1
 11437  072E  07A0               	addwf	sprintf@sp^(0+128),f
 11438  072F  1803               	skipnc
 11439  0730  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 11440  0731  3000               	movlw	0
 11441  0732  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 11442  0733                     l3530:
 11443  0733  30FF               	movlw	255
 11444  0734  07B3               	addwf	sprintf@width^(0+128),f
 11445  0735  1803               	skipnc
 11446  0736  0AB4               	incf	(sprintf@width+1)^(0+128),f
 11447  0737  30FF               	movlw	255
 11448  0738  07B4               	addwf	(sprintf@width+1)^(0+128),f
 11449  0739  0833               	movf	sprintf@width^(0+128),w
 11450  073A  0434               	iorwf	(sprintf@width+1)^(0+128),w
 11451  073B  1D03               	btfss	3,2
 11452  073C  2F3E               	goto	u5721
 11453  073D  2F3F               	goto	u5720
 11454  073E                     u5721:
 11455  073E  2F24               	goto	l3526
 11456  073F                     u5720:
 11457  073F                     l3532:
 11458                           
 11459                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11460  073F  3003               	movlw	3
 11461  0740  0531               	andwf	sprintf@flag^(0+128),w
 11462  0741  00A7               	movwf	??_sprintf^(0+128)
 11463  0742  3000               	movlw	0
 11464  0743  0532               	andwf	(sprintf@flag+1)^(0+128),w
 11465  0744  00A8               	movwf	(??_sprintf+1)^(0+128)
 11466  0745  0827               	movf	??_sprintf^(0+128),w
 11467  0746  0428               	iorwf	(??_sprintf^(0+128)+1),w
 11468  0747  1903               	btfsc	3,2
 11469  0748  2F4A               	goto	u5731
 11470  0749  2F4B               	goto	u5730
 11471  074A                     u5731:
 11472  074A  2FBA               	goto	l3544
 11473  074B                     u5730:
 11474  074B                     l3534:
 11475                           
 11476                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11477  074B  302D               	movlw	45
 11478  074C  00A7               	movwf	??_sprintf^(0+128)
 11479  074D  0820               	movf	sprintf@sp^(0+128),w
 11480  074E  0084               	movwf	4
 11481  074F  1783               	bsf	3,7
 11482  0750  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 11483  0751  1383               	bcf	3,7
 11484  0752  0827               	movf	??_sprintf^(0+128),w
 11485  0753  0080               	movwf	0
 11486  0754                     l3536:
 11487  0754  3001               	movlw	1
 11488  0755  07A0               	addwf	sprintf@sp^(0+128),f
 11489  0756  1803               	skipnc
 11490  0757  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 11491  0758  3000               	movlw	0
 11492  0759  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 11493  075A  2FBA               	goto	l3544
 11494  075B                     l3538:
 11495                           
 11496                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 11497  075B  3000               	movlw	0
 11498  075C  1283               	bcf	3,5	;RP0=0, select bank0
 11499  075D  1303               	bcf	3,6	;RP1=0, select bank0
 11500  075E  00A3               	movwf	___llmod@divisor+3
 11501  075F  3000               	movlw	0
 11502  0760  00A2               	movwf	___llmod@divisor+2
 11503  0761  3000               	movlw	0
 11504  0762  00A1               	movwf	___llmod@divisor+1
 11505  0763  300A               	movlw	10
 11506  0764  00A0               	movwf	___llmod@divisor
 11507  0765  1683               	bsf	3,5	;RP0=1, select bank1
 11508  0766  1303               	bcf	3,6	;RP1=0, select bank1
 11509  0767  0843               	movf	sprintf@prec^(0+128),w
 11510  0768  00A7               	movwf	??_sprintf^(0+128)
 11511  0769  3001               	movlw	1
 11512  076A                     u5745:
 11513  076A  1003               	clrc
 11514  076B  0DA7               	rlf	??_sprintf^(0+128),f
 11515  076C  3EFF               	addlw	-1
 11516  076D  1D03               	skipz
 11517  076E  2F6A               	goto	u5745
 11518  076F  1003               	clrc
 11519  0770  0D27               	rlf	??_sprintf^(0+128),w
 11520  0771  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11521  0772  0084               	movwf	4
 11522  0773  120A  118A  200D  120A  118A  	fcall	stringdir
 11523  0778  00F0               	movwf	___lldiv@divisor
 11524  0779  120A  118A  200D  120A  118A  	fcall	stringdir
 11525  077E  00F1               	movwf	___lldiv@divisor+1
 11526  077F  120A  118A  200D  120A  118A  	fcall	stringdir
 11527  0784  00F2               	movwf	___lldiv@divisor+2
 11528  0785  120A  118A  200D  120A  118A  	fcall	stringdir
 11529  078A  00F3               	movwf	___lldiv@divisor+3
 11530  078B  083C               	movf	(sprintf@val+3)^(0+128),w
 11531  078C  00F7               	movwf	___lldiv@dividend+3
 11532  078D  083B               	movf	(sprintf@val+2)^(0+128),w
 11533  078E  00F6               	movwf	___lldiv@dividend+2
 11534  078F  083A               	movf	(sprintf@val+1)^(0+128),w
 11535  0790  00F5               	movwf	___lldiv@dividend+1
 11536  0791  0839               	movf	sprintf@val^(0+128),w
 11537  0792  00F4               	movwf	___lldiv@dividend
 11538  0793  160A  158A  23CA  120A  118A  	fcall	___lldiv
 11539  0798  0873               	movf	?___lldiv+3,w
 11540  0799  1283               	bcf	3,5	;RP0=0, select bank0
 11541  079A  1303               	bcf	3,6	;RP1=0, select bank0
 11542  079B  00A7               	movwf	___llmod@dividend+3
 11543  079C  0872               	movf	?___lldiv+2,w
 11544  079D  00A6               	movwf	___llmod@dividend+2
 11545  079E  0871               	movf	?___lldiv+1,w
 11546  079F  00A5               	movwf	___llmod@dividend+1
 11547  07A0  0870               	movf	?___lldiv,w
 11548  07A1  00A4               	movwf	___llmod@dividend
 11549  07A2  160A  158A  231B  120A  118A  	fcall	___llmod
 11550  07A7  1283               	bcf	3,5	;RP0=0, select bank0
 11551  07A8  1303               	bcf	3,6	;RP1=0, select bank0
 11552  07A9  0820               	movf	?___llmod,w
 11553  07AA  3E30               	addlw	48
 11554  07AB  1683               	bsf	3,5	;RP0=1, select bank1
 11555  07AC  1303               	bcf	3,6	;RP1=0, select bank1
 11556  07AD  00A8               	movwf	(??_sprintf+1)^(0+128)
 11557  07AE  0828               	movf	(??_sprintf+1)^(0+128),w
 11558  07AF  00C5               	movwf	sprintf@c^(0+128)
 11559  07B0                     l3540:
 11560                           
 11561                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 11562  07B0  0845               	movf	sprintf@c^(0+128),w
 11563  07B1  00A7               	movwf	??_sprintf^(0+128)
 11564  07B2  0820               	movf	sprintf@sp^(0+128),w
 11565  07B3  0084               	movwf	4
 11566  07B4  1783               	bsf	3,7
 11567  07B5  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 11568  07B6  1383               	bcf	3,7
 11569  07B7  0827               	movf	??_sprintf^(0+128),w
 11570  07B8  0080               	movwf	0
 11571  07B9  2F54               	goto	l3536
 11572  07BA                     l3544:
 11573                           
 11574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11575  07BA  30FF               	movlw	255
 11576  07BB  07C3               	addwf	sprintf@prec^(0+128),f
 11577  07BC  1803               	skipnc
 11578  07BD  0AC4               	incf	(sprintf@prec+1)^(0+128),f
 11579  07BE  30FF               	movlw	255
 11580  07BF  07C4               	addwf	(sprintf@prec+1)^(0+128),f
 11581  07C0  0A43               	incf	sprintf@prec^(0+128),w
 11582  07C1  1D03               	skipz
 11583  07C2  2FC7               	goto	u5751
 11584  07C3  0A44               	incf	(sprintf@prec+1)^(0+128),w
 11585  07C4  1D03               	btfss	3,2
 11586  07C5  2FC7               	goto	u5751
 11587  07C6  2FC8               	goto	u5750
 11588  07C7                     u5751:
 11589  07C7  2F5B               	goto	l3538
 11590  07C8                     u5750:
 11591  07C8                     l3546:
 11592                           
 11593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11594  07C8  3001               	movlw	1
 11595  07C9  07A2               	addwf	sprintf@f^(0+128),f
 11596  07CA  30FF               	movlw	-1
 11597  07CB  0722               	addwf	sprintf@f^(0+128),w
 11598  07CC  0084               	movwf	4
 11599  07CD  120A  118A  200D  120A  118A  	fcall	stringdir
 11600  07D2  00A7               	movwf	??_sprintf^(0+128)
 11601  07D3  0827               	movf	??_sprintf^(0+128),w
 11602  07D4  00C5               	movwf	sprintf@c^(0+128)
 11603  07D5  0845               	movf	sprintf@c^(0+128),w
 11604  07D6  1D03               	btfss	3,2
 11605  07D7  2FD9               	goto	u5761
 11606  07D8  2FDC               	goto	u5760
 11607  07D9                     u5761:
 11608  07D9  160A  118A  2D44   	goto	l3262
 11609  07DC                     u5760:
 11610  07DC                     l3548:
 11611                           
 11612                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11613  07DC  0820               	movf	sprintf@sp^(0+128),w
 11614  07DD  0084               	movwf	4
 11615  07DE  1783               	bsf	3,7
 11616  07DF  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 11617  07E0  1383               	bcf	3,7
 11618  07E1  0180               	clrf	0
 11619  07E2                     l389:
 11620  07E2  0008               	return
 11621  07E3                     __end_of_sprintf:

Data Sizes:
    Strings     48
    Constant    144
    Data        1
    BSS         77
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     42      78
    BANK3            96      0      40
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_7(CODE[7]), STR_6(CODE[3]), STR_5(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> l(BANK3[20]), c(BANK3[20]), s(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    write@entrada	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), l(BANK3[20]), STR_4(CODE[4]), c(BANK3[20]), 
		 -> STR_3(CODE[4]), s(BANK1[20]), STR_2(CODE[4]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> l(BANK3[20]), c(BANK3[20]), s(BANK1[20]), STR_1(CODE[19]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   40214
                                             38 BANK1      4     4      0
                          _INIT_UART
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___flmul
                           ___xxtofl
                              _setup
                            _spiInit
                            _spiRead
                            _sprintf
                              _write
 ---------------------------------------------------------------------------------
 (2) _write                                                4     2      2     620
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    36      7   32957
                                              0 BANK1     38    31      7
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     438
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     482
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _INIT_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INIT_UART
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _setup
   _spiInit
   _spiRead
     _spiReceiveWait
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
   _write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      28       9       41.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     2A      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D4      12        0.0%
ABS                  0      0      D4       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 20 22:41:01 2021

                        l9 18B8                          _c 0190                          _l 01A4  
                        _n 00CA                          _p 00CE                          _s 00D9  
                        _x 00D2                          pc 0002                _SSPSTATbits 0094  
                       l12 1943                         l21 1982                         l15 18D8  
                       l24 1A46                         l33 1A88                         l27 195E  
             ___awdiv@sign 0021                         fsr 0004        ___wmul@multiplicand 0072  
      __Umul8_16@word_mpld 0076                        l104 18FE                        l133 1913  
                      l109 1091                        l142 1049                        l151 1073  
                      l136 1015                        l145 1063                        l170 1924  
                      l171 1929                        l139 102F                        l148 106D  
                      l174 0800                        l319 1605                        l177 0806  
                      l610 093F                        l290 1FFF                        l603 086D  
                      l611 08B1                        l188 1008                        l429 1C2F  
                      l621 0932                        l606 0882                        l614 0902  
                      l359 0482                        l720 1316                        l393 19B3  
                      l297 0C9E                        l546 1C98                        l395 19CB  
                      l563 01B9                        l580 1B05                        l724 13BD  
                      l564 011E                        l581 1B1A                        l741 1488  
                      l733 153A                        l709 1A05                        l389 07E2  
                      l726 1394                        l574 01AC                        l822 0F6B  
                      l751 14CE                        l567 017C                        l559 1BC9  
                      l584 1CB5                        l592 18CB                        l816 0FFF  
                      l745 14AC                        l649 1B70                        l762 152E  
                      l754 150C                        l579 1AE9                        l587 1D21  
                      l763 153A                        l835 00E9                        l588 1D3A  
                      l596 0882                        l860 1D5D                        l828 0FF3  
                      l837 00FB                        l766 19A6                        l862 1DF4  
                      l880 18EA                        l873 1DBE                        l874 1DCA  
                      l866 1DA2                        l699 1ACC                        _adc 00D8  
                      _lmm 00ED                        fsr0 0004                        indf 0000  
             ___awmod@sign 0076               ___flmul@aexp 0036               ___flmul@bexp 0037  
             ___flmul@sign 0031               ___flmul@temp 003C               ___flmul@prod 0038  
             ___fltol@exp1 005B                       l3000 01A1                       l3010 19AD  
                     l3002 01B1                       l3100 0841                       l3020 1BCA  
                     l3012 19BA                       l3030 1BF7                       l3022 1BDA  
                     l3014 19C1                       l3006 19A7                       l3200 1977  
                     l3032 1C09                       l3024 1BDD                       l3040 1C27  
                     l3120 1B1B                       l3016 19C7                       l3008 19A9  
                     l2400 1B86                       l3210 1A24                       l3202 197C  
                     l3050 1B17                       l3114 0862                       l3106 0849  
                     l3034 1C17                       l3026 1BEA                       l3130 1B4B  
                     l3122 1B25                       l2330 00D8                       l2410 1B9E  
                     l2402 1B8C                       l3212 1A2A                       l3204 1A06  
                     l3220 1A6C                       l3052 1B19                       l3044 1ACD  
                     l3060 1CC9                       l2500 12EE                       l3140 1983  
                     l3116 0872                       l3108 085B                       l3036 1C18  
                     l3028 1BEE                       l3132 1B59                       l3124 1B28  
                     l2332 00DF                       l2420 1BC0                       l2412 1BA8  
                     l2404 1B8F                       l3300 1603                       l2342 18B4  
                     l3206 1A0C                       l3214 1A47                       l3230 18F2  
                     l3222 18EB                       l3046 1AE1                       l3070 1D37  
                     l3062 1CD1                       l2510 1303                       l2502 12F4  
                     l3142 1987                       l3118 0877                       l3038 1C21  
                     l3134 1B62                       l3126 1B35                       l3150 1D45  
                     l2334 00E3                       l2430 1A91                       l2350 1C3C  
                     l2422 1BC5                       l2414 1BAE                       l2406 1B96  
                     l3310 163B                       l3208 1A15                       l3216 1A4A  
                     l3232 18FC                       l3224 18EE                       l3240 191E  
                     l3048 1AFD                       l3072 1D39                       l3064 1CD5  
                     l3056 1C99                       l3080 18CB                       l2600 1460  
                     l2520 1320                       l2512 130B                       l2504 12F8  
                     l3128 1B39                       l3136 1B68                       l3160 1D73  
                     l3152 1D55                       l2336 00F2                       l2328 00D6  
                     l2440 1AB4                       l2432 1A94                       l2360 1C4D  
                     l2352 1C3E                       l2344 1C30                       l2416 1BB5  
                     l2408 1B9A                       l3400 0371                       l3320 1683  
                     l3312 163F                       l3304 1607                       l3218 1A66  
                     l3234 18FD                       l3226 18F0                       l3242 1920  
                     l3066 1CF9                       l3058 1CAD                       l2610 1495  
                     l2602 1466                       l2530 1334                       l2522 1324  
                     l2514 130C                       l2506 12F9                       l3090 081D  
                     l3170 1DA9                       l3162 1D80                       l3154 1D65  
                     l3146 1D3C                       l2338 00F7                       l2442 1ABA  
                     l2434 1A9B                       l2426 1A89                       l2370 1C65  
                     l2362 1C53                       l2354 1C42                       l2346 1C33  
                     l2418 1BBB                       l3410 0397                       l3402 0378  
                     l3330 16B5                       l3322 1687                       l3314 164D  
                     l3306 1629                       l3250 1009                       l3228 18F1  
                     l3244 1923                       l3236 1915                       l3068 1CFD  
                     l3076 18C1                       l2620 14B0                       l2604 146B  
                     l2540 1348                       l2532 1338                       l2524 1328  
                     l2508 12FE                       l2516 130E                       l3092 0832  
                     l3084 0807                       l3180 1DE2                       l3172 1DB4  
                     l3164 1D87                       l3148 1D41                       l2700 0CEF  
                     l2444 1ABB                       l2436 1A9F                       l2428 1A8B  
                     l2460 19E0                       l2452 19CC                       l2372 1C76  
                     l2364 1C56                       l2380 1C8A                       l2356 1C47  
                     l2348 1C37                       l3500 06B2                       l3420 042F  
                     l3412 03A5                       l3404 0383                       l3340 1704  
                     l3332 16C8                       l3324 168B                       l3316 1651  
                     l3308 1637                       l3260 153B                       l3252 101B  
                     l3246 18FF                       l3190 18CC                       l3238 191C  
                     l3078 18C9                       l2622 14B3                       l2614 149E  
                     l2606 147A                       l2630 14C0                       l2550 135C  
                     l2542 134C                       l2534 133C                       l2526 132C  
                     l2518 131C                       l3094 0833                       l3086 0814  
                     l3182 1DE7                       l3174 1DB8                       l3166 1D8B  
                     l3158 1D6E                       l2702 0CF1                       l2446 1AC2  
                     l2438 1AA3                       l2462 19E4                       l2454 19D2  
                     l2470 1A01                       l2382 1C8F                       l2374 1C7C  
                     l2366 1C5D                       l2358 1C4B                       l2390 1B72  
                     l3510 06E4                       l3502 06C1                       l3430 0453  
                     l3414 03AE                       l3342 174F                       l3334 16DB  
                     l3326 16A4                       l3350 1794                       l3318 166A  
                     l3270 155E                       l3262 1544                       l3254 1035  
                     l3248 1911                       l3192 1960                       l2640 14D3  
                     l2632 14C1                       l2624 14B5                       l2616 14A7  
                     l2608 1490                       l2560 13A1                       l2544 1350  
                     l2536 1340                       l2528 1330                       l2552 1360  
                     l2480 12C4                       l3096 083B                       l3184 1DEB  
                     l3176 1DC2                       l3168 1D99                       l2800 0FEB  
                     l2720 0D62                       l2712 0D0C                       l2704 0CF9  
                     l2448 1AC8                       l2464 19EE                       l2456 19D5  
                     l2384 1C94                       l2376 1C7D                       l2368 1C61  
                     l2392 1B76                       l3520 070E                       l3512 06E8  
                     l3504 06CA                       l3440 048B                       l3432 0459  
                     l3416 03B5                       l3424 043A                       l3408 038A  
                     l3360 01FC                       l3352 17A3                       l3344 1768  
                     l3336 16DF                       l3328 16AF                       l3280 159E  
                     l3272 156E                       l3264 154A                       l3256 104F  
                     l3600 11EA                       l2810 192E                       l3194 1965  
                     l2650 1511                       l2642 14D8                       l2634 14C5  
                     l2626 14BA                       l2618 14AB                       l2562 13A3  
                     l2570 13B5                       l2554 1361                       l2546 1354  
                     l2538 1344                       l2490 12D8                       l2482 12C5  
                     l2474 12B3                       l3098 083D                       l3186 1DEC  
                     l3178 1DCC                       l2802 0FEC                       l2730 0DDF  
                     l2722 0D8E                       l2714 0D1C                       l2706 0CFE  
                     l2466 19F4                       l2458 19DC                       l2378 1C84  
                     l2394 1B7B                       l3530 0733                       l3522 071A  
                     l3514 06F6                       l3506 06D2                       l3450 0553  
                     l3442 0490                       l3434 0466                       l3426 0442  
                     l3418 03F0                       l3370 0255                       l3362 020B  
                     l3354 17EA                       l3346 1771                       l3338 16E5  
                     l3290 15C4                       l3274 1572                       l3282 15AE  
                     l3266 1553                       l3258 1069                       l3610 120E  
                     l3602 11F4                       l2812 1934                       l3196 196A  
                     l2820 1948                       l2660 1528                       l2652 1516  
                     l2644 14E6                       l2636 14CB                       l2628 14BC  
                     l2580 13E6                       l2572 13C1                       l2564 13A7  
                     l2556 1378                       l2548 1358                       l2484 12CA  
                     l2492 12DA                       l2476 12BA                       l2804 0FF7  
                     l2740 0E5F                       l2732 0DFC                       l2724 0DAA  
                     l2716 0D29                       l2708 0D03                       l2468 19FB  
                     l2396 1B7D                       l2388 1B71                       l3540 07B0  
                     l3532 073F                       l3524 071E                       l3516 06FF  
                     l3508 06DE                       l3460 0605                       l3452 0592  
                     l3444 0499                       l3436 0475                       l3428 044D  
                     l3380 02FF                       l3364 0226                       l3356 01BA  
                     l3348 178C                       l3292 15D9                       l3284 15BC  
                     l3276 1587                       l3268 155A                       l3620 1238  
                     l3612 1218                       l3604 11F7                       l2814 1937  
                     l3198 1971                       l2822 194E                       l2830 0800  
                     l2662 152A                       l2654 151E                       l2646 14EA  
                     l2590 13FD                       l2582 13EA                       l2574 13C6  
                     l2566 13A8                       l2558 1398                       l2494 12E2  
                     l2486 12CF                       l2478 12C0                       l2902 0883  
                     l2750 0F17                       l2742 0E8C                       l2734 0E0C  
                     l2726 0DC6                       l2718 0D46                       l2670 0CA6  
                     l2398 1B81                       l3534 074B                       l3526 0724  
                     l3518 0703                       l3470 0632                       l3462 060E  
                     l3454 059C                       l3446 049F                       l3438 047C  
                     l3382 0301                       l3374 0274                       l3366 022F  
                     l3358 01D5                       l3294 15EC                       l3286 15BD  
                     l3278 159A                       l3630 125E                       l3622 1243  
                     l3614 121B                       l3606 1201                       l2816 1940  
                     l2808 192B                       l2824 1951                       l2664 1535  
                     l2656 1523                       l2648 1508                       l2592 13FE  
                     l2584 13EE                       l2568 13B1                       l2496 12E7  
                     l2488 12D7                       l2920 08C9                       l2904 0896  
                     l2760 0F3C                       l2752 0F20                       l2744 0E9C  
                     l2736 0E29                       l2728 0DCF                       l2680 0CBB  
                     l2672 0CAC                       l2840 1F0B                       l2832 1DF8  
                     l3536 0754                       l3544 07BA                       l3528 072D  
                     l3480 064F                       l3472 0636                       l3464 0614  
                     l3456 05A2                       l3448 0518                       l3392 033A  
                     l3368 0237                       l3376 027D                       l3296 15F0  
                     l3288 15C1                       l3640 1289                       l3632 126D  
                     l3624 1247                       l3616 122A                       l3608 1204  
                     l2826 1956                       l2818 1945                       l2666 1539  
                     l2658 1524                       l2594 1407                       l2586 13F7  
                     l2578 13CF                       l2498 12ED                       l2930 08F4  
                     l2922 08D2                       l2914 08B2                       l2770 0F54  
                     l2762 0F45                       l2754 0F2E                       l2746 0EC9  
                     l2738 0E42                       l2690 0CD8                       l2682 0CC3  
                     l2674 0CB0                       l2842 1F11                       l2834 1DFE  
                     l2850 0943                       l3538 075B                       l3490 065F  
                     l3482 0657                       l3474 063A                       l3466 061A  
                     l3458 05FD                       l3394 0344                       l3378 02B2  
                     l3298 1601                       l3546 07C8                       l3642 129D  
                     l3634 1278                       l3626 1251                       l3618 1235  
                     l3570 10B4                       l3562 1074                       l2828 1959  
                     l3556 1000                       l2588 13F9                       l2596 140C  
                     l2940 090E                       l2932 08FC                       l2924 08DB  
                     l2916 08B8                       l2908 089F                       l2780 0F83  
                     l2772 0F68                       l2756 0F37                       l2764 0F4B  
                     l2748 0EEF                       l2692 0CDC                       l2684 0CC5  
                     l2676 0CB1                       l2668 0C9F                       l2852 0947  
                     l3484 065D                       l3476 063E                       l3396 035F  
                     l3388 0303                       l3468 0621                       l3548 07DC  
                     l3636 127B                       l3628 125B                       l3580 10E1  
                     l3572 10BD                       l3564 1099                       l3558 1005  
                     l2598 1422                       l2950 0937                       l2934 0906  
                     l2942 0920                       l2926 08E9                       l2918 08C7  
                     l2790 0FBE                       l2782 0F87                       l2766 0F4F  
                     l2758 0F3B                       l2694 0CDD                       l2686 0CCD  
                     l2678 0CB6                       l2846 1FBC                       l2862 0A38  
                     l2854 0949                       l3494 0696                       l3478 0649  
                     l3398 0365                       l3638 1286                       l3590 115B  
                     l3582 1127                       l3574 10C6                       l3566 10A2  
                     l2960 0112                       l2928 08F3                       l2792 0FCD  
                     l2784 0FA0                       l2776 0F70                       l2768 0F50  
                     l2696 0CE2                       l2688 0CD2                       l2880 0BE3  
                     l2864 0A3F                       l2856 0950                       l2872 0AF4  
                     l3496 06A0                       l3664 161B                       l3592 1171  
                     l3584 112F                       l3576 10CF                       l3568 10AB  
                     l2970 0138                       l2954 00FC                       l2794 0FD7  
                     l2778 0F75                       l2786 0FA6                       l2698 0CE7  
                     l2890 18DA                       l2882 0BEA                       l2874 0AFB  
                     l3498 06AB                       l3594 117A                       l3586 1146  
                     l3578 10D8                       l2980 016C                       l2972 013A  
                     l2956 0109                       l2948 0927                       l2796 0FD9  
                     l2788 0FB3                       l2892 18DB                       l2868 0AC7  
                     l3596 11CA                       l3588 114F                       l2982 016D  
                     l2974 0143                       l2966 011F                       l2798 0FE7  
                     l2894 18E1                       l2886 0C72                       l3598 11E1  
                     l2992 0188                       l2984 0176                       l2976 014C  
                     l2968 0127                       l2896 18E7                       l2986 0180  
                     l2994 019A                       l2978 015E                       l2898 18E9  
                     STR_1 00A3                       STR_2 00C4                       STR_3 00C8  
                     STR_4 00CC                       STR_5 00BD                       STR_6 00D0  
                     STR_7 00B6                       u3000 1C8A                       u3001 1C89  
                     u3010 1C8F                       u3011 1C8E                       u3100 1BC0  
                     u3020 1B76                       u3101 1BBF                       u3021 1B75  
                     u3110 1A91                       u3030 1B81                       u3111 1A90  
                     u3031 1B80                       u4000 0F6F                       u3200 19E4  
                     u3040 1B8C                       u4001 0F6E                       u3201 19E3  
                     u3041 1B8B                       u4010 0F75                       u3130 1AA3  
                     u3210 19EE                       u4011 0F74                       u3131 1AA2  
                     u3211 19ED                       u3300 1303                       u4020 0F87  
                     u3060 1B9E                       u3301 1302                       u4021 0F86  
                     u3125 1A95                       u3061 1B9D                       u3310 131C  
                     u4030 0F96                       u3150 1AB4                       u3230 1A01  
                     u3070 1BA8                       u3311 131B                       u3151 1AB3  
                     u3231 1A00                       u3215 19EA                       u3071 1BA7  
                     u3055 1B90                       u3400 13C1                       u3320 1320  
                     u3240 12C4                       u5000 1D45                       u4040 0FB3  
                     u4120 1F11                       u3401 13C0                       u3321 131F  
                     u3241 12C3                       u5001 1D44                       u4041 0FB2  
                     u3145 1AA4                       u3225 19F5                       u4121 1F10  
                     u4105 1E75                       u3410 13C6                       u3330 1378  
                     u3250 12CA                       u5010 1D65                       u4050 0FCD  
                     u3170 1AC8                       u3090 1BBB                       u4210 0A3F  
                     u3411 13C5                       u3331 1377                       u3251 12C9  
                     u5011 1D64                       u4051 0FCC                       u4035 0F91  
                     u3171 1AC7                       u3155 1AB0                       u4115 1ECA  
                     u3091 1BBA                       u3075 1BA4                       u4211 0A3E  
                     u3500 146B                       u3340 1383                       u3260 12CF  
                     u5100 1DD7                       u4060 0FEB                       u3180 19D2  
                     u3501 146A                       u3421 13D8                       u3341 1381  
                     u3261 12CE                       u4061 0FEA                       u4045 0FAF  
                     u3165 1ABC                       u3181 19D1                       u3085 1BAF  
                     u4205 09F7                       u4070 0806                       u3510 1490  
                     u3430 13EA                       u3422 13DF                       u3350 1384  
                     u3270 12ED                       u5110 1DE7                       u5030 1D86  
                     u4071 0805                       u3511 148F                       u3431 13E9  
                     u3423 13E6                       u3335 1374                       u3271 12EC  
                     u5111 1DE6                       u5031 1D85                       u4055 0FC9  
                     u4135 1F2E                       u3600 14D2                       u3520 1495  
                     u3440 13EE                       u3360 1398                       u3280 12F8  
                     u5120 1DEB                       u4400 0902                       u4080 1DFE  
                     u4160 0947                       u5200 1035                       u3601 14D1  
                     u3521 1494                       u3441 13ED                       u3361 1397  
                     u3281 12F7                       u5121 1DEA                       u5105 1DD2  
                     u5025 1D78                       u4401 0901                       u4145 1F7B  
                     u4081 1DFD                       u4305 0BFD                       u4225 0A52  
                     u4161 0946                       u5201 1034                       u5130 1965  
                     u3610 14D8                       u3450 13FD                       u3370 13A7  
                     u3290 12FE                       u5050 1DA8                       u4410 0906  
                     u4330 18E1                       u4250 0AFB                       u4170 0950  
                     u5210 104F                       u5131 1964                       u3611 14D7  
                     u3451 13FC                       u3371 13A6                       u3291 12FD  
                     u5051 1DA7                       u4411 0905                       u3195 19D6  
                     u4155 1FC7                       u4331 18E0                       u4315 0C39  
                     u4251 0AFA                       u4235 0A8E                       u4171 094F  
                     u5211 104E                       u5140 1977                       u3620 14EA  
                     u3540 14AB                       u4420 090D                       u3700 0CB0  
                     u4340 18E7                       u5300 163B                       u5220 1069  
                     u5141 1976                       u3621 14E9                       u3541 14AA  
                     u5045 1D9A                       u4421 090C                       u3701 0CAF  
                     u4341 18E6                       u4325 0C75                       u4245 0ACA  
                     u5301 163A                       u5221 1068                       u5150 1A54  
                     u3630 14F9                       u3550 14B0                       u3470 1422  
                     u3390 13BD                       u5070 1DB8                       u4510 015E  
                     u4350 0896                       u2910 00F7                       u3710 0CB6  
                     u5310 166A                       u5230 1073                       u3551 14AF  
                     u3535 14A0                       u3471 1421                       u3391 13BC  
                     u5071 1DB7                       u4511 015D                       u4351 0895  
                     u2911 00F6                       u3711 0CB5                       u4095 1E1B  
                     u5311 1669                       u5231 1072                       u5160 1A76  
                     u3640 1508                       u3560 14BA                       u5080 1DBE  
                     u4600 01B1                       u4440 091F                       u4360 08B0  
                     u3720 0CBB                       u2920 1C37                       u5400 020B  
                     u5320 16A4                       u5240 154A                       u3641 1507  
                     u3561 14B9                       u3481 1439                       u3473 141E  
                     u3465 1400                       u3385 13AA                       u5081 1DBD  
                     u5065 1DAD                       u4601 01B0                       u4505 0145  
                     u4441 091E                       u4361 08AF                       u2905 00EA  
                     u3801 0D9C                       u3721 0CBA                       u2921 1C36  
                     u4265 0B1B                       u4185 0970                       u5401 020A  
                     u5321 16A3                       u5241 1549                       u5170 1A88  
                     u3650 1511                       u3570 14C0                       u3490 144D  
                     u3482 143A                       u4610 19AD                       u5090 1DC2  
                     u4530 017C                       u4450 0926                       u3802 0DA3  
                     u3730 0CDC                       u2930 1C42                       u4290 0BEA  
                     u5410 0226                       u5330 16DF                       u5250 156E  
                     u5171 1A87                       u3651 1510                       u3635 14F4  
                     u3571 14BF                       u3491 144E                       u3483 143F  
                     u4611 19AC                       u5091 1DC1                       u4531 017B  
                     u4515 015A                       u4451 0925                       u4435 090F  
                     u3811 0DB8                       u3803 0DAA                       u3731 0CDB  
                     u2931 1C41                       u4291 0BE9                       u4275 0B57  
                     u4195 09AC                       u5411 0225                       u5331 16DE  
                     u5251 156D                       u5180 191C                       u3660 1516  
                     u3580 14C5                       u3492 1453                       u3484 1440  
                     u4540 0180                       u4380 08E9                       u3812 0DBF  
                     u3740 0CE2                       u2940 1C53                       u5500 0441  
                     u5340 1768                       u5260 15AE                       u5181 191B  
                     u3661 1515                       u3581 14C4                       u3493 1454  
                     u3485 1445                       u4541 017F                       u4525 016F  
                     u4381 08E8                       u3901 0EE1                       u3813 0DC6  
                     u3741 0CE1                       u2941 1C52                       u4285 0BA2  
                     u5501 0440                       u5405 0207                       u5341 1767  
                     u5261 15AD                       u3670 1523                       u3590 14CB  
                     u3486 1446                       u4710 1C27                       u4550 0187  
                     u4470 0937                       u3910 0EFD                       u3902 0EE8  
                     u3750 0CE7                       u5510 0466                       u5430 0339  
                     u5350 178C                       u5270 15BC                       u5190 101B  
                     u3671 1522                       u3591 14CA                       u4711 1C26  
                     u4551 0186                       u4471 0936                       u4375 08D4  
                     u3903 0EEF                       u3831 0DEE                       u3751 0CE6  
                     u5511 0465                       u5431 0338                       u5351 178B  
                     u5271 15BB                       u5191 101A                       u4720 1AE1  
                     u3680 1528                       u4640 19C7                       u4480 0109  
                     u3832 0DF5                       u3760 0CFE                       u2960 1C65  
                     u5600 0657                       u5520 0475                       u5440 0344  
                     u5360 17A3                       u5280 1600                       u4721 1AE0  
                     u4801 1D0C                       u3681 1527                       u4705 1C19  
                     u4641 19C6                       u4625 19B4                       u4481 0108  
                     u4465 0929                       u4385 08E5                       u3921 0F09  
                     u3841 0E1B                       u3833 0DFC                       u3825 0DC8  
                     u3761 0CFD                       u2961 1C64                       u5601 0656  
                     u5521 0474                       u5441 0343                       u5425 0306  
                     u5361 17A2                       u5281 15FF                       u4730 1AFD  
                     u4810 1D37                       u4802 1D0D                       u3690 1539  
                     u4650 1BDA                       u4570 0199                       u4490 011D  
                     u2890 00E3                       u3922 0F10                       u3842 0E22  
                     u3770 0D03                       u5530 0490                       u5450 035F  
                     u5370 01BA                       u5290 1637                       u4731 1AFC  
                     u4811 1D36                       u4803 1D12                       u3691 1538  
                     u4651 1BD9                       u4635 19BB                       u4571 0198  
                     u4491 011C                       u4395 08F5                       u2891 00E2  
                     u3923 0F17                       u3915 0EF8                       u3843 0E29  
                     u3771 0D02                       u2955 1C57                       u5531 048F  
                     u5515 0462                       u5451 035E                       u5435 0335  
                     u5371 17FA                       u5291 1634                       u4740 1B17  
                     u4804 1D13                       u4820 18C9                       u4580 01A0  
                     u2980 1C76                       u5700 070E                       u5620 0695  
                     u5460 0371                       u5380 01D5                       u4741 1B16  
                     u4805 1D18                       u4821 18C8                       u4581 019F  
                     u4565 0189                       u3861 0E51                       u3781 0D54  
                     u2981 1C75                       u5701 070D                       u5621 0694  
                     u5525 0471                       u5461 0370                       u5381 01D4  
                     u5365 179F                       u4806 1D19                       u4750 1CAD  
                     u4910 0872                       u4830 0814                       u4670 1BEE  
                     u3950 0F3B                       u3862 0E58                       u3782 0D5B  
                     u5710 0724                       u5630 06A0                       u5470 0397  
                     u5390 01FC                       u4815 1D33                       u4751 1CAC  
                     u4911 0871                       u4831 0813                       u4671 1BED  
                     u3951 0F3A                       u3935 0F19                       u3871 0E7E  
                     u3863 0E5F                       u3855 0E2B                       u3791 0D70  
                     u3783 0D62                       u2975 1C66                       u5711 0723  
                     u5631 069F                       u5615 0662                       u5471 0396  
                     u5391 01FB                       u5375 17F5                       u4760 1CC9  
                     u4920 0877                       u4840 082B                       u3872 0E85  
                     u3792 0D77                       u5720 073F                       u5640 06AB  
                     u5560 0604                       u5480 03A5                       u4745 1B13  
                     u4761 1CC8                       u4921 0876                       u4905 0864  
                     u4665 1BDF                       u3945 0F30                       u3881 0EAB  
                     u3873 0E8C                       u3793 0D7E                       u2985 1C72  
                     u5721 073E                       u5705 070A                       u5641 06AA  
                     u5625 0691                       u5561 0603                       u5545 051B  
                     u5481 03A4                       u4770 1CD5                       u4850 0841  
                     u4690 1C09                       u4930 1B25                       u3970 0F4F  
                     u3890 0ED5                       u3882 0EB2                       u5730 074B  
                     u5650 06C1                       u5570 0620                       u4771 1CD4  
                     u4851 0840                       u4691 1C08                       u4931 1B24  
                     u4595 01A3                       u3971 0F4E                       u3883 0EB9  
                     u2995 1C7E                       u5731 074A                       u5651 06C0  
                     u5571 061F                       u5555 05A5                       u5475 0393  
                     u4860 0848                       u3980 0F54                       u5660 06D2  
                     u5580 063A                       u4781 1CE4                       u4861 0847  
                     u4845 0826                       u4685 1BF0                       u3981 0F53  
                     u3965 0F3E                       u5661 06D1                       u5645 06A7  
                     u5581 0639                       u4790 1CFD                       u4782 1CE5  
                     u4950 1B39                       u3990 0F68                       u5750 07C8  
                     u5670 06DE                       u5590 064F                       u4791 1CFC  
                     u4783 1CEA                       u4695 1C05                       u4951 1B38  
                     u3991 0F67                       u3895 0ED0                       u5751 07C7  
                     u5671 06DD                       u5655 06BD                       u5591 064E  
                     u5495 03B8                       u5807 1223                       u4784 1CEB  
                     u4880 085A                       u4960 1B4B                       u5760 07DC  
                     u5680 06E8                       u4785 1CF0                       u4881 0859  
                     u4961 1B4A                       u4945 1B2A                       u5761 07D9  
                     u5745 076A                       u5681 06E7                       u5817 1230  
                     u4786 1CF1                       u4890 0861                       u5690 06F6  
                     u5907 195B                       u4891 0860                       u4875 084A  
                     u5691 06F5                       u5827 123E                       u4980 1B68  
                     u5917 1A10                       u4981 1B67                       u4965 1B47  
                     u5837 1257                       u4990 1D41                       u5927 1A1F  
                     u4975 1B5A                       u4991 1D40                       u5695 06F2  
                     u5847 1266                       u5937 1A2C                       u5857 1273  
                     u5777 11F0                       u5947 193B                       u5867 1281  
                     u5787 11FD                       u5877 1299                       u5797 1214  
                     u5887 12A8                       u5897 1953                       _TRMT 04C1  
        ?_Lcd_Write_String 0073                       _main 1074                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0075               _sprintf$1253 00AC  
          __end_of_Lcd_Cmd 1944         __size_of_INIT_UART 0015              ___fltol@sign1 005A  
          __end_of___fladd 153B                      ?_main 0070            __end_of___awdiv 1C99  
          __end_of___flneg 18CC            __end_of___awmod 1BCA            __end_of___flmul 1000  
          __end_of___flsub 19A7            __end_of___fltol 0883                      _ANSEL 0188  
          __end_of___lldiv 1C30            ___awdiv@divisor 0077            __end_of___llmod 1B71  
          __end_of___lwdiv 1ACD            __end_of___lwmod 1A06            ___awdiv@counter 0020  
                    _SPBRG 0099                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0024  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _TXREG 0019            __end_of_dpowers 00A3  
                    _count 00D6                      _scale 0940            __end_of_isdigit 18EB  
                    _setup 18EB                      _write 1009                      pclath 000A  
          __end_of_spiInit 192A            __end_of_spiRead 1009                      status 0003  
                    wtemp0 007E            __end_of_sprintf 07E3           __end_of_Lcd_Init 1A47  
         __end_of_Lcd_Port 18B9            __initialization 07E3               __end_of_main 12B3  
                   ??_main 00C6         __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD  
        __end_of_INIT_UART 1914           ___llmod@dividend 0024                     ?_scale 003E  
         ___awdiv@dividend 0079                     ?_setup 0070                     ?_write 0070  
                ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 001B                     _TRISC3 043B  
                   _TRISC5 043D                     _SSPBUF 0013                     _SSPCON 0014  
         __end_of___xxtofl 1DF5           __end_of__powers_ 0047                     ___flge 1C99  
                   ___fleq 1ACD                  ??___fladd 005A                     ___wmul 19A7  
                ??___awdiv 007B                  ??___flneg 0074                  ??___awmod 0074  
                ??___flmul 002C                  ??___flsub 007E                  ??___fltol 0055  
                ??___lldiv 0078                  ??___llmod 0028                  ??___lwdiv 007A  
                ??___lwmod 0074                     _fround 1DF5           ___awdiv@quotient 0022  
          ___awmod@divisor 0070            ___awmod@counter 0075                  ??_isdigit 0070  
       __size_of__Umul8_16 0027                  ??_spiInit 0073                  ??_spiRead 0070  
                ??_sprintf 00A7            Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074  
               ___flge@ff1 0070                 ___flge@ff2 0074               ___xxtofl@arg 007A  
             ___xxtofl@exp 0079               ___xxtofl@val 0070                 ___fleq@ff1 0070  
               ___fleq@ff2 0074    __end_of__initialization 07FC                 ___flneg@f1 0070  
        __end_of_Lcd_Clear 18D9                 ___fltol@f1 0051             __pcstackCOMMON 0070  
             __pidataBANK0 00D4              __end_of_scale 0C9F              __end_of_setup 18FF  
            __end_of_write 1074             _Lcd_Set_Cursor 195F                 __div_to_l_ 00FC  
               _banderaADC 006F                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
          __div_to_l_@exp1 0025            __div_to_l_@cntr 0024                    ??_scale 0042  
          __div_to_l_@quot 0020               sprintf@width 00B3                    ??_setup 0070  
                  ??_write 0072                 __pbssBANK0 006E                 __pbssBANK1 00CA  
               __pbssBANK3 0190              __div_to_l_@f1 0070              __div_to_l_@f2 0074  
        __end_of__Umul8_16 00FC                 __pmaintext 1074                    ?___flge 0070  
                  ?___fleq 0070                    ?___wmul 0070    __size_of_spiReceiveWait 0007  
                  ?_fround 003E  __size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 1983  
                ?___xxtofl 0070                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
                  _SSPSTAT 0094                 __stringtab 0003             _Lcd_Write_Char 1944  
                  _Lcd_Cmd 192A          __end_of__npowers_ 007B                 _scale$1252 004C  
          __size_of___flge 00A2            __size_of___fleq 004E                    ___fladd 12B3  
                  ___awdiv 1C30                    ___flneg 18C1                    ___awmod 1B71  
                  ___flmul 0C9F                    ___flsub 1983                    ___fltol 0807  
                  ___lldiv 1BCA            __size_of___wmul 0025                    ___llmod 1B1B  
                  ___lwdiv 1A89                    ___lwmod 19CC            __size_of_fround 020B  
          ?_Lcd_Set_Cursor 0074                    __ptext1 1009                    __ptext2 153B  
                  __ptext3 0940                    __ptext4 1B71                    __ptext5 1C30  
                  __ptext6 18D9                    __ptext7 1DF5                    __ptext8 19CC  
                  __ptext9 1A89                ?__div_to_l_ 0070                    _dpowers 007B  
                  _isdigit 18D9                    _mensaje 006E                 ??___xxtofl 0074  
         ___awmod@dividend 0072                    _spiInit 1914                    _spiRead 1000  
                  _sprintf 153B                    clrloop0 18BA     __end_of_Lcd_Write_Char 195F  
     end_of_initialization 07FC                  _INIT_UART 18FF            ___lldiv@divisor 0070  
             write@entrada 0070            ___lldiv@counter 007D                  _RCSTAbits 0018  
                  psplit$0 F0032                  Lcd_Port@a 0070             __tdiv_to_l_@f1 0070  
           __tdiv_to_l_@f2 0074              ??__tdiv_to_l_ 0078                  _PORTAbits 0005  
                _PORTCbits 0007                  _PORTEbits 0009                ___fladd@grs 0065  
            ___xxtofl@sign 0078                  _TRISCbits 0087            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0073          Lcd_Write_String@i 0078                 ?_INIT_UART 0070  
              ___flmul@grs 0032                  _TXSTAbits 0098        __size_of__div_to_l_ 00BE  
                _Lcd_Clear 18CC             _spiReceiveWait 0800             __end_of___flge 1D3B  
           __end_of___fleq 1B1B             __end_of___wmul 19CC           _Lcd_Write_String 1A47  
              _BAUDCTLbits 0187          pnum$text2_split_1 0032             __end_of_fround 2000  
      start_initialization 07E3        __end_of__tdiv_to_l_ 0940          __size_of_Lcd_Init 0041  
        __size_of_Lcd_Port 0006            ___llmod@divisor 0020            ___llmod@counter 0029  
   __end_of_spiReceiveWait 0807                 ?_Lcd_Clear 0070                   ??___flge 0078  
                 ??___fleq 0078                   ??___wmul 0074                  __Umul8_16 00D5  
              __pdataBANK0 006F            Lcd_Write_Char@a 0072                   ??_fround 0042  
            sprintf@tmpval 00B5                  ___fladd@a 0056                  ___fladd@b 0052  
               fround@prec 0051                  ___flmul@a 0028                  ___flmul@b 0024  
                ___flsub@a 0066                  ___flsub@b 006A                  ___latbits 0002  
            __pcstackBANK0 0020              __pcstackBANK1 00A0          __size_of___xxtofl 00BA  
             _isdigit$1057 0070                ??_INIT_UART 0070                   ?_Lcd_Cmd 0070  
              sprintf@flag 00B1                sprintf@eexp 00BD                sprintf@fval 00BF  
              sprintf@prec 00C3           ___lwdiv@dividend 0078            ?_spiReceiveWait 0070  
         ??_Lcd_Set_Cursor 0075                   ?___fladd 0052                   ?___awdiv 0077  
                 ?___flneg 0070                   ?___awmod 0070                   ?___flmul 0024  
                 ?___flsub 0066                   ?___fltol 0051                   ?___lldiv 0070  
                 ?___llmod 0020                  __npowers_ 0047                 ?__Umul8_16 0070  
                 ?___lwdiv 0076                   ?___lwmod 0070                  __pstrings 0003  
              __tdiv_to_l_ 0883               ??__div_to_l_ 0078                   ?_isdigit 0070  
                 ?_spiInit 0070                   ?_spiRead 0070           ___lwdiv@quotient 007B  
                 ?_sprintf 00A0             __size_of_scale 035F             __size_of_setup 0014  
           __size_of_write 006B       spiInit@sTransmitEdge 0072             ___wmul@product 0074  
                clear_ram0 18B9                   _PIE1bits 008C         spiInit@sDataSample 0070  
                 Lcd_Cmd@a 0073         __end_of__div_to_l_ 01BA                ??_Lcd_Clear 0074  
              __stringbase 0012          ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 1A06                   _Lcd_Port 18B3   __end_of_Lcd_Write_String 1A89  
         __size_of_Lcd_Cmd 001A                ??__Umul8_16 0072           __size_of___fladd 0288  
         __size_of___awdiv 0069           __size_of___flneg 000B           __size_of___awmod 0059  
         __size_of___flmul 0361           __size_of___flsub 0024           __size_of___fltol 007C  
         __size_of___lldiv 0066           __size_of___llmod 0056           __size_of___lwdiv 0044  
         __size_of___lwmod 003A                _fround$1250 004D                _fround$1251 0049  
       __end_of__stringtab 0013                 sprintf@val 00B9                   ___xxtofl 1D3B  
         __size_of_isdigit 0012            ___lwdiv@divisor 0076            ___lwdiv@counter 007D  
                 __ptext10 0C9F                   __ptext11 00D5                   __ptext20 12B3  
                 __ptext12 0883                   __ptext21 18C1                   __ptext13 00FC  
                 __ptext30 195F                   __ptext22 1C99                   __ptext14 1D3B  
                 __ptext31 1A06                   __ptext23 1ACD                   __ptext15 19A7  
                 __ptext32 18CC                   __ptext24 1000                   __ptext16 1B1B  
                 __ptext33 192A                   __ptext25 0800                   __ptext17 1BCA  
                 __ptext34 18B3                   __ptext26 1914                   __ptext18 0807  
                 __ptext35 18FF                   __ptext27 18EB                   __ptext19 1983  
                 __ptext28 1A47                   __ptext29 1944           __size_of_spiInit 0016  
         __size_of_spiRead 0009                   __powers_ 0013                   _esclavo1 00D7  
         __size_of_sprintf F2A8              __size_of_main 023F                  pnum$text2 000F  
             spiInit@sType 0073          spiInit@sClockIdle 0071                 _INTCONbits 000B  
                 isdigit@c 0071                   scale@scl 0050                  sprintf@ap 00B0  
         __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024                  sprintf@sp 00A0  
         __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072           ___lldiv@dividend 0074  
         ??_spiReceiveWait 0070                  stringcode 000D         Lcd_Set_Cursor@temp 0077  
             ?__tdiv_to_l_ 0070     __Umul8_16@multiplicand 0070                   sprintf@c 00C5  
                 sprintf@f 00A2           ___lldiv@quotient 0079            ___lwmod@divisor 0070  
          ___lwmod@counter 0075                   stringdir 000D                   stringtab 0003  
            ___fladd@signs 0062               ___fladd@aexp 0063               ___fladd@bexp 0064  
     __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
