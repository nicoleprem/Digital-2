

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 20 19:33:14 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    50                           	psect	text1_split_1,local,class=CODE,merge=1,delta=2
    51                           	dabs	1,0x7E,2
    52  0000                     
    53                           ; Version 2.20
    54                           ; Generated 12/02/2020 GMT
    55                           ; 
    56                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    57                           ; All rights reserved.
    58                           ; 
    59                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    60                           ; 
    61                           ; Redistribution and use in source and binary forms, with or without modification, are
    62                           ; permitted provided that the following conditions are met:
    63                           ; 
    64                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    65                           ;        conditions and the following disclaimer.
    66                           ; 
    67                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    68                           ;        of conditions and the following disclaimer in the documentation and/or other
    69                           ;        materials provided with the distribution.
    70                           ; 
    71                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    72                           ;        software without specific prior written permission.
    73                           ; 
    74                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    75                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    76                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    77                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    78                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    79                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    80                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    81                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    82                           ; 
    83                           ; 
    84                           ; Code-generator required, PIC16F887 Definitions
    85                           ; 
    86                           ; SFR Addresses
    87  0000                     	;# 
    88  0001                     	;# 
    89  0002                     	;# 
    90  0003                     	;# 
    91  0004                     	;# 
    92  0005                     	;# 
    93  0006                     	;# 
    94  0007                     	;# 
    95  0008                     	;# 
    96  0009                     	;# 
    97  000A                     	;# 
    98  000B                     	;# 
    99  000C                     	;# 
   100  000D                     	;# 
   101  000E                     	;# 
   102  000E                     	;# 
   103  000F                     	;# 
   104  0010                     	;# 
   105  0011                     	;# 
   106  0012                     	;# 
   107  0013                     	;# 
   108  0014                     	;# 
   109  0015                     	;# 
   110  0015                     	;# 
   111  0016                     	;# 
   112  0017                     	;# 
   113  0018                     	;# 
   114  0019                     	;# 
   115  001A                     	;# 
   116  001B                     	;# 
   117  001B                     	;# 
   118  001C                     	;# 
   119  001D                     	;# 
   120  001E                     	;# 
   121  001F                     	;# 
   122  0081                     	;# 
   123  0085                     	;# 
   124  0086                     	;# 
   125  0087                     	;# 
   126  0088                     	;# 
   127  0089                     	;# 
   128  008C                     	;# 
   129  008D                     	;# 
   130  008E                     	;# 
   131  008F                     	;# 
   132  0090                     	;# 
   133  0091                     	;# 
   134  0092                     	;# 
   135  0093                     	;# 
   136  0093                     	;# 
   137  0093                     	;# 
   138  0094                     	;# 
   139  0095                     	;# 
   140  0096                     	;# 
   141  0097                     	;# 
   142  0098                     	;# 
   143  0099                     	;# 
   144  009A                     	;# 
   145  009B                     	;# 
   146  009C                     	;# 
   147  009D                     	;# 
   148  009E                     	;# 
   149  009F                     	;# 
   150  0105                     	;# 
   151  0107                     	;# 
   152  0108                     	;# 
   153  0109                     	;# 
   154  010C                     	;# 
   155  010C                     	;# 
   156  010D                     	;# 
   157  010E                     	;# 
   158  010F                     	;# 
   159  0185                     	;# 
   160  0187                     	;# 
   161  0188                     	;# 
   162  0189                     	;# 
   163  018C                     	;# 
   164  018D                     	;# 
   165  0000                     	;# 
   166  0001                     	;# 
   167  0002                     	;# 
   168  0003                     	;# 
   169  0004                     	;# 
   170  0005                     	;# 
   171  0006                     	;# 
   172  0007                     	;# 
   173  0008                     	;# 
   174  0009                     	;# 
   175  000A                     	;# 
   176  000B                     	;# 
   177  000C                     	;# 
   178  000D                     	;# 
   179  000E                     	;# 
   180  000E                     	;# 
   181  000F                     	;# 
   182  0010                     	;# 
   183  0011                     	;# 
   184  0012                     	;# 
   185  0013                     	;# 
   186  0014                     	;# 
   187  0015                     	;# 
   188  0015                     	;# 
   189  0016                     	;# 
   190  0017                     	;# 
   191  0018                     	;# 
   192  0019                     	;# 
   193  001A                     	;# 
   194  001B                     	;# 
   195  001B                     	;# 
   196  001C                     	;# 
   197  001D                     	;# 
   198  001E                     	;# 
   199  001F                     	;# 
   200  0081                     	;# 
   201  0085                     	;# 
   202  0086                     	;# 
   203  0087                     	;# 
   204  0088                     	;# 
   205  0089                     	;# 
   206  008C                     	;# 
   207  008D                     	;# 
   208  008E                     	;# 
   209  008F                     	;# 
   210  0090                     	;# 
   211  0091                     	;# 
   212  0092                     	;# 
   213  0093                     	;# 
   214  0093                     	;# 
   215  0093                     	;# 
   216  0094                     	;# 
   217  0095                     	;# 
   218  0096                     	;# 
   219  0097                     	;# 
   220  0098                     	;# 
   221  0099                     	;# 
   222  009A                     	;# 
   223  009B                     	;# 
   224  009C                     	;# 
   225  009D                     	;# 
   226  009E                     	;# 
   227  009F                     	;# 
   228  0105                     	;# 
   229  0107                     	;# 
   230  0108                     	;# 
   231  0109                     	;# 
   232  010C                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  0185                     	;# 
   238  0187                     	;# 
   239  0188                     	;# 
   240  0189                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  001D                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  0081                     	;# 
   279  0085                     	;# 
   280  0086                     	;# 
   281  0087                     	;# 
   282  0088                     	;# 
   283  0089                     	;# 
   284  008C                     	;# 
   285  008D                     	;# 
   286  008E                     	;# 
   287  008F                     	;# 
   288  0090                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0093                     	;# 
   293  0093                     	;# 
   294  0094                     	;# 
   295  0095                     	;# 
   296  0096                     	;# 
   297  0097                     	;# 
   298  0098                     	;# 
   299  0099                     	;# 
   300  009A                     	;# 
   301  009B                     	;# 
   302  009C                     	;# 
   303  009D                     	;# 
   304  009E                     	;# 
   305  009F                     	;# 
   306  0105                     	;# 
   307  0107                     	;# 
   308  0108                     	;# 
   309  0109                     	;# 
   310  010C                     	;# 
   311  010C                     	;# 
   312  010D                     	;# 
   313  010E                     	;# 
   314  010F                     	;# 
   315  0185                     	;# 
   316  0187                     	;# 
   317  0188                     	;# 
   318  0189                     	;# 
   319  018C                     	;# 
   320  018D                     	;# 
   321  0000                     	;# 
   322  0001                     	;# 
   323  0002                     	;# 
   324  0003                     	;# 
   325  0004                     	;# 
   326  0005                     	;# 
   327  0006                     	;# 
   328  0007                     	;# 
   329  0008                     	;# 
   330  0009                     	;# 
   331  000A                     	;# 
   332  000B                     	;# 
   333  000C                     	;# 
   334  000D                     	;# 
   335  000E                     	;# 
   336  000E                     	;# 
   337  000F                     	;# 
   338  0010                     	;# 
   339  0011                     	;# 
   340  0012                     	;# 
   341  0013                     	;# 
   342  0014                     	;# 
   343  0015                     	;# 
   344  0015                     	;# 
   345  0016                     	;# 
   346  0017                     	;# 
   347  0018                     	;# 
   348  0019                     	;# 
   349  001A                     	;# 
   350  001B                     	;# 
   351  001B                     	;# 
   352  001C                     	;# 
   353  001D                     	;# 
   354  001E                     	;# 
   355  001F                     	;# 
   356  0081                     	;# 
   357  0085                     	;# 
   358  0086                     	;# 
   359  0087                     	;# 
   360  0088                     	;# 
   361  0089                     	;# 
   362  008C                     	;# 
   363  008D                     	;# 
   364  008E                     	;# 
   365  008F                     	;# 
   366  0090                     	;# 
   367  0091                     	;# 
   368  0092                     	;# 
   369  0093                     	;# 
   370  0093                     	;# 
   371  0093                     	;# 
   372  0094                     	;# 
   373  0095                     	;# 
   374  0096                     	;# 
   375  0097                     	;# 
   376  0098                     	;# 
   377  0099                     	;# 
   378  009A                     	;# 
   379  009B                     	;# 
   380  009C                     	;# 
   381  009D                     	;# 
   382  009E                     	;# 
   383  009F                     	;# 
   384  0105                     	;# 
   385  0107                     	;# 
   386  0108                     	;# 
   387  0109                     	;# 
   388  010C                     	;# 
   389  010C                     	;# 
   390  010D                     	;# 
   391  010E                     	;# 
   392  010F                     	;# 
   393  0185                     	;# 
   394  0187                     	;# 
   395  0188                     	;# 
   396  0189                     	;# 
   397  018C                     	;# 
   398  018D                     	;# 
   399  0000                     	;# 
   400  0001                     	;# 
   401  0002                     	;# 
   402  0003                     	;# 
   403  0004                     	;# 
   404  0005                     	;# 
   405  0006                     	;# 
   406  0007                     	;# 
   407  0008                     	;# 
   408  0009                     	;# 
   409  000A                     	;# 
   410  000B                     	;# 
   411  000C                     	;# 
   412  000D                     	;# 
   413  000E                     	;# 
   414  000E                     	;# 
   415  000F                     	;# 
   416  0010                     	;# 
   417  0011                     	;# 
   418  0012                     	;# 
   419  0013                     	;# 
   420  0014                     	;# 
   421  0015                     	;# 
   422  0015                     	;# 
   423  0016                     	;# 
   424  0017                     	;# 
   425  0018                     	;# 
   426  0019                     	;# 
   427  001A                     	;# 
   428  001B                     	;# 
   429  001B                     	;# 
   430  001C                     	;# 
   431  001D                     	;# 
   432  001E                     	;# 
   433  001F                     	;# 
   434  0081                     	;# 
   435  0085                     	;# 
   436  0086                     	;# 
   437  0087                     	;# 
   438  0088                     	;# 
   439  0089                     	;# 
   440  008C                     	;# 
   441  008D                     	;# 
   442  008E                     	;# 
   443  008F                     	;# 
   444  0090                     	;# 
   445  0091                     	;# 
   446  0092                     	;# 
   447  0093                     	;# 
   448  0093                     	;# 
   449  0093                     	;# 
   450  0094                     	;# 
   451  0095                     	;# 
   452  0096                     	;# 
   453  0097                     	;# 
   454  0098                     	;# 
   455  0099                     	;# 
   456  009A                     	;# 
   457  009B                     	;# 
   458  009C                     	;# 
   459  009D                     	;# 
   460  009E                     	;# 
   461  009F                     	;# 
   462  0105                     	;# 
   463  0107                     	;# 
   464  0108                     	;# 
   465  0109                     	;# 
   466  010C                     	;# 
   467  010C                     	;# 
   468  010D                     	;# 
   469  010E                     	;# 
   470  010F                     	;# 
   471  0185                     	;# 
   472  0187                     	;# 
   473  0188                     	;# 
   474  0189                     	;# 
   475  018C                     	;# 
   476  018D                     	;# 
   477                           
   478                           	psect	idataBANK0
   479  00C7                     __pidataBANK0:
   480                           
   481                           ;initializer for _banderaADC
   482  00C7  3401               	retlw	1
   483                           
   484                           	psect	strings
   485  0003                     __pstrings:
   486  0003                     stringtab:
   487  0003                     __stringtab:
   488                           
   489                           ;	String table - string pointers are 1 byte each
   490  0003  1BFF               	btfsc	btemp+1,7
   491  0004  280D               	ljmp	stringcode
   492  0005  1383               	bcf	3,7
   493  0006  187F               	btfsc	btemp+1,0
   494  0007  1783               	bsf	3,7
   495  0008  0800               	movf	0,w
   496  0009  0A84               	incf	4,f
   497  000A  1903               	skipnz
   498  000B  0AFF               	incf	btemp+1,f
   499  000C  0008               	return
   500  000D                     stringcode:
   501  000D                     stringdir:
   502  000D  3000               	movlw	high stringdir
   503  000E  008A               	movwf	10
   504  000F  0804               	movf	4,w
   505  0010  0A84               	incf	4,f
   506  0011  0782               	addwf	2,f
   507  0012                     __stringbase:
   508  0012  3400               	retlw	0
   509  0013                     __end_of__stringtab:
   510  0013                     __powers_:
   511  0013  3400               	retlw	0
   512  0014  3400               	retlw	0
   513  0015  3480               	retlw	128
   514  0016  343F               	retlw	63
   515  0017  3400               	retlw	0
   516  0018  3400               	retlw	0
   517  0019  3420               	retlw	32
   518  001A  3441               	retlw	65
   519  001B  3400               	retlw	0
   520  001C  3400               	retlw	0
   521  001D  34C8               	retlw	200
   522  001E  3442               	retlw	66
   523  001F  3400               	retlw	0
   524  0020  3400               	retlw	0
   525  0021  347A               	retlw	122
   526  0022  3444               	retlw	68
   527  0023  3400               	retlw	0
   528  0024  3440               	retlw	64
   529  0025  341C               	retlw	28
   530  0026  3446               	retlw	70
   531  0027  3400               	retlw	0
   532  0028  3450               	retlw	80
   533  0029  34C3               	retlw	195
   534  002A  3447               	retlw	71
   535  002B  3400               	retlw	0
   536  002C  3424               	retlw	36
   537  002D  3474               	retlw	116
   538  002E  3449               	retlw	73
   539  002F  3480               	retlw	128
   540  0030  3496               	retlw	150
   541  0031  3418               	retlw	24
   542  0032  344B               	retlw	75
   543  0033  3420               	retlw	32
   544  0034  34BC               	retlw	188
   545  0035  34BE               	retlw	190
   546  0036  344C               	retlw	76
   547  0037  3428               	retlw	40
   548  0038  346B               	retlw	107
   549  0039  346E               	retlw	110
   550  003A  344E               	retlw	78
   551  003B  34F9               	retlw	249
   552  003C  3402               	retlw	2
   553  003D  3415               	retlw	21
   554  003E  3450               	retlw	80
   555  003F  34EC               	retlw	236
   556  0040  3478               	retlw	120
   557  0041  34AD               	retlw	173
   558  0042  3460               	retlw	96
   559  0043  34CA               	retlw	202
   560  0044  34F2               	retlw	242
   561  0045  3449               	retlw	73
   562  0046  3471               	retlw	113
   563  0047                     __end_of__powers_:
   564  0047                     __npowers_:
   565  0047  3400               	retlw	0
   566  0048  3400               	retlw	0
   567  0049  3480               	retlw	128
   568  004A  343F               	retlw	63
   569  004B  34CD               	retlw	205
   570  004C  34CC               	retlw	204
   571  004D  34CC               	retlw	204
   572  004E  343D               	retlw	61
   573  004F  340A               	retlw	10
   574  0050  34D7               	retlw	215
   575  0051  3423               	retlw	35
   576  0052  343C               	retlw	60
   577  0053  346F               	retlw	111
   578  0054  3412               	retlw	18
   579  0055  3483               	retlw	131
   580  0056  343A               	retlw	58
   581  0057  3417               	retlw	23
   582  0058  34B7               	retlw	183
   583  0059  34D1               	retlw	209
   584  005A  3438               	retlw	56
   585  005B  34AC               	retlw	172
   586  005C  34C5               	retlw	197
   587  005D  3427               	retlw	39
   588  005E  3437               	retlw	55
   589  005F  34BD               	retlw	189
   590  0060  3437               	retlw	55
   591  0061  3486               	retlw	134
   592  0062  3435               	retlw	53
   593  0063  3495               	retlw	149
   594  0064  34BF               	retlw	191
   595  0065  34D6               	retlw	214
   596  0066  3433               	retlw	51
   597  0067  3477               	retlw	119
   598  0068  34CC               	retlw	204
   599  0069  342B               	retlw	43
   600  006A  3432               	retlw	50
   601  006B  345F               	retlw	95
   602  006C  3470               	retlw	112
   603  006D  3489               	retlw	137
   604  006E  3430               	retlw	48
   605  006F  34FF               	retlw	255
   606  0070  34E6               	retlw	230
   607  0071  34DB               	retlw	219
   608  0072  342E               	retlw	46
   609  0073  3408               	retlw	8
   610  0074  34E5               	retlw	229
   611  0075  343C               	retlw	60
   612  0076  341E               	retlw	30
   613  0077  3460               	retlw	96
   614  0078  3442               	retlw	66
   615  0079  34A2               	retlw	162
   616  007A  340D               	retlw	13
   617  007B                     __end_of__npowers_:
   618  007B                     _dpowers:
   619  007B  3401               	retlw	1
   620  007C  3400               	retlw	0
   621  007D  3400               	retlw	0
   622  007E  3400               	retlw	0
   623  007F  340A               	retlw	10
   624  0080  3400               	retlw	0
   625  0081  3400               	retlw	0
   626  0082  3400               	retlw	0
   627  0083  3464               	retlw	100
   628  0084  3400               	retlw	0
   629  0085  3400               	retlw	0
   630  0086  3400               	retlw	0
   631  0087  34E8               	retlw	232
   632  0088  3403               	retlw	3
   633  0089  3400               	retlw	0
   634  008A  3400               	retlw	0
   635  008B  3410               	retlw	16
   636  008C  3427               	retlw	39
   637  008D  3400               	retlw	0
   638  008E  3400               	retlw	0
   639  008F  34A0               	retlw	160
   640  0090  3486               	retlw	134
   641  0091  3401               	retlw	1
   642  0092  3400               	retlw	0
   643  0093  3440               	retlw	64
   644  0094  3442               	retlw	66
   645  0095  340F               	retlw	15
   646  0096  3400               	retlw	0
   647  0097  3480               	retlw	128
   648  0098  3496               	retlw	150
   649  0099  3498               	retlw	152
   650  009A  3400               	retlw	0
   651  009B  3400               	retlw	0
   652  009C  34E1               	retlw	225
   653  009D  34F5               	retlw	245
   654  009E  3405               	retlw	5
   655  009F  3400               	retlw	0
   656  00A0  34CA               	retlw	202
   657  00A1  349A               	retlw	154
   658  00A2  343B               	retlw	59
   659  00A3                     __end_of_dpowers:
   660  0014                     _SSPCON	set	20
   661  0019                     _TXREG	set	25
   662  000B                     _INTCONbits	set	11
   663  0018                     _RCSTAbits	set	24
   664  0013                     _SSPBUF	set	19
   665  0007                     _PORTCbits	set	7
   666  0005                     _PORTAbits	set	5
   667  0009                     _PORTE	set	9
   668  0008                     _PORTD	set	8
   669  0007                     _PORTC	set	7
   670  0009                     _PORTEbits	set	9
   671  0006                     _PORTB	set	6
   672  0094                     _SSPSTATbits	set	148
   673  0094                     _SSPSTAT	set	148
   674  0099                     _SPBRG	set	153
   675  008C                     _PIE1bits	set	140
   676  0098                     _TXSTAbits	set	152
   677  0086                     _TRISB	set	134
   678  0089                     _TRISE	set	137
   679  0087                     _TRISC	set	135
   680  0088                     _TRISD	set	136
   681  043B                     _TRISC3	set	1083
   682  043D                     _TRISC5	set	1085
   683  04C1                     _TRMT	set	1217
   684  0187                     _BAUDCTLbits	set	391
   685  0188                     _ANSEL	set	392
   686  00A3                     STR_1:
   687  00A3  3453               	retlw	83	;'S'
   688  00A4  3431               	retlw	49	;'1'
   689  00A5  343A               	retlw	58	;':'
   690  00A6  3420               	retlw	32	;' '
   691  00A7  3420               	retlw	32	;' '
   692  00A8  3420               	retlw	32	;' '
   693  00A9  3453               	retlw	83	;'S'
   694  00AA  3432               	retlw	50	;'2'
   695  00AB  343A               	retlw	58	;':'
   696  00AC  3420               	retlw	32	;' '
   697  00AD  3420               	retlw	32	;' '
   698  00AE  3420               	retlw	32	;' '
   699  00AF  3420               	retlw	32	;' '
   700  00B0  3453               	retlw	83	;'S'
   701  00B1  3433               	retlw	51	;'3'
   702  00B2  343A               	retlw	58	;':'
   703  00B3  3400               	retlw	0
   704  00B4                     STR_4:
   705  00B4  3425               	retlw	37	;'%'
   706  00B5  3433               	retlw	51	;'3'
   707  00B6  342E               	retlw	46	;'.'
   708  00B7  3430               	retlw	48	;'0'
   709  00B8  3466               	retlw	102	;'f'
   710  00B9  3443               	retlw	67	;'C'
   711  00BA  3400               	retlw	0
   712  00BB                     STR_2:
   713  00BB  3425               	retlw	37	;'%'
   714  00BC  3433               	retlw	51	;'3'
   715  00BD  342E               	retlw	46	;'.'
   716  00BE  3432               	retlw	50	;'2'
   717  00BF  3466               	retlw	102	;'f'
   718  00C0  3456               	retlw	86	;'V'
   719  00C1  3400               	retlw	0
   720  00C2                     STR_3:
   721  00C2  3425               	retlw	37	;'%'
   722  00C3  3464               	retlw	100	;'d'
   723  00C4  3400               	retlw	0
   724                           
   725                           	psect	cinit
   726  07E3                     start_initialization:	
   727                           ; #config settings
   728                           
   729  07E3                     __initialization:
   730                           
   731                           ; Initialize objects allocated to BANK0
   732  07E3  120A  118A  20C7  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   733  07E8  00EF               	movwf	__pdataBANK0& (0+127)
   734                           
   735                           ; Clear objects allocated to BANK3
   736  07E9  1783               	bsf	3,7	;select IRP bank2
   737  07EA  3090               	movlw	low __pbssBANK3
   738  07EB  0084               	movwf	4
   739  07EC  30B8               	movlw	low (__pbssBANK3+40)
   740  07ED  160A  158A  216B  120A  118A  	fcall	clear_ram0
   741                           
   742                           ; Clear objects allocated to BANK1
   743  07F2  1383               	bcf	3,7	;select IRP bank0
   744  07F3  30CA               	movlw	low __pbssBANK1
   745  07F4  0084               	movwf	4
   746  07F5  30EE               	movlw	low (__pbssBANK1+36)
   747  07F6  160A  158A  216B  120A  118A  	fcall	clear_ram0
   748                           
   749                           ; Clear objects allocated to BANK0
   750  07FB  01EE               	clrf	__pbssBANK0& (0+127)
   751  07FC                     end_of_initialization:	
   752                           ;End of C runtime variable initialization code
   753                           
   754  07FC                     __end_of__initialization:
   755  07FC  0183               	clrf	3
   756  07FD  160A  118A  289C   	ljmp	_main	;jump to C main() function
   757                           
   758                           	psect	bssBANK0
   759  006E                     __pbssBANK0:
   760  006E                     _mensaje:
   761  006E                     	ds	1
   762                           
   763                           	psect	dataBANK0
   764  006F                     __pdataBANK0:
   765  006F                     _banderaADC:
   766  006F                     	ds	1
   767                           
   768                           	psect	bssBANK1
   769  00CA                     __pbssBANK1:
   770  00CA                     _n:
   771  00CA                     	ds	4
   772  00CE                     _p:
   773  00CE                     	ds	4
   774  00D2                     _x:
   775  00D2                     	ds	4
   776  00D6                     _esclavo1:
   777  00D6                     	ds	1
   778  00D7                     _adc:
   779  00D7                     	ds	1
   780  00D8                     _s:
   781  00D8                     	ds	20
   782  00EC                     _count:
   783  00EC                     	ds	1
   784  00ED                     _lmm:
   785  00ED                     	ds	1
   786                           
   787                           	psect	bssBANK3
   788  0190                     __pbssBANK3:
   789  0190                     _c:
   790  0190                     	ds	20
   791  01A4                     _l:
   792  01A4                     	ds	20
   793                           
   794                           	psect	clrtext
   795  196B                     clear_ram0:	
   796                           ;	Called with FSR containing the base address, and
   797                           ;	W with the last address+1
   798                           
   799  196B  0064               	clrwdt	;clear the watchdog before getting into this loop
   800  196C                     clrloop0:
   801  196C  0180               	clrf	0	;clear RAM location pointed to by FSR
   802  196D  0A84               	incf	4,f	;increment pointer
   803  196E  0604               	xorwf	4,w	;XOR with final address
   804  196F  1903               	btfsc	3,2	;have we reached the end yet?
   805  1970  3400               	retlw	0	;all done for this memory range, return
   806  1971  0604               	xorwf	4,w	;XOR again to restore value
   807  1972  296C               	goto	clrloop0	;do the next byte
   808                           
   809                           	psect	cstackBANK1
   810  00A0                     __pcstackBANK1:
   811  00A0                     ?_sprintf:
   812  00A0                     sprintf@sp:	
   813                           ; 2 bytes @ 0x0
   814                           
   815                           
   816                           ; 2 bytes @ 0x0
   817  00A0                     	ds	2
   818  00A2                     sprintf@f:
   819                           
   820                           ; 1 bytes @ 0x2
   821  00A2                     	ds	5
   822  00A7                     ??_sprintf:
   823                           
   824                           ; 1 bytes @ 0x7
   825  00A7                     	ds	5
   826  00AC                     _sprintf$1218:
   827                           
   828                           ; 4 bytes @ 0xC
   829  00AC                     	ds	4
   830  00B0                     sprintf@ap:
   831                           
   832                           ; 1 bytes @ 0x10
   833  00B0                     	ds	1
   834  00B1                     sprintf@flag:
   835                           
   836                           ; 2 bytes @ 0x11
   837  00B1                     	ds	2
   838  00B3                     sprintf@width:
   839                           
   840                           ; 2 bytes @ 0x13
   841  00B3                     	ds	2
   842  00B5                     sprintf@tmpval:
   843                           
   844                           ; 4 bytes @ 0x15
   845  00B5                     	ds	4
   846  00B9                     sprintf@val:
   847                           
   848                           ; 4 bytes @ 0x19
   849  00B9                     	ds	4
   850  00BD                     sprintf@eexp:
   851                           
   852                           ; 2 bytes @ 0x1D
   853  00BD                     	ds	2
   854  00BF                     sprintf@fval:
   855                           
   856                           ; 4 bytes @ 0x1F
   857  00BF                     	ds	4
   858  00C3                     sprintf@prec:
   859                           
   860                           ; 2 bytes @ 0x23
   861  00C3                     	ds	2
   862  00C5                     sprintf@c:
   863                           
   864                           ; 1 bytes @ 0x25
   865  00C5                     	ds	1
   866  00C6                     ??_main:
   867                           
   868                           ; 1 bytes @ 0x26
   869  00C6                     	ds	4
   870                           
   871                           	psect	cstackCOMMON
   872  0070                     __pcstackCOMMON:
   873  0070                     ?_isdigit:
   874  0070                     ?___fleq:	
   875                           ; 1 bit 
   876                           
   877  0070                     ?___flge:	
   878                           ; 1 bit 
   879                           
   880  0070                     ?_spiInit:	
   881                           ; 1 bit 
   882                           
   883  0070                     ?_spiRead:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  0070                     ??_spiRead:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0070                     ??_isdigit:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0070                     ?_Lcd_Port:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0070                     ??_Lcd_Port:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0070                     ?_Lcd_Cmd:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0070                     ?_Lcd_Clear:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  0070                     ?_Lcd_Init:	
   905                           ; 1 bytes @ 0x0
   906                           
   907  0070                     ?_Lcd_Write_Char:	
   908                           ; 1 bytes @ 0x0
   909                           
   910  0070                     ?_setup:	
   911                           ; 1 bytes @ 0x0
   912                           
   913  0070                     ??_setup:	
   914                           ; 1 bytes @ 0x0
   915                           
   916  0070                     ?_main:	
   917                           ; 1 bytes @ 0x0
   918                           
   919  0070                     ?_spiReceiveWait:	
   920                           ; 1 bytes @ 0x0
   921                           
   922  0070                     ??_spiReceiveWait:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0070                     ?__Umul8_16:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0070                     ?___wmul:	
   929                           ; 2 bytes @ 0x0
   930                           
   931  0070                     ?___awmod:	
   932                           ; 2 bytes @ 0x0
   933                           
   934  0070                     ?___lwmod:	
   935                           ; 2 bytes @ 0x0
   936                           
   937  0070                     ?__tdiv_to_l_:	
   938                           ; 2 bytes @ 0x0
   939                           
   940  0070                     ?__div_to_l_:	
   941                           ; 4 bytes @ 0x0
   942                           
   943  0070                     ?___lldiv:	
   944                           ; 4 bytes @ 0x0
   945                           
   946  0070                     ?___flneg:	
   947                           ; 4 bytes @ 0x0
   948                           
   949  0070                     ?___xxtofl:	
   950                           ; 4 bytes @ 0x0
   951                           
   952  0070                     Lcd_Port@a:	
   953                           ; 4 bytes @ 0x0
   954                           
   955  0070                     spiInit@sDataSample:	
   956                           ; 1 bytes @ 0x0
   957                           
   958  0070                     __Umul8_16@multiplicand:	
   959                           ; 1 bytes @ 0x0
   960                           
   961  0070                     _isdigit$1016:	
   962                           ; 1 bytes @ 0x0
   963                           
   964  0070                     ___wmul@multiplier:	
   965                           ; 1 bytes @ 0x0
   966                           
   967  0070                     ___awmod@divisor:	
   968                           ; 2 bytes @ 0x0
   969                           
   970  0070                     ___lwmod@divisor:	
   971                           ; 2 bytes @ 0x0
   972                           
   973  0070                     ___lldiv@divisor:	
   974                           ; 2 bytes @ 0x0
   975                           
   976  0070                     __div_to_l_@f1:	
   977                           ; 4 bytes @ 0x0
   978                           
   979  0070                     ___fleq@ff1:	
   980                           ; 4 bytes @ 0x0
   981                           
   982  0070                     ___flge@ff1:	
   983                           ; 4 bytes @ 0x0
   984                           
   985  0070                     ___flneg@f1:	
   986                           ; 4 bytes @ 0x0
   987                           
   988  0070                     __tdiv_to_l_@f1:	
   989                           ; 4 bytes @ 0x0
   990                           
   991  0070                     ___xxtofl@val:	
   992                           ; 4 bytes @ 0x0
   993                           
   994                           
   995                           ; 4 bytes @ 0x0
   996  0070                     	ds	1
   997  0071                     ??_Lcd_Cmd:
   998  0071                     ??_Lcd_Write_Char:	
   999                           ; 1 bytes @ 0x1
  1000                           
  1001  0071                     spiInit@sClockIdle:	
  1002                           ; 1 bytes @ 0x1
  1003                           
  1004  0071                     isdigit@c:	
  1005                           ; 1 bytes @ 0x1
  1006                           
  1007                           
  1008                           ; 1 bytes @ 0x1
  1009  0071                     	ds	1
  1010  0072                     ??__Umul8_16:
  1011  0072                     Lcd_Write_Char@a:	
  1012                           ; 1 bytes @ 0x2
  1013                           
  1014  0072                     spiInit@sTransmitEdge:	
  1015                           ; 1 bytes @ 0x2
  1016                           
  1017  0072                     ___wmul@multiplicand:	
  1018                           ; 1 bytes @ 0x2
  1019                           
  1020  0072                     ___awmod@dividend:	
  1021                           ; 2 bytes @ 0x2
  1022                           
  1023  0072                     ___lwmod@dividend:	
  1024                           ; 2 bytes @ 0x2
  1025                           
  1026                           
  1027                           ; 2 bytes @ 0x2
  1028  0072                     	ds	1
  1029  0073                     ??_spiInit:
  1030  0073                     ?_Lcd_Write_String:	
  1031                           ; 1 bytes @ 0x3
  1032                           
  1033  0073                     Lcd_Cmd@a:	
  1034                           ; 1 bytes @ 0x3
  1035                           
  1036  0073                     spiInit@sType:	
  1037                           ; 1 bytes @ 0x3
  1038                           
  1039  0073                     Lcd_Write_String@a:	
  1040                           ; 1 bytes @ 0x3
  1041                           
  1042                           
  1043                           ; 2 bytes @ 0x3
  1044  0073                     	ds	1
  1045  0074                     ??_Lcd_Clear:
  1046  0074                     ?_Lcd_Set_Cursor:	
  1047                           ; 1 bytes @ 0x4
  1048                           
  1049  0074                     ??_Lcd_Init:	
  1050                           ; 1 bytes @ 0x4
  1051                           
  1052  0074                     ??___wmul:	
  1053                           ; 1 bytes @ 0x4
  1054                           
  1055  0074                     ??___awmod:	
  1056                           ; 1 bytes @ 0x4
  1057                           
  1058  0074                     ??___flneg:	
  1059                           ; 1 bytes @ 0x4
  1060                           
  1061  0074                     ??___lwmod:	
  1062                           ; 1 bytes @ 0x4
  1063                           
  1064  0074                     ??___xxtofl:	
  1065                           ; 1 bytes @ 0x4
  1066                           
  1067  0074                     Lcd_Set_Cursor@b:	
  1068                           ; 1 bytes @ 0x4
  1069                           
  1070  0074                     ___wmul@product:	
  1071                           ; 1 bytes @ 0x4
  1072                           
  1073  0074                     __Umul8_16@product:	
  1074                           ; 2 bytes @ 0x4
  1075                           
  1076  0074                     ___lldiv@dividend:	
  1077                           ; 2 bytes @ 0x4
  1078                           
  1079  0074                     __div_to_l_@f2:	
  1080                           ; 4 bytes @ 0x4
  1081                           
  1082  0074                     ___fleq@ff2:	
  1083                           ; 4 bytes @ 0x4
  1084                           
  1085  0074                     ___flge@ff2:	
  1086                           ; 4 bytes @ 0x4
  1087                           
  1088  0074                     __tdiv_to_l_@f2:	
  1089                           ; 4 bytes @ 0x4
  1090                           
  1091                           
  1092                           ; 4 bytes @ 0x4
  1093  0074                     	ds	1
  1094  0075                     ??_Lcd_Set_Cursor:
  1095  0075                     ??_Lcd_Write_String:	
  1096                           ; 1 bytes @ 0x5
  1097                           
  1098  0075                     ___awmod@counter:	
  1099                           ; 1 bytes @ 0x5
  1100                           
  1101  0075                     ___lwmod@counter:	
  1102                           ; 1 bytes @ 0x5
  1103                           
  1104                           
  1105                           ; 1 bytes @ 0x5
  1106  0075                     	ds	1
  1107  0076                     ?___lwdiv:
  1108  0076                     Lcd_Set_Cursor@a:	
  1109                           ; 2 bytes @ 0x6
  1110                           
  1111  0076                     ___awmod@sign:	
  1112                           ; 1 bytes @ 0x6
  1113                           
  1114  0076                     ___lwdiv@divisor:	
  1115                           ; 1 bytes @ 0x6
  1116                           
  1117  0076                     __Umul8_16@word_mpld:	
  1118                           ; 2 bytes @ 0x6
  1119                           
  1120                           
  1121                           ; 2 bytes @ 0x6
  1122  0076                     	ds	1
  1123  0077                     ?___awdiv:
  1124  0077                     Lcd_Set_Cursor@temp:	
  1125                           ; 2 bytes @ 0x7
  1126                           
  1127  0077                     ___awdiv@divisor:	
  1128                           ; 1 bytes @ 0x7
  1129                           
  1130                           
  1131                           ; 2 bytes @ 0x7
  1132  0077                     	ds	1
  1133  0078                     ??__tdiv_to_l_:
  1134  0078                     ??__div_to_l_:	
  1135                           ; 1 bytes @ 0x8
  1136                           
  1137  0078                     ??___lldiv:	
  1138                           ; 1 bytes @ 0x8
  1139                           
  1140  0078                     ??___fleq:	
  1141                           ; 1 bytes @ 0x8
  1142                           
  1143  0078                     ??___flge:	
  1144                           ; 1 bytes @ 0x8
  1145                           
  1146  0078                     __Umul8_16@multiplier:	
  1147                           ; 1 bytes @ 0x8
  1148                           
  1149  0078                     ___xxtofl@sign:	
  1150                           ; 1 bytes @ 0x8
  1151                           
  1152  0078                     Lcd_Write_String@i:	
  1153                           ; 1 bytes @ 0x8
  1154                           
  1155  0078                     ___lwdiv@dividend:	
  1156                           ; 2 bytes @ 0x8
  1157                           
  1158                           
  1159                           ; 2 bytes @ 0x8
  1160  0078                     	ds	1
  1161  0079                     ___xxtofl@exp:
  1162  0079                     ___awdiv@dividend:	
  1163                           ; 1 bytes @ 0x9
  1164                           
  1165  0079                     ___lldiv@quotient:	
  1166                           ; 2 bytes @ 0x9
  1167                           
  1168                           
  1169                           ; 4 bytes @ 0x9
  1170  0079                     	ds	1
  1171  007A                     ??___lwdiv:
  1172  007A                     ___xxtofl@arg:	
  1173                           ; 1 bytes @ 0xA
  1174                           
  1175                           
  1176                           ; 4 bytes @ 0xA
  1177  007A                     	ds	1
  1178  007B                     ??___awdiv:
  1179  007B                     ___lwdiv@quotient:	
  1180                           ; 1 bytes @ 0xB
  1181                           
  1182                           
  1183                           ; 2 bytes @ 0xB
  1184  007B                     	ds	2
  1185  007D                     ___lldiv@counter:
  1186  007D                     ___lwdiv@counter:	
  1187                           ; 1 bytes @ 0xD
  1188                           
  1189                           
  1190                           ; 1 bytes @ 0xD
  1191  007D                     	ds	1
  1192  007E                     ??___flsub:
  1193                           
  1194                           	psect	cstackBANK0
  1195  0020                     __pcstackBANK0:	
  1196                           ; 1 bytes @ 0xE
  1197                           
  1198  0020                     ?___llmod:
  1199  0020                     ___awdiv@counter:	
  1200                           ; 4 bytes @ 0x0
  1201                           
  1202  0020                     __div_to_l_@quot:	
  1203                           ; 1 bytes @ 0x0
  1204                           
  1205  0020                     __tdiv_to_l_@quot:	
  1206                           ; 4 bytes @ 0x0
  1207                           
  1208  0020                     ___llmod@divisor:	
  1209                           ; 4 bytes @ 0x0
  1210                           
  1211                           
  1212                           ; 4 bytes @ 0x0
  1213  0020                     	ds	1
  1214  0021                     ___awdiv@sign:
  1215                           
  1216                           ; 1 bytes @ 0x1
  1217  0021                     	ds	1
  1218  0022                     ___awdiv@quotient:
  1219                           
  1220                           ; 2 bytes @ 0x2
  1221  0022                     	ds	2
  1222  0024                     ?___flmul:
  1223  0024                     __div_to_l_@cntr:	
  1224                           ; 4 bytes @ 0x4
  1225                           
  1226  0024                     __tdiv_to_l_@cntr:	
  1227                           ; 1 bytes @ 0x4
  1228                           
  1229  0024                     ___llmod@dividend:	
  1230                           ; 1 bytes @ 0x4
  1231                           
  1232  0024                     ___flmul@b:	
  1233                           ; 4 bytes @ 0x4
  1234                           
  1235                           
  1236                           ; 4 bytes @ 0x4
  1237  0024                     	ds	1
  1238  0025                     __div_to_l_@exp1:
  1239  0025                     __tdiv_to_l_@exp1:	
  1240                           ; 1 bytes @ 0x5
  1241                           
  1242                           
  1243                           ; 1 bytes @ 0x5
  1244  0025                     	ds	3
  1245  0028                     ??___llmod:
  1246  0028                     ___flmul@a:	
  1247                           ; 1 bytes @ 0x8
  1248                           
  1249                           
  1250                           ; 4 bytes @ 0x8
  1251  0028                     	ds	1
  1252  0029                     ___llmod@counter:
  1253                           
  1254                           ; 1 bytes @ 0x9
  1255  0029                     	ds	3
  1256  002C                     ??___flmul:
  1257                           
  1258                           ; 1 bytes @ 0xC
  1259  002C                     	ds	5
  1260  0031                     ___flmul@sign:
  1261                           
  1262                           ; 1 bytes @ 0x11
  1263  0031                     	ds	1
  1264  0032                     ___flmul@grs:
  1265                           
  1266                           ; 4 bytes @ 0x12
  1267  0032                     	ds	4
  1268  0036                     ___flmul@aexp:
  1269                           
  1270                           ; 1 bytes @ 0x16
  1271  0036                     	ds	1
  1272  0037                     ___flmul@bexp:
  1273                           
  1274                           ; 1 bytes @ 0x17
  1275  0037                     	ds	1
  1276  0038                     ___flmul@prod:
  1277                           
  1278                           ; 4 bytes @ 0x18
  1279  0038                     	ds	4
  1280  003C                     ___flmul@temp:
  1281                           
  1282                           ; 2 bytes @ 0x1C
  1283  003C                     	ds	2
  1284  003E                     ?_fround:
  1285  003E                     ?_scale:	
  1286                           ; 4 bytes @ 0x1E
  1287                           
  1288                           
  1289                           ; 4 bytes @ 0x1E
  1290  003E                     	ds	4
  1291  0042                     ??_fround:
  1292  0042                     ??_scale:	
  1293                           ; 1 bytes @ 0x22
  1294                           
  1295                           
  1296                           ; 1 bytes @ 0x22
  1297  0042                     	ds	7
  1298  0049                     _fround$1216:
  1299                           
  1300                           ; 4 bytes @ 0x29
  1301  0049                     	ds	3
  1302  004C                     _scale$1217:
  1303                           
  1304                           ; 4 bytes @ 0x2C
  1305  004C                     	ds	1
  1306  004D                     _fround$1215:
  1307                           
  1308                           ; 4 bytes @ 0x2D
  1309  004D                     	ds	3
  1310  0050                     scale@scl:
  1311                           
  1312                           ; 1 bytes @ 0x30
  1313  0050                     	ds	1
  1314  0051                     ?___fltol:
  1315  0051                     fround@prec:	
  1316                           ; 4 bytes @ 0x31
  1317                           
  1318  0051                     ___fltol@f1:	
  1319                           ; 1 bytes @ 0x31
  1320                           
  1321                           
  1322                           ; 4 bytes @ 0x31
  1323  0051                     	ds	1
  1324  0052                     ?___fladd:
  1325  0052                     ___fladd@b:	
  1326                           ; 4 bytes @ 0x32
  1327                           
  1328                           
  1329                           ; 4 bytes @ 0x32
  1330  0052                     	ds	3
  1331  0055                     ??___fltol:
  1332                           
  1333                           ; 1 bytes @ 0x35
  1334  0055                     	ds	1
  1335  0056                     ___fladd@a:
  1336                           
  1337                           ; 4 bytes @ 0x36
  1338  0056                     	ds	4
  1339  005A                     ??___fladd:
  1340  005A                     ___fltol@sign1:	
  1341                           ; 1 bytes @ 0x3A
  1342                           
  1343                           
  1344                           ; 1 bytes @ 0x3A
  1345  005A                     	ds	1
  1346  005B                     ___fltol@exp1:
  1347                           
  1348                           ; 1 bytes @ 0x3B
  1349  005B                     	ds	7
  1350  0062                     ___fladd@signs:
  1351                           
  1352                           ; 1 bytes @ 0x42
  1353  0062                     	ds	1
  1354  0063                     ___fladd@aexp:
  1355                           
  1356                           ; 1 bytes @ 0x43
  1357  0063                     	ds	1
  1358  0064                     ___fladd@bexp:
  1359                           
  1360                           ; 1 bytes @ 0x44
  1361  0064                     	ds	1
  1362  0065                     ___fladd@grs:
  1363                           
  1364                           ; 1 bytes @ 0x45
  1365  0065                     	ds	1
  1366  0066                     ?___flsub:
  1367  0066                     ___flsub@a:	
  1368                           ; 4 bytes @ 0x46
  1369                           
  1370                           
  1371                           ; 4 bytes @ 0x46
  1372  0066                     	ds	4
  1373  006A                     ___flsub@b:
  1374                           
  1375                           ; 4 bytes @ 0x4A
  1376  006A                     	ds	4
  1377                           
  1378                           	psect	maintext
  1379  109C                     __pmaintext:	
  1380 ;;
  1381 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1382 ;;
  1383 ;; *************** function _main *****************
  1384 ;; Defined at:
  1385 ;;		line 83 in file "main.c"
  1386 ;; Parameters:    Size  Location     Type
  1387 ;;		None
  1388 ;; Auto vars:     Size  Location     Type
  1389 ;;		None
  1390 ;; Return value:  Size  Location     Type
  1391 ;;                  1    wreg      void 
  1392 ;; Registers used:
  1393 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1394 ;; Tracked objects:
  1395 ;;		On entry : B00/0
  1396 ;;		On exit  : 0/0
  1397 ;;		Unchanged: 0/0
  1398 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1399 ;;      Params:         0       0       0       0       0
  1400 ;;      Locals:         0       0       0       0       0
  1401 ;;      Temps:          0       0       4       0       0
  1402 ;;      Totals:         0       0       4       0       0
  1403 ;;Total ram usage:        4 bytes
  1404 ;; Hardware stack levels required when called:    4
  1405 ;; This function calls:
  1406 ;;		_Lcd_Clear
  1407 ;;		_Lcd_Init
  1408 ;;		_Lcd_Set_Cursor
  1409 ;;		_Lcd_Write_String
  1410 ;;		___flmul
  1411 ;;		___xxtofl
  1412 ;;		_setup
  1413 ;;		_spiInit
  1414 ;;		_spiRead
  1415 ;;		_sprintf
  1416 ;; This function is called by:
  1417 ;;		Startup code after reset
  1418 ;; This function uses a non-reentrant model
  1419 ;;
  1420                           
  1421                           
  1422                           ;psect for function _main
  1423  109C                     _main:
  1424  109C                     l3550:	
  1425                           ;incstack = 0
  1426                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1427                           
  1428                           
  1429                           ;main.c: 86:     setup();
  1430  109C  160A  158A  218E  160A  118A  	fcall	_setup
  1431                           
  1432                           ;main.c: 89:     Lcd_Init();
  1433  10A1  160A  158A  226F  160A  118A  	fcall	_Lcd_Init
  1434                           
  1435                           ;main.c: 90:     Lcd_Clear();
  1436  10A6  120A  118A  20C8  160A  118A  	fcall	_Lcd_Clear
  1437                           
  1438                           ;main.c: 92:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
  1439  10AB  01F0               	clrf	spiInit@sDataSample
  1440  10AC  01F1               	clrf	spiInit@sClockIdle
  1441  10AD  01F2               	clrf	spiInit@sTransmitEdge
  1442  10AE  3020               	movlw	32
  1443  10AF  160A  158A  21A2  160A  118A  	fcall	_spiInit
  1444  10B4                     l105:	
  1445                           ;main.c: 93:     while (1) {
  1446                           
  1447                           
  1448                           ;main.c: 97:         Lcd_Set_Cursor(1, 1);
  1449  10B4  01F4               	clrf	Lcd_Set_Cursor@b
  1450  10B5  0AF4               	incf	Lcd_Set_Cursor@b,f
  1451  10B6  3001               	movlw	1
  1452  10B7  160A  158A  21ED  160A  118A  	fcall	_Lcd_Set_Cursor
  1453  10BC                     l3552:
  1454                           
  1455                           ;main.c: 98:         Lcd_Write_String("S1:   S2:    S3:");
  1456  10BC  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1457  10BD  00F3               	movwf	Lcd_Write_String@a
  1458  10BE  3080               	movlw	128
  1459  10BF  00F4               	movwf	Lcd_Write_String@a+1
  1460  10C0  160A  158A  22B0  160A  118A  	fcall	_Lcd_Write_String
  1461  10C5                     l3554:
  1462                           
  1463                           ;main.c: 99:         x = adc * 0.0195;
  1464  10C5  303C               	movlw	60
  1465  10C6  1283               	bcf	3,5	;RP0=0, select bank0
  1466  10C7  1303               	bcf	3,6	;RP1=0, select bank0
  1467  10C8  00A7               	movwf	___flmul@b+3
  1468  10C9  309F               	movlw	159
  1469  10CA  00A6               	movwf	___flmul@b+2
  1470  10CB  30BE               	movlw	190
  1471  10CC  00A5               	movwf	___flmul@b+1
  1472  10CD  3077               	movlw	119
  1473  10CE  00A4               	movwf	___flmul@b
  1474  10CF  1683               	bsf	3,5	;RP0=1, select bank1
  1475  10D0  1303               	bcf	3,6	;RP1=0, select bank1
  1476  10D1  0857               	movf	_adc^(0+128),w
  1477  10D2  00C6               	movwf	??_main^(0+128)
  1478  10D3  01C7               	clrf	(??_main^(0+128)+1)
  1479  10D4  01C8               	clrf	(??_main^(0+128)+2)
  1480  10D5  01C9               	clrf	(??_main^(0+128)+3)
  1481  10D6  0849               	movf	(??_main+3)^(0+128),w
  1482  10D7  00F3               	movwf	___xxtofl@val+3
  1483  10D8  0848               	movf	(??_main+2)^(0+128),w
  1484  10D9  00F2               	movwf	___xxtofl@val+2
  1485  10DA  0847               	movf	(??_main+1)^(0+128),w
  1486  10DB  00F1               	movwf	___xxtofl@val+1
  1487  10DC  0846               	movf	??_main^(0+128),w
  1488  10DD  00F0               	movwf	___xxtofl@val
  1489  10DE  3001               	movlw	1
  1490  10DF  160A  158A  253B  160A  118A  	fcall	___xxtofl
  1491  10E4  0873               	movf	?___xxtofl+3,w
  1492  10E5  1283               	bcf	3,5	;RP0=0, select bank0
  1493  10E6  1303               	bcf	3,6	;RP1=0, select bank0
  1494  10E7  00AB               	movwf	___flmul@a+3
  1495  10E8  0872               	movf	?___xxtofl+2,w
  1496  10E9  00AA               	movwf	___flmul@a+2
  1497  10EA  0871               	movf	?___xxtofl+1,w
  1498  10EB  00A9               	movwf	___flmul@a+1
  1499  10EC  0870               	movf	?___xxtofl,w
  1500  10ED  00A8               	movwf	___flmul@a
  1501  10EE  120A  158A  249F  160A  118A  	fcall	___flmul
  1502  10F3  1283               	bcf	3,5	;RP0=0, select bank0
  1503  10F4  1303               	bcf	3,6	;RP1=0, select bank0
  1504  10F5  0827               	movf	?___flmul+3,w
  1505  10F6  1683               	bsf	3,5	;RP0=1, select bank1
  1506  10F7  1303               	bcf	3,6	;RP1=0, select bank1
  1507  10F8  00D5               	movwf	(_x+3)^(0+128)
  1508  10F9  1283               	bcf	3,5	;RP0=0, select bank0
  1509  10FA  1303               	bcf	3,6	;RP1=0, select bank0
  1510  10FB  0826               	movf	?___flmul+2,w
  1511  10FC  1683               	bsf	3,5	;RP0=1, select bank1
  1512  10FD  1303               	bcf	3,6	;RP1=0, select bank1
  1513  10FE  00D4               	movwf	(_x+2)^(0+128)
  1514  10FF  1283               	bcf	3,5	;RP0=0, select bank0
  1515  1100  1303               	bcf	3,6	;RP1=0, select bank0
  1516  1101  0825               	movf	?___flmul+1,w
  1517  1102  1683               	bsf	3,5	;RP0=1, select bank1
  1518  1103  1303               	bcf	3,6	;RP1=0, select bank1
  1519  1104  00D3               	movwf	(_x+1)^(0+128)
  1520  1105  1283               	bcf	3,5	;RP0=0, select bank0
  1521  1106  1303               	bcf	3,6	;RP1=0, select bank0
  1522  1107  0824               	movf	?___flmul,w
  1523  1108  1683               	bsf	3,5	;RP0=1, select bank1
  1524  1109  1303               	bcf	3,6	;RP1=0, select bank1
  1525  110A  00D2               	movwf	_x^(0+128)
  1526  110B                     l3556:
  1527                           
  1528                           ;main.c: 100:         Lcd_Set_Cursor(2, 1);
  1529  110B  01F4               	clrf	Lcd_Set_Cursor@b
  1530  110C  0AF4               	incf	Lcd_Set_Cursor@b,f
  1531  110D  3002               	movlw	2
  1532  110E  160A  158A  21ED  160A  118A  	fcall	_Lcd_Set_Cursor
  1533  1113                     l3558:
  1534                           
  1535                           ;main.c: 101:         sprintf(s, "%3.2fV", x);
  1536  1113  30D8               	movlw	(low (_s| 0))& (0+255)
  1537  1114  1683               	bsf	3,5	;RP0=1, select bank1
  1538  1115  1303               	bcf	3,6	;RP1=0, select bank1
  1539  1116  00A0               	movwf	sprintf@sp^(0+128)
  1540  1117  3000               	movlw	0
  1541  1118  00A1               	movwf	(sprintf@sp+1)^(0+128)
  1542  1119  30A9               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1543  111A  00C6               	movwf	??_main^(0+128)
  1544  111B  0846               	movf	??_main^(0+128),w
  1545  111C  00A2               	movwf	sprintf@f^(0+128)
  1546  111D  0855               	movf	(_x+3)^(0+128),w
  1547  111E  00A6               	movwf	((?_sprintf+3)^(0+128)+3)
  1548  111F  0854               	movf	(_x+2)^(0+128),w
  1549  1120  00A5               	movwf	((?_sprintf+2)^(0+128)+3)
  1550  1121  0853               	movf	(_x+1)^(0+128),w
  1551  1122  00A4               	movwf	((?_sprintf+1)^(0+128)+3)
  1552  1123  0852               	movf	_x^(0+128),w
  1553  1124  00A3               	movwf	(?_sprintf^(0+128)+3)
  1554  1125  160A  118A  253B  160A  118A  	fcall	_sprintf
  1555  112A                     l3560:
  1556                           
  1557                           ;main.c: 102:         Lcd_Write_String(s);
  1558  112A  30D8               	movlw	(low (_s| 0))& (0+255)
  1559  112B  00F3               	movwf	Lcd_Write_String@a
  1560  112C  3000               	movlw	0
  1561  112D  00F4               	movwf	Lcd_Write_String@a+1
  1562  112E  160A  158A  22B0  160A  118A  	fcall	_Lcd_Write_String
  1563  1133                     l3562:
  1564                           
  1565                           ;main.c: 105:         n = 1*count;
  1566  1133  1683               	bsf	3,5	;RP0=1, select bank1
  1567  1134  1303               	bcf	3,6	;RP1=0, select bank1
  1568  1135  086C               	movf	_count^(0+128),w
  1569  1136  00C6               	movwf	??_main^(0+128)
  1570  1137  01C7               	clrf	(??_main^(0+128)+1)
  1571  1138  01C8               	clrf	(??_main^(0+128)+2)
  1572  1139  01C9               	clrf	(??_main^(0+128)+3)
  1573  113A  0849               	movf	(??_main+3)^(0+128),w
  1574  113B  00F3               	movwf	___xxtofl@val+3
  1575  113C  0848               	movf	(??_main+2)^(0+128),w
  1576  113D  00F2               	movwf	___xxtofl@val+2
  1577  113E  0847               	movf	(??_main+1)^(0+128),w
  1578  113F  00F1               	movwf	___xxtofl@val+1
  1579  1140  0846               	movf	??_main^(0+128),w
  1580  1141  00F0               	movwf	___xxtofl@val
  1581  1142  3001               	movlw	1
  1582  1143  160A  158A  253B  160A  118A  	fcall	___xxtofl
  1583  1148  0873               	movf	?___xxtofl+3,w
  1584  1149  1683               	bsf	3,5	;RP0=1, select bank1
  1585  114A  1303               	bcf	3,6	;RP1=0, select bank1
  1586  114B  00CD               	movwf	(_n+3)^(0+128)
  1587  114C  0872               	movf	?___xxtofl+2,w
  1588  114D  00CC               	movwf	(_n+2)^(0+128)
  1589  114E  0871               	movf	?___xxtofl+1,w
  1590  114F  00CB               	movwf	(_n+1)^(0+128)
  1591  1150  0870               	movf	?___xxtofl,w
  1592  1151  00CA               	movwf	_n^(0+128)
  1593  1152                     l3564:
  1594                           
  1595                           ;main.c: 106:         Lcd_Set_Cursor(2, 8);
  1596  1152  3008               	movlw	8
  1597  1153  00C6               	movwf	??_main^(0+128)
  1598  1154  0846               	movf	??_main^(0+128),w
  1599  1155  00F4               	movwf	Lcd_Set_Cursor@b
  1600  1156  3002               	movlw	2
  1601  1157  160A  158A  21ED  160A  118A  	fcall	_Lcd_Set_Cursor
  1602  115C                     l3566:
  1603                           
  1604                           ;main.c: 107:         sprintf(c, "%d", count);
  1605  115C  3090               	movlw	(low (_c| (0+256)))& (0+255)
  1606  115D  1683               	bsf	3,5	;RP0=1, select bank1
  1607  115E  1303               	bcf	3,6	;RP1=0, select bank1
  1608  115F  00A0               	movwf	sprintf@sp^(0+128)
  1609  1160  3001               	movlw	1
  1610  1161  00A1               	movwf	(sprintf@sp+1)^(0+128)
  1611  1162  30B0               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1612  1163  00C6               	movwf	??_main^(0+128)
  1613  1164  0846               	movf	??_main^(0+128),w
  1614  1165  00A2               	movwf	sprintf@f^(0+128)
  1615  1166  086C               	movf	_count^(0+128),w
  1616  1167  00C7               	movwf	(??_main+1)^(0+128)
  1617  1168  01C8               	clrf	((??_main+1)^(0+128)+1)
  1618  1169  0847               	movf	(??_main+1)^(0+128),w
  1619  116A  00A3               	movwf	(?_sprintf^(0+128)+3)
  1620  116B  0848               	movf	(??_main+2)^(0+128),w
  1621  116C  00A4               	movwf	((?_sprintf+1)^(0+128)+3)
  1622  116D  160A  118A  253B  160A  118A  	fcall	_sprintf
  1623  1172                     l3568:
  1624                           
  1625                           ;main.c: 108:         Lcd_Write_String(c);
  1626  1172  3090               	movlw	(low (_c| (0+256)))& (0+255)
  1627  1173  00F3               	movwf	Lcd_Write_String@a
  1628  1174  3001               	movlw	1
  1629  1175  00F4               	movwf	Lcd_Write_String@a+1
  1630  1176  160A  158A  22B0  160A  118A  	fcall	_Lcd_Write_String
  1631  117B                     l3570:
  1632                           
  1633                           ;main.c: 111:         p = 1.95 * lmm;
  1634  117B  303F               	movlw	63
  1635  117C  1283               	bcf	3,5	;RP0=0, select bank0
  1636  117D  1303               	bcf	3,6	;RP1=0, select bank0
  1637  117E  00A7               	movwf	___flmul@b+3
  1638  117F  30F9               	movlw	249
  1639  1180  00A6               	movwf	___flmul@b+2
  1640  1181  3099               	movlw	153
  1641  1182  00A5               	movwf	___flmul@b+1
  1642  1183  309A               	movlw	154
  1643  1184  00A4               	movwf	___flmul@b
  1644  1185  1683               	bsf	3,5	;RP0=1, select bank1
  1645  1186  1303               	bcf	3,6	;RP1=0, select bank1
  1646  1187  086D               	movf	_lmm^(0+128),w
  1647  1188  00C6               	movwf	??_main^(0+128)
  1648  1189  01C7               	clrf	(??_main^(0+128)+1)
  1649  118A  01C8               	clrf	(??_main^(0+128)+2)
  1650  118B  01C9               	clrf	(??_main^(0+128)+3)
  1651  118C  0849               	movf	(??_main+3)^(0+128),w
  1652  118D  00F3               	movwf	___xxtofl@val+3
  1653  118E  0848               	movf	(??_main+2)^(0+128),w
  1654  118F  00F2               	movwf	___xxtofl@val+2
  1655  1190  0847               	movf	(??_main+1)^(0+128),w
  1656  1191  00F1               	movwf	___xxtofl@val+1
  1657  1192  0846               	movf	??_main^(0+128),w
  1658  1193  00F0               	movwf	___xxtofl@val
  1659  1194  3001               	movlw	1
  1660  1195  160A  158A  253B  160A  118A  	fcall	___xxtofl
  1661  119A  0873               	movf	?___xxtofl+3,w
  1662  119B  1283               	bcf	3,5	;RP0=0, select bank0
  1663  119C  1303               	bcf	3,6	;RP1=0, select bank0
  1664  119D  00AB               	movwf	___flmul@a+3
  1665  119E  0872               	movf	?___xxtofl+2,w
  1666  119F  00AA               	movwf	___flmul@a+2
  1667  11A0  0871               	movf	?___xxtofl+1,w
  1668  11A1  00A9               	movwf	___flmul@a+1
  1669  11A2  0870               	movf	?___xxtofl,w
  1670  11A3  00A8               	movwf	___flmul@a
  1671  11A4  120A  158A  249F  160A  118A  	fcall	___flmul
  1672  11A9  1283               	bcf	3,5	;RP0=0, select bank0
  1673  11AA  1303               	bcf	3,6	;RP1=0, select bank0
  1674  11AB  0827               	movf	?___flmul+3,w
  1675  11AC  1683               	bsf	3,5	;RP0=1, select bank1
  1676  11AD  1303               	bcf	3,6	;RP1=0, select bank1
  1677  11AE  00D1               	movwf	(_p+3)^(0+128)
  1678  11AF  1283               	bcf	3,5	;RP0=0, select bank0
  1679  11B0  1303               	bcf	3,6	;RP1=0, select bank0
  1680  11B1  0826               	movf	?___flmul+2,w
  1681  11B2  1683               	bsf	3,5	;RP0=1, select bank1
  1682  11B3  1303               	bcf	3,6	;RP1=0, select bank1
  1683  11B4  00D0               	movwf	(_p+2)^(0+128)
  1684  11B5  1283               	bcf	3,5	;RP0=0, select bank0
  1685  11B6  1303               	bcf	3,6	;RP1=0, select bank0
  1686  11B7  0825               	movf	?___flmul+1,w
  1687  11B8  1683               	bsf	3,5	;RP0=1, select bank1
  1688  11B9  1303               	bcf	3,6	;RP1=0, select bank1
  1689  11BA  00CF               	movwf	(_p+1)^(0+128)
  1690  11BB  1283               	bcf	3,5	;RP0=0, select bank0
  1691  11BC  1303               	bcf	3,6	;RP1=0, select bank0
  1692  11BD  0824               	movf	?___flmul,w
  1693  11BE  1683               	bsf	3,5	;RP0=1, select bank1
  1694  11BF  1303               	bcf	3,6	;RP1=0, select bank1
  1695  11C0  00CE               	movwf	_p^(0+128)
  1696  11C1                     l3572:
  1697                           
  1698                           ;main.c: 113:         Lcd_Set_Cursor(2, 13);
  1699  11C1  300D               	movlw	13
  1700  11C2  00C6               	movwf	??_main^(0+128)
  1701  11C3  0846               	movf	??_main^(0+128),w
  1702  11C4  00F4               	movwf	Lcd_Set_Cursor@b
  1703  11C5  3002               	movlw	2
  1704  11C6  160A  158A  21ED  160A  118A  	fcall	_Lcd_Set_Cursor
  1705  11CB                     l3574:
  1706                           
  1707                           ;main.c: 114:         sprintf(l, "%3.0fC", p);
  1708  11CB  30A4               	movlw	(low (_l| (0+256)))& (0+255)
  1709  11CC  1683               	bsf	3,5	;RP0=1, select bank1
  1710  11CD  1303               	bcf	3,6	;RP1=0, select bank1
  1711  11CE  00A0               	movwf	sprintf@sp^(0+128)
  1712  11CF  3001               	movlw	1
  1713  11D0  00A1               	movwf	(sprintf@sp+1)^(0+128)
  1714  11D1  30A2               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1715  11D2  00C6               	movwf	??_main^(0+128)
  1716  11D3  0846               	movf	??_main^(0+128),w
  1717  11D4  00A2               	movwf	sprintf@f^(0+128)
  1718  11D5  0851               	movf	(_p+3)^(0+128),w
  1719  11D6  00A6               	movwf	((?_sprintf+3)^(0+128)+3)
  1720  11D7  0850               	movf	(_p+2)^(0+128),w
  1721  11D8  00A5               	movwf	((?_sprintf+2)^(0+128)+3)
  1722  11D9  084F               	movf	(_p+1)^(0+128),w
  1723  11DA  00A4               	movwf	((?_sprintf+1)^(0+128)+3)
  1724  11DB  084E               	movf	_p^(0+128),w
  1725  11DC  00A3               	movwf	(?_sprintf^(0+128)+3)
  1726  11DD  160A  118A  253B  160A  118A  	fcall	_sprintf
  1727  11E2                     l3576:
  1728                           
  1729                           ;main.c: 115:         Lcd_Write_String(l);
  1730  11E2  30A4               	movlw	(low (_l| (0+256)))& (0+255)
  1731  11E3  00F3               	movwf	Lcd_Write_String@a
  1732  11E4  3001               	movlw	1
  1733  11E5  00F4               	movwf	Lcd_Write_String@a+1
  1734  11E6  160A  158A  22B0  160A  118A  	fcall	_Lcd_Write_String
  1735  11EB                     l3578:
  1736                           
  1737                           ;main.c: 122:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1738  11EB  3003               	movlw	3
  1739  11EC  1683               	bsf	3,5	;RP0=1, select bank1
  1740  11ED  1303               	bcf	3,6	;RP1=0, select bank1
  1741  11EE  00C7               	movwf	(??_main^(0+128)+1)
  1742  11EF  3097               	movlw	151
  1743  11F0  00C6               	movwf	??_main^(0+128)
  1744  11F1                     u5727:
  1745  11F1  0BC6               	decfsz	??_main^(0+128),f
  1746  11F2  29F1               	goto	u5727
  1747  11F3  0BC7               	decfsz	(??_main^(0+128)+1),f
  1748  11F4  29F1               	goto	u5727
  1749  11F5                     l3580:
  1750                           
  1751                           ;main.c: 123:         PORTCbits.RC0 = 0;
  1752  11F5  1283               	bcf	3,5	;RP0=0, select bank0
  1753  11F6  1303               	bcf	3,6	;RP1=0, select bank0
  1754  11F7  1007               	bcf	7,0	;volatile
  1755  11F8                     l3582:
  1756                           
  1757                           ;main.c: 124:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1758  11F8  3003               	movlw	3
  1759  11F9  1683               	bsf	3,5	;RP0=1, select bank1
  1760  11FA  1303               	bcf	3,6	;RP1=0, select bank1
  1761  11FB  00C7               	movwf	(??_main^(0+128)+1)
  1762  11FC  3097               	movlw	151
  1763  11FD  00C6               	movwf	??_main^(0+128)
  1764  11FE                     u5737:
  1765  11FE  0BC6               	decfsz	??_main^(0+128),f
  1766  11FF  29FE               	goto	u5737
  1767  1200  0BC7               	decfsz	(??_main^(0+128)+1),f
  1768  1201  29FE               	goto	u5737
  1769  1202                     l3584:
  1770                           
  1771                           ;main.c: 125:         SSPBUF = 0;
  1772  1202  1283               	bcf	3,5	;RP0=0, select bank0
  1773  1203  1303               	bcf	3,6	;RP1=0, select bank0
  1774  1204  0193               	clrf	19	;volatile
  1775  1205                     l3586:
  1776                           
  1777                           ;main.c: 126:         adc = spiRead();
  1778  1205  160A  158A  2173  160A  118A  	fcall	_spiRead
  1779  120A  1683               	bsf	3,5	;RP0=1, select bank1
  1780  120B  1303               	bcf	3,6	;RP1=0, select bank1
  1781  120C  00C6               	movwf	??_main^(0+128)
  1782  120D  0846               	movf	??_main^(0+128),w
  1783  120E  00D7               	movwf	_adc^(0+128)
  1784  120F                     l3588:
  1785                           
  1786                           ;main.c: 127:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1787  120F  3003               	movlw	3
  1788  1210  1683               	bsf	3,5	;RP0=1, select bank1
  1789  1211  1303               	bcf	3,6	;RP1=0, select bank1
  1790  1212  00C7               	movwf	(??_main^(0+128)+1)
  1791  1213  3097               	movlw	151
  1792  1214  00C6               	movwf	??_main^(0+128)
  1793  1215                     u5747:
  1794  1215  0BC6               	decfsz	??_main^(0+128),f
  1795  1216  2A15               	goto	u5747
  1796  1217  0BC7               	decfsz	(??_main^(0+128)+1),f
  1797  1218  2A15               	goto	u5747
  1798  1219                     l3590:
  1799                           
  1800                           ;main.c: 128:         PORTCbits.RC0 = 1;
  1801  1219  1283               	bcf	3,5	;RP0=0, select bank0
  1802  121A  1303               	bcf	3,6	;RP1=0, select bank0
  1803  121B  1407               	bsf	7,0	;volatile
  1804  121C                     l3592:
  1805                           
  1806                           ;main.c: 129:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1807  121C  3003               	movlw	3
  1808  121D  1683               	bsf	3,5	;RP0=1, select bank1
  1809  121E  1303               	bcf	3,6	;RP1=0, select bank1
  1810  121F  00C8               	movwf	(??_main^(0+128)+2)
  1811  1220  3008               	movlw	8
  1812  1221  00C7               	movwf	(??_main^(0+128)+1)
  1813  1222  3076               	movlw	118
  1814  1223  00C6               	movwf	??_main^(0+128)
  1815  1224                     u5757:
  1816  1224  0BC6               	decfsz	??_main^(0+128),f
  1817  1225  2A24               	goto	u5757
  1818  1226  0BC7               	decfsz	(??_main^(0+128)+1),f
  1819  1227  2A24               	goto	u5757
  1820  1228  0BC8               	decfsz	(??_main^(0+128)+2),f
  1821  1229  2A24               	goto	u5757
  1822  122A  0000               	nop
  1823  122B                     l3594:
  1824                           
  1825                           ;main.c: 132:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1826  122B  301A               	movlw	26
  1827  122C  1683               	bsf	3,5	;RP0=1, select bank1
  1828  122D  1303               	bcf	3,6	;RP1=0, select bank1
  1829  122E  00C7               	movwf	(??_main^(0+128)+1)
  1830  122F  30F7               	movlw	247
  1831  1230  00C6               	movwf	??_main^(0+128)
  1832  1231                     u5767:
  1833  1231  0BC6               	decfsz	??_main^(0+128),f
  1834  1232  2A31               	goto	u5767
  1835  1233  0BC7               	decfsz	(??_main^(0+128)+1),f
  1836  1234  2A31               	goto	u5767
  1837  1235  2A36               	nop2
  1838  1236                     l3596:
  1839                           
  1840                           ;main.c: 133:         PORTCbits.RC1 = 0;
  1841  1236  1283               	bcf	3,5	;RP0=0, select bank0
  1842  1237  1303               	bcf	3,6	;RP1=0, select bank0
  1843  1238  1087               	bcf	7,1	;volatile
  1844  1239                     l3598:
  1845                           
  1846                           ;main.c: 134:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1847  1239  301A               	movlw	26
  1848  123A  1683               	bsf	3,5	;RP0=1, select bank1
  1849  123B  1303               	bcf	3,6	;RP1=0, select bank1
  1850  123C  00C7               	movwf	(??_main^(0+128)+1)
  1851  123D  30F7               	movlw	247
  1852  123E  00C6               	movwf	??_main^(0+128)
  1853  123F                     u5777:
  1854  123F  0BC6               	decfsz	??_main^(0+128),f
  1855  1240  2A3F               	goto	u5777
  1856  1241  0BC7               	decfsz	(??_main^(0+128)+1),f
  1857  1242  2A3F               	goto	u5777
  1858  1243  2A44               	nop2
  1859  1244                     l3600:
  1860                           
  1861                           ;main.c: 135:         SSPBUF = 0;
  1862  1244  1283               	bcf	3,5	;RP0=0, select bank0
  1863  1245  1303               	bcf	3,6	;RP1=0, select bank0
  1864  1246  0193               	clrf	19	;volatile
  1865  1247                     l3602:
  1866                           
  1867                           ;main.c: 136:         count = spiRead();
  1868  1247  160A  158A  2173  160A  118A  	fcall	_spiRead
  1869  124C  1683               	bsf	3,5	;RP0=1, select bank1
  1870  124D  1303               	bcf	3,6	;RP1=0, select bank1
  1871  124E  00C6               	movwf	??_main^(0+128)
  1872  124F  0846               	movf	??_main^(0+128),w
  1873  1250  00EC               	movwf	_count^(0+128)
  1874  1251                     l3604:
  1875                           
  1876                           ;main.c: 137:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1877  1251  3003               	movlw	3
  1878  1252  1683               	bsf	3,5	;RP0=1, select bank1
  1879  1253  1303               	bcf	3,6	;RP1=0, select bank1
  1880  1254  00C7               	movwf	(??_main^(0+128)+1)
  1881  1255  3097               	movlw	151
  1882  1256  00C6               	movwf	??_main^(0+128)
  1883  1257                     u5787:
  1884  1257  0BC6               	decfsz	??_main^(0+128),f
  1885  1258  2A57               	goto	u5787
  1886  1259  0BC7               	decfsz	(??_main^(0+128)+1),f
  1887  125A  2A57               	goto	u5787
  1888  125B                     l3606:
  1889                           
  1890                           ;main.c: 138:         PORTCbits.RC1 = 1;
  1891  125B  1283               	bcf	3,5	;RP0=0, select bank0
  1892  125C  1303               	bcf	3,6	;RP1=0, select bank0
  1893  125D  1487               	bsf	7,1	;volatile
  1894  125E                     l3608:
  1895                           
  1896                           ;main.c: 139:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1897  125E  3003               	movlw	3
  1898  125F  1683               	bsf	3,5	;RP0=1, select bank1
  1899  1260  1303               	bcf	3,6	;RP1=0, select bank1
  1900  1261  00C8               	movwf	(??_main^(0+128)+2)
  1901  1262  3008               	movlw	8
  1902  1263  00C7               	movwf	(??_main^(0+128)+1)
  1903  1264  3076               	movlw	118
  1904  1265  00C6               	movwf	??_main^(0+128)
  1905  1266                     u5797:
  1906  1266  0BC6               	decfsz	??_main^(0+128),f
  1907  1267  2A66               	goto	u5797
  1908  1268  0BC7               	decfsz	(??_main^(0+128)+1),f
  1909  1269  2A66               	goto	u5797
  1910  126A  0BC8               	decfsz	(??_main^(0+128)+2),f
  1911  126B  2A66               	goto	u5797
  1912  126C  0000               	nop
  1913  126D                     l3610:
  1914                           
  1915                           ;main.c: 142:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1916  126D  301A               	movlw	26
  1917  126E  1683               	bsf	3,5	;RP0=1, select bank1
  1918  126F  1303               	bcf	3,6	;RP1=0, select bank1
  1919  1270  00C7               	movwf	(??_main^(0+128)+1)
  1920  1271  30F7               	movlw	247
  1921  1272  00C6               	movwf	??_main^(0+128)
  1922  1273                     u5807:
  1923  1273  0BC6               	decfsz	??_main^(0+128),f
  1924  1274  2A73               	goto	u5807
  1925  1275  0BC7               	decfsz	(??_main^(0+128)+1),f
  1926  1276  2A73               	goto	u5807
  1927  1277  2A78               	nop2
  1928  1278                     l3612:
  1929                           
  1930                           ;main.c: 143:         PORTCbits.RC2 = 0;
  1931  1278  1283               	bcf	3,5	;RP0=0, select bank0
  1932  1279  1303               	bcf	3,6	;RP1=0, select bank0
  1933  127A  1107               	bcf	7,2	;volatile
  1934  127B                     l3614:
  1935                           
  1936                           ;main.c: 144:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1937  127B  301A               	movlw	26
  1938  127C  1683               	bsf	3,5	;RP0=1, select bank1
  1939  127D  1303               	bcf	3,6	;RP1=0, select bank1
  1940  127E  00C7               	movwf	(??_main^(0+128)+1)
  1941  127F  30F7               	movlw	247
  1942  1280  00C6               	movwf	??_main^(0+128)
  1943  1281                     u5817:
  1944  1281  0BC6               	decfsz	??_main^(0+128),f
  1945  1282  2A81               	goto	u5817
  1946  1283  0BC7               	decfsz	(??_main^(0+128)+1),f
  1947  1284  2A81               	goto	u5817
  1948  1285  2A86               	nop2
  1949  1286                     l3616:
  1950                           
  1951                           ;main.c: 145:         SSPBUF = 0;
  1952  1286  1283               	bcf	3,5	;RP0=0, select bank0
  1953  1287  1303               	bcf	3,6	;RP1=0, select bank0
  1954  1288  0193               	clrf	19	;volatile
  1955  1289                     l3618:
  1956                           
  1957                           ;main.c: 146:         lmm = spiRead();
  1958  1289  160A  158A  2173  160A  118A  	fcall	_spiRead
  1959  128E  1683               	bsf	3,5	;RP0=1, select bank1
  1960  128F  1303               	bcf	3,6	;RP1=0, select bank1
  1961  1290  00C6               	movwf	??_main^(0+128)
  1962  1291  0846               	movf	??_main^(0+128),w
  1963  1292  00ED               	movwf	_lmm^(0+128)
  1964  1293                     l3620:
  1965                           
  1966                           ;main.c: 147:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1967  1293  3003               	movlw	3
  1968  1294  1683               	bsf	3,5	;RP0=1, select bank1
  1969  1295  1303               	bcf	3,6	;RP1=0, select bank1
  1970  1296  00C7               	movwf	(??_main^(0+128)+1)
  1971  1297  3097               	movlw	151
  1972  1298  00C6               	movwf	??_main^(0+128)
  1973  1299                     u5827:
  1974  1299  0BC6               	decfsz	??_main^(0+128),f
  1975  129A  2A99               	goto	u5827
  1976  129B  0BC7               	decfsz	(??_main^(0+128)+1),f
  1977  129C  2A99               	goto	u5827
  1978  129D                     l3622:
  1979                           
  1980                           ;main.c: 148:         PORTCbits.RC2 = 1;
  1981  129D  1283               	bcf	3,5	;RP0=0, select bank0
  1982  129E  1303               	bcf	3,6	;RP1=0, select bank0
  1983  129F  1507               	bsf	7,2	;volatile
  1984  12A0                     l3624:
  1985                           
  1986                           ;main.c: 149:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1987  12A0  3003               	movlw	3
  1988  12A1  1683               	bsf	3,5	;RP0=1, select bank1
  1989  12A2  1303               	bcf	3,6	;RP1=0, select bank1
  1990  12A3  00C8               	movwf	(??_main^(0+128)+2)
  1991  12A4  3008               	movlw	8
  1992  12A5  00C7               	movwf	(??_main^(0+128)+1)
  1993  12A6  3076               	movlw	118
  1994  12A7  00C6               	movwf	??_main^(0+128)
  1995  12A8                     u5837:
  1996  12A8  0BC6               	decfsz	??_main^(0+128),f
  1997  12A9  2AA8               	goto	u5837
  1998  12AA  0BC7               	decfsz	(??_main^(0+128)+1),f
  1999  12AB  2AA8               	goto	u5837
  2000  12AC  0BC8               	decfsz	(??_main^(0+128)+2),f
  2001  12AD  2AA8               	goto	u5837
  2002  12AE  0000               	nop
  2003  12AF  28B4               	goto	l105
  2004  12B0  120A  118A  2800   	ljmp	start
  2005  12B3                     __end_of_main:
  2006                           
  2007                           	psect	text1
  2008  153B                     __ptext1:	
  2009 ;; *************** function _sprintf *****************
  2010 ;; Defined at:
  2011 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2012 ;; Parameters:    Size  Location     Type
  2013 ;;  sp              2    0[BANK1 ] PTR unsigned char 
  2014 ;;		 -> l(20), c(20), s(20), 
  2015 ;;  f               1    2[BANK1 ] PTR const unsigned char 
  2016 ;;		 -> STR_4(7), STR_3(3), STR_2(7), 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  fval            4   31[BANK1 ] PTR const unsigned char 
  2019 ;;  val             4   25[BANK1 ] unsigned long 
  2020 ;;  tmpval          4   21[BANK1 ] struct .
  2021 ;;  prec            2   35[BANK1 ] int 
  2022 ;;  eexp            2   29[BANK1 ] int 
  2023 ;;  width           2   19[BANK1 ] int 
  2024 ;;  flag            2   17[BANK1 ] unsigned short 
  2025 ;;  cp              2    0        PTR const unsigned char 
  2026 ;;  len             2    0        unsigned int 
  2027 ;;  c               1   37[BANK1 ] unsigned char 
  2028 ;;  ap              1   16[BANK1 ] PTR void [1]
  2029 ;;		 -> ?_sprintf(2), 
  2030 ;;  d               1    0        unsigned char 
  2031 ;; Return value:  Size  Location     Type
  2032 ;;                  2    0[BANK1 ] int 
  2033 ;; Registers used:
  2034 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2035 ;; Tracked objects:
  2036 ;;		On entry : 0/0
  2037 ;;		On exit  : 0/0
  2038 ;;		Unchanged: 0/0
  2039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2040 ;;      Params:         0       0       7       0       0
  2041 ;;      Locals:         0       0      26       0       0
  2042 ;;      Temps:          0       0       5       0       0
  2043 ;;      Totals:         0       0      38       0       0
  2044 ;;Total ram usage:       38 bytes
  2045 ;; Hardware stack levels used:    1
  2046 ;; Hardware stack levels required when called:    3
  2047 ;; This function calls:
  2048 ;;		___awdiv
  2049 ;;		___fladd
  2050 ;;		___fleq
  2051 ;;		___flge
  2052 ;;		___flmul
  2053 ;;		___flneg
  2054 ;;		___flsub
  2055 ;;		___fltol
  2056 ;;		___lldiv
  2057 ;;		___llmod
  2058 ;;		___wmul
  2059 ;;		___xxtofl
  2060 ;;		__div_to_l_
  2061 ;;		__tdiv_to_l_
  2062 ;;		_fround
  2063 ;;		_isdigit
  2064 ;;		_scale
  2065 ;; This function is called by:
  2066 ;;		_main
  2067 ;; This function uses a non-reentrant model
  2068 ;;
  2069                           
  2070                           
  2071                           ;psect for function _sprintf
  2072  153B                     _sprintf:
  2073  153B                     l3248:	
  2074                           ;incstack = 0
  2075                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2076                           
  2077                           
  2078                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2079  153B  30A3               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  2080  153C  1683               	bsf	3,5	;RP0=1, select bank1
  2081  153D  1303               	bcf	3,6	;RP1=0, select bank1
  2082  153E  00A7               	movwf	??_sprintf^(0+128)
  2083  153F  0827               	movf	??_sprintf^(0+128),w
  2084  1540  00B0               	movwf	sprintf@ap^(0+128)
  2085  1541                     L1:
  2086                           
  2087                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2088  1541  120A  118A  2FC8   	goto	l3534
  2089  1544                     l3250:
  2090                           
  2091                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2092  1544  3025               	movlw	37
  2093  1545  0645               	xorwf	sprintf@c^(0+128),w
  2094  1546  1903               	btfsc	3,2
  2095  1547  2D49               	goto	u5191
  2096  1548  2D4A               	goto	u5190
  2097  1549                     u5191:
  2098  1549  2D5A               	goto	l3256
  2099  154A                     u5190:
  2100  154A                     l3252:
  2101                           
  2102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2103  154A  0845               	movf	sprintf@c^(0+128),w
  2104  154B  00A7               	movwf	??_sprintf^(0+128)
  2105  154C  0820               	movf	sprintf@sp^(0+128),w
  2106  154D  0084               	movwf	4
  2107  154E  1783               	bsf	3,7
  2108  154F  1C21               	btfss	(sprintf@sp+1)^(0+128),0
  2109  1550  1383               	bcf	3,7
  2110  1551  0827               	movf	??_sprintf^(0+128),w
  2111  1552  0080               	movwf	0
  2112  1553                     l3254:
  2113  1553  3001               	movlw	1
  2114  1554  07A0               	addwf	sprintf@sp^(0+128),f
  2115  1555  1803               	skipnc
  2116  1556  0AA1               	incf	(sprintf@sp+1)^(0+128),f
  2117  1557  3000               	movlw	0
  2118  1558  07A1               	addwf	(sprintf@sp+1)^(0+128),f
  2119                           
  2120                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2121  1559  2D41               	goto	L1
  2122  155A                     l3256:
  2123                           
  2124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2125  155A  01B3               	clrf	sprintf@width^(0+128)
  2126  155B  01B4               	clrf	(sprintf@width+1)^(0+128)
  2127                           
  2128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2129  155C  01B1               	clrf	sprintf@flag^(0+128)
  2130  155D  01B2               	clrf	(sprintf@flag+1)^(0+128)
  2131  155E                     l3258:
  2132                           
  2133                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2134  155E  0822               	movf	sprintf@f^(0+128),w
  2135  155F  0084               	movwf	4
  2136  1560  120A  118A  200D  160A  118A  	fcall	stringdir
  2137  1565  160A  158A  217C  160A  118A  	fcall	_isdigit
  2138  156A  1C03               	btfss	3,0
  2139  156B  2D6D               	goto	u5201
  2140  156C  2D6E               	goto	u5200
  2141  156D                     u5201:
  2142  156D  2DAE               	goto	l3270
  2143  156E                     u5200:
  2144  156E                     l3260:
  2145                           
  2146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2147  156E  1683               	bsf	3,5	;RP0=1, select bank1
  2148  156F  1303               	bcf	3,6	;RP1=0, select bank1
  2149  1570  01B3               	clrf	sprintf@width^(0+128)
  2150  1571  01B4               	clrf	(sprintf@width+1)^(0+128)
  2151  1572                     l3262:
  2152                           
  2153                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2154  1572  300A               	movlw	10
  2155  1573  00F0               	movwf	___wmul@multiplier
  2156  1574  3000               	movlw	0
  2157  1575  00F1               	movwf	___wmul@multiplier+1
  2158  1576  1683               	bsf	3,5	;RP0=1, select bank1
  2159  1577  1303               	bcf	3,6	;RP1=0, select bank1
  2160  1578  0834               	movf	(sprintf@width+1)^(0+128),w
  2161  1579  00F3               	movwf	___wmul@multiplicand+1
  2162  157A  0833               	movf	sprintf@width^(0+128),w
  2163  157B  00F2               	movwf	___wmul@multiplicand
  2164  157C  160A  118A  200E  160A  118A  	fcall	___wmul
  2165  1581  0871               	movf	?___wmul+1,w
  2166  1582  1683               	bsf	3,5	;RP0=1, select bank1
  2167  1583  1303               	bcf	3,6	;RP1=0, select bank1
  2168  1584  00B4               	movwf	(sprintf@width+1)^(0+128)
  2169  1585  0870               	movf	?___wmul,w
  2170  1586  00B3               	movwf	sprintf@width^(0+128)
  2171  1587                     l3264:
  2172                           
  2173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2174  1587  0822               	movf	sprintf@f^(0+128),w
  2175  1588  0084               	movwf	4
  2176  1589  120A  118A  200D  160A  118A  	fcall	stringdir
  2177  158E  3ED0               	addlw	208
  2178  158F  00A7               	movwf	??_sprintf^(0+128)
  2179  1590  30FF               	movlw	255
  2180  1591  1803               	skipnc
  2181  1592  3000               	movlw	0
  2182  1593  00A8               	movwf	(??_sprintf^(0+128)+1)
  2183  1594  0827               	movf	??_sprintf^(0+128),w
  2184  1595  07B3               	addwf	sprintf@width^(0+128),f
  2185  1596  1803               	skipnc
  2186  1597  0AB4               	incf	(sprintf@width+1)^(0+128),f
  2187  1598  0828               	movf	(??_sprintf+1)^(0+128),w
  2188  1599  07B4               	addwf	(sprintf@width+1)^(0+128),f
  2189  159A                     l3266:
  2190  159A  3001               	movlw	1
  2191  159B  00A7               	movwf	??_sprintf^(0+128)
  2192  159C  0827               	movf	??_sprintf^(0+128),w
  2193  159D  07A2               	addwf	sprintf@f^(0+128),f
  2194  159E                     l3268:
  2195                           
  2196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2197  159E  0822               	movf	sprintf@f^(0+128),w
  2198  159F  0084               	movwf	4
  2199  15A0  120A  118A  200D  160A  118A  	fcall	stringdir
  2200  15A5  160A  158A  217C  160A  118A  	fcall	_isdigit
  2201  15AA  1803               	btfsc	3,0
  2202  15AB  2DAD               	goto	u5211
  2203  15AC  2DAE               	goto	u5210
  2204  15AD                     u5211:
  2205  15AD  2D72               	goto	l3262
  2206  15AE                     u5210:
  2207  15AE                     l3270:
  2208                           
  2209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2210  15AE  1683               	bsf	3,5	;RP0=1, select bank1
  2211  15AF  1303               	bcf	3,6	;RP1=0, select bank1
  2212  15B0  0822               	movf	sprintf@f^(0+128),w
  2213  15B1  0084               	movwf	4
  2214  15B2  120A  118A  200D  160A  118A  	fcall	stringdir
  2215  15B7  3A2E               	xorlw	46
  2216  15B8  1D03               	skipz
  2217  15B9  2DBB               	goto	u5221
  2218  15BA  2DBC               	goto	u5220
  2219  15BB                     u5221:
  2220  15BB  2E01               	goto	l3286
  2221  15BC                     u5220:
  2222  15BC                     l3272:
  2223                           
  2224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2225  15BC  1732               	bsf	(sprintf@flag^(0+128)+1),6
  2226  15BD                     l3274:
  2227                           
  2228                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2229  15BD  3001               	movlw	1
  2230  15BE  00A7               	movwf	??_sprintf^(0+128)
  2231  15BF  0827               	movf	??_sprintf^(0+128),w
  2232  15C0  07A2               	addwf	sprintf@f^(0+128),f
  2233  15C1                     l3276:
  2234                           
  2235                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2236  15C1  01C3               	clrf	sprintf@prec^(0+128)
  2237  15C2  01C4               	clrf	(sprintf@prec+1)^(0+128)
  2238                           
  2239                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2240  15C3  2DF0               	goto	l3284
  2241  15C4                     l3278:
  2242                           
  2243                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2244  15C4  300A               	movlw	10
  2245  15C5  00F0               	movwf	___wmul@multiplier
  2246  15C6  3000               	movlw	0
  2247  15C7  00F1               	movwf	___wmul@multiplier+1
  2248  15C8  1683               	bsf	3,5	;RP0=1, select bank1
  2249  15C9  1303               	bcf	3,6	;RP1=0, select bank1
  2250  15CA  0844               	movf	(sprintf@prec+1)^(0+128),w
  2251  15CB  00F3               	movwf	___wmul@multiplicand+1
  2252  15CC  0843               	movf	sprintf@prec^(0+128),w
  2253  15CD  00F2               	movwf	___wmul@multiplicand
  2254  15CE  160A  118A  200E  160A  118A  	fcall	___wmul
  2255  15D3  0871               	movf	?___wmul+1,w
  2256  15D4  1683               	bsf	3,5	;RP0=1, select bank1
  2257  15D5  1303               	bcf	3,6	;RP1=0, select bank1
  2258  15D6  00C4               	movwf	(sprintf@prec+1)^(0+128)
  2259  15D7  0870               	movf	?___wmul,w
  2260  15D8  00C3               	movwf	sprintf@prec^(0+128)
  2261  15D9                     l3280:
  2262                           
  2263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2264  15D9  0822               	movf	sprintf@f^(0+128),w
  2265  15DA  0084               	movwf	4
  2266  15DB  120A  118A  200D  160A  118A  	fcall	stringdir
  2267  15E0  3ED0               	addlw	208
  2268  15E1  00A7               	movwf	??_sprintf^(0+128)
  2269  15E2  30FF               	movlw	255
  2270  15E3  1803               	skipnc
  2271  15E4  3000               	movlw	0
  2272  15E5  00A8               	movwf	(??_sprintf^(0+128)+1)
  2273  15E6  0827               	movf	??_sprintf^(0+128),w
  2274  15E7  07C3               	addwf	sprintf@prec^(0+128),f
  2275  15E8  1803               	skipnc
  2276  15E9  0AC4               	incf	(sprintf@prec+1)^(0+128),f
  2277  15EA  0828               	movf	(??_sprintf+1)^(0+128),w
  2278  15EB  07C4               	addwf	(sprintf@prec+1)^(0+128),f
  2279  15EC                     l3282:
  2280  15EC  3001               	movlw	1
  2281  15ED  00A7               	movwf	??_sprintf^(0+128)
  2282  15EE  0827               	movf	??_sprintf^(0+128),w
  2283  15EF  07A2               	addwf	sprintf@f^(0+128),f
  2284  15F0                     l3284:
  2285                           
  2286                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2287  15F0  0822               	movf	sprintf@f^(0+128),w
  2288  15F1  0084               	movwf	4
  2289  15F2  120A  118A  200D  160A  118A  	fcall	stringdir
  2290  15F7  160A  158A  217C  160A  118A  	fcall	_isdigit
  2291  15FC  1803               	btfsc	3,0
  2292  15FD  2DFF               	goto	u5231
  2293  15FE  2E00               	goto	u5230
  2294  15FF                     u5231:
  2295  15FF  2DC4               	goto	l3278
  2296  1600                     u5230:
  2297  1600  2E07               	goto	l3292
  2298  1601                     l3286:
  2299                           
  2300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2301  1601  01C3               	clrf	sprintf@prec^(0+128)
  2302  1602  01C4               	clrf	(sprintf@prec+1)^(0+128)
  2303  1603                     l3288:
  2304                           
  2305                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2306  1603  1632               	bsf	(sprintf@flag^(0+128)+1),4
  2307  1604  2E07               	goto	l3292
  2308  1605                     l315:	
  2309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2310                           
  2311                           
  2312                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2313  1605  1532               	bsf	(sprintf@flag^(0+128)+1),2
  2314                           
  2315                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2316  1606  2E29               	goto	l3294
  2317  1607                     l3292:
  2318  1607  3001               	movlw	1
  2319  1608  1683               	bsf	3,5	;RP0=1, select bank1
  2320  1609  1303               	bcf	3,6	;RP1=0, select bank1
  2321  160A  07A2               	addwf	sprintf@f^(0+128),f
  2322  160B  30FF               	movlw	-1
  2323  160C  0722               	addwf	sprintf@f^(0+128),w
  2324  160D  0084               	movwf	4
  2325  160E  120A  118A  200D  160A  118A  	fcall	stringdir
  2326  1613  00C5               	movwf	sprintf@c^(0+128)
  2327  1614  00A7               	movwf	??_sprintf^(0+128)
  2328  1615  01A8               	clrf	(??_sprintf^(0+128)+1)
  2329                           
  2330                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2331                           ; Switch size 1, requested type "simple"
  2332                           ; Number of cases is 1, Range of values is 0 to 0
  2333                           ; switch strategies available:
  2334                           ; Name         Instructions Cycles
  2335                           ; simple_byte            4     3 (average)
  2336                           ; direct_byte           11     8 (fixed)
  2337                           ; jumptable            260     6 (fixed)
  2338                           ;	Chosen strategy is simple_byte
  2339  1616  0828               	movf	(??_sprintf+1)^(0+128),w
  2340  1617  3A00               	xorlw	0	; case 0
  2341  1618  1903               	skipnz
  2342  1619  2E1B               	goto	l3646
  2343  161A  2D41               	goto	L1
  2344  161B                     l3646:
  2345                           
  2346                           ; Switch size 1, requested type "simple"
  2347                           ; Number of cases is 4, Range of values is 0 to 105
  2348                           ; switch strategies available:
  2349                           ; Name         Instructions Cycles
  2350                           ; simple_byte           13     7 (average)
  2351                           ; jumptable            260     6 (fixed)
  2352                           ;	Chosen strategy is simple_byte
  2353  161B  0827               	movf	??_sprintf^(0+128),w
  2354  161C  3A00               	xorlw	0	; case 0
  2355  161D  1903               	skipnz
  2356  161E  2FFD               	goto	L3
  2357  161F  3A64               	xorlw	100	; case 100
  2358  1620  1903               	skipnz
  2359  1621  2E29               	goto	l3294
  2360  1622  3A02               	xorlw	2	; case 102
  2361  1623  1903               	skipnz
  2362  1624  2E05               	goto	l315
  2363  1625  3A0F               	xorlw	15	; case 105
  2364  1626  1903               	skipnz
  2365  1627  2E29               	goto	l3294
  2366  1628  2D41               	goto	L1
  2367  1629                     l3294:
  2368                           
  2369                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2370  1629  3000               	movlw	0
  2371  162A  0531               	andwf	sprintf@flag^(0+128),w
  2372  162B  00A7               	movwf	??_sprintf^(0+128)
  2373  162C  3007               	movlw	7
  2374  162D  0532               	andwf	(sprintf@flag+1)^(0+128),w
  2375  162E  00A8               	movwf	(??_sprintf+1)^(0+128)
  2376  162F  0827               	movf	??_sprintf^(0+128),w
  2377  1630  0428               	iorwf	(??_sprintf^(0+128)+1),w
  2378  1631  1903               	btfsc	3,2
  2379  1632  2E34               	goto	u5241
  2380  1633  2E37               	goto	u5240
  2381  1634                     u5241:
  2382  1634  120A  118A  2E21   	goto	l3456
  2383  1637                     u5240:
  2384  1637                     l3296:
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2387  1637  1E32               	btfss	(sprintf@flag+1)^(0+128),4
  2388  1638  2E3A               	goto	u5251
  2389  1639  2E3B               	goto	u5250
  2390  163A                     u5251:
  2391  163A  2E3F               	goto	l3300
  2392  163B                     u5250:
  2393  163B                     l3298:
  2394                           
  2395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2396  163B  3006               	movlw	6
  2397  163C  00C3               	movwf	sprintf@prec^(0+128)
  2398  163D  3000               	movlw	0
  2399  163E  00C4               	movwf	(sprintf@prec^(0+128)+1)
  2400  163F                     l3300:
  2401                           
  2402                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2403  163F  0830               	movf	sprintf@ap^(0+128),w
  2404  1640  0084               	movwf	4
  2405  1641  1383               	bcf	3,7	;select IRP bank0
  2406  1642  0800               	movf	0,w
  2407  1643  00BF               	movwf	sprintf@fval^(0+128)
  2408  1644  0A84               	incf	4,f
  2409  1645  0800               	movf	0,w
  2410  1646  00C0               	movwf	(sprintf@fval+1)^(0+128)
  2411  1647  0A84               	incf	4,f
  2412  1648  0800               	movf	0,w
  2413  1649  00C1               	movwf	(sprintf@fval+2)^(0+128)
  2414  164A  0A84               	incf	4,f
  2415  164B  0800               	movf	0,w
  2416  164C  00C2               	movwf	(sprintf@fval+3)^(0+128)
  2417  164D                     l3302:
  2418  164D  3004               	movlw	4
  2419  164E  00A7               	movwf	??_sprintf^(0+128)
  2420  164F  0827               	movf	??_sprintf^(0+128),w
  2421  1650  07B0               	addwf	sprintf@ap^(0+128),f
  2422  1651                     l3304:
  2423                           
  2424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2425  1651  0842               	movf	(sprintf@fval+3)^(0+128),w
  2426  1652  00F3               	movwf	___flge@ff1+3
  2427  1653  0841               	movf	(sprintf@fval+2)^(0+128),w
  2428  1654  00F2               	movwf	___flge@ff1+2
  2429  1655  0840               	movf	(sprintf@fval+1)^(0+128),w
  2430  1656  00F1               	movwf	___flge@ff1+1
  2431  1657  083F               	movf	sprintf@fval^(0+128),w
  2432  1658  00F0               	movwf	___flge@ff1
  2433  1659  3000               	movlw	0
  2434  165A  00F7               	movwf	___flge@ff2+3
  2435  165B  3000               	movlw	0
  2436  165C  00F6               	movwf	___flge@ff2+2
  2437  165D  3000               	movlw	0
  2438  165E  00F5               	movwf	___flge@ff2+1
  2439  165F  3000               	movlw	0
  2440  1660  00F4               	movwf	___flge@ff2
  2441  1661  160A  158A  2499  160A  118A  	fcall	___flge
  2442  1666  1803               	btfsc	3,0
  2443  1667  2E69               	goto	u5261
  2444  1668  2E6A               	goto	u5260
  2445  1669                     u5261:
  2446  1669  2E87               	goto	l3310
  2447  166A                     u5260:
  2448  166A                     l3306:
  2449                           
  2450                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2451  166A  1683               	bsf	3,5	;RP0=1, select bank1
  2452  166B  1303               	bcf	3,6	;RP1=0, select bank1
  2453  166C  0842               	movf	(sprintf@fval+3)^(0+128),w
  2454  166D  00F3               	movwf	___flneg@f1+3
  2455  166E  0841               	movf	(sprintf@fval+2)^(0+128),w
  2456  166F  00F2               	movwf	___flneg@f1+2
  2457  1670  0840               	movf	(sprintf@fval+1)^(0+128),w
  2458  1671  00F1               	movwf	___flneg@f1+1
  2459  1672  083F               	movf	sprintf@fval^(0+128),w
  2460  1673  00F0               	movwf	___flneg@f1
  2461  1674  160A  118A  2003  160A  118A  	fcall	___flneg
  2462  1679  0873               	movf	?___flneg+3,w
  2463  167A  1683               	bsf	3,5	;RP0=1, select bank1
  2464  167B  1303               	bcf	3,6	;RP1=0, select bank1
  2465  167C  00C2               	movwf	(sprintf@fval+3)^(0+128)
  2466  167D  0872               	movf	?___flneg+2,w
  2467  167E  00C1               	movwf	(sprintf@fval+2)^(0+128)
  2468  167F  0871               	movf	?___flneg+1,w
  2469  1680  00C0               	movwf	(sprintf@fval+1)^(0+128)
  2470  1681  0870               	movf	?___flneg,w
  2471  1682  00BF               	movwf	sprintf@fval^(0+128)
  2472  1683                     l3308:
  2473                           
  2474                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2475  1683  3003               	movlw	3
  2476  1684  04B1               	iorwf	sprintf@flag^(0+128),f
  2477  1685  3000               	movlw	0
  2478  1686  04B2               	iorwf	(sprintf@flag+1)^(0+128),f
  2479  1687                     l3310:
  2480                           
  2481                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2482  1687  1683               	bsf	3,5	;RP0=1, select bank1
  2483  1688  1303               	bcf	3,6	;RP1=0, select bank1
  2484  1689  01BD               	clrf	sprintf@eexp^(0+128)
  2485  168A  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  2486  168B                     l3312:
  2487                           
  2488                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2489  168B  0842               	movf	(sprintf@fval+3)^(0+128),w
  2490  168C  00F3               	movwf	___fleq@ff1+3
  2491  168D  0841               	movf	(sprintf@fval+2)^(0+128),w
  2492  168E  00F2               	movwf	___fleq@ff1+2
  2493  168F  0840               	movf	(sprintf@fval+1)^(0+128),w
  2494  1690  00F1               	movwf	___fleq@ff1+1
  2495  1691  083F               	movf	sprintf@fval^(0+128),w
  2496  1692  00F0               	movwf	___fleq@ff1
  2497  1693  3000               	movlw	0
  2498  1694  00F7               	movwf	___fleq@ff2+3
  2499  1695  3000               	movlw	0
  2500  1696  00F6               	movwf	___fleq@ff2+2
  2501  1697  3000               	movlw	0
  2502  1698  00F5               	movwf	___fleq@ff2+1
  2503  1699  3000               	movlw	0
  2504  169A  00F4               	movwf	___fleq@ff2
  2505  169B  160A  158A  2336  160A  118A  	fcall	___fleq
  2506  16A0  1803               	btfsc	3,0
  2507  16A1  2EA3               	goto	u5271
  2508  16A2  2EA4               	goto	u5270
  2509  16A3                     u5271:
  2510  16A3  2F94               	goto	l3338
  2511  16A4                     u5270:
  2512  16A4                     l3314:
  2513                           
  2514                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2515  16A4  1003               	clrc
  2516  16A5  1683               	bsf	3,5	;RP0=1, select bank1
  2517  16A6  1303               	bcf	3,6	;RP1=0, select bank1
  2518  16A7  0D41               	rlf	(sprintf@fval+2)^(0+128),w
  2519  16A8  0D42               	rlf	(sprintf@fval+3)^(0+128),w
  2520  16A9  3E82               	addlw	130
  2521  16AA  00BD               	movwf	sprintf@eexp^(0+128)
  2522  16AB  30FF               	movlw	255
  2523  16AC  1803               	skipnc
  2524  16AD  3000               	movlw	0
  2525  16AE  00BE               	movwf	(sprintf@eexp^(0+128)+1)
  2526  16AF                     l3316:
  2527                           
  2528                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2529  16AF  30FF               	movlw	255
  2530  16B0  07BD               	addwf	sprintf@eexp^(0+128),f
  2531  16B1  1803               	skipnc
  2532  16B2  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2533  16B3  30FF               	movlw	255
  2534  16B4  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2535  16B5                     l3318:
  2536                           
  2537                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2538  16B5  3003               	movlw	3
  2539  16B6  00F0               	movwf	___wmul@multiplier
  2540  16B7  3000               	movlw	0
  2541  16B8  00F1               	movwf	___wmul@multiplier+1
  2542  16B9  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2543  16BA  00F3               	movwf	___wmul@multiplicand+1
  2544  16BB  083D               	movf	sprintf@eexp^(0+128),w
  2545  16BC  00F2               	movwf	___wmul@multiplicand
  2546  16BD  160A  118A  200E  160A  118A  	fcall	___wmul
  2547  16C2  0871               	movf	?___wmul+1,w
  2548  16C3  1683               	bsf	3,5	;RP0=1, select bank1
  2549  16C4  1303               	bcf	3,6	;RP1=0, select bank1
  2550  16C5  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  2551  16C6  0870               	movf	?___wmul,w
  2552  16C7  00BD               	movwf	sprintf@eexp^(0+128)
  2553  16C8                     l3320:
  2554                           
  2555                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2556  16C8  300A               	movlw	10
  2557  16C9  00F7               	movwf	___awdiv@divisor
  2558  16CA  3000               	movlw	0
  2559  16CB  00F8               	movwf	___awdiv@divisor+1
  2560  16CC  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2561  16CD  00FA               	movwf	___awdiv@dividend+1
  2562  16CE  083D               	movf	sprintf@eexp^(0+128),w
  2563  16CF  00F9               	movwf	___awdiv@dividend
  2564  16D0  160A  118A  2033  160A  118A  	fcall	___awdiv
  2565  16D5  0878               	movf	?___awdiv+1,w
  2566  16D6  1683               	bsf	3,5	;RP0=1, select bank1
  2567  16D7  1303               	bcf	3,6	;RP1=0, select bank1
  2568  16D8  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  2569  16D9  0877               	movf	?___awdiv,w
  2570  16DA  00BD               	movwf	sprintf@eexp^(0+128)
  2571  16DB                     l3322:
  2572                           
  2573                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2574  16DB  1FBE               	btfss	(sprintf@eexp+1)^(0+128),7
  2575  16DC  2EDE               	goto	u5281
  2576  16DD  2EDF               	goto	u5280
  2577  16DE                     u5281:
  2578  16DE  2EE5               	goto	l3326
  2579  16DF                     u5280:
  2580  16DF                     l3324:
  2581                           
  2582                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2583  16DF  30FF               	movlw	255
  2584  16E0  07BD               	addwf	sprintf@eexp^(0+128),f
  2585  16E1  1803               	skipnc
  2586  16E2  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2587  16E3  30FF               	movlw	255
  2588  16E4  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2589  16E5                     l3326:
  2590                           
  2591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2592  16E5  033D               	decf	sprintf@eexp^(0+128),w
  2593  16E6  3AFF               	xorlw	255
  2594  16E7  120A  158A  2140  160A  118A  	fcall	_scale
  2595  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2596  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2597  16EE  0841               	movf	?_scale+3,w
  2598  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2599  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2600  16F1  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  2601  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2602  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2603  16F4  0840               	movf	?_scale+2,w
  2604  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2605  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2606  16F7  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  2607  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2608  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2609  16FA  083F               	movf	?_scale+1,w
  2610  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2611  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2612  16FD  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  2613  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2614  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2615  1700  083E               	movf	?_scale,w
  2616  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2617  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2618  1703  00B5               	movwf	sprintf@tmpval^(0+128)
  2619  1704                     l3328:
  2620                           
  2621                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2622  1704  0842               	movf	(sprintf@fval+3)^(0+128),w
  2623  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2624  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2625  1707  00A7               	movwf	___flmul@b+3
  2626  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2627  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2628  170A  0841               	movf	(sprintf@fval+2)^(0+128),w
  2629  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2630  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2631  170D  00A6               	movwf	___flmul@b+2
  2632  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2633  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2634  1710  0840               	movf	(sprintf@fval+1)^(0+128),w
  2635  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2636  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2637  1713  00A5               	movwf	___flmul@b+1
  2638  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2639  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2640  1716  083F               	movf	sprintf@fval^(0+128),w
  2641  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2642  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2643  1719  00A4               	movwf	___flmul@b
  2644  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2645  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2646  171C  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  2647  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2648  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2649  171F  00AB               	movwf	___flmul@a+3
  2650  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2651  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2652  1722  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  2653  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2654  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2655  1725  00AA               	movwf	___flmul@a+2
  2656  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2657  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2658  1728  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  2659  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2660  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2661  172B  00A9               	movwf	___flmul@a+1
  2662  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2663  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2664  172E  0835               	movf	sprintf@tmpval^(0+128),w
  2665  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2666  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2667  1731  00A8               	movwf	___flmul@a
  2668  1732  120A  158A  249F  160A  118A  	fcall	___flmul
  2669  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2670  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2671  1739  0827               	movf	?___flmul+3,w
  2672  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2673  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2674  173C  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  2675  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2676  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2677  173F  0826               	movf	?___flmul+2,w
  2678  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2679  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2680  1742  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  2681  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2682  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2683  1745  0825               	movf	?___flmul+1,w
  2684  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2685  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2686  1748  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  2687  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2688  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2689  174B  0824               	movf	?___flmul,w
  2690  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2691  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2692  174E  00B5               	movwf	sprintf@tmpval^(0+128)
  2693  174F                     l3330:
  2694                           
  2695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2696  174F  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  2697  1750  00F3               	movwf	___flge@ff1+3
  2698  1751  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  2699  1752  00F2               	movwf	___flge@ff1+2
  2700  1753  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  2701  1754  00F1               	movwf	___flge@ff1+1
  2702  1755  0835               	movf	sprintf@tmpval^(0+128),w
  2703  1756  00F0               	movwf	___flge@ff1
  2704  1757  303F               	movlw	63
  2705  1758  00F7               	movwf	___flge@ff2+3
  2706  1759  3080               	movlw	128
  2707  175A  00F6               	movwf	___flge@ff2+2
  2708  175B  3000               	movlw	0
  2709  175C  00F5               	movwf	___flge@ff2+1
  2710  175D  3000               	movlw	0
  2711  175E  00F4               	movwf	___flge@ff2
  2712  175F  160A  158A  2499  160A  118A  	fcall	___flge
  2713  1764  1803               	btfsc	3,0
  2714  1765  2F67               	goto	u5291
  2715  1766  2F68               	goto	u5290
  2716  1767                     u5291:
  2717  1767  2F71               	goto	l3334
  2718  1768                     u5290:
  2719  1768                     l3332:
  2720                           
  2721                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2722  1768  30FF               	movlw	255
  2723  1769  1683               	bsf	3,5	;RP0=1, select bank1
  2724  176A  1303               	bcf	3,6	;RP1=0, select bank1
  2725  176B  07BD               	addwf	sprintf@eexp^(0+128),f
  2726  176C  1803               	skipnc
  2727  176D  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2728  176E  30FF               	movlw	255
  2729  176F  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2730  1770  2F94               	goto	l3338
  2731  1771                     l3334:
  2732  1771  1683               	bsf	3,5	;RP0=1, select bank1
  2733  1772  1303               	bcf	3,6	;RP1=0, select bank1
  2734  1773  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  2735  1774  00F3               	movwf	___flge@ff1+3
  2736  1775  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  2737  1776  00F2               	movwf	___flge@ff1+2
  2738  1777  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  2739  1778  00F1               	movwf	___flge@ff1+1
  2740  1779  0835               	movf	sprintf@tmpval^(0+128),w
  2741  177A  00F0               	movwf	___flge@ff1
  2742  177B  3041               	movlw	65
  2743  177C  00F7               	movwf	___flge@ff2+3
  2744  177D  3020               	movlw	32
  2745  177E  00F6               	movwf	___flge@ff2+2
  2746  177F  3000               	movlw	0
  2747  1780  00F5               	movwf	___flge@ff2+1
  2748  1781  3000               	movlw	0
  2749  1782  00F4               	movwf	___flge@ff2
  2750  1783  160A  158A  2499  160A  118A  	fcall	___flge
  2751  1788  1C03               	btfss	3,0
  2752  1789  2F8B               	goto	u5301
  2753  178A  2F8C               	goto	u5300
  2754  178B                     u5301:
  2755  178B  2F94               	goto	l3338
  2756  178C                     u5300:
  2757  178C                     l3336:
  2758                           
  2759                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2760  178C  3001               	movlw	1
  2761  178D  1683               	bsf	3,5	;RP0=1, select bank1
  2762  178E  1303               	bcf	3,6	;RP1=0, select bank1
  2763  178F  07BD               	addwf	sprintf@eexp^(0+128),f
  2764  1790  1803               	skipnc
  2765  1791  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2766  1792  3000               	movlw	0
  2767  1793  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2768  1794                     l3338:
  2769                           
  2770                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2771  1794  1683               	bsf	3,5	;RP0=1, select bank1
  2772  1795  1303               	bcf	3,6	;RP1=0, select bank1
  2773  1796  0844               	movf	(sprintf@prec+1)^(0+128),w
  2774  1797  3A80               	xorlw	128
  2775  1798  00FF               	movwf	btemp+1
  2776  1799  3080               	movlw	128
  2777  179A  027F               	subwf	btemp+1,w
  2778  179B  1D03               	skipz
  2779  179C  2F9F               	goto	u5315
  2780  179D  300D               	movlw	13
  2781  179E  0243               	subwf	sprintf@prec^(0+128),w
  2782  179F                     u5315:
  2783  179F  1803               	skipnc
  2784  17A0  2FA2               	goto	u5311
  2785  17A1  2FA3               	goto	u5310
  2786  17A2                     u5311:
  2787  17A2  2FEA               	goto	l3342
  2788  17A3                     u5310:
  2789  17A3                     l3340:
  2790                           
  2791                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2792  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  2793  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  2794  17A5  0843               	movf	sprintf@prec^(0+128),w
  2795  17A6  160A  158A  25F5  160A  118A  	fcall	_fround
  2796  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  2797  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  2798  17AD  0841               	movf	?_fround+3,w
  2799  17AE  00D5               	movwf	___fladd@b+3
  2800  17AF  0840               	movf	?_fround+2,w
  2801  17B0  00D4               	movwf	___fladd@b+2
  2802  17B1  083F               	movf	?_fround+1,w
  2803  17B2  00D3               	movwf	___fladd@b+1
  2804  17B3  083E               	movf	?_fround,w
  2805  17B4  00D2               	movwf	___fladd@b
  2806  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  2807  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  2808  17B7  0842               	movf	(sprintf@fval+3)^(0+128),w
  2809  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  2810  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  2811  17BA  00D9               	movwf	___fladd@a+3
  2812  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  2813  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  2814  17BD  0841               	movf	(sprintf@fval+2)^(0+128),w
  2815  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  2816  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  2817  17C0  00D8               	movwf	___fladd@a+2
  2818  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  2819  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  2820  17C3  0840               	movf	(sprintf@fval+1)^(0+128),w
  2821  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  2822  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  2823  17C6  00D7               	movwf	___fladd@a+1
  2824  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  2825  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  2826  17C9  083F               	movf	sprintf@fval^(0+128),w
  2827  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  2828  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  2829  17CC  00D6               	movwf	___fladd@a
  2830  17CD  160A  118A  22B3  160A  118A  	fcall	___fladd
  2831  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  2832  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  2833  17D4  0855               	movf	?___fladd+3,w
  2834  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  2835  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  2836  17D7  00C2               	movwf	(sprintf@fval+3)^(0+128)
  2837  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  2838  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  2839  17DA  0854               	movf	?___fladd+2,w
  2840  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  2841  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  2842  17DD  00C1               	movwf	(sprintf@fval+2)^(0+128)
  2843  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  2844  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  2845  17E0  0853               	movf	?___fladd+1,w
  2846  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  2847  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  2848  17E3  00C0               	movwf	(sprintf@fval+1)^(0+128)
  2849  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  2850  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  2851  17E6  0852               	movf	?___fladd,w
  2852  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  2853  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  2854  17E9  00BF               	movwf	sprintf@fval^(0+128)
  2855  17EA                     l3342:
  2856                           
  2857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2858  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  2859  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  2860  17EC  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2861  17ED  3A80               	xorlw	128
  2862  17EE  00FF               	movwf	btemp+1
  2863  17EF  3080               	movlw	128
  2864  17F0  027F               	subwf	btemp+1,w
  2865  17F1  1D03               	skipz
  2866  17F2  2FF5               	goto	u5325
  2867  17F3  300A               	movlw	10
  2868  17F4  023D               	subwf	sprintf@eexp^(0+128),w
  2869  17F5                     u5325:
  2870  17F5  1803               	skipnc
  2871  17F6  2FFA               	goto	u5321
  2872  17F7  120A  118A  29BA   	goto	u5320
  2873  17FA                     u5321:
  2874  17FA  120A  118A  2A0B   	goto	l3350
  2875  17FD                     L3:
  2876  17FD                     L2:
  2877  17FD  120A  118A  2FDC   	ljmp	l3536
  2878                           
  2879                           	psect	text2
  2880  0940                     __ptext2:	
  2881 ;; *************** function _scale *****************
  2882 ;; Defined at:
  2883 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2884 ;; Parameters:    Size  Location     Type
  2885 ;;  scl             1    wreg     char 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;  scl             1   48[BANK0 ] char 
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  4   30[BANK0 ] char 
  2890 ;; Registers used:
  2891 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2897 ;;      Params:         0       4       0       0       0
  2898 ;;      Locals:         0       5       0       0       0
  2899 ;;      Temps:          0      10       0       0       0
  2900 ;;      Totals:         0      19       0       0       0
  2901 ;;Total ram usage:       19 bytes
  2902 ;; Hardware stack levels used:    1
  2903 ;; Hardware stack levels required when called:    2
  2904 ;; This function calls:
  2905 ;;		___awdiv
  2906 ;;		___awmod
  2907 ;;		___flmul
  2908 ;; This function is called by:
  2909 ;;		_sprintf
  2910 ;; This function uses a non-reentrant model
  2911 ;;
  2912                           
  2913                           
  2914                           ;psect for function _scale
  2915  0940                     _scale:
  2916                           
  2917                           ;incstack = 0
  2918                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2919                           ;scale@scl stored from wreg
  2920  0940  1283               	bcf	3,5	;RP0=0, select bank0
  2921  0941  1303               	bcf	3,6	;RP1=0, select bank0
  2922  0942  00D0               	movwf	scale@scl
  2923  0943                     l2852:
  2924                           
  2925                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  2926  0943  1FD0               	btfss	scale@scl,7
  2927  0944  2946               	goto	u4161
  2928  0945  2947               	goto	u4160
  2929  0946                     u4161:
  2930  0946  2AF4               	goto	l2874
  2931  0947                     u4160:
  2932  0947                     l2854:
  2933                           
  2934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  2935  0947  09D0               	comf	scale@scl,f
  2936  0948  0AD0               	incf	scale@scl,f
  2937  0949                     l2856:
  2938                           
  2939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  2940  0949  0850               	movf	scale@scl,w
  2941  094A  3A80               	xorlw	128
  2942  094B  3E12               	addlw	-238
  2943  094C  1C03               	skipc
  2944  094D  294F               	goto	u4171
  2945  094E  2950               	goto	u4170
  2946  094F                     u4171:
  2947  094F  2A38               	goto	l2864
  2948  0950                     u4170:
  2949  0950                     l2858:
  2950                           
  2951                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  2952  0950  300A               	movlw	10
  2953  0951  00F7               	movwf	___awdiv@divisor
  2954  0952  3000               	movlw	0
  2955  0953  00F8               	movwf	___awdiv@divisor+1
  2956  0954  0850               	movf	scale@scl,w
  2957  0955  00F2               	movwf	___awmod@dividend
  2958  0956  01F3               	clrf	___awmod@dividend+1
  2959  0957  1BF2               	btfsc	___awmod@dividend,7
  2960  0958  03F3               	decf	___awmod@dividend+1,f
  2961  0959  3064               	movlw	100
  2962  095A  00F0               	movwf	___awmod@divisor
  2963  095B  3000               	movlw	0
  2964  095C  00F1               	movwf	___awmod@divisor+1
  2965  095D  160A  158A  23DA  120A  158A  	fcall	___awmod
  2966  0962  0871               	movf	?___awmod+1,w
  2967  0963  00FA               	movwf	___awdiv@dividend+1
  2968  0964  0870               	movf	?___awmod,w
  2969  0965  00F9               	movwf	___awdiv@dividend
  2970  0966  160A  118A  2033  120A  158A  	fcall	___awdiv
  2971  096B  0877               	movf	?___awdiv,w
  2972  096C  1283               	bcf	3,5	;RP0=0, select bank0
  2973  096D  1303               	bcf	3,6	;RP1=0, select bank0
  2974  096E  00C2               	movwf	??_scale
  2975  096F  3001               	movlw	1
  2976  0970                     u4185:
  2977  0970  1003               	clrc
  2978  0971  0DC2               	rlf	??_scale,f
  2979  0972  3EFF               	addlw	-1
  2980  0973  1D03               	skipz
  2981  0974  2970               	goto	u4185
  2982  0975  1003               	clrc
  2983  0976  0D42               	rlf	??_scale,w
  2984  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  2985  0978  0084               	movwf	4
  2986  0979  120A  118A  200D  120A  158A  	fcall	stringdir
  2987  097E  00C3               	movwf	??_scale+1
  2988  097F  120A  118A  200D  120A  158A  	fcall	stringdir
  2989  0984  00C4               	movwf	??_scale+2
  2990  0985  120A  118A  200D  120A  158A  	fcall	stringdir
  2991  098A  00C5               	movwf	??_scale+3
  2992  098B  120A  118A  200D  120A  158A  	fcall	stringdir
  2993  0990  00C6               	movwf	??_scale+4
  2994  0991  0846               	movf	??_scale+4,w
  2995  0992  00A7               	movwf	___flmul@b+3
  2996  0993  0845               	movf	??_scale+3,w
  2997  0994  00A6               	movwf	___flmul@b+2
  2998  0995  0844               	movf	??_scale+2,w
  2999  0996  00A5               	movwf	___flmul@b+1
  3000  0997  0843               	movf	??_scale+1,w
  3001  0998  00A4               	movwf	___flmul@b
  3002  0999  3064               	movlw	100
  3003  099A  00F7               	movwf	___awdiv@divisor
  3004  099B  3000               	movlw	0
  3005  099C  00F8               	movwf	___awdiv@divisor+1
  3006  099D  0850               	movf	scale@scl,w
  3007  099E  00F9               	movwf	___awdiv@dividend
  3008  099F  01FA               	clrf	___awdiv@dividend+1
  3009  09A0  1BF9               	btfsc	___awdiv@dividend,7
  3010  09A1  03FA               	decf	___awdiv@dividend+1,f
  3011  09A2  160A  118A  2033  120A  158A  	fcall	___awdiv
  3012  09A7  0877               	movf	?___awdiv,w
  3013  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  3014  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  3015  09AA  00C7               	movwf	??_scale+5
  3016  09AB  3001               	movlw	1
  3017  09AC                     u4195:
  3018  09AC  1003               	clrc
  3019  09AD  0DC7               	rlf	??_scale+5,f
  3020  09AE  3EFF               	addlw	-1
  3021  09AF  1D03               	skipz
  3022  09B0  29AC               	goto	u4195
  3023  09B1  1003               	clrc
  3024  09B2  0D47               	rlf	??_scale+5,w
  3025  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3026  09B4  0084               	movwf	4
  3027  09B5  120A  118A  200D  120A  158A  	fcall	stringdir
  3028  09BA  00C8               	movwf	??_scale+6
  3029  09BB  120A  118A  200D  120A  158A  	fcall	stringdir
  3030  09C0  00C9               	movwf	??_scale+7
  3031  09C1  120A  118A  200D  120A  158A  	fcall	stringdir
  3032  09C6  00CA               	movwf	??_scale+8
  3033  09C7  120A  118A  200D  120A  158A  	fcall	stringdir
  3034  09CC  00CB               	movwf	??_scale+9
  3035  09CD  084B               	movf	??_scale+9,w
  3036  09CE  00AB               	movwf	___flmul@a+3
  3037  09CF  084A               	movf	??_scale+8,w
  3038  09D0  00AA               	movwf	___flmul@a+2
  3039  09D1  0849               	movf	??_scale+7,w
  3040  09D2  00A9               	movwf	___flmul@a+1
  3041  09D3  0848               	movf	??_scale+6,w
  3042  09D4  00A8               	movwf	___flmul@a
  3043  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  3044  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  3045  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  3046  09DC  0827               	movf	?___flmul+3,w
  3047  09DD  00CF               	movwf	_scale$1217+3
  3048  09DE  0826               	movf	?___flmul+2,w
  3049  09DF  00CE               	movwf	_scale$1217+2
  3050  09E0  0825               	movf	?___flmul+1,w
  3051  09E1  00CD               	movwf	_scale$1217+1
  3052  09E2  0824               	movf	?___flmul,w
  3053  09E3  00CC               	movwf	_scale$1217
  3054                           
  3055                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3056  09E4  300A               	movlw	10
  3057  09E5  00F0               	movwf	___awmod@divisor
  3058  09E6  3000               	movlw	0
  3059  09E7  00F1               	movwf	___awmod@divisor+1
  3060  09E8  0850               	movf	scale@scl,w
  3061  09E9  00F2               	movwf	___awmod@dividend
  3062  09EA  01F3               	clrf	___awmod@dividend+1
  3063  09EB  1BF2               	btfsc	___awmod@dividend,7
  3064  09EC  03F3               	decf	___awmod@dividend+1,f
  3065  09ED  160A  158A  23DA  120A  158A  	fcall	___awmod
  3066  09F2  0870               	movf	?___awmod,w
  3067  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3068  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3069  09F5  00C2               	movwf	??_scale
  3070  09F6  3001               	movlw	1
  3071  09F7                     u4205:
  3072  09F7  1003               	clrc
  3073  09F8  0DC2               	rlf	??_scale,f
  3074  09F9  3EFF               	addlw	-1
  3075  09FA  1D03               	skipz
  3076  09FB  29F7               	goto	u4205
  3077  09FC  1003               	clrc
  3078  09FD  0D42               	rlf	??_scale,w
  3079  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3080  09FF  0084               	movwf	4
  3081  0A00  120A  118A  200D  120A  158A  	fcall	stringdir
  3082  0A05  00C3               	movwf	??_scale+1
  3083  0A06  120A  118A  200D  120A  158A  	fcall	stringdir
  3084  0A0B  00C4               	movwf	??_scale+2
  3085  0A0C  120A  118A  200D  120A  158A  	fcall	stringdir
  3086  0A11  00C5               	movwf	??_scale+3
  3087  0A12  120A  118A  200D  120A  158A  	fcall	stringdir
  3088  0A17  00C6               	movwf	??_scale+4
  3089  0A18  0846               	movf	??_scale+4,w
  3090  0A19  00A7               	movwf	___flmul@b+3
  3091  0A1A  0845               	movf	??_scale+3,w
  3092  0A1B  00A6               	movwf	___flmul@b+2
  3093  0A1C  0844               	movf	??_scale+2,w
  3094  0A1D  00A5               	movwf	___flmul@b+1
  3095  0A1E  0843               	movf	??_scale+1,w
  3096  0A1F  00A4               	movwf	___flmul@b
  3097  0A20  084F               	movf	_scale$1217+3,w
  3098  0A21  00AB               	movwf	___flmul@a+3
  3099  0A22  084E               	movf	_scale$1217+2,w
  3100  0A23  00AA               	movwf	___flmul@a+2
  3101  0A24  084D               	movf	_scale$1217+1,w
  3102  0A25  00A9               	movwf	___flmul@a+1
  3103  0A26  084C               	movf	_scale$1217,w
  3104  0A27  00A8               	movwf	___flmul@a
  3105  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  3106  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  3107  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  3108  0A2F  0827               	movf	?___flmul+3,w
  3109  0A30  00C1               	movwf	?_scale+3
  3110  0A31  0826               	movf	?___flmul+2,w
  3111  0A32  00C0               	movwf	?_scale+2
  3112  0A33  0825               	movf	?___flmul+1,w
  3113  0A34  00BF               	movwf	?_scale+1
  3114  0A35  0824               	movf	?___flmul,w
  3115  0A36  00BE               	movwf	?_scale
  3116  0A37  2C9E               	goto	l293
  3117  0A38                     l2864:
  3118  0A38  0850               	movf	scale@scl,w
  3119  0A39  3A80               	xorlw	128
  3120  0A3A  3E75               	addlw	-139
  3121  0A3B  1C03               	skipc
  3122  0A3C  2A3E               	goto	u4211
  3123  0A3D  2A3F               	goto	u4210
  3124  0A3E                     u4211:
  3125  0A3E  2AC7               	goto	l2870
  3126  0A3F                     u4210:
  3127  0A3F                     l2866:
  3128                           
  3129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3130  0A3F  300A               	movlw	10
  3131  0A40  00F0               	movwf	___awmod@divisor
  3132  0A41  3000               	movlw	0
  3133  0A42  00F1               	movwf	___awmod@divisor+1
  3134  0A43  0850               	movf	scale@scl,w
  3135  0A44  00F2               	movwf	___awmod@dividend
  3136  0A45  01F3               	clrf	___awmod@dividend+1
  3137  0A46  1BF2               	btfsc	___awmod@dividend,7
  3138  0A47  03F3               	decf	___awmod@dividend+1,f
  3139  0A48  160A  158A  23DA  120A  158A  	fcall	___awmod
  3140  0A4D  0870               	movf	?___awmod,w
  3141  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  3142  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  3143  0A50  00C2               	movwf	??_scale
  3144  0A51  3001               	movlw	1
  3145  0A52                     u4225:
  3146  0A52  1003               	clrc
  3147  0A53  0DC2               	rlf	??_scale,f
  3148  0A54  3EFF               	addlw	-1
  3149  0A55  1D03               	skipz
  3150  0A56  2A52               	goto	u4225
  3151  0A57  1003               	clrc
  3152  0A58  0D42               	rlf	??_scale,w
  3153  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3154  0A5A  0084               	movwf	4
  3155  0A5B  120A  118A  200D  120A  158A  	fcall	stringdir
  3156  0A60  00C3               	movwf	??_scale+1
  3157  0A61  120A  118A  200D  120A  158A  	fcall	stringdir
  3158  0A66  00C4               	movwf	??_scale+2
  3159  0A67  120A  118A  200D  120A  158A  	fcall	stringdir
  3160  0A6C  00C5               	movwf	??_scale+3
  3161  0A6D  120A  118A  200D  120A  158A  	fcall	stringdir
  3162  0A72  00C6               	movwf	??_scale+4
  3163  0A73  0846               	movf	??_scale+4,w
  3164  0A74  00A7               	movwf	___flmul@b+3
  3165  0A75  0845               	movf	??_scale+3,w
  3166  0A76  00A6               	movwf	___flmul@b+2
  3167  0A77  0844               	movf	??_scale+2,w
  3168  0A78  00A5               	movwf	___flmul@b+1
  3169  0A79  0843               	movf	??_scale+1,w
  3170  0A7A  00A4               	movwf	___flmul@b
  3171  0A7B  300A               	movlw	10
  3172  0A7C  00F7               	movwf	___awdiv@divisor
  3173  0A7D  3000               	movlw	0
  3174  0A7E  00F8               	movwf	___awdiv@divisor+1
  3175  0A7F  0850               	movf	scale@scl,w
  3176  0A80  00F9               	movwf	___awdiv@dividend
  3177  0A81  01FA               	clrf	___awdiv@dividend+1
  3178  0A82  1BF9               	btfsc	___awdiv@dividend,7
  3179  0A83  03FA               	decf	___awdiv@dividend+1,f
  3180  0A84  160A  118A  2033  120A  158A  	fcall	___awdiv
  3181  0A89  0877               	movf	?___awdiv,w
  3182  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  3183  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  3184  0A8C  00C7               	movwf	??_scale+5
  3185  0A8D  3001               	movlw	1
  3186  0A8E                     u4235:
  3187  0A8E  1003               	clrc
  3188  0A8F  0DC7               	rlf	??_scale+5,f
  3189  0A90  3EFF               	addlw	-1
  3190  0A91  1D03               	skipz
  3191  0A92  2A8E               	goto	u4235
  3192  0A93  1003               	clrc
  3193  0A94  0D47               	rlf	??_scale+5,w
  3194  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3195  0A96  0084               	movwf	4
  3196  0A97  120A  118A  200D  120A  158A  	fcall	stringdir
  3197  0A9C  00C8               	movwf	??_scale+6
  3198  0A9D  120A  118A  200D  120A  158A  	fcall	stringdir
  3199  0AA2  00C9               	movwf	??_scale+7
  3200  0AA3  120A  118A  200D  120A  158A  	fcall	stringdir
  3201  0AA8  00CA               	movwf	??_scale+8
  3202  0AA9  120A  118A  200D  120A  158A  	fcall	stringdir
  3203  0AAE  00CB               	movwf	??_scale+9
  3204  0AAF  084B               	movf	??_scale+9,w
  3205  0AB0  00AB               	movwf	___flmul@a+3
  3206  0AB1  084A               	movf	??_scale+8,w
  3207  0AB2  00AA               	movwf	___flmul@a+2
  3208  0AB3  0849               	movf	??_scale+7,w
  3209  0AB4  00A9               	movwf	___flmul@a+1
  3210  0AB5  0848               	movf	??_scale+6,w
  3211  0AB6  00A8               	movwf	___flmul@a
  3212  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  3213  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3214  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3215  0ABE  0827               	movf	?___flmul+3,w
  3216  0ABF  00C1               	movwf	?_scale+3
  3217  0AC0  0826               	movf	?___flmul+2,w
  3218  0AC1  00C0               	movwf	?_scale+2
  3219  0AC2  0825               	movf	?___flmul+1,w
  3220  0AC3  00BF               	movwf	?_scale+1
  3221  0AC4  0824               	movf	?___flmul,w
  3222  0AC5  00BE               	movwf	?_scale
  3223  0AC6  2C9E               	goto	l293
  3224  0AC7                     l2870:
  3225                           
  3226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3227  0AC7  0850               	movf	scale@scl,w
  3228  0AC8  00C2               	movwf	??_scale
  3229  0AC9  3001               	movlw	1
  3230  0ACA                     u4245:
  3231  0ACA  1003               	clrc
  3232  0ACB  0DC2               	rlf	??_scale,f
  3233  0ACC  3EFF               	addlw	-1
  3234  0ACD  1D03               	skipz
  3235  0ACE  2ACA               	goto	u4245
  3236  0ACF  1003               	clrc
  3237  0AD0  0D42               	rlf	??_scale,w
  3238  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3239  0AD2  0084               	movwf	4
  3240  0AD3  120A  118A  200D  120A  158A  	fcall	stringdir
  3241  0AD8  00C3               	movwf	??_scale+1
  3242  0AD9  120A  118A  200D  120A  158A  	fcall	stringdir
  3243  0ADE  00C4               	movwf	??_scale+2
  3244  0ADF  120A  118A  200D  120A  158A  	fcall	stringdir
  3245  0AE4  00C5               	movwf	??_scale+3
  3246  0AE5  120A  118A  200D  120A  158A  	fcall	stringdir
  3247  0AEA  00C6               	movwf	??_scale+4
  3248  0AEB  0846               	movf	??_scale+4,w
  3249  0AEC  00C1               	movwf	?_scale+3
  3250  0AED  0845               	movf	??_scale+3,w
  3251  0AEE  00C0               	movwf	?_scale+2
  3252  0AEF  0844               	movf	??_scale+2,w
  3253  0AF0  00BF               	movwf	?_scale+1
  3254  0AF1  0843               	movf	??_scale+1,w
  3255  0AF2  00BE               	movwf	?_scale
  3256  0AF3  2C9E               	goto	l293
  3257  0AF4                     l2874:
  3258                           
  3259                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3260  0AF4  0850               	movf	scale@scl,w
  3261  0AF5  3A80               	xorlw	128
  3262  0AF6  3E12               	addlw	-238
  3263  0AF7  1C03               	skipc
  3264  0AF8  2AFA               	goto	u4251
  3265  0AF9  2AFB               	goto	u4250
  3266  0AFA                     u4251:
  3267  0AFA  2BE3               	goto	l2882
  3268  0AFB                     u4250:
  3269  0AFB                     l2876:
  3270                           
  3271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3272  0AFB  300A               	movlw	10
  3273  0AFC  00F7               	movwf	___awdiv@divisor
  3274  0AFD  3000               	movlw	0
  3275  0AFE  00F8               	movwf	___awdiv@divisor+1
  3276  0AFF  0850               	movf	scale@scl,w
  3277  0B00  00F2               	movwf	___awmod@dividend
  3278  0B01  01F3               	clrf	___awmod@dividend+1
  3279  0B02  1BF2               	btfsc	___awmod@dividend,7
  3280  0B03  03F3               	decf	___awmod@dividend+1,f
  3281  0B04  3064               	movlw	100
  3282  0B05  00F0               	movwf	___awmod@divisor
  3283  0B06  3000               	movlw	0
  3284  0B07  00F1               	movwf	___awmod@divisor+1
  3285  0B08  160A  158A  23DA  120A  158A  	fcall	___awmod
  3286  0B0D  0871               	movf	?___awmod+1,w
  3287  0B0E  00FA               	movwf	___awdiv@dividend+1
  3288  0B0F  0870               	movf	?___awmod,w
  3289  0B10  00F9               	movwf	___awdiv@dividend
  3290  0B11  160A  118A  2033  120A  158A  	fcall	___awdiv
  3291  0B16  0877               	movf	?___awdiv,w
  3292  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3293  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  3294  0B19  00C2               	movwf	??_scale
  3295  0B1A  3001               	movlw	1
  3296  0B1B                     u4265:
  3297  0B1B  1003               	clrc
  3298  0B1C  0DC2               	rlf	??_scale,f
  3299  0B1D  3EFF               	addlw	-1
  3300  0B1E  1D03               	skipz
  3301  0B1F  2B1B               	goto	u4265
  3302  0B20  1003               	clrc
  3303  0B21  0D42               	rlf	??_scale,w
  3304  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3305  0B23  0084               	movwf	4
  3306  0B24  120A  118A  200D  120A  158A  	fcall	stringdir
  3307  0B29  00C3               	movwf	??_scale+1
  3308  0B2A  120A  118A  200D  120A  158A  	fcall	stringdir
  3309  0B2F  00C4               	movwf	??_scale+2
  3310  0B30  120A  118A  200D  120A  158A  	fcall	stringdir
  3311  0B35  00C5               	movwf	??_scale+3
  3312  0B36  120A  118A  200D  120A  158A  	fcall	stringdir
  3313  0B3B  00C6               	movwf	??_scale+4
  3314  0B3C  0846               	movf	??_scale+4,w
  3315  0B3D  00A7               	movwf	___flmul@b+3
  3316  0B3E  0845               	movf	??_scale+3,w
  3317  0B3F  00A6               	movwf	___flmul@b+2
  3318  0B40  0844               	movf	??_scale+2,w
  3319  0B41  00A5               	movwf	___flmul@b+1
  3320  0B42  0843               	movf	??_scale+1,w
  3321  0B43  00A4               	movwf	___flmul@b
  3322  0B44  3064               	movlw	100
  3323  0B45  00F7               	movwf	___awdiv@divisor
  3324  0B46  3000               	movlw	0
  3325  0B47  00F8               	movwf	___awdiv@divisor+1
  3326  0B48  0850               	movf	scale@scl,w
  3327  0B49  00F9               	movwf	___awdiv@dividend
  3328  0B4A  01FA               	clrf	___awdiv@dividend+1
  3329  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  3330  0B4C  03FA               	decf	___awdiv@dividend+1,f
  3331  0B4D  160A  118A  2033  120A  158A  	fcall	___awdiv
  3332  0B52  0877               	movf	?___awdiv,w
  3333  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  3334  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  3335  0B55  00C7               	movwf	??_scale+5
  3336  0B56  3001               	movlw	1
  3337  0B57                     u4275:
  3338  0B57  1003               	clrc
  3339  0B58  0DC7               	rlf	??_scale+5,f
  3340  0B59  3EFF               	addlw	-1
  3341  0B5A  1D03               	skipz
  3342  0B5B  2B57               	goto	u4275
  3343  0B5C  1003               	clrc
  3344  0B5D  0D47               	rlf	??_scale+5,w
  3345  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3346  0B5F  0084               	movwf	4
  3347  0B60  120A  118A  200D  120A  158A  	fcall	stringdir
  3348  0B65  00C8               	movwf	??_scale+6
  3349  0B66  120A  118A  200D  120A  158A  	fcall	stringdir
  3350  0B6B  00C9               	movwf	??_scale+7
  3351  0B6C  120A  118A  200D  120A  158A  	fcall	stringdir
  3352  0B71  00CA               	movwf	??_scale+8
  3353  0B72  120A  118A  200D  120A  158A  	fcall	stringdir
  3354  0B77  00CB               	movwf	??_scale+9
  3355  0B78  084B               	movf	??_scale+9,w
  3356  0B79  00AB               	movwf	___flmul@a+3
  3357  0B7A  084A               	movf	??_scale+8,w
  3358  0B7B  00AA               	movwf	___flmul@a+2
  3359  0B7C  0849               	movf	??_scale+7,w
  3360  0B7D  00A9               	movwf	___flmul@a+1
  3361  0B7E  0848               	movf	??_scale+6,w
  3362  0B7F  00A8               	movwf	___flmul@a
  3363  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  3364  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  3365  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  3366  0B87  0827               	movf	?___flmul+3,w
  3367  0B88  00CF               	movwf	_scale$1217+3
  3368  0B89  0826               	movf	?___flmul+2,w
  3369  0B8A  00CE               	movwf	_scale$1217+2
  3370  0B8B  0825               	movf	?___flmul+1,w
  3371  0B8C  00CD               	movwf	_scale$1217+1
  3372  0B8D  0824               	movf	?___flmul,w
  3373  0B8E  00CC               	movwf	_scale$1217
  3374                           
  3375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3376  0B8F  300A               	movlw	10
  3377  0B90  00F0               	movwf	___awmod@divisor
  3378  0B91  3000               	movlw	0
  3379  0B92  00F1               	movwf	___awmod@divisor+1
  3380  0B93  0850               	movf	scale@scl,w
  3381  0B94  00F2               	movwf	___awmod@dividend
  3382  0B95  01F3               	clrf	___awmod@dividend+1
  3383  0B96  1BF2               	btfsc	___awmod@dividend,7
  3384  0B97  03F3               	decf	___awmod@dividend+1,f
  3385  0B98  160A  158A  23DA  120A  158A  	fcall	___awmod
  3386  0B9D  0870               	movf	?___awmod,w
  3387  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  3388  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  3389  0BA0  00C2               	movwf	??_scale
  3390  0BA1  3001               	movlw	1
  3391  0BA2                     u4285:
  3392  0BA2  1003               	clrc
  3393  0BA3  0DC2               	rlf	??_scale,f
  3394  0BA4  3EFF               	addlw	-1
  3395  0BA5  1D03               	skipz
  3396  0BA6  2BA2               	goto	u4285
  3397  0BA7  1003               	clrc
  3398  0BA8  0D42               	rlf	??_scale,w
  3399  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3400  0BAA  0084               	movwf	4
  3401  0BAB  120A  118A  200D  120A  158A  	fcall	stringdir
  3402  0BB0  00C3               	movwf	??_scale+1
  3403  0BB1  120A  118A  200D  120A  158A  	fcall	stringdir
  3404  0BB6  00C4               	movwf	??_scale+2
  3405  0BB7  120A  118A  200D  120A  158A  	fcall	stringdir
  3406  0BBC  00C5               	movwf	??_scale+3
  3407  0BBD  120A  118A  200D  120A  158A  	fcall	stringdir
  3408  0BC2  00C6               	movwf	??_scale+4
  3409  0BC3  0846               	movf	??_scale+4,w
  3410  0BC4  00A7               	movwf	___flmul@b+3
  3411  0BC5  0845               	movf	??_scale+3,w
  3412  0BC6  00A6               	movwf	___flmul@b+2
  3413  0BC7  0844               	movf	??_scale+2,w
  3414  0BC8  00A5               	movwf	___flmul@b+1
  3415  0BC9  0843               	movf	??_scale+1,w
  3416  0BCA  00A4               	movwf	___flmul@b
  3417  0BCB  084F               	movf	_scale$1217+3,w
  3418  0BCC  00AB               	movwf	___flmul@a+3
  3419  0BCD  084E               	movf	_scale$1217+2,w
  3420  0BCE  00AA               	movwf	___flmul@a+2
  3421  0BCF  084D               	movf	_scale$1217+1,w
  3422  0BD0  00A9               	movwf	___flmul@a+1
  3423  0BD1  084C               	movf	_scale$1217,w
  3424  0BD2  00A8               	movwf	___flmul@a
  3425  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  3426  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  3427  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  3428  0BDA  0827               	movf	?___flmul+3,w
  3429  0BDB  00C1               	movwf	?_scale+3
  3430  0BDC  0826               	movf	?___flmul+2,w
  3431  0BDD  00C0               	movwf	?_scale+2
  3432  0BDE  0825               	movf	?___flmul+1,w
  3433  0BDF  00BF               	movwf	?_scale+1
  3434  0BE0  0824               	movf	?___flmul,w
  3435  0BE1  00BE               	movwf	?_scale
  3436  0BE2  2C9E               	goto	l293
  3437  0BE3                     l2882:
  3438  0BE3  0850               	movf	scale@scl,w
  3439  0BE4  3A80               	xorlw	128
  3440  0BE5  3E75               	addlw	-139
  3441  0BE6  1C03               	skipc
  3442  0BE7  2BE9               	goto	u4291
  3443  0BE8  2BEA               	goto	u4290
  3444  0BE9                     u4291:
  3445  0BE9  2C72               	goto	l2888
  3446  0BEA                     u4290:
  3447  0BEA                     l2884:
  3448                           
  3449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3450  0BEA  300A               	movlw	10
  3451  0BEB  00F0               	movwf	___awmod@divisor
  3452  0BEC  3000               	movlw	0
  3453  0BED  00F1               	movwf	___awmod@divisor+1
  3454  0BEE  0850               	movf	scale@scl,w
  3455  0BEF  00F2               	movwf	___awmod@dividend
  3456  0BF0  01F3               	clrf	___awmod@dividend+1
  3457  0BF1  1BF2               	btfsc	___awmod@dividend,7
  3458  0BF2  03F3               	decf	___awmod@dividend+1,f
  3459  0BF3  160A  158A  23DA  120A  158A  	fcall	___awmod
  3460  0BF8  0870               	movf	?___awmod,w
  3461  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  3462  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  3463  0BFB  00C2               	movwf	??_scale
  3464  0BFC  3001               	movlw	1
  3465  0BFD                     u4305:
  3466  0BFD  1003               	clrc
  3467  0BFE  0DC2               	rlf	??_scale,f
  3468  0BFF  3EFF               	addlw	-1
  3469  0C00  1D03               	skipz
  3470  0C01  2BFD               	goto	u4305
  3471  0C02  1003               	clrc
  3472  0C03  0D42               	rlf	??_scale,w
  3473  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3474  0C05  0084               	movwf	4
  3475  0C06  120A  118A  200D  120A  158A  	fcall	stringdir
  3476  0C0B  00C3               	movwf	??_scale+1
  3477  0C0C  120A  118A  200D  120A  158A  	fcall	stringdir
  3478  0C11  00C4               	movwf	??_scale+2
  3479  0C12  120A  118A  200D  120A  158A  	fcall	stringdir
  3480  0C17  00C5               	movwf	??_scale+3
  3481  0C18  120A  118A  200D  120A  158A  	fcall	stringdir
  3482  0C1D  00C6               	movwf	??_scale+4
  3483  0C1E  0846               	movf	??_scale+4,w
  3484  0C1F  00A7               	movwf	___flmul@b+3
  3485  0C20  0845               	movf	??_scale+3,w
  3486  0C21  00A6               	movwf	___flmul@b+2
  3487  0C22  0844               	movf	??_scale+2,w
  3488  0C23  00A5               	movwf	___flmul@b+1
  3489  0C24  0843               	movf	??_scale+1,w
  3490  0C25  00A4               	movwf	___flmul@b
  3491  0C26  300A               	movlw	10
  3492  0C27  00F7               	movwf	___awdiv@divisor
  3493  0C28  3000               	movlw	0
  3494  0C29  00F8               	movwf	___awdiv@divisor+1
  3495  0C2A  0850               	movf	scale@scl,w
  3496  0C2B  00F9               	movwf	___awdiv@dividend
  3497  0C2C  01FA               	clrf	___awdiv@dividend+1
  3498  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  3499  0C2E  03FA               	decf	___awdiv@dividend+1,f
  3500  0C2F  160A  118A  2033  120A  158A  	fcall	___awdiv
  3501  0C34  0877               	movf	?___awdiv,w
  3502  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  3503  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  3504  0C37  00C7               	movwf	??_scale+5
  3505  0C38  3001               	movlw	1
  3506  0C39                     u4315:
  3507  0C39  1003               	clrc
  3508  0C3A  0DC7               	rlf	??_scale+5,f
  3509  0C3B  3EFF               	addlw	-1
  3510  0C3C  1D03               	skipz
  3511  0C3D  2C39               	goto	u4315
  3512  0C3E  1003               	clrc
  3513  0C3F  0D47               	rlf	??_scale+5,w
  3514  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3515  0C41  0084               	movwf	4
  3516  0C42  120A  118A  200D  120A  158A  	fcall	stringdir
  3517  0C47  00C8               	movwf	??_scale+6
  3518  0C48  120A  118A  200D  120A  158A  	fcall	stringdir
  3519  0C4D  00C9               	movwf	??_scale+7
  3520  0C4E  120A  118A  200D  120A  158A  	fcall	stringdir
  3521  0C53  00CA               	movwf	??_scale+8
  3522  0C54  120A  118A  200D  120A  158A  	fcall	stringdir
  3523  0C59  00CB               	movwf	??_scale+9
  3524  0C5A  084B               	movf	??_scale+9,w
  3525  0C5B  00AB               	movwf	___flmul@a+3
  3526  0C5C  084A               	movf	??_scale+8,w
  3527  0C5D  00AA               	movwf	___flmul@a+2
  3528  0C5E  0849               	movf	??_scale+7,w
  3529  0C5F  00A9               	movwf	___flmul@a+1
  3530  0C60  0848               	movf	??_scale+6,w
  3531  0C61  00A8               	movwf	___flmul@a
  3532  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  3533  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  3534  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  3535  0C69  0827               	movf	?___flmul+3,w
  3536  0C6A  00C1               	movwf	?_scale+3
  3537  0C6B  0826               	movf	?___flmul+2,w
  3538  0C6C  00C0               	movwf	?_scale+2
  3539  0C6D  0825               	movf	?___flmul+1,w
  3540  0C6E  00BF               	movwf	?_scale+1
  3541  0C6F  0824               	movf	?___flmul,w
  3542  0C70  00BE               	movwf	?_scale
  3543  0C71  2C9E               	goto	l293
  3544  0C72                     l2888:
  3545                           
  3546                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3547  0C72  0850               	movf	scale@scl,w
  3548  0C73  00C2               	movwf	??_scale
  3549  0C74  3001               	movlw	1
  3550  0C75                     u4325:
  3551  0C75  1003               	clrc
  3552  0C76  0DC2               	rlf	??_scale,f
  3553  0C77  3EFF               	addlw	-1
  3554  0C78  1D03               	skipz
  3555  0C79  2C75               	goto	u4325
  3556  0C7A  1003               	clrc
  3557  0C7B  0D42               	rlf	??_scale,w
  3558  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3559  0C7D  0084               	movwf	4
  3560  0C7E  120A  118A  200D  120A  158A  	fcall	stringdir
  3561  0C83  00C3               	movwf	??_scale+1
  3562  0C84  120A  118A  200D  120A  158A  	fcall	stringdir
  3563  0C89  00C4               	movwf	??_scale+2
  3564  0C8A  120A  118A  200D  120A  158A  	fcall	stringdir
  3565  0C8F  00C5               	movwf	??_scale+3
  3566  0C90  120A  118A  200D  120A  158A  	fcall	stringdir
  3567  0C95  00C6               	movwf	??_scale+4
  3568  0C96  0846               	movf	??_scale+4,w
  3569  0C97  00C1               	movwf	?_scale+3
  3570  0C98  0845               	movf	??_scale+3,w
  3571  0C99  00C0               	movwf	?_scale+2
  3572  0C9A  0844               	movf	??_scale+2,w
  3573  0C9B  00BF               	movwf	?_scale+1
  3574  0C9C  0843               	movf	??_scale+1,w
  3575  0C9D  00BE               	movwf	?_scale
  3576  0C9E                     l293:
  3577  0C9E  0008               	return
  3578  0C9F                     __end_of_scale:
  3579                           
  3580                           	psect	text3
  3581  1BDA                     __ptext3:	
  3582 ;; *************** function ___awmod *****************
  3583 ;; Defined at:
  3584 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3585 ;; Parameters:    Size  Location     Type
  3586 ;;  divisor         2    0[COMMON] int 
  3587 ;;  dividend        2    2[COMMON] int 
  3588 ;; Auto vars:     Size  Location     Type
  3589 ;;  sign            1    6[COMMON] unsigned char 
  3590 ;;  counter         1    5[COMMON] unsigned char 
  3591 ;; Return value:  Size  Location     Type
  3592 ;;                  2    0[COMMON] int 
  3593 ;; Registers used:
  3594 ;;		wreg, status,2, status,0
  3595 ;; Tracked objects:
  3596 ;;		On entry : 0/0
  3597 ;;		On exit  : 0/0
  3598 ;;		Unchanged: 0/0
  3599 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3600 ;;      Params:         4       0       0       0       0
  3601 ;;      Locals:         2       0       0       0       0
  3602 ;;      Temps:          1       0       0       0       0
  3603 ;;      Totals:         7       0       0       0       0
  3604 ;;Total ram usage:        7 bytes
  3605 ;; Hardware stack levels used:    1
  3606 ;; This function calls:
  3607 ;;		Nothing
  3608 ;; This function is called by:
  3609 ;;		_scale
  3610 ;; This function uses a non-reentrant model
  3611 ;;
  3612                           
  3613                           
  3614                           ;psect for function ___awmod
  3615  1BDA                     ___awmod:
  3616  1BDA                     l2390:	
  3617                           ;incstack = 0
  3618                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3619                           
  3620  1BDA  01F6               	clrf	___awmod@sign
  3621  1BDB                     l2392:
  3622  1BDB  1FF3               	btfss	___awmod@dividend+1,7
  3623  1BDC  2BDE               	goto	u3021
  3624  1BDD  2BDF               	goto	u3020
  3625  1BDE                     u3021:
  3626  1BDE  2BE6               	goto	l2398
  3627  1BDF                     u3020:
  3628  1BDF                     l2394:
  3629  1BDF  09F2               	comf	___awmod@dividend,f
  3630  1BE0  09F3               	comf	___awmod@dividend+1,f
  3631  1BE1  0AF2               	incf	___awmod@dividend,f
  3632  1BE2  1903               	skipnz
  3633  1BE3  0AF3               	incf	___awmod@dividend+1,f
  3634  1BE4                     l2396:
  3635  1BE4  01F6               	clrf	___awmod@sign
  3636  1BE5  0AF6               	incf	___awmod@sign,f
  3637  1BE6                     l2398:
  3638  1BE6  1FF1               	btfss	___awmod@divisor+1,7
  3639  1BE7  2BE9               	goto	u3031
  3640  1BE8  2BEA               	goto	u3030
  3641  1BE9                     u3031:
  3642  1BE9  2BEF               	goto	l2402
  3643  1BEA                     u3030:
  3644  1BEA                     l2400:
  3645  1BEA  09F0               	comf	___awmod@divisor,f
  3646  1BEB  09F1               	comf	___awmod@divisor+1,f
  3647  1BEC  0AF0               	incf	___awmod@divisor,f
  3648  1BED  1903               	skipnz
  3649  1BEE  0AF1               	incf	___awmod@divisor+1,f
  3650  1BEF                     l2402:
  3651  1BEF  0870               	movf	___awmod@divisor,w
  3652  1BF0  0471               	iorwf	___awmod@divisor+1,w
  3653  1BF1  1903               	btfsc	3,2
  3654  1BF2  2BF4               	goto	u3041
  3655  1BF3  2BF5               	goto	u3040
  3656  1BF4                     u3041:
  3657  1BF4  2C24               	goto	l2420
  3658  1BF5                     u3040:
  3659  1BF5                     l2404:
  3660  1BF5  01F5               	clrf	___awmod@counter
  3661  1BF6  0AF5               	incf	___awmod@counter,f
  3662  1BF7  2C03               	goto	l2410
  3663  1BF8                     l2406:
  3664  1BF8  3001               	movlw	1
  3665  1BF9                     u3055:
  3666  1BF9  1003               	clrc
  3667  1BFA  0DF0               	rlf	___awmod@divisor,f
  3668  1BFB  0DF1               	rlf	___awmod@divisor+1,f
  3669  1BFC  3EFF               	addlw	-1
  3670  1BFD  1D03               	skipz
  3671  1BFE  2BF9               	goto	u3055
  3672  1BFF                     l2408:
  3673  1BFF  3001               	movlw	1
  3674  1C00  00F4               	movwf	??___awmod
  3675  1C01  0874               	movf	??___awmod,w
  3676  1C02  07F5               	addwf	___awmod@counter,f
  3677  1C03                     l2410:
  3678  1C03  1FF1               	btfss	___awmod@divisor+1,7
  3679  1C04  2C06               	goto	u3061
  3680  1C05  2C07               	goto	u3060
  3681  1C06                     u3061:
  3682  1C06  2BF8               	goto	l2406
  3683  1C07                     u3060:
  3684  1C07                     l2412:
  3685  1C07  0871               	movf	___awmod@divisor+1,w
  3686  1C08  0273               	subwf	___awmod@dividend+1,w
  3687  1C09  1D03               	skipz
  3688  1C0A  2C0D               	goto	u3075
  3689  1C0B  0870               	movf	___awmod@divisor,w
  3690  1C0C  0272               	subwf	___awmod@dividend,w
  3691  1C0D                     u3075:
  3692  1C0D  1C03               	skipc
  3693  1C0E  2C10               	goto	u3071
  3694  1C0F  2C11               	goto	u3070
  3695  1C10                     u3071:
  3696  1C10  2C17               	goto	l2416
  3697  1C11                     u3070:
  3698  1C11                     l2414:
  3699  1C11  0870               	movf	___awmod@divisor,w
  3700  1C12  02F2               	subwf	___awmod@dividend,f
  3701  1C13  0871               	movf	___awmod@divisor+1,w
  3702  1C14  1C03               	skipc
  3703  1C15  03F3               	decf	___awmod@dividend+1,f
  3704  1C16  02F3               	subwf	___awmod@dividend+1,f
  3705  1C17                     l2416:
  3706  1C17  3001               	movlw	1
  3707  1C18                     u3085:
  3708  1C18  1003               	clrc
  3709  1C19  0CF1               	rrf	___awmod@divisor+1,f
  3710  1C1A  0CF0               	rrf	___awmod@divisor,f
  3711  1C1B  3EFF               	addlw	-1
  3712  1C1C  1D03               	skipz
  3713  1C1D  2C18               	goto	u3085
  3714  1C1E                     l2418:
  3715  1C1E  3001               	movlw	1
  3716  1C1F  02F5               	subwf	___awmod@counter,f
  3717  1C20  1D03               	btfss	3,2
  3718  1C21  2C23               	goto	u3091
  3719  1C22  2C24               	goto	u3090
  3720  1C23                     u3091:
  3721  1C23  2C07               	goto	l2412
  3722  1C24                     u3090:
  3723  1C24                     l2420:
  3724  1C24  0876               	movf	___awmod@sign,w
  3725  1C25  1903               	btfsc	3,2
  3726  1C26  2C28               	goto	u3101
  3727  1C27  2C29               	goto	u3100
  3728  1C28                     u3101:
  3729  1C28  2C2E               	goto	l2424
  3730  1C29                     u3100:
  3731  1C29                     l2422:
  3732  1C29  09F2               	comf	___awmod@dividend,f
  3733  1C2A  09F3               	comf	___awmod@dividend+1,f
  3734  1C2B  0AF2               	incf	___awmod@dividend,f
  3735  1C2C  1903               	skipnz
  3736  1C2D  0AF3               	incf	___awmod@dividend+1,f
  3737  1C2E                     l2424:
  3738  1C2E  0873               	movf	___awmod@dividend+1,w
  3739  1C2F  00F1               	movwf	?___awmod+1
  3740  1C30  0872               	movf	___awmod@dividend,w
  3741  1C31  00F0               	movwf	?___awmod
  3742  1C32                     l555:
  3743  1C32  0008               	return
  3744  1C33                     __end_of___awmod:
  3745                           
  3746                           	psect	text4
  3747  1033                     __ptext4:	
  3748 ;; *************** function ___awdiv *****************
  3749 ;; Defined at:
  3750 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;  divisor         2    7[COMMON] int 
  3753 ;;  dividend        2    9[COMMON] int 
  3754 ;; Auto vars:     Size  Location     Type
  3755 ;;  quotient        2    2[BANK0 ] int 
  3756 ;;  sign            1    1[BANK0 ] unsigned char 
  3757 ;;  counter         1    0[BANK0 ] unsigned char 
  3758 ;; Return value:  Size  Location     Type
  3759 ;;                  2    7[COMMON] int 
  3760 ;; Registers used:
  3761 ;;		wreg, status,2, status,0
  3762 ;; Tracked objects:
  3763 ;;		On entry : 0/0
  3764 ;;		On exit  : 0/0
  3765 ;;		Unchanged: 0/0
  3766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3767 ;;      Params:         4       0       0       0       0
  3768 ;;      Locals:         0       4       0       0       0
  3769 ;;      Temps:          1       0       0       0       0
  3770 ;;      Totals:         5       4       0       0       0
  3771 ;;Total ram usage:        9 bytes
  3772 ;; Hardware stack levels used:    1
  3773 ;; This function calls:
  3774 ;;		Nothing
  3775 ;; This function is called by:
  3776 ;;		_scale
  3777 ;;		_sprintf
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           
  3782                           ;psect for function ___awdiv
  3783  1033                     ___awdiv:
  3784  1033                     l2346:	
  3785                           ;incstack = 0
  3786                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3787                           
  3788  1033  1283               	bcf	3,5	;RP0=0, select bank0
  3789  1034  1303               	bcf	3,6	;RP1=0, select bank0
  3790  1035  01A1               	clrf	___awdiv@sign
  3791  1036                     l2348:
  3792  1036  1FF8               	btfss	___awdiv@divisor+1,7
  3793  1037  2839               	goto	u2921
  3794  1038  283A               	goto	u2920
  3795  1039                     u2921:
  3796  1039  2841               	goto	l2354
  3797  103A                     u2920:
  3798  103A                     l2350:
  3799  103A  09F7               	comf	___awdiv@divisor,f
  3800  103B  09F8               	comf	___awdiv@divisor+1,f
  3801  103C  0AF7               	incf	___awdiv@divisor,f
  3802  103D  1903               	skipnz
  3803  103E  0AF8               	incf	___awdiv@divisor+1,f
  3804  103F                     l2352:
  3805  103F  01A1               	clrf	___awdiv@sign
  3806  1040  0AA1               	incf	___awdiv@sign,f
  3807  1041                     l2354:
  3808  1041  1FFA               	btfss	___awdiv@dividend+1,7
  3809  1042  2844               	goto	u2931
  3810  1043  2845               	goto	u2930
  3811  1044                     u2931:
  3812  1044  284E               	goto	l2360
  3813  1045                     u2930:
  3814  1045                     l2356:
  3815  1045  09F9               	comf	___awdiv@dividend,f
  3816  1046  09FA               	comf	___awdiv@dividend+1,f
  3817  1047  0AF9               	incf	___awdiv@dividend,f
  3818  1048  1903               	skipnz
  3819  1049  0AFA               	incf	___awdiv@dividend+1,f
  3820  104A                     l2358:
  3821  104A  3001               	movlw	1
  3822  104B  00FB               	movwf	??___awdiv
  3823  104C  087B               	movf	??___awdiv,w
  3824  104D  06A1               	xorwf	___awdiv@sign,f
  3825  104E                     l2360:
  3826  104E  01A2               	clrf	___awdiv@quotient
  3827  104F  01A3               	clrf	___awdiv@quotient+1
  3828  1050                     l2362:
  3829  1050  0877               	movf	___awdiv@divisor,w
  3830  1051  0478               	iorwf	___awdiv@divisor+1,w
  3831  1052  1903               	btfsc	3,2
  3832  1053  2855               	goto	u2941
  3833  1054  2856               	goto	u2940
  3834  1055                     u2941:
  3835  1055  288D               	goto	l2382
  3836  1056                     u2940:
  3837  1056                     l2364:
  3838  1056  01A0               	clrf	___awdiv@counter
  3839  1057  0AA0               	incf	___awdiv@counter,f
  3840  1058  2864               	goto	l2370
  3841  1059                     l2366:
  3842  1059  3001               	movlw	1
  3843  105A                     u2955:
  3844  105A  1003               	clrc
  3845  105B  0DF7               	rlf	___awdiv@divisor,f
  3846  105C  0DF8               	rlf	___awdiv@divisor+1,f
  3847  105D  3EFF               	addlw	-1
  3848  105E  1D03               	skipz
  3849  105F  285A               	goto	u2955
  3850  1060                     l2368:
  3851  1060  3001               	movlw	1
  3852  1061  00FB               	movwf	??___awdiv
  3853  1062  087B               	movf	??___awdiv,w
  3854  1063  07A0               	addwf	___awdiv@counter,f
  3855  1064                     l2370:
  3856  1064  1FF8               	btfss	___awdiv@divisor+1,7
  3857  1065  2867               	goto	u2961
  3858  1066  2868               	goto	u2960
  3859  1067                     u2961:
  3860  1067  2859               	goto	l2366
  3861  1068                     u2960:
  3862  1068                     l2372:
  3863  1068  3001               	movlw	1
  3864  1069                     u2975:
  3865  1069  1003               	clrc
  3866  106A  0DA2               	rlf	___awdiv@quotient,f
  3867  106B  0DA3               	rlf	___awdiv@quotient+1,f
  3868  106C  3EFF               	addlw	-1
  3869  106D  1D03               	skipz
  3870  106E  2869               	goto	u2975
  3871  106F  0878               	movf	___awdiv@divisor+1,w
  3872  1070  027A               	subwf	___awdiv@dividend+1,w
  3873  1071  1D03               	skipz
  3874  1072  2875               	goto	u2985
  3875  1073  0877               	movf	___awdiv@divisor,w
  3876  1074  0279               	subwf	___awdiv@dividend,w
  3877  1075                     u2985:
  3878  1075  1C03               	skipc
  3879  1076  2878               	goto	u2981
  3880  1077  2879               	goto	u2980
  3881  1078                     u2981:
  3882  1078  2880               	goto	l2378
  3883  1079                     u2980:
  3884  1079                     l2374:
  3885  1079  0877               	movf	___awdiv@divisor,w
  3886  107A  02F9               	subwf	___awdiv@dividend,f
  3887  107B  0878               	movf	___awdiv@divisor+1,w
  3888  107C  1C03               	skipc
  3889  107D  03FA               	decf	___awdiv@dividend+1,f
  3890  107E  02FA               	subwf	___awdiv@dividend+1,f
  3891  107F                     l2376:
  3892  107F  1422               	bsf	___awdiv@quotient,0
  3893  1080                     l2378:
  3894  1080  3001               	movlw	1
  3895  1081                     u2995:
  3896  1081  1003               	clrc
  3897  1082  0CF8               	rrf	___awdiv@divisor+1,f
  3898  1083  0CF7               	rrf	___awdiv@divisor,f
  3899  1084  3EFF               	addlw	-1
  3900  1085  1D03               	skipz
  3901  1086  2881               	goto	u2995
  3902  1087                     l2380:
  3903  1087  3001               	movlw	1
  3904  1088  02A0               	subwf	___awdiv@counter,f
  3905  1089  1D03               	btfss	3,2
  3906  108A  288C               	goto	u3001
  3907  108B  288D               	goto	u3000
  3908  108C                     u3001:
  3909  108C  2868               	goto	l2372
  3910  108D                     u3000:
  3911  108D                     l2382:
  3912  108D  0821               	movf	___awdiv@sign,w
  3913  108E  1903               	btfsc	3,2
  3914  108F  2891               	goto	u3011
  3915  1090  2892               	goto	u3010
  3916  1091                     u3011:
  3917  1091  2897               	goto	l2386
  3918  1092                     u3010:
  3919  1092                     l2384:
  3920  1092  09A2               	comf	___awdiv@quotient,f
  3921  1093  09A3               	comf	___awdiv@quotient+1,f
  3922  1094  0AA2               	incf	___awdiv@quotient,f
  3923  1095  1903               	skipnz
  3924  1096  0AA3               	incf	___awdiv@quotient+1,f
  3925  1097                     l2386:
  3926  1097  0823               	movf	___awdiv@quotient+1,w
  3927  1098  00F8               	movwf	?___awdiv+1
  3928  1099  0822               	movf	___awdiv@quotient,w
  3929  109A  00F7               	movwf	?___awdiv
  3930  109B                     l542:
  3931  109B  0008               	return
  3932  109C                     __end_of___awdiv:
  3933                           
  3934                           	psect	text5
  3935  197C                     __ptext5:	
  3936 ;; *************** function _isdigit *****************
  3937 ;; Defined at:
  3938 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  3939 ;; Parameters:    Size  Location     Type
  3940 ;;  c               1    wreg     unsigned char 
  3941 ;; Auto vars:     Size  Location     Type
  3942 ;;  c               1    1[COMMON] unsigned char 
  3943 ;; Return value:  Size  Location     Type
  3944 ;;		None               void
  3945 ;; Registers used:
  3946 ;;		wreg, status,2, status,0
  3947 ;; Tracked objects:
  3948 ;;		On entry : 0/0
  3949 ;;		On exit  : 0/0
  3950 ;;		Unchanged: 0/0
  3951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3952 ;;      Params:         0       0       0       0       0
  3953 ;;      Locals:         2       0       0       0       0
  3954 ;;      Temps:          0       0       0       0       0
  3955 ;;      Totals:         2       0       0       0       0
  3956 ;;Total ram usage:        2 bytes
  3957 ;; Hardware stack levels used:    1
  3958 ;; This function calls:
  3959 ;;		Nothing
  3960 ;; This function is called by:
  3961 ;;		_sprintf
  3962 ;; This function uses a non-reentrant model
  3963 ;;
  3964                           
  3965                           
  3966                           ;psect for function _isdigit
  3967  197C                     _isdigit:
  3968                           
  3969                           ;incstack = 0
  3970                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  3971                           ;isdigit@c stored from wreg
  3972  197C  00F1               	movwf	isdigit@c
  3973  197D                     l2892:
  3974  197D  01F0               	clrf	_isdigit$1016
  3975  197E                     l2894:
  3976  197E  303A               	movlw	58
  3977  197F  0271               	subwf	isdigit@c,w
  3978  1980  1803               	skipnc
  3979  1981  2983               	goto	u4331
  3980  1982  2984               	goto	u4330
  3981  1983                     u4331:
  3982  1983  298C               	goto	l2900
  3983  1984                     u4330:
  3984  1984                     l2896:
  3985  1984  3030               	movlw	48
  3986  1985  0271               	subwf	isdigit@c,w
  3987  1986  1C03               	skipc
  3988  1987  2989               	goto	u4341
  3989  1988  298A               	goto	u4340
  3990  1989                     u4341:
  3991  1989  298C               	goto	l2900
  3992  198A                     u4340:
  3993  198A                     l2898:
  3994  198A  01F0               	clrf	_isdigit$1016
  3995  198B  0AF0               	incf	_isdigit$1016,f
  3996  198C                     l2900:
  3997  198C  0C70               	rrf	_isdigit$1016,w
  3998  198D                     l876:
  3999  198D  0008               	return
  4000  198E                     __end_of_isdigit:
  4001                           
  4002                           	psect	text6
  4003  1DF5                     __ptext6:	
  4004 ;; *************** function _fround *****************
  4005 ;; Defined at:
  4006 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4007 ;; Parameters:    Size  Location     Type
  4008 ;;  prec            1    wreg     unsigned char 
  4009 ;; Auto vars:     Size  Location     Type
  4010 ;;  prec            1   49[BANK0 ] unsigned char 
  4011 ;; Return value:  Size  Location     Type
  4012 ;;                  4   30[BANK0 ] unsigned char 
  4013 ;; Registers used:
  4014 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4015 ;; Tracked objects:
  4016 ;;		On entry : 0/0
  4017 ;;		On exit  : 0/0
  4018 ;;		Unchanged: 0/0
  4019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4020 ;;      Params:         0       4       0       0       0
  4021 ;;      Locals:         0       9       0       0       0
  4022 ;;      Temps:          0       7       0       0       0
  4023 ;;      Totals:         0      20       0       0       0
  4024 ;;Total ram usage:       20 bytes
  4025 ;; Hardware stack levels used:    1
  4026 ;; Hardware stack levels required when called:    2
  4027 ;; This function calls:
  4028 ;;		___flmul
  4029 ;;		___lwdiv
  4030 ;;		___lwmod
  4031 ;; This function is called by:
  4032 ;;		_sprintf
  4033 ;; This function uses a non-reentrant model
  4034 ;;
  4035                           
  4036                           
  4037                           ;psect for function _fround
  4038  1DF5                     _fround:
  4039                           
  4040                           ;incstack = 0
  4041                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4042                           ;fround@prec stored from wreg
  4043  1DF5  1283               	bcf	3,5	;RP0=0, select bank0
  4044  1DF6  1303               	bcf	3,6	;RP1=0, select bank0
  4045  1DF7  00D1               	movwf	fround@prec
  4046  1DF8                     l2834:
  4047                           
  4048                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4049  1DF8  306E               	movlw	110
  4050  1DF9  0251               	subwf	fround@prec,w
  4051  1DFA  1C03               	skipc
  4052  1DFB  2DFD               	goto	u4081
  4053  1DFC  2DFE               	goto	u4080
  4054  1DFD                     u4081:
  4055  1DFD  2F0B               	goto	l2842
  4056  1DFE                     u4080:
  4057  1DFE                     l2836:
  4058                           
  4059                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4060  1DFE  303F               	movlw	63
  4061  1DFF  00A7               	movwf	___flmul@b+3
  4062  1E00  3000               	movlw	0
  4063  1E01  00A6               	movwf	___flmul@b+2
  4064  1E02  3000               	movlw	0
  4065  1E03  00A5               	movwf	___flmul@b+1
  4066  1E04  3000               	movlw	0
  4067  1E05  00A4               	movwf	___flmul@b
  4068  1E06  3064               	movlw	100
  4069  1E07  00F6               	movwf	___lwdiv@divisor
  4070  1E08  3000               	movlw	0
  4071  1E09  00F7               	movwf	___lwdiv@divisor+1
  4072  1E0A  0851               	movf	fround@prec,w
  4073  1E0B  00C2               	movwf	??_fround
  4074  1E0C  01C3               	clrf	??_fround+1
  4075  1E0D  0842               	movf	??_fround,w
  4076  1E0E  00F8               	movwf	___lwdiv@dividend
  4077  1E0F  0843               	movf	??_fround+1,w
  4078  1E10  00F9               	movwf	___lwdiv@dividend+1
  4079  1E11  160A  158A  22F2  160A  158A  	fcall	___lwdiv
  4080  1E16  0876               	movf	?___lwdiv,w
  4081  1E17  1283               	bcf	3,5	;RP0=0, select bank0
  4082  1E18  1303               	bcf	3,6	;RP1=0, select bank0
  4083  1E19  00C4               	movwf	??_fround+2
  4084  1E1A  3001               	movlw	1
  4085  1E1B                     u4095:
  4086  1E1B  1003               	clrc
  4087  1E1C  0DC4               	rlf	??_fround+2,f
  4088  1E1D  3EFF               	addlw	-1
  4089  1E1E  1D03               	skipz
  4090  1E1F  2E1B               	goto	u4095
  4091  1E20  1003               	clrc
  4092  1E21  0D44               	rlf	??_fround+2,w
  4093  1E22  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4094  1E23  0084               	movwf	4
  4095  1E24  120A  118A  200D  160A  158A  	fcall	stringdir
  4096  1E29  00C5               	movwf	??_fround+3
  4097  1E2A  120A  118A  200D  160A  158A  	fcall	stringdir
  4098  1E2F  00C6               	movwf	??_fround+4
  4099  1E30  120A  118A  200D  160A  158A  	fcall	stringdir
  4100  1E35  00C7               	movwf	??_fround+5
  4101  1E36  120A  118A  200D  160A  158A  	fcall	stringdir
  4102  1E3B  00C8               	movwf	??_fround+6
  4103  1E3C  0848               	movf	??_fround+6,w
  4104  1E3D  00AB               	movwf	___flmul@a+3
  4105  1E3E  0847               	movf	??_fround+5,w
  4106  1E3F  00AA               	movwf	___flmul@a+2
  4107  1E40  0846               	movf	??_fround+4,w
  4108  1E41  00A9               	movwf	___flmul@a+1
  4109  1E42  0845               	movf	??_fround+3,w
  4110  1E43  00A8               	movwf	___flmul@a
  4111  1E44  120A  158A  249F  160A  158A  	fcall	___flmul
  4112  1E49  1283               	bcf	3,5	;RP0=0, select bank0
  4113  1E4A  1303               	bcf	3,6	;RP1=0, select bank0
  4114  1E4B  0827               	movf	?___flmul+3,w
  4115  1E4C  00D0               	movwf	_fround$1215+3
  4116  1E4D  0826               	movf	?___flmul+2,w
  4117  1E4E  00CF               	movwf	_fround$1215+2
  4118  1E4F  0825               	movf	?___flmul+1,w
  4119  1E50  00CE               	movwf	_fround$1215+1
  4120  1E51  0824               	movf	?___flmul,w
  4121  1E52  00CD               	movwf	_fround$1215
  4122                           
  4123                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4124  1E53  300A               	movlw	10
  4125  1E54  00F6               	movwf	___lwdiv@divisor
  4126  1E55  3000               	movlw	0
  4127  1E56  00F7               	movwf	___lwdiv@divisor+1
  4128  1E57  0851               	movf	fround@prec,w
  4129  1E58  00C2               	movwf	??_fround
  4130  1E59  01C3               	clrf	??_fround+1
  4131  1E5A  0842               	movf	??_fround,w
  4132  1E5B  00F2               	movwf	___lwmod@dividend
  4133  1E5C  0843               	movf	??_fround+1,w
  4134  1E5D  00F3               	movwf	___lwmod@dividend+1
  4135  1E5E  3064               	movlw	100
  4136  1E5F  00F0               	movwf	___lwmod@divisor
  4137  1E60  3000               	movlw	0
  4138  1E61  00F1               	movwf	___lwmod@divisor+1
  4139  1E62  160A  158A  2235  160A  158A  	fcall	___lwmod
  4140  1E67  0871               	movf	?___lwmod+1,w
  4141  1E68  00F9               	movwf	___lwdiv@dividend+1
  4142  1E69  0870               	movf	?___lwmod,w
  4143  1E6A  00F8               	movwf	___lwdiv@dividend
  4144  1E6B  160A  158A  22F2  160A  158A  	fcall	___lwdiv
  4145  1E70  0876               	movf	?___lwdiv,w
  4146  1E71  1283               	bcf	3,5	;RP0=0, select bank0
  4147  1E72  1303               	bcf	3,6	;RP1=0, select bank0
  4148  1E73  00C4               	movwf	??_fround+2
  4149  1E74  3001               	movlw	1
  4150  1E75                     u4105:
  4151  1E75  1003               	clrc
  4152  1E76  0DC4               	rlf	??_fround+2,f
  4153  1E77  3EFF               	addlw	-1
  4154  1E78  1D03               	skipz
  4155  1E79  2E75               	goto	u4105
  4156  1E7A  1003               	clrc
  4157  1E7B  0D44               	rlf	??_fround+2,w
  4158  1E7C  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4159  1E7D  0084               	movwf	4
  4160  1E7E  120A  118A  200D  160A  158A  	fcall	stringdir
  4161  1E83  00C5               	movwf	??_fround+3
  4162  1E84  120A  118A  200D  160A  158A  	fcall	stringdir
  4163  1E89  00C6               	movwf	??_fround+4
  4164  1E8A  120A  118A  200D  160A  158A  	fcall	stringdir
  4165  1E8F  00C7               	movwf	??_fround+5
  4166  1E90  120A  118A  200D  160A  158A  	fcall	stringdir
  4167  1E95  00C8               	movwf	??_fround+6
  4168  1E96  0848               	movf	??_fround+6,w
  4169  1E97  00A7               	movwf	___flmul@b+3
  4170  1E98  0847               	movf	??_fround+5,w
  4171  1E99  00A6               	movwf	___flmul@b+2
  4172  1E9A  0846               	movf	??_fround+4,w
  4173  1E9B  00A5               	movwf	___flmul@b+1
  4174  1E9C  0845               	movf	??_fround+3,w
  4175  1E9D  00A4               	movwf	___flmul@b
  4176  1E9E  0850               	movf	_fround$1215+3,w
  4177  1E9F  00AB               	movwf	___flmul@a+3
  4178  1EA0  084F               	movf	_fround$1215+2,w
  4179  1EA1  00AA               	movwf	___flmul@a+2
  4180  1EA2  084E               	movf	_fround$1215+1,w
  4181  1EA3  00A9               	movwf	___flmul@a+1
  4182  1EA4  084D               	movf	_fround$1215,w
  4183  1EA5  00A8               	movwf	___flmul@a
  4184  1EA6  120A  158A  249F  160A  158A  	fcall	___flmul
  4185  1EAB  1283               	bcf	3,5	;RP0=0, select bank0
  4186  1EAC  1303               	bcf	3,6	;RP1=0, select bank0
  4187  1EAD  0827               	movf	?___flmul+3,w
  4188  1EAE  00CC               	movwf	_fround$1216+3
  4189  1EAF  0826               	movf	?___flmul+2,w
  4190  1EB0  00CB               	movwf	_fround$1216+2
  4191  1EB1  0825               	movf	?___flmul+1,w
  4192  1EB2  00CA               	movwf	_fround$1216+1
  4193  1EB3  0824               	movf	?___flmul,w
  4194  1EB4  00C9               	movwf	_fround$1216
  4195                           
  4196                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4197  1EB5  300A               	movlw	10
  4198  1EB6  00F0               	movwf	___lwmod@divisor
  4199  1EB7  3000               	movlw	0
  4200  1EB8  00F1               	movwf	___lwmod@divisor+1
  4201  1EB9  0851               	movf	fround@prec,w
  4202  1EBA  00C2               	movwf	??_fround
  4203  1EBB  01C3               	clrf	??_fround+1
  4204  1EBC  0842               	movf	??_fround,w
  4205  1EBD  00F2               	movwf	___lwmod@dividend
  4206  1EBE  0843               	movf	??_fround+1,w
  4207  1EBF  00F3               	movwf	___lwmod@dividend+1
  4208  1EC0  160A  158A  2235  160A  158A  	fcall	___lwmod
  4209  1EC5  0870               	movf	?___lwmod,w
  4210  1EC6  1283               	bcf	3,5	;RP0=0, select bank0
  4211  1EC7  1303               	bcf	3,6	;RP1=0, select bank0
  4212  1EC8  00C4               	movwf	??_fround+2
  4213  1EC9  3001               	movlw	1
  4214  1ECA                     u4115:
  4215  1ECA  1003               	clrc
  4216  1ECB  0DC4               	rlf	??_fround+2,f
  4217  1ECC  3EFF               	addlw	-1
  4218  1ECD  1D03               	skipz
  4219  1ECE  2ECA               	goto	u4115
  4220  1ECF  1003               	clrc
  4221  1ED0  0D44               	rlf	??_fround+2,w
  4222  1ED1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4223  1ED2  0084               	movwf	4
  4224  1ED3  120A  118A  200D  160A  158A  	fcall	stringdir
  4225  1ED8  00C5               	movwf	??_fround+3
  4226  1ED9  120A  118A  200D  160A  158A  	fcall	stringdir
  4227  1EDE  00C6               	movwf	??_fround+4
  4228  1EDF  120A  118A  200D  160A  158A  	fcall	stringdir
  4229  1EE4  00C7               	movwf	??_fround+5
  4230  1EE5  120A  118A  200D  160A  158A  	fcall	stringdir
  4231  1EEA  00C8               	movwf	??_fround+6
  4232  1EEB  0848               	movf	??_fround+6,w
  4233  1EEC  00A7               	movwf	___flmul@b+3
  4234  1EED  0847               	movf	??_fround+5,w
  4235  1EEE  00A6               	movwf	___flmul@b+2
  4236  1EEF  0846               	movf	??_fround+4,w
  4237  1EF0  00A5               	movwf	___flmul@b+1
  4238  1EF1  0845               	movf	??_fround+3,w
  4239  1EF2  00A4               	movwf	___flmul@b
  4240  1EF3  084C               	movf	_fround$1216+3,w
  4241  1EF4  00AB               	movwf	___flmul@a+3
  4242  1EF5  084B               	movf	_fround$1216+2,w
  4243  1EF6  00AA               	movwf	___flmul@a+2
  4244  1EF7  084A               	movf	_fround$1216+1,w
  4245  1EF8  00A9               	movwf	___flmul@a+1
  4246  1EF9  0849               	movf	_fround$1216,w
  4247  1EFA  00A8               	movwf	___flmul@a
  4248  1EFB  120A  158A  249F  160A  158A  	fcall	___flmul
  4249  1F00  1283               	bcf	3,5	;RP0=0, select bank0
  4250  1F01  1303               	bcf	3,6	;RP1=0, select bank0
  4251  1F02  0827               	movf	?___flmul+3,w
  4252  1F03  00C1               	movwf	?_fround+3
  4253  1F04  0826               	movf	?___flmul+2,w
  4254  1F05  00C0               	movwf	?_fround+2
  4255  1F06  0825               	movf	?___flmul+1,w
  4256  1F07  00BF               	movwf	?_fround+1
  4257  1F08  0824               	movf	?___flmul,w
  4258  1F09  00BE               	movwf	?_fround
  4259  1F0A  2FFF               	goto	l286
  4260  1F0B                     l2842:
  4261  1F0B  300B               	movlw	11
  4262  1F0C  0251               	subwf	fround@prec,w
  4263  1F0D  1C03               	skipc
  4264  1F0E  2F10               	goto	u4121
  4265  1F0F  2F11               	goto	u4120
  4266  1F10                     u4121:
  4267  1F10  2FBC               	goto	l2848
  4268  1F11                     u4120:
  4269  1F11                     l2844:
  4270                           
  4271                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4272  1F11  303F               	movlw	63
  4273  1F12  00A7               	movwf	___flmul@b+3
  4274  1F13  3000               	movlw	0
  4275  1F14  00A6               	movwf	___flmul@b+2
  4276  1F15  3000               	movlw	0
  4277  1F16  00A5               	movwf	___flmul@b+1
  4278  1F17  3000               	movlw	0
  4279  1F18  00A4               	movwf	___flmul@b
  4280  1F19  300A               	movlw	10
  4281  1F1A  00F6               	movwf	___lwdiv@divisor
  4282  1F1B  3000               	movlw	0
  4283  1F1C  00F7               	movwf	___lwdiv@divisor+1
  4284  1F1D  0851               	movf	fround@prec,w
  4285  1F1E  00C2               	movwf	??_fround
  4286  1F1F  01C3               	clrf	??_fround+1
  4287  1F20  0842               	movf	??_fround,w
  4288  1F21  00F8               	movwf	___lwdiv@dividend
  4289  1F22  0843               	movf	??_fround+1,w
  4290  1F23  00F9               	movwf	___lwdiv@dividend+1
  4291  1F24  160A  158A  22F2  160A  158A  	fcall	___lwdiv
  4292  1F29  0876               	movf	?___lwdiv,w
  4293  1F2A  1283               	bcf	3,5	;RP0=0, select bank0
  4294  1F2B  1303               	bcf	3,6	;RP1=0, select bank0
  4295  1F2C  00C4               	movwf	??_fround+2
  4296  1F2D  3001               	movlw	1
  4297  1F2E                     u4135:
  4298  1F2E  1003               	clrc
  4299  1F2F  0DC4               	rlf	??_fround+2,f
  4300  1F30  3EFF               	addlw	-1
  4301  1F31  1D03               	skipz
  4302  1F32  2F2E               	goto	u4135
  4303  1F33  1003               	clrc
  4304  1F34  0D44               	rlf	??_fround+2,w
  4305  1F35  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4306  1F36  0084               	movwf	4
  4307  1F37  120A  118A  200D  160A  158A  	fcall	stringdir
  4308  1F3C  00C5               	movwf	??_fround+3
  4309  1F3D  120A  118A  200D  160A  158A  	fcall	stringdir
  4310  1F42  00C6               	movwf	??_fround+4
  4311  1F43  120A  118A  200D  160A  158A  	fcall	stringdir
  4312  1F48  00C7               	movwf	??_fround+5
  4313  1F49  120A  118A  200D  160A  158A  	fcall	stringdir
  4314  1F4E  00C8               	movwf	??_fround+6
  4315  1F4F  0848               	movf	??_fround+6,w
  4316  1F50  00AB               	movwf	___flmul@a+3
  4317  1F51  0847               	movf	??_fround+5,w
  4318  1F52  00AA               	movwf	___flmul@a+2
  4319  1F53  0846               	movf	??_fround+4,w
  4320  1F54  00A9               	movwf	___flmul@a+1
  4321  1F55  0845               	movf	??_fround+3,w
  4322  1F56  00A8               	movwf	___flmul@a
  4323  1F57  120A  158A  249F  160A  158A  	fcall	___flmul
  4324  1F5C  1283               	bcf	3,5	;RP0=0, select bank0
  4325  1F5D  1303               	bcf	3,6	;RP1=0, select bank0
  4326  1F5E  0827               	movf	?___flmul+3,w
  4327  1F5F  00D0               	movwf	_fround$1215+3
  4328  1F60  0826               	movf	?___flmul+2,w
  4329  1F61  00CF               	movwf	_fround$1215+2
  4330  1F62  0825               	movf	?___flmul+1,w
  4331  1F63  00CE               	movwf	_fround$1215+1
  4332  1F64  0824               	movf	?___flmul,w
  4333  1F65  00CD               	movwf	_fround$1215
  4334                           
  4335                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4336  1F66  300A               	movlw	10
  4337  1F67  00F0               	movwf	___lwmod@divisor
  4338  1F68  3000               	movlw	0
  4339  1F69  00F1               	movwf	___lwmod@divisor+1
  4340  1F6A  0851               	movf	fround@prec,w
  4341  1F6B  00C2               	movwf	??_fround
  4342  1F6C  01C3               	clrf	??_fround+1
  4343  1F6D  0842               	movf	??_fround,w
  4344  1F6E  00F2               	movwf	___lwmod@dividend
  4345  1F6F  0843               	movf	??_fround+1,w
  4346  1F70  00F3               	movwf	___lwmod@dividend+1
  4347  1F71  160A  158A  2235  160A  158A  	fcall	___lwmod
  4348  1F76  0870               	movf	?___lwmod,w
  4349  1F77  1283               	bcf	3,5	;RP0=0, select bank0
  4350  1F78  1303               	bcf	3,6	;RP1=0, select bank0
  4351  1F79  00C4               	movwf	??_fround+2
  4352  1F7A  3001               	movlw	1
  4353  1F7B                     u4145:
  4354  1F7B  1003               	clrc
  4355  1F7C  0DC4               	rlf	??_fround+2,f
  4356  1F7D  3EFF               	addlw	-1
  4357  1F7E  1D03               	skipz
  4358  1F7F  2F7B               	goto	u4145
  4359  1F80  1003               	clrc
  4360  1F81  0D44               	rlf	??_fround+2,w
  4361  1F82  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4362  1F83  0084               	movwf	4
  4363  1F84  120A  118A  200D  160A  158A  	fcall	stringdir
  4364  1F89  00C5               	movwf	??_fround+3
  4365  1F8A  120A  118A  200D  160A  158A  	fcall	stringdir
  4366  1F8F  00C6               	movwf	??_fround+4
  4367  1F90  120A  118A  200D  160A  158A  	fcall	stringdir
  4368  1F95  00C7               	movwf	??_fround+5
  4369  1F96  120A  118A  200D  160A  158A  	fcall	stringdir
  4370  1F9B  00C8               	movwf	??_fround+6
  4371  1F9C  0848               	movf	??_fround+6,w
  4372  1F9D  00A7               	movwf	___flmul@b+3
  4373  1F9E  0847               	movf	??_fround+5,w
  4374  1F9F  00A6               	movwf	___flmul@b+2
  4375  1FA0  0846               	movf	??_fround+4,w
  4376  1FA1  00A5               	movwf	___flmul@b+1
  4377  1FA2  0845               	movf	??_fround+3,w
  4378  1FA3  00A4               	movwf	___flmul@b
  4379  1FA4  0850               	movf	_fround$1215+3,w
  4380  1FA5  00AB               	movwf	___flmul@a+3
  4381  1FA6  084F               	movf	_fround$1215+2,w
  4382  1FA7  00AA               	movwf	___flmul@a+2
  4383  1FA8  084E               	movf	_fround$1215+1,w
  4384  1FA9  00A9               	movwf	___flmul@a+1
  4385  1FAA  084D               	movf	_fround$1215,w
  4386  1FAB  00A8               	movwf	___flmul@a
  4387  1FAC  120A  158A  249F  160A  158A  	fcall	___flmul
  4388  1FB1  1283               	bcf	3,5	;RP0=0, select bank0
  4389  1FB2  1303               	bcf	3,6	;RP1=0, select bank0
  4390  1FB3  0827               	movf	?___flmul+3,w
  4391  1FB4  00C1               	movwf	?_fround+3
  4392  1FB5  0826               	movf	?___flmul+2,w
  4393  1FB6  00C0               	movwf	?_fround+2
  4394  1FB7  0825               	movf	?___flmul+1,w
  4395  1FB8  00BF               	movwf	?_fround+1
  4396  1FB9  0824               	movf	?___flmul,w
  4397  1FBA  00BE               	movwf	?_fround
  4398  1FBB  2FFF               	goto	l286
  4399  1FBC                     l2848:
  4400                           
  4401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4402  1FBC  303F               	movlw	63
  4403  1FBD  00A7               	movwf	___flmul@b+3
  4404  1FBE  3000               	movlw	0
  4405  1FBF  00A6               	movwf	___flmul@b+2
  4406  1FC0  3000               	movlw	0
  4407  1FC1  00A5               	movwf	___flmul@b+1
  4408  1FC2  3000               	movlw	0
  4409  1FC3  00A4               	movwf	___flmul@b
  4410  1FC4  0851               	movf	fround@prec,w
  4411  1FC5  00C2               	movwf	??_fround
  4412  1FC6  3001               	movlw	1
  4413  1FC7                     u4155:
  4414  1FC7  1003               	clrc
  4415  1FC8  0DC2               	rlf	??_fround,f
  4416  1FC9  3EFF               	addlw	-1
  4417  1FCA  1D03               	skipz
  4418  1FCB  2FC7               	goto	u4155
  4419  1FCC  1003               	clrc
  4420  1FCD  0D42               	rlf	??_fround,w
  4421  1FCE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4422  1FCF  0084               	movwf	4
  4423  1FD0  120A  118A  200D  160A  158A  	fcall	stringdir
  4424  1FD5  00C3               	movwf	??_fround+1
  4425  1FD6  120A  118A  200D  160A  158A  	fcall	stringdir
  4426  1FDB  00C4               	movwf	??_fround+2
  4427  1FDC  120A  118A  200D  160A  158A  	fcall	stringdir
  4428  1FE1  00C5               	movwf	??_fround+3
  4429  1FE2  120A  118A  200D  160A  158A  	fcall	stringdir
  4430  1FE7  00C6               	movwf	??_fround+4
  4431  1FE8  0846               	movf	??_fround+4,w
  4432  1FE9  00AB               	movwf	___flmul@a+3
  4433  1FEA  0845               	movf	??_fround+3,w
  4434  1FEB  00AA               	movwf	___flmul@a+2
  4435  1FEC  0844               	movf	??_fround+2,w
  4436  1FED  00A9               	movwf	___flmul@a+1
  4437  1FEE  0843               	movf	??_fround+1,w
  4438  1FEF  00A8               	movwf	___flmul@a
  4439  1FF0  120A  158A  249F  160A  158A  	fcall	___flmul
  4440  1FF5  1283               	bcf	3,5	;RP0=0, select bank0
  4441  1FF6  1303               	bcf	3,6	;RP1=0, select bank0
  4442  1FF7  0827               	movf	?___flmul+3,w
  4443  1FF8  00C1               	movwf	?_fround+3
  4444  1FF9  0826               	movf	?___flmul+2,w
  4445  1FFA  00C0               	movwf	?_fround+2
  4446  1FFB  0825               	movf	?___flmul+1,w
  4447  1FFC  00BF               	movwf	?_fround+1
  4448  1FFD  0824               	movf	?___flmul,w
  4449  1FFE  00BE               	movwf	?_fround
  4450  1FFF                     l286:
  4451  1FFF  0008               	return
  4452  2000                     __end_of_fround:
  4453                           
  4454                           	psect	text7
  4455  1A35                     __ptext7:	
  4456 ;; *************** function ___lwmod *****************
  4457 ;; Defined at:
  4458 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4459 ;; Parameters:    Size  Location     Type
  4460 ;;  divisor         2    0[COMMON] unsigned int 
  4461 ;;  dividend        2    2[COMMON] unsigned int 
  4462 ;; Auto vars:     Size  Location     Type
  4463 ;;  counter         1    5[COMMON] unsigned char 
  4464 ;; Return value:  Size  Location     Type
  4465 ;;                  2    0[COMMON] unsigned int 
  4466 ;; Registers used:
  4467 ;;		wreg, status,2, status,0
  4468 ;; Tracked objects:
  4469 ;;		On entry : 0/0
  4470 ;;		On exit  : 0/0
  4471 ;;		Unchanged: 0/0
  4472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4473 ;;      Params:         4       0       0       0       0
  4474 ;;      Locals:         1       0       0       0       0
  4475 ;;      Temps:          1       0       0       0       0
  4476 ;;      Totals:         6       0       0       0       0
  4477 ;;Total ram usage:        6 bytes
  4478 ;; Hardware stack levels used:    1
  4479 ;; This function calls:
  4480 ;;		Nothing
  4481 ;; This function is called by:
  4482 ;;		_fround
  4483 ;; This function uses a non-reentrant model
  4484 ;;
  4485                           
  4486                           
  4487                           ;psect for function ___lwmod
  4488  1A35                     ___lwmod:
  4489  1A35                     l2454:	
  4490                           ;incstack = 0
  4491                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4492                           
  4493  1A35  0870               	movf	___lwmod@divisor,w
  4494  1A36  0471               	iorwf	___lwmod@divisor+1,w
  4495  1A37  1903               	btfsc	3,2
  4496  1A38  2A3A               	goto	u3181
  4497  1A39  2A3B               	goto	u3180
  4498  1A3A                     u3181:
  4499  1A3A  2A6A               	goto	l2472
  4500  1A3B                     u3180:
  4501  1A3B                     l2456:
  4502  1A3B  01F5               	clrf	___lwmod@counter
  4503  1A3C  0AF5               	incf	___lwmod@counter,f
  4504  1A3D  2A49               	goto	l2462
  4505  1A3E                     l2458:
  4506  1A3E  3001               	movlw	1
  4507  1A3F                     u3195:
  4508  1A3F  1003               	clrc
  4509  1A40  0DF0               	rlf	___lwmod@divisor,f
  4510  1A41  0DF1               	rlf	___lwmod@divisor+1,f
  4511  1A42  3EFF               	addlw	-1
  4512  1A43  1D03               	skipz
  4513  1A44  2A3F               	goto	u3195
  4514  1A45                     l2460:
  4515  1A45  3001               	movlw	1
  4516  1A46  00F4               	movwf	??___lwmod
  4517  1A47  0874               	movf	??___lwmod,w
  4518  1A48  07F5               	addwf	___lwmod@counter,f
  4519  1A49                     l2462:
  4520  1A49  1FF1               	btfss	___lwmod@divisor+1,7
  4521  1A4A  2A4C               	goto	u3201
  4522  1A4B  2A4D               	goto	u3200
  4523  1A4C                     u3201:
  4524  1A4C  2A3E               	goto	l2458
  4525  1A4D                     u3200:
  4526  1A4D                     l2464:
  4527  1A4D  0871               	movf	___lwmod@divisor+1,w
  4528  1A4E  0273               	subwf	___lwmod@dividend+1,w
  4529  1A4F  1D03               	skipz
  4530  1A50  2A53               	goto	u3215
  4531  1A51  0870               	movf	___lwmod@divisor,w
  4532  1A52  0272               	subwf	___lwmod@dividend,w
  4533  1A53                     u3215:
  4534  1A53  1C03               	skipc
  4535  1A54  2A56               	goto	u3211
  4536  1A55  2A57               	goto	u3210
  4537  1A56                     u3211:
  4538  1A56  2A5D               	goto	l2468
  4539  1A57                     u3210:
  4540  1A57                     l2466:
  4541  1A57  0870               	movf	___lwmod@divisor,w
  4542  1A58  02F2               	subwf	___lwmod@dividend,f
  4543  1A59  0871               	movf	___lwmod@divisor+1,w
  4544  1A5A  1C03               	skipc
  4545  1A5B  03F3               	decf	___lwmod@dividend+1,f
  4546  1A5C  02F3               	subwf	___lwmod@dividend+1,f
  4547  1A5D                     l2468:
  4548  1A5D  3001               	movlw	1
  4549  1A5E                     u3225:
  4550  1A5E  1003               	clrc
  4551  1A5F  0CF1               	rrf	___lwmod@divisor+1,f
  4552  1A60  0CF0               	rrf	___lwmod@divisor,f
  4553  1A61  3EFF               	addlw	-1
  4554  1A62  1D03               	skipz
  4555  1A63  2A5E               	goto	u3225
  4556  1A64                     l2470:
  4557  1A64  3001               	movlw	1
  4558  1A65  02F5               	subwf	___lwmod@counter,f
  4559  1A66  1D03               	btfss	3,2
  4560  1A67  2A69               	goto	u3231
  4561  1A68  2A6A               	goto	u3230
  4562  1A69                     u3231:
  4563  1A69  2A4D               	goto	l2464
  4564  1A6A                     u3230:
  4565  1A6A                     l2472:
  4566  1A6A  0873               	movf	___lwmod@dividend+1,w
  4567  1A6B  00F1               	movwf	?___lwmod+1
  4568  1A6C  0872               	movf	___lwmod@dividend,w
  4569  1A6D  00F0               	movwf	?___lwmod
  4570  1A6E                     l705:
  4571  1A6E  0008               	return
  4572  1A6F                     __end_of___lwmod:
  4573                           
  4574                           	psect	text8
  4575  1AF2                     __ptext8:	
  4576 ;; *************** function ___lwdiv *****************
  4577 ;; Defined at:
  4578 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;  divisor         2    6[COMMON] unsigned int 
  4581 ;;  dividend        2    8[COMMON] unsigned int 
  4582 ;; Auto vars:     Size  Location     Type
  4583 ;;  quotient        2   11[COMMON] unsigned int 
  4584 ;;  counter         1   13[COMMON] unsigned char 
  4585 ;; Return value:  Size  Location     Type
  4586 ;;                  2    6[COMMON] unsigned int 
  4587 ;; Registers used:
  4588 ;;		wreg, status,2, status,0
  4589 ;; Tracked objects:
  4590 ;;		On entry : 0/0
  4591 ;;		On exit  : 0/0
  4592 ;;		Unchanged: 0/0
  4593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4594 ;;      Params:         4       0       0       0       0
  4595 ;;      Locals:         3       0       0       0       0
  4596 ;;      Temps:          1       0       0       0       0
  4597 ;;      Totals:         8       0       0       0       0
  4598 ;;Total ram usage:        8 bytes
  4599 ;; Hardware stack levels used:    1
  4600 ;; This function calls:
  4601 ;;		Nothing
  4602 ;; This function is called by:
  4603 ;;		_fround
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           
  4608                           ;psect for function ___lwdiv
  4609  1AF2                     ___lwdiv:
  4610  1AF2                     l2428:	
  4611                           ;incstack = 0
  4612                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4613                           
  4614  1AF2  01FB               	clrf	___lwdiv@quotient
  4615  1AF3  01FC               	clrf	___lwdiv@quotient+1
  4616  1AF4                     l2430:
  4617  1AF4  0876               	movf	___lwdiv@divisor,w
  4618  1AF5  0477               	iorwf	___lwdiv@divisor+1,w
  4619  1AF6  1903               	btfsc	3,2
  4620  1AF7  2AF9               	goto	u3111
  4621  1AF8  2AFA               	goto	u3110
  4622  1AF9                     u3111:
  4623  1AF9  2B31               	goto	l2450
  4624  1AFA                     u3110:
  4625  1AFA                     l2432:
  4626  1AFA  01FD               	clrf	___lwdiv@counter
  4627  1AFB  0AFD               	incf	___lwdiv@counter,f
  4628  1AFC  2B08               	goto	l2438
  4629  1AFD                     l2434:
  4630  1AFD  3001               	movlw	1
  4631  1AFE                     u3125:
  4632  1AFE  1003               	clrc
  4633  1AFF  0DF6               	rlf	___lwdiv@divisor,f
  4634  1B00  0DF7               	rlf	___lwdiv@divisor+1,f
  4635  1B01  3EFF               	addlw	-1
  4636  1B02  1D03               	skipz
  4637  1B03  2AFE               	goto	u3125
  4638  1B04                     l2436:
  4639  1B04  3001               	movlw	1
  4640  1B05  00FA               	movwf	??___lwdiv
  4641  1B06  087A               	movf	??___lwdiv,w
  4642  1B07  07FD               	addwf	___lwdiv@counter,f
  4643  1B08                     l2438:
  4644  1B08  1FF7               	btfss	___lwdiv@divisor+1,7
  4645  1B09  2B0B               	goto	u3131
  4646  1B0A  2B0C               	goto	u3130
  4647  1B0B                     u3131:
  4648  1B0B  2AFD               	goto	l2434
  4649  1B0C                     u3130:
  4650  1B0C                     l2440:
  4651  1B0C  3001               	movlw	1
  4652  1B0D                     u3145:
  4653  1B0D  1003               	clrc
  4654  1B0E  0DFB               	rlf	___lwdiv@quotient,f
  4655  1B0F  0DFC               	rlf	___lwdiv@quotient+1,f
  4656  1B10  3EFF               	addlw	-1
  4657  1B11  1D03               	skipz
  4658  1B12  2B0D               	goto	u3145
  4659  1B13  0877               	movf	___lwdiv@divisor+1,w
  4660  1B14  0279               	subwf	___lwdiv@dividend+1,w
  4661  1B15  1D03               	skipz
  4662  1B16  2B19               	goto	u3155
  4663  1B17  0876               	movf	___lwdiv@divisor,w
  4664  1B18  0278               	subwf	___lwdiv@dividend,w
  4665  1B19                     u3155:
  4666  1B19  1C03               	skipc
  4667  1B1A  2B1C               	goto	u3151
  4668  1B1B  2B1D               	goto	u3150
  4669  1B1C                     u3151:
  4670  1B1C  2B24               	goto	l2446
  4671  1B1D                     u3150:
  4672  1B1D                     l2442:
  4673  1B1D  0876               	movf	___lwdiv@divisor,w
  4674  1B1E  02F8               	subwf	___lwdiv@dividend,f
  4675  1B1F  0877               	movf	___lwdiv@divisor+1,w
  4676  1B20  1C03               	skipc
  4677  1B21  03F9               	decf	___lwdiv@dividend+1,f
  4678  1B22  02F9               	subwf	___lwdiv@dividend+1,f
  4679  1B23                     l2444:
  4680  1B23  147B               	bsf	___lwdiv@quotient,0
  4681  1B24                     l2446:
  4682  1B24  3001               	movlw	1
  4683  1B25                     u3165:
  4684  1B25  1003               	clrc
  4685  1B26  0CF7               	rrf	___lwdiv@divisor+1,f
  4686  1B27  0CF6               	rrf	___lwdiv@divisor,f
  4687  1B28  3EFF               	addlw	-1
  4688  1B29  1D03               	skipz
  4689  1B2A  2B25               	goto	u3165
  4690  1B2B                     l2448:
  4691  1B2B  3001               	movlw	1
  4692  1B2C  02FD               	subwf	___lwdiv@counter,f
  4693  1B2D  1D03               	btfss	3,2
  4694  1B2E  2B30               	goto	u3171
  4695  1B2F  2B31               	goto	u3170
  4696  1B30                     u3171:
  4697  1B30  2B0C               	goto	l2440
  4698  1B31                     u3170:
  4699  1B31                     l2450:
  4700  1B31  087C               	movf	___lwdiv@quotient+1,w
  4701  1B32  00F7               	movwf	?___lwdiv+1
  4702  1B33  087B               	movf	___lwdiv@quotient,w
  4703  1B34  00F6               	movwf	?___lwdiv
  4704  1B35                     l695:
  4705  1B35  0008               	return
  4706  1B36                     __end_of___lwdiv:
  4707                           
  4708                           	psect	text9
  4709  0C9F                     __ptext9:	
  4710 ;; *************** function ___flmul *****************
  4711 ;; Defined at:
  4712 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4713 ;; Parameters:    Size  Location     Type
  4714 ;;  b               4    4[BANK0 ] unsigned int 
  4715 ;;  a               4    8[BANK0 ] unsigned int 
  4716 ;; Auto vars:     Size  Location     Type
  4717 ;;  prod            4   24[BANK0 ] struct .
  4718 ;;  grs             4   18[BANK0 ] unsigned long 
  4719 ;;  temp            2   28[BANK0 ] struct .
  4720 ;;  bexp            1   23[BANK0 ] unsigned char 
  4721 ;;  aexp            1   22[BANK0 ] unsigned char 
  4722 ;;  sign            1   17[BANK0 ] unsigned char 
  4723 ;; Return value:  Size  Location     Type
  4724 ;;                  4    4[BANK0 ] unsigned char 
  4725 ;; Registers used:
  4726 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  4727 ;; Tracked objects:
  4728 ;;		On entry : 0/0
  4729 ;;		On exit  : 0/0
  4730 ;;		Unchanged: 0/0
  4731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4732 ;;      Params:         0       8       0       0       0
  4733 ;;      Locals:         0      13       0       0       0
  4734 ;;      Temps:          0       5       0       0       0
  4735 ;;      Totals:         0      26       0       0       0
  4736 ;;Total ram usage:       26 bytes
  4737 ;; Hardware stack levels used:    1
  4738 ;; Hardware stack levels required when called:    1
  4739 ;; This function calls:
  4740 ;;		__Umul8_16
  4741 ;; This function is called by:
  4742 ;;		_main
  4743 ;;		_fround
  4744 ;;		_scale
  4745 ;;		_sprintf
  4746 ;; This function uses a non-reentrant model
  4747 ;;
  4748                           
  4749                           
  4750                           ;psect for function ___flmul
  4751  0C9F                     ___flmul:
  4752  0C9F                     l2670:	
  4753                           ;incstack = 0
  4754                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  4755                           
  4756  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  4757  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  4758  0CA1  0827               	movf	___flmul@b+3,w
  4759  0CA2  3980               	andlw	128
  4760  0CA3  00AC               	movwf	??___flmul
  4761  0CA4  082C               	movf	??___flmul,w
  4762  0CA5  00B1               	movwf	___flmul@sign
  4763  0CA6                     l2672:
  4764  0CA6  0827               	movf	___flmul@b+3,w
  4765  0CA7  00AC               	movwf	??___flmul
  4766  0CA8  072C               	addwf	??___flmul,w
  4767  0CA9  00AD               	movwf	??___flmul+1
  4768  0CAA  082D               	movf	??___flmul+1,w
  4769  0CAB  00B7               	movwf	___flmul@bexp
  4770  0CAC                     l2674:
  4771  0CAC  1FA6               	btfss	___flmul@b+2,7
  4772  0CAD  2CAF               	goto	u3701
  4773  0CAE  2CB0               	goto	u3700
  4774  0CAF                     u3701:
  4775  0CAF  2CB1               	goto	l2678
  4776  0CB0                     u3700:
  4777  0CB0                     l2676:
  4778  0CB0  1437               	bsf	___flmul@bexp,0
  4779  0CB1                     l2678:
  4780  0CB1  0837               	movf	___flmul@bexp,w
  4781  0CB2  1903               	btfsc	3,2
  4782  0CB3  2CB5               	goto	u3711
  4783  0CB4  2CB6               	goto	u3710
  4784  0CB5                     u3711:
  4785  0CB5  2CC5               	goto	l2686
  4786  0CB6                     u3710:
  4787  0CB6                     l2680:
  4788  0CB6  0A37               	incf	___flmul@bexp,w
  4789  0CB7  1D03               	btfss	3,2
  4790  0CB8  2CBA               	goto	u3721
  4791  0CB9  2CBB               	goto	u3720
  4792  0CBA                     u3721:
  4793  0CBA  2CC3               	goto	l2684
  4794  0CBB                     u3720:
  4795  0CBB                     l2682:
  4796  0CBB  3000               	movlw	0
  4797  0CBC  00A7               	movwf	___flmul@b+3
  4798  0CBD  3000               	movlw	0
  4799  0CBE  00A6               	movwf	___flmul@b+2
  4800  0CBF  3000               	movlw	0
  4801  0CC0  00A5               	movwf	___flmul@b+1
  4802  0CC1  3000               	movlw	0
  4803  0CC2  00A4               	movwf	___flmul@b
  4804  0CC3                     l2684:
  4805  0CC3  17A6               	bsf	___flmul@b+2,7
  4806  0CC4  2CCD               	goto	l2688
  4807  0CC5                     l2686:
  4808  0CC5  3000               	movlw	0
  4809  0CC6  00A7               	movwf	___flmul@b+3
  4810  0CC7  3000               	movlw	0
  4811  0CC8  00A6               	movwf	___flmul@b+2
  4812  0CC9  3000               	movlw	0
  4813  0CCA  00A5               	movwf	___flmul@b+1
  4814  0CCB  3000               	movlw	0
  4815  0CCC  00A4               	movwf	___flmul@b
  4816  0CCD                     l2688:
  4817  0CCD  082B               	movf	___flmul@a+3,w
  4818  0CCE  3980               	andlw	128
  4819  0CCF  00AC               	movwf	??___flmul
  4820  0CD0  082C               	movf	??___flmul,w
  4821  0CD1  06B1               	xorwf	___flmul@sign,f
  4822  0CD2                     l2690:
  4823  0CD2  082B               	movf	___flmul@a+3,w
  4824  0CD3  00AC               	movwf	??___flmul
  4825  0CD4  072C               	addwf	??___flmul,w
  4826  0CD5  00AD               	movwf	??___flmul+1
  4827  0CD6  082D               	movf	??___flmul+1,w
  4828  0CD7  00B6               	movwf	___flmul@aexp
  4829  0CD8                     l2692:
  4830  0CD8  1FAA               	btfss	___flmul@a+2,7
  4831  0CD9  2CDB               	goto	u3731
  4832  0CDA  2CDC               	goto	u3730
  4833  0CDB                     u3731:
  4834  0CDB  2CDD               	goto	l2696
  4835  0CDC                     u3730:
  4836  0CDC                     l2694:
  4837  0CDC  1436               	bsf	___flmul@aexp,0
  4838  0CDD                     l2696:
  4839  0CDD  0836               	movf	___flmul@aexp,w
  4840  0CDE  1903               	btfsc	3,2
  4841  0CDF  2CE1               	goto	u3741
  4842  0CE0  2CE2               	goto	u3740
  4843  0CE1                     u3741:
  4844  0CE1  2CF1               	goto	l2704
  4845  0CE2                     u3740:
  4846  0CE2                     l2698:
  4847  0CE2  0A36               	incf	___flmul@aexp,w
  4848  0CE3  1D03               	btfss	3,2
  4849  0CE4  2CE6               	goto	u3751
  4850  0CE5  2CE7               	goto	u3750
  4851  0CE6                     u3751:
  4852  0CE6  2CEF               	goto	l2702
  4853  0CE7                     u3750:
  4854  0CE7                     l2700:
  4855  0CE7  3000               	movlw	0
  4856  0CE8  00AB               	movwf	___flmul@a+3
  4857  0CE9  3000               	movlw	0
  4858  0CEA  00AA               	movwf	___flmul@a+2
  4859  0CEB  3000               	movlw	0
  4860  0CEC  00A9               	movwf	___flmul@a+1
  4861  0CED  3000               	movlw	0
  4862  0CEE  00A8               	movwf	___flmul@a
  4863  0CEF                     l2702:
  4864  0CEF  17AA               	bsf	___flmul@a+2,7
  4865  0CF0  2CF9               	goto	l2706
  4866  0CF1                     l2704:
  4867  0CF1  3000               	movlw	0
  4868  0CF2  00AB               	movwf	___flmul@a+3
  4869  0CF3  3000               	movlw	0
  4870  0CF4  00AA               	movwf	___flmul@a+2
  4871  0CF5  3000               	movlw	0
  4872  0CF6  00A9               	movwf	___flmul@a+1
  4873  0CF7  3000               	movlw	0
  4874  0CF8  00A8               	movwf	___flmul@a
  4875  0CF9                     l2706:
  4876  0CF9  0836               	movf	___flmul@aexp,w
  4877  0CFA  1903               	btfsc	3,2
  4878  0CFB  2CFD               	goto	u3761
  4879  0CFC  2CFE               	goto	u3760
  4880  0CFD                     u3761:
  4881  0CFD  2D03               	goto	l2710
  4882  0CFE                     u3760:
  4883  0CFE                     l2708:
  4884  0CFE  0837               	movf	___flmul@bexp,w
  4885  0CFF  1D03               	btfss	3,2
  4886  0D00  2D02               	goto	u3771
  4887  0D01  2D03               	goto	u3770
  4888  0D02                     u3771:
  4889  0D02  2D0C               	goto	l2714
  4890  0D03                     u3770:
  4891  0D03                     l2710:
  4892  0D03  3000               	movlw	0
  4893  0D04  00A7               	movwf	?___flmul+3
  4894  0D05  3000               	movlw	0
  4895  0D06  00A6               	movwf	?___flmul+2
  4896  0D07  3000               	movlw	0
  4897  0D08  00A5               	movwf	?___flmul+1
  4898  0D09  3000               	movlw	0
  4899  0D0A  00A4               	movwf	?___flmul
  4900  0D0B  2FFF               	goto	l812
  4901  0D0C                     l2714:
  4902  0D0C  0824               	movf	___flmul@b,w
  4903  0D0D  00AC               	movwf	??___flmul
  4904  0D0E  082C               	movf	??___flmul,w
  4905  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  4906  0D10  082A               	movf	___flmul@a+2,w
  4907  0D11  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  4908  0D16  0871               	movf	?__Umul8_16+1,w
  4909  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  4910  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  4911  0D19  00BD               	movwf	___flmul@temp+1
  4912  0D1A  0870               	movf	?__Umul8_16,w
  4913  0D1B  00BC               	movwf	___flmul@temp
  4914  0D1C                     l2716:
  4915  0D1C  083C               	movf	___flmul@temp,w
  4916  0D1D  00AC               	movwf	??___flmul
  4917  0D1E  01AD               	clrf	??___flmul+1
  4918  0D1F  01AE               	clrf	??___flmul+2
  4919  0D20  01AF               	clrf	??___flmul+3
  4920  0D21  082F               	movf	??___flmul+3,w
  4921  0D22  00B5               	movwf	___flmul@grs+3
  4922  0D23  082E               	movf	??___flmul+2,w
  4923  0D24  00B4               	movwf	___flmul@grs+2
  4924  0D25  082D               	movf	??___flmul+1,w
  4925  0D26  00B3               	movwf	___flmul@grs+1
  4926  0D27  082C               	movf	??___flmul,w
  4927  0D28  00B2               	movwf	___flmul@grs
  4928  0D29                     l2718:
  4929  0D29  083D               	movf	___flmul@temp+1,w
  4930  0D2A  00AC               	movwf	??___flmul
  4931  0D2B  01AD               	clrf	??___flmul+1
  4932  0D2C  01AE               	clrf	??___flmul+2
  4933  0D2D  01AF               	clrf	??___flmul+3
  4934  0D2E  082F               	movf	??___flmul+3,w
  4935  0D2F  00BB               	movwf	___flmul@prod+3
  4936  0D30  082E               	movf	??___flmul+2,w
  4937  0D31  00BA               	movwf	___flmul@prod+2
  4938  0D32  082D               	movf	??___flmul+1,w
  4939  0D33  00B9               	movwf	___flmul@prod+1
  4940  0D34  082C               	movf	??___flmul,w
  4941  0D35  00B8               	movwf	___flmul@prod
  4942  0D36  0825               	movf	___flmul@b+1,w
  4943  0D37  00AC               	movwf	??___flmul
  4944  0D38  082C               	movf	??___flmul,w
  4945  0D39  00F0               	movwf	__Umul8_16@multiplicand
  4946  0D3A  0829               	movf	___flmul@a+1,w
  4947  0D3B  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  4948  0D40  0871               	movf	?__Umul8_16+1,w
  4949  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  4950  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  4951  0D43  00BD               	movwf	___flmul@temp+1
  4952  0D44  0870               	movf	?__Umul8_16,w
  4953  0D45  00BC               	movwf	___flmul@temp
  4954  0D46                     l2720:
  4955  0D46  083C               	movf	___flmul@temp,w
  4956  0D47  00AC               	movwf	??___flmul
  4957  0D48  01AD               	clrf	??___flmul+1
  4958  0D49  01AE               	clrf	??___flmul+2
  4959  0D4A  01AF               	clrf	??___flmul+3
  4960  0D4B  082C               	movf	??___flmul,w
  4961  0D4C  07B2               	addwf	___flmul@grs,f
  4962  0D4D  082D               	movf	??___flmul+1,w
  4963  0D4E  1103               	clrz
  4964  0D4F  1803               	skipnc
  4965  0D50  3E01               	addlw	1
  4966  0D51  1903               	skipnz
  4967  0D52  2D54               	goto	u3781
  4968  0D53  07B3               	addwf	___flmul@grs+1,f
  4969  0D54                     u3781:
  4970  0D54  082E               	movf	??___flmul+2,w
  4971  0D55  1103               	clrz
  4972  0D56  1803               	skipnc
  4973  0D57  3E01               	addlw	1
  4974  0D58  1903               	skipnz
  4975  0D59  2D5B               	goto	u3782
  4976  0D5A  07B4               	addwf	___flmul@grs+2,f
  4977  0D5B                     u3782:
  4978  0D5B  082F               	movf	??___flmul+3,w
  4979  0D5C  1103               	clrz
  4980  0D5D  1803               	skipnc
  4981  0D5E  3E01               	addlw	1
  4982  0D5F  1903               	skipnz
  4983  0D60  2D62               	goto	u3783
  4984  0D61  07B5               	addwf	___flmul@grs+3,f
  4985  0D62                     u3783:
  4986  0D62                     l2722:
  4987  0D62  083D               	movf	___flmul@temp+1,w
  4988  0D63  00AC               	movwf	??___flmul
  4989  0D64  01AD               	clrf	??___flmul+1
  4990  0D65  01AE               	clrf	??___flmul+2
  4991  0D66  01AF               	clrf	??___flmul+3
  4992  0D67  082C               	movf	??___flmul,w
  4993  0D68  07B8               	addwf	___flmul@prod,f
  4994  0D69  082D               	movf	??___flmul+1,w
  4995  0D6A  1103               	clrz
  4996  0D6B  1803               	skipnc
  4997  0D6C  3E01               	addlw	1
  4998  0D6D  1903               	skipnz
  4999  0D6E  2D70               	goto	u3791
  5000  0D6F  07B9               	addwf	___flmul@prod+1,f
  5001  0D70                     u3791:
  5002  0D70  082E               	movf	??___flmul+2,w
  5003  0D71  1103               	clrz
  5004  0D72  1803               	skipnc
  5005  0D73  3E01               	addlw	1
  5006  0D74  1903               	skipnz
  5007  0D75  2D77               	goto	u3792
  5008  0D76  07BA               	addwf	___flmul@prod+2,f
  5009  0D77                     u3792:
  5010  0D77  082F               	movf	??___flmul+3,w
  5011  0D78  1103               	clrz
  5012  0D79  1803               	skipnc
  5013  0D7A  3E01               	addlw	1
  5014  0D7B  1903               	skipnz
  5015  0D7C  2D7E               	goto	u3793
  5016  0D7D  07BB               	addwf	___flmul@prod+3,f
  5017  0D7E                     u3793:
  5018  0D7E  0826               	movf	___flmul@b+2,w
  5019  0D7F  00AC               	movwf	??___flmul
  5020  0D80  082C               	movf	??___flmul,w
  5021  0D81  00F0               	movwf	__Umul8_16@multiplicand
  5022  0D82  0828               	movf	___flmul@a,w
  5023  0D83  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5024  0D88  0871               	movf	?__Umul8_16+1,w
  5025  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  5026  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  5027  0D8B  00BD               	movwf	___flmul@temp+1
  5028  0D8C  0870               	movf	?__Umul8_16,w
  5029  0D8D  00BC               	movwf	___flmul@temp
  5030  0D8E                     l2724:
  5031  0D8E  083C               	movf	___flmul@temp,w
  5032  0D8F  00AC               	movwf	??___flmul
  5033  0D90  01AD               	clrf	??___flmul+1
  5034  0D91  01AE               	clrf	??___flmul+2
  5035  0D92  01AF               	clrf	??___flmul+3
  5036  0D93  082C               	movf	??___flmul,w
  5037  0D94  07B2               	addwf	___flmul@grs,f
  5038  0D95  082D               	movf	??___flmul+1,w
  5039  0D96  1103               	clrz
  5040  0D97  1803               	skipnc
  5041  0D98  3E01               	addlw	1
  5042  0D99  1903               	skipnz
  5043  0D9A  2D9C               	goto	u3801
  5044  0D9B  07B3               	addwf	___flmul@grs+1,f
  5045  0D9C                     u3801:
  5046  0D9C  082E               	movf	??___flmul+2,w
  5047  0D9D  1103               	clrz
  5048  0D9E  1803               	skipnc
  5049  0D9F  3E01               	addlw	1
  5050  0DA0  1903               	skipnz
  5051  0DA1  2DA3               	goto	u3802
  5052  0DA2  07B4               	addwf	___flmul@grs+2,f
  5053  0DA3                     u3802:
  5054  0DA3  082F               	movf	??___flmul+3,w
  5055  0DA4  1103               	clrz
  5056  0DA5  1803               	skipnc
  5057  0DA6  3E01               	addlw	1
  5058  0DA7  1903               	skipnz
  5059  0DA8  2DAA               	goto	u3803
  5060  0DA9  07B5               	addwf	___flmul@grs+3,f
  5061  0DAA                     u3803:
  5062  0DAA                     l2726:
  5063  0DAA  083D               	movf	___flmul@temp+1,w
  5064  0DAB  00AC               	movwf	??___flmul
  5065  0DAC  01AD               	clrf	??___flmul+1
  5066  0DAD  01AE               	clrf	??___flmul+2
  5067  0DAE  01AF               	clrf	??___flmul+3
  5068  0DAF  082C               	movf	??___flmul,w
  5069  0DB0  07B8               	addwf	___flmul@prod,f
  5070  0DB1  082D               	movf	??___flmul+1,w
  5071  0DB2  1103               	clrz
  5072  0DB3  1803               	skipnc
  5073  0DB4  3E01               	addlw	1
  5074  0DB5  1903               	skipnz
  5075  0DB6  2DB8               	goto	u3811
  5076  0DB7  07B9               	addwf	___flmul@prod+1,f
  5077  0DB8                     u3811:
  5078  0DB8  082E               	movf	??___flmul+2,w
  5079  0DB9  1103               	clrz
  5080  0DBA  1803               	skipnc
  5081  0DBB  3E01               	addlw	1
  5082  0DBC  1903               	skipnz
  5083  0DBD  2DBF               	goto	u3812
  5084  0DBE  07BA               	addwf	___flmul@prod+2,f
  5085  0DBF                     u3812:
  5086  0DBF  082F               	movf	??___flmul+3,w
  5087  0DC0  1103               	clrz
  5088  0DC1  1803               	skipnc
  5089  0DC2  3E01               	addlw	1
  5090  0DC3  1903               	skipnz
  5091  0DC4  2DC6               	goto	u3813
  5092  0DC5  07BB               	addwf	___flmul@prod+3,f
  5093  0DC6                     u3813:
  5094  0DC6                     l2728:
  5095  0DC6  3008               	movlw	8
  5096  0DC7  00AC               	movwf	??___flmul
  5097  0DC8                     u3825:
  5098  0DC8  1003               	clrc
  5099  0DC9  0DB2               	rlf	___flmul@grs,f
  5100  0DCA  0DB3               	rlf	___flmul@grs+1,f
  5101  0DCB  0DB4               	rlf	___flmul@grs+2,f
  5102  0DCC  0DB5               	rlf	___flmul@grs+3,f
  5103  0DCD  0BAC               	decfsz	??___flmul,f
  5104  0DCE  2DC8               	goto	u3825
  5105  0DCF                     l2730:
  5106  0DCF  0825               	movf	___flmul@b+1,w
  5107  0DD0  00AC               	movwf	??___flmul
  5108  0DD1  082C               	movf	??___flmul,w
  5109  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  5110  0DD3  0828               	movf	___flmul@a,w
  5111  0DD4  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5112  0DD9  0871               	movf	?__Umul8_16+1,w
  5113  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  5114  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  5115  0DDC  00BD               	movwf	___flmul@temp+1
  5116  0DDD  0870               	movf	?__Umul8_16,w
  5117  0DDE  00BC               	movwf	___flmul@temp
  5118  0DDF                     l2732:
  5119  0DDF  083C               	movf	___flmul@temp,w
  5120  0DE0  00AC               	movwf	??___flmul
  5121  0DE1  083D               	movf	___flmul@temp+1,w
  5122  0DE2  00AD               	movwf	??___flmul+1
  5123  0DE3  01AE               	clrf	??___flmul+2
  5124  0DE4  01AF               	clrf	??___flmul+3
  5125  0DE5  082C               	movf	??___flmul,w
  5126  0DE6  07B2               	addwf	___flmul@grs,f
  5127  0DE7  082D               	movf	??___flmul+1,w
  5128  0DE8  1103               	clrz
  5129  0DE9  1803               	skipnc
  5130  0DEA  3E01               	addlw	1
  5131  0DEB  1903               	skipnz
  5132  0DEC  2DEE               	goto	u3831
  5133  0DED  07B3               	addwf	___flmul@grs+1,f
  5134  0DEE                     u3831:
  5135  0DEE  082E               	movf	??___flmul+2,w
  5136  0DEF  1103               	clrz
  5137  0DF0  1803               	skipnc
  5138  0DF1  3E01               	addlw	1
  5139  0DF2  1903               	skipnz
  5140  0DF3  2DF5               	goto	u3832
  5141  0DF4  07B4               	addwf	___flmul@grs+2,f
  5142  0DF5                     u3832:
  5143  0DF5  082F               	movf	??___flmul+3,w
  5144  0DF6  1103               	clrz
  5145  0DF7  1803               	skipnc
  5146  0DF8  3E01               	addlw	1
  5147  0DF9  1903               	skipnz
  5148  0DFA  2DFC               	goto	u3833
  5149  0DFB  07B5               	addwf	___flmul@grs+3,f
  5150  0DFC                     u3833:
  5151  0DFC                     l2734:
  5152  0DFC  0824               	movf	___flmul@b,w
  5153  0DFD  00AC               	movwf	??___flmul
  5154  0DFE  082C               	movf	??___flmul,w
  5155  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  5156  0E00  0829               	movf	___flmul@a+1,w
  5157  0E01  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5158  0E06  0871               	movf	?__Umul8_16+1,w
  5159  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  5160  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  5161  0E09  00BD               	movwf	___flmul@temp+1
  5162  0E0A  0870               	movf	?__Umul8_16,w
  5163  0E0B  00BC               	movwf	___flmul@temp
  5164  0E0C                     l2736:
  5165  0E0C  083C               	movf	___flmul@temp,w
  5166  0E0D  00AC               	movwf	??___flmul
  5167  0E0E  083D               	movf	___flmul@temp+1,w
  5168  0E0F  00AD               	movwf	??___flmul+1
  5169  0E10  01AE               	clrf	??___flmul+2
  5170  0E11  01AF               	clrf	??___flmul+3
  5171  0E12  082C               	movf	??___flmul,w
  5172  0E13  07B2               	addwf	___flmul@grs,f
  5173  0E14  082D               	movf	??___flmul+1,w
  5174  0E15  1103               	clrz
  5175  0E16  1803               	skipnc
  5176  0E17  3E01               	addlw	1
  5177  0E18  1903               	skipnz
  5178  0E19  2E1B               	goto	u3841
  5179  0E1A  07B3               	addwf	___flmul@grs+1,f
  5180  0E1B                     u3841:
  5181  0E1B  082E               	movf	??___flmul+2,w
  5182  0E1C  1103               	clrz
  5183  0E1D  1803               	skipnc
  5184  0E1E  3E01               	addlw	1
  5185  0E1F  1903               	skipnz
  5186  0E20  2E22               	goto	u3842
  5187  0E21  07B4               	addwf	___flmul@grs+2,f
  5188  0E22                     u3842:
  5189  0E22  082F               	movf	??___flmul+3,w
  5190  0E23  1103               	clrz
  5191  0E24  1803               	skipnc
  5192  0E25  3E01               	addlw	1
  5193  0E26  1903               	skipnz
  5194  0E27  2E29               	goto	u3843
  5195  0E28  07B5               	addwf	___flmul@grs+3,f
  5196  0E29                     u3843:
  5197  0E29                     l2738:
  5198  0E29  3008               	movlw	8
  5199  0E2A  00AC               	movwf	??___flmul
  5200  0E2B                     u3855:
  5201  0E2B  1003               	clrc
  5202  0E2C  0DB2               	rlf	___flmul@grs,f
  5203  0E2D  0DB3               	rlf	___flmul@grs+1,f
  5204  0E2E  0DB4               	rlf	___flmul@grs+2,f
  5205  0E2F  0DB5               	rlf	___flmul@grs+3,f
  5206  0E30  0BAC               	decfsz	??___flmul,f
  5207  0E31  2E2B               	goto	u3855
  5208  0E32  0824               	movf	___flmul@b,w
  5209  0E33  00AC               	movwf	??___flmul
  5210  0E34  082C               	movf	??___flmul,w
  5211  0E35  00F0               	movwf	__Umul8_16@multiplicand
  5212  0E36  0828               	movf	___flmul@a,w
  5213  0E37  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5214  0E3C  0871               	movf	?__Umul8_16+1,w
  5215  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5216  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5217  0E3F  00BD               	movwf	___flmul@temp+1
  5218  0E40  0870               	movf	?__Umul8_16,w
  5219  0E41  00BC               	movwf	___flmul@temp
  5220  0E42                     l2740:
  5221  0E42  083C               	movf	___flmul@temp,w
  5222  0E43  00AC               	movwf	??___flmul
  5223  0E44  083D               	movf	___flmul@temp+1,w
  5224  0E45  00AD               	movwf	??___flmul+1
  5225  0E46  01AE               	clrf	??___flmul+2
  5226  0E47  01AF               	clrf	??___flmul+3
  5227  0E48  082C               	movf	??___flmul,w
  5228  0E49  07B2               	addwf	___flmul@grs,f
  5229  0E4A  082D               	movf	??___flmul+1,w
  5230  0E4B  1103               	clrz
  5231  0E4C  1803               	skipnc
  5232  0E4D  3E01               	addlw	1
  5233  0E4E  1903               	skipnz
  5234  0E4F  2E51               	goto	u3861
  5235  0E50  07B3               	addwf	___flmul@grs+1,f
  5236  0E51                     u3861:
  5237  0E51  082E               	movf	??___flmul+2,w
  5238  0E52  1103               	clrz
  5239  0E53  1803               	skipnc
  5240  0E54  3E01               	addlw	1
  5241  0E55  1903               	skipnz
  5242  0E56  2E58               	goto	u3862
  5243  0E57  07B4               	addwf	___flmul@grs+2,f
  5244  0E58                     u3862:
  5245  0E58  082F               	movf	??___flmul+3,w
  5246  0E59  1103               	clrz
  5247  0E5A  1803               	skipnc
  5248  0E5B  3E01               	addlw	1
  5249  0E5C  1903               	skipnz
  5250  0E5D  2E5F               	goto	u3863
  5251  0E5E  07B5               	addwf	___flmul@grs+3,f
  5252  0E5F                     u3863:
  5253  0E5F                     l2742:
  5254  0E5F  0825               	movf	___flmul@b+1,w
  5255  0E60  00AC               	movwf	??___flmul
  5256  0E61  082C               	movf	??___flmul,w
  5257  0E62  00F0               	movwf	__Umul8_16@multiplicand
  5258  0E63  082A               	movf	___flmul@a+2,w
  5259  0E64  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5260  0E69  0871               	movf	?__Umul8_16+1,w
  5261  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  5262  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  5263  0E6C  00BD               	movwf	___flmul@temp+1
  5264  0E6D  0870               	movf	?__Umul8_16,w
  5265  0E6E  00BC               	movwf	___flmul@temp
  5266  0E6F  083C               	movf	___flmul@temp,w
  5267  0E70  00AC               	movwf	??___flmul
  5268  0E71  083D               	movf	___flmul@temp+1,w
  5269  0E72  00AD               	movwf	??___flmul+1
  5270  0E73  01AE               	clrf	??___flmul+2
  5271  0E74  01AF               	clrf	??___flmul+3
  5272  0E75  082C               	movf	??___flmul,w
  5273  0E76  07B8               	addwf	___flmul@prod,f
  5274  0E77  082D               	movf	??___flmul+1,w
  5275  0E78  1103               	clrz
  5276  0E79  1803               	skipnc
  5277  0E7A  3E01               	addlw	1
  5278  0E7B  1903               	skipnz
  5279  0E7C  2E7E               	goto	u3871
  5280  0E7D  07B9               	addwf	___flmul@prod+1,f
  5281  0E7E                     u3871:
  5282  0E7E  082E               	movf	??___flmul+2,w
  5283  0E7F  1103               	clrz
  5284  0E80  1803               	skipnc
  5285  0E81  3E01               	addlw	1
  5286  0E82  1903               	skipnz
  5287  0E83  2E85               	goto	u3872
  5288  0E84  07BA               	addwf	___flmul@prod+2,f
  5289  0E85                     u3872:
  5290  0E85  082F               	movf	??___flmul+3,w
  5291  0E86  1103               	clrz
  5292  0E87  1803               	skipnc
  5293  0E88  3E01               	addlw	1
  5294  0E89  1903               	skipnz
  5295  0E8A  2E8C               	goto	u3873
  5296  0E8B  07BB               	addwf	___flmul@prod+3,f
  5297  0E8C                     u3873:
  5298  0E8C                     l2744:
  5299  0E8C  0826               	movf	___flmul@b+2,w
  5300  0E8D  00AC               	movwf	??___flmul
  5301  0E8E  082C               	movf	??___flmul,w
  5302  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  5303  0E90  0829               	movf	___flmul@a+1,w
  5304  0E91  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5305  0E96  0871               	movf	?__Umul8_16+1,w
  5306  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  5307  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  5308  0E99  00BD               	movwf	___flmul@temp+1
  5309  0E9A  0870               	movf	?__Umul8_16,w
  5310  0E9B  00BC               	movwf	___flmul@temp
  5311  0E9C                     l2746:
  5312  0E9C  083C               	movf	___flmul@temp,w
  5313  0E9D  00AC               	movwf	??___flmul
  5314  0E9E  083D               	movf	___flmul@temp+1,w
  5315  0E9F  00AD               	movwf	??___flmul+1
  5316  0EA0  01AE               	clrf	??___flmul+2
  5317  0EA1  01AF               	clrf	??___flmul+3
  5318  0EA2  082C               	movf	??___flmul,w
  5319  0EA3  07B8               	addwf	___flmul@prod,f
  5320  0EA4  082D               	movf	??___flmul+1,w
  5321  0EA5  1103               	clrz
  5322  0EA6  1803               	skipnc
  5323  0EA7  3E01               	addlw	1
  5324  0EA8  1903               	skipnz
  5325  0EA9  2EAB               	goto	u3881
  5326  0EAA  07B9               	addwf	___flmul@prod+1,f
  5327  0EAB                     u3881:
  5328  0EAB  082E               	movf	??___flmul+2,w
  5329  0EAC  1103               	clrz
  5330  0EAD  1803               	skipnc
  5331  0EAE  3E01               	addlw	1
  5332  0EAF  1903               	skipnz
  5333  0EB0  2EB2               	goto	u3882
  5334  0EB1  07BA               	addwf	___flmul@prod+2,f
  5335  0EB2                     u3882:
  5336  0EB2  082F               	movf	??___flmul+3,w
  5337  0EB3  1103               	clrz
  5338  0EB4  1803               	skipnc
  5339  0EB5  3E01               	addlw	1
  5340  0EB6  1903               	skipnz
  5341  0EB7  2EB9               	goto	u3883
  5342  0EB8  07BB               	addwf	___flmul@prod+3,f
  5343  0EB9                     u3883:
  5344  0EB9  0826               	movf	___flmul@b+2,w
  5345  0EBA  00AC               	movwf	??___flmul
  5346  0EBB  082C               	movf	??___flmul,w
  5347  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  5348  0EBD  082A               	movf	___flmul@a+2,w
  5349  0EBE  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5350  0EC3  0871               	movf	?__Umul8_16+1,w
  5351  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  5352  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  5353  0EC6  00BD               	movwf	___flmul@temp+1
  5354  0EC7  0870               	movf	?__Umul8_16,w
  5355  0EC8  00BC               	movwf	___flmul@temp
  5356  0EC9                     l2748:
  5357  0EC9  083C               	movf	___flmul@temp,w
  5358  0ECA  00AC               	movwf	??___flmul
  5359  0ECB  083D               	movf	___flmul@temp+1,w
  5360  0ECC  00AD               	movwf	??___flmul+1
  5361  0ECD  01AE               	clrf	??___flmul+2
  5362  0ECE  01AF               	clrf	??___flmul+3
  5363  0ECF  3008               	movlw	8
  5364  0ED0                     u3895:
  5365  0ED0  1003               	clrc
  5366  0ED1  0DAC               	rlf	??___flmul,f
  5367  0ED2  0DAD               	rlf	??___flmul+1,f
  5368  0ED3  0DAE               	rlf	??___flmul+2,f
  5369  0ED4  0DAF               	rlf	??___flmul+3,f
  5370  0ED5                     u3890:
  5371  0ED5  3EFF               	addlw	-1
  5372  0ED6  1D03               	skipz
  5373  0ED7  2ED0               	goto	u3895
  5374  0ED8  082C               	movf	??___flmul,w
  5375  0ED9  07B8               	addwf	___flmul@prod,f
  5376  0EDA  082D               	movf	??___flmul+1,w
  5377  0EDB  1103               	clrz
  5378  0EDC  1803               	skipnc
  5379  0EDD  3E01               	addlw	1
  5380  0EDE  1903               	skipnz
  5381  0EDF  2EE1               	goto	u3901
  5382  0EE0  07B9               	addwf	___flmul@prod+1,f
  5383  0EE1                     u3901:
  5384  0EE1  082E               	movf	??___flmul+2,w
  5385  0EE2  1103               	clrz
  5386  0EE3  1803               	skipnc
  5387  0EE4  3E01               	addlw	1
  5388  0EE5  1903               	skipnz
  5389  0EE6  2EE8               	goto	u3902
  5390  0EE7  07BA               	addwf	___flmul@prod+2,f
  5391  0EE8                     u3902:
  5392  0EE8  082F               	movf	??___flmul+3,w
  5393  0EE9  1103               	clrz
  5394  0EEA  1803               	skipnc
  5395  0EEB  3E01               	addlw	1
  5396  0EEC  1903               	skipnz
  5397  0EED  2EEF               	goto	u3903
  5398  0EEE  07BB               	addwf	___flmul@prod+3,f
  5399  0EEF                     u3903:
  5400  0EEF                     l2750:
  5401  0EEF  0832               	movf	___flmul@grs,w
  5402  0EF0  00AC               	movwf	??___flmul
  5403  0EF1  0833               	movf	___flmul@grs+1,w
  5404  0EF2  00AD               	movwf	??___flmul+1
  5405  0EF3  0834               	movf	___flmul@grs+2,w
  5406  0EF4  00AE               	movwf	??___flmul+2
  5407  0EF5  0835               	movf	___flmul@grs+3,w
  5408  0EF6  00AF               	movwf	??___flmul+3
  5409  0EF7  3018               	movlw	24
  5410  0EF8                     u3915:
  5411  0EF8  1003               	clrc
  5412  0EF9  0CAF               	rrf	??___flmul+3,f
  5413  0EFA  0CAE               	rrf	??___flmul+2,f
  5414  0EFB  0CAD               	rrf	??___flmul+1,f
  5415  0EFC  0CAC               	rrf	??___flmul,f
  5416  0EFD                     u3910:
  5417  0EFD  3EFF               	addlw	-1
  5418  0EFE  1D03               	skipz
  5419  0EFF  2EF8               	goto	u3915
  5420  0F00  082C               	movf	??___flmul,w
  5421  0F01  07B8               	addwf	___flmul@prod,f
  5422  0F02  082D               	movf	??___flmul+1,w
  5423  0F03  1103               	clrz
  5424  0F04  1803               	skipnc
  5425  0F05  3E01               	addlw	1
  5426  0F06  1903               	skipnz
  5427  0F07  2F09               	goto	u3921
  5428  0F08  07B9               	addwf	___flmul@prod+1,f
  5429  0F09                     u3921:
  5430  0F09  082E               	movf	??___flmul+2,w
  5431  0F0A  1103               	clrz
  5432  0F0B  1803               	skipnc
  5433  0F0C  3E01               	addlw	1
  5434  0F0D  1903               	skipnz
  5435  0F0E  2F10               	goto	u3922
  5436  0F0F  07BA               	addwf	___flmul@prod+2,f
  5437  0F10                     u3922:
  5438  0F10  082F               	movf	??___flmul+3,w
  5439  0F11  1103               	clrz
  5440  0F12  1803               	skipnc
  5441  0F13  3E01               	addlw	1
  5442  0F14  1903               	skipnz
  5443  0F15  2F17               	goto	u3923
  5444  0F16  07BB               	addwf	___flmul@prod+3,f
  5445  0F17                     u3923:
  5446  0F17                     l2752:
  5447  0F17  3008               	movlw	8
  5448  0F18  00AC               	movwf	??___flmul
  5449  0F19                     u3935:
  5450  0F19  1003               	clrc
  5451  0F1A  0DB2               	rlf	___flmul@grs,f
  5452  0F1B  0DB3               	rlf	___flmul@grs+1,f
  5453  0F1C  0DB4               	rlf	___flmul@grs+2,f
  5454  0F1D  0DB5               	rlf	___flmul@grs+3,f
  5455  0F1E  0BAC               	decfsz	??___flmul,f
  5456  0F1F  2F19               	goto	u3935
  5457  0F20                     l2754:
  5458  0F20  0837               	movf	___flmul@bexp,w
  5459  0F21  0736               	addwf	___flmul@aexp,w
  5460  0F22  00AC               	movwf	??___flmul
  5461  0F23  01AD               	clrf	??___flmul+1
  5462  0F24  0DAD               	rlf	??___flmul+1,f
  5463  0F25  082C               	movf	??___flmul,w
  5464  0F26  3E82               	addlw	130
  5465  0F27  00BC               	movwf	___flmul@temp
  5466  0F28  082D               	movf	??___flmul+1,w
  5467  0F29  1803               	skipnc
  5468  0F2A  3E01               	addlw	1
  5469  0F2B  3EFF               	addlw	255
  5470  0F2C  00BD               	movwf	___flmul@temp+1
  5471  0F2D  2F4B               	goto	l2766
  5472  0F2E                     l2756:
  5473  0F2E  3001               	movlw	1
  5474  0F2F  00AC               	movwf	??___flmul
  5475  0F30                     u3945:
  5476  0F30  1003               	clrc
  5477  0F31  0DB8               	rlf	___flmul@prod,f
  5478  0F32  0DB9               	rlf	___flmul@prod+1,f
  5479  0F33  0DBA               	rlf	___flmul@prod+2,f
  5480  0F34  0DBB               	rlf	___flmul@prod+3,f
  5481  0F35  0BAC               	decfsz	??___flmul,f
  5482  0F36  2F30               	goto	u3945
  5483  0F37                     l2758:
  5484  0F37  1FB5               	btfss	___flmul@grs+3,7
  5485  0F38  2F3A               	goto	u3951
  5486  0F39  2F3B               	goto	u3950
  5487  0F3A                     u3951:
  5488  0F3A  2F3C               	goto	l2762
  5489  0F3B                     u3950:
  5490  0F3B                     l2760:
  5491  0F3B  1438               	bsf	___flmul@prod,0
  5492  0F3C                     l2762:
  5493  0F3C  3001               	movlw	1
  5494  0F3D  00AC               	movwf	??___flmul
  5495  0F3E                     u3965:
  5496  0F3E  1003               	clrc
  5497  0F3F  0DB2               	rlf	___flmul@grs,f
  5498  0F40  0DB3               	rlf	___flmul@grs+1,f
  5499  0F41  0DB4               	rlf	___flmul@grs+2,f
  5500  0F42  0DB5               	rlf	___flmul@grs+3,f
  5501  0F43  0BAC               	decfsz	??___flmul,f
  5502  0F44  2F3E               	goto	u3965
  5503  0F45                     l2764:
  5504  0F45  30FF               	movlw	255
  5505  0F46  07BC               	addwf	___flmul@temp,f
  5506  0F47  1803               	skipnc
  5507  0F48  0ABD               	incf	___flmul@temp+1,f
  5508  0F49  30FF               	movlw	255
  5509  0F4A  07BD               	addwf	___flmul@temp+1,f
  5510  0F4B                     l2766:
  5511  0F4B  1FBA               	btfss	___flmul@prod+2,7
  5512  0F4C  2F4E               	goto	u3971
  5513  0F4D  2F4F               	goto	u3970
  5514  0F4E                     u3971:
  5515  0F4E  2F2E               	goto	l2756
  5516  0F4F                     u3970:
  5517  0F4F                     l2768:
  5518  0F4F  01B6               	clrf	___flmul@aexp
  5519  0F50                     l2770:
  5520  0F50  1FB5               	btfss	___flmul@grs+3,7
  5521  0F51  2F53               	goto	u3981
  5522  0F52  2F54               	goto	u3980
  5523  0F53                     u3981:
  5524  0F53  2F70               	goto	l2778
  5525  0F54                     u3980:
  5526  0F54                     l2772:
  5527  0F54  30FF               	movlw	255
  5528  0F55  0532               	andwf	___flmul@grs,w
  5529  0F56  00AC               	movwf	??___flmul
  5530  0F57  30FF               	movlw	255
  5531  0F58  0533               	andwf	___flmul@grs+1,w
  5532  0F59  00AD               	movwf	??___flmul+1
  5533  0F5A  30FF               	movlw	255
  5534  0F5B  0534               	andwf	___flmul@grs+2,w
  5535  0F5C  00AE               	movwf	??___flmul+2
  5536  0F5D  307F               	movlw	127
  5537  0F5E  0535               	andwf	___flmul@grs+3,w
  5538  0F5F  00AF               	movwf	??___flmul+3
  5539  0F60  082F               	movf	??___flmul+3,w
  5540  0F61  042E               	iorwf	??___flmul+2,w
  5541  0F62  042D               	iorwf	??___flmul+1,w
  5542  0F63  042C               	iorwf	??___flmul,w
  5543  0F64  1903               	skipnz
  5544  0F65  2F67               	goto	u3991
  5545  0F66  2F68               	goto	u3990
  5546  0F67                     u3991:
  5547  0F67  2F6B               	goto	l818
  5548  0F68                     u3990:
  5549  0F68                     l2774:
  5550  0F68  01B6               	clrf	___flmul@aexp
  5551  0F69  0AB6               	incf	___flmul@aexp,f
  5552  0F6A  2F70               	goto	l2778
  5553  0F6B                     l818:
  5554  0F6B  1C38               	btfss	___flmul@prod,0
  5555  0F6C  2F6E               	goto	u4001
  5556  0F6D  2F6F               	goto	u4000
  5557  0F6E                     u4001:
  5558  0F6E  2F70               	goto	l2778
  5559  0F6F                     u4000:
  5560  0F6F  2F68               	goto	l2774
  5561  0F70                     l2778:
  5562  0F70  0836               	movf	___flmul@aexp,w
  5563  0F71  1903               	btfsc	3,2
  5564  0F72  2F74               	goto	u4011
  5565  0F73  2F75               	goto	u4010
  5566  0F74                     u4011:
  5567  0F74  2FA6               	goto	l2788
  5568  0F75                     u4010:
  5569  0F75                     l2780:
  5570  0F75  3001               	movlw	1
  5571  0F76  07B8               	addwf	___flmul@prod,f
  5572  0F77  3000               	movlw	0
  5573  0F78  1803               	skipnc
  5574  0F79  3001               	movlw	1
  5575  0F7A  07B9               	addwf	___flmul@prod+1,f
  5576  0F7B  3000               	movlw	0
  5577  0F7C  1803               	skipnc
  5578  0F7D  3001               	movlw	1
  5579  0F7E  07BA               	addwf	___flmul@prod+2,f
  5580  0F7F  3000               	movlw	0
  5581  0F80  1803               	skipnc
  5582  0F81  3001               	movlw	1
  5583  0F82  07BB               	addwf	___flmul@prod+3,f
  5584  0F83                     l2782:
  5585  0F83  1C3B               	btfss	___flmul@prod+3,0
  5586  0F84  2F86               	goto	u4021
  5587  0F85  2F87               	goto	u4020
  5588  0F86                     u4021:
  5589  0F86  2FA6               	goto	l2788
  5590  0F87                     u4020:
  5591  0F87                     l2784:
  5592  0F87  0838               	movf	___flmul@prod,w
  5593  0F88  00AC               	movwf	??___flmul
  5594  0F89  0839               	movf	___flmul@prod+1,w
  5595  0F8A  00AD               	movwf	??___flmul+1
  5596  0F8B  083A               	movf	___flmul@prod+2,w
  5597  0F8C  00AE               	movwf	??___flmul+2
  5598  0F8D  083B               	movf	___flmul@prod+3,w
  5599  0F8E  00AF               	movwf	??___flmul+3
  5600  0F8F  3001               	movlw	1
  5601  0F90  00B0               	movwf	??___flmul+4
  5602  0F91                     u4035:
  5603  0F91  0D2F               	rlf	??___flmul+3,w
  5604  0F92  0CAF               	rrf	??___flmul+3,f
  5605  0F93  0CAE               	rrf	??___flmul+2,f
  5606  0F94  0CAD               	rrf	??___flmul+1,f
  5607  0F95  0CAC               	rrf	??___flmul,f
  5608  0F96                     u4030:
  5609  0F96  0BB0               	decfsz	??___flmul+4,f
  5610  0F97  2F91               	goto	u4035
  5611  0F98  082F               	movf	??___flmul+3,w
  5612  0F99  00BB               	movwf	___flmul@prod+3
  5613  0F9A  082E               	movf	??___flmul+2,w
  5614  0F9B  00BA               	movwf	___flmul@prod+2
  5615  0F9C  082D               	movf	??___flmul+1,w
  5616  0F9D  00B9               	movwf	___flmul@prod+1
  5617  0F9E  082C               	movf	??___flmul,w
  5618  0F9F  00B8               	movwf	___flmul@prod
  5619  0FA0                     l2786:
  5620  0FA0  3001               	movlw	1
  5621  0FA1  07BC               	addwf	___flmul@temp,f
  5622  0FA2  1803               	skipnc
  5623  0FA3  0ABD               	incf	___flmul@temp+1,f
  5624  0FA4  3000               	movlw	0
  5625  0FA5  07BD               	addwf	___flmul@temp+1,f
  5626  0FA6                     l2788:
  5627  0FA6  083D               	movf	___flmul@temp+1,w
  5628  0FA7  3A80               	xorlw	128
  5629  0FA8  00FF               	movwf	btemp+1
  5630  0FA9  3080               	movlw	128
  5631  0FAA  027F               	subwf	btemp+1,w
  5632  0FAB  1D03               	skipz
  5633  0FAC  2FAF               	goto	u4045
  5634  0FAD  30FF               	movlw	255
  5635  0FAE  023C               	subwf	___flmul@temp,w
  5636  0FAF                     u4045:
  5637  0FAF  1C03               	skipc
  5638  0FB0  2FB2               	goto	u4041
  5639  0FB1  2FB3               	goto	u4040
  5640  0FB2                     u4041:
  5641  0FB2  2FBE               	goto	l2792
  5642  0FB3                     u4040:
  5643  0FB3                     l2790:
  5644  0FB3  307F               	movlw	127
  5645  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  5646  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  5647  0FB6  00BB               	movwf	___flmul@prod+3
  5648  0FB7  3080               	movlw	128
  5649  0FB8  00BA               	movwf	___flmul@prod+2
  5650  0FB9  3000               	movlw	0
  5651  0FBA  00B9               	movwf	___flmul@prod+1
  5652  0FBB  3000               	movlw	0
  5653  0FBC  00B8               	movwf	___flmul@prod
  5654  0FBD  2FF3               	goto	l824
  5655  0FBE                     l2792:
  5656  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  5657  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  5658  0FC0  083D               	movf	___flmul@temp+1,w
  5659  0FC1  3A80               	xorlw	128
  5660  0FC2  00FF               	movwf	btemp+1
  5661  0FC3  3080               	movlw	128
  5662  0FC4  027F               	subwf	btemp+1,w
  5663  0FC5  1D03               	skipz
  5664  0FC6  2FC9               	goto	u4055
  5665  0FC7  3001               	movlw	1
  5666  0FC8  023C               	subwf	___flmul@temp,w
  5667  0FC9                     u4055:
  5668  0FC9  1803               	skipnc
  5669  0FCA  2FCC               	goto	u4051
  5670  0FCB  2FCD               	goto	u4050
  5671  0FCC                     u4051:
  5672  0FCC  2FD9               	goto	l2798
  5673  0FCD                     u4050:
  5674  0FCD                     l2794:
  5675  0FCD  3000               	movlw	0
  5676  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  5677  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  5678  0FD0  00BB               	movwf	___flmul@prod+3
  5679  0FD1  3000               	movlw	0
  5680  0FD2  00BA               	movwf	___flmul@prod+2
  5681  0FD3  3000               	movlw	0
  5682  0FD4  00B9               	movwf	___flmul@prod+1
  5683  0FD5  3000               	movlw	0
  5684  0FD6  00B8               	movwf	___flmul@prod
  5685  0FD7                     l2796:
  5686  0FD7  01B1               	clrf	___flmul@sign
  5687  0FD8  2FF3               	goto	l824
  5688  0FD9                     l2798:
  5689  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  5690  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  5691  0FDB  083C               	movf	___flmul@temp,w
  5692  0FDC  00AC               	movwf	??___flmul
  5693  0FDD  082C               	movf	??___flmul,w
  5694  0FDE  00B7               	movwf	___flmul@bexp
  5695  0FDF  30FF               	movlw	255
  5696  0FE0  05B8               	andwf	___flmul@prod,f
  5697  0FE1  30FF               	movlw	255
  5698  0FE2  05B9               	andwf	___flmul@prod+1,f
  5699  0FE3  307F               	movlw	127
  5700  0FE4  05BA               	andwf	___flmul@prod+2,f
  5701  0FE5  3000               	movlw	0
  5702  0FE6  05BB               	andwf	___flmul@prod+3,f
  5703  0FE7                     l2800:
  5704  0FE7  1C37               	btfss	___flmul@bexp,0
  5705  0FE8  2FEA               	goto	u4061
  5706  0FE9  2FEB               	goto	u4060
  5707  0FEA                     u4061:
  5708  0FEA  2FEC               	goto	l2804
  5709  0FEB                     u4060:
  5710  0FEB                     l2802:
  5711  0FEB  17BA               	bsf	___flmul@prod+2,7
  5712  0FEC                     l2804:
  5713  0FEC  0837               	movf	___flmul@bexp,w
  5714  0FED  00AC               	movwf	??___flmul
  5715  0FEE  1003               	clrc
  5716  0FEF  0C2C               	rrf	??___flmul,w
  5717  0FF0  00AD               	movwf	??___flmul+1
  5718  0FF1  082D               	movf	??___flmul+1,w
  5719  0FF2  00BB               	movwf	___flmul@prod+3
  5720  0FF3                     l824:
  5721  0FF3  0831               	movf	___flmul@sign,w
  5722  0FF4  00AC               	movwf	??___flmul
  5723  0FF5  082C               	movf	??___flmul,w
  5724  0FF6  04BB               	iorwf	___flmul@prod+3,f
  5725  0FF7                     l2806:
  5726  0FF7  083B               	movf	___flmul@prod+3,w
  5727  0FF8  00A7               	movwf	?___flmul+3
  5728  0FF9  083A               	movf	___flmul@prod+2,w
  5729  0FFA  00A6               	movwf	?___flmul+2
  5730  0FFB  0839               	movf	___flmul@prod+1,w
  5731  0FFC  00A5               	movwf	?___flmul+1
  5732  0FFD  0838               	movf	___flmul@prod,w
  5733  0FFE  00A4               	movwf	?___flmul
  5734  0FFF                     l812:
  5735  0FFF  0008               	return
  5736  1000                     __end_of___flmul:
  5737                           
  5738                           	psect	text10
  5739  00D5                     __ptext10:	
  5740 ;; *************** function __Umul8_16 *****************
  5741 ;; Defined at:
  5742 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  5743 ;; Parameters:    Size  Location     Type
  5744 ;;  multiplier      1    wreg     unsigned char 
  5745 ;;  multiplicand    1    0[COMMON] unsigned char 
  5746 ;; Auto vars:     Size  Location     Type
  5747 ;;  multiplier      1    8[COMMON] unsigned char 
  5748 ;;  word_mpld       2    6[COMMON] unsigned int 
  5749 ;;  product         2    4[COMMON] unsigned int 
  5750 ;; Return value:  Size  Location     Type
  5751 ;;                  2    0[COMMON] unsigned int 
  5752 ;; Registers used:
  5753 ;;		wreg, status,2, status,0
  5754 ;; Tracked objects:
  5755 ;;		On entry : 0/0
  5756 ;;		On exit  : 0/0
  5757 ;;		Unchanged: 0/0
  5758 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5759 ;;      Params:         2       0       0       0       0
  5760 ;;      Locals:         5       0       0       0       0
  5761 ;;      Temps:          2       0       0       0       0
  5762 ;;      Totals:         9       0       0       0       0
  5763 ;;Total ram usage:        9 bytes
  5764 ;; Hardware stack levels used:    1
  5765 ;; This function calls:
  5766 ;;		Nothing
  5767 ;; This function is called by:
  5768 ;;		___flmul
  5769 ;; This function uses a non-reentrant model
  5770 ;;
  5771                           
  5772                           
  5773                           ;psect for function __Umul8_16
  5774  00D5                     __Umul8_16:
  5775                           
  5776                           ;incstack = 0
  5777                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  5778                           ;__Umul8_16@multiplier stored from wreg
  5779  00D5  00F8               	movwf	__Umul8_16@multiplier
  5780  00D6                     l2330:
  5781  00D6  01F4               	clrf	__Umul8_16@product
  5782  00D7  01F5               	clrf	__Umul8_16@product+1
  5783  00D8                     l2332:
  5784  00D8  0870               	movf	__Umul8_16@multiplicand,w
  5785  00D9  00F2               	movwf	??__Umul8_16
  5786  00DA  01F3               	clrf	??__Umul8_16+1
  5787  00DB  0872               	movf	??__Umul8_16,w
  5788  00DC  00F6               	movwf	__Umul8_16@word_mpld
  5789  00DD  0873               	movf	??__Umul8_16+1,w
  5790  00DE  00F7               	movwf	__Umul8_16@word_mpld+1
  5791  00DF                     l2334:
  5792  00DF  1C78               	btfss	__Umul8_16@multiplier,0
  5793  00E0  28E2               	goto	u2891
  5794  00E1  28E3               	goto	u2890
  5795  00E2                     u2891:
  5796  00E2  28E9               	goto	l831
  5797  00E3                     u2890:
  5798  00E3                     l2336:
  5799  00E3  0876               	movf	__Umul8_16@word_mpld,w
  5800  00E4  07F4               	addwf	__Umul8_16@product,f
  5801  00E5  1803               	skipnc
  5802  00E6  0AF5               	incf	__Umul8_16@product+1,f
  5803  00E7  0877               	movf	__Umul8_16@word_mpld+1,w
  5804  00E8  07F5               	addwf	__Umul8_16@product+1,f
  5805  00E9                     l831:
  5806  00E9  3001               	movlw	1
  5807  00EA                     u2905:
  5808  00EA  1003               	clrc
  5809  00EB  0DF6               	rlf	__Umul8_16@word_mpld,f
  5810  00EC  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  5811  00ED  3EFF               	addlw	-1
  5812  00EE  1D03               	skipz
  5813  00EF  28EA               	goto	u2905
  5814  00F0  1003               	clrc
  5815  00F1  0CF8               	rrf	__Umul8_16@multiplier,f
  5816  00F2                     l2338:
  5817  00F2  0878               	movf	__Umul8_16@multiplier,w
  5818  00F3  1D03               	btfss	3,2
  5819  00F4  28F6               	goto	u2911
  5820  00F5  28F7               	goto	u2910
  5821  00F6                     u2911:
  5822  00F6  28DF               	goto	l2334
  5823  00F7                     u2910:
  5824  00F7                     l2340:
  5825  00F7  0875               	movf	__Umul8_16@product+1,w
  5826  00F8  00F1               	movwf	?__Umul8_16+1
  5827  00F9  0874               	movf	__Umul8_16@product,w
  5828  00FA  00F0               	movwf	?__Umul8_16
  5829  00FB                     l833:
  5830  00FB  0008               	return
  5831  00FC                     __end_of__Umul8_16:
  5832                           
  5833                           	psect	text11
  5834  0883                     __ptext11:	
  5835 ;; *************** function __tdiv_to_l_ *****************
  5836 ;; Defined at:
  5837 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  5838 ;; Parameters:    Size  Location     Type
  5839 ;;  f1              4    0[COMMON] float 
  5840 ;;  f2              4    4[COMMON] float 
  5841 ;; Auto vars:     Size  Location     Type
  5842 ;;  quot            4    0[BANK0 ] unsigned long 
  5843 ;;  exp1            1    5[BANK0 ] unsigned char 
  5844 ;;  cntr            1    4[BANK0 ] unsigned char 
  5845 ;; Return value:  Size  Location     Type
  5846 ;;                  4    0[COMMON] unsigned long 
  5847 ;; Registers used:
  5848 ;;		wreg, status,2, status,0
  5849 ;; Tracked objects:
  5850 ;;		On entry : 0/0
  5851 ;;		On exit  : 0/0
  5852 ;;		Unchanged: 0/0
  5853 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5854 ;;      Params:         8       0       0       0       0
  5855 ;;      Locals:         0       6       0       0       0
  5856 ;;      Temps:          4       0       0       0       0
  5857 ;;      Totals:        12       6       0       0       0
  5858 ;;Total ram usage:       18 bytes
  5859 ;; Hardware stack levels used:    1
  5860 ;; This function calls:
  5861 ;;		Nothing
  5862 ;; This function is called by:
  5863 ;;		_sprintf
  5864 ;; This function uses a non-reentrant model
  5865 ;;
  5866                           
  5867                           
  5868                           ;psect for function __tdiv_to_l_
  5869  0883                     __tdiv_to_l_:
  5870  0883                     l2904:	
  5871                           ;incstack = 0
  5872                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  5873                           
  5874  0883  0870               	movf	__tdiv_to_l_@f1,w
  5875  0884  00F8               	movwf	??__tdiv_to_l_
  5876  0885  0871               	movf	__tdiv_to_l_@f1+1,w
  5877  0886  00F9               	movwf	??__tdiv_to_l_+1
  5878  0887  0872               	movf	__tdiv_to_l_@f1+2,w
  5879  0888  00FA               	movwf	??__tdiv_to_l_+2
  5880  0889  1003               	clrc
  5881  088A  0D79               	rlf	??__tdiv_to_l_+1,w
  5882  088B  0D7A               	rlf	??__tdiv_to_l_+2,w
  5883  088C  00FB               	movwf	??__tdiv_to_l_+3
  5884  088D  087B               	movf	??__tdiv_to_l_+3,w
  5885  088E  1283               	bcf	3,5	;RP0=0, select bank0
  5886  088F  1303               	bcf	3,6	;RP1=0, select bank0
  5887  0890  00A5               	movwf	__tdiv_to_l_@exp1
  5888  0891  0825               	movf	__tdiv_to_l_@exp1,w
  5889  0892  1D03               	btfss	3,2
  5890  0893  2895               	goto	u4351
  5891  0894  2896               	goto	u4350
  5892  0895                     u4351:
  5893  0895  289F               	goto	l2910
  5894  0896                     u4350:
  5895  0896                     l2906:
  5896  0896  3000               	movlw	0
  5897  0897  00F3               	movwf	?__tdiv_to_l_+3
  5898  0898  3000               	movlw	0
  5899  0899  00F2               	movwf	?__tdiv_to_l_+2
  5900  089A  3000               	movlw	0
  5901  089B  00F1               	movwf	?__tdiv_to_l_+1
  5902  089C  3000               	movlw	0
  5903  089D  00F0               	movwf	?__tdiv_to_l_
  5904  089E  293F               	goto	l606
  5905  089F                     l2910:
  5906  089F  0874               	movf	__tdiv_to_l_@f2,w
  5907  08A0  00F8               	movwf	??__tdiv_to_l_
  5908  08A1  0875               	movf	__tdiv_to_l_@f2+1,w
  5909  08A2  00F9               	movwf	??__tdiv_to_l_+1
  5910  08A3  0876               	movf	__tdiv_to_l_@f2+2,w
  5911  08A4  00FA               	movwf	??__tdiv_to_l_+2
  5912  08A5  1003               	clrc
  5913  08A6  0D79               	rlf	??__tdiv_to_l_+1,w
  5914  08A7  0D7A               	rlf	??__tdiv_to_l_+2,w
  5915  08A8  00FB               	movwf	??__tdiv_to_l_+3
  5916  08A9  087B               	movf	??__tdiv_to_l_+3,w
  5917  08AA  00A4               	movwf	__tdiv_to_l_@cntr
  5918  08AB  0824               	movf	__tdiv_to_l_@cntr,w
  5919  08AC  1D03               	btfss	3,2
  5920  08AD  28AF               	goto	u4361
  5921  08AE  28B0               	goto	u4360
  5922  08AF                     u4361:
  5923  08AF  28B1               	goto	l607
  5924  08B0                     u4360:
  5925  08B0  2896               	goto	l2906
  5926  08B1                     l607:
  5927  08B1  17F1               	bsf	__tdiv_to_l_@f1+1,7
  5928  08B2                     l2916:
  5929  08B2  30FF               	movlw	255
  5930  08B3  05F0               	andwf	__tdiv_to_l_@f1,f
  5931  08B4  30FF               	movlw	255
  5932  08B5  05F1               	andwf	__tdiv_to_l_@f1+1,f
  5933  08B6  3000               	movlw	0
  5934  08B7  05F2               	andwf	__tdiv_to_l_@f1+2,f
  5935  08B8                     l2918:
  5936  08B8  17F5               	bsf	__tdiv_to_l_@f2+1,7
  5937  08B9  30FF               	movlw	255
  5938  08BA  05F4               	andwf	__tdiv_to_l_@f2,f
  5939  08BB  30FF               	movlw	255
  5940  08BC  05F5               	andwf	__tdiv_to_l_@f2+1,f
  5941  08BD  3000               	movlw	0
  5942  08BE  05F6               	andwf	__tdiv_to_l_@f2+2,f
  5943  08BF  3000               	movlw	0
  5944  08C0  00A3               	movwf	__tdiv_to_l_@quot+3
  5945  08C1  3000               	movlw	0
  5946  08C2  00A2               	movwf	__tdiv_to_l_@quot+2
  5947  08C3  3000               	movlw	0
  5948  08C4  00A1               	movwf	__tdiv_to_l_@quot+1
  5949  08C5  3000               	movlw	0
  5950  08C6  00A0               	movwf	__tdiv_to_l_@quot
  5951  08C7                     l2920:
  5952  08C7  307F               	movlw	127
  5953  08C8  02A5               	subwf	__tdiv_to_l_@exp1,f
  5954  08C9                     l2922:
  5955  08C9  3098               	movlw	152
  5956  08CA  0724               	addwf	__tdiv_to_l_@cntr,w
  5957  08CB  00F8               	movwf	??__tdiv_to_l_
  5958  08CC  0878               	movf	??__tdiv_to_l_,w
  5959  08CD  02A5               	subwf	__tdiv_to_l_@exp1,f
  5960  08CE  3018               	movlw	24
  5961  08CF  00F8               	movwf	??__tdiv_to_l_
  5962  08D0  0878               	movf	??__tdiv_to_l_,w
  5963  08D1  00A4               	movwf	__tdiv_to_l_@cntr
  5964  08D2                     l2924:
  5965  08D2  3001               	movlw	1
  5966  08D3  00F8               	movwf	??__tdiv_to_l_
  5967  08D4                     u4375:
  5968  08D4  1003               	clrc
  5969  08D5  0DA0               	rlf	__tdiv_to_l_@quot,f
  5970  08D6  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  5971  08D7  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  5972  08D8  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  5973  08D9  0BF8               	decfsz	??__tdiv_to_l_,f
  5974  08DA  28D4               	goto	u4375
  5975  08DB                     l2926:
  5976  08DB  0876               	movf	__tdiv_to_l_@f2+2,w
  5977  08DC  0272               	subwf	__tdiv_to_l_@f1+2,w
  5978  08DD  1D03               	skipz
  5979  08DE  28E5               	goto	u4385
  5980  08DF  0875               	movf	__tdiv_to_l_@f2+1,w
  5981  08E0  0271               	subwf	__tdiv_to_l_@f1+1,w
  5982  08E1  1D03               	skipz
  5983  08E2  28E5               	goto	u4385
  5984  08E3  0874               	movf	__tdiv_to_l_@f2,w
  5985  08E4  0270               	subwf	__tdiv_to_l_@f1,w
  5986  08E5                     u4385:
  5987  08E5  1C03               	skipc
  5988  08E6  28E8               	goto	u4381
  5989  08E7  28E9               	goto	u4380
  5990  08E8                     u4381:
  5991  08E8  28F4               	goto	l2932
  5992  08E9                     u4380:
  5993  08E9                     l2928:
  5994  08E9  0874               	movf	__tdiv_to_l_@f2,w
  5995  08EA  02F0               	subwf	__tdiv_to_l_@f1,f
  5996  08EB  0875               	movf	__tdiv_to_l_@f2+1,w
  5997  08EC  1C03               	skipc
  5998  08ED  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  5999  08EE  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6000  08EF  0876               	movf	__tdiv_to_l_@f2+2,w
  6001  08F0  1C03               	skipc
  6002  08F1  0A76               	incf	__tdiv_to_l_@f2+2,w
  6003  08F2  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6004  08F3                     l2930:
  6005  08F3  1420               	bsf	__tdiv_to_l_@quot,0
  6006  08F4                     l2932:
  6007  08F4  3001               	movlw	1
  6008  08F5                     u4395:
  6009  08F5  1003               	clrc
  6010  08F6  0DF0               	rlf	__tdiv_to_l_@f1,f
  6011  08F7  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6012  08F8  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6013  08F9  3EFF               	addlw	-1
  6014  08FA  1D03               	skipz
  6015  08FB  28F5               	goto	u4395
  6016  08FC                     l2934:
  6017  08FC  3001               	movlw	1
  6018  08FD  02A4               	subwf	__tdiv_to_l_@cntr,f
  6019  08FE  1D03               	btfss	3,2
  6020  08FF  2901               	goto	u4401
  6021  0900  2902               	goto	u4400
  6022  0901                     u4401:
  6023  0901  28D2               	goto	l2924
  6024  0902                     u4400:
  6025  0902                     l610:
  6026  0902  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6027  0903  2905               	goto	u4411
  6028  0904  2906               	goto	u4410
  6029  0905                     u4411:
  6030  0905  2920               	goto	l2944
  6031  0906                     u4410:
  6032  0906                     l2936:
  6033  0906  0825               	movf	__tdiv_to_l_@exp1,w
  6034  0907  3A80               	xorlw	128
  6035  0908  3E97               	addlw	151
  6036  0909  1803               	skipnc
  6037  090A  290C               	goto	u4421
  6038  090B  290D               	goto	u4420
  6039  090C                     u4421:
  6040  090C  290E               	goto	l2942
  6041  090D                     u4420:
  6042  090D  2896               	goto	l2906
  6043  090E                     l2942:
  6044  090E  3001               	movlw	1
  6045  090F                     u4435:
  6046  090F  1003               	clrc
  6047  0910  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6048  0911  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6049  0912  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6050  0913  0CA0               	rrf	__tdiv_to_l_@quot,f
  6051  0914  3EFF               	addlw	-1
  6052  0915  1D03               	skipz
  6053  0916  290F               	goto	u4435
  6054  0917  3001               	movlw	1
  6055  0918  00F8               	movwf	??__tdiv_to_l_
  6056  0919  0878               	movf	??__tdiv_to_l_,w
  6057  091A  07A5               	addwf	__tdiv_to_l_@exp1,f
  6058  091B  1D03               	btfss	3,2
  6059  091C  291E               	goto	u4441
  6060  091D  291F               	goto	u4440
  6061  091E                     u4441:
  6062  091E  290E               	goto	l2942
  6063  091F                     u4440:
  6064  091F  2937               	goto	l2952
  6065  0920                     l2944:
  6066  0920  3018               	movlw	24
  6067  0921  0225               	subwf	__tdiv_to_l_@exp1,w
  6068  0922  1C03               	skipc
  6069  0923  2925               	goto	u4451
  6070  0924  2926               	goto	u4450
  6071  0925                     u4451:
  6072  0925  2932               	goto	l617
  6073  0926                     u4450:
  6074  0926  2896               	goto	l2906
  6075  0927                     l2950:
  6076  0927  3001               	movlw	1
  6077  0928  00F8               	movwf	??__tdiv_to_l_
  6078  0929                     u4465:
  6079  0929  1003               	clrc
  6080  092A  0DA0               	rlf	__tdiv_to_l_@quot,f
  6081  092B  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6082  092C  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6083  092D  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6084  092E  0BF8               	decfsz	??__tdiv_to_l_,f
  6085  092F  2929               	goto	u4465
  6086  0930  3001               	movlw	1
  6087  0931  02A5               	subwf	__tdiv_to_l_@exp1,f
  6088  0932                     l617:
  6089  0932  0825               	movf	__tdiv_to_l_@exp1,w
  6090  0933  1D03               	btfss	3,2
  6091  0934  2936               	goto	u4471
  6092  0935  2937               	goto	u4470
  6093  0936                     u4471:
  6094  0936  2927               	goto	l2950
  6095  0937                     u4470:
  6096  0937                     l2952:
  6097  0937  0823               	movf	__tdiv_to_l_@quot+3,w
  6098  0938  00F3               	movwf	?__tdiv_to_l_+3
  6099  0939  0822               	movf	__tdiv_to_l_@quot+2,w
  6100  093A  00F2               	movwf	?__tdiv_to_l_+2
  6101  093B  0821               	movf	__tdiv_to_l_@quot+1,w
  6102  093C  00F1               	movwf	?__tdiv_to_l_+1
  6103  093D  0820               	movf	__tdiv_to_l_@quot,w
  6104  093E  00F0               	movwf	?__tdiv_to_l_
  6105  093F                     l606:
  6106  093F  0008               	return
  6107  0940                     __end_of__tdiv_to_l_:
  6108                           
  6109                           	psect	text12
  6110  00FC                     __ptext12:	
  6111 ;; *************** function __div_to_l_ *****************
  6112 ;; Defined at:
  6113 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6114 ;; Parameters:    Size  Location     Type
  6115 ;;  f1              4    0[COMMON] unsigned long 
  6116 ;;  f2              4    4[COMMON] unsigned long 
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;  quot            4    0[BANK0 ] unsigned long 
  6119 ;;  exp1            1    5[BANK0 ] unsigned char 
  6120 ;;  cntr            1    4[BANK0 ] unsigned char 
  6121 ;; Return value:  Size  Location     Type
  6122 ;;                  4    0[COMMON] unsigned long 
  6123 ;; Registers used:
  6124 ;;		wreg, status,2, status,0
  6125 ;; Tracked objects:
  6126 ;;		On entry : 0/0
  6127 ;;		On exit  : 0/0
  6128 ;;		Unchanged: 0/0
  6129 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6130 ;;      Params:         8       0       0       0       0
  6131 ;;      Locals:         0       6       0       0       0
  6132 ;;      Temps:          1       0       0       0       0
  6133 ;;      Totals:         9       6       0       0       0
  6134 ;;Total ram usage:       15 bytes
  6135 ;; Hardware stack levels used:    1
  6136 ;; This function calls:
  6137 ;;		Nothing
  6138 ;; This function is called by:
  6139 ;;		_sprintf
  6140 ;; This function uses a non-reentrant model
  6141 ;;
  6142                           
  6143                           
  6144                           ;psect for function __div_to_l_
  6145  00FC                     __div_to_l_:
  6146  00FC                     l2956:	
  6147                           ;incstack = 0
  6148                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6149                           
  6150  00FC  1003               	clrc
  6151  00FD  0D72               	rlf	__div_to_l_@f1+2,w
  6152  00FE  0D73               	rlf	__div_to_l_@f1+3,w
  6153  00FF  00F8               	movwf	??__div_to_l_
  6154  0100  0878               	movf	??__div_to_l_,w
  6155  0101  1283               	bcf	3,5	;RP0=0, select bank0
  6156  0102  1303               	bcf	3,6	;RP1=0, select bank0
  6157  0103  00A5               	movwf	__div_to_l_@exp1
  6158  0104  0825               	movf	__div_to_l_@exp1,w
  6159  0105  1D03               	btfss	3,2
  6160  0106  2908               	goto	u4481
  6161  0107  2909               	goto	u4480
  6162  0108                     u4481:
  6163  0108  2912               	goto	l2962
  6164  0109                     u4480:
  6165  0109                     l2958:
  6166  0109  3000               	movlw	0
  6167  010A  00F3               	movwf	?__div_to_l_+3
  6168  010B  3000               	movlw	0
  6169  010C  00F2               	movwf	?__div_to_l_+2
  6170  010D  3000               	movlw	0
  6171  010E  00F1               	movwf	?__div_to_l_+1
  6172  010F  3000               	movlw	0
  6173  0110  00F0               	movwf	?__div_to_l_
  6174  0111  29B9               	goto	l559
  6175  0112                     l2962:
  6176  0112  1003               	clrc
  6177  0113  0D76               	rlf	__div_to_l_@f2+2,w
  6178  0114  0D77               	rlf	__div_to_l_@f2+3,w
  6179  0115  00F8               	movwf	??__div_to_l_
  6180  0116  0878               	movf	??__div_to_l_,w
  6181  0117  00A4               	movwf	__div_to_l_@cntr
  6182  0118  0824               	movf	__div_to_l_@cntr,w
  6183  0119  1D03               	btfss	3,2
  6184  011A  291C               	goto	u4491
  6185  011B  291D               	goto	u4490
  6186  011C                     u4491:
  6187  011C  291E               	goto	l560
  6188  011D                     u4490:
  6189  011D  2909               	goto	l2958
  6190  011E                     l560:
  6191  011E  17F2               	bsf	__div_to_l_@f1+2,7
  6192  011F                     l2968:
  6193  011F  30FF               	movlw	255
  6194  0120  05F0               	andwf	__div_to_l_@f1,f
  6195  0121  30FF               	movlw	255
  6196  0122  05F1               	andwf	__div_to_l_@f1+1,f
  6197  0123  30FF               	movlw	255
  6198  0124  05F2               	andwf	__div_to_l_@f1+2,f
  6199  0125  3000               	movlw	0
  6200  0126  05F3               	andwf	__div_to_l_@f1+3,f
  6201  0127                     l2970:
  6202  0127  17F6               	bsf	__div_to_l_@f2+2,7
  6203  0128  30FF               	movlw	255
  6204  0129  05F4               	andwf	__div_to_l_@f2,f
  6205  012A  30FF               	movlw	255
  6206  012B  05F5               	andwf	__div_to_l_@f2+1,f
  6207  012C  30FF               	movlw	255
  6208  012D  05F6               	andwf	__div_to_l_@f2+2,f
  6209  012E  3000               	movlw	0
  6210  012F  05F7               	andwf	__div_to_l_@f2+3,f
  6211  0130  3000               	movlw	0
  6212  0131  00A3               	movwf	__div_to_l_@quot+3
  6213  0132  3000               	movlw	0
  6214  0133  00A2               	movwf	__div_to_l_@quot+2
  6215  0134  3000               	movlw	0
  6216  0135  00A1               	movwf	__div_to_l_@quot+1
  6217  0136  3000               	movlw	0
  6218  0137  00A0               	movwf	__div_to_l_@quot
  6219  0138                     l2972:
  6220  0138  307F               	movlw	127
  6221  0139  02A5               	subwf	__div_to_l_@exp1,f
  6222  013A                     l2974:
  6223  013A  30A0               	movlw	160
  6224  013B  0724               	addwf	__div_to_l_@cntr,w
  6225  013C  00F8               	movwf	??__div_to_l_
  6226  013D  0878               	movf	??__div_to_l_,w
  6227  013E  02A5               	subwf	__div_to_l_@exp1,f
  6228  013F  3020               	movlw	32
  6229  0140  00F8               	movwf	??__div_to_l_
  6230  0141  0878               	movf	??__div_to_l_,w
  6231  0142  00A4               	movwf	__div_to_l_@cntr
  6232  0143                     l2976:
  6233  0143  3001               	movlw	1
  6234  0144  00F8               	movwf	??__div_to_l_
  6235  0145                     u4505:
  6236  0145  1003               	clrc
  6237  0146  0DA0               	rlf	__div_to_l_@quot,f
  6238  0147  0DA1               	rlf	__div_to_l_@quot+1,f
  6239  0148  0DA2               	rlf	__div_to_l_@quot+2,f
  6240  0149  0DA3               	rlf	__div_to_l_@quot+3,f
  6241  014A  0BF8               	decfsz	??__div_to_l_,f
  6242  014B  2945               	goto	u4505
  6243  014C                     l2978:
  6244  014C  0877               	movf	__div_to_l_@f2+3,w
  6245  014D  0273               	subwf	__div_to_l_@f1+3,w
  6246  014E  1D03               	skipz
  6247  014F  295A               	goto	u4515
  6248  0150  0876               	movf	__div_to_l_@f2+2,w
  6249  0151  0272               	subwf	__div_to_l_@f1+2,w
  6250  0152  1D03               	skipz
  6251  0153  295A               	goto	u4515
  6252  0154  0875               	movf	__div_to_l_@f2+1,w
  6253  0155  0271               	subwf	__div_to_l_@f1+1,w
  6254  0156  1D03               	skipz
  6255  0157  295A               	goto	u4515
  6256  0158  0874               	movf	__div_to_l_@f2,w
  6257  0159  0270               	subwf	__div_to_l_@f1,w
  6258  015A                     u4515:
  6259  015A  1C03               	skipc
  6260  015B  295D               	goto	u4511
  6261  015C  295E               	goto	u4510
  6262  015D                     u4511:
  6263  015D  296D               	goto	l2984
  6264  015E                     u4510:
  6265  015E                     l2980:
  6266  015E  0874               	movf	__div_to_l_@f2,w
  6267  015F  02F0               	subwf	__div_to_l_@f1,f
  6268  0160  0875               	movf	__div_to_l_@f2+1,w
  6269  0161  1C03               	skipc
  6270  0162  0F75               	incfsz	__div_to_l_@f2+1,w
  6271  0163  02F1               	subwf	__div_to_l_@f1+1,f
  6272  0164  0876               	movf	__div_to_l_@f2+2,w
  6273  0165  1C03               	skipc
  6274  0166  0F76               	incfsz	__div_to_l_@f2+2,w
  6275  0167  02F2               	subwf	__div_to_l_@f1+2,f
  6276  0168  0877               	movf	__div_to_l_@f2+3,w
  6277  0169  1C03               	skipc
  6278  016A  0F77               	incfsz	__div_to_l_@f2+3,w
  6279  016B  02F3               	subwf	__div_to_l_@f1+3,f
  6280  016C                     l2982:
  6281  016C  1420               	bsf	__div_to_l_@quot,0
  6282  016D                     l2984:
  6283  016D  3001               	movlw	1
  6284  016E  00F8               	movwf	??__div_to_l_
  6285  016F                     u4525:
  6286  016F  1003               	clrc
  6287  0170  0DF0               	rlf	__div_to_l_@f1,f
  6288  0171  0DF1               	rlf	__div_to_l_@f1+1,f
  6289  0172  0DF2               	rlf	__div_to_l_@f1+2,f
  6290  0173  0DF3               	rlf	__div_to_l_@f1+3,f
  6291  0174  0BF8               	decfsz	??__div_to_l_,f
  6292  0175  296F               	goto	u4525
  6293  0176                     l2986:
  6294  0176  3001               	movlw	1
  6295  0177  02A4               	subwf	__div_to_l_@cntr,f
  6296  0178  1D03               	btfss	3,2
  6297  0179  297B               	goto	u4531
  6298  017A  297C               	goto	u4530
  6299  017B                     u4531:
  6300  017B  2943               	goto	l2976
  6301  017C                     u4530:
  6302  017C                     l563:
  6303  017C  1FA5               	btfss	__div_to_l_@exp1,7
  6304  017D  297F               	goto	u4541
  6305  017E  2980               	goto	u4540
  6306  017F                     u4541:
  6307  017F  299A               	goto	l2996
  6308  0180                     u4540:
  6309  0180                     l2988:
  6310  0180  0825               	movf	__div_to_l_@exp1,w
  6311  0181  3A80               	xorlw	128
  6312  0182  3E9F               	addlw	159
  6313  0183  1803               	skipnc
  6314  0184  2986               	goto	u4551
  6315  0185  2987               	goto	u4550
  6316  0186                     u4551:
  6317  0186  2988               	goto	l2994
  6318  0187                     u4550:
  6319  0187  2909               	goto	l2958
  6320  0188                     l2994:
  6321  0188  3001               	movlw	1
  6322  0189                     u4565:
  6323  0189  1003               	clrc
  6324  018A  0CA3               	rrf	__div_to_l_@quot+3,f
  6325  018B  0CA2               	rrf	__div_to_l_@quot+2,f
  6326  018C  0CA1               	rrf	__div_to_l_@quot+1,f
  6327  018D  0CA0               	rrf	__div_to_l_@quot,f
  6328  018E  3EFF               	addlw	-1
  6329  018F  1D03               	skipz
  6330  0190  2989               	goto	u4565
  6331  0191  3001               	movlw	1
  6332  0192  00F8               	movwf	??__div_to_l_
  6333  0193  0878               	movf	??__div_to_l_,w
  6334  0194  07A5               	addwf	__div_to_l_@exp1,f
  6335  0195  1D03               	btfss	3,2
  6336  0196  2998               	goto	u4571
  6337  0197  2999               	goto	u4570
  6338  0198                     u4571:
  6339  0198  2988               	goto	l2994
  6340  0199                     u4570:
  6341  0199  29B1               	goto	l3004
  6342  019A                     l2996:
  6343  019A  3020               	movlw	32
  6344  019B  0225               	subwf	__div_to_l_@exp1,w
  6345  019C  1C03               	skipc
  6346  019D  299F               	goto	u4581
  6347  019E  29A0               	goto	u4580
  6348  019F                     u4581:
  6349  019F  29AC               	goto	l570
  6350  01A0                     u4580:
  6351  01A0  2909               	goto	l2958
  6352  01A1                     l3002:
  6353  01A1  3001               	movlw	1
  6354  01A2  00F8               	movwf	??__div_to_l_
  6355  01A3                     u4595:
  6356  01A3  1003               	clrc
  6357  01A4  0DA0               	rlf	__div_to_l_@quot,f
  6358  01A5  0DA1               	rlf	__div_to_l_@quot+1,f
  6359  01A6  0DA2               	rlf	__div_to_l_@quot+2,f
  6360  01A7  0DA3               	rlf	__div_to_l_@quot+3,f
  6361  01A8  0BF8               	decfsz	??__div_to_l_,f
  6362  01A9  29A3               	goto	u4595
  6363  01AA  3001               	movlw	1
  6364  01AB  02A5               	subwf	__div_to_l_@exp1,f
  6365  01AC                     l570:
  6366  01AC  0825               	movf	__div_to_l_@exp1,w
  6367  01AD  1D03               	btfss	3,2
  6368  01AE  29B0               	goto	u4601
  6369  01AF  29B1               	goto	u4600
  6370  01B0                     u4601:
  6371  01B0  29A1               	goto	l3002
  6372  01B1                     u4600:
  6373  01B1                     l3004:
  6374  01B1  0823               	movf	__div_to_l_@quot+3,w
  6375  01B2  00F3               	movwf	?__div_to_l_+3
  6376  01B3  0822               	movf	__div_to_l_@quot+2,w
  6377  01B4  00F2               	movwf	?__div_to_l_+2
  6378  01B5  0821               	movf	__div_to_l_@quot+1,w
  6379  01B6  00F1               	movwf	?__div_to_l_+1
  6380  01B7  0820               	movf	__div_to_l_@quot,w
  6381  01B8  00F0               	movwf	?__div_to_l_
  6382  01B9                     l559:
  6383  01B9  0008               	return
  6384  01BA                     __end_of__div_to_l_:
  6385                           
  6386                           	psect	text13
  6387  1D3B                     __ptext13:	
  6388 ;; *************** function ___xxtofl *****************
  6389 ;; Defined at:
  6390 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  6391 ;; Parameters:    Size  Location     Type
  6392 ;;  sign            1    wreg     unsigned char 
  6393 ;;  val             4    0[COMMON] long 
  6394 ;; Auto vars:     Size  Location     Type
  6395 ;;  sign            1    8[COMMON] unsigned char 
  6396 ;;  arg             4   10[COMMON] unsigned long 
  6397 ;;  exp             1    9[COMMON] unsigned char 
  6398 ;; Return value:  Size  Location     Type
  6399 ;;                  4    0[COMMON] unsigned char 
  6400 ;; Registers used:
  6401 ;;		wreg, status,2, status,0
  6402 ;; Tracked objects:
  6403 ;;		On entry : 0/0
  6404 ;;		On exit  : 0/0
  6405 ;;		Unchanged: 0/0
  6406 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6407 ;;      Params:         4       0       0       0       0
  6408 ;;      Locals:         6       0       0       0       0
  6409 ;;      Temps:          4       0       0       0       0
  6410 ;;      Totals:        14       0       0       0       0
  6411 ;;Total ram usage:       14 bytes
  6412 ;; Hardware stack levels used:    1
  6413 ;; This function calls:
  6414 ;;		Nothing
  6415 ;; This function is called by:
  6416 ;;		_main
  6417 ;;		_sprintf
  6418 ;; This function uses a non-reentrant model
  6419 ;;
  6420                           
  6421                           
  6422                           ;psect for function ___xxtofl
  6423  1D3B                     ___xxtofl:
  6424                           
  6425                           ;incstack = 0
  6426                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6427                           ;___xxtofl@sign stored from wreg
  6428  1D3B  00F8               	movwf	___xxtofl@sign
  6429  1D3C                     l3148:
  6430  1D3C  0878               	movf	___xxtofl@sign,w
  6431  1D3D  1903               	btfsc	3,2
  6432  1D3E  2D40               	goto	u4991
  6433  1D3F  2D41               	goto	u4990
  6434  1D40                     u4991:
  6435  1D40  2D55               	goto	l3154
  6436  1D41                     u4990:
  6437  1D41                     l3150:
  6438  1D41  1FF3               	btfss	___xxtofl@val+3,7
  6439  1D42  2D44               	goto	u5001
  6440  1D43  2D45               	goto	u5000
  6441  1D44                     u5001:
  6442  1D44  2D55               	goto	l3154
  6443  1D45                     u5000:
  6444  1D45                     l3152:
  6445  1D45  0970               	comf	___xxtofl@val,w
  6446  1D46  00FA               	movwf	___xxtofl@arg
  6447  1D47  0971               	comf	___xxtofl@val+1,w
  6448  1D48  00FB               	movwf	___xxtofl@arg+1
  6449  1D49  0972               	comf	___xxtofl@val+2,w
  6450  1D4A  00FC               	movwf	___xxtofl@arg+2
  6451  1D4B  0973               	comf	___xxtofl@val+3,w
  6452  1D4C  00FD               	movwf	___xxtofl@arg+3
  6453  1D4D  0AFA               	incf	___xxtofl@arg,f
  6454  1D4E  1903               	skipnz
  6455  1D4F  0AFB               	incf	___xxtofl@arg+1,f
  6456  1D50  1903               	skipnz
  6457  1D51  0AFC               	incf	___xxtofl@arg+2,f
  6458  1D52  1903               	skipnz
  6459  1D53  0AFD               	incf	___xxtofl@arg+3,f
  6460  1D54  2D5D               	goto	l856
  6461  1D55                     l3154:
  6462  1D55  0873               	movf	___xxtofl@val+3,w
  6463  1D56  00FD               	movwf	___xxtofl@arg+3
  6464  1D57  0872               	movf	___xxtofl@val+2,w
  6465  1D58  00FC               	movwf	___xxtofl@arg+2
  6466  1D59  0871               	movf	___xxtofl@val+1,w
  6467  1D5A  00FB               	movwf	___xxtofl@arg+1
  6468  1D5B  0870               	movf	___xxtofl@val,w
  6469  1D5C  00FA               	movwf	___xxtofl@arg
  6470  1D5D                     l856:
  6471  1D5D  0873               	movf	___xxtofl@val+3,w
  6472  1D5E  0472               	iorwf	___xxtofl@val+2,w
  6473  1D5F  0471               	iorwf	___xxtofl@val+1,w
  6474  1D60  0470               	iorwf	___xxtofl@val,w
  6475  1D61  1D03               	skipz
  6476  1D62  2D64               	goto	u5011
  6477  1D63  2D65               	goto	u5010
  6478  1D64                     u5011:
  6479  1D64  2D6E               	goto	l3160
  6480  1D65                     u5010:
  6481  1D65                     l3156:
  6482  1D65  3000               	movlw	0
  6483  1D66  00F3               	movwf	?___xxtofl+3
  6484  1D67  3000               	movlw	0
  6485  1D68  00F2               	movwf	?___xxtofl+2
  6486  1D69  3000               	movlw	0
  6487  1D6A  00F1               	movwf	?___xxtofl+1
  6488  1D6B  3000               	movlw	0
  6489  1D6C  00F0               	movwf	?___xxtofl
  6490  1D6D  2DF4               	goto	l858
  6491  1D6E                     l3160:
  6492  1D6E  3096               	movlw	150
  6493  1D6F  00F4               	movwf	??___xxtofl
  6494  1D70  0874               	movf	??___xxtofl,w
  6495  1D71  00F9               	movwf	___xxtofl@exp
  6496  1D72  2D80               	goto	l3164
  6497  1D73                     l3162:
  6498  1D73  3001               	movlw	1
  6499  1D74  00F4               	movwf	??___xxtofl
  6500  1D75  0874               	movf	??___xxtofl,w
  6501  1D76  07F9               	addwf	___xxtofl@exp,f
  6502  1D77  3001               	movlw	1
  6503  1D78                     u5025:
  6504  1D78  1003               	clrc
  6505  1D79  0CFD               	rrf	___xxtofl@arg+3,f
  6506  1D7A  0CFC               	rrf	___xxtofl@arg+2,f
  6507  1D7B  0CFB               	rrf	___xxtofl@arg+1,f
  6508  1D7C  0CFA               	rrf	___xxtofl@arg,f
  6509  1D7D  3EFF               	addlw	-1
  6510  1D7E  1D03               	skipz
  6511  1D7F  2D78               	goto	u5025
  6512  1D80                     l3164:
  6513  1D80  30FE               	movlw	254
  6514  1D81  057D               	andwf	___xxtofl@arg+3,w
  6515  1D82  1D03               	btfss	3,2
  6516  1D83  2D85               	goto	u5031
  6517  1D84  2D86               	goto	u5030
  6518  1D85                     u5031:
  6519  1D85  2D73               	goto	l3162
  6520  1D86                     u5030:
  6521  1D86  2DA2               	goto	l862
  6522  1D87                     l3166:
  6523  1D87  3001               	movlw	1
  6524  1D88  00F4               	movwf	??___xxtofl
  6525  1D89  0874               	movf	??___xxtofl,w
  6526  1D8A  07F9               	addwf	___xxtofl@exp,f
  6527  1D8B                     l3168:
  6528  1D8B  3001               	movlw	1
  6529  1D8C  07FA               	addwf	___xxtofl@arg,f
  6530  1D8D  3000               	movlw	0
  6531  1D8E  1803               	skipnc
  6532  1D8F  3001               	movlw	1
  6533  1D90  07FB               	addwf	___xxtofl@arg+1,f
  6534  1D91  3000               	movlw	0
  6535  1D92  1803               	skipnc
  6536  1D93  3001               	movlw	1
  6537  1D94  07FC               	addwf	___xxtofl@arg+2,f
  6538  1D95  3000               	movlw	0
  6539  1D96  1803               	skipnc
  6540  1D97  3001               	movlw	1
  6541  1D98  07FD               	addwf	___xxtofl@arg+3,f
  6542  1D99                     l3170:
  6543  1D99  3001               	movlw	1
  6544  1D9A                     u5045:
  6545  1D9A  1003               	clrc
  6546  1D9B  0CFD               	rrf	___xxtofl@arg+3,f
  6547  1D9C  0CFC               	rrf	___xxtofl@arg+2,f
  6548  1D9D  0CFB               	rrf	___xxtofl@arg+1,f
  6549  1D9E  0CFA               	rrf	___xxtofl@arg,f
  6550  1D9F  3EFF               	addlw	-1
  6551  1DA0  1D03               	skipz
  6552  1DA1  2D9A               	goto	u5045
  6553  1DA2                     l862:
  6554  1DA2  30FF               	movlw	255
  6555  1DA3  057D               	andwf	___xxtofl@arg+3,w
  6556  1DA4  1D03               	btfss	3,2
  6557  1DA5  2DA7               	goto	u5051
  6558  1DA6  2DA8               	goto	u5050
  6559  1DA7                     u5051:
  6560  1DA7  2D87               	goto	l3166
  6561  1DA8                     u5050:
  6562  1DA8  2DB4               	goto	l3174
  6563  1DA9                     l3172:
  6564  1DA9  3001               	movlw	1
  6565  1DAA  02F9               	subwf	___xxtofl@exp,f
  6566  1DAB  3001               	movlw	1
  6567  1DAC  00F4               	movwf	??___xxtofl
  6568  1DAD                     u5065:
  6569  1DAD  1003               	clrc
  6570  1DAE  0DFA               	rlf	___xxtofl@arg,f
  6571  1DAF  0DFB               	rlf	___xxtofl@arg+1,f
  6572  1DB0  0DFC               	rlf	___xxtofl@arg+2,f
  6573  1DB1  0DFD               	rlf	___xxtofl@arg+3,f
  6574  1DB2  0BF4               	decfsz	??___xxtofl,f
  6575  1DB3  2DAD               	goto	u5065
  6576  1DB4                     l3174:
  6577  1DB4  1BFC               	btfsc	___xxtofl@arg+2,7
  6578  1DB5  2DB7               	goto	u5071
  6579  1DB6  2DB8               	goto	u5070
  6580  1DB7                     u5071:
  6581  1DB7  2DBE               	goto	l869
  6582  1DB8                     u5070:
  6583  1DB8                     l3176:
  6584  1DB8  3002               	movlw	2
  6585  1DB9  0279               	subwf	___xxtofl@exp,w
  6586  1DBA  1803               	skipnc
  6587  1DBB  2DBD               	goto	u5081
  6588  1DBC  2DBE               	goto	u5080
  6589  1DBD                     u5081:
  6590  1DBD  2DA9               	goto	l3172
  6591  1DBE                     u5080:
  6592  1DBE                     l869:
  6593  1DBE  1879               	btfsc	___xxtofl@exp,0
  6594  1DBF  2DC1               	goto	u5091
  6595  1DC0  2DC2               	goto	u5090
  6596  1DC1                     u5091:
  6597  1DC1  2DCA               	goto	l870
  6598  1DC2                     u5090:
  6599  1DC2                     l3178:
  6600  1DC2  30FF               	movlw	255
  6601  1DC3  05FA               	andwf	___xxtofl@arg,f
  6602  1DC4  30FF               	movlw	255
  6603  1DC5  05FB               	andwf	___xxtofl@arg+1,f
  6604  1DC6  307F               	movlw	127
  6605  1DC7  05FC               	andwf	___xxtofl@arg+2,f
  6606  1DC8  30FF               	movlw	255
  6607  1DC9  05FD               	andwf	___xxtofl@arg+3,f
  6608  1DCA                     l870:
  6609  1DCA  1003               	clrc
  6610  1DCB  0CF9               	rrf	___xxtofl@exp,f
  6611  1DCC                     l3180:
  6612  1DCC  0879               	movf	___xxtofl@exp,w
  6613  1DCD  00F4               	movwf	??___xxtofl
  6614  1DCE  01F5               	clrf	??___xxtofl+1
  6615  1DCF  01F6               	clrf	??___xxtofl+2
  6616  1DD0  01F7               	clrf	??___xxtofl+3
  6617  1DD1  3018               	movlw	24
  6618  1DD2                     u5105:
  6619  1DD2  1003               	clrc
  6620  1DD3  0DF4               	rlf	??___xxtofl,f
  6621  1DD4  0DF5               	rlf	??___xxtofl+1,f
  6622  1DD5  0DF6               	rlf	??___xxtofl+2,f
  6623  1DD6  0DF7               	rlf	??___xxtofl+3,f
  6624  1DD7                     u5100:
  6625  1DD7  3EFF               	addlw	-1
  6626  1DD8  1D03               	skipz
  6627  1DD9  2DD2               	goto	u5105
  6628  1DDA  0874               	movf	??___xxtofl,w
  6629  1DDB  04FA               	iorwf	___xxtofl@arg,f
  6630  1DDC  0875               	movf	??___xxtofl+1,w
  6631  1DDD  04FB               	iorwf	___xxtofl@arg+1,f
  6632  1DDE  0876               	movf	??___xxtofl+2,w
  6633  1DDF  04FC               	iorwf	___xxtofl@arg+2,f
  6634  1DE0  0877               	movf	??___xxtofl+3,w
  6635  1DE1  04FD               	iorwf	___xxtofl@arg+3,f
  6636  1DE2                     l3182:
  6637  1DE2  0878               	movf	___xxtofl@sign,w
  6638  1DE3  1903               	btfsc	3,2
  6639  1DE4  2DE6               	goto	u5111
  6640  1DE5  2DE7               	goto	u5110
  6641  1DE6                     u5111:
  6642  1DE6  2DEC               	goto	l3188
  6643  1DE7                     u5110:
  6644  1DE7                     l3184:
  6645  1DE7  1FF3               	btfss	___xxtofl@val+3,7
  6646  1DE8  2DEA               	goto	u5121
  6647  1DE9  2DEB               	goto	u5120
  6648  1DEA                     u5121:
  6649  1DEA  2DEC               	goto	l3188
  6650  1DEB                     u5120:
  6651  1DEB                     l3186:
  6652  1DEB  17FD               	bsf	___xxtofl@arg+3,7
  6653  1DEC                     l3188:
  6654  1DEC  087D               	movf	___xxtofl@arg+3,w
  6655  1DED  00F3               	movwf	?___xxtofl+3
  6656  1DEE  087C               	movf	___xxtofl@arg+2,w
  6657  1DEF  00F2               	movwf	?___xxtofl+2
  6658  1DF0  087B               	movf	___xxtofl@arg+1,w
  6659  1DF1  00F1               	movwf	?___xxtofl+1
  6660  1DF2  087A               	movf	___xxtofl@arg,w
  6661  1DF3  00F0               	movwf	?___xxtofl
  6662  1DF4                     l858:
  6663  1DF4  0008               	return
  6664  1DF5                     __end_of___xxtofl:
  6665                           
  6666                           	psect	text14
  6667  100E                     __ptext14:	
  6668 ;; *************** function ___wmul *****************
  6669 ;; Defined at:
  6670 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6671 ;; Parameters:    Size  Location     Type
  6672 ;;  multiplier      2    0[COMMON] unsigned int 
  6673 ;;  multiplicand    2    2[COMMON] unsigned int 
  6674 ;; Auto vars:     Size  Location     Type
  6675 ;;  product         2    4[COMMON] unsigned int 
  6676 ;; Return value:  Size  Location     Type
  6677 ;;                  2    0[COMMON] unsigned int 
  6678 ;; Registers used:
  6679 ;;		wreg, status,2, status,0
  6680 ;; Tracked objects:
  6681 ;;		On entry : 0/0
  6682 ;;		On exit  : 0/0
  6683 ;;		Unchanged: 0/0
  6684 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6685 ;;      Params:         4       0       0       0       0
  6686 ;;      Locals:         2       0       0       0       0
  6687 ;;      Temps:          0       0       0       0       0
  6688 ;;      Totals:         6       0       0       0       0
  6689 ;;Total ram usage:        6 bytes
  6690 ;; Hardware stack levels used:    1
  6691 ;; This function calls:
  6692 ;;		Nothing
  6693 ;; This function is called by:
  6694 ;;		_sprintf
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           
  6699                           ;psect for function ___wmul
  6700  100E                     ___wmul:
  6701  100E                     l3008:	
  6702                           ;incstack = 0
  6703                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6704                           
  6705  100E  01F4               	clrf	___wmul@product
  6706  100F  01F5               	clrf	___wmul@product+1
  6707  1010                     l3010:
  6708  1010  1C70               	btfss	___wmul@multiplier,0
  6709  1011  2813               	goto	u4611
  6710  1012  2814               	goto	u4610
  6711  1013                     u4611:
  6712  1013  281A               	goto	l389
  6713  1014                     u4610:
  6714  1014                     l3012:
  6715  1014  0872               	movf	___wmul@multiplicand,w
  6716  1015  07F4               	addwf	___wmul@product,f
  6717  1016  1803               	skipnc
  6718  1017  0AF5               	incf	___wmul@product+1,f
  6719  1018  0873               	movf	___wmul@multiplicand+1,w
  6720  1019  07F5               	addwf	___wmul@product+1,f
  6721  101A                     l389:
  6722  101A  3001               	movlw	1
  6723  101B                     u4625:
  6724  101B  1003               	clrc
  6725  101C  0DF2               	rlf	___wmul@multiplicand,f
  6726  101D  0DF3               	rlf	___wmul@multiplicand+1,f
  6727  101E  3EFF               	addlw	-1
  6728  101F  1D03               	skipz
  6729  1020  281B               	goto	u4625
  6730  1021                     l3014:
  6731  1021  3001               	movlw	1
  6732  1022                     u4635:
  6733  1022  1003               	clrc
  6734  1023  0CF1               	rrf	___wmul@multiplier+1,f
  6735  1024  0CF0               	rrf	___wmul@multiplier,f
  6736  1025  3EFF               	addlw	-1
  6737  1026  1D03               	skipz
  6738  1027  2822               	goto	u4635
  6739  1028                     l3016:
  6740  1028  0870               	movf	___wmul@multiplier,w
  6741  1029  0471               	iorwf	___wmul@multiplier+1,w
  6742  102A  1D03               	btfss	3,2
  6743  102B  282D               	goto	u4641
  6744  102C  282E               	goto	u4640
  6745  102D                     u4641:
  6746  102D  2810               	goto	l3010
  6747  102E                     u4640:
  6748  102E                     l3018:
  6749  102E  0875               	movf	___wmul@product+1,w
  6750  102F  00F1               	movwf	?___wmul+1
  6751  1030  0874               	movf	___wmul@product,w
  6752  1031  00F0               	movwf	?___wmul
  6753  1032                     l391:
  6754  1032  0008               	return
  6755  1033                     __end_of___wmul:
  6756                           
  6757                           	psect	text15
  6758  1B84                     __ptext15:	
  6759 ;; *************** function ___llmod *****************
  6760 ;; Defined at:
  6761 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  6762 ;; Parameters:    Size  Location     Type
  6763 ;;  divisor         4    0[BANK0 ] unsigned long 
  6764 ;;  dividend        4    4[BANK0 ] unsigned long 
  6765 ;; Auto vars:     Size  Location     Type
  6766 ;;  counter         1    9[BANK0 ] unsigned char 
  6767 ;; Return value:  Size  Location     Type
  6768 ;;                  4    0[BANK0 ] unsigned long 
  6769 ;; Registers used:
  6770 ;;		wreg, status,2, status,0
  6771 ;; Tracked objects:
  6772 ;;		On entry : 0/0
  6773 ;;		On exit  : 0/0
  6774 ;;		Unchanged: 0/0
  6775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6776 ;;      Params:         0       8       0       0       0
  6777 ;;      Locals:         0       1       0       0       0
  6778 ;;      Temps:          0       1       0       0       0
  6779 ;;      Totals:         0      10       0       0       0
  6780 ;;Total ram usage:       10 bytes
  6781 ;; Hardware stack levels used:    1
  6782 ;; This function calls:
  6783 ;;		Nothing
  6784 ;; This function is called by:
  6785 ;;		_sprintf
  6786 ;; This function uses a non-reentrant model
  6787 ;;
  6788                           
  6789                           
  6790                           ;psect for function ___llmod
  6791  1B84                     ___llmod:
  6792  1B84                     l3122:	
  6793                           ;incstack = 0
  6794                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  6795                           
  6796  1B84  1283               	bcf	3,5	;RP0=0, select bank0
  6797  1B85  1303               	bcf	3,6	;RP1=0, select bank0
  6798  1B86  0823               	movf	___llmod@divisor+3,w
  6799  1B87  0422               	iorwf	___llmod@divisor+2,w
  6800  1B88  0421               	iorwf	___llmod@divisor+1,w
  6801  1B89  0420               	iorwf	___llmod@divisor,w
  6802  1B8A  1903               	skipnz
  6803  1B8B  2B8D               	goto	u4931
  6804  1B8C  2B8E               	goto	u4930
  6805  1B8D                     u4931:
  6806  1B8D  2BD1               	goto	l3138
  6807  1B8E                     u4930:
  6808  1B8E                     l3124:
  6809  1B8E  01A9               	clrf	___llmod@counter
  6810  1B8F  0AA9               	incf	___llmod@counter,f
  6811  1B90  2B9E               	goto	l3128
  6812  1B91                     l3126:
  6813  1B91  3001               	movlw	1
  6814  1B92  00A8               	movwf	??___llmod
  6815  1B93                     u4945:
  6816  1B93  1003               	clrc
  6817  1B94  0DA0               	rlf	___llmod@divisor,f
  6818  1B95  0DA1               	rlf	___llmod@divisor+1,f
  6819  1B96  0DA2               	rlf	___llmod@divisor+2,f
  6820  1B97  0DA3               	rlf	___llmod@divisor+3,f
  6821  1B98  0BA8               	decfsz	??___llmod,f
  6822  1B99  2B93               	goto	u4945
  6823  1B9A  3001               	movlw	1
  6824  1B9B  00A8               	movwf	??___llmod
  6825  1B9C  0828               	movf	??___llmod,w
  6826  1B9D  07A9               	addwf	___llmod@counter,f
  6827  1B9E                     l3128:
  6828  1B9E  1FA3               	btfss	___llmod@divisor+3,7
  6829  1B9F  2BA1               	goto	u4951
  6830  1BA0  2BA2               	goto	u4950
  6831  1BA1                     u4951:
  6832  1BA1  2B91               	goto	l3126
  6833  1BA2                     u4950:
  6834  1BA2                     l3130:
  6835  1BA2  0823               	movf	___llmod@divisor+3,w
  6836  1BA3  0227               	subwf	___llmod@dividend+3,w
  6837  1BA4  1D03               	skipz
  6838  1BA5  2BB0               	goto	u4965
  6839  1BA6  0822               	movf	___llmod@divisor+2,w
  6840  1BA7  0226               	subwf	___llmod@dividend+2,w
  6841  1BA8  1D03               	skipz
  6842  1BA9  2BB0               	goto	u4965
  6843  1BAA  0821               	movf	___llmod@divisor+1,w
  6844  1BAB  0225               	subwf	___llmod@dividend+1,w
  6845  1BAC  1D03               	skipz
  6846  1BAD  2BB0               	goto	u4965
  6847  1BAE  0820               	movf	___llmod@divisor,w
  6848  1BAF  0224               	subwf	___llmod@dividend,w
  6849  1BB0                     u4965:
  6850  1BB0  1C03               	skipc
  6851  1BB1  2BB3               	goto	u4961
  6852  1BB2  2BB4               	goto	u4960
  6853  1BB3                     u4961:
  6854  1BB3  2BC2               	goto	l3134
  6855  1BB4                     u4960:
  6856  1BB4                     l3132:
  6857  1BB4  0820               	movf	___llmod@divisor,w
  6858  1BB5  02A4               	subwf	___llmod@dividend,f
  6859  1BB6  0821               	movf	___llmod@divisor+1,w
  6860  1BB7  1C03               	skipc
  6861  1BB8  0F21               	incfsz	___llmod@divisor+1,w
  6862  1BB9  02A5               	subwf	___llmod@dividend+1,f
  6863  1BBA  0822               	movf	___llmod@divisor+2,w
  6864  1BBB  1C03               	skipc
  6865  1BBC  0F22               	incfsz	___llmod@divisor+2,w
  6866  1BBD  02A6               	subwf	___llmod@dividend+2,f
  6867  1BBE  0823               	movf	___llmod@divisor+3,w
  6868  1BBF  1C03               	skipc
  6869  1BC0  0F23               	incfsz	___llmod@divisor+3,w
  6870  1BC1  02A7               	subwf	___llmod@dividend+3,f
  6871  1BC2                     l3134:
  6872  1BC2  3001               	movlw	1
  6873  1BC3                     u4975:
  6874  1BC3  1003               	clrc
  6875  1BC4  0CA3               	rrf	___llmod@divisor+3,f
  6876  1BC5  0CA2               	rrf	___llmod@divisor+2,f
  6877  1BC6  0CA1               	rrf	___llmod@divisor+1,f
  6878  1BC7  0CA0               	rrf	___llmod@divisor,f
  6879  1BC8  3EFF               	addlw	-1
  6880  1BC9  1D03               	skipz
  6881  1BCA  2BC3               	goto	u4975
  6882  1BCB                     l3136:
  6883  1BCB  3001               	movlw	1
  6884  1BCC  02A9               	subwf	___llmod@counter,f
  6885  1BCD  1D03               	btfss	3,2
  6886  1BCE  2BD0               	goto	u4981
  6887  1BCF  2BD1               	goto	u4980
  6888  1BD0                     u4981:
  6889  1BD0  2BA2               	goto	l3130
  6890  1BD1                     u4980:
  6891  1BD1                     l3138:
  6892  1BD1  0827               	movf	___llmod@dividend+3,w
  6893  1BD2  00A3               	movwf	?___llmod+3
  6894  1BD3  0826               	movf	___llmod@dividend+2,w
  6895  1BD4  00A2               	movwf	?___llmod+2
  6896  1BD5  0825               	movf	___llmod@dividend+1,w
  6897  1BD6  00A1               	movwf	?___llmod+1
  6898  1BD7  0824               	movf	___llmod@dividend,w
  6899  1BD8  00A0               	movwf	?___llmod
  6900  1BD9                     l645:
  6901  1BD9  0008               	return
  6902  1BDA                     __end_of___llmod:
  6903                           
  6904                           	psect	text16
  6905  1C33                     __ptext16:	
  6906 ;; *************** function ___lldiv *****************
  6907 ;; Defined at:
  6908 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  6909 ;; Parameters:    Size  Location     Type
  6910 ;;  divisor         4    0[COMMON] unsigned long 
  6911 ;;  dividend        4    4[COMMON] unsigned long 
  6912 ;; Auto vars:     Size  Location     Type
  6913 ;;  quotient        4    9[COMMON] unsigned long 
  6914 ;;  counter         1   13[COMMON] unsigned char 
  6915 ;; Return value:  Size  Location     Type
  6916 ;;                  4    0[COMMON] unsigned long 
  6917 ;; Registers used:
  6918 ;;		wreg, status,2, status,0
  6919 ;; Tracked objects:
  6920 ;;		On entry : 0/0
  6921 ;;		On exit  : 0/0
  6922 ;;		Unchanged: 0/0
  6923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6924 ;;      Params:         8       0       0       0       0
  6925 ;;      Locals:         5       0       0       0       0
  6926 ;;      Temps:          1       0       0       0       0
  6927 ;;      Totals:        14       0       0       0       0
  6928 ;;Total ram usage:       14 bytes
  6929 ;; Hardware stack levels used:    1
  6930 ;; This function calls:
  6931 ;;		Nothing
  6932 ;; This function is called by:
  6933 ;;		_sprintf
  6934 ;; This function uses a non-reentrant model
  6935 ;;
  6936                           
  6937                           
  6938                           ;psect for function ___lldiv
  6939  1C33                     ___lldiv:
  6940  1C33                     l3022:	
  6941                           ;incstack = 0
  6942                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  6943                           
  6944  1C33  3000               	movlw	0
  6945  1C34  00FC               	movwf	___lldiv@quotient+3
  6946  1C35  3000               	movlw	0
  6947  1C36  00FB               	movwf	___lldiv@quotient+2
  6948  1C37  3000               	movlw	0
  6949  1C38  00FA               	movwf	___lldiv@quotient+1
  6950  1C39  3000               	movlw	0
  6951  1C3A  00F9               	movwf	___lldiv@quotient
  6952  1C3B  0873               	movf	___lldiv@divisor+3,w
  6953  1C3C  0472               	iorwf	___lldiv@divisor+2,w
  6954  1C3D  0471               	iorwf	___lldiv@divisor+1,w
  6955  1C3E  0470               	iorwf	___lldiv@divisor,w
  6956  1C3F  1903               	skipnz
  6957  1C40  2C42               	goto	u4651
  6958  1C41  2C43               	goto	u4650
  6959  1C42                     u4651:
  6960  1C42  2C90               	goto	l3042
  6961  1C43                     u4650:
  6962  1C43                     l3024:
  6963  1C43  01FD               	clrf	___lldiv@counter
  6964  1C44  0AFD               	incf	___lldiv@counter,f
  6965  1C45  2C53               	goto	l3028
  6966  1C46                     l3026:
  6967  1C46  3001               	movlw	1
  6968  1C47  00F8               	movwf	??___lldiv
  6969  1C48                     u4665:
  6970  1C48  1003               	clrc
  6971  1C49  0DF0               	rlf	___lldiv@divisor,f
  6972  1C4A  0DF1               	rlf	___lldiv@divisor+1,f
  6973  1C4B  0DF2               	rlf	___lldiv@divisor+2,f
  6974  1C4C  0DF3               	rlf	___lldiv@divisor+3,f
  6975  1C4D  0BF8               	decfsz	??___lldiv,f
  6976  1C4E  2C48               	goto	u4665
  6977  1C4F  3001               	movlw	1
  6978  1C50  00F8               	movwf	??___lldiv
  6979  1C51  0878               	movf	??___lldiv,w
  6980  1C52  07FD               	addwf	___lldiv@counter,f
  6981  1C53                     l3028:
  6982  1C53  1FF3               	btfss	___lldiv@divisor+3,7
  6983  1C54  2C56               	goto	u4671
  6984  1C55  2C57               	goto	u4670
  6985  1C56                     u4671:
  6986  1C56  2C46               	goto	l3026
  6987  1C57                     u4670:
  6988  1C57                     l3030:
  6989  1C57  3001               	movlw	1
  6990  1C58  00F8               	movwf	??___lldiv
  6991  1C59                     u4685:
  6992  1C59  1003               	clrc
  6993  1C5A  0DF9               	rlf	___lldiv@quotient,f
  6994  1C5B  0DFA               	rlf	___lldiv@quotient+1,f
  6995  1C5C  0DFB               	rlf	___lldiv@quotient+2,f
  6996  1C5D  0DFC               	rlf	___lldiv@quotient+3,f
  6997  1C5E  0BF8               	decfsz	??___lldiv,f
  6998  1C5F  2C59               	goto	u4685
  6999  1C60                     l3032:
  7000  1C60  0873               	movf	___lldiv@divisor+3,w
  7001  1C61  0277               	subwf	___lldiv@dividend+3,w
  7002  1C62  1D03               	skipz
  7003  1C63  2C6E               	goto	u4695
  7004  1C64  0872               	movf	___lldiv@divisor+2,w
  7005  1C65  0276               	subwf	___lldiv@dividend+2,w
  7006  1C66  1D03               	skipz
  7007  1C67  2C6E               	goto	u4695
  7008  1C68  0871               	movf	___lldiv@divisor+1,w
  7009  1C69  0275               	subwf	___lldiv@dividend+1,w
  7010  1C6A  1D03               	skipz
  7011  1C6B  2C6E               	goto	u4695
  7012  1C6C  0870               	movf	___lldiv@divisor,w
  7013  1C6D  0274               	subwf	___lldiv@dividend,w
  7014  1C6E                     u4695:
  7015  1C6E  1C03               	skipc
  7016  1C6F  2C71               	goto	u4691
  7017  1C70  2C72               	goto	u4690
  7018  1C71                     u4691:
  7019  1C71  2C81               	goto	l3038
  7020  1C72                     u4690:
  7021  1C72                     l3034:
  7022  1C72  0870               	movf	___lldiv@divisor,w
  7023  1C73  02F4               	subwf	___lldiv@dividend,f
  7024  1C74  0871               	movf	___lldiv@divisor+1,w
  7025  1C75  1C03               	skipc
  7026  1C76  0F71               	incfsz	___lldiv@divisor+1,w
  7027  1C77  02F5               	subwf	___lldiv@dividend+1,f
  7028  1C78  0872               	movf	___lldiv@divisor+2,w
  7029  1C79  1C03               	skipc
  7030  1C7A  0F72               	incfsz	___lldiv@divisor+2,w
  7031  1C7B  02F6               	subwf	___lldiv@dividend+2,f
  7032  1C7C  0873               	movf	___lldiv@divisor+3,w
  7033  1C7D  1C03               	skipc
  7034  1C7E  0F73               	incfsz	___lldiv@divisor+3,w
  7035  1C7F  02F7               	subwf	___lldiv@dividend+3,f
  7036  1C80                     l3036:
  7037  1C80  1479               	bsf	___lldiv@quotient,0
  7038  1C81                     l3038:
  7039  1C81  3001               	movlw	1
  7040  1C82                     u4705:
  7041  1C82  1003               	clrc
  7042  1C83  0CF3               	rrf	___lldiv@divisor+3,f
  7043  1C84  0CF2               	rrf	___lldiv@divisor+2,f
  7044  1C85  0CF1               	rrf	___lldiv@divisor+1,f
  7045  1C86  0CF0               	rrf	___lldiv@divisor,f
  7046  1C87  3EFF               	addlw	-1
  7047  1C88  1D03               	skipz
  7048  1C89  2C82               	goto	u4705
  7049  1C8A                     l3040:
  7050  1C8A  3001               	movlw	1
  7051  1C8B  02FD               	subwf	___lldiv@counter,f
  7052  1C8C  1D03               	btfss	3,2
  7053  1C8D  2C8F               	goto	u4711
  7054  1C8E  2C90               	goto	u4710
  7055  1C8F                     u4711:
  7056  1C8F  2C57               	goto	l3030
  7057  1C90                     u4710:
  7058  1C90                     l3042:
  7059  1C90  087C               	movf	___lldiv@quotient+3,w
  7060  1C91  00F3               	movwf	?___lldiv+3
  7061  1C92  087B               	movf	___lldiv@quotient+2,w
  7062  1C93  00F2               	movwf	?___lldiv+2
  7063  1C94  087A               	movf	___lldiv@quotient+1,w
  7064  1C95  00F1               	movwf	?___lldiv+1
  7065  1C96  0879               	movf	___lldiv@quotient,w
  7066  1C97  00F0               	movwf	?___lldiv
  7067  1C98                     l425:
  7068  1C98  0008               	return
  7069  1C99                     __end_of___lldiv:
  7070                           
  7071                           	psect	text17
  7072  0807                     __ptext17:	
  7073 ;; *************** function ___fltol *****************
  7074 ;; Defined at:
  7075 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7076 ;; Parameters:    Size  Location     Type
  7077 ;;  f1              4   49[BANK0 ] unsigned long 
  7078 ;; Auto vars:     Size  Location     Type
  7079 ;;  exp1            1   59[BANK0 ] unsigned char 
  7080 ;;  sign1           1   58[BANK0 ] unsigned char 
  7081 ;; Return value:  Size  Location     Type
  7082 ;;                  4   49[BANK0 ] long 
  7083 ;; Registers used:
  7084 ;;		wreg, status,2, status,0
  7085 ;; Tracked objects:
  7086 ;;		On entry : 0/0
  7087 ;;		On exit  : 0/0
  7088 ;;		Unchanged: 0/0
  7089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7090 ;;      Params:         0       4       0       0       0
  7091 ;;      Locals:         0       2       0       0       0
  7092 ;;      Temps:          0       5       0       0       0
  7093 ;;      Totals:         0      11       0       0       0
  7094 ;;Total ram usage:       11 bytes
  7095 ;; Hardware stack levels used:    1
  7096 ;; This function calls:
  7097 ;;		Nothing
  7098 ;; This function is called by:
  7099 ;;		_sprintf
  7100 ;; This function uses a non-reentrant model
  7101 ;;
  7102                           
  7103                           
  7104                           ;psect for function ___fltol
  7105  0807                     ___fltol:
  7106  0807                     l3086:	
  7107                           ;incstack = 0
  7108                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7109                           
  7110  0807  1003               	clrc
  7111  0808  1283               	bcf	3,5	;RP0=0, select bank0
  7112  0809  1303               	bcf	3,6	;RP1=0, select bank0
  7113  080A  0D53               	rlf	___fltol@f1+2,w
  7114  080B  0D54               	rlf	___fltol@f1+3,w
  7115  080C  00D5               	movwf	??___fltol
  7116  080D  0855               	movf	??___fltol,w
  7117  080E  00DB               	movwf	___fltol@exp1
  7118  080F  085B               	movf	___fltol@exp1,w
  7119  0810  1D03               	btfss	3,2
  7120  0811  2813               	goto	u4831
  7121  0812  2814               	goto	u4830
  7122  0813                     u4831:
  7123  0813  281D               	goto	l3092
  7124  0814                     u4830:
  7125  0814                     l3088:
  7126  0814  3000               	movlw	0
  7127  0815  00D4               	movwf	?___fltol+3
  7128  0816  3000               	movlw	0
  7129  0817  00D3               	movwf	?___fltol+2
  7130  0818  3000               	movlw	0
  7131  0819  00D2               	movwf	?___fltol+1
  7132  081A  3000               	movlw	0
  7133  081B  00D1               	movwf	?___fltol
  7134  081C  2882               	goto	l592
  7135  081D                     l3092:
  7136  081D  0851               	movf	___fltol@f1,w
  7137  081E  00D5               	movwf	??___fltol
  7138  081F  0852               	movf	___fltol@f1+1,w
  7139  0820  00D6               	movwf	??___fltol+1
  7140  0821  0853               	movf	___fltol@f1+2,w
  7141  0822  00D7               	movwf	??___fltol+2
  7142  0823  0854               	movf	___fltol@f1+3,w
  7143  0824  00D8               	movwf	??___fltol+3
  7144  0825  301F               	movlw	31
  7145  0826                     u4845:
  7146  0826  1003               	clrc
  7147  0827  0CD8               	rrf	??___fltol+3,f
  7148  0828  0CD7               	rrf	??___fltol+2,f
  7149  0829  0CD6               	rrf	??___fltol+1,f
  7150  082A  0CD5               	rrf	??___fltol,f
  7151  082B                     u4840:
  7152  082B  3EFF               	addlw	-1
  7153  082C  1D03               	skipz
  7154  082D  2826               	goto	u4845
  7155  082E  0855               	movf	??___fltol,w
  7156  082F  00D9               	movwf	??___fltol+4
  7157  0830  0859               	movf	??___fltol+4,w
  7158  0831  00DA               	movwf	___fltol@sign1
  7159  0832                     l3094:
  7160  0832  17D3               	bsf	___fltol@f1+2,7
  7161  0833                     l3096:
  7162  0833  30FF               	movlw	255
  7163  0834  05D1               	andwf	___fltol@f1,f
  7164  0835  30FF               	movlw	255
  7165  0836  05D2               	andwf	___fltol@f1+1,f
  7166  0837  30FF               	movlw	255
  7167  0838  05D3               	andwf	___fltol@f1+2,f
  7168  0839  3000               	movlw	0
  7169  083A  05D4               	andwf	___fltol@f1+3,f
  7170  083B                     l3098:
  7171  083B  3096               	movlw	150
  7172  083C  02DB               	subwf	___fltol@exp1,f
  7173  083D                     l3100:
  7174  083D  1FDB               	btfss	___fltol@exp1,7
  7175  083E  2840               	goto	u4851
  7176  083F  2841               	goto	u4850
  7177  0840                     u4851:
  7178  0840  285B               	goto	l3110
  7179  0841                     u4850:
  7180  0841                     l3102:
  7181  0841  085B               	movf	___fltol@exp1,w
  7182  0842  3A80               	xorlw	128
  7183  0843  3E97               	addlw	151
  7184  0844  1803               	skipnc
  7185  0845  2847               	goto	u4861
  7186  0846  2848               	goto	u4860
  7187  0847                     u4861:
  7188  0847  2849               	goto	l3108
  7189  0848                     u4860:
  7190  0848  2814               	goto	l3088
  7191  0849                     l3108:
  7192  0849  3001               	movlw	1
  7193  084A                     u4875:
  7194  084A  1003               	clrc
  7195  084B  0CD4               	rrf	___fltol@f1+3,f
  7196  084C  0CD3               	rrf	___fltol@f1+2,f
  7197  084D  0CD2               	rrf	___fltol@f1+1,f
  7198  084E  0CD1               	rrf	___fltol@f1,f
  7199  084F  3EFF               	addlw	-1
  7200  0850  1D03               	skipz
  7201  0851  284A               	goto	u4875
  7202  0852  3001               	movlw	1
  7203  0853  00D5               	movwf	??___fltol
  7204  0854  0855               	movf	??___fltol,w
  7205  0855  07DB               	addwf	___fltol@exp1,f
  7206  0856  1D03               	btfss	3,2
  7207  0857  2859               	goto	u4881
  7208  0858  285A               	goto	u4880
  7209  0859                     u4881:
  7210  0859  2849               	goto	l3108
  7211  085A                     u4880:
  7212  085A  2872               	goto	l3118
  7213  085B                     l3110:
  7214  085B  3020               	movlw	32
  7215  085C  025B               	subwf	___fltol@exp1,w
  7216  085D  1C03               	skipc
  7217  085E  2860               	goto	u4891
  7218  085F  2861               	goto	u4890
  7219  0860                     u4891:
  7220  0860  286D               	goto	l599
  7221  0861                     u4890:
  7222  0861  2814               	goto	l3088
  7223  0862                     l3116:
  7224  0862  3001               	movlw	1
  7225  0863  00D5               	movwf	??___fltol
  7226  0864                     u4905:
  7227  0864  1003               	clrc
  7228  0865  0DD1               	rlf	___fltol@f1,f
  7229  0866  0DD2               	rlf	___fltol@f1+1,f
  7230  0867  0DD3               	rlf	___fltol@f1+2,f
  7231  0868  0DD4               	rlf	___fltol@f1+3,f
  7232  0869  0BD5               	decfsz	??___fltol,f
  7233  086A  2864               	goto	u4905
  7234  086B  3001               	movlw	1
  7235  086C  02DB               	subwf	___fltol@exp1,f
  7236  086D                     l599:
  7237  086D  085B               	movf	___fltol@exp1,w
  7238  086E  1D03               	btfss	3,2
  7239  086F  2871               	goto	u4911
  7240  0870  2872               	goto	u4910
  7241  0871                     u4911:
  7242  0871  2862               	goto	l3116
  7243  0872                     u4910:
  7244  0872                     l3118:
  7245  0872  085A               	movf	___fltol@sign1,w
  7246  0873  1903               	btfsc	3,2
  7247  0874  2876               	goto	u4921
  7248  0875  2877               	goto	u4920
  7249  0876                     u4921:
  7250  0876  2882               	goto	l602
  7251  0877                     u4920:
  7252  0877                     l3120:
  7253  0877  09D1               	comf	___fltol@f1,f
  7254  0878  09D2               	comf	___fltol@f1+1,f
  7255  0879  09D3               	comf	___fltol@f1+2,f
  7256  087A  09D4               	comf	___fltol@f1+3,f
  7257  087B  0AD1               	incf	___fltol@f1,f
  7258  087C  1903               	skipnz
  7259  087D  0AD2               	incf	___fltol@f1+1,f
  7260  087E  1903               	skipnz
  7261  087F  0AD3               	incf	___fltol@f1+2,f
  7262  0880  1903               	skipnz
  7263  0881  0AD4               	incf	___fltol@f1+3,f
  7264  0882                     l602:
  7265  0882                     l592:
  7266  0882  0008               	return
  7267  0883                     __end_of___fltol:
  7268                           
  7269                           	psect	text18
  7270  1A11                     __ptext18:	
  7271 ;; *************** function ___flsub *****************
  7272 ;; Defined at:
  7273 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7274 ;; Parameters:    Size  Location     Type
  7275 ;;  a               4   70[BANK0 ] long 
  7276 ;;  b               4   74[BANK0 ] long 
  7277 ;; Auto vars:     Size  Location     Type
  7278 ;;		None
  7279 ;; Return value:  Size  Location     Type
  7280 ;;                  4   70[BANK0 ] long 
  7281 ;; Registers used:
  7282 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7283 ;; Tracked objects:
  7284 ;;		On entry : 0/0
  7285 ;;		On exit  : 0/0
  7286 ;;		Unchanged: 0/0
  7287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7288 ;;      Params:         0       8       0       0       0
  7289 ;;      Locals:         0       0       0       0       0
  7290 ;;      Temps:          0       0       0       0       0
  7291 ;;      Totals:         0       8       0       0       0
  7292 ;;Total ram usage:        8 bytes
  7293 ;; Hardware stack levels used:    1
  7294 ;; Hardware stack levels required when called:    1
  7295 ;; This function calls:
  7296 ;;		___fladd
  7297 ;; This function is called by:
  7298 ;;		_sprintf
  7299 ;; This function uses a non-reentrant model
  7300 ;;
  7301                           
  7302                           
  7303                           ;psect for function ___flsub
  7304  1A11                     ___flsub:
  7305  1A11                     l3142:	
  7306                           ;incstack = 0
  7307                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7308                           
  7309  1A11  3080               	movlw	128
  7310  1A12  1283               	bcf	3,5	;RP0=0, select bank0
  7311  1A13  1303               	bcf	3,6	;RP1=0, select bank0
  7312  1A14  06E9               	xorwf	___flsub@a+3,f
  7313  1A15                     l3144:
  7314  1A15  086D               	movf	___flsub@b+3,w
  7315  1A16  00D5               	movwf	___fladd@b+3
  7316  1A17  086C               	movf	___flsub@b+2,w
  7317  1A18  00D4               	movwf	___fladd@b+2
  7318  1A19  086B               	movf	___flsub@b+1,w
  7319  1A1A  00D3               	movwf	___fladd@b+1
  7320  1A1B  086A               	movf	___flsub@b,w
  7321  1A1C  00D2               	movwf	___fladd@b
  7322  1A1D  0869               	movf	___flsub@a+3,w
  7323  1A1E  00D9               	movwf	___fladd@a+3
  7324  1A1F  0868               	movf	___flsub@a+2,w
  7325  1A20  00D8               	movwf	___fladd@a+2
  7326  1A21  0867               	movf	___flsub@a+1,w
  7327  1A22  00D7               	movwf	___fladd@a+1
  7328  1A23  0866               	movf	___flsub@a,w
  7329  1A24  00D6               	movwf	___fladd@a
  7330  1A25  160A  118A  22B3  160A  158A  	fcall	___fladd
  7331  1A2A  1283               	bcf	3,5	;RP0=0, select bank0
  7332  1A2B  1303               	bcf	3,6	;RP1=0, select bank0
  7333  1A2C  0855               	movf	?___fladd+3,w
  7334  1A2D  00E9               	movwf	?___flsub+3
  7335  1A2E  0854               	movf	?___fladd+2,w
  7336  1A2F  00E8               	movwf	?___flsub+2
  7337  1A30  0853               	movf	?___fladd+1,w
  7338  1A31  00E7               	movwf	?___flsub+1
  7339  1A32  0852               	movf	?___fladd,w
  7340  1A33  00E6               	movwf	?___flsub
  7341  1A34                     l762:
  7342  1A34  0008               	return
  7343  1A35                     __end_of___flsub:
  7344                           
  7345                           	psect	text19
  7346  12B3                     __ptext19:	
  7347 ;; *************** function ___fladd *****************
  7348 ;; Defined at:
  7349 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7350 ;; Parameters:    Size  Location     Type
  7351 ;;  b               4   50[BANK0 ] long 
  7352 ;;  a               4   54[BANK0 ] long 
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;  grs             1   69[BANK0 ] unsigned char 
  7355 ;;  bexp            1   68[BANK0 ] unsigned char 
  7356 ;;  aexp            1   67[BANK0 ] unsigned char 
  7357 ;;  signs           1   66[BANK0 ] unsigned char 
  7358 ;; Return value:  Size  Location     Type
  7359 ;;                  4   50[BANK0 ] unsigned char 
  7360 ;; Registers used:
  7361 ;;		wreg, status,2, status,0, btemp+1
  7362 ;; Tracked objects:
  7363 ;;		On entry : 0/0
  7364 ;;		On exit  : 0/0
  7365 ;;		Unchanged: 0/0
  7366 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7367 ;;      Params:         0       8       0       0       0
  7368 ;;      Locals:         0       4       0       0       0
  7369 ;;      Temps:          0       8       0       0       0
  7370 ;;      Totals:         0      20       0       0       0
  7371 ;;Total ram usage:       20 bytes
  7372 ;; Hardware stack levels used:    1
  7373 ;; This function calls:
  7374 ;;		Nothing
  7375 ;; This function is called by:
  7376 ;;		_sprintf
  7377 ;;		___flsub
  7378 ;; This function uses a non-reentrant model
  7379 ;;
  7380                           
  7381                           
  7382                           ;psect for function ___fladd
  7383  12B3                     ___fladd:
  7384  12B3                     l2476:	
  7385                           ;incstack = 0
  7386                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7387                           
  7388  12B3  1283               	bcf	3,5	;RP0=0, select bank0
  7389  12B4  1303               	bcf	3,6	;RP1=0, select bank0
  7390  12B5  0855               	movf	___fladd@b+3,w
  7391  12B6  3980               	andlw	128
  7392  12B7  00DA               	movwf	??___fladd
  7393  12B8  085A               	movf	??___fladd,w
  7394  12B9  00E2               	movwf	___fladd@signs
  7395  12BA                     l2478:
  7396  12BA  0855               	movf	___fladd@b+3,w
  7397  12BB  00DA               	movwf	??___fladd
  7398  12BC  075A               	addwf	??___fladd,w
  7399  12BD  00DB               	movwf	??___fladd+1
  7400  12BE  085B               	movf	??___fladd+1,w
  7401  12BF  00E4               	movwf	___fladd@bexp
  7402  12C0                     l2480:
  7403  12C0  1FD4               	btfss	___fladd@b+2,7
  7404  12C1  2AC3               	goto	u3241
  7405  12C2  2AC4               	goto	u3240
  7406  12C3                     u3241:
  7407  12C3  2AC5               	goto	l2484
  7408  12C4                     u3240:
  7409  12C4                     l2482:
  7410  12C4  1464               	bsf	___fladd@bexp,0
  7411  12C5                     l2484:
  7412  12C5  0864               	movf	___fladd@bexp,w
  7413  12C6  1903               	btfsc	3,2
  7414  12C7  2AC9               	goto	u3251
  7415  12C8  2ACA               	goto	u3250
  7416  12C9                     u3251:
  7417  12C9  2ADA               	goto	l2494
  7418  12CA                     u3250:
  7419  12CA                     l2486:
  7420  12CA  0A64               	incf	___fladd@bexp,w
  7421  12CB  1D03               	btfss	3,2
  7422  12CC  2ACE               	goto	u3261
  7423  12CD  2ACF               	goto	u3260
  7424  12CE                     u3261:
  7425  12CE  2AD7               	goto	l2490
  7426  12CF                     u3260:
  7427  12CF                     l2488:
  7428  12CF  3000               	movlw	0
  7429  12D0  00D5               	movwf	___fladd@b+3
  7430  12D1  3000               	movlw	0
  7431  12D2  00D4               	movwf	___fladd@b+2
  7432  12D3  3000               	movlw	0
  7433  12D4  00D3               	movwf	___fladd@b+1
  7434  12D5  3000               	movlw	0
  7435  12D6  00D2               	movwf	___fladd@b
  7436  12D7                     l2490:
  7437  12D7  17D4               	bsf	___fladd@b+2,7
  7438  12D8                     l2492:
  7439  12D8  01D5               	clrf	___fladd@b+3
  7440  12D9  2AE2               	goto	l2496
  7441  12DA                     l2494:
  7442  12DA  3000               	movlw	0
  7443  12DB  00D5               	movwf	___fladd@b+3
  7444  12DC  3000               	movlw	0
  7445  12DD  00D4               	movwf	___fladd@b+2
  7446  12DE  3000               	movlw	0
  7447  12DF  00D3               	movwf	___fladd@b+1
  7448  12E0  3000               	movlw	0
  7449  12E1  00D2               	movwf	___fladd@b
  7450  12E2                     l2496:
  7451  12E2  0859               	movf	___fladd@a+3,w
  7452  12E3  3980               	andlw	128
  7453  12E4  00DA               	movwf	??___fladd
  7454  12E5  085A               	movf	??___fladd,w
  7455  12E6  00E3               	movwf	___fladd@aexp
  7456  12E7                     l2498:
  7457  12E7  0863               	movf	___fladd@aexp,w
  7458  12E8  0662               	xorwf	___fladd@signs,w
  7459  12E9  1903               	skipnz
  7460  12EA  2AEC               	goto	u3271
  7461  12EB  2AED               	goto	u3270
  7462  12EC                     u3271:
  7463  12EC  2AEE               	goto	l2502
  7464  12ED                     u3270:
  7465  12ED                     l2500:
  7466  12ED  1762               	bsf	___fladd@signs,6
  7467  12EE                     l2502:
  7468  12EE  0859               	movf	___fladd@a+3,w
  7469  12EF  00DA               	movwf	??___fladd
  7470  12F0  075A               	addwf	??___fladd,w
  7471  12F1  00DB               	movwf	??___fladd+1
  7472  12F2  085B               	movf	??___fladd+1,w
  7473  12F3  00E3               	movwf	___fladd@aexp
  7474  12F4                     l2504:
  7475  12F4  1FD8               	btfss	___fladd@a+2,7
  7476  12F5  2AF7               	goto	u3281
  7477  12F6  2AF8               	goto	u3280
  7478  12F7                     u3281:
  7479  12F7  2AF9               	goto	l2508
  7480  12F8                     u3280:
  7481  12F8                     l2506:
  7482  12F8  1463               	bsf	___fladd@aexp,0
  7483  12F9                     l2508:
  7484  12F9  0863               	movf	___fladd@aexp,w
  7485  12FA  1903               	btfsc	3,2
  7486  12FB  2AFD               	goto	u3291
  7487  12FC  2AFE               	goto	u3290
  7488  12FD                     u3291:
  7489  12FD  2B0E               	goto	l2518
  7490  12FE                     u3290:
  7491  12FE                     l2510:
  7492  12FE  0A63               	incf	___fladd@aexp,w
  7493  12FF  1D03               	btfss	3,2
  7494  1300  2B02               	goto	u3301
  7495  1301  2B03               	goto	u3300
  7496  1302                     u3301:
  7497  1302  2B0B               	goto	l2514
  7498  1303                     u3300:
  7499  1303                     l2512:
  7500  1303  3000               	movlw	0
  7501  1304  00D9               	movwf	___fladd@a+3
  7502  1305  3000               	movlw	0
  7503  1306  00D8               	movwf	___fladd@a+2
  7504  1307  3000               	movlw	0
  7505  1308  00D7               	movwf	___fladd@a+1
  7506  1309  3000               	movlw	0
  7507  130A  00D6               	movwf	___fladd@a
  7508  130B                     l2514:
  7509  130B  17D8               	bsf	___fladd@a+2,7
  7510  130C                     l2516:
  7511  130C  01D9               	clrf	___fladd@a+3
  7512  130D  2B16               	goto	l716
  7513  130E                     l2518:
  7514  130E  3000               	movlw	0
  7515  130F  00D9               	movwf	___fladd@a+3
  7516  1310  3000               	movlw	0
  7517  1311  00D8               	movwf	___fladd@a+2
  7518  1312  3000               	movlw	0
  7519  1313  00D7               	movwf	___fladd@a+1
  7520  1314  3000               	movlw	0
  7521  1315  00D6               	movwf	___fladd@a
  7522  1316                     l716:
  7523  1316  0864               	movf	___fladd@bexp,w
  7524  1317  0263               	subwf	___fladd@aexp,w
  7525  1318  1803               	skipnc
  7526  1319  2B1B               	goto	u3311
  7527  131A  2B1C               	goto	u3310
  7528  131B                     u3311:
  7529  131B  2B60               	goto	l2554
  7530  131C                     u3310:
  7531  131C                     l2520:
  7532  131C  1F62               	btfss	___fladd@signs,6
  7533  131D  2B1F               	goto	u3321
  7534  131E  2B20               	goto	u3320
  7535  131F                     u3321:
  7536  131F  2B24               	goto	l2524
  7537  1320                     u3320:
  7538  1320                     l2522:
  7539  1320  3080               	movlw	128
  7540  1321  00DA               	movwf	??___fladd
  7541  1322  085A               	movf	??___fladd,w
  7542  1323  06E2               	xorwf	___fladd@signs,f
  7543  1324                     l2524:
  7544  1324  0864               	movf	___fladd@bexp,w
  7545  1325  00DA               	movwf	??___fladd
  7546  1326  085A               	movf	??___fladd,w
  7547  1327  00E5               	movwf	___fladd@grs
  7548  1328                     l2526:
  7549  1328  0863               	movf	___fladd@aexp,w
  7550  1329  00DA               	movwf	??___fladd
  7551  132A  085A               	movf	??___fladd,w
  7552  132B  00E4               	movwf	___fladd@bexp
  7553  132C                     l2528:
  7554  132C  0865               	movf	___fladd@grs,w
  7555  132D  00DA               	movwf	??___fladd
  7556  132E  085A               	movf	??___fladd,w
  7557  132F  00E3               	movwf	___fladd@aexp
  7558  1330                     l2530:
  7559  1330  0852               	movf	___fladd@b,w
  7560  1331  00DA               	movwf	??___fladd
  7561  1332  085A               	movf	??___fladd,w
  7562  1333  00E5               	movwf	___fladd@grs
  7563  1334                     l2532:
  7564  1334  0856               	movf	___fladd@a,w
  7565  1335  00DA               	movwf	??___fladd
  7566  1336  085A               	movf	??___fladd,w
  7567  1337  00D2               	movwf	___fladd@b
  7568  1338                     l2534:
  7569  1338  0865               	movf	___fladd@grs,w
  7570  1339  00DA               	movwf	??___fladd
  7571  133A  085A               	movf	??___fladd,w
  7572  133B  00D6               	movwf	___fladd@a
  7573  133C                     l2536:
  7574  133C  0853               	movf	___fladd@b+1,w
  7575  133D  00DA               	movwf	??___fladd
  7576  133E  085A               	movf	??___fladd,w
  7577  133F  00E5               	movwf	___fladd@grs
  7578  1340                     l2538:
  7579  1340  0857               	movf	___fladd@a+1,w
  7580  1341  00DA               	movwf	??___fladd
  7581  1342  085A               	movf	??___fladd,w
  7582  1343  00D3               	movwf	___fladd@b+1
  7583  1344                     l2540:
  7584  1344  0865               	movf	___fladd@grs,w
  7585  1345  00DA               	movwf	??___fladd
  7586  1346  085A               	movf	??___fladd,w
  7587  1347  00D7               	movwf	___fladd@a+1
  7588  1348                     l2542:
  7589  1348  0854               	movf	___fladd@b+2,w
  7590  1349  00DA               	movwf	??___fladd
  7591  134A  085A               	movf	??___fladd,w
  7592  134B  00E5               	movwf	___fladd@grs
  7593  134C                     l2544:
  7594  134C  0858               	movf	___fladd@a+2,w
  7595  134D  00DA               	movwf	??___fladd
  7596  134E  085A               	movf	??___fladd,w
  7597  134F  00D4               	movwf	___fladd@b+2
  7598  1350                     l2546:
  7599  1350  0865               	movf	___fladd@grs,w
  7600  1351  00DA               	movwf	??___fladd
  7601  1352  085A               	movf	??___fladd,w
  7602  1353  00D8               	movwf	___fladd@a+2
  7603  1354                     l2548:
  7604  1354  0855               	movf	___fladd@b+3,w
  7605  1355  00DA               	movwf	??___fladd
  7606  1356  085A               	movf	??___fladd,w
  7607  1357  00E5               	movwf	___fladd@grs
  7608  1358                     l2550:
  7609  1358  0859               	movf	___fladd@a+3,w
  7610  1359  00DA               	movwf	??___fladd
  7611  135A  085A               	movf	??___fladd,w
  7612  135B  00D5               	movwf	___fladd@b+3
  7613  135C                     l2552:
  7614  135C  0865               	movf	___fladd@grs,w
  7615  135D  00DA               	movwf	??___fladd
  7616  135E  085A               	movf	??___fladd,w
  7617  135F  00D9               	movwf	___fladd@a+3
  7618  1360                     l2554:
  7619  1360  01E5               	clrf	___fladd@grs
  7620  1361                     l2556:
  7621  1361  0863               	movf	___fladd@aexp,w
  7622  1362  00DA               	movwf	??___fladd
  7623  1363  01DB               	clrf	??___fladd+1
  7624  1364  085B               	movf	??___fladd+1,w
  7625  1365  00DD               	movwf	??___fladd+3
  7626  1366  0864               	movf	___fladd@bexp,w
  7627  1367  025A               	subwf	??___fladd,w
  7628  1368  00DC               	movwf	??___fladd+2
  7629  1369  1C03               	skipc
  7630  136A  03DD               	decf	??___fladd+3,f
  7631  136B  085D               	movf	??___fladd+3,w
  7632  136C  3A80               	xorlw	128
  7633  136D  00FF               	movwf	btemp+1
  7634  136E  3080               	movlw	128
  7635  136F  027F               	subwf	btemp+1,w
  7636  1370  1D03               	skipz
  7637  1371  2B74               	goto	u3335
  7638  1372  301A               	movlw	26
  7639  1373  025C               	subwf	??___fladd+2,w
  7640  1374                     u3335:
  7641  1374  1C03               	skipc
  7642  1375  2B77               	goto	u3331
  7643  1376  2B78               	goto	u3330
  7644  1377                     u3331:
  7645  1377  2BB5               	goto	l2572
  7646  1378                     u3330:
  7647  1378                     l2558:
  7648  1378  1283               	bcf	3,5	;RP0=0, select bank0
  7649  1379  1303               	bcf	3,6	;RP1=0, select bank0
  7650  137A  0855               	movf	___fladd@b+3,w
  7651  137B  0454               	iorwf	___fladd@b+2,w
  7652  137C  0453               	iorwf	___fladd@b+1,w
  7653  137D  0452               	iorwf	___fladd@b,w
  7654  137E  1D03               	skipz
  7655  137F  2B81               	goto	u3341
  7656  1380  2B83               	goto	u3340
  7657  1381                     u3341:
  7658  1381  3001               	movlw	1
  7659  1382  2B84               	goto	u3350
  7660  1383                     u3340:
  7661  1383  3000               	movlw	0
  7662  1384                     u3350:
  7663  1384  00DA               	movwf	??___fladd
  7664  1385  085A               	movf	??___fladd,w
  7665  1386  00E5               	movwf	___fladd@grs
  7666  1387  3000               	movlw	0
  7667  1388  00D5               	movwf	___fladd@b+3
  7668  1389  3000               	movlw	0
  7669  138A  00D4               	movwf	___fladd@b+2
  7670  138B  3000               	movlw	0
  7671  138C  00D3               	movwf	___fladd@b+1
  7672  138D  3000               	movlw	0
  7673  138E  00D2               	movwf	___fladd@b
  7674  138F  0863               	movf	___fladd@aexp,w
  7675  1390  00DA               	movwf	??___fladd
  7676  1391  085A               	movf	??___fladd,w
  7677  1392  00E4               	movwf	___fladd@bexp
  7678  1393  2BBD               	goto	l720
  7679  1394                     l722:
  7680  1394  1C65               	btfss	___fladd@grs,0
  7681  1395  2B97               	goto	u3361
  7682  1396  2B98               	goto	u3360
  7683  1397                     u3361:
  7684  1397  2BA1               	goto	l2562
  7685  1398                     u3360:
  7686  1398                     l2560:
  7687  1398  0865               	movf	___fladd@grs,w
  7688  1399  00DA               	movwf	??___fladd
  7689  139A  1003               	clrc
  7690  139B  0C5A               	rrf	??___fladd,w
  7691  139C  3801               	iorlw	1
  7692  139D  00DB               	movwf	??___fladd+1
  7693  139E  085B               	movf	??___fladd+1,w
  7694  139F  00E5               	movwf	___fladd@grs
  7695  13A0  2BA3               	goto	l2564
  7696  13A1                     l2562:
  7697  13A1  1003               	clrc
  7698  13A2  0CE5               	rrf	___fladd@grs,f
  7699  13A3                     l2564:
  7700  13A3  1C52               	btfss	___fladd@b,0
  7701  13A4  2BA6               	goto	u3371
  7702  13A5  2BA7               	goto	u3370
  7703  13A6                     u3371:
  7704  13A6  2BA8               	goto	l2568
  7705  13A7                     u3370:
  7706  13A7                     l2566:
  7707  13A7  17E5               	bsf	___fladd@grs,7
  7708  13A8                     l2568:
  7709  13A8  3001               	movlw	1
  7710  13A9  00DA               	movwf	??___fladd
  7711  13AA                     u3385:
  7712  13AA  0D55               	rlf	___fladd@b+3,w
  7713  13AB  0CD5               	rrf	___fladd@b+3,f
  7714  13AC  0CD4               	rrf	___fladd@b+2,f
  7715  13AD  0CD3               	rrf	___fladd@b+1,f
  7716  13AE  0CD2               	rrf	___fladd@b,f
  7717  13AF  0BDA               	decfsz	??___fladd& (0+127),f
  7718  13B0  2BAA               	goto	u3385
  7719  13B1                     l2570:
  7720  13B1  3001               	movlw	1
  7721  13B2  00DA               	movwf	??___fladd
  7722  13B3  085A               	movf	??___fladd,w
  7723  13B4  07E4               	addwf	___fladd@bexp,f
  7724  13B5                     l2572:
  7725  13B5  1283               	bcf	3,5	;RP0=0, select bank0
  7726  13B6  1303               	bcf	3,6	;RP1=0, select bank0
  7727  13B7  0863               	movf	___fladd@aexp,w
  7728  13B8  0264               	subwf	___fladd@bexp,w
  7729  13B9  1C03               	skipc
  7730  13BA  2BBC               	goto	u3391
  7731  13BB  2BBD               	goto	u3390
  7732  13BC                     u3391:
  7733  13BC  2B94               	goto	l722
  7734  13BD                     u3390:
  7735  13BD                     l720:
  7736  13BD  1B62               	btfsc	___fladd@signs,6
  7737  13BE  2BC0               	goto	u3401
  7738  13BF  2BC1               	goto	u3400
  7739  13C0                     u3401:
  7740  13C0  2C0C               	goto	l2598
  7741  13C1                     u3400:
  7742  13C1                     l2574:
  7743  13C1  0864               	movf	___fladd@bexp,w
  7744  13C2  1D03               	btfss	3,2
  7745  13C3  2BC5               	goto	u3411
  7746  13C4  2BC6               	goto	u3410
  7747  13C5                     u3411:
  7748  13C5  2BCF               	goto	l2580
  7749  13C6                     u3410:
  7750  13C6                     l2576:
  7751  13C6  3000               	movlw	0
  7752  13C7  00D5               	movwf	?___fladd+3
  7753  13C8  3000               	movlw	0
  7754  13C9  00D4               	movwf	?___fladd+2
  7755  13CA  3000               	movlw	0
  7756  13CB  00D3               	movwf	?___fladd+1
  7757  13CC  3000               	movlw	0
  7758  13CD  00D2               	movwf	?___fladd
  7759  13CE  2D3A               	goto	l729
  7760  13CF                     l2580:
  7761  13CF  0856               	movf	___fladd@a,w
  7762  13D0  07D2               	addwf	___fladd@b,f
  7763  13D1  0857               	movf	___fladd@a+1,w
  7764  13D2  1103               	clrz
  7765  13D3  1803               	skipnc
  7766  13D4  3E01               	addlw	1
  7767  13D5  1903               	skipnz
  7768  13D6  2BD8               	goto	u3421
  7769  13D7  07D3               	addwf	___fladd@b+1,f
  7770  13D8                     u3421:
  7771  13D8  0858               	movf	___fladd@a+2,w
  7772  13D9  1103               	clrz
  7773  13DA  1803               	skipnc
  7774  13DB  3E01               	addlw	1
  7775  13DC  1903               	skipnz
  7776  13DD  2BDF               	goto	u3422
  7777  13DE  07D4               	addwf	___fladd@b+2,f
  7778  13DF                     u3422:
  7779  13DF  0859               	movf	___fladd@a+3,w
  7780  13E0  1103               	clrz
  7781  13E1  1803               	skipnc
  7782  13E2  3E01               	addlw	1
  7783  13E3  1903               	skipnz
  7784  13E4  2BE6               	goto	u3423
  7785  13E5  07D5               	addwf	___fladd@b+3,f
  7786  13E6                     u3423:
  7787  13E6                     l2582:
  7788  13E6  1C55               	btfss	___fladd@b+3,0
  7789  13E7  2BE9               	goto	u3431
  7790  13E8  2BEA               	goto	u3430
  7791  13E9                     u3431:
  7792  13E9  2CC0               	goto	l2632
  7793  13EA                     u3430:
  7794  13EA                     l2584:
  7795  13EA  1C65               	btfss	___fladd@grs,0
  7796  13EB  2BED               	goto	u3441
  7797  13EC  2BEE               	goto	u3440
  7798  13ED                     u3441:
  7799  13ED  2BF7               	goto	l2588
  7800  13EE                     u3440:
  7801  13EE                     l2586:
  7802  13EE  0865               	movf	___fladd@grs,w
  7803  13EF  00DA               	movwf	??___fladd
  7804  13F0  1003               	clrc
  7805  13F1  0C5A               	rrf	??___fladd,w
  7806  13F2  3801               	iorlw	1
  7807  13F3  00DB               	movwf	??___fladd+1
  7808  13F4  085B               	movf	??___fladd+1,w
  7809  13F5  00E5               	movwf	___fladd@grs
  7810  13F6  2BF9               	goto	l2590
  7811  13F7                     l2588:
  7812  13F7  1003               	clrc
  7813  13F8  0CE5               	rrf	___fladd@grs,f
  7814  13F9                     l2590:
  7815  13F9  1C52               	btfss	___fladd@b,0
  7816  13FA  2BFC               	goto	u3451
  7817  13FB  2BFD               	goto	u3450
  7818  13FC                     u3451:
  7819  13FC  2BFE               	goto	l2594
  7820  13FD                     u3450:
  7821  13FD                     l2592:
  7822  13FD  17E5               	bsf	___fladd@grs,7
  7823  13FE                     l2594:
  7824  13FE  3001               	movlw	1
  7825  13FF  00DA               	movwf	??___fladd
  7826  1400                     u3465:
  7827  1400  0D55               	rlf	___fladd@b+3,w
  7828  1401  0CD5               	rrf	___fladd@b+3,f
  7829  1402  0CD4               	rrf	___fladd@b+2,f
  7830  1403  0CD3               	rrf	___fladd@b+1,f
  7831  1404  0CD2               	rrf	___fladd@b,f
  7832  1405  0BDA               	decfsz	??___fladd& (0+127),f
  7833  1406  2C00               	goto	u3465
  7834  1407                     l2596:
  7835  1407  3001               	movlw	1
  7836  1408  00DA               	movwf	??___fladd
  7837  1409  085A               	movf	??___fladd,w
  7838  140A  07E4               	addwf	___fladd@bexp,f
  7839  140B  2CC0               	goto	l2632
  7840  140C                     l2598:
  7841  140C  0855               	movf	___fladd@b+3,w
  7842  140D  3A80               	xorlw	128
  7843  140E  00FF               	movwf	btemp+1
  7844  140F  0859               	movf	___fladd@a+3,w
  7845  1410  3A80               	xorlw	128
  7846  1411  027F               	subwf	btemp+1,w
  7847  1412  1D03               	skipz
  7848  1413  2C1E               	goto	u3473
  7849  1414  0858               	movf	___fladd@a+2,w
  7850  1415  0254               	subwf	___fladd@b+2,w
  7851  1416  1D03               	skipz
  7852  1417  2C1E               	goto	u3473
  7853  1418  0857               	movf	___fladd@a+1,w
  7854  1419  0253               	subwf	___fladd@b+1,w
  7855  141A  1D03               	skipz
  7856  141B  2C1E               	goto	u3473
  7857  141C  0856               	movf	___fladd@a,w
  7858  141D  0252               	subwf	___fladd@b,w
  7859  141E                     u3473:
  7860  141E  1803               	skipnc
  7861  141F  2C21               	goto	u3471
  7862  1420  2C22               	goto	u3470
  7863  1421                     u3471:
  7864  1421  2C7A               	goto	l2608
  7865  1422                     u3470:
  7866  1422                     l2600:
  7867  1422  30FF               	movlw	255
  7868  1423  00DA               	movwf	??___fladd
  7869  1424  30FF               	movlw	255
  7870  1425  00DB               	movwf	??___fladd+1
  7871  1426  30FF               	movlw	255
  7872  1427  00DC               	movwf	??___fladd+2
  7873  1428  30FF               	movlw	255
  7874  1429  00DD               	movwf	??___fladd+3
  7875  142A  0856               	movf	___fladd@a,w
  7876  142B  00DE               	movwf	??___fladd+4
  7877  142C  0857               	movf	___fladd@a+1,w
  7878  142D  00DF               	movwf	??___fladd+5
  7879  142E  0858               	movf	___fladd@a+2,w
  7880  142F  00E0               	movwf	??___fladd+6
  7881  1430  0859               	movf	___fladd@a+3,w
  7882  1431  00E1               	movwf	??___fladd+7
  7883  1432  0852               	movf	___fladd@b,w
  7884  1433  02DE               	subwf	??___fladd+4,f
  7885  1434  0853               	movf	___fladd@b+1,w
  7886  1435  1C03               	skipc
  7887  1436  0F53               	incfsz	___fladd@b+1,w
  7888  1437  2C39               	goto	u3481
  7889  1438  2C3A               	goto	u3482
  7890  1439                     u3481:
  7891  1439  02DF               	subwf	??___fladd+5,f
  7892  143A                     u3482:
  7893  143A  0854               	movf	___fladd@b+2,w
  7894  143B  1C03               	skipc
  7895  143C  0F54               	incfsz	___fladd@b+2,w
  7896  143D  2C3F               	goto	u3483
  7897  143E  2C40               	goto	u3484
  7898  143F                     u3483:
  7899  143F  02E0               	subwf	??___fladd+6,f
  7900  1440                     u3484:
  7901  1440  0855               	movf	___fladd@b+3,w
  7902  1441  1C03               	skipc
  7903  1442  0F55               	incfsz	___fladd@b+3,w
  7904  1443  2C45               	goto	u3485
  7905  1444  2C46               	goto	u3486
  7906  1445                     u3485:
  7907  1445  02E1               	subwf	??___fladd+7,f
  7908  1446                     u3486:
  7909  1446  085E               	movf	??___fladd+4,w
  7910  1447  07DA               	addwf	??___fladd,f
  7911  1448  085F               	movf	??___fladd+5,w
  7912  1449  1803               	skipnc
  7913  144A  0F5F               	incfsz	??___fladd+5,w
  7914  144B  2C4D               	goto	u3490
  7915  144C  2C4E               	goto	u3491
  7916  144D                     u3490:
  7917  144D  07DB               	addwf	??___fladd+1,f
  7918  144E                     u3491:
  7919  144E  0860               	movf	??___fladd+6,w
  7920  144F  1803               	skipnc
  7921  1450  0F60               	incfsz	??___fladd+6,w
  7922  1451  2C53               	goto	u3492
  7923  1452  2C54               	goto	u3493
  7924  1453                     u3492:
  7925  1453  07DC               	addwf	??___fladd+2,f
  7926  1454                     u3493:
  7927  1454  0861               	movf	??___fladd+7,w
  7928  1455  1803               	skipnc
  7929  1456  0A61               	incf	??___fladd+7,w
  7930  1457  07DD               	addwf	??___fladd+3,f
  7931  1458  085D               	movf	??___fladd+3,w
  7932  1459  00D5               	movwf	___fladd@b+3
  7933  145A  085C               	movf	??___fladd+2,w
  7934  145B  00D4               	movwf	___fladd@b+2
  7935  145C  085B               	movf	??___fladd+1,w
  7936  145D  00D3               	movwf	___fladd@b+1
  7937  145E  085A               	movf	??___fladd,w
  7938  145F  00D2               	movwf	___fladd@b
  7939  1460                     l2602:
  7940  1460  3080               	movlw	128
  7941  1461  00DA               	movwf	??___fladd
  7942  1462  085A               	movf	??___fladd,w
  7943  1463  06E2               	xorwf	___fladd@signs,f
  7944  1464  09E5               	comf	___fladd@grs,f
  7945  1465  0AE5               	incf	___fladd@grs,f
  7946  1466                     l2604:
  7947  1466  0865               	movf	___fladd@grs,w
  7948  1467  1D03               	btfss	3,2
  7949  1468  2C6A               	goto	u3501
  7950  1469  2C6B               	goto	u3500
  7951  146A                     u3501:
  7952  146A  2C88               	goto	l737
  7953  146B                     u3500:
  7954  146B                     l2606:
  7955  146B  3001               	movlw	1
  7956  146C  07D2               	addwf	___fladd@b,f
  7957  146D  3000               	movlw	0
  7958  146E  1803               	skipnc
  7959  146F  3001               	movlw	1
  7960  1470  07D3               	addwf	___fladd@b+1,f
  7961  1471  3000               	movlw	0
  7962  1472  1803               	skipnc
  7963  1473  3001               	movlw	1
  7964  1474  07D4               	addwf	___fladd@b+2,f
  7965  1475  3000               	movlw	0
  7966  1476  1803               	skipnc
  7967  1477  3001               	movlw	1
  7968  1478  07D5               	addwf	___fladd@b+3,f
  7969  1479  2C88               	goto	l737
  7970  147A                     l2608:
  7971  147A  0856               	movf	___fladd@a,w
  7972  147B  02D2               	subwf	___fladd@b,f
  7973  147C  0857               	movf	___fladd@a+1,w
  7974  147D  1C03               	skipc
  7975  147E  0F57               	incfsz	___fladd@a+1,w
  7976  147F  02D3               	subwf	___fladd@b+1,f
  7977  1480  0858               	movf	___fladd@a+2,w
  7978  1481  1C03               	skipc
  7979  1482  0F58               	incfsz	___fladd@a+2,w
  7980  1483  02D4               	subwf	___fladd@b+2,f
  7981  1484  0859               	movf	___fladd@a+3,w
  7982  1485  1C03               	skipc
  7983  1486  0F59               	incfsz	___fladd@a+3,w
  7984  1487  02D5               	subwf	___fladd@b+3,f
  7985  1488                     l737:
  7986  1488  0855               	movf	___fladd@b+3,w
  7987  1489  0454               	iorwf	___fladd@b+2,w
  7988  148A  0453               	iorwf	___fladd@b+1,w
  7989  148B  0452               	iorwf	___fladd@b,w
  7990  148C  1D03               	skipz
  7991  148D  2C8F               	goto	u3511
  7992  148E  2C90               	goto	u3510
  7993  148F                     u3511:
  7994  148F  2CBC               	goto	l2630
  7995  1490                     u3510:
  7996  1490                     l2610:
  7997  1490  0865               	movf	___fladd@grs,w
  7998  1491  1D03               	btfss	3,2
  7999  1492  2C94               	goto	u3521
  8000  1493  2C95               	goto	u3520
  8001  1494                     u3521:
  8002  1494  2CBC               	goto	l2630
  8003  1495                     u3520:
  8004  1495                     l2612:
  8005  1495  3000               	movlw	0
  8006  1496  00D5               	movwf	?___fladd+3
  8007  1497  3000               	movlw	0
  8008  1498  00D4               	movwf	?___fladd+2
  8009  1499  3000               	movlw	0
  8010  149A  00D3               	movwf	?___fladd+1
  8011  149B  3000               	movlw	0
  8012  149C  00D2               	movwf	?___fladd
  8013  149D  2D3A               	goto	l729
  8014  149E                     l2616:
  8015  149E  3001               	movlw	1
  8016  149F  00DA               	movwf	??___fladd
  8017  14A0                     u3535:
  8018  14A0  1003               	clrc
  8019  14A1  0DD2               	rlf	___fladd@b,f
  8020  14A2  0DD3               	rlf	___fladd@b+1,f
  8021  14A3  0DD4               	rlf	___fladd@b+2,f
  8022  14A4  0DD5               	rlf	___fladd@b+3,f
  8023  14A5  0BDA               	decfsz	??___fladd,f
  8024  14A6  2CA0               	goto	u3535
  8025  14A7                     l2618:
  8026  14A7  1FE5               	btfss	___fladd@grs,7
  8027  14A8  2CAA               	goto	u3541
  8028  14A9  2CAB               	goto	u3540
  8029  14AA                     u3541:
  8030  14AA  2CAC               	goto	l741
  8031  14AB                     u3540:
  8032  14AB                     l2620:
  8033  14AB  1452               	bsf	___fladd@b,0
  8034  14AC                     l741:
  8035  14AC  1C65               	btfss	___fladd@grs,0
  8036  14AD  2CAF               	goto	u3551
  8037  14AE  2CB0               	goto	u3550
  8038  14AF                     u3551:
  8039  14AF  2CB3               	goto	l2624
  8040  14B0                     u3550:
  8041  14B0                     l2622:
  8042  14B0  1403               	setc
  8043  14B1  0DE5               	rlf	___fladd@grs,f
  8044  14B2  2CB5               	goto	l2626
  8045  14B3                     l2624:
  8046  14B3  1003               	clrc
  8047  14B4  0DE5               	rlf	___fladd@grs,f
  8048  14B5                     l2626:
  8049  14B5  0864               	movf	___fladd@bexp,w
  8050  14B6  1903               	btfsc	3,2
  8051  14B7  2CB9               	goto	u3561
  8052  14B8  2CBA               	goto	u3560
  8053  14B9                     u3561:
  8054  14B9  2CBC               	goto	l2630
  8055  14BA                     u3560:
  8056  14BA                     l2628:
  8057  14BA  3001               	movlw	1
  8058  14BB  02E4               	subwf	___fladd@bexp,f
  8059  14BC                     l2630:
  8060  14BC  1FD4               	btfss	___fladd@b+2,7
  8061  14BD  2CBF               	goto	u3571
  8062  14BE  2CC0               	goto	u3570
  8063  14BF                     u3571:
  8064  14BF  2C9E               	goto	l2616
  8065  14C0                     u3570:
  8066  14C0                     l2632:
  8067  14C0  01E3               	clrf	___fladd@aexp
  8068  14C1                     l2634:
  8069  14C1  1FE5               	btfss	___fladd@grs,7
  8070  14C2  2CC4               	goto	u3581
  8071  14C3  2CC5               	goto	u3580
  8072  14C4                     u3581:
  8073  14C4  2CD3               	goto	l2642
  8074  14C5                     u3580:
  8075  14C5                     l2636:
  8076  14C5  0865               	movf	___fladd@grs,w
  8077  14C6  397F               	andlw	127
  8078  14C7  1903               	btfsc	3,2
  8079  14C8  2CCA               	goto	u3591
  8080  14C9  2CCB               	goto	u3590
  8081  14CA                     u3591:
  8082  14CA  2CCE               	goto	l747
  8083  14CB                     u3590:
  8084  14CB                     l2638:
  8085  14CB  01E3               	clrf	___fladd@aexp
  8086  14CC  0AE3               	incf	___fladd@aexp,f
  8087  14CD  2CD3               	goto	l2642
  8088  14CE                     l747:
  8089  14CE  1C52               	btfss	___fladd@b,0
  8090  14CF  2CD1               	goto	u3601
  8091  14D0  2CD2               	goto	u3600
  8092  14D1                     u3601:
  8093  14D1  2CD3               	goto	l2642
  8094  14D2                     u3600:
  8095  14D2  2CCB               	goto	l2638
  8096  14D3                     l2642:
  8097  14D3  0863               	movf	___fladd@aexp,w
  8098  14D4  1903               	btfsc	3,2
  8099  14D5  2CD7               	goto	u3611
  8100  14D6  2CD8               	goto	u3610
  8101  14D7                     u3611:
  8102  14D7  2D0C               	goto	l750
  8103  14D8                     u3610:
  8104  14D8                     l2644:
  8105  14D8  3001               	movlw	1
  8106  14D9  07D2               	addwf	___fladd@b,f
  8107  14DA  3000               	movlw	0
  8108  14DB  1803               	skipnc
  8109  14DC  3001               	movlw	1
  8110  14DD  07D3               	addwf	___fladd@b+1,f
  8111  14DE  3000               	movlw	0
  8112  14DF  1803               	skipnc
  8113  14E0  3001               	movlw	1
  8114  14E1  07D4               	addwf	___fladd@b+2,f
  8115  14E2  3000               	movlw	0
  8116  14E3  1803               	skipnc
  8117  14E4  3001               	movlw	1
  8118  14E5  07D5               	addwf	___fladd@b+3,f
  8119  14E6                     l2646:
  8120  14E6  1C55               	btfss	___fladd@b+3,0
  8121  14E7  2CE9               	goto	u3621
  8122  14E8  2CEA               	goto	u3620
  8123  14E9                     u3621:
  8124  14E9  2D0C               	goto	l750
  8125  14EA                     u3620:
  8126  14EA                     l2648:
  8127  14EA  0852               	movf	___fladd@b,w
  8128  14EB  00DA               	movwf	??___fladd
  8129  14EC  0853               	movf	___fladd@b+1,w
  8130  14ED  00DB               	movwf	??___fladd+1
  8131  14EE  0854               	movf	___fladd@b+2,w
  8132  14EF  00DC               	movwf	??___fladd+2
  8133  14F0  0855               	movf	___fladd@b+3,w
  8134  14F1  00DD               	movwf	??___fladd+3
  8135  14F2  3001               	movlw	1
  8136  14F3  00DE               	movwf	??___fladd+4
  8137  14F4                     u3635:
  8138  14F4  0D5D               	rlf	??___fladd+3,w
  8139  14F5  0CDD               	rrf	??___fladd+3,f
  8140  14F6  0CDC               	rrf	??___fladd+2,f
  8141  14F7  0CDB               	rrf	??___fladd+1,f
  8142  14F8  0CDA               	rrf	??___fladd,f
  8143  14F9                     u3630:
  8144  14F9  0BDE               	decfsz	??___fladd+4,f
  8145  14FA  2CF4               	goto	u3635
  8146  14FB  085D               	movf	??___fladd+3,w
  8147  14FC  00D5               	movwf	___fladd@b+3
  8148  14FD  085C               	movf	??___fladd+2,w
  8149  14FE  00D4               	movwf	___fladd@b+2
  8150  14FF  085B               	movf	??___fladd+1,w
  8151  1500  00D3               	movwf	___fladd@b+1
  8152  1501  085A               	movf	??___fladd,w
  8153  1502  00D2               	movwf	___fladd@b
  8154  1503  0A64               	incf	___fladd@bexp,w
  8155  1504  1903               	btfsc	3,2
  8156  1505  2D07               	goto	u3641
  8157  1506  2D08               	goto	u3640
  8158  1507                     u3641:
  8159  1507  2D0C               	goto	l750
  8160  1508                     u3640:
  8161  1508                     l2650:
  8162  1508  3001               	movlw	1
  8163  1509  00DA               	movwf	??___fladd
  8164  150A  085A               	movf	??___fladd,w
  8165  150B  07E4               	addwf	___fladd@bexp,f
  8166  150C                     l750:
  8167  150C  0A64               	incf	___fladd@bexp,w
  8168  150D  1903               	btfsc	3,2
  8169  150E  2D10               	goto	u3651
  8170  150F  2D11               	goto	u3650
  8171  1510                     u3651:
  8172  1510  2D16               	goto	l2654
  8173  1511                     u3650:
  8174  1511                     l2652:
  8175  1511  0864               	movf	___fladd@bexp,w
  8176  1512  1D03               	btfss	3,2
  8177  1513  2D15               	goto	u3661
  8178  1514  2D16               	goto	u3660
  8179  1515                     u3661:
  8180  1515  2D24               	goto	l2660
  8181  1516                     u3660:
  8182  1516                     l2654:
  8183  1516  3000               	movlw	0
  8184  1517  00D5               	movwf	___fladd@b+3
  8185  1518  3000               	movlw	0
  8186  1519  00D4               	movwf	___fladd@b+2
  8187  151A  3000               	movlw	0
  8188  151B  00D3               	movwf	___fladd@b+1
  8189  151C  3000               	movlw	0
  8190  151D  00D2               	movwf	___fladd@b
  8191  151E                     l2656:
  8192  151E  0864               	movf	___fladd@bexp,w
  8193  151F  1D03               	btfss	3,2
  8194  1520  2D22               	goto	u3671
  8195  1521  2D23               	goto	u3670
  8196  1522                     u3671:
  8197  1522  2D24               	goto	l2660
  8198  1523                     u3670:
  8199  1523                     l2658:
  8200  1523  01E2               	clrf	___fladd@signs
  8201  1524                     l2660:
  8202  1524  1C64               	btfss	___fladd@bexp,0
  8203  1525  2D27               	goto	u3681
  8204  1526  2D28               	goto	u3680
  8205  1527                     u3681:
  8206  1527  2D2A               	goto	l2664
  8207  1528                     u3680:
  8208  1528                     l2662:
  8209  1528  17D4               	bsf	___fladd@b+2,7
  8210  1529  2D2E               	goto	l758
  8211  152A                     l2664:
  8212  152A  307F               	movlw	127
  8213  152B  00DA               	movwf	??___fladd
  8214  152C  085A               	movf	??___fladd,w
  8215  152D  05D4               	andwf	___fladd@b+2,f
  8216  152E                     l758:
  8217  152E  0864               	movf	___fladd@bexp,w
  8218  152F  00DA               	movwf	??___fladd
  8219  1530  1003               	clrc
  8220  1531  0C5A               	rrf	??___fladd,w
  8221  1532  00DB               	movwf	??___fladd+1
  8222  1533  085B               	movf	??___fladd+1,w
  8223  1534  00D5               	movwf	___fladd@b+3
  8224  1535                     l2666:
  8225  1535  1FE2               	btfss	___fladd@signs,7
  8226  1536  2D38               	goto	u3691
  8227  1537  2D39               	goto	u3690
  8228  1538                     u3691:
  8229  1538  2D3A               	goto	l759
  8230  1539                     u3690:
  8231  1539                     l2668:
  8232  1539  17D5               	bsf	___fladd@b+3,7
  8233  153A                     l759:
  8234  153A                     l729:
  8235  153A  0008               	return
  8236  153B                     __end_of___fladd:
  8237                           
  8238                           	psect	text20
  8239  1003                     __ptext20:	
  8240 ;; *************** function ___flneg *****************
  8241 ;; Defined at:
  8242 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8243 ;; Parameters:    Size  Location     Type
  8244 ;;  f1              4    0[COMMON] unsigned char 
  8245 ;; Auto vars:     Size  Location     Type
  8246 ;;		None
  8247 ;; Return value:  Size  Location     Type
  8248 ;;                  4    0[COMMON] unsigned char 
  8249 ;; Registers used:
  8250 ;;		wreg
  8251 ;; Tracked objects:
  8252 ;;		On entry : 0/0
  8253 ;;		On exit  : 0/0
  8254 ;;		Unchanged: 0/0
  8255 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8256 ;;      Params:         4       0       0       0       0
  8257 ;;      Locals:         0       0       0       0       0
  8258 ;;      Temps:          0       0       0       0       0
  8259 ;;      Totals:         4       0       0       0       0
  8260 ;;Total ram usage:        4 bytes
  8261 ;; Hardware stack levels used:    1
  8262 ;; This function calls:
  8263 ;;		Nothing
  8264 ;; This function is called by:
  8265 ;;		_sprintf
  8266 ;; This function uses a non-reentrant model
  8267 ;;
  8268                           
  8269                           
  8270                           ;psect for function ___flneg
  8271  1003                     ___flneg:
  8272  1003                     l3078:	
  8273                           ;incstack = 0
  8274                           ; Regs used in ___flneg: [wreg]
  8275                           
  8276  1003  0873               	movf	___flneg@f1+3,w
  8277  1004  0472               	iorwf	___flneg@f1+2,w
  8278  1005  0471               	iorwf	___flneg@f1+1,w
  8279  1006  0470               	iorwf	___flneg@f1,w
  8280  1007  1903               	skipnz
  8281  1008  280A               	goto	u4821
  8282  1009  280B               	goto	u4820
  8283  100A                     u4821:
  8284  100A  280D               	goto	l3082
  8285  100B                     u4820:
  8286  100B                     l3080:
  8287  100B  3080               	movlw	128
  8288  100C  06F3               	xorwf	___flneg@f1+3,f
  8289  100D                     l3082:
  8290  100D                     l588:
  8291  100D  0008               	return
  8292  100E                     __end_of___flneg:
  8293                           
  8294                           	psect	text21
  8295  1C99                     __ptext21:	
  8296 ;; *************** function ___flge *****************
  8297 ;; Defined at:
  8298 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8299 ;; Parameters:    Size  Location     Type
  8300 ;;  ff1             4    0[COMMON] unsigned char 
  8301 ;;  ff2             4    4[COMMON] unsigned char 
  8302 ;; Auto vars:     Size  Location     Type
  8303 ;;		None
  8304 ;; Return value:  Size  Location     Type
  8305 ;;		None               void
  8306 ;; Registers used:
  8307 ;;		wreg, status,2, status,0
  8308 ;; Tracked objects:
  8309 ;;		On entry : 0/0
  8310 ;;		On exit  : 0/0
  8311 ;;		Unchanged: 0/0
  8312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8313 ;;      Params:         8       0       0       0       0
  8314 ;;      Locals:         0       0       0       0       0
  8315 ;;      Temps:          4       0       0       0       0
  8316 ;;      Totals:        12       0       0       0       0
  8317 ;;Total ram usage:       12 bytes
  8318 ;; Hardware stack levels used:    1
  8319 ;; This function calls:
  8320 ;;		Nothing
  8321 ;; This function is called by:
  8322 ;;		_sprintf
  8323 ;; This function uses a non-reentrant model
  8324 ;;
  8325                           
  8326                           
  8327                           ;psect for function ___flge
  8328  1C99                     ___flge:
  8329  1C99                     l3058:	
  8330                           ;incstack = 0
  8331                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8332                           
  8333  1C99  3000               	movlw	0
  8334  1C9A  0570               	andwf	___flge@ff1,w
  8335  1C9B  00F8               	movwf	??___flge
  8336  1C9C  3000               	movlw	0
  8337  1C9D  0571               	andwf	___flge@ff1+1,w
  8338  1C9E  00F9               	movwf	??___flge+1
  8339  1C9F  3080               	movlw	128
  8340  1CA0  0572               	andwf	___flge@ff1+2,w
  8341  1CA1  00FA               	movwf	??___flge+2
  8342  1CA2  307F               	movlw	127
  8343  1CA3  0573               	andwf	___flge@ff1+3,w
  8344  1CA4  00FB               	movwf	??___flge+3
  8345  1CA5  087B               	movf	??___flge+3,w
  8346  1CA6  047A               	iorwf	??___flge+2,w
  8347  1CA7  0479               	iorwf	??___flge+1,w
  8348  1CA8  0478               	iorwf	??___flge,w
  8349  1CA9  1D03               	skipz
  8350  1CAA  2CAC               	goto	u4751
  8351  1CAB  2CAD               	goto	u4750
  8352  1CAC                     u4751:
  8353  1CAC  2CB5               	goto	l580
  8354  1CAD                     u4750:
  8355  1CAD                     l3060:
  8356  1CAD  3000               	movlw	0
  8357  1CAE  00F3               	movwf	___flge@ff1+3
  8358  1CAF  3000               	movlw	0
  8359  1CB0  00F2               	movwf	___flge@ff1+2
  8360  1CB1  3000               	movlw	0
  8361  1CB2  00F1               	movwf	___flge@ff1+1
  8362  1CB3  3000               	movlw	0
  8363  1CB4  00F0               	movwf	___flge@ff1
  8364  1CB5                     l580:
  8365  1CB5  3000               	movlw	0
  8366  1CB6  0574               	andwf	___flge@ff2,w
  8367  1CB7  00F8               	movwf	??___flge
  8368  1CB8  3000               	movlw	0
  8369  1CB9  0575               	andwf	___flge@ff2+1,w
  8370  1CBA  00F9               	movwf	??___flge+1
  8371  1CBB  3080               	movlw	128
  8372  1CBC  0576               	andwf	___flge@ff2+2,w
  8373  1CBD  00FA               	movwf	??___flge+2
  8374  1CBE  307F               	movlw	127
  8375  1CBF  0577               	andwf	___flge@ff2+3,w
  8376  1CC0  00FB               	movwf	??___flge+3
  8377  1CC1  087B               	movf	??___flge+3,w
  8378  1CC2  047A               	iorwf	??___flge+2,w
  8379  1CC3  0479               	iorwf	??___flge+1,w
  8380  1CC4  0478               	iorwf	??___flge,w
  8381  1CC5  1D03               	skipz
  8382  1CC6  2CC8               	goto	u4761
  8383  1CC7  2CC9               	goto	u4760
  8384  1CC8                     u4761:
  8385  1CC8  2CD1               	goto	l3064
  8386  1CC9                     u4760:
  8387  1CC9                     l3062:
  8388  1CC9  3000               	movlw	0
  8389  1CCA  00F7               	movwf	___flge@ff2+3
  8390  1CCB  3000               	movlw	0
  8391  1CCC  00F6               	movwf	___flge@ff2+2
  8392  1CCD  3000               	movlw	0
  8393  1CCE  00F5               	movwf	___flge@ff2+1
  8394  1CCF  3000               	movlw	0
  8395  1CD0  00F4               	movwf	___flge@ff2
  8396  1CD1                     l3064:
  8397  1CD1  1FF3               	btfss	___flge@ff1+3,7
  8398  1CD2  2CD4               	goto	u4771
  8399  1CD3  2CD5               	goto	u4770
  8400  1CD4                     u4771:
  8401  1CD4  2CF9               	goto	l3068
  8402  1CD5                     u4770:
  8403  1CD5                     l3066:
  8404  1CD5  3000               	movlw	0
  8405  1CD6  00F8               	movwf	??___flge
  8406  1CD7  3000               	movlw	0
  8407  1CD8  00F9               	movwf	??___flge+1
  8408  1CD9  3000               	movlw	0
  8409  1CDA  00FA               	movwf	??___flge+2
  8410  1CDB  3080               	movlw	128
  8411  1CDC  00FB               	movwf	??___flge+3
  8412  1CDD  0870               	movf	___flge@ff1,w
  8413  1CDE  02F8               	subwf	??___flge,f
  8414  1CDF  0871               	movf	___flge@ff1+1,w
  8415  1CE0  1C03               	skipc
  8416  1CE1  0F71               	incfsz	___flge@ff1+1,w
  8417  1CE2  2CE4               	goto	u4781
  8418  1CE3  2CE5               	goto	u4782
  8419  1CE4                     u4781:
  8420  1CE4  02F9               	subwf	??___flge+1,f
  8421  1CE5                     u4782:
  8422  1CE5  0872               	movf	___flge@ff1+2,w
  8423  1CE6  1C03               	skipc
  8424  1CE7  0F72               	incfsz	___flge@ff1+2,w
  8425  1CE8  2CEA               	goto	u4783
  8426  1CE9  2CEB               	goto	u4784
  8427  1CEA                     u4783:
  8428  1CEA  02FA               	subwf	??___flge+2,f
  8429  1CEB                     u4784:
  8430  1CEB  0873               	movf	___flge@ff1+3,w
  8431  1CEC  1C03               	skipc
  8432  1CED  0F73               	incfsz	___flge@ff1+3,w
  8433  1CEE  2CF0               	goto	u4785
  8434  1CEF  2CF1               	goto	u4786
  8435  1CF0                     u4785:
  8436  1CF0  02FB               	subwf	??___flge+3,f
  8437  1CF1                     u4786:
  8438  1CF1  087B               	movf	??___flge+3,w
  8439  1CF2  00F3               	movwf	___flge@ff1+3
  8440  1CF3  087A               	movf	??___flge+2,w
  8441  1CF4  00F2               	movwf	___flge@ff1+2
  8442  1CF5  0879               	movf	??___flge+1,w
  8443  1CF6  00F1               	movwf	___flge@ff1+1
  8444  1CF7  0878               	movf	??___flge,w
  8445  1CF8  00F0               	movwf	___flge@ff1
  8446  1CF9                     l3068:
  8447  1CF9  1FF7               	btfss	___flge@ff2+3,7
  8448  1CFA  2CFC               	goto	u4791
  8449  1CFB  2CFD               	goto	u4790
  8450  1CFC                     u4791:
  8451  1CFC  2D21               	goto	l583
  8452  1CFD                     u4790:
  8453  1CFD                     l3070:
  8454  1CFD  3000               	movlw	0
  8455  1CFE  00F8               	movwf	??___flge
  8456  1CFF  3000               	movlw	0
  8457  1D00  00F9               	movwf	??___flge+1
  8458  1D01  3000               	movlw	0
  8459  1D02  00FA               	movwf	??___flge+2
  8460  1D03  3080               	movlw	128
  8461  1D04  00FB               	movwf	??___flge+3
  8462  1D05  0874               	movf	___flge@ff2,w
  8463  1D06  02F8               	subwf	??___flge,f
  8464  1D07  0875               	movf	___flge@ff2+1,w
  8465  1D08  1C03               	skipc
  8466  1D09  0F75               	incfsz	___flge@ff2+1,w
  8467  1D0A  2D0C               	goto	u4801
  8468  1D0B  2D0D               	goto	u4802
  8469  1D0C                     u4801:
  8470  1D0C  02F9               	subwf	??___flge+1,f
  8471  1D0D                     u4802:
  8472  1D0D  0876               	movf	___flge@ff2+2,w
  8473  1D0E  1C03               	skipc
  8474  1D0F  0F76               	incfsz	___flge@ff2+2,w
  8475  1D10  2D12               	goto	u4803
  8476  1D11  2D13               	goto	u4804
  8477  1D12                     u4803:
  8478  1D12  02FA               	subwf	??___flge+2,f
  8479  1D13                     u4804:
  8480  1D13  0877               	movf	___flge@ff2+3,w
  8481  1D14  1C03               	skipc
  8482  1D15  0F77               	incfsz	___flge@ff2+3,w
  8483  1D16  2D18               	goto	u4805
  8484  1D17  2D19               	goto	u4806
  8485  1D18                     u4805:
  8486  1D18  02FB               	subwf	??___flge+3,f
  8487  1D19                     u4806:
  8488  1D19  087B               	movf	??___flge+3,w
  8489  1D1A  00F7               	movwf	___flge@ff2+3
  8490  1D1B  087A               	movf	??___flge+2,w
  8491  1D1C  00F6               	movwf	___flge@ff2+2
  8492  1D1D  0879               	movf	??___flge+1,w
  8493  1D1E  00F5               	movwf	___flge@ff2+1
  8494  1D1F  0878               	movf	??___flge,w
  8495  1D20  00F4               	movwf	___flge@ff2
  8496  1D21                     l583:
  8497  1D21  3080               	movlw	128
  8498  1D22  06F3               	xorwf	___flge@ff1+3,f
  8499  1D23  3080               	movlw	128
  8500  1D24  06F7               	xorwf	___flge@ff2+3,f
  8501  1D25  0877               	movf	___flge@ff2+3,w
  8502  1D26  0273               	subwf	___flge@ff1+3,w
  8503  1D27  1D03               	skipz
  8504  1D28  2D33               	goto	u4815
  8505  1D29  0876               	movf	___flge@ff2+2,w
  8506  1D2A  0272               	subwf	___flge@ff1+2,w
  8507  1D2B  1D03               	skipz
  8508  1D2C  2D33               	goto	u4815
  8509  1D2D  0875               	movf	___flge@ff2+1,w
  8510  1D2E  0271               	subwf	___flge@ff1+1,w
  8511  1D2F  1D03               	skipz
  8512  1D30  2D33               	goto	u4815
  8513  1D31  0874               	movf	___flge@ff2,w
  8514  1D32  0270               	subwf	___flge@ff1,w
  8515  1D33                     u4815:
  8516  1D33  1803               	skipnc
  8517  1D34  2D36               	goto	u4811
  8518  1D35  2D37               	goto	u4810
  8519  1D36                     u4811:
  8520  1D36  2D39               	goto	l3074
  8521  1D37                     u4810:
  8522  1D37                     l3072:
  8523  1D37  1003               	clrc
  8524  1D38  2D3A               	goto	l584
  8525  1D39                     l3074:
  8526  1D39  1403               	setc
  8527  1D3A                     l584:
  8528  1D3A  0008               	return
  8529  1D3B                     __end_of___flge:
  8530                           
  8531                           	psect	text22
  8532  1B36                     __ptext22:	
  8533 ;; *************** function ___fleq *****************
  8534 ;; Defined at:
  8535 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8536 ;; Parameters:    Size  Location     Type
  8537 ;;  ff1             4    0[COMMON] unsigned char 
  8538 ;;  ff2             4    4[COMMON] unsigned char 
  8539 ;; Auto vars:     Size  Location     Type
  8540 ;;		None
  8541 ;; Return value:  Size  Location     Type
  8542 ;;		None               void
  8543 ;; Registers used:
  8544 ;;		wreg, status,2, status,0
  8545 ;; Tracked objects:
  8546 ;;		On entry : 0/0
  8547 ;;		On exit  : 0/0
  8548 ;;		Unchanged: 0/0
  8549 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8550 ;;      Params:         8       0       0       0       0
  8551 ;;      Locals:         0       0       0       0       0
  8552 ;;      Temps:          4       0       0       0       0
  8553 ;;      Totals:        12       0       0       0       0
  8554 ;;Total ram usage:       12 bytes
  8555 ;; Hardware stack levels used:    1
  8556 ;; This function calls:
  8557 ;;		Nothing
  8558 ;; This function is called by:
  8559 ;;		_sprintf
  8560 ;; This function uses a non-reentrant model
  8561 ;;
  8562                           
  8563                           
  8564                           ;psect for function ___fleq
  8565  1B36                     ___fleq:
  8566  1B36                     l3046:	
  8567                           ;incstack = 0
  8568                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8569                           
  8570  1B36  3000               	movlw	0
  8571  1B37  0570               	andwf	___fleq@ff1,w
  8572  1B38  00F8               	movwf	??___fleq
  8573  1B39  3000               	movlw	0
  8574  1B3A  0571               	andwf	___fleq@ff1+1,w
  8575  1B3B  00F9               	movwf	??___fleq+1
  8576  1B3C  3080               	movlw	128
  8577  1B3D  0572               	andwf	___fleq@ff1+2,w
  8578  1B3E  00FA               	movwf	??___fleq+2
  8579  1B3F  307F               	movlw	127
  8580  1B40  0573               	andwf	___fleq@ff1+3,w
  8581  1B41  00FB               	movwf	??___fleq+3
  8582  1B42  087B               	movf	??___fleq+3,w
  8583  1B43  047A               	iorwf	??___fleq+2,w
  8584  1B44  0479               	iorwf	??___fleq+1,w
  8585  1B45  0478               	iorwf	??___fleq,w
  8586  1B46  1D03               	skipz
  8587  1B47  2B49               	goto	u4721
  8588  1B48  2B4A               	goto	u4720
  8589  1B49                     u4721:
  8590  1B49  2B52               	goto	l575
  8591  1B4A                     u4720:
  8592  1B4A                     l3048:
  8593  1B4A  3000               	movlw	0
  8594  1B4B  00F3               	movwf	___fleq@ff1+3
  8595  1B4C  3000               	movlw	0
  8596  1B4D  00F2               	movwf	___fleq@ff1+2
  8597  1B4E  3000               	movlw	0
  8598  1B4F  00F1               	movwf	___fleq@ff1+1
  8599  1B50  3000               	movlw	0
  8600  1B51  00F0               	movwf	___fleq@ff1
  8601  1B52                     l575:
  8602  1B52  3000               	movlw	0
  8603  1B53  0574               	andwf	___fleq@ff2,w
  8604  1B54  00F8               	movwf	??___fleq
  8605  1B55  3000               	movlw	0
  8606  1B56  0575               	andwf	___fleq@ff2+1,w
  8607  1B57  00F9               	movwf	??___fleq+1
  8608  1B58  3080               	movlw	128
  8609  1B59  0576               	andwf	___fleq@ff2+2,w
  8610  1B5A  00FA               	movwf	??___fleq+2
  8611  1B5B  307F               	movlw	127
  8612  1B5C  0577               	andwf	___fleq@ff2+3,w
  8613  1B5D  00FB               	movwf	??___fleq+3
  8614  1B5E  087B               	movf	??___fleq+3,w
  8615  1B5F  047A               	iorwf	??___fleq+2,w
  8616  1B60  0479               	iorwf	??___fleq+1,w
  8617  1B61  0478               	iorwf	??___fleq,w
  8618  1B62  1D03               	skipz
  8619  1B63  2B65               	goto	u4731
  8620  1B64  2B66               	goto	u4730
  8621  1B65                     u4731:
  8622  1B65  2B6E               	goto	l576
  8623  1B66                     u4730:
  8624  1B66                     l3050:
  8625  1B66  3000               	movlw	0
  8626  1B67  00F7               	movwf	___fleq@ff2+3
  8627  1B68  3000               	movlw	0
  8628  1B69  00F6               	movwf	___fleq@ff2+2
  8629  1B6A  3000               	movlw	0
  8630  1B6B  00F5               	movwf	___fleq@ff2+1
  8631  1B6C  3000               	movlw	0
  8632  1B6D  00F4               	movwf	___fleq@ff2
  8633  1B6E                     l576:
  8634  1B6E  0877               	movf	___fleq@ff2+3,w
  8635  1B6F  0673               	xorwf	___fleq@ff1+3,w
  8636  1B70  1D03               	skipz
  8637  1B71  2B7C               	goto	u4745
  8638  1B72  0876               	movf	___fleq@ff2+2,w
  8639  1B73  0672               	xorwf	___fleq@ff1+2,w
  8640  1B74  1D03               	skipz
  8641  1B75  2B7C               	goto	u4745
  8642  1B76  0875               	movf	___fleq@ff2+1,w
  8643  1B77  0671               	xorwf	___fleq@ff1+1,w
  8644  1B78  1D03               	skipz
  8645  1B79  2B7C               	goto	u4745
  8646  1B7A  0874               	movf	___fleq@ff2,w
  8647  1B7B  0670               	xorwf	___fleq@ff1,w
  8648  1B7C                     u4745:
  8649  1B7C  1903               	skipnz
  8650  1B7D  2B7F               	goto	u4741
  8651  1B7E  2B80               	goto	u4740
  8652  1B7F                     u4741:
  8653  1B7F  2B82               	goto	l3054
  8654  1B80                     u4740:
  8655  1B80                     l3052:
  8656  1B80  1003               	clrc
  8657  1B81  2B83               	goto	l577
  8658  1B82                     l3054:
  8659  1B82  1403               	setc
  8660  1B83                     l577:
  8661  1B83  0008               	return
  8662  1B84                     __end_of___fleq:
  8663                           
  8664                           	psect	text23
  8665  1973                     __ptext23:	
  8666 ;; *************** function _spiRead *****************
  8667 ;; Defined at:
  8668 ;;		line 47 in file "SPI.c"
  8669 ;; Parameters:    Size  Location     Type
  8670 ;;		None
  8671 ;; Auto vars:     Size  Location     Type
  8672 ;;		None
  8673 ;; Return value:  Size  Location     Type
  8674 ;;                  1    wreg      unsigned char 
  8675 ;; Registers used:
  8676 ;;		wreg, status,2, status,0, pclath, cstack
  8677 ;; Tracked objects:
  8678 ;;		On entry : 0/0
  8679 ;;		On exit  : 0/0
  8680 ;;		Unchanged: 0/0
  8681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8682 ;;      Params:         0       0       0       0       0
  8683 ;;      Locals:         0       0       0       0       0
  8684 ;;      Temps:          0       0       0       0       0
  8685 ;;      Totals:         0       0       0       0       0
  8686 ;;Total ram usage:        0 bytes
  8687 ;; Hardware stack levels used:    1
  8688 ;; Hardware stack levels required when called:    1
  8689 ;; This function calls:
  8690 ;;		_spiReceiveWait
  8691 ;; This function is called by:
  8692 ;;		_main
  8693 ;; This function uses a non-reentrant model
  8694 ;;
  8695                           
  8696                           
  8697                           ;psect for function _spiRead
  8698  1973                     _spiRead:
  8699  1973                     l3544:	
  8700                           ;incstack = 0
  8701                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  8702                           
  8703                           
  8704                           ;SPI.c: 49:     spiReceiveWait();
  8705  1973  120A  158A  2000  160A  158A  	fcall	_spiReceiveWait
  8706  1978                     l3546:
  8707                           
  8708                           ;SPI.c: 50:     return(SSPBUF);
  8709  1978  1283               	bcf	3,5	;RP0=0, select bank0
  8710  1979  1303               	bcf	3,6	;RP1=0, select bank0
  8711  197A  0813               	movf	19,w	;volatile
  8712  197B                     l184:
  8713  197B  0008               	return
  8714  197C                     __end_of_spiRead:
  8715                           
  8716                           	psect	text24
  8717  0800                     __ptext24:	
  8718 ;; *************** function _spiReceiveWait *****************
  8719 ;; Defined at:
  8720 ;;		line 29 in file "SPI.c"
  8721 ;; Parameters:    Size  Location     Type
  8722 ;;		None
  8723 ;; Auto vars:     Size  Location     Type
  8724 ;;		None
  8725 ;; Return value:  Size  Location     Type
  8726 ;;                  1    wreg      void 
  8727 ;; Registers used:
  8728 ;;		None
  8729 ;; Tracked objects:
  8730 ;;		On entry : 0/0
  8731 ;;		On exit  : 0/0
  8732 ;;		Unchanged: 0/0
  8733 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8734 ;;      Params:         0       0       0       0       0
  8735 ;;      Locals:         0       0       0       0       0
  8736 ;;      Temps:          0       0       0       0       0
  8737 ;;      Totals:         0       0       0       0       0
  8738 ;;Total ram usage:        0 bytes
  8739 ;; Hardware stack levels used:    1
  8740 ;; This function calls:
  8741 ;;		Nothing
  8742 ;; This function is called by:
  8743 ;;		_spiRead
  8744 ;; This function uses a non-reentrant model
  8745 ;;
  8746                           
  8747                           
  8748                           ;psect for function _spiReceiveWait
  8749  0800                     _spiReceiveWait:
  8750  0800                     l2832:	
  8751                           ;incstack = 0
  8752                           ; Regs used in _spiReceiveWait: []
  8753                           
  8754  0800                     l170:	
  8755                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  8756                           
  8757  0800  1683               	bsf	3,5	;RP0=1, select bank1
  8758  0801  1303               	bcf	3,6	;RP1=0, select bank1
  8759  0802  1C14               	btfss	20,0	;volatile
  8760  0803  2805               	goto	u4071
  8761  0804  2806               	goto	u4070
  8762  0805                     u4071:
  8763  0805  2800               	goto	l170
  8764  0806                     u4070:
  8765  0806                     l173:
  8766  0806  0008               	return
  8767  0807                     __end_of_spiReceiveWait:
  8768                           
  8769                           	psect	text25
  8770  19A2                     __ptext25:	
  8771 ;; *************** function _spiInit *****************
  8772 ;; Defined at:
  8773 ;;		line 12 in file "SPI.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;  sType           1    wreg     enum E1264
  8776 ;;  sDataSample     1    0[COMMON] enum E1272
  8777 ;;  sClockIdle      1    1[COMMON] enum E1276
  8778 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;  sType           1    3[COMMON] enum E1264
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  1    wreg      void 
  8783 ;; Registers used:
  8784 ;;		wreg, status,2, status,0
  8785 ;; Tracked objects:
  8786 ;;		On entry : 0/0
  8787 ;;		On exit  : 0/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8790 ;;      Params:         3       0       0       0       0
  8791 ;;      Locals:         1       0       0       0       0
  8792 ;;      Temps:          0       0       0       0       0
  8793 ;;      Totals:         4       0       0       0       0
  8794 ;;Total ram usage:        4 bytes
  8795 ;; Hardware stack levels used:    1
  8796 ;; This function calls:
  8797 ;;		Nothing
  8798 ;; This function is called by:
  8799 ;;		_main
  8800 ;; This function uses a non-reentrant model
  8801 ;;
  8802                           
  8803                           
  8804                           ;psect for function _spiInit
  8805  19A2                     _spiInit:
  8806                           
  8807                           ;incstack = 0
  8808                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  8809                           ;spiInit@sType stored from wreg
  8810  19A2  00F3               	movwf	spiInit@sType
  8811  19A3                     l3238:
  8812                           
  8813                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  8814  19A3  1683               	bsf	3,5	;RP0=1, select bank1
  8815  19A4  1303               	bcf	3,6	;RP1=0, select bank1
  8816  19A5  1287               	bcf	7,5	;volatile
  8817                           
  8818                           ;SPI.c: 15:     if(sType & 0b00000100)
  8819  19A6  1D73               	btfss	spiInit@sType,2
  8820  19A7  29A9               	goto	u5181
  8821  19A8  29AA               	goto	u5180
  8822  19A9                     u5181:
  8823  19A9  29AE               	goto	l3244
  8824  19AA                     u5180:
  8825  19AA                     l3240:
  8826                           
  8827                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  8828  19AA  0872               	movf	spiInit@sTransmitEdge,w
  8829  19AB  0094               	movwf	20	;volatile
  8830  19AC                     l3242:
  8831                           
  8832                           ;SPI.c: 18:         TRISC3 = 1;
  8833  19AC  1587               	bsf	7,3	;volatile
  8834                           
  8835                           ;SPI.c: 19:     }
  8836  19AD  29B2               	goto	l166
  8837  19AE                     l3244:
  8838                           
  8839                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  8840  19AE  0870               	movf	spiInit@sDataSample,w
  8841  19AF  0472               	iorwf	spiInit@sTransmitEdge,w
  8842  19B0  0094               	movwf	20	;volatile
  8843  19B1                     l3246:
  8844                           
  8845                           ;SPI.c: 23:         TRISC3 = 0;
  8846  19B1  1187               	bcf	7,3	;volatile
  8847  19B2                     l166:	
  8848                           ;SPI.c: 24:     }
  8849                           
  8850                           
  8851                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  8852  19B2  0873               	movf	spiInit@sType,w
  8853  19B3  0471               	iorwf	spiInit@sClockIdle,w
  8854  19B4  1283               	bcf	3,5	;RP0=0, select bank0
  8855  19B5  1303               	bcf	3,6	;RP1=0, select bank0
  8856  19B6  0094               	movwf	20	;volatile
  8857  19B7                     l167:
  8858  19B7  0008               	return
  8859  19B8                     __end_of_spiInit:
  8860                           
  8861                           	psect	text26
  8862  198E                     __ptext26:	
  8863 ;; *************** function _setup *****************
  8864 ;; Defined at:
  8865 ;;		line 68 in file "main.c"
  8866 ;; Parameters:    Size  Location     Type
  8867 ;;		None
  8868 ;; Auto vars:     Size  Location     Type
  8869 ;;		None
  8870 ;; Return value:  Size  Location     Type
  8871 ;;                  1    wreg      void 
  8872 ;; Registers used:
  8873 ;;		wreg, status,2
  8874 ;; Tracked objects:
  8875 ;;		On entry : 0/0
  8876 ;;		On exit  : 0/0
  8877 ;;		Unchanged: 0/0
  8878 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8879 ;;      Params:         0       0       0       0       0
  8880 ;;      Locals:         0       0       0       0       0
  8881 ;;      Temps:          0       0       0       0       0
  8882 ;;      Totals:         0       0       0       0       0
  8883 ;;Total ram usage:        0 bytes
  8884 ;; Hardware stack levels used:    1
  8885 ;; This function calls:
  8886 ;;		Nothing
  8887 ;; This function is called by:
  8888 ;;		_main
  8889 ;; This function uses a non-reentrant model
  8890 ;;
  8891                           
  8892                           
  8893                           ;psect for function _setup
  8894  198E                     _setup:
  8895  198E                     l3224:	
  8896                           ;incstack = 0
  8897                           ; Regs used in _setup: [wreg+status,2]
  8898                           
  8899                           
  8900                           ;main.c: 69:     TRISD = 0b00000000;
  8901  198E  1683               	bsf	3,5	;RP0=1, select bank1
  8902  198F  1303               	bcf	3,6	;RP1=0, select bank1
  8903  1990  0188               	clrf	8	;volatile
  8904  1991                     l3226:
  8905                           
  8906                           ;main.c: 70:     TRISC = 0b10010000;
  8907  1991  3090               	movlw	144
  8908  1992  0087               	movwf	7	;volatile
  8909  1993                     l3228:
  8910                           
  8911                           ;main.c: 71:     TRISE = 0b00000000;
  8912  1993  0189               	clrf	9	;volatile
  8913  1994                     l3230:
  8914                           
  8915                           ;main.c: 72:     TRISB = 0b00000000;
  8916  1994  0186               	clrf	6	;volatile
  8917  1995                     l3232:
  8918                           
  8919                           ;main.c: 73:     ANSEL = 0b00000011;
  8920  1995  3003               	movlw	3
  8921  1996  1683               	bsf	3,5	;RP0=1, select bank3
  8922  1997  1703               	bsf	3,6	;RP1=1, select bank3
  8923  1998  0088               	movwf	8	;volatile
  8924                           
  8925                           ;main.c: 74:     PORTC = 0;
  8926  1999  1283               	bcf	3,5	;RP0=0, select bank0
  8927  199A  1303               	bcf	3,6	;RP1=0, select bank0
  8928  199B  0187               	clrf	7	;volatile
  8929                           
  8930                           ;main.c: 75:     PORTD = 0;
  8931  199C  0188               	clrf	8	;volatile
  8932                           
  8933                           ;main.c: 76:     PORTE = 0;
  8934  199D  0189               	clrf	9	;volatile
  8935                           
  8936                           ;main.c: 77:     PORTB = 0;
  8937  199E  0186               	clrf	6	;volatile
  8938  199F                     l3234:
  8939                           
  8940                           ;main.c: 78:     PORTAbits.RA0 = 1;
  8941  199F  1405               	bsf	5,0	;volatile
  8942  19A0                     l3236:
  8943                           
  8944                           ;main.c: 79:     PORTAbits.RA1 = 1;
  8945  19A0  1485               	bsf	5,1	;volatile
  8946  19A1                     l100:
  8947  19A1  0008               	return
  8948  19A2                     __end_of_setup:
  8949                           
  8950                           	psect	text27
  8951  1AB0                     __ptext27:	
  8952 ;; *************** function _Lcd_Write_String *****************
  8953 ;; Defined at:
  8954 ;;		line 67 in file "LCD.c"
  8955 ;; Parameters:    Size  Location     Type
  8956 ;;  a               2    3[COMMON] PTR unsigned char 
  8957 ;;		 -> l(20), c(20), s(20), STR_1(17), 
  8958 ;; Auto vars:     Size  Location     Type
  8959 ;;  i               2    8[COMMON] int 
  8960 ;; Return value:  Size  Location     Type
  8961 ;;                  1    wreg      void 
  8962 ;; Registers used:
  8963 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  8964 ;; Tracked objects:
  8965 ;;		On entry : 0/0
  8966 ;;		On exit  : 0/0
  8967 ;;		Unchanged: 0/0
  8968 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8969 ;;      Params:         2       0       0       0       0
  8970 ;;      Locals:         2       0       0       0       0
  8971 ;;      Temps:          3       0       0       0       0
  8972 ;;      Totals:         7       0       0       0       0
  8973 ;;Total ram usage:        7 bytes
  8974 ;; Hardware stack levels used:    1
  8975 ;; Hardware stack levels required when called:    2
  8976 ;; This function calls:
  8977 ;;		_Lcd_Write_Char
  8978 ;; This function is called by:
  8979 ;;		_main
  8980 ;; This function uses a non-reentrant model
  8981 ;;
  8982                           
  8983                           
  8984                           ;psect for function _Lcd_Write_String
  8985  1AB0                     _Lcd_Write_String:
  8986  1AB0                     l3216:	
  8987                           ;incstack = 0
  8988                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  8989                           
  8990                           
  8991                           ;LCD.c: 68:     int i;;LCD.c: 69:     for (i = 0; a[i] != '\0'; i++)
  8992  1AB0  01F8               	clrf	Lcd_Write_String@i
  8993  1AB1  01F9               	clrf	Lcd_Write_String@i+1
  8994  1AB2  2AD5               	goto	l3222
  8995  1AB3                     l3218:
  8996                           
  8997                           ;LCD.c: 70:         Lcd_Write_Char(a[i]);
  8998  1AB3  0878               	movf	Lcd_Write_String@i,w
  8999  1AB4  0773               	addwf	Lcd_Write_String@a,w
  9000  1AB5  00F6               	movwf	??_Lcd_Write_String+1
  9001  1AB6  0874               	movf	Lcd_Write_String@a+1,w
  9002  1AB7  00F5               	movwf	??_Lcd_Write_String
  9003  1AB8  1803               	skipnc
  9004  1AB9  0AF5               	incf	??_Lcd_Write_String,f
  9005  1ABA  1FF8               	btfss	Lcd_Write_String@i,7
  9006  1ABB  2ABD               	goto	u5150
  9007  1ABC  03F5               	decf	??_Lcd_Write_String,f
  9008  1ABD                     u5150:
  9009  1ABD  0875               	movf	??_Lcd_Write_String,w
  9010  1ABE  00F7               	movwf	??_Lcd_Write_String+2
  9011  1ABF  0877               	movf	??_Lcd_Write_String+2,w
  9012  1AC0  1283               	bcf	3,5	;RP0=0, select bank0
  9013  1AC1  1303               	bcf	3,6	;RP1=0, select bank0
  9014  1AC2  00FF               	movwf	btemp+1
  9015  1AC3  0876               	movf	??_Lcd_Write_String+1,w
  9016  1AC4  0084               	movwf	4
  9017  1AC5  120A  118A  2003  160A  158A  	fcall	stringtab
  9018  1ACA  160A  158A  21D2  160A  158A  	fcall	_Lcd_Write_Char
  9019  1ACF                     l3220:
  9020  1ACF  3001               	movlw	1
  9021  1AD0  07F8               	addwf	Lcd_Write_String@i,f
  9022  1AD1  1803               	skipnc
  9023  1AD2  0AF9               	incf	Lcd_Write_String@i+1,f
  9024  1AD3  3000               	movlw	0
  9025  1AD4  07F9               	addwf	Lcd_Write_String@i+1,f
  9026  1AD5                     l3222:
  9027  1AD5  0878               	movf	Lcd_Write_String@i,w
  9028  1AD6  0773               	addwf	Lcd_Write_String@a,w
  9029  1AD7  00F6               	movwf	??_Lcd_Write_String+1
  9030  1AD8  0874               	movf	Lcd_Write_String@a+1,w
  9031  1AD9  00F5               	movwf	??_Lcd_Write_String
  9032  1ADA  1803               	skipnc
  9033  1ADB  0AF5               	incf	??_Lcd_Write_String,f
  9034  1ADC  1FF8               	btfss	Lcd_Write_String@i,7
  9035  1ADD  2ADF               	goto	u5160
  9036  1ADE  03F5               	decf	??_Lcd_Write_String,f
  9037  1ADF                     u5160:
  9038  1ADF  0875               	movf	??_Lcd_Write_String,w
  9039  1AE0  00F7               	movwf	??_Lcd_Write_String+2
  9040  1AE1  0877               	movf	??_Lcd_Write_String+2,w
  9041  1AE2  1283               	bcf	3,5	;RP0=0, select bank0
  9042  1AE3  1303               	bcf	3,6	;RP1=0, select bank0
  9043  1AE4  00FF               	movwf	btemp+1
  9044  1AE5  0876               	movf	??_Lcd_Write_String+1,w
  9045  1AE6  0084               	movwf	4
  9046  1AE7  120A  118A  2003  160A  158A  	fcall	stringtab
  9047  1AEC  3A00               	xorlw	0
  9048  1AED  1D03               	skipz
  9049  1AEE  2AF0               	goto	u5171
  9050  1AEF  2AF1               	goto	u5170
  9051  1AF0                     u5171:
  9052  1AF0  2AB3               	goto	l3218
  9053  1AF1                     u5170:
  9054  1AF1                     l33:
  9055  1AF1  0008               	return
  9056  1AF2                     __end_of_Lcd_Write_String:
  9057                           
  9058                           	psect	text28
  9059  19D2                     __ptext28:	
  9060 ;; *************** function _Lcd_Write_Char *****************
  9061 ;; Defined at:
  9062 ;;		line 58 in file "LCD.c"
  9063 ;; Parameters:    Size  Location     Type
  9064 ;;  a               1    wreg     unsigned char 
  9065 ;; Auto vars:     Size  Location     Type
  9066 ;;  a               1    2[COMMON] unsigned char 
  9067 ;; Return value:  Size  Location     Type
  9068 ;;                  1    wreg      void 
  9069 ;; Registers used:
  9070 ;;		wreg, status,2, status,0, pclath, cstack
  9071 ;; Tracked objects:
  9072 ;;		On entry : 0/0
  9073 ;;		On exit  : 0/0
  9074 ;;		Unchanged: 0/0
  9075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9076 ;;      Params:         0       0       0       0       0
  9077 ;;      Locals:         1       0       0       0       0
  9078 ;;      Temps:          1       0       0       0       0
  9079 ;;      Totals:         2       0       0       0       0
  9080 ;;Total ram usage:        2 bytes
  9081 ;; Hardware stack levels used:    1
  9082 ;; Hardware stack levels required when called:    1
  9083 ;; This function calls:
  9084 ;;		_Lcd_Port
  9085 ;; This function is called by:
  9086 ;;		_Lcd_Write_String
  9087 ;; This function uses a non-reentrant model
  9088 ;;
  9089                           
  9090                           
  9091                           ;psect for function _Lcd_Write_Char
  9092  19D2                     _Lcd_Write_Char:
  9093                           
  9094                           ;incstack = 0
  9095                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9096                           ;Lcd_Write_Char@a stored from wreg
  9097  19D2  00F2               	movwf	Lcd_Write_Char@a
  9098  19D3                     l2820:
  9099                           
  9100                           ;LCD.c: 59:     PORTEbits.RE0 = 1;
  9101  19D3  1283               	bcf	3,5	;RP0=0, select bank0
  9102  19D4  1303               	bcf	3,6	;RP1=0, select bank0
  9103  19D5  1409               	bsf	9,0	;volatile
  9104  19D6                     l2822:
  9105                           
  9106                           ;LCD.c: 60:     Lcd_Port(a);
  9107  19D6  0872               	movf	Lcd_Write_Char@a,w
  9108  19D7  160A  158A  2165  160A  158A  	fcall	_Lcd_Port
  9109  19DC                     l2824:
  9110                           
  9111                           ;LCD.c: 61:     PORTEbits.RE1 = 1;
  9112  19DC  1283               	bcf	3,5	;RP0=0, select bank0
  9113  19DD  1303               	bcf	3,6	;RP1=0, select bank0
  9114  19DE  1489               	bsf	9,1	;volatile
  9115  19DF                     l2826:
  9116                           
  9117                           ;LCD.c: 62:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9118  19DF  301A               	movlw	26
  9119  19E0  00F1               	movwf	??_Lcd_Write_Char
  9120  19E1                     u5847:
  9121  19E1  0BF1               	decfsz	??_Lcd_Write_Char,f
  9122  19E2  29E1               	goto	u5847
  9123  19E3  0000               	nop
  9124  19E4                     l2828:
  9125                           
  9126                           ;LCD.c: 63:     PORTEbits.RE1 = 0;
  9127  19E4  1283               	bcf	3,5	;RP0=0, select bank0
  9128  19E5  1303               	bcf	3,6	;RP1=0, select bank0
  9129  19E6  1089               	bcf	9,1	;volatile
  9130  19E7                     l2830:
  9131                           
  9132                           ;LCD.c: 64:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9133  19E7  301A               	movlw	26
  9134  19E8  00F1               	movwf	??_Lcd_Write_Char
  9135  19E9                     u5857:
  9136  19E9  0BF1               	decfsz	??_Lcd_Write_Char,f
  9137  19EA  29E9               	goto	u5857
  9138  19EB  0000               	nop
  9139  19EC                     l27:
  9140  19EC  0008               	return
  9141  19ED                     __end_of_Lcd_Write_Char:
  9142                           
  9143                           	psect	text29
  9144  19ED                     __ptext29:	
  9145 ;; *************** function _Lcd_Set_Cursor *****************
  9146 ;; Defined at:
  9147 ;;		line 33 in file "LCD.c"
  9148 ;; Parameters:    Size  Location     Type
  9149 ;;  a               1    wreg     unsigned char 
  9150 ;;  b               1    4[COMMON] unsigned char 
  9151 ;; Auto vars:     Size  Location     Type
  9152 ;;  a               1    6[COMMON] unsigned char 
  9153 ;;  temp            1    7[COMMON] unsigned char 
  9154 ;; Return value:  Size  Location     Type
  9155 ;;                  1    wreg      void 
  9156 ;; Registers used:
  9157 ;;		wreg, status,2, status,0, pclath, cstack
  9158 ;; Tracked objects:
  9159 ;;		On entry : 0/0
  9160 ;;		On exit  : 0/0
  9161 ;;		Unchanged: 0/0
  9162 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9163 ;;      Params:         1       0       0       0       0
  9164 ;;      Locals:         2       0       0       0       0
  9165 ;;      Temps:          1       0       0       0       0
  9166 ;;      Totals:         4       0       0       0       0
  9167 ;;Total ram usage:        4 bytes
  9168 ;; Hardware stack levels used:    1
  9169 ;; Hardware stack levels required when called:    2
  9170 ;; This function calls:
  9171 ;;		_Lcd_Cmd
  9172 ;; This function is called by:
  9173 ;;		_main
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           
  9178                           ;psect for function _Lcd_Set_Cursor
  9179  19ED                     _Lcd_Set_Cursor:
  9180                           
  9181                           ;incstack = 0
  9182                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9183                           ;Lcd_Set_Cursor@a stored from wreg
  9184  19ED  00F6               	movwf	Lcd_Set_Cursor@a
  9185  19EE                     l3194:
  9186                           
  9187                           ;LCD.c: 34:     char temp;;LCD.c: 35:     if (a == 1) {
  9188  19EE  0376               	decf	Lcd_Set_Cursor@a,w
  9189  19EF  1D03               	btfss	3,2
  9190  19F0  29F2               	goto	u5131
  9191  19F1  29F3               	goto	u5130
  9192  19F2                     u5131:
  9193  19F2  29FF               	goto	l3200
  9194  19F3                     u5130:
  9195  19F3                     l3196:
  9196                           
  9197                           ;LCD.c: 36:         temp = 0x80 + b - 1;
  9198  19F3  0874               	movf	Lcd_Set_Cursor@b,w
  9199  19F4  3E7F               	addlw	127
  9200  19F5  00F5               	movwf	??_Lcd_Set_Cursor
  9201  19F6  0875               	movf	??_Lcd_Set_Cursor,w
  9202  19F7  00F7               	movwf	Lcd_Set_Cursor@temp
  9203  19F8                     l3198:
  9204                           
  9205                           ;LCD.c: 37:         Lcd_Cmd(temp);
  9206  19F8  0877               	movf	Lcd_Set_Cursor@temp,w
  9207  19F9  160A  158A  21B8  160A  158A  	fcall	_Lcd_Cmd
  9208                           
  9209                           ;LCD.c: 38:     } else if (a == 2) {
  9210  19FE  2A10               	goto	l21
  9211  19FF                     l3200:
  9212  19FF  3002               	movlw	2
  9213  1A00  0676               	xorwf	Lcd_Set_Cursor@a,w
  9214  1A01  1D03               	btfss	3,2
  9215  1A02  2A04               	goto	u5141
  9216  1A03  2A05               	goto	u5140
  9217  1A04                     u5141:
  9218  1A04  2A10               	goto	l21
  9219  1A05                     u5140:
  9220  1A05                     l3202:
  9221                           
  9222                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  9223  1A05  0874               	movf	Lcd_Set_Cursor@b,w
  9224  1A06  3EBF               	addlw	191
  9225  1A07  00F5               	movwf	??_Lcd_Set_Cursor
  9226  1A08  0875               	movf	??_Lcd_Set_Cursor,w
  9227  1A09  00F7               	movwf	Lcd_Set_Cursor@temp
  9228  1A0A                     l3204:
  9229                           
  9230                           ;LCD.c: 40:         Lcd_Cmd(temp);
  9231  1A0A  0877               	movf	Lcd_Set_Cursor@temp,w
  9232  1A0B  160A  158A  21B8  160A  158A  	fcall	_Lcd_Cmd
  9233  1A10                     l21:
  9234  1A10  0008               	return
  9235  1A11                     __end_of_Lcd_Set_Cursor:
  9236                           
  9237                           	psect	text30
  9238  1A6F                     __ptext30:	
  9239 ;; *************** function _Lcd_Init *****************
  9240 ;; Defined at:
  9241 ;;		line 44 in file "LCD.c"
  9242 ;; Parameters:    Size  Location     Type
  9243 ;;		None
  9244 ;; Auto vars:     Size  Location     Type
  9245 ;;		None
  9246 ;; Return value:  Size  Location     Type
  9247 ;;                  1    wreg      void 
  9248 ;; Registers used:
  9249 ;;		wreg, status,2, status,0, pclath, cstack
  9250 ;; Tracked objects:
  9251 ;;		On entry : 0/0
  9252 ;;		On exit  : 0/0
  9253 ;;		Unchanged: 0/0
  9254 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9255 ;;      Params:         0       0       0       0       0
  9256 ;;      Locals:         0       0       0       0       0
  9257 ;;      Temps:          2       0       0       0       0
  9258 ;;      Totals:         2       0       0       0       0
  9259 ;;Total ram usage:        2 bytes
  9260 ;; Hardware stack levels used:    1
  9261 ;; Hardware stack levels required when called:    2
  9262 ;; This function calls:
  9263 ;;		_Lcd_Cmd
  9264 ;;		_Lcd_Port
  9265 ;; This function is called by:
  9266 ;;		_main
  9267 ;; This function uses a non-reentrant model
  9268 ;;
  9269                           
  9270                           
  9271                           ;psect for function _Lcd_Init
  9272  1A6F                     _Lcd_Init:
  9273  1A6F                     l3206:	
  9274                           ;incstack = 0
  9275                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9276                           
  9277                           
  9278                           ;LCD.c: 45:     Lcd_Port(0x00);
  9279  1A6F  3000               	movlw	0
  9280  1A70  160A  158A  2165  160A  158A  	fcall	_Lcd_Port
  9281  1A75                     l3208:
  9282                           
  9283                           ;LCD.c: 46:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9284  1A75  3034               	movlw	52
  9285  1A76  00F5               	movwf	??_Lcd_Init+1
  9286  1A77  30F1               	movlw	241
  9287  1A78  00F4               	movwf	??_Lcd_Init
  9288  1A79                     u5867:
  9289  1A79  0BF4               	decfsz	??_Lcd_Init,f
  9290  1A7A  2A79               	goto	u5867
  9291  1A7B  0BF5               	decfsz	??_Lcd_Init+1,f
  9292  1A7C  2A79               	goto	u5867
  9293  1A7D  2A7E               	nop2
  9294  1A7E                     l3210:
  9295                           
  9296                           ;LCD.c: 47:     Lcd_Cmd(0x3F);
  9297  1A7E  303F               	movlw	63
  9298  1A7F  160A  158A  21B8  160A  158A  	fcall	_Lcd_Cmd
  9299                           
  9300                           ;LCD.c: 48:     _delay((unsigned long)((10)*(8000000/4000.0)));
  9301  1A84  301A               	movlw	26
  9302  1A85  00F5               	movwf	??_Lcd_Init+1
  9303  1A86  30F8               	movlw	248
  9304  1A87  00F4               	movwf	??_Lcd_Init
  9305  1A88                     u5877:
  9306  1A88  0BF4               	decfsz	??_Lcd_Init,f
  9307  1A89  2A88               	goto	u5877
  9308  1A8A  0BF5               	decfsz	??_Lcd_Init+1,f
  9309  1A8B  2A88               	goto	u5877
  9310  1A8C  0000               	nop
  9311  1A8D                     l3212:
  9312                           
  9313                           ;LCD.c: 49:     Lcd_Cmd(0x3F);
  9314  1A8D  303F               	movlw	63
  9315  1A8E  160A  158A  21B8  160A  158A  	fcall	_Lcd_Cmd
  9316  1A93                     l3214:
  9317                           
  9318                           ;LCD.c: 50:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  9319  1A93  3085               	movlw	133
  9320  1A94  00F4               	movwf	??_Lcd_Init
  9321  1A95                     u5887:
  9322  1A95  0BF4               	decfsz	??_Lcd_Init,f
  9323  1A96  2A95               	goto	u5887
  9324                           
  9325                           ;LCD.c: 51:     Lcd_Cmd(0x3F);
  9326  1A97  303F               	movlw	63
  9327  1A98  160A  158A  21B8  160A  158A  	fcall	_Lcd_Cmd
  9328                           
  9329                           ;LCD.c: 53:     Lcd_Cmd(0x38);
  9330  1A9D  3038               	movlw	56
  9331  1A9E  160A  158A  21B8  160A  158A  	fcall	_Lcd_Cmd
  9332                           
  9333                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
  9334  1AA3  300C               	movlw	12
  9335  1AA4  160A  158A  21B8  160A  158A  	fcall	_Lcd_Cmd
  9336                           
  9337                           ;LCD.c: 55:     Lcd_Cmd(0x06);
  9338  1AA9  3006               	movlw	6
  9339  1AAA  160A  158A  21B8  160A  158A  	fcall	_Lcd_Cmd
  9340  1AAF                     l24:
  9341  1AAF  0008               	return
  9342  1AB0                     __end_of_Lcd_Init:
  9343                           
  9344                           	psect	text31
  9345  00C8                     __ptext31:	
  9346 ;; *************** function _Lcd_Clear *****************
  9347 ;; Defined at:
  9348 ;;		line 28 in file "LCD.c"
  9349 ;; Parameters:    Size  Location     Type
  9350 ;;		None
  9351 ;; Auto vars:     Size  Location     Type
  9352 ;;		None
  9353 ;; Return value:  Size  Location     Type
  9354 ;;                  1    wreg      void 
  9355 ;; Registers used:
  9356 ;;		wreg, status,2, status,0, pclath, cstack
  9357 ;; Tracked objects:
  9358 ;;		On entry : 0/0
  9359 ;;		On exit  : 0/0
  9360 ;;		Unchanged: 0/0
  9361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9362 ;;      Params:         0       0       0       0       0
  9363 ;;      Locals:         0       0       0       0       0
  9364 ;;      Temps:          0       0       0       0       0
  9365 ;;      Totals:         0       0       0       0       0
  9366 ;;Total ram usage:        0 bytes
  9367 ;; Hardware stack levels used:    1
  9368 ;; Hardware stack levels required when called:    2
  9369 ;; This function calls:
  9370 ;;		_Lcd_Cmd
  9371 ;; This function is called by:
  9372 ;;		_main
  9373 ;; This function uses a non-reentrant model
  9374 ;;
  9375                           
  9376                           
  9377                           ;psect for function _Lcd_Clear
  9378  00C8                     _Lcd_Clear:
  9379  00C8                     l3192:	
  9380                           ;incstack = 0
  9381                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9382                           
  9383                           
  9384                           ;LCD.c: 29:     Lcd_Cmd(0);
  9385  00C8  3000               	movlw	0
  9386  00C9  160A  158A  21B8  120A  118A  	fcall	_Lcd_Cmd
  9387                           
  9388                           ;LCD.c: 30:     Lcd_Cmd(1);
  9389  00CE  3001               	movlw	1
  9390  00CF  160A  158A  21B8  120A  118A  	fcall	_Lcd_Cmd
  9391  00D4                     l15:
  9392  00D4  0008               	return
  9393  00D5                     __end_of_Lcd_Clear:
  9394                           
  9395                           	psect	text32
  9396  19B8                     __ptext32:	
  9397 ;; *************** function _Lcd_Cmd *****************
  9398 ;; Defined at:
  9399 ;;		line 20 in file "LCD.c"
  9400 ;; Parameters:    Size  Location     Type
  9401 ;;  a               1    wreg     unsigned char 
  9402 ;; Auto vars:     Size  Location     Type
  9403 ;;  a               1    3[COMMON] unsigned char 
  9404 ;; Return value:  Size  Location     Type
  9405 ;;                  1    wreg      void 
  9406 ;; Registers used:
  9407 ;;		wreg, status,2, status,0, pclath, cstack
  9408 ;; Tracked objects:
  9409 ;;		On entry : 0/0
  9410 ;;		On exit  : 0/0
  9411 ;;		Unchanged: 0/0
  9412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9413 ;;      Params:         0       0       0       0       0
  9414 ;;      Locals:         1       0       0       0       0
  9415 ;;      Temps:          2       0       0       0       0
  9416 ;;      Totals:         3       0       0       0       0
  9417 ;;Total ram usage:        3 bytes
  9418 ;; Hardware stack levels used:    1
  9419 ;; Hardware stack levels required when called:    1
  9420 ;; This function calls:
  9421 ;;		_Lcd_Port
  9422 ;; This function is called by:
  9423 ;;		_Lcd_Clear
  9424 ;;		_Lcd_Set_Cursor
  9425 ;;		_Lcd_Init
  9426 ;; This function uses a non-reentrant model
  9427 ;;
  9428                           
  9429                           
  9430                           ;psect for function _Lcd_Cmd
  9431  19B8                     _Lcd_Cmd:
  9432                           
  9433                           ;incstack = 0
  9434                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9435                           ;Lcd_Cmd@a stored from wreg
  9436  19B8  00F3               	movwf	Lcd_Cmd@a
  9437  19B9                     l2810:
  9438                           
  9439                           ;LCD.c: 21:     PORTEbits.RE0 = 0;
  9440  19B9  1283               	bcf	3,5	;RP0=0, select bank0
  9441  19BA  1303               	bcf	3,6	;RP1=0, select bank0
  9442  19BB  1009               	bcf	9,0	;volatile
  9443  19BC                     l2812:
  9444                           
  9445                           ;LCD.c: 22:     Lcd_Port(a);
  9446  19BC  0873               	movf	Lcd_Cmd@a,w
  9447  19BD  160A  158A  2165  160A  158A  	fcall	_Lcd_Port
  9448  19C2                     l2814:
  9449                           
  9450                           ;LCD.c: 23:     PORTEbits.RE1 = 1;
  9451  19C2  1283               	bcf	3,5	;RP0=0, select bank0
  9452  19C3  1303               	bcf	3,6	;RP1=0, select bank0
  9453  19C4  1489               	bsf	9,1	;volatile
  9454  19C5                     l2816:
  9455                           
  9456                           ;LCD.c: 24:     _delay((unsigned long)((4)*(8000000/4000.0)));
  9457  19C5  300B               	movlw	11
  9458  19C6  00F2               	movwf	??_Lcd_Cmd+1
  9459  19C7  3062               	movlw	98
  9460  19C8  00F1               	movwf	??_Lcd_Cmd
  9461  19C9                     u5897:
  9462  19C9  0BF1               	decfsz	??_Lcd_Cmd,f
  9463  19CA  29C9               	goto	u5897
  9464  19CB  0BF2               	decfsz	??_Lcd_Cmd+1,f
  9465  19CC  29C9               	goto	u5897
  9466  19CD  0000               	nop
  9467  19CE                     l2818:
  9468                           
  9469                           ;LCD.c: 25:     PORTEbits.RE1 = 0;
  9470  19CE  1283               	bcf	3,5	;RP0=0, select bank0
  9471  19CF  1303               	bcf	3,6	;RP1=0, select bank0
  9472  19D0  1089               	bcf	9,1	;volatile
  9473  19D1                     l12:
  9474  19D1  0008               	return
  9475  19D2                     __end_of_Lcd_Cmd:
  9476                           
  9477                           	psect	text33
  9478  1965                     __ptext33:	
  9479 ;; *************** function _Lcd_Port *****************
  9480 ;; Defined at:
  9481 ;;		line 16 in file "LCD.c"
  9482 ;; Parameters:    Size  Location     Type
  9483 ;;  a               1    wreg     unsigned char 
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;  a               1    0[COMMON] unsigned char 
  9486 ;; Return value:  Size  Location     Type
  9487 ;;                  1    wreg      void 
  9488 ;; Registers used:
  9489 ;;		wreg
  9490 ;; Tracked objects:
  9491 ;;		On entry : 0/0
  9492 ;;		On exit  : 0/0
  9493 ;;		Unchanged: 0/0
  9494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9495 ;;      Params:         0       0       0       0       0
  9496 ;;      Locals:         1       0       0       0       0
  9497 ;;      Temps:          0       0       0       0       0
  9498 ;;      Totals:         1       0       0       0       0
  9499 ;;Total ram usage:        1 bytes
  9500 ;; Hardware stack levels used:    1
  9501 ;; This function calls:
  9502 ;;		Nothing
  9503 ;; This function is called by:
  9504 ;;		_Lcd_Cmd
  9505 ;;		_Lcd_Init
  9506 ;;		_Lcd_Write_Char
  9507 ;; This function uses a non-reentrant model
  9508 ;;
  9509                           
  9510                           
  9511                           ;psect for function _Lcd_Port
  9512  1965                     _Lcd_Port:
  9513                           
  9514                           ;incstack = 0
  9515                           ; Regs used in _Lcd_Port: [wreg]
  9516                           ;Lcd_Port@a stored from wreg
  9517  1965  00F0               	movwf	Lcd_Port@a
  9518  1966                     l2344:
  9519                           
  9520                           ;LCD.c: 17:     PORTB = a;
  9521  1966  0870               	movf	Lcd_Port@a,w
  9522  1967  1283               	bcf	3,5	;RP0=0, select bank0
  9523  1968  1303               	bcf	3,6	;RP1=0, select bank0
  9524  1969  0086               	movwf	6	;volatile
  9525  196A                     l9:
  9526  196A  0008               	return
  9527  196B                     __end_of_Lcd_Port:
  9528  007E                     btemp	set	126	;btemp
  9529  007E                     wtemp0	set	126
  9530                           
  9531                           	psect	config
  9532                           
  9533                           ;Config register CONFIG1 @ 0x2007
  9534                           ;	Oscillator Selection bits
  9535                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  9536                           ;	Watchdog Timer Enable bit
  9537                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9538                           ;	Power-up Timer Enable bit
  9539                           ;	PWRTE = OFF, PWRT disabled
  9540                           ;	RE3/MCLR pin function select bit
  9541                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9542                           ;	Code Protection bit
  9543                           ;	CP = OFF, Program memory code protection is disabled
  9544                           ;	Data Code Protection bit
  9545                           ;	CPD = OFF, Data memory code protection is disabled
  9546                           ;	Brown Out Reset Selection bits
  9547                           ;	BOREN = OFF, BOR disabled
  9548                           ;	Internal External Switchover bit
  9549                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9550                           ;	Fail-Safe Clock Monitor Enabled bit
  9551                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9552                           ;	Low Voltage Programming Enable bit
  9553                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9554                           ;	In-Circuit Debugger Mode bit
  9555                           ;	DEBUG = 0x1, unprogrammed default
  9556  2007                     	org	8199
  9557  2007  20D5               	dw	8405
  9558                           
  9559                           ;Config register CONFIG2 @ 0x2008
  9560                           ;	Brown-out Reset Selection bit
  9561                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9562                           ;	Flash Program Memory Self Write Enable bits
  9563                           ;	WRT = OFF, Write protection off
  9564  2008                     	org	8200
  9565  2008  3FFF               	dw	16383
  9566                           
  9567                           	psect	text1_split_1
  9568  01BA                     u5320:
  9569  01BA                     l3344:
  9570  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  9571  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  9572  01BC  0842               	movf	(sprintf@fval+3)^(0+128),w
  9573  01BD  00F3               	movwf	___fleq@ff1+3
  9574  01BE  0841               	movf	(sprintf@fval+2)^(0+128),w
  9575  01BF  00F2               	movwf	___fleq@ff1+2
  9576  01C0  0840               	movf	(sprintf@fval+1)^(0+128),w
  9577  01C1  00F1               	movwf	___fleq@ff1+1
  9578  01C2  083F               	movf	sprintf@fval^(0+128),w
  9579  01C3  00F0               	movwf	___fleq@ff1
  9580  01C4  3000               	movlw	0
  9581  01C5  00F7               	movwf	___fleq@ff2+3
  9582  01C6  3000               	movlw	0
  9583  01C7  00F6               	movwf	___fleq@ff2+2
  9584  01C8  3000               	movlw	0
  9585  01C9  00F5               	movwf	___fleq@ff2+1
  9586  01CA  3000               	movlw	0
  9587  01CB  00F4               	movwf	___fleq@ff2
  9588  01CC  160A  158A  2336  120A  118A  	fcall	___fleq
  9589  01D1  1803               	btfsc	3,0
  9590  01D2  29D4               	goto	u5331
  9591  01D3  29D5               	goto	u5330
  9592  01D4                     u5331:
  9593  01D4  2A7D               	goto	l3364
  9594  01D5                     u5330:
  9595  01D5                     l3346:
  9596  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  9597  01D6  1303               	bcf	3,6	;RP1=0, select bank1
  9598  01D7  0842               	movf	(sprintf@fval+3)^(0+128),w
  9599  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  9600  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  9601  01DA  00D4               	movwf	___fltol@f1+3
  9602  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  9603  01DC  1303               	bcf	3,6	;RP1=0, select bank1
  9604  01DD  0841               	movf	(sprintf@fval+2)^(0+128),w
  9605  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  9606  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  9607  01E0  00D3               	movwf	___fltol@f1+2
  9608  01E1  1683               	bsf	3,5	;RP0=1, select bank1
  9609  01E2  1303               	bcf	3,6	;RP1=0, select bank1
  9610  01E3  0840               	movf	(sprintf@fval+1)^(0+128),w
  9611  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  9612  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  9613  01E6  00D2               	movwf	___fltol@f1+1
  9614  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  9615  01E8  1303               	bcf	3,6	;RP1=0, select bank1
  9616  01E9  083F               	movf	sprintf@fval^(0+128),w
  9617  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  9618  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  9619  01EC  00D1               	movwf	___fltol@f1
  9620  01ED  120A  158A  2007  120A  118A  	fcall	___fltol
  9621  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  9622  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  9623  01F4  0854               	movf	?___fltol+3,w
  9624  01F5  0453               	iorwf	?___fltol+2,w
  9625  01F6  0452               	iorwf	?___fltol+1,w
  9626  01F7  0451               	iorwf	?___fltol,w
  9627  01F8  1D03               	skipz
  9628  01F9  29FB               	goto	u5341
  9629  01FA  29FC               	goto	u5340
  9630  01FB                     u5341:
  9631  01FB  2A7D               	goto	l3364
  9632  01FC                     u5340:
  9633  01FC                     l3348:
  9634  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  9635  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  9636  01FE  083E               	movf	(sprintf@eexp+1)^(0+128),w
  9637  01FF  3A80               	xorlw	128
  9638  0200  00FF               	movwf	btemp+1
  9639  0201  3080               	movlw	128
  9640  0202  027F               	subwf	btemp+1,w
  9641  0203  1D03               	skipz
  9642  0204  2A07               	goto	u5355
  9643  0205  3002               	movlw	2
  9644  0206  023D               	subwf	sprintf@eexp^(0+128),w
  9645  0207                     u5355:
  9646  0207  1C03               	skipc
  9647  0208  2A0A               	goto	u5351
  9648  0209  2A0B               	goto	u5350
  9649  020A                     u5351:
  9650  020A  2A7D               	goto	l3364
  9651  020B                     u5350:
  9652  020B                     l3350:
  9653                           
  9654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  9655  020B  1683               	bsf	3,5	;RP0=1, select bank1
  9656  020C  1303               	bcf	3,6	;RP1=0, select bank1
  9657  020D  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  9658  020E  00F3               	movwf	___flge@ff1+3
  9659  020F  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  9660  0210  00F2               	movwf	___flge@ff1+2
  9661  0211  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  9662  0212  00F1               	movwf	___flge@ff1+1
  9663  0213  0835               	movf	sprintf@tmpval^(0+128),w
  9664  0214  00F0               	movwf	___flge@ff1
  9665  0215  3040               	movlw	64
  9666  0216  00F7               	movwf	___flge@ff2+3
  9667  0217  3089               	movlw	137
  9668  0218  00F6               	movwf	___flge@ff2+2
  9669  0219  3070               	movlw	112
  9670  021A  00F5               	movwf	___flge@ff2+1
  9671  021B  305F               	movlw	95
  9672  021C  00F4               	movwf	___flge@ff2
  9673  021D  160A  158A  2499  120A  118A  	fcall	___flge
  9674  0222  1803               	btfsc	3,0
  9675  0223  2A25               	goto	u5361
  9676  0224  2A26               	goto	u5360
  9677  0225                     u5361:
  9678  0225  2A2F               	goto	l3354
  9679  0226                     u5360:
  9680  0226                     l3352:
  9681                           
  9682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  9683  0226  30F7               	movlw	247
  9684  0227  1683               	bsf	3,5	;RP0=1, select bank1
  9685  0228  1303               	bcf	3,6	;RP1=0, select bank1
  9686  0229  07BD               	addwf	sprintf@eexp^(0+128),f
  9687  022A  1803               	skipnc
  9688  022B  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  9689  022C  30FF               	movlw	255
  9690  022D  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  9691                           
  9692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  9693  022E  2A37               	goto	l3356
  9694  022F                     l3354:
  9695                           
  9696                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  9697  022F  30F8               	movlw	248
  9698  0230  1683               	bsf	3,5	;RP0=1, select bank1
  9699  0231  1303               	bcf	3,6	;RP1=0, select bank1
  9700  0232  07BD               	addwf	sprintf@eexp^(0+128),f
  9701  0233  1803               	skipnc
  9702  0234  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  9703  0235  30FF               	movlw	255
  9704  0236  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  9705  0237                     l3356:
  9706                           
  9707                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  9708  0237  083D               	movf	sprintf@eexp^(0+128),w
  9709  0238  120A  158A  2140  120A  118A  	fcall	_scale
  9710  023D  1283               	bcf	3,5	;RP0=0, select bank0
  9711  023E  1303               	bcf	3,6	;RP1=0, select bank0
  9712  023F  0841               	movf	?_scale+3,w
  9713  0240  1683               	bsf	3,5	;RP0=1, select bank1
  9714  0241  1303               	bcf	3,6	;RP1=0, select bank1
  9715  0242  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  9716  0243  1283               	bcf	3,5	;RP0=0, select bank0
  9717  0244  1303               	bcf	3,6	;RP1=0, select bank0
  9718  0245  0840               	movf	?_scale+2,w
  9719  0246  1683               	bsf	3,5	;RP0=1, select bank1
  9720  0247  1303               	bcf	3,6	;RP1=0, select bank1
  9721  0248  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  9722  0249  1283               	bcf	3,5	;RP0=0, select bank0
  9723  024A  1303               	bcf	3,6	;RP1=0, select bank0
  9724  024B  083F               	movf	?_scale+1,w
  9725  024C  1683               	bsf	3,5	;RP0=1, select bank1
  9726  024D  1303               	bcf	3,6	;RP1=0, select bank1
  9727  024E  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  9728  024F  1283               	bcf	3,5	;RP0=0, select bank0
  9729  0250  1303               	bcf	3,6	;RP1=0, select bank0
  9730  0251  083E               	movf	?_scale,w
  9731  0252  1683               	bsf	3,5	;RP0=1, select bank1
  9732  0253  1303               	bcf	3,6	;RP1=0, select bank1
  9733  0254  00B5               	movwf	sprintf@tmpval^(0+128)
  9734  0255                     l3358:
  9735  0255  0842               	movf	(sprintf@fval+3)^(0+128),w
  9736  0256  00F3               	movwf	__div_to_l_@f1+3
  9737  0257  0841               	movf	(sprintf@fval+2)^(0+128),w
  9738  0258  00F2               	movwf	__div_to_l_@f1+2
  9739  0259  0840               	movf	(sprintf@fval+1)^(0+128),w
  9740  025A  00F1               	movwf	__div_to_l_@f1+1
  9741  025B  083F               	movf	sprintf@fval^(0+128),w
  9742  025C  00F0               	movwf	__div_to_l_@f1
  9743  025D  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  9744  025E  00F7               	movwf	__div_to_l_@f2+3
  9745  025F  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  9746  0260  00F6               	movwf	__div_to_l_@f2+2
  9747  0261  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  9748  0262  00F5               	movwf	__div_to_l_@f2+1
  9749  0263  0835               	movf	sprintf@tmpval^(0+128),w
  9750  0264  00F4               	movwf	__div_to_l_@f2
  9751  0265  120A  118A  20FC  120A  118A  	fcall	__div_to_l_
  9752  026A  0873               	movf	?__div_to_l_+3,w
  9753  026B  1683               	bsf	3,5	;RP0=1, select bank1
  9754  026C  1303               	bcf	3,6	;RP1=0, select bank1
  9755  026D  00BC               	movwf	(sprintf@val+3)^(0+128)
  9756  026E  0872               	movf	?__div_to_l_+2,w
  9757  026F  00BB               	movwf	(sprintf@val+2)^(0+128)
  9758  0270  0871               	movf	?__div_to_l_+1,w
  9759  0271  00BA               	movwf	(sprintf@val+1)^(0+128)
  9760  0272  0870               	movf	?__div_to_l_,w
  9761  0273  00B9               	movwf	sprintf@val^(0+128)
  9762  0274                     l3362:
  9763                           
  9764                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  9765  0274  3000               	movlw	0
  9766  0275  00C2               	movwf	(sprintf@fval+3)^(0+128)
  9767  0276  3000               	movlw	0
  9768  0277  00C1               	movwf	(sprintf@fval+2)^(0+128)
  9769  0278  3000               	movlw	0
  9770  0279  00C0               	movwf	(sprintf@fval+1)^(0+128)
  9771  027A  3000               	movlw	0
  9772  027B  00BF               	movwf	sprintf@fval^(0+128)
  9773                           
  9774                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  9775  027C  2B01               	goto	l3370
  9776  027D                     l3364:
  9777                           
  9778                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  9779  027D  1683               	bsf	3,5	;RP0=1, select bank1
  9780  027E  1303               	bcf	3,6	;RP1=0, select bank1
  9781  027F  0842               	movf	(sprintf@fval+3)^(0+128),w
  9782  0280  1283               	bcf	3,5	;RP0=0, select bank0
  9783  0281  1303               	bcf	3,6	;RP1=0, select bank0
  9784  0282  00D4               	movwf	___fltol@f1+3
  9785  0283  1683               	bsf	3,5	;RP0=1, select bank1
  9786  0284  1303               	bcf	3,6	;RP1=0, select bank1
  9787  0285  0841               	movf	(sprintf@fval+2)^(0+128),w
  9788  0286  1283               	bcf	3,5	;RP0=0, select bank0
  9789  0287  1303               	bcf	3,6	;RP1=0, select bank0
  9790  0288  00D3               	movwf	___fltol@f1+2
  9791  0289  1683               	bsf	3,5	;RP0=1, select bank1
  9792  028A  1303               	bcf	3,6	;RP1=0, select bank1
  9793  028B  0840               	movf	(sprintf@fval+1)^(0+128),w
  9794  028C  1283               	bcf	3,5	;RP0=0, select bank0
  9795  028D  1303               	bcf	3,6	;RP1=0, select bank0
  9796  028E  00D2               	movwf	___fltol@f1+1
  9797  028F  1683               	bsf	3,5	;RP0=1, select bank1
  9798  0290  1303               	bcf	3,6	;RP1=0, select bank1
  9799  0291  083F               	movf	sprintf@fval^(0+128),w
  9800  0292  1283               	bcf	3,5	;RP0=0, select bank0
  9801  0293  1303               	bcf	3,6	;RP1=0, select bank0
  9802  0294  00D1               	movwf	___fltol@f1
  9803  0295  120A  158A  2007  120A  118A  	fcall	___fltol
  9804  029A  1283               	bcf	3,5	;RP0=0, select bank0
  9805  029B  1303               	bcf	3,6	;RP1=0, select bank0
  9806  029C  0854               	movf	?___fltol+3,w
  9807  029D  1683               	bsf	3,5	;RP0=1, select bank1
  9808  029E  1303               	bcf	3,6	;RP1=0, select bank1
  9809  029F  00BC               	movwf	(sprintf@val+3)^(0+128)
  9810  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  9811  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  9812  02A2  0853               	movf	?___fltol+2,w
  9813  02A3  1683               	bsf	3,5	;RP0=1, select bank1
  9814  02A4  1303               	bcf	3,6	;RP1=0, select bank1
  9815  02A5  00BB               	movwf	(sprintf@val+2)^(0+128)
  9816  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  9817  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  9818  02A8  0852               	movf	?___fltol+1,w
  9819  02A9  1683               	bsf	3,5	;RP0=1, select bank1
  9820  02AA  1303               	bcf	3,6	;RP1=0, select bank1
  9821  02AB  00BA               	movwf	(sprintf@val+1)^(0+128)
  9822  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  9823  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  9824  02AE  0851               	movf	?___fltol,w
  9825  02AF  1683               	bsf	3,5	;RP0=1, select bank1
  9826  02B0  1303               	bcf	3,6	;RP1=0, select bank1
  9827  02B1  00B9               	movwf	sprintf@val^(0+128)
  9828  02B2                     l3366:
  9829                           
  9830                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  9831  02B2  083C               	movf	(sprintf@val+3)^(0+128),w
  9832  02B3  00F3               	movwf	___xxtofl@val+3
  9833  02B4  083B               	movf	(sprintf@val+2)^(0+128),w
  9834  02B5  00F2               	movwf	___xxtofl@val+2
  9835  02B6  083A               	movf	(sprintf@val+1)^(0+128),w
  9836  02B7  00F1               	movwf	___xxtofl@val+1
  9837  02B8  0839               	movf	sprintf@val^(0+128),w
  9838  02B9  00F0               	movwf	___xxtofl@val
  9839  02BA  3000               	movlw	0
  9840  02BB  160A  158A  253B  120A  118A  	fcall	___xxtofl
  9841  02C0  0873               	movf	?___xxtofl+3,w
  9842  02C1  1283               	bcf	3,5	;RP0=0, select bank0
  9843  02C2  1303               	bcf	3,6	;RP1=0, select bank0
  9844  02C3  00E9               	movwf	___flsub@a+3
  9845  02C4  0872               	movf	?___xxtofl+2,w
  9846  02C5  00E8               	movwf	___flsub@a+2
  9847  02C6  0871               	movf	?___xxtofl+1,w
  9848  02C7  00E7               	movwf	___flsub@a+1
  9849  02C8  0870               	movf	?___xxtofl,w
  9850  02C9  00E6               	movwf	___flsub@a
  9851  02CA  1683               	bsf	3,5	;RP0=1, select bank1
  9852  02CB  1303               	bcf	3,6	;RP1=0, select bank1
  9853  02CC  0842               	movf	(sprintf@fval+3)^(0+128),w
  9854  02CD  1283               	bcf	3,5	;RP0=0, select bank0
  9855  02CE  1303               	bcf	3,6	;RP1=0, select bank0
  9856  02CF  00ED               	movwf	___flsub@b+3
  9857  02D0  1683               	bsf	3,5	;RP0=1, select bank1
  9858  02D1  1303               	bcf	3,6	;RP1=0, select bank1
  9859  02D2  0841               	movf	(sprintf@fval+2)^(0+128),w
  9860  02D3  1283               	bcf	3,5	;RP0=0, select bank0
  9861  02D4  1303               	bcf	3,6	;RP1=0, select bank0
  9862  02D5  00EC               	movwf	___flsub@b+2
  9863  02D6  1683               	bsf	3,5	;RP0=1, select bank1
  9864  02D7  1303               	bcf	3,6	;RP1=0, select bank1
  9865  02D8  0840               	movf	(sprintf@fval+1)^(0+128),w
  9866  02D9  1283               	bcf	3,5	;RP0=0, select bank0
  9867  02DA  1303               	bcf	3,6	;RP1=0, select bank0
  9868  02DB  00EB               	movwf	___flsub@b+1
  9869  02DC  1683               	bsf	3,5	;RP0=1, select bank1
  9870  02DD  1303               	bcf	3,6	;RP1=0, select bank1
  9871  02DE  083F               	movf	sprintf@fval^(0+128),w
  9872  02DF  1283               	bcf	3,5	;RP0=0, select bank0
  9873  02E0  1303               	bcf	3,6	;RP1=0, select bank0
  9874  02E1  00EA               	movwf	___flsub@b
  9875  02E2  160A  158A  2211  120A  118A  	fcall	___flsub
  9876  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  9877  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  9878  02E9  0869               	movf	?___flsub+3,w
  9879  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  9880  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  9881  02EC  00C2               	movwf	(sprintf@fval+3)^(0+128)
  9882  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  9883  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  9884  02EF  0868               	movf	?___flsub+2,w
  9885  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  9886  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  9887  02F2  00C1               	movwf	(sprintf@fval+2)^(0+128)
  9888  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  9889  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  9890  02F5  0867               	movf	?___flsub+1,w
  9891  02F6  1683               	bsf	3,5	;RP0=1, select bank1
  9892  02F7  1303               	bcf	3,6	;RP1=0, select bank1
  9893  02F8  00C0               	movwf	(sprintf@fval+1)^(0+128)
  9894  02F9  1283               	bcf	3,5	;RP0=0, select bank0
  9895  02FA  1303               	bcf	3,6	;RP1=0, select bank0
  9896  02FB  0866               	movf	?___flsub,w
  9897  02FC  1683               	bsf	3,5	;RP0=1, select bank1
  9898  02FD  1303               	bcf	3,6	;RP1=0, select bank1
  9899  02FE  00BF               	movwf	sprintf@fval^(0+128)
  9900  02FF                     l3368:
  9901                           
  9902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  9903  02FF  01BD               	clrf	sprintf@eexp^(0+128)
  9904  0300  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  9905  0301                     l3370:
  9906                           
  9907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  9908  0301  01C5               	clrf	sprintf@c^(0+128)
  9909  0302  0AC5               	incf	sprintf@c^(0+128),f
  9910  0303                     l3376:
  9911                           
  9912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  9913  0303  0845               	movf	sprintf@c^(0+128),w
  9914  0304  00A7               	movwf	??_sprintf^(0+128)
  9915  0305  3001               	movlw	1
  9916  0306                     u5375:
  9917  0306  1003               	clrc
  9918  0307  0DA7               	rlf	??_sprintf^(0+128),f
  9919  0308  3EFF               	addlw	-1
  9920  0309  1D03               	skipz
  9921  030A  2B06               	goto	u5375
  9922  030B  1003               	clrc
  9923  030C  0D27               	rlf	??_sprintf^(0+128),w
  9924  030D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  9925  030E  0084               	movwf	4
  9926  030F  120A  118A  200D  120A  118A  	fcall	stringdir
  9927  0314  00A8               	movwf	(??_sprintf+1)^(0+128)
  9928  0315  120A  118A  200D  120A  118A  	fcall	stringdir
  9929  031A  00A9               	movwf	((??_sprintf+1)^(0+128)+1)
  9930  031B  120A  118A  200D  120A  118A  	fcall	stringdir
  9931  0320  00AA               	movwf	((??_sprintf+1)^(0+128)+2)
  9932  0321  120A  118A  200D  120A  118A  	fcall	stringdir
  9933  0326  00AB               	movwf	((??_sprintf+1)^(0+128)+3)
  9934  0327  082B               	movf	(??_sprintf+4)^(0+128),w
  9935  0328  023C               	subwf	(sprintf@val+3)^(0+128),w
  9936  0329  1D03               	skipz
  9937  032A  2B35               	goto	u5385
  9938  032B  082A               	movf	(??_sprintf+3)^(0+128),w
  9939  032C  023B               	subwf	(sprintf@val+2)^(0+128),w
  9940  032D  1D03               	skipz
  9941  032E  2B35               	goto	u5385
  9942  032F  0829               	movf	(??_sprintf+2)^(0+128),w
  9943  0330  023A               	subwf	(sprintf@val+1)^(0+128),w
  9944  0331  1D03               	skipz
  9945  0332  2B35               	goto	u5385
  9946  0333  0828               	movf	(??_sprintf+1)^(0+128),w
  9947  0334  0239               	subwf	sprintf@val^(0+128),w
  9948  0335                     u5385:
  9949  0335  1803               	skipnc
  9950  0336  2B38               	goto	u5381
  9951  0337  2B39               	goto	u5380
  9952  0338                     u5381:
  9953  0338  2B3A               	goto	l3380
  9954  0339                     u5380:
  9955  0339  2B44               	goto	l3382
  9956  033A                     l3380:
  9957  033A  3001               	movlw	1
  9958  033B  00A7               	movwf	??_sprintf^(0+128)
  9959  033C  0827               	movf	??_sprintf^(0+128),w
  9960  033D  07C5               	addwf	sprintf@c^(0+128),f
  9961  033E  300A               	movlw	10
  9962  033F  0645               	xorwf	sprintf@c^(0+128),w
  9963  0340  1D03               	btfss	3,2
  9964  0341  2B43               	goto	u5391
  9965  0342  2B44               	goto	u5390
  9966  0343                     u5391:
  9967  0343  2B03               	goto	l3376
  9968  0344                     u5390:
  9969  0344                     l3382:
  9970                           
  9971                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  9972  0344  0845               	movf	sprintf@c^(0+128),w
  9973  0345  0743               	addwf	sprintf@prec^(0+128),w
  9974  0346  00A7               	movwf	??_sprintf^(0+128)
  9975  0347  0844               	movf	(sprintf@prec+1)^(0+128),w
  9976  0348  1803               	skipnc
  9977  0349  0A44               	incf	(sprintf@prec+1)^(0+128),w
  9978  034A  00A8               	movwf	(??_sprintf^(0+128)+1)
  9979  034B  083D               	movf	sprintf@eexp^(0+128),w
  9980  034C  0727               	addwf	??_sprintf^(0+128),w
  9981  034D  00A9               	movwf	(??_sprintf+2)^(0+128)
  9982  034E  083E               	movf	(sprintf@eexp+1)^(0+128),w
  9983  034F  1803               	skipnc
  9984  0350  0A3E               	incf	(sprintf@eexp+1)^(0+128),w
  9985  0351  0728               	addwf	(??_sprintf+1)^(0+128),w
  9986  0352  00AA               	movwf	(??_sprintf+3)^(0+128)
  9987  0353  0829               	movf	(??_sprintf+2)^(0+128),w
  9988  0354  02B3               	subwf	sprintf@width^(0+128),f
  9989  0355  082A               	movf	(??_sprintf+3)^(0+128),w
  9990  0356  1C03               	skipc
  9991  0357  03B4               	decf	(sprintf@width+1)^(0+128),f
  9992  0358  02B4               	subwf	(sprintf@width+1)^(0+128),f
  9993                           
  9994                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  9995  0359  0843               	movf	sprintf@prec^(0+128),w
  9996  035A  0444               	iorwf	(sprintf@prec+1)^(0+128),w
  9997  035B  1903               	btfsc	3,2
  9998  035C  2B5E               	goto	u5401
  9999  035D  2B5F               	goto	u5400
 10000  035E                     u5401:
 10001  035E  2B65               	goto	l3386
 10002  035F                     u5400:
 10003  035F                     l3384:
 10004                           
 10005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10006  035F  30FF               	movlw	255
 10007  0360  07B3               	addwf	sprintf@width^(0+128),f
 10008  0361  1803               	skipnc
 10009  0362  0AB4               	incf	(sprintf@width+1)^(0+128),f
 10010  0363  30FF               	movlw	255
 10011  0364  07B4               	addwf	(sprintf@width+1)^(0+128),f
 10012  0365                     l3386:
 10013                           
 10014                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10015  0365  3003               	movlw	3
 10016  0366  0531               	andwf	sprintf@flag^(0+128),w
 10017  0367  00A7               	movwf	??_sprintf^(0+128)
 10018  0368  3000               	movlw	0
 10019  0369  0532               	andwf	(sprintf@flag+1)^(0+128),w
 10020  036A  00A8               	movwf	(??_sprintf+1)^(0+128)
 10021  036B  0827               	movf	??_sprintf^(0+128),w
 10022  036C  0428               	iorwf	(??_sprintf^(0+128)+1),w
 10023  036D  1903               	btfsc	3,2
 10024  036E  2B70               	goto	u5411
 10025  036F  2B71               	goto	u5410
 10026  0370                     u5411:
 10027  0370  2B8A               	goto	l3396
 10028  0371                     u5410:
 10029  0371                     l3388:
 10030                           
 10031                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10032  0371  30FF               	movlw	255
 10033  0372  07B3               	addwf	sprintf@width^(0+128),f
 10034  0373  1803               	skipnc
 10035  0374  0AB4               	incf	(sprintf@width+1)^(0+128),f
 10036  0375  30FF               	movlw	255
 10037  0376  07B4               	addwf	(sprintf@width+1)^(0+128),f
 10038  0377  2B8A               	goto	l3396
 10039  0378                     l3390:
 10040                           
 10041                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10042  0378  3020               	movlw	32
 10043  0379  1683               	bsf	3,5	;RP0=1, select bank1
 10044  037A  1303               	bcf	3,6	;RP1=0, select bank1
 10045  037B  00A7               	movwf	??_sprintf^(0+128)
 10046  037C  0820               	movf	sprintf@sp^(0+128),w
 10047  037D  0084               	movwf	4
 10048  037E  1783               	bsf	3,7
 10049  037F  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10050  0380  1383               	bcf	3,7
 10051  0381  0827               	movf	??_sprintf^(0+128),w
 10052  0382  0080               	movwf	0
 10053  0383                     l3392:
 10054  0383  3001               	movlw	1
 10055  0384  07A0               	addwf	sprintf@sp^(0+128),f
 10056  0385  1803               	skipnc
 10057  0386  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 10058  0387  3000               	movlw	0
 10059  0388  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 10060  0389  2B71               	goto	l3388
 10061  038A                     l3396:
 10062                           
 10063                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10064  038A  0834               	movf	(sprintf@width+1)^(0+128),w
 10065  038B  3A80               	xorlw	128
 10066  038C  00FF               	movwf	btemp+1
 10067  038D  3080               	movlw	128
 10068  038E  027F               	subwf	btemp+1,w
 10069  038F  1D03               	skipz
 10070  0390  2B93               	goto	u5425
 10071  0391  3001               	movlw	1
 10072  0392  0233               	subwf	sprintf@width^(0+128),w
 10073  0393                     u5425:
 10074  0393  1803               	skipnc
 10075  0394  2B96               	goto	u5421
 10076  0395  2B97               	goto	u5420
 10077  0396                     u5421:
 10078  0396  2B78               	goto	l3390
 10079  0397                     u5420:
 10080  0397                     l3398:
 10081                           
 10082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10083  0397  3003               	movlw	3
 10084  0398  1683               	bsf	3,5	;RP0=1, select bank1
 10085  0399  1303               	bcf	3,6	;RP1=0, select bank1
 10086  039A  0531               	andwf	sprintf@flag^(0+128),w
 10087  039B  00A7               	movwf	??_sprintf^(0+128)
 10088  039C  3000               	movlw	0
 10089  039D  0532               	andwf	(sprintf@flag+1)^(0+128),w
 10090  039E  00A8               	movwf	(??_sprintf+1)^(0+128)
 10091  039F  0827               	movf	??_sprintf^(0+128),w
 10092  03A0  0428               	iorwf	(??_sprintf^(0+128)+1),w
 10093  03A1  1903               	btfsc	3,2
 10094  03A2  2BA4               	goto	u5431
 10095  03A3  2BA5               	goto	u5430
 10096  03A4                     u5431:
 10097  03A4  2C3A               	goto	l3412
 10098  03A5                     u5430:
 10099  03A5                     l3400:
 10100                           
 10101                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10102  03A5  302D               	movlw	45
 10103  03A6  00A7               	movwf	??_sprintf^(0+128)
 10104  03A7  0820               	movf	sprintf@sp^(0+128),w
 10105  03A8  0084               	movwf	4
 10106  03A9  1783               	bsf	3,7
 10107  03AA  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10108  03AB  1383               	bcf	3,7
 10109  03AC  0827               	movf	??_sprintf^(0+128),w
 10110  03AD  0080               	movwf	0
 10111  03AE                     l3402:
 10112  03AE  3001               	movlw	1
 10113  03AF  07A0               	addwf	sprintf@sp^(0+128),f
 10114  03B0  1803               	skipnc
 10115  03B1  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 10116  03B2  3000               	movlw	0
 10117  03B3  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 10118  03B4  2C3A               	goto	l3412
 10119  03B5                     l3404:
 10120                           
 10121                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10122  03B5  0845               	movf	sprintf@c^(0+128),w
 10123  03B6  00A7               	movwf	??_sprintf^(0+128)
 10124  03B7  3001               	movlw	1
 10125  03B8                     u5445:
 10126  03B8  1003               	clrc
 10127  03B9  0DA7               	rlf	??_sprintf^(0+128),f
 10128  03BA  3EFF               	addlw	-1
 10129  03BB  1D03               	skipz
 10130  03BC  2BB8               	goto	u5445
 10131  03BD  1003               	clrc
 10132  03BE  0D27               	rlf	??_sprintf^(0+128),w
 10133  03BF  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10134  03C0  0084               	movwf	4
 10135  03C1  120A  118A  200D  120A  118A  	fcall	stringdir
 10136  03C6  00F0               	movwf	___lldiv@divisor
 10137  03C7  120A  118A  200D  120A  118A  	fcall	stringdir
 10138  03CC  00F1               	movwf	___lldiv@divisor+1
 10139  03CD  120A  118A  200D  120A  118A  	fcall	stringdir
 10140  03D2  00F2               	movwf	___lldiv@divisor+2
 10141  03D3  120A  118A  200D  120A  118A  	fcall	stringdir
 10142  03D8  00F3               	movwf	___lldiv@divisor+3
 10143  03D9  083C               	movf	(sprintf@val+3)^(0+128),w
 10144  03DA  00F7               	movwf	___lldiv@dividend+3
 10145  03DB  083B               	movf	(sprintf@val+2)^(0+128),w
 10146  03DC  00F6               	movwf	___lldiv@dividend+2
 10147  03DD  083A               	movf	(sprintf@val+1)^(0+128),w
 10148  03DE  00F5               	movwf	___lldiv@dividend+1
 10149  03DF  0839               	movf	sprintf@val^(0+128),w
 10150  03E0  00F4               	movwf	___lldiv@dividend
 10151  03E1  160A  158A  2433  120A  118A  	fcall	___lldiv
 10152  03E6  0873               	movf	?___lldiv+3,w
 10153  03E7  1683               	bsf	3,5	;RP0=1, select bank1
 10154  03E8  1303               	bcf	3,6	;RP1=0, select bank1
 10155  03E9  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
 10156  03EA  0872               	movf	?___lldiv+2,w
 10157  03EB  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
 10158  03EC  0871               	movf	?___lldiv+1,w
 10159  03ED  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
 10160  03EE  0870               	movf	?___lldiv,w
 10161  03EF  00B5               	movwf	sprintf@tmpval^(0+128)
 10162  03F0                     l3406:
 10163                           
 10164                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10165  03F0  3000               	movlw	0
 10166  03F1  1283               	bcf	3,5	;RP0=0, select bank0
 10167  03F2  1303               	bcf	3,6	;RP1=0, select bank0
 10168  03F3  00A3               	movwf	___llmod@divisor+3
 10169  03F4  3000               	movlw	0
 10170  03F5  00A2               	movwf	___llmod@divisor+2
 10171  03F6  3000               	movlw	0
 10172  03F7  00A1               	movwf	___llmod@divisor+1
 10173  03F8  300A               	movlw	10
 10174  03F9  00A0               	movwf	___llmod@divisor
 10175  03FA  1683               	bsf	3,5	;RP0=1, select bank1
 10176  03FB  1303               	bcf	3,6	;RP1=0, select bank1
 10177  03FC  0838               	movf	(sprintf@tmpval+3)^(0+128),w
 10178  03FD  1283               	bcf	3,5	;RP0=0, select bank0
 10179  03FE  1303               	bcf	3,6	;RP1=0, select bank0
 10180  03FF  00A7               	movwf	___llmod@dividend+3
 10181  0400  1683               	bsf	3,5	;RP0=1, select bank1
 10182  0401  1303               	bcf	3,6	;RP1=0, select bank1
 10183  0402  0837               	movf	(sprintf@tmpval+2)^(0+128),w
 10184  0403  1283               	bcf	3,5	;RP0=0, select bank0
 10185  0404  1303               	bcf	3,6	;RP1=0, select bank0
 10186  0405  00A6               	movwf	___llmod@dividend+2
 10187  0406  1683               	bsf	3,5	;RP0=1, select bank1
 10188  0407  1303               	bcf	3,6	;RP1=0, select bank1
 10189  0408  0836               	movf	(sprintf@tmpval+1)^(0+128),w
 10190  0409  1283               	bcf	3,5	;RP0=0, select bank0
 10191  040A  1303               	bcf	3,6	;RP1=0, select bank0
 10192  040B  00A5               	movwf	___llmod@dividend+1
 10193  040C  1683               	bsf	3,5	;RP0=1, select bank1
 10194  040D  1303               	bcf	3,6	;RP1=0, select bank1
 10195  040E  0835               	movf	sprintf@tmpval^(0+128),w
 10196  040F  1283               	bcf	3,5	;RP0=0, select bank0
 10197  0410  1303               	bcf	3,6	;RP1=0, select bank0
 10198  0411  00A4               	movwf	___llmod@dividend
 10199  0412  160A  158A  2384  120A  118A  	fcall	___llmod
 10200  0417  1283               	bcf	3,5	;RP0=0, select bank0
 10201  0418  1303               	bcf	3,6	;RP1=0, select bank0
 10202  0419  0823               	movf	?___llmod+3,w
 10203  041A  1683               	bsf	3,5	;RP0=1, select bank1
 10204  041B  1303               	bcf	3,6	;RP1=0, select bank1
 10205  041C  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
 10206  041D  1283               	bcf	3,5	;RP0=0, select bank0
 10207  041E  1303               	bcf	3,6	;RP1=0, select bank0
 10208  041F  0822               	movf	?___llmod+2,w
 10209  0420  1683               	bsf	3,5	;RP0=1, select bank1
 10210  0421  1303               	bcf	3,6	;RP1=0, select bank1
 10211  0422  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
 10212  0423  1283               	bcf	3,5	;RP0=0, select bank0
 10213  0424  1303               	bcf	3,6	;RP1=0, select bank0
 10214  0425  0821               	movf	?___llmod+1,w
 10215  0426  1683               	bsf	3,5	;RP0=1, select bank1
 10216  0427  1303               	bcf	3,6	;RP1=0, select bank1
 10217  0428  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
 10218  0429  1283               	bcf	3,5	;RP0=0, select bank0
 10219  042A  1303               	bcf	3,6	;RP1=0, select bank0
 10220  042B  0820               	movf	?___llmod,w
 10221  042C  1683               	bsf	3,5	;RP0=1, select bank1
 10222  042D  1303               	bcf	3,6	;RP1=0, select bank1
 10223  042E  00B5               	movwf	sprintf@tmpval^(0+128)
 10224  042F                     l3408:
 10225                           
 10226                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10227  042F  0835               	movf	sprintf@tmpval^(0+128),w
 10228  0430  3E30               	addlw	48
 10229  0431  00A7               	movwf	??_sprintf^(0+128)
 10230  0432  0820               	movf	sprintf@sp^(0+128),w
 10231  0433  0084               	movwf	4
 10232  0434  1783               	bsf	3,7
 10233  0435  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10234  0436  1383               	bcf	3,7
 10235  0437  0827               	movf	??_sprintf^(0+128),w
 10236  0438  0080               	movwf	0
 10237  0439  2BAE               	goto	l3402
 10238  043A                     l3412:
 10239                           
 10240                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10241  043A  3001               	movlw	1
 10242  043B  02C5               	subwf	sprintf@c^(0+128),f
 10243  043C  0A45               	incf	sprintf@c^(0+128),w
 10244  043D  1D03               	btfss	3,2
 10245  043E  2C40               	goto	u5451
 10246  043F  2C41               	goto	u5450
 10247  0440                     u5451:
 10248  0440  2BB5               	goto	l3404
 10249  0441                     u5450:
 10250  0441  2C59               	goto	l3420
 10251  0442                     l3414:
 10252                           
 10253                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10254  0442  3030               	movlw	48
 10255  0443  1683               	bsf	3,5	;RP0=1, select bank1
 10256  0444  1303               	bcf	3,6	;RP1=0, select bank1
 10257  0445  00A7               	movwf	??_sprintf^(0+128)
 10258  0446  0820               	movf	sprintf@sp^(0+128),w
 10259  0447  0084               	movwf	4
 10260  0448  1783               	bsf	3,7
 10261  0449  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10262  044A  1383               	bcf	3,7
 10263  044B  0827               	movf	??_sprintf^(0+128),w
 10264  044C  0080               	movwf	0
 10265  044D                     l3416:
 10266  044D  3001               	movlw	1
 10267  044E  07A0               	addwf	sprintf@sp^(0+128),f
 10268  044F  1803               	skipnc
 10269  0450  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 10270  0451  3000               	movlw	0
 10271  0452  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 10272  0453                     l3418:
 10273                           
 10274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10275  0453  30FF               	movlw	255
 10276  0454  07BD               	addwf	sprintf@eexp^(0+128),f
 10277  0455  1803               	skipnc
 10278  0456  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
 10279  0457  30FF               	movlw	255
 10280  0458  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
 10281  0459                     l3420:
 10282                           
 10283                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10284  0459  083E               	movf	(sprintf@eexp+1)^(0+128),w
 10285  045A  3A80               	xorlw	128
 10286  045B  00FF               	movwf	btemp+1
 10287  045C  3080               	movlw	128
 10288  045D  027F               	subwf	btemp+1,w
 10289  045E  1D03               	skipz
 10290  045F  2C62               	goto	u5465
 10291  0460  3001               	movlw	1
 10292  0461  023D               	subwf	sprintf@eexp^(0+128),w
 10293  0462                     u5465:
 10294  0462  1803               	skipnc
 10295  0463  2C65               	goto	u5461
 10296  0464  2C66               	goto	u5460
 10297  0465                     u5461:
 10298  0465  2C42               	goto	l3414
 10299  0466                     u5460:
 10300  0466                     l3422:
 10301                           
 10302                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10303  0466  1683               	bsf	3,5	;RP0=1, select bank1
 10304  0467  1303               	bcf	3,6	;RP1=0, select bank1
 10305  0468  0844               	movf	(sprintf@prec+1)^(0+128),w
 10306  0469  3A80               	xorlw	128
 10307  046A  00FF               	movwf	btemp+1
 10308  046B  3080               	movlw	128
 10309  046C  027F               	subwf	btemp+1,w
 10310  046D  1D03               	skipz
 10311  046E  2C71               	goto	u5475
 10312  046F  3009               	movlw	9
 10313  0470  0243               	subwf	sprintf@prec^(0+128),w
 10314  0471                     u5475:
 10315  0471  1C03               	skipc
 10316  0472  2C74               	goto	u5471
 10317  0473  2C75               	goto	u5470
 10318  0474                     u5471:
 10319  0474  2C7C               	goto	l3426
 10320  0475                     u5470:
 10321  0475                     l3424:
 10322                           
 10323                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10324  0475  3008               	movlw	8
 10325  0476  1683               	bsf	3,5	;RP0=1, select bank1
 10326  0477  1303               	bcf	3,6	;RP1=0, select bank1
 10327  0478  00A7               	movwf	??_sprintf^(0+128)
 10328  0479  0827               	movf	??_sprintf^(0+128),w
 10329  047A  00C5               	movwf	sprintf@c^(0+128)
 10330  047B  2C82               	goto	l355
 10331  047C                     l3426:
 10332                           
 10333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10334  047C  1683               	bsf	3,5	;RP0=1, select bank1
 10335  047D  1303               	bcf	3,6	;RP1=0, select bank1
 10336  047E  0843               	movf	sprintf@prec^(0+128),w
 10337  047F  00A7               	movwf	??_sprintf^(0+128)
 10338  0480  0827               	movf	??_sprintf^(0+128),w
 10339  0481  00C5               	movwf	sprintf@c^(0+128)
 10340  0482                     l355:
 10341                           
 10342                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10343  0482  0845               	movf	sprintf@c^(0+128),w
 10344  0483  00A7               	movwf	??_sprintf^(0+128)
 10345  0484  01A8               	clrf	(??_sprintf^(0+128)+1)
 10346  0485  0827               	movf	??_sprintf^(0+128),w
 10347  0486  02C3               	subwf	sprintf@prec^(0+128),f
 10348  0487  0828               	movf	(??_sprintf+1)^(0+128),w
 10349  0488  1C03               	skipc
 10350  0489  03C4               	decf	(sprintf@prec+1)^(0+128),f
 10351  048A  02C4               	subwf	(sprintf@prec+1)^(0+128),f
 10352  048B                     l3428:
 10353                           
 10354                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10355  048B  0845               	movf	sprintf@c^(0+128),w
 10356  048C  1903               	btfsc	3,2
 10357  048D  2C8F               	goto	u5481
 10358  048E  2C90               	goto	u5480
 10359  048F                     u5481:
 10360  048F  2C9F               	goto	l3434
 10361  0490                     u5480:
 10362  0490                     l3430:
 10363                           
 10364                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10365  0490  302E               	movlw	46
 10366  0491  00A7               	movwf	??_sprintf^(0+128)
 10367  0492  0820               	movf	sprintf@sp^(0+128),w
 10368  0493  0084               	movwf	4
 10369  0494  1783               	bsf	3,7
 10370  0495  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10371  0496  1383               	bcf	3,7
 10372  0497  0827               	movf	??_sprintf^(0+128),w
 10373  0498  0080               	movwf	0
 10374  0499                     l3432:
 10375  0499  3001               	movlw	1
 10376  049A  07A0               	addwf	sprintf@sp^(0+128),f
 10377  049B  1803               	skipnc
 10378  049C  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 10379  049D  3000               	movlw	0
 10380  049E  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 10381  049F                     l3434:
 10382                           
 10383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10384  049F  0845               	movf	sprintf@c^(0+128),w
 10385  04A0  120A  158A  2140  120A  118A  	fcall	_scale
 10386  04A5  1283               	bcf	3,5	;RP0=0, select bank0
 10387  04A6  1303               	bcf	3,6	;RP1=0, select bank0
 10388  04A7  0841               	movf	?_scale+3,w
 10389  04A8  1683               	bsf	3,5	;RP0=1, select bank1
 10390  04A9  1303               	bcf	3,6	;RP1=0, select bank1
 10391  04AA  00AF               	movwf	(_sprintf$1218+3)^(0+128)
 10392  04AB  1283               	bcf	3,5	;RP0=0, select bank0
 10393  04AC  1303               	bcf	3,6	;RP1=0, select bank0
 10394  04AD  0840               	movf	?_scale+2,w
 10395  04AE  1683               	bsf	3,5	;RP0=1, select bank1
 10396  04AF  1303               	bcf	3,6	;RP1=0, select bank1
 10397  04B0  00AE               	movwf	(_sprintf$1218+2)^(0+128)
 10398  04B1  1283               	bcf	3,5	;RP0=0, select bank0
 10399  04B2  1303               	bcf	3,6	;RP1=0, select bank0
 10400  04B3  083F               	movf	?_scale+1,w
 10401  04B4  1683               	bsf	3,5	;RP0=1, select bank1
 10402  04B5  1303               	bcf	3,6	;RP1=0, select bank1
 10403  04B6  00AD               	movwf	(_sprintf$1218+1)^(0+128)
 10404  04B7  1283               	bcf	3,5	;RP0=0, select bank0
 10405  04B8  1303               	bcf	3,6	;RP1=0, select bank0
 10406  04B9  083E               	movf	?_scale,w
 10407  04BA  1683               	bsf	3,5	;RP0=1, select bank1
 10408  04BB  1303               	bcf	3,6	;RP1=0, select bank1
 10409  04BC  00AC               	movwf	_sprintf$1218^(0+128)
 10410                           
 10411                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10412  04BD  082F               	movf	(_sprintf$1218+3)^(0+128),w
 10413  04BE  1283               	bcf	3,5	;RP0=0, select bank0
 10414  04BF  1303               	bcf	3,6	;RP1=0, select bank0
 10415  04C0  00AB               	movwf	___flmul@a+3
 10416  04C1  1683               	bsf	3,5	;RP0=1, select bank1
 10417  04C2  1303               	bcf	3,6	;RP1=0, select bank1
 10418  04C3  082E               	movf	(_sprintf$1218+2)^(0+128),w
 10419  04C4  1283               	bcf	3,5	;RP0=0, select bank0
 10420  04C5  1303               	bcf	3,6	;RP1=0, select bank0
 10421  04C6  00AA               	movwf	___flmul@a+2
 10422  04C7  1683               	bsf	3,5	;RP0=1, select bank1
 10423  04C8  1303               	bcf	3,6	;RP1=0, select bank1
 10424  04C9  082D               	movf	(_sprintf$1218+1)^(0+128),w
 10425  04CA  1283               	bcf	3,5	;RP0=0, select bank0
 10426  04CB  1303               	bcf	3,6	;RP1=0, select bank0
 10427  04CC  00A9               	movwf	___flmul@a+1
 10428  04CD  1683               	bsf	3,5	;RP0=1, select bank1
 10429  04CE  1303               	bcf	3,6	;RP1=0, select bank1
 10430  04CF  082C               	movf	_sprintf$1218^(0+128),w
 10431  04D0  1283               	bcf	3,5	;RP0=0, select bank0
 10432  04D1  1303               	bcf	3,6	;RP1=0, select bank0
 10433  04D2  00A8               	movwf	___flmul@a
 10434  04D3  1683               	bsf	3,5	;RP0=1, select bank1
 10435  04D4  1303               	bcf	3,6	;RP1=0, select bank1
 10436  04D5  0842               	movf	(sprintf@fval+3)^(0+128),w
 10437  04D6  1283               	bcf	3,5	;RP0=0, select bank0
 10438  04D7  1303               	bcf	3,6	;RP1=0, select bank0
 10439  04D8  00A7               	movwf	___flmul@b+3
 10440  04D9  1683               	bsf	3,5	;RP0=1, select bank1
 10441  04DA  1303               	bcf	3,6	;RP1=0, select bank1
 10442  04DB  0841               	movf	(sprintf@fval+2)^(0+128),w
 10443  04DC  1283               	bcf	3,5	;RP0=0, select bank0
 10444  04DD  1303               	bcf	3,6	;RP1=0, select bank0
 10445  04DE  00A6               	movwf	___flmul@b+2
 10446  04DF  1683               	bsf	3,5	;RP0=1, select bank1
 10447  04E0  1303               	bcf	3,6	;RP1=0, select bank1
 10448  04E1  0840               	movf	(sprintf@fval+1)^(0+128),w
 10449  04E2  1283               	bcf	3,5	;RP0=0, select bank0
 10450  04E3  1303               	bcf	3,6	;RP1=0, select bank0
 10451  04E4  00A5               	movwf	___flmul@b+1
 10452  04E5  1683               	bsf	3,5	;RP0=1, select bank1
 10453  04E6  1303               	bcf	3,6	;RP1=0, select bank1
 10454  04E7  083F               	movf	sprintf@fval^(0+128),w
 10455  04E8  1283               	bcf	3,5	;RP0=0, select bank0
 10456  04E9  1303               	bcf	3,6	;RP1=0, select bank0
 10457  04EA  00A4               	movwf	___flmul@b
 10458  04EB  120A  158A  249F  120A  118A  	fcall	___flmul
 10459  04F0  1283               	bcf	3,5	;RP0=0, select bank0
 10460  04F1  1303               	bcf	3,6	;RP1=0, select bank0
 10461  04F2  0827               	movf	?___flmul+3,w
 10462  04F3  00D4               	movwf	___fltol@f1+3
 10463  04F4  0826               	movf	?___flmul+2,w
 10464  04F5  00D3               	movwf	___fltol@f1+2
 10465  04F6  0825               	movf	?___flmul+1,w
 10466  04F7  00D2               	movwf	___fltol@f1+1
 10467  04F8  0824               	movf	?___flmul,w
 10468  04F9  00D1               	movwf	___fltol@f1
 10469  04FA  120A  158A  2007  120A  118A  	fcall	___fltol
 10470  04FF  1283               	bcf	3,5	;RP0=0, select bank0
 10471  0500  1303               	bcf	3,6	;RP1=0, select bank0
 10472  0501  0854               	movf	?___fltol+3,w
 10473  0502  1683               	bsf	3,5	;RP0=1, select bank1
 10474  0503  1303               	bcf	3,6	;RP1=0, select bank1
 10475  0504  00BC               	movwf	(sprintf@val+3)^(0+128)
 10476  0505  1283               	bcf	3,5	;RP0=0, select bank0
 10477  0506  1303               	bcf	3,6	;RP1=0, select bank0
 10478  0507  0853               	movf	?___fltol+2,w
 10479  0508  1683               	bsf	3,5	;RP0=1, select bank1
 10480  0509  1303               	bcf	3,6	;RP1=0, select bank1
 10481  050A  00BB               	movwf	(sprintf@val+2)^(0+128)
 10482  050B  1283               	bcf	3,5	;RP0=0, select bank0
 10483  050C  1303               	bcf	3,6	;RP1=0, select bank0
 10484  050D  0852               	movf	?___fltol+1,w
 10485  050E  1683               	bsf	3,5	;RP0=1, select bank1
 10486  050F  1303               	bcf	3,6	;RP1=0, select bank1
 10487  0510  00BA               	movwf	(sprintf@val+1)^(0+128)
 10488  0511  1283               	bcf	3,5	;RP0=0, select bank0
 10489  0512  1303               	bcf	3,6	;RP1=0, select bank0
 10490  0513  0851               	movf	?___fltol,w
 10491  0514  1683               	bsf	3,5	;RP0=1, select bank1
 10492  0515  1303               	bcf	3,6	;RP1=0, select bank1
 10493  0516  00B9               	movwf	sprintf@val^(0+128)
 10494                           
 10495                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10496  0517  2DFD               	goto	l3446
 10497  0518                     l3436:
 10498                           
 10499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10500  0518  0845               	movf	sprintf@c^(0+128),w
 10501  0519  00A7               	movwf	??_sprintf^(0+128)
 10502  051A  3001               	movlw	1
 10503  051B                     u5495:
 10504  051B  1003               	clrc
 10505  051C  0DA7               	rlf	??_sprintf^(0+128),f
 10506  051D  3EFF               	addlw	-1
 10507  051E  1D03               	skipz
 10508  051F  2D1B               	goto	u5495
 10509  0520  1003               	clrc
 10510  0521  0D27               	rlf	??_sprintf^(0+128),w
 10511  0522  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10512  0523  0084               	movwf	4
 10513  0524  120A  118A  200D  120A  118A  	fcall	stringdir
 10514  0529  00F0               	movwf	___lldiv@divisor
 10515  052A  120A  118A  200D  120A  118A  	fcall	stringdir
 10516  052F  00F1               	movwf	___lldiv@divisor+1
 10517  0530  120A  118A  200D  120A  118A  	fcall	stringdir
 10518  0535  00F2               	movwf	___lldiv@divisor+2
 10519  0536  120A  118A  200D  120A  118A  	fcall	stringdir
 10520  053B  00F3               	movwf	___lldiv@divisor+3
 10521  053C  083C               	movf	(sprintf@val+3)^(0+128),w
 10522  053D  00F7               	movwf	___lldiv@dividend+3
 10523  053E  083B               	movf	(sprintf@val+2)^(0+128),w
 10524  053F  00F6               	movwf	___lldiv@dividend+2
 10525  0540  083A               	movf	(sprintf@val+1)^(0+128),w
 10526  0541  00F5               	movwf	___lldiv@dividend+1
 10527  0542  0839               	movf	sprintf@val^(0+128),w
 10528  0543  00F4               	movwf	___lldiv@dividend
 10529  0544  160A  158A  2433  120A  118A  	fcall	___lldiv
 10530  0549  0873               	movf	?___lldiv+3,w
 10531  054A  1683               	bsf	3,5	;RP0=1, select bank1
 10532  054B  1303               	bcf	3,6	;RP1=0, select bank1
 10533  054C  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
 10534  054D  0872               	movf	?___lldiv+2,w
 10535  054E  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
 10536  054F  0871               	movf	?___lldiv+1,w
 10537  0550  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
 10538  0551  0870               	movf	?___lldiv,w
 10539  0552  00B5               	movwf	sprintf@tmpval^(0+128)
 10540  0553                     l3438:
 10541                           
 10542                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10543  0553  3000               	movlw	0
 10544  0554  1283               	bcf	3,5	;RP0=0, select bank0
 10545  0555  1303               	bcf	3,6	;RP1=0, select bank0
 10546  0556  00A3               	movwf	___llmod@divisor+3
 10547  0557  3000               	movlw	0
 10548  0558  00A2               	movwf	___llmod@divisor+2
 10549  0559  3000               	movlw	0
 10550  055A  00A1               	movwf	___llmod@divisor+1
 10551  055B  300A               	movlw	10
 10552  055C  00A0               	movwf	___llmod@divisor
 10553  055D  1683               	bsf	3,5	;RP0=1, select bank1
 10554  055E  1303               	bcf	3,6	;RP1=0, select bank1
 10555  055F  0838               	movf	(sprintf@tmpval+3)^(0+128),w
 10556  0560  1283               	bcf	3,5	;RP0=0, select bank0
 10557  0561  1303               	bcf	3,6	;RP1=0, select bank0
 10558  0562  00A7               	movwf	___llmod@dividend+3
 10559  0563  1683               	bsf	3,5	;RP0=1, select bank1
 10560  0564  1303               	bcf	3,6	;RP1=0, select bank1
 10561  0565  0837               	movf	(sprintf@tmpval+2)^(0+128),w
 10562  0566  1283               	bcf	3,5	;RP0=0, select bank0
 10563  0567  1303               	bcf	3,6	;RP1=0, select bank0
 10564  0568  00A6               	movwf	___llmod@dividend+2
 10565  0569  1683               	bsf	3,5	;RP0=1, select bank1
 10566  056A  1303               	bcf	3,6	;RP1=0, select bank1
 10567  056B  0836               	movf	(sprintf@tmpval+1)^(0+128),w
 10568  056C  1283               	bcf	3,5	;RP0=0, select bank0
 10569  056D  1303               	bcf	3,6	;RP1=0, select bank0
 10570  056E  00A5               	movwf	___llmod@dividend+1
 10571  056F  1683               	bsf	3,5	;RP0=1, select bank1
 10572  0570  1303               	bcf	3,6	;RP1=0, select bank1
 10573  0571  0835               	movf	sprintf@tmpval^(0+128),w
 10574  0572  1283               	bcf	3,5	;RP0=0, select bank0
 10575  0573  1303               	bcf	3,6	;RP1=0, select bank0
 10576  0574  00A4               	movwf	___llmod@dividend
 10577  0575  160A  158A  2384  120A  118A  	fcall	___llmod
 10578  057A  1283               	bcf	3,5	;RP0=0, select bank0
 10579  057B  1303               	bcf	3,6	;RP1=0, select bank0
 10580  057C  0823               	movf	?___llmod+3,w
 10581  057D  1683               	bsf	3,5	;RP0=1, select bank1
 10582  057E  1303               	bcf	3,6	;RP1=0, select bank1
 10583  057F  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
 10584  0580  1283               	bcf	3,5	;RP0=0, select bank0
 10585  0581  1303               	bcf	3,6	;RP1=0, select bank0
 10586  0582  0822               	movf	?___llmod+2,w
 10587  0583  1683               	bsf	3,5	;RP0=1, select bank1
 10588  0584  1303               	bcf	3,6	;RP1=0, select bank1
 10589  0585  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
 10590  0586  1283               	bcf	3,5	;RP0=0, select bank0
 10591  0587  1303               	bcf	3,6	;RP1=0, select bank0
 10592  0588  0821               	movf	?___llmod+1,w
 10593  0589  1683               	bsf	3,5	;RP0=1, select bank1
 10594  058A  1303               	bcf	3,6	;RP1=0, select bank1
 10595  058B  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
 10596  058C  1283               	bcf	3,5	;RP0=0, select bank0
 10597  058D  1303               	bcf	3,6	;RP1=0, select bank0
 10598  058E  0820               	movf	?___llmod,w
 10599  058F  1683               	bsf	3,5	;RP0=1, select bank1
 10600  0590  1303               	bcf	3,6	;RP1=0, select bank1
 10601  0591  00B5               	movwf	sprintf@tmpval^(0+128)
 10602  0592                     l3440:
 10603                           
 10604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10605  0592  0835               	movf	sprintf@tmpval^(0+128),w
 10606  0593  3E30               	addlw	48
 10607  0594  00A7               	movwf	??_sprintf^(0+128)
 10608  0595  0820               	movf	sprintf@sp^(0+128),w
 10609  0596  0084               	movwf	4
 10610  0597  1783               	bsf	3,7
 10611  0598  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10612  0599  1383               	bcf	3,7
 10613  059A  0827               	movf	??_sprintf^(0+128),w
 10614  059B  0080               	movwf	0
 10615  059C                     l3442:
 10616  059C  3001               	movlw	1
 10617  059D  07A0               	addwf	sprintf@sp^(0+128),f
 10618  059E  1803               	skipnc
 10619  059F  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 10620  05A0  3000               	movlw	0
 10621  05A1  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 10622  05A2                     l3444:
 10623                           
 10624                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10625  05A2  0845               	movf	sprintf@c^(0+128),w
 10626  05A3  00A7               	movwf	??_sprintf^(0+128)
 10627  05A4  3001               	movlw	1
 10628  05A5                     u5505:
 10629  05A5  1003               	clrc
 10630  05A6  0DA7               	rlf	??_sprintf^(0+128),f
 10631  05A7  3EFF               	addlw	-1
 10632  05A8  1D03               	skipz
 10633  05A9  2DA5               	goto	u5505
 10634  05AA  1003               	clrc
 10635  05AB  0D27               	rlf	??_sprintf^(0+128),w
 10636  05AC  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10637  05AD  0084               	movwf	4
 10638  05AE  120A  118A  200D  120A  118A  	fcall	stringdir
 10639  05B3  1283               	bcf	3,5	;RP0=0, select bank0
 10640  05B4  1303               	bcf	3,6	;RP1=0, select bank0
 10641  05B5  00A0               	movwf	___llmod@divisor
 10642  05B6  120A  118A  200D  120A  118A  	fcall	stringdir
 10643  05BB  00A1               	movwf	___llmod@divisor+1
 10644  05BC  120A  118A  200D  120A  118A  	fcall	stringdir
 10645  05C1  00A2               	movwf	___llmod@divisor+2
 10646  05C2  120A  118A  200D  120A  118A  	fcall	stringdir
 10647  05C7  00A3               	movwf	___llmod@divisor+3
 10648  05C8  1683               	bsf	3,5	;RP0=1, select bank1
 10649  05C9  1303               	bcf	3,6	;RP1=0, select bank1
 10650  05CA  083C               	movf	(sprintf@val+3)^(0+128),w
 10651  05CB  1283               	bcf	3,5	;RP0=0, select bank0
 10652  05CC  1303               	bcf	3,6	;RP1=0, select bank0
 10653  05CD  00A7               	movwf	___llmod@dividend+3
 10654  05CE  1683               	bsf	3,5	;RP0=1, select bank1
 10655  05CF  1303               	bcf	3,6	;RP1=0, select bank1
 10656  05D0  083B               	movf	(sprintf@val+2)^(0+128),w
 10657  05D1  1283               	bcf	3,5	;RP0=0, select bank0
 10658  05D2  1303               	bcf	3,6	;RP1=0, select bank0
 10659  05D3  00A6               	movwf	___llmod@dividend+2
 10660  05D4  1683               	bsf	3,5	;RP0=1, select bank1
 10661  05D5  1303               	bcf	3,6	;RP1=0, select bank1
 10662  05D6  083A               	movf	(sprintf@val+1)^(0+128),w
 10663  05D7  1283               	bcf	3,5	;RP0=0, select bank0
 10664  05D8  1303               	bcf	3,6	;RP1=0, select bank0
 10665  05D9  00A5               	movwf	___llmod@dividend+1
 10666  05DA  1683               	bsf	3,5	;RP0=1, select bank1
 10667  05DB  1303               	bcf	3,6	;RP1=0, select bank1
 10668  05DC  0839               	movf	sprintf@val^(0+128),w
 10669  05DD  1283               	bcf	3,5	;RP0=0, select bank0
 10670  05DE  1303               	bcf	3,6	;RP1=0, select bank0
 10671  05DF  00A4               	movwf	___llmod@dividend
 10672  05E0  160A  158A  2384  120A  118A  	fcall	___llmod
 10673  05E5  1283               	bcf	3,5	;RP0=0, select bank0
 10674  05E6  1303               	bcf	3,6	;RP1=0, select bank0
 10675  05E7  0823               	movf	?___llmod+3,w
 10676  05E8  1683               	bsf	3,5	;RP0=1, select bank1
 10677  05E9  1303               	bcf	3,6	;RP1=0, select bank1
 10678  05EA  00BC               	movwf	(sprintf@val+3)^(0+128)
 10679  05EB  1283               	bcf	3,5	;RP0=0, select bank0
 10680  05EC  1303               	bcf	3,6	;RP1=0, select bank0
 10681  05ED  0822               	movf	?___llmod+2,w
 10682  05EE  1683               	bsf	3,5	;RP0=1, select bank1
 10683  05EF  1303               	bcf	3,6	;RP1=0, select bank1
 10684  05F0  00BB               	movwf	(sprintf@val+2)^(0+128)
 10685  05F1  1283               	bcf	3,5	;RP0=0, select bank0
 10686  05F2  1303               	bcf	3,6	;RP1=0, select bank0
 10687  05F3  0821               	movf	?___llmod+1,w
 10688  05F4  1683               	bsf	3,5	;RP0=1, select bank1
 10689  05F5  1303               	bcf	3,6	;RP1=0, select bank1
 10690  05F6  00BA               	movwf	(sprintf@val+1)^(0+128)
 10691  05F7  1283               	bcf	3,5	;RP0=0, select bank0
 10692  05F8  1303               	bcf	3,6	;RP1=0, select bank0
 10693  05F9  0820               	movf	?___llmod,w
 10694  05FA  1683               	bsf	3,5	;RP0=1, select bank1
 10695  05FB  1303               	bcf	3,6	;RP1=0, select bank1
 10696  05FC  00B9               	movwf	sprintf@val^(0+128)
 10697  05FD                     l3446:
 10698                           
 10699                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10700  05FD  3001               	movlw	1
 10701  05FE  02C5               	subwf	sprintf@c^(0+128),f
 10702  05FF  0A45               	incf	sprintf@c^(0+128),w
 10703  0600  1D03               	btfss	3,2
 10704  0601  2E03               	goto	u5511
 10705  0602  2E04               	goto	u5510
 10706  0603                     u5511:
 10707  0603  2D18               	goto	l3436
 10708  0604                     u5510:
 10709  0604  2E1A               	goto	l3454
 10710  0605                     l3448:
 10711                           
 10712                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 10713  0605  3030               	movlw	48
 10714  0606  00A7               	movwf	??_sprintf^(0+128)
 10715  0607  0820               	movf	sprintf@sp^(0+128),w
 10716  0608  0084               	movwf	4
 10717  0609  1783               	bsf	3,7
 10718  060A  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10719  060B  1383               	bcf	3,7
 10720  060C  0827               	movf	??_sprintf^(0+128),w
 10721  060D  0080               	movwf	0
 10722  060E                     l3450:
 10723  060E  3001               	movlw	1
 10724  060F  07A0               	addwf	sprintf@sp^(0+128),f
 10725  0610  1803               	skipnc
 10726  0611  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 10727  0612  3000               	movlw	0
 10728  0613  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 10729  0614                     l3452:
 10730                           
 10731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 10732  0614  30FF               	movlw	255
 10733  0615  07C3               	addwf	sprintf@prec^(0+128),f
 10734  0616  1803               	skipnc
 10735  0617  0AC4               	incf	(sprintf@prec+1)^(0+128),f
 10736  0618  30FF               	movlw	255
 10737  0619  07C4               	addwf	(sprintf@prec+1)^(0+128),f
 10738  061A                     l3454:
 10739                           
 10740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 10741  061A  0843               	movf	sprintf@prec^(0+128),w
 10742  061B  0444               	iorwf	(sprintf@prec+1)^(0+128),w
 10743  061C  1D03               	btfss	3,2
 10744  061D  2E1F               	goto	u5521
 10745  061E  2E20               	goto	u5520
 10746  061F                     u5521:
 10747  061F  2E05               	goto	l3448
 10748  0620                     u5520:
 10749  0620  2FC8               	goto	l3534
 10750  0621                     l3456:
 10751                           
 10752                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 10753  0621  0830               	movf	sprintf@ap^(0+128),w
 10754  0622  0084               	movwf	4
 10755  0623  1383               	bcf	3,7	;select IRP bank0
 10756  0624  0800               	movf	0,w
 10757  0625  00A7               	movwf	??_sprintf^(0+128)
 10758  0626  0A84               	incf	4,f
 10759  0627  0800               	movf	0,w
 10760  0628  00A8               	movwf	(??_sprintf^(0+128)+1)
 10761  0629  0827               	movf	??_sprintf^(0+128),w
 10762  062A  00B9               	movwf	sprintf@val^(0+128)
 10763  062B  0828               	movf	(??_sprintf+1)^(0+128),w
 10764  062C  00BA               	movwf	(sprintf@val+1)^(0+128)
 10765  062D  3000               	movlw	0
 10766  062E  1BBA               	btfsc	(sprintf@val+1)^(0+128),7
 10767  062F  30FF               	movlw	255
 10768  0630  00BB               	movwf	(sprintf@val+2)^(0+128)
 10769  0631  00BC               	movwf	(sprintf@val+3)^(0+128)
 10770  0632                     l3458:
 10771  0632  3002               	movlw	2
 10772  0633  00A7               	movwf	??_sprintf^(0+128)
 10773  0634  0827               	movf	??_sprintf^(0+128),w
 10774  0635  07B0               	addwf	sprintf@ap^(0+128),f
 10775  0636                     l3460:
 10776                           
 10777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 10778  0636  1FBC               	btfss	(sprintf@val+3)^(0+128),7
 10779  0637  2E39               	goto	u5531
 10780  0638  2E3A               	goto	u5530
 10781  0639                     u5531:
 10782  0639  2E49               	goto	l3466
 10783  063A                     u5530:
 10784  063A                     l3462:
 10785                           
 10786                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 10787  063A  3003               	movlw	3
 10788  063B  04B1               	iorwf	sprintf@flag^(0+128),f
 10789  063C  3000               	movlw	0
 10790  063D  04B2               	iorwf	(sprintf@flag+1)^(0+128),f
 10791  063E                     l3464:
 10792                           
 10793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 10794  063E  09B9               	comf	sprintf@val^(0+128),f
 10795  063F  09BA               	comf	(sprintf@val+1)^(0+128),f
 10796  0640  09BB               	comf	(sprintf@val+2)^(0+128),f
 10797  0641  09BC               	comf	(sprintf@val+3)^(0+128),f
 10798  0642  0AB9               	incf	sprintf@val^(0+128),f
 10799  0643  1903               	skipnz
 10800  0644  0ABA               	incf	(sprintf@val+1)^(0+128),f
 10801  0645  1903               	skipnz
 10802  0646  0ABB               	incf	(sprintf@val+2)^(0+128),f
 10803  0647  1903               	skipnz
 10804  0648  0ABC               	incf	(sprintf@val+3)^(0+128),f
 10805  0649                     l3466:
 10806                           
 10807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 10808  0649  0843               	movf	sprintf@prec^(0+128),w
 10809  064A  0444               	iorwf	(sprintf@prec+1)^(0+128),w
 10810  064B  1D03               	btfss	3,2
 10811  064C  2E4E               	goto	u5541
 10812  064D  2E4F               	goto	u5540
 10813  064E                     u5541:
 10814  064E  2E5D               	goto	l3472
 10815  064F                     u5540:
 10816  064F                     l3468:
 10817  064F  083C               	movf	(sprintf@val+3)^(0+128),w
 10818  0650  043B               	iorwf	(sprintf@val+2)^(0+128),w
 10819  0651  043A               	iorwf	(sprintf@val+1)^(0+128),w
 10820  0652  0439               	iorwf	sprintf@val^(0+128),w
 10821  0653  1D03               	skipz
 10822  0654  2E56               	goto	u5551
 10823  0655  2E57               	goto	u5550
 10824  0656                     u5551:
 10825  0656  2E5D               	goto	l3472
 10826  0657                     u5550:
 10827  0657                     l3470:
 10828                           
 10829                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 10830  0657  3001               	movlw	1
 10831  0658  07C3               	addwf	sprintf@prec^(0+128),f
 10832  0659  1803               	skipnc
 10833  065A  0AC4               	incf	(sprintf@prec+1)^(0+128),f
 10834  065B  3000               	movlw	0
 10835  065C  07C4               	addwf	(sprintf@prec+1)^(0+128),f
 10836  065D                     l3472:
 10837                           
 10838                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 10839  065D  01C5               	clrf	sprintf@c^(0+128)
 10840  065E  0AC5               	incf	sprintf@c^(0+128),f
 10841  065F                     l3478:
 10842                           
 10843                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 10844  065F  0845               	movf	sprintf@c^(0+128),w
 10845  0660  00A7               	movwf	??_sprintf^(0+128)
 10846  0661  3001               	movlw	1
 10847  0662                     u5565:
 10848  0662  1003               	clrc
 10849  0663  0DA7               	rlf	??_sprintf^(0+128),f
 10850  0664  3EFF               	addlw	-1
 10851  0665  1D03               	skipz
 10852  0666  2E62               	goto	u5565
 10853  0667  1003               	clrc
 10854  0668  0D27               	rlf	??_sprintf^(0+128),w
 10855  0669  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10856  066A  0084               	movwf	4
 10857  066B  120A  118A  200D  120A  118A  	fcall	stringdir
 10858  0670  00A8               	movwf	(??_sprintf+1)^(0+128)
 10859  0671  120A  118A  200D  120A  118A  	fcall	stringdir
 10860  0676  00A9               	movwf	((??_sprintf+1)^(0+128)+1)
 10861  0677  120A  118A  200D  120A  118A  	fcall	stringdir
 10862  067C  00AA               	movwf	((??_sprintf+1)^(0+128)+2)
 10863  067D  120A  118A  200D  120A  118A  	fcall	stringdir
 10864  0682  00AB               	movwf	((??_sprintf+1)^(0+128)+3)
 10865  0683  082B               	movf	(??_sprintf+4)^(0+128),w
 10866  0684  023C               	subwf	(sprintf@val+3)^(0+128),w
 10867  0685  1D03               	skipz
 10868  0686  2E91               	goto	u5575
 10869  0687  082A               	movf	(??_sprintf+3)^(0+128),w
 10870  0688  023B               	subwf	(sprintf@val+2)^(0+128),w
 10871  0689  1D03               	skipz
 10872  068A  2E91               	goto	u5575
 10873  068B  0829               	movf	(??_sprintf+2)^(0+128),w
 10874  068C  023A               	subwf	(sprintf@val+1)^(0+128),w
 10875  068D  1D03               	skipz
 10876  068E  2E91               	goto	u5575
 10877  068F  0828               	movf	(??_sprintf+1)^(0+128),w
 10878  0690  0239               	subwf	sprintf@val^(0+128),w
 10879  0691                     u5575:
 10880  0691  1803               	skipnc
 10881  0692  2E94               	goto	u5571
 10882  0693  2E95               	goto	u5570
 10883  0694                     u5571:
 10884  0694  2E96               	goto	l3482
 10885  0695                     u5570:
 10886  0695  2EA0               	goto	l3484
 10887  0696                     l3482:
 10888  0696  3001               	movlw	1
 10889  0697  00A7               	movwf	??_sprintf^(0+128)
 10890  0698  0827               	movf	??_sprintf^(0+128),w
 10891  0699  07C5               	addwf	sprintf@c^(0+128),f
 10892  069A  300A               	movlw	10
 10893  069B  0645               	xorwf	sprintf@c^(0+128),w
 10894  069C  1D03               	btfss	3,2
 10895  069D  2E9F               	goto	u5581
 10896  069E  2EA0               	goto	u5580
 10897  069F                     u5581:
 10898  069F  2E5F               	goto	l3478
 10899  06A0                     u5580:
 10900  06A0                     l3484:
 10901                           
 10902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 10903  06A0  0844               	movf	(sprintf@prec+1)^(0+128),w
 10904  06A1  3A80               	xorlw	128
 10905  06A2  3C80               	sublw	128
 10906  06A3  1D03               	skipz
 10907  06A4  2EA7               	goto	u5595
 10908  06A5  0843               	movf	sprintf@prec^(0+128),w
 10909  06A6  0245               	subwf	sprintf@c^(0+128),w
 10910  06A7                     u5595:
 10911  06A7  1803               	skipnc
 10912  06A8  2EAA               	goto	u5591
 10913  06A9  2EAB               	goto	u5590
 10914  06AA                     u5591:
 10915  06AA  2EB2               	goto	l3488
 10916  06AB                     u5590:
 10917  06AB                     l3486:
 10918                           
 10919                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 10920  06AB  1683               	bsf	3,5	;RP0=1, select bank1
 10921  06AC  1303               	bcf	3,6	;RP1=0, select bank1
 10922  06AD  0843               	movf	sprintf@prec^(0+128),w
 10923  06AE  00A7               	movwf	??_sprintf^(0+128)
 10924  06AF  0827               	movf	??_sprintf^(0+128),w
 10925  06B0  00C5               	movwf	sprintf@c^(0+128)
 10926  06B1  2ECA               	goto	l3492
 10927  06B2                     l3488:
 10928  06B2  1683               	bsf	3,5	;RP0=1, select bank1
 10929  06B3  1303               	bcf	3,6	;RP1=0, select bank1
 10930  06B4  0844               	movf	(sprintf@prec+1)^(0+128),w
 10931  06B5  3A80               	xorlw	128
 10932  06B6  00A7               	movwf	??_sprintf^(0+128)
 10933  06B7  3080               	movlw	128
 10934  06B8  0227               	subwf	??_sprintf^(0+128),w
 10935  06B9  1D03               	skipz
 10936  06BA  2EBD               	goto	u5605
 10937  06BB  0845               	movf	sprintf@c^(0+128),w
 10938  06BC  0243               	subwf	sprintf@prec^(0+128),w
 10939  06BD                     u5605:
 10940  06BD  1803               	skipnc
 10941  06BE  2EC0               	goto	u5601
 10942  06BF  2EC1               	goto	u5600
 10943  06C0                     u5601:
 10944  06C0  2ECA               	goto	l3492
 10945  06C1                     u5600:
 10946  06C1                     l3490:
 10947                           
 10948                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 10949  06C1  1683               	bsf	3,5	;RP0=1, select bank1
 10950  06C2  1303               	bcf	3,6	;RP1=0, select bank1
 10951  06C3  0845               	movf	sprintf@c^(0+128),w
 10952  06C4  00A7               	movwf	??_sprintf^(0+128)
 10953  06C5  01A8               	clrf	(??_sprintf^(0+128)+1)
 10954  06C6  0827               	movf	??_sprintf^(0+128),w
 10955  06C7  00C3               	movwf	sprintf@prec^(0+128)
 10956  06C8  0828               	movf	(??_sprintf+1)^(0+128),w
 10957  06C9  00C4               	movwf	(sprintf@prec+1)^(0+128)
 10958  06CA                     l3492:
 10959                           
 10960                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 10961  06CA  1683               	bsf	3,5	;RP0=1, select bank1
 10962  06CB  1303               	bcf	3,6	;RP1=0, select bank1
 10963  06CC  0833               	movf	sprintf@width^(0+128),w
 10964  06CD  0434               	iorwf	(sprintf@width+1)^(0+128),w
 10965  06CE  1903               	btfsc	3,2
 10966  06CF  2ED1               	goto	u5611
 10967  06D0  2ED2               	goto	u5610
 10968  06D1                     u5611:
 10969  06D1  2EE4               	goto	l3498
 10970  06D2                     u5610:
 10971  06D2                     l3494:
 10972  06D2  3003               	movlw	3
 10973  06D3  0531               	andwf	sprintf@flag^(0+128),w
 10974  06D4  00A7               	movwf	??_sprintf^(0+128)
 10975  06D5  3000               	movlw	0
 10976  06D6  0532               	andwf	(sprintf@flag+1)^(0+128),w
 10977  06D7  00A8               	movwf	(??_sprintf+1)^(0+128)
 10978  06D8  0827               	movf	??_sprintf^(0+128),w
 10979  06D9  0428               	iorwf	(??_sprintf^(0+128)+1),w
 10980  06DA  1903               	btfsc	3,2
 10981  06DB  2EDD               	goto	u5621
 10982  06DC  2EDE               	goto	u5620
 10983  06DD                     u5621:
 10984  06DD  2EE4               	goto	l3498
 10985  06DE                     u5620:
 10986  06DE                     l3496:
 10987                           
 10988                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 10989  06DE  30FF               	movlw	255
 10990  06DF  07B3               	addwf	sprintf@width^(0+128),f
 10991  06E0  1803               	skipnc
 10992  06E1  0AB4               	incf	(sprintf@width+1)^(0+128),f
 10993  06E2  30FF               	movlw	255
 10994  06E3  07B4               	addwf	(sprintf@width+1)^(0+128),f
 10995  06E4                     l3498:
 10996                           
 10997                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 10998  06E4  1F32               	btfss	(sprintf@flag+1)^(0+128),6
 10999  06E5  2EE7               	goto	u5631
 11000  06E6  2EE8               	goto	u5630
 11001  06E7                     u5631:
 11002  06E7  2F03               	goto	l3506
 11003  06E8                     u5630:
 11004  06E8                     l3500:
 11005                           
 11006                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11007  06E8  0844               	movf	(sprintf@prec+1)^(0+128),w
 11008  06E9  3A80               	xorlw	128
 11009  06EA  00A7               	movwf	??_sprintf^(0+128)
 11010  06EB  0834               	movf	(sprintf@width+1)^(0+128),w
 11011  06EC  3A80               	xorlw	128
 11012  06ED  0227               	subwf	??_sprintf^(0+128),w
 11013  06EE  1D03               	skipz
 11014  06EF  2EF2               	goto	u5645
 11015  06F0  0833               	movf	sprintf@width^(0+128),w
 11016  06F1  0243               	subwf	sprintf@prec^(0+128),w
 11017  06F2                     u5645:
 11018  06F2  1803               	skipnc
 11019  06F3  2EF5               	goto	u5641
 11020  06F4  2EF6               	goto	u5640
 11021  06F5                     u5641:
 11022  06F5  2EFF               	goto	l3504
 11023  06F6                     u5640:
 11024  06F6                     l3502:
 11025                           
 11026                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11027  06F6  1683               	bsf	3,5	;RP0=1, select bank1
 11028  06F7  1303               	bcf	3,6	;RP1=0, select bank1
 11029  06F8  0843               	movf	sprintf@prec^(0+128),w
 11030  06F9  02B3               	subwf	sprintf@width^(0+128),f
 11031  06FA  0844               	movf	(sprintf@prec+1)^(0+128),w
 11032  06FB  1C03               	skipc
 11033  06FC  03B4               	decf	(sprintf@width+1)^(0+128),f
 11034  06FD  02B4               	subwf	(sprintf@width+1)^(0+128),f
 11035  06FE  2F03               	goto	l3506
 11036  06FF                     l3504:
 11037                           
 11038                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11039  06FF  1683               	bsf	3,5	;RP0=1, select bank1
 11040  0700  1303               	bcf	3,6	;RP1=0, select bank1
 11041  0701  01B3               	clrf	sprintf@width^(0+128)
 11042  0702  01B4               	clrf	(sprintf@width+1)^(0+128)
 11043  0703                     l3506:
 11044                           
 11045                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11046  0703  0834               	movf	(sprintf@width+1)^(0+128),w
 11047  0704  3A80               	xorlw	128
 11048  0705  3C80               	sublw	128
 11049  0706  1D03               	skipz
 11050  0707  2F0A               	goto	u5655
 11051  0708  0833               	movf	sprintf@width^(0+128),w
 11052  0709  0245               	subwf	sprintf@c^(0+128),w
 11053  070A                     u5655:
 11054  070A  1803               	skipnc
 11055  070B  2F0D               	goto	u5651
 11056  070C  2F0E               	goto	u5650
 11057  070D                     u5651:
 11058  070D  2F1A               	goto	l3510
 11059  070E                     u5650:
 11060  070E                     l3508:
 11061                           
 11062                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11063  070E  1683               	bsf	3,5	;RP0=1, select bank1
 11064  070F  1303               	bcf	3,6	;RP1=0, select bank1
 11065  0710  0845               	movf	sprintf@c^(0+128),w
 11066  0711  00A7               	movwf	??_sprintf^(0+128)
 11067  0712  01A8               	clrf	(??_sprintf^(0+128)+1)
 11068  0713  0827               	movf	??_sprintf^(0+128),w
 11069  0714  02B3               	subwf	sprintf@width^(0+128),f
 11070  0715  0828               	movf	(??_sprintf+1)^(0+128),w
 11071  0716  1C03               	skipc
 11072  0717  03B4               	decf	(sprintf@width+1)^(0+128),f
 11073  0718  02B4               	subwf	(sprintf@width+1)^(0+128),f
 11074  0719  2F1E               	goto	l3512
 11075  071A                     l3510:
 11076                           
 11077                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11078  071A  1683               	bsf	3,5	;RP0=1, select bank1
 11079  071B  1303               	bcf	3,6	;RP1=0, select bank1
 11080  071C  01B3               	clrf	sprintf@width^(0+128)
 11081  071D  01B4               	clrf	(sprintf@width+1)^(0+128)
 11082  071E                     l3512:
 11083                           
 11084                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11085  071E  0833               	movf	sprintf@width^(0+128),w
 11086  071F  0434               	iorwf	(sprintf@width+1)^(0+128),w
 11087  0720  1903               	btfsc	3,2
 11088  0721  2F23               	goto	u5661
 11089  0722  2F24               	goto	u5660
 11090  0723                     u5661:
 11091  0723  2F3F               	goto	l3520
 11092  0724                     u5660:
 11093  0724                     l3514:
 11094                           
 11095                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11096  0724  3020               	movlw	32
 11097  0725  00A7               	movwf	??_sprintf^(0+128)
 11098  0726  0820               	movf	sprintf@sp^(0+128),w
 11099  0727  0084               	movwf	4
 11100  0728  1783               	bsf	3,7
 11101  0729  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 11102  072A  1383               	bcf	3,7
 11103  072B  0827               	movf	??_sprintf^(0+128),w
 11104  072C  0080               	movwf	0
 11105  072D                     l3516:
 11106  072D  3001               	movlw	1
 11107  072E  07A0               	addwf	sprintf@sp^(0+128),f
 11108  072F  1803               	skipnc
 11109  0730  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 11110  0731  3000               	movlw	0
 11111  0732  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 11112  0733                     l3518:
 11113  0733  30FF               	movlw	255
 11114  0734  07B3               	addwf	sprintf@width^(0+128),f
 11115  0735  1803               	skipnc
 11116  0736  0AB4               	incf	(sprintf@width+1)^(0+128),f
 11117  0737  30FF               	movlw	255
 11118  0738  07B4               	addwf	(sprintf@width+1)^(0+128),f
 11119  0739  0833               	movf	sprintf@width^(0+128),w
 11120  073A  0434               	iorwf	(sprintf@width+1)^(0+128),w
 11121  073B  1D03               	btfss	3,2
 11122  073C  2F3E               	goto	u5671
 11123  073D  2F3F               	goto	u5670
 11124  073E                     u5671:
 11125  073E  2F24               	goto	l3514
 11126  073F                     u5670:
 11127  073F                     l3520:
 11128                           
 11129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11130  073F  3003               	movlw	3
 11131  0740  0531               	andwf	sprintf@flag^(0+128),w
 11132  0741  00A7               	movwf	??_sprintf^(0+128)
 11133  0742  3000               	movlw	0
 11134  0743  0532               	andwf	(sprintf@flag+1)^(0+128),w
 11135  0744  00A8               	movwf	(??_sprintf+1)^(0+128)
 11136  0745  0827               	movf	??_sprintf^(0+128),w
 11137  0746  0428               	iorwf	(??_sprintf^(0+128)+1),w
 11138  0747  1903               	btfsc	3,2
 11139  0748  2F4A               	goto	u5681
 11140  0749  2F4B               	goto	u5680
 11141  074A                     u5681:
 11142  074A  2FBA               	goto	l3532
 11143  074B                     u5680:
 11144  074B                     l3522:
 11145                           
 11146                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11147  074B  302D               	movlw	45
 11148  074C  00A7               	movwf	??_sprintf^(0+128)
 11149  074D  0820               	movf	sprintf@sp^(0+128),w
 11150  074E  0084               	movwf	4
 11151  074F  1783               	bsf	3,7
 11152  0750  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 11153  0751  1383               	bcf	3,7
 11154  0752  0827               	movf	??_sprintf^(0+128),w
 11155  0753  0080               	movwf	0
 11156  0754                     l3524:
 11157  0754  3001               	movlw	1
 11158  0755  07A0               	addwf	sprintf@sp^(0+128),f
 11159  0756  1803               	skipnc
 11160  0757  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 11161  0758  3000               	movlw	0
 11162  0759  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 11163  075A  2FBA               	goto	l3532
 11164  075B                     l3526:
 11165                           
 11166                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 11167  075B  3000               	movlw	0
 11168  075C  1283               	bcf	3,5	;RP0=0, select bank0
 11169  075D  1303               	bcf	3,6	;RP1=0, select bank0
 11170  075E  00A3               	movwf	___llmod@divisor+3
 11171  075F  3000               	movlw	0
 11172  0760  00A2               	movwf	___llmod@divisor+2
 11173  0761  3000               	movlw	0
 11174  0762  00A1               	movwf	___llmod@divisor+1
 11175  0763  300A               	movlw	10
 11176  0764  00A0               	movwf	___llmod@divisor
 11177  0765  1683               	bsf	3,5	;RP0=1, select bank1
 11178  0766  1303               	bcf	3,6	;RP1=0, select bank1
 11179  0767  0843               	movf	sprintf@prec^(0+128),w
 11180  0768  00A7               	movwf	??_sprintf^(0+128)
 11181  0769  3001               	movlw	1
 11182  076A                     u5695:
 11183  076A  1003               	clrc
 11184  076B  0DA7               	rlf	??_sprintf^(0+128),f
 11185  076C  3EFF               	addlw	-1
 11186  076D  1D03               	skipz
 11187  076E  2F6A               	goto	u5695
 11188  076F  1003               	clrc
 11189  0770  0D27               	rlf	??_sprintf^(0+128),w
 11190  0771  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11191  0772  0084               	movwf	4
 11192  0773  120A  118A  200D  120A  118A  	fcall	stringdir
 11193  0778  00F0               	movwf	___lldiv@divisor
 11194  0779  120A  118A  200D  120A  118A  	fcall	stringdir
 11195  077E  00F1               	movwf	___lldiv@divisor+1
 11196  077F  120A  118A  200D  120A  118A  	fcall	stringdir
 11197  0784  00F2               	movwf	___lldiv@divisor+2
 11198  0785  120A  118A  200D  120A  118A  	fcall	stringdir
 11199  078A  00F3               	movwf	___lldiv@divisor+3
 11200  078B  083C               	movf	(sprintf@val+3)^(0+128),w
 11201  078C  00F7               	movwf	___lldiv@dividend+3
 11202  078D  083B               	movf	(sprintf@val+2)^(0+128),w
 11203  078E  00F6               	movwf	___lldiv@dividend+2
 11204  078F  083A               	movf	(sprintf@val+1)^(0+128),w
 11205  0790  00F5               	movwf	___lldiv@dividend+1
 11206  0791  0839               	movf	sprintf@val^(0+128),w
 11207  0792  00F4               	movwf	___lldiv@dividend
 11208  0793  160A  158A  2433  120A  118A  	fcall	___lldiv
 11209  0798  0873               	movf	?___lldiv+3,w
 11210  0799  1283               	bcf	3,5	;RP0=0, select bank0
 11211  079A  1303               	bcf	3,6	;RP1=0, select bank0
 11212  079B  00A7               	movwf	___llmod@dividend+3
 11213  079C  0872               	movf	?___lldiv+2,w
 11214  079D  00A6               	movwf	___llmod@dividend+2
 11215  079E  0871               	movf	?___lldiv+1,w
 11216  079F  00A5               	movwf	___llmod@dividend+1
 11217  07A0  0870               	movf	?___lldiv,w
 11218  07A1  00A4               	movwf	___llmod@dividend
 11219  07A2  160A  158A  2384  120A  118A  	fcall	___llmod
 11220  07A7  1283               	bcf	3,5	;RP0=0, select bank0
 11221  07A8  1303               	bcf	3,6	;RP1=0, select bank0
 11222  07A9  0820               	movf	?___llmod,w
 11223  07AA  3E30               	addlw	48
 11224  07AB  1683               	bsf	3,5	;RP0=1, select bank1
 11225  07AC  1303               	bcf	3,6	;RP1=0, select bank1
 11226  07AD  00A8               	movwf	(??_sprintf+1)^(0+128)
 11227  07AE  0828               	movf	(??_sprintf+1)^(0+128),w
 11228  07AF  00C5               	movwf	sprintf@c^(0+128)
 11229  07B0                     l3528:
 11230                           
 11231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 11232  07B0  0845               	movf	sprintf@c^(0+128),w
 11233  07B1  00A7               	movwf	??_sprintf^(0+128)
 11234  07B2  0820               	movf	sprintf@sp^(0+128),w
 11235  07B3  0084               	movwf	4
 11236  07B4  1783               	bsf	3,7
 11237  07B5  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 11238  07B6  1383               	bcf	3,7
 11239  07B7  0827               	movf	??_sprintf^(0+128),w
 11240  07B8  0080               	movwf	0
 11241  07B9  2F54               	goto	l3524
 11242  07BA                     l3532:
 11243                           
 11244                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11245  07BA  30FF               	movlw	255
 11246  07BB  07C3               	addwf	sprintf@prec^(0+128),f
 11247  07BC  1803               	skipnc
 11248  07BD  0AC4               	incf	(sprintf@prec+1)^(0+128),f
 11249  07BE  30FF               	movlw	255
 11250  07BF  07C4               	addwf	(sprintf@prec+1)^(0+128),f
 11251  07C0  0A43               	incf	sprintf@prec^(0+128),w
 11252  07C1  1D03               	skipz
 11253  07C2  2FC7               	goto	u5701
 11254  07C3  0A44               	incf	(sprintf@prec+1)^(0+128),w
 11255  07C4  1D03               	btfss	3,2
 11256  07C5  2FC7               	goto	u5701
 11257  07C6  2FC8               	goto	u5700
 11258  07C7                     u5701:
 11259  07C7  2F5B               	goto	l3526
 11260  07C8                     u5700:
 11261  07C8                     l3534:
 11262                           
 11263                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11264  07C8  3001               	movlw	1
 11265  07C9  07A2               	addwf	sprintf@f^(0+128),f
 11266  07CA  30FF               	movlw	-1
 11267  07CB  0722               	addwf	sprintf@f^(0+128),w
 11268  07CC  0084               	movwf	4
 11269  07CD  120A  118A  200D  120A  118A  	fcall	stringdir
 11270  07D2  00A7               	movwf	??_sprintf^(0+128)
 11271  07D3  0827               	movf	??_sprintf^(0+128),w
 11272  07D4  00C5               	movwf	sprintf@c^(0+128)
 11273  07D5  0845               	movf	sprintf@c^(0+128),w
 11274  07D6  1D03               	btfss	3,2
 11275  07D7  2FD9               	goto	u5711
 11276  07D8  2FDC               	goto	u5710
 11277  07D9                     u5711:
 11278  07D9  160A  118A  2D44   	goto	l3250
 11279  07DC                     u5710:
 11280  07DC                     l3536:
 11281                           
 11282                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11283  07DC  0820               	movf	sprintf@sp^(0+128),w
 11284  07DD  0084               	movwf	4
 11285  07DE  1783               	bsf	3,7
 11286  07DF  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 11287  07E0  1383               	bcf	3,7
 11288  07E1  0180               	clrf	0
 11289  07E2                     l385:
 11290  07E2  0008               	return
 11291  07E3                     __end_of_sprintf:

Data Sizes:
    Strings     34
    Constant    144
    Data        1
    BSS         77
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     42      78
    BANK3            96      0      40
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_4(CODE[7]), STR_3(CODE[3]), STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> l(BANK3[20]), c(BANK3[20]), s(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> l(BANK3[20]), c(BANK3[20]), s(BANK1[20]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   39746
                                             38 BANK1      4     4      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___flmul
                           ___xxtofl
                              _setup
                            _spiInit
                            _spiRead
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    36      7   33033
                                              0 BANK1     38    31      7
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     438
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     482
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _setup
   _spiInit
   _spiRead
     _spiReceiveWait
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      28       9       41.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     2A      4E       7       97.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D4      12        0.0%
ABS                  0      0      D4       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 20 19:33:14 2021

                        l9 196A                          _c 0190                          _l 01A4  
                        _n 00CA                          _p 00CE                          _s 00D8  
                        _x 00D2                          pc 0002                _SSPSTATbits 0094  
                       l12 19D1                         l21 1A10                         l15 00D4  
                       l24 1AAF                         l33 1AF1                         l27 19EC  
             ___awdiv@sign 0021                         fsr 0004        ___wmul@multiplicand 0072  
      __Umul8_16@word_mpld 0076                        l100 19A1                        l105 10B4  
                      l170 0800                        l315 1605                        l173 0806  
                      l166 19B2                        l167 19B7                        l184 197B  
                      l425 1C98                        l602 0882                        l610 0902  
                      l355 0482                        l293 0C9E                        l606 093F  
                      l286 1FFF                        l542 109B                        l391 1032  
                      l607 08B1                        l720 13BD                        l560 011E  
                      l617 0932                        l705 1A6E                        l385 07E2  
                      l722 1394                        l570 01AC                        l563 017C  
                      l555 1C32                        l580 1CB5                        l716 1316  
                      l812 0FFF                        l741 14AC                        l645 1BD9  
                      l389 101A                        l750 150C                        l575 1B52  
                      l583 1D21                        l559 01B9                        l831 00E9  
                      l576 1B6E                        l584 1D3A                        l592 0882  
                      l824 0FF3                        l577 1B83                        l737 1488  
                      l729 153A                        l833 00FB                        l762 1A34  
                      l818 0F6B                        l747 14CE                        l588 100D  
                      l758 152E                        l870 1DCA                        l862 1DA2  
                      l759 153A                        l599 086D                        l695 1B35  
                      l856 1D5D                        l858 1DF4                        l876 198D  
                      l869 1DBE                        _adc 00D7                        _lmm 00ED  
                      fsr0 0004                        indf 0000               ___awmod@sign 0076  
             ___flmul@aexp 0036               ___flmul@bexp 0037               ___flmul@sign 0031  
             ___flmul@temp 003C               ___flmul@prod 0038               ___fltol@exp1 005B  
                     l3010 1010                       l3002 01A1                       l3100 083D  
                     l3012 1014                       l3004 01B1                       l3102 0841  
                     l3110 085B                       l3030 1C57                       l3022 1C33  
                     l3014 1021                       l3200 19FF                       l3120 0877  
                     l3040 1C8A                       l3032 1C60                       l3024 1C43  
                     l3016 1028                       l3008 100E                       l2400 1BEA  
                     l3210 1A7E                       l3202 1A05                       l3050 1B66  
                     l3034 1C72                       l3026 1C46                       l3042 1C90  
                     l3130 1BA2                       l3122 1B84                       l3018 102E  
                     l2330 00D6                       l2410 1C03                       l2402 1BEF  
                     l3212 1A8D                       l3204 1A0A                       l3220 1ACF  
                     l3052 1B80                       l3060 1CAD                       l2500 12ED  
                     l3116 0862                       l3108 0849                       l3036 1C80  
                     l3028 1C53                       l3132 1BB4                       l3124 1B8E  
                     l2340 00F7                       l2332 00D8                       l2412 1C07  
                     l2404 1BF5                       l2420 1C24                       l3300 163F  
                     l3214 1A93                       l3206 1A6F                       l3222 1AD5  
                     l3230 1994                       l3054 1B82                       l3046 1B36  
                     l3070 1CFD                       l3062 1CC9                       l2510 12FE  
                     l2502 12EE                       l3142 1A11                       l3118 0872  
                     l3038 1C81                       l3134 1BC2                       l3126 1B91  
                     l3150 1D41                       l2334 00DF                       l2430 1AF4  
                     l2350 103A                       l2422 1C29                       l2414 1C11  
                     l2406 1BF8                       l3310 1687                       l3302 164D  
                     l2344 1966                       l3208 1A75                       l3216 1AB0  
                     l3232 1995                       l3224 198E                       l3240 19AA  
                     l3048 1B4A                       l3072 1D37                       l3064 1CD1  
                     l3080 100B                       l2600 1422                       l2520 131C  
                     l2512 1303                       l2504 12F4                       l3144 1A15  
                     l3136 1BCB                       l3128 1B9E                       l3160 1D6E  
                     l3152 1D45                       l2336 00E3                       l2440 1B0C  
                     l2432 1AFA                       l2360 104E                       l2352 103F  
                     l2424 1C2E                       l2416 1C17                       l2408 1BFF  
                     l3400 03A5                       l3320 16C8                       l3312 168B  
                     l3304 1651                       l3218 1AB3                       l3234 199F  
                     l3226 1991                       l3242 19AC                       l3074 1D39  
                     l3066 1CD5                       l3058 1C99                       l3082 100D  
                     l2610 1490                       l2602 1460                       l2530 1330  
                     l2522 1320                       l2514 130B                       l2506 12F8  
                     l3138 1BD1                       l3170 1D99                       l3162 1D73  
                     l3154 1D55                       l2338 00F2                       l2442 1B1D  
                     l2434 1AFD                       l2450 1B31                       l2370 1064  
                     l2362 1050                       l2354 1041                       l2346 1033  
                     l2418 1C1E                       l3402 03AE                       l3330 174F  
                     l3322 16DB                       l3314 16A4                       l3306 166A  
                     l3250 1544                       l3236 19A0                       l3228 1993  
                     l3244 19AE                       l3068 1CF9                       l2620 14AB  
                     l2612 1495                       l2604 1466                       l2540 1344  
                     l2532 1334                       l2524 1324                       l2516 130C  
                     l2508 12F9                       l3092 081D                       l3180 1DCC  
                     l3172 1DA9                       l3164 1D80                       l3156 1D65  
                     l3148 1D3C                       l2700 0CE7                       l2444 1B23  
                     l2436 1B04                       l2428 1AF2                       l2460 1A45  
                     l2380 1087                       l2372 1068                       l2364 1056  
                     l2356 1045                       l2348 1036                       l3500 06E8  
                     l3420 0459                       l3404 03B5                       l3412 043A  
                     l3340 17A3                       l3332 1768                       l3324 16DF  
                     l3316 16AF                       l3308 1683                       l3260 156E  
                     l3252 154A                       l3246 19B1                       l3238 19A3  
                     l3078 1003                       l2622 14B0                       l2630 14BC  
                     l2606 146B                       l2550 1358                       l2542 1348  
                     l2534 1338                       l2526 1328                       l2518 130E  
                     l3094 0832                       l3086 0807                       l3182 1DE2  
                     l3174 1DB4                       l3166 1D87                       l2710 0D03  
                     l2702 0CEF                       l2446 1B24                       l2438 1B08  
                     l2470 1A64                       l2462 1A49                       l2454 1A35  
                     l2374 1079                       l2366 1059                       l2382 108D  
                     l2358 104A                       l2390 1BDA                       l3510 071A  
                     l3502 06F6                       l3430 0490                       l3422 0466  
                     l3414 0442                       l3406 03F0                       l3350 020B  
                     l3342 17EA                       l3334 1771                       l3326 16E5  
                     l3318 16B5                       l3262 1572                       l3270 15AE  
                     l3254 1553                       l3192 00C8                       l2624 14B3  
                     l2616 149E                       l2608 147A                       l2632 14C0  
                     l2560 1398                       l2552 135C                       l2544 134C  
                     l2536 133C                       l2528 132C                       l2480 12C0  
                     l3096 0833                       l3088 0814                       l3184 1DE7  
                     l3176 1DB8                       l3168 1D8B                       l2800 0FE7  
                     l2720 0D46                       l2704 0CF1                       l2448 1B2B  
                     l2464 1A4D                       l2456 1A3B                       l2472 1A6A  
                     l2384 1092                       l2376 107F                       l2368 1060  
                     l2392 1BDB                       l3520 073F                       l3512 071E  
                     l3504 06FF                       l3440 0592                       l3432 0499  
                     l3424 0475                       l3416 044D                       l3408 042F  
                     l3352 0226                       l3344 01BA                       l3336 178C  
                     l3328 1704                       l3280 15D9                       l3272 15BC  
                     l3264 1587                       l3256 155A                       l3248 153B  
                     l3600 1244                       l2810 19B9                       l3194 19EE  
                     l2650 1508                       l2642 14D3                       l2634 14C1  
                     l2626 14B5                       l2618 14A7                       l2570 13B1  
                     l2562 13A1                       l2546 1350                       l2538 1340  
                     l2554 1360                       l2490 12D7                       l2482 12C4  
                     l3098 083B                       l3186 1DEB                       l3178 1DC2  
                     l2802 0FEB                       l2730 0DCF                       l2722 0D62  
                     l2714 0D0C                       l2706 0CF9                       l2466 1A57  
                     l2458 1A3E                       l2386 1097                       l2378 1080  
                     l2394 1BDF                       l3522 074B                       l3514 0724  
                     l3506 0703                       l3450 060E                       l3442 059C  
                     l3434 049F                       l3426 047C                       l3418 0453  
                     l3370 0301                       l3362 0274                       l3354 022F  
                     l3346 01D5                       l3338 1794                       l3282 15EC  
                     l3274 15BD                       l3266 159A                       l3258 155E  
                     l3610 126D                       l3602 1247                       l2812 19BC  
                     l3196 19F3                       l2820 19D3                       l2660 1524  
                     l2652 1511                       l2644 14D8                       l2636 14C5  
                     l2628 14BA                       l2580 13CF                       l2564 13A3  
                     l2572 13B5                       l2556 1361                       l2548 1354  
                     l2492 12D8                       l2484 12C5                       l2476 12B3  
                     l3188 1DEC                       l2804 0FEC                       l2740 0E42  
                     l2732 0DDF                       l2724 0D8E                       l2716 0D1C  
                     l2708 0CFE                       l2468 1A5D                       l2900 198C  
                     l2396 1BE4                       l3524 0754                       l3532 07BA  
                     l3516 072D                       l3508 070E                       l3460 0636  
                     l3452 0614                       l3444 05A2                       l3436 0518  
                     l3428 048B                       l3380 033A                       l3356 0237  
                     l3348 01FC                       l3364 027D                       l3292 1607  
                     l3284 15F0                       l3276 15C1                       l3268 159E  
                     l3620 1293                       l3612 1278                       l3604 1251  
                     l2814 19C2                       l3198 19F8                       l2830 19E7  
                     l2822 19D6                       l2662 1528                       l2654 1516  
                     l2646 14E6                       l2638 14CB                       l2590 13F9  
                     l2582 13E6                       l2574 13C1                       l2566 13A7  
                     l2558 1378                       l2486 12CA                       l2494 12DA  
                     l2478 12BA                       l2910 089F                       l2806 0FF7  
                     l2750 0EEF                       l2742 0E5F                       l2734 0DFC  
                     l2726 0DAA                       l2718 0D29                       l2670 0C9F  
                     l2398 1BE6                       l3526 075B                       l3518 0733  
                     l3470 0657                       l3462 063A                       l3454 061A  
                     l3438 0553                       l3446 05FD                       l3390 0378  
                     l3382 0344                       l3366 02B2                       l3358 0255  
                     l3294 1629                       l3278 15C4                       l3286 1601  
                     l3534 07C8                       l3622 129D                       l3614 127B  
                     l3606 125B                       l3550 109C                       l2816 19C5  
                     l2824 19DC                       l2832 0800                       l3544 1973  
                     l2664 152A                       l2656 151E                       l2648 14EA  
                     l2592 13FD                       l2584 13EA                       l2576 13C6  
                     l2568 13A8                       l2496 12E2                       l2488 12CF  
                     l2920 08C7                       l2904 0883                       l2760 0F3B  
                     l2752 0F17                       l2744 0E8C                       l2736 0E0C  
                     l2728 0DC6                       l2680 0CB6                       l2672 0CA6  
                     l3528 07B0                       l3472 065D                       l3464 063E  
                     l3448 0605                       l3392 0383                       l3384 035F  
                     l3376 0303                       l3368 02FF                       l3296 1637  
                     l3456 0621                       l3536 07DC                       l3288 1603  
                     l3624 12A0                       l3616 1286                       l3608 125E  
                     l3560 112A                       l3552 10BC                       l2818 19CE  
                     l2826 19DF                       l3546 1978                       l2666 1535  
                     l2658 1523                       l2594 13FE                       l2586 13EE  
                     l2498 12E7                       l2930 08F3                       l2922 08C9  
                     l2906 0896                       l2770 0F50                       l2762 0F3C  
                     l2754 0F20                       l2746 0E9C                       l2738 0E29  
                     l2690 0CD2                       l2682 0CBB                       l2674 0CAC  
                     l2842 1F0B                       l2834 1DF8                       l3490 06C1  
                     l3482 0696                       l3466 0649                       l3458 0632  
                     l3386 0365                       l3298 163B                       l3618 1289  
                     l3570 117B                       l3562 1133                       l3554 10C5  
                     l2828 19E4                       l2668 1539                       l2596 1407  
                     l2588 13F7                       l2932 08F4                       l2924 08D2  
                     l2916 08B2                       l2780 0F75                       l2772 0F54  
                     l2764 0F45                       l2756 0F2E                       l2748 0EC9  
                     l2692 0CD8                       l2684 0CC3                       l2676 0CB0  
                     l2844 1F11                       l2836 1DFE                       l2852 0943  
                     l3492 06CA                       l3484 06A0                       l3468 064F  
                     l3388 0371                       l3396 038A                       l3580 11F5  
                     l3572 11C1                       l3564 1152                       l3556 110B  
                     l2598 140C                       l2950 0927                       l2942 090E  
                     l2934 08FC                       l2926 08DB                       l2918 08B8  
                     l2790 0FB3                       l2782 0F83                       l2774 0F68  
                     l2758 0F37                       l2766 0F4B                       l2694 0CDC  
                     l2686 0CC5                       l2678 0CB1                       l2870 0AC7  
                     l2854 0947                       l3494 06D2                       l3486 06AB  
                     l3478 065F                       l3398 0397                       l3646 161B  
                     l3590 1219                       l3582 11F8                       l3574 11CB  
                     l3566 115C                       l3558 1113                       l2952 0937  
                     l2936 0906                       l2944 0920                       l2928 08E9  
                     l2792 0FBE                       l2784 0F87                       l2768 0F4F  
                     l2696 0CDD                       l2688 0CCD                       l2848 1FBC  
                     l2864 0A38                       l2856 0949                       l3496 06DE  
                     l3488 06B2                       l3592 121C                       l3584 1202  
                     l3576 11E2                       l3568 1172                       l2970 0127  
                     l2962 0112                       l2794 0FCD                       l2786 0FA0  
                     l2778 0F70                       l2698 0CE2                       l2882 0BE3  
                     l2866 0A3F                       l2858 0950                       l2874 0AF4  
                     l3498 06E4                       l3594 122B                       l3586 1205  
                     l3578 11EB                       l2980 015E                       l2972 0138  
                     l2956 00FC                       l2796 0FD7                       l2788 0FA6  
                     l2892 197D                       l2884 0BEA                       l2876 0AFB  
                     l3596 1236                       l3588 120F                       l2982 016C  
                     l2974 013A                       l2958 0109                       l2798 0FD9  
                     l2894 197E                       l3598 1239                       l2984 016D  
                     l2976 0143                       l2968 011F                       l2896 1984  
                     l2888 0C72                       l2994 0188                       l2986 0176  
                     l2978 014C                       l2898 198A                       l2988 0180  
                     l2996 019A                       STR_1 00A3                       STR_2 00BB  
                     STR_3 00C2                       STR_4 00B4                       u3000 108D  
                     u3001 108C                       u3010 1092                       u3011 1091  
                     u3100 1C29                       u3020 1BDF                       u3101 1C28  
                     u3021 1BDE                       u3110 1AFA                       u3030 1BEA  
                     u3111 1AF9                       u3031 1BE9                       u4000 0F6F  
                     u3200 1A4D                       u3040 1BF5                       u4001 0F6E  
                     u3201 1A4C                       u3041 1BF4                       u4010 0F75  
                     u3130 1B0C                       u3210 1A57                       u4011 0F74  
                     u3131 1B0B                       u3211 1A56                       u3300 1303  
                     u4020 0F87                       u3060 1C07                       u3301 1302  
                     u4021 0F86                       u3125 1AFE                       u3061 1C06  
                     u3310 131C                       u4030 0F96                       u3150 1B1D  
                     u3230 1A6A                       u3070 1C11                       u3311 131B  
                     u3151 1B1C                       u3231 1A69                       u3215 1A53  
                     u3071 1C10                       u3055 1BF9                       u3400 13C1  
                     u3320 1320                       u3240 12C4                       u5000 1D45  
                     u4040 0FB3                       u4120 1F11                       u3401 13C0  
                     u3321 131F                       u3241 12C3                       u5001 1D44  
                     u4041 0FB2                       u3145 1B0D                       u3225 1A5E  
                     u4121 1F10                       u4105 1E75                       u3410 13C6  
                     u3330 1378                       u3250 12CA                       u5010 1D65  
                     u4050 0FCD                       u3170 1B31                       u3090 1C24  
                     u4210 0A3F                       u3411 13C5                       u3331 1377  
                     u3251 12C9                       u5011 1D64                       u4051 0FCC  
                     u4035 0F91                       u3171 1B30                       u3155 1B19  
                     u4115 1ECA                       u3091 1C23                       u3075 1C0D  
                     u4211 0A3E                       u3500 146B                       u3340 1383  
                     u3260 12CF                       u5100 1DD7                       u4060 0FEB  
                     u3180 1A3B                       u3501 146A                       u3421 13D8  
                     u3341 1381                       u3261 12CE                       u4061 0FEA  
                     u4045 0FAF                       u3165 1B25                       u3181 1A3A  
                     u3085 1C18                       u4205 09F7                       u4070 0806  
                     u3510 1490                       u3430 13EA                       u3422 13DF  
                     u3350 1384                       u3270 12ED                       u5110 1DE7  
                     u5030 1D86                       u4071 0805                       u3511 148F  
                     u3431 13E9                       u3423 13E6                       u3335 1374  
                     u3271 12EC                       u5111 1DE6                       u5031 1D85  
                     u4055 0FC9                       u4135 1F2E                       u3600 14D2  
                     u3520 1495                       u3440 13EE                       u3360 1398  
                     u3280 12F8                       u5120 1DEB                       u4400 0902  
                     u4080 1DFE                       u4160 0947                       u5200 156E  
                     u3601 14D1                       u3521 1494                       u3441 13ED  
                     u3361 1397                       u3281 12F7                       u5121 1DEA  
                     u5105 1DD2                       u5025 1D78                       u4401 0901  
                     u4145 1F7B                       u4081 1DFD                       u4305 0BFD  
                     u4225 0A52                       u4161 0946                       u5201 156D  
                     u5130 19F3                       u3610 14D8                       u3450 13FD  
                     u3370 13A7                       u3290 12FE                       u5050 1DA8  
                     u4410 0906                       u4330 1984                       u4250 0AFB  
                     u4170 0950                       u5210 15AE                       u5131 19F2  
                     u3611 14D7                       u3451 13FC                       u3371 13A6  
                     u3291 12FD                       u5051 1DA7                       u4411 0905  
                     u3195 1A3F                       u4155 1FC7                       u4331 1983  
                     u4315 0C39                       u4251 0AFA                       u4235 0A8E  
                     u4171 094F                       u5211 15AD                       u5140 1A05  
                     u3620 14EA                       u3540 14AB                       u4420 090D  
                     u3700 0CB0                       u4340 198A                       u5300 178C  
                     u5220 15BC                       u5141 1A04                       u3621 14E9  
                     u3541 14AA                       u5045 1D9A                       u4421 090C  
                     u3701 0CAF                       u4341 1989                       u4325 0C75  
                     u4245 0ACA                       u5301 178B                       u5221 15BB  
                     u5150 1ABD                       u3630 14F9                       u3550 14B0  
                     u3470 1422                       u3390 13BD                       u5070 1DB8  
                     u4510 015E                       u4350 0896                       u2910 00F7  
                     u3710 0CB6                       u5310 17A3                       u5230 1600  
                     u3551 14AF                       u3535 14A0                       u3471 1421  
                     u3391 13BC                       u5071 1DB7                       u4511 015D  
                     u4351 0895                       u2911 00F6                       u3711 0CB5  
                     u4095 1E1B                       u5311 17A2                       u5231 15FF  
                     u5160 1ADF                       u3640 1508                       u3560 14BA  
                     u5080 1DBE                       u4600 01B1                       u4440 091F  
                     u4360 08B0                       u3720 0CBB                       u2920 103A  
                     u5400 035F                       u5320 01BA                       u5240 1637  
                     u3641 1507                       u3561 14B9                       u3481 1439  
                     u3473 141E                       u3465 1400                       u3385 13AA  
                     u5081 1DBD                       u5065 1DAD                       u4601 01B0  
                     u4505 0145                       u4441 091E                       u4361 08AF  
                     u2905 00EA                       u3801 0D9C                       u3721 0CBA  
                     u2921 1039                       u4265 0B1B                       u4185 0970  
                     u5401 035E                       u5321 17FA                       u5241 1634  
                     u5170 1AF1                       u3650 1511                       u3570 14C0  
                     u3490 144D                       u3482 143A                       u4610 1014  
                     u5090 1DC2                       u4530 017C                       u4450 0926  
                     u3802 0DA3                       u3730 0CDC                       u2930 1045  
                     u4290 0BEA                       u5410 0371                       u5330 01D5  
                     u5250 163B                       u5171 1AF0                       u3651 1510  
                     u3635 14F4                       u3571 14BF                       u3491 144E  
                     u3483 143F                       u4611 1013                       u5091 1DC1  
                     u4531 017B                       u4515 015A                       u4451 0925  
                     u4435 090F                       u3811 0DB8                       u3803 0DAA  
                     u3731 0CDB                       u2931 1044                       u4291 0BE9  
                     u4275 0B57                       u4195 09AC                       u5411 0370  
                     u5331 01D4                       u5315 179F                       u5251 163A  
                     u5180 19AA                       u3660 1516                       u3580 14C5  
                     u3492 1453                       u3484 1440                       u4540 0180  
                     u4380 08E9                       u3812 0DBF                       u3740 0CE2  
                     u2940 1056                       u5420 0397                       u5340 01FC  
                     u5260 166A                       u5181 19A9                       u3661 1515  
                     u3581 14C4                       u3493 1454                       u3485 1445  
                     u4541 017F                       u4525 016F                       u4381 08E8  
                     u3901 0EE1                       u3813 0DC6                       u3741 0CE1  
                     u2941 1055                       u4285 0BA2                       u5421 0396  
                     u5341 01FB                       u5325 17F5                       u5261 1669  
                     u3670 1523                       u3590 14CB                       u3486 1446  
                     u4710 1C90                       u4550 0187                       u4470 0937  
                     u3910 0EFD                       u3902 0EE8                       u3750 0CE7  
                     u5510 0604                       u5430 03A5                       u5350 020B  
                     u5270 16A4                       u5190 154A                       u3671 1522  
                     u3591 14CA                       u4711 1C8F                       u4551 0186  
                     u4471 0936                       u4375 08D4                       u3903 0EEF  
                     u3831 0DEE                       u3751 0CE6                       u5511 0603  
                     u5431 03A4                       u5351 020A                       u5271 16A3  
                     u5191 1549                       u4720 1B4A                       u3680 1528  
                     u4640 102E                       u4480 0109                       u3832 0DF5  
                     u3760 0CFE                       u2960 1068                       u5600 06C1  
                     u5520 0620                       u5360 0226                       u5280 16DF  
                     u4721 1B49                       u4801 1D0C                       u3681 1527  
                     u4705 1C82                       u4641 102D                       u4625 101B  
                     u4481 0108                       u4465 0929                       u4385 08E5  
                     u3921 0F09                       u3841 0E1B                       u3833 0DFC  
                     u3825 0DC8                       u3761 0CFD                       u2961 1067  
                     u5601 06C0                       u5521 061F                       u5505 05A5  
                     u5425 0393                       u5361 0225                       u5281 16DE  
                     u4730 1B66                       u4810 1D37                       u4802 1D0D  
                     u3690 1539                       u4650 1C43                       u4570 0199  
                     u4490 011D                       u2890 00E3                       u3922 0F10  
                     u3842 0E22                       u3770 0D03                       u5610 06D2  
                     u5530 063A                       u5450 0441                       u5290 1768  
                     u4731 1B65                       u4811 1D36                       u4803 1D12  
                     u3691 1538                       u4651 1C42                       u4635 1022  
                     u4571 0198                       u4491 011C                       u4395 08F5  
                     u2891 00E2                       u3923 0F17                       u3915 0EF8  
                     u3843 0E29                       u3771 0D02                       u2955 105A  
                     u5611 06D1                       u5531 0639                       u5451 0440  
                     u5355 0207                       u5291 1767                       u4740 1B80  
                     u4804 1D13                       u4820 100B                       u4580 01A0  
                     u2980 1079                       u5700 07C8                       u5620 06DE  
                     u5540 064F                       u5460 0466                       u5380 0339  
                     u4741 1B7F                       u4805 1D18                       u4821 100A  
                     u4581 019F                       u4565 0189                       u3861 0E51  
                     u3781 0D54                       u2981 1078                       u5701 07C7  
                     u5621 06DD                       u5605 06BD                       u5541 064E  
                     u5461 0465                       u5445 03B8                       u5381 0338  
                     u4806 1D19                       u4750 1CAD                       u4910 0872  
                     u4830 0814                       u4670 1C57                       u3950 0F3B  
                     u3862 0E58                       u3782 0D5B                       u5710 07DC  
                     u5630 06E8                       u5550 0657                       u5470 0475  
                     u5390 0344                       u4815 1D33                       u4751 1CAC  
                     u4911 0871                       u4831 0813                       u4671 1C56  
                     u3951 0F3A                       u3935 0F19                       u3871 0E7E  
                     u3863 0E5F                       u3855 0E2B                       u3791 0D70  
                     u3783 0D62                       u2975 1069                       u5711 07D9  
                     u5631 06E7                       u5551 0656                       u5471 0474  
                     u5391 0343                       u5375 0306                       u4760 1CC9  
                     u4920 0877                       u4840 082B                       u3872 0E85  
                     u3792 0D77                       u5640 06F6                       u5480 0490  
                     u4745 1B7C                       u4761 1CC8                       u4921 0876  
                     u4905 0864                       u4665 1C48                       u3945 0F30  
                     u3881 0EAB                       u3873 0E8C                       u3793 0D7E  
                     u2985 1075                       u5641 06F5                       u5481 048F  
                     u5465 0462                       u5385 0335                       u4770 1CD5  
                     u4850 0841                       u4690 1C72                       u4930 1B8E  
                     u3970 0F4F                       u3890 0ED5                       u3882 0EB2  
                     u5650 070E                       u5570 0695                       u4771 1CD4  
                     u4851 0840                       u4691 1C71                       u4931 1B8D  
                     u4595 01A3                       u3971 0F4E                       u3883 0EB9  
                     u2995 1081                       u5651 070D                       u5571 0694  
                     u5475 0471                       u4860 0848                       u3980 0F54  
                     u5660 0724                       u5580 06A0                       u4781 1CE4  
                     u4861 0847                       u4845 0826                       u4685 1C59  
                     u3981 0F53                       u3965 0F3E                       u5661 0723  
                     u5645 06F2                       u5581 069F                       u5565 0662  
                     u4790 1CFD                       u4782 1CE5                       u4950 1BA2  
                     u3990 0F68                       u5670 073F                       u5590 06AB  
                     u4791 1CFC                       u4783 1CEA                       u4695 1C6E  
                     u4951 1BA1                       u3991 0F67                       u3895 0ED0  
                     u5671 073E                       u5655 070A                       u5591 06AA  
                     u5575 0691                       u5495 051B                       u5807 1273  
                     u5727 11F1                       u4784 1CEB                       u4880 085A  
                     u4960 1BB4                       u5680 074B                       u4785 1CF0  
                     u4881 0859                       u4961 1BB3                       u4945 1B93  
                     u5681 074A                       u5817 1281                       u5737 11FE  
                     u4786 1CF1                       u4890 0861                       u4891 0860  
                     u4875 084A                       u5595 06A7                       u5827 1299  
                     u5747 1215                       u4980 1BD1                       u4981 1BD0  
                     u4965 1BB0                       u5837 12A8                       u5757 1224  
                     u4990 1D41                       u5847 19E1                       u4975 1BC3  
                     u4991 1D40                       u5695 076A                       u5767 1231  
                     u5857 19E9                       u5777 123F                       u5867 1A79  
                     u5787 1257                       u5877 1A88                       u5797 1266  
                     u5887 1A95                       u5897 19C9                       _TRMT 04C1  
        ?_Lcd_Write_String 0073                       _main 109C                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0075               _sprintf$1218 00AC  
          __end_of_Lcd_Cmd 19D2              ___fltol@sign1 005A            __end_of___fladd 153B  
                    ?_main 0070            __end_of___awdiv 109C            __end_of___flneg 100E  
          __end_of___awmod 1C33            __end_of___flmul 1000            __end_of___flsub 1A35  
          __end_of___fltol 0883                      _ANSEL 0188            __end_of___lldiv 1C99  
          ___awdiv@divisor 0077            __end_of___llmod 1BDA            __end_of___lwdiv 1B36  
          __end_of___lwmod 1A6F            ___awdiv@counter 0020                      _SPBRG 0099  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0024                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019            __end_of_dpowers 00A3                      _count 00EC  
                    _scale 0940            __end_of_isdigit 198E                      _setup 198E  
                    pclath 000A            __end_of_spiInit 19B8            __end_of_spiRead 197C  
                    status 0003                      wtemp0 007E            __end_of_sprintf 07E3  
         __end_of_Lcd_Init 1AB0           __end_of_Lcd_Port 196B            __initialization 07E3  
             __end_of_main 12B3                     ??_main 00C6         __size_of_Lcd_Clear 000D  
     __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 0024                     ?_scale 003E  
         ___awdiv@dividend 0079                     ?_setup 0070                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 001B                     _TRISC3 043B                     _TRISC5 043D  
                   _SSPBUF 0013                     _SSPCON 0014           __end_of___xxtofl 1DF5  
         __end_of__powers_ 0047                     ___flge 1C99                     ___fleq 1B36  
                ??___fladd 005A                     ___wmul 100E                  ??___awdiv 007B  
                ??___flneg 0074                  ??___awmod 0074                  ??___flmul 002C  
                ??___flsub 007E                  ??___fltol 0055                  ??___lldiv 0078  
                ??___llmod 0028                  ??___lwdiv 007A                  ??___lwmod 0074  
                   _fround 1DF5           ___awdiv@quotient 0022            ___awmod@divisor 0070  
          ___awmod@counter 0075                  ??_isdigit 0070         __size_of__Umul8_16 0027  
                ??_spiInit 0073                  ??_spiRead 0070                  ??_sprintf 00A7  
          Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074                 ___flge@ff1 0070  
               ___flge@ff2 0074               ___xxtofl@arg 007A               ___xxtofl@exp 0079  
             ___xxtofl@val 0070                 ___fleq@ff1 0070                 ___fleq@ff2 0074  
  __end_of__initialization 07FC                 ___flneg@f1 0070          __end_of_Lcd_Clear 00D5  
               ___fltol@f1 0051             __pcstackCOMMON 0070               __pidataBANK0 00C7  
            __end_of_scale 0C9F              __end_of_setup 19A2             _Lcd_Set_Cursor 19ED  
               __div_to_l_ 00FC                 _banderaADC 006F                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070            __div_to_l_@exp1 0025            __div_to_l_@cntr 0024  
                  ??_scale 0042            __div_to_l_@quot 0020               sprintf@width 00B3  
                  ??_setup 0070                 __pbssBANK0 006E                 __pbssBANK1 00CA  
               __pbssBANK3 0190              __div_to_l_@f1 0070              __div_to_l_@f2 0074  
        __end_of__Umul8_16 00FC                 __pmaintext 109C                    ?___flge 0070  
                  ?___fleq 0070                    ?___wmul 0070    __size_of_spiReceiveWait 0007  
                  ?_fround 003E  __size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 1A11  
                ?___xxtofl 0070                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
                  _SSPSTAT 0094                 __stringtab 0003             _Lcd_Write_Char 19D2  
                  _Lcd_Cmd 19B8          __end_of__npowers_ 007B                 _scale$1217 004C  
          __size_of___flge 00A2            __size_of___fleq 004E                    ___fladd 12B3  
                  ___awdiv 1033                    ___flneg 1003                    ___awmod 1BDA  
                  ___flmul 0C9F                    ___flsub 1A11                    ___fltol 0807  
                  ___lldiv 1C33            __size_of___wmul 0025                    ___llmod 1B84  
                  ___lwdiv 1AF2                    ___lwmod 1A35            __size_of_fround 020B  
          ?_Lcd_Set_Cursor 0074                    __ptext1 153B                    __ptext2 0940  
                  __ptext3 1BDA                    __ptext4 1033                    __ptext5 197C  
                  __ptext6 1DF5                    __ptext7 1A35                    __ptext8 1AF2  
                  __ptext9 0C9F                ?__div_to_l_ 0070                    _dpowers 007B  
                  _isdigit 197C                    _mensaje 006E                 ??___xxtofl 0074  
         ___awmod@dividend 0072                    _spiInit 19A2                    _spiRead 1973  
                  _sprintf 153B                    clrloop0 196C     __end_of_Lcd_Write_Char 19ED  
     end_of_initialization 07FC            ___lldiv@divisor 0070            ___lldiv@counter 007D  
                _RCSTAbits 0018                    psplit$0 E0030                  Lcd_Port@a 0070  
           __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074              ??__tdiv_to_l_ 0078  
                _PORTAbits 0005                  _PORTCbits 0007                  _PORTEbits 0009  
              ___fladd@grs 0065              ___xxtofl@sign 0078            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0073          Lcd_Write_String@i 0078                ___flmul@grs 0032  
                _TXSTAbits 0098        __size_of__div_to_l_ 00BE                  _Lcd_Clear 00C8  
           _spiReceiveWait 0800             __end_of___flge 1D3B             __end_of___fleq 1B84  
           __end_of___wmul 1033           _Lcd_Write_String 1AB0          pnum$text1_split_1 0030  
              _BAUDCTLbits 0187             __end_of_fround 2000        start_initialization 07E3  
      __end_of__tdiv_to_l_ 0940          __size_of_Lcd_Init 0041          __size_of_Lcd_Port 0006  
          ___llmod@divisor 0020            ___llmod@counter 0029     __end_of_spiReceiveWait 0807  
               ?_Lcd_Clear 0070                   ??___flge 0078                   ??___fleq 0078  
                 ??___wmul 0074                  __Umul8_16 00D5                __pdataBANK0 006F  
          Lcd_Write_Char@a 0072                   ??_fround 0042              sprintf@tmpval 00B5  
                ___fladd@a 0056                  ___fladd@b 0052                 fround@prec 0051  
                ___flmul@a 0028                  ___flmul@b 0024                  ___flsub@a 0066  
                ___flsub@b 006A                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0          __size_of___xxtofl 00BA               _isdigit$1016 0070  
                 ?_Lcd_Cmd 0070                sprintf@flag 00B1                sprintf@eexp 00BD  
              sprintf@fval 00BF                sprintf@prec 00C3           ___lwdiv@dividend 0078  
          ?_spiReceiveWait 0070           ??_Lcd_Set_Cursor 0075                   ?___fladd 0052  
                 ?___awdiv 0077                   ?___flneg 0070                   ?___awmod 0070  
                 ?___flmul 0024                   ?___flsub 0066                   ?___fltol 0051  
                 ?___lldiv 0070                   ?___llmod 0020                  __npowers_ 0047  
               ?__Umul8_16 0070                   ?___lwdiv 0076                   ?___lwmod 0070  
                __pstrings 0003                __tdiv_to_l_ 0883               ??__div_to_l_ 0078  
                 ?_isdigit 0070                   ?_spiInit 0070                   ?_spiRead 0070  
         ___lwdiv@quotient 007B                   ?_sprintf 00A0             __size_of_scale 035F  
           __size_of_setup 0014       spiInit@sTransmitEdge 0072             ___wmul@product 0074  
                clear_ram0 196B                   _PIE1bits 008C         spiInit@sDataSample 0070  
                 Lcd_Cmd@a 0073         __end_of__div_to_l_ 01BA                ??_Lcd_Clear 0074  
              __stringbase 0012          ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 1A6F                   _Lcd_Port 1965   __end_of_Lcd_Write_String 1AF2  
         __size_of_Lcd_Cmd 001A                ??__Umul8_16 0072           __size_of___fladd 0288  
         __size_of___awdiv 0069           __size_of___flneg 000B           __size_of___awmod 0059  
         __size_of___flmul 0361           __size_of___flsub 0024           __size_of___fltol 007C  
         __size_of___lldiv 0066           __size_of___llmod 0056           __size_of___lwdiv 0044  
         __size_of___lwmod 003A                _fround$1215 004D                _fround$1216 0049  
       __end_of__stringtab 0013                 sprintf@val 00B9                   ___xxtofl 1D3B  
         __size_of_isdigit 0012            ___lwdiv@divisor 0076            ___lwdiv@counter 007D  
                 __ptext10 00D5                   __ptext11 0883                   __ptext20 1003  
                 __ptext12 00FC                   __ptext21 1C99                   __ptext13 1D3B  
                 __ptext30 1A6F                   __ptext22 1B36                   __ptext14 100E  
                 __ptext31 00C8                   __ptext23 1973                   __ptext15 1B84  
                 __ptext32 19B8                   __ptext24 0800                   __ptext16 1C33  
                 __ptext33 1965                   __ptext25 19A2                   __ptext17 0807  
                 __ptext26 198E                   __ptext18 1A11                   __ptext27 1AB0  
                 __ptext19 12B3                   __ptext28 19D2                   __ptext29 19ED  
         __size_of_spiInit 0016           __size_of_spiRead 0009                   __powers_ 0013  
                 _esclavo1 00D6           __size_of_sprintf F2A8              __size_of_main 0217  
                pnum$text1 000E               spiInit@sType 0073          spiInit@sClockIdle 0071  
               _INTCONbits 000B                   isdigit@c 0071                   scale@scl 0050  
                sprintf@ap 00B0           __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024  
                sprintf@sp 00A0           __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072  
         ___lldiv@dividend 0074           ??_spiReceiveWait 0070                  stringcode 000D  
       Lcd_Set_Cursor@temp 0077               ?__tdiv_to_l_ 0070     __Umul8_16@multiplicand 0070  
                 sprintf@c 00C5                   sprintf@f 00A2           ___lldiv@quotient 0079  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 000D  
                 stringtab 0003              ___fladd@signs 0062               ___fladd@aexp 0063  
             ___fladd@bexp 0064       __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
