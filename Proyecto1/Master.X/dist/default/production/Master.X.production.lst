

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 20 18:31:49 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F887 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008F                     	;# 
   130  0090                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  0105                     	;# 
   149  0107                     	;# 
   150  0108                     	;# 
   151  0109                     	;# 
   152  010C                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  0185                     	;# 
   158  0187                     	;# 
   159  0188                     	;# 
   160  0189                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  008F                     	;# 
   208  0090                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0094                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0097                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009A                     	;# 
   221  009B                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  0105                     	;# 
   227  0107                     	;# 
   228  0108                     	;# 
   229  0109                     	;# 
   230  010C                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  0185                     	;# 
   236  0187                     	;# 
   237  0188                     	;# 
   238  0189                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  008F                     	;# 
   286  0090                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0095                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  0105                     	;# 
   305  0107                     	;# 
   306  0108                     	;# 
   307  0109                     	;# 
   308  010C                     	;# 
   309  010C                     	;# 
   310  010D                     	;# 
   311  010E                     	;# 
   312  010F                     	;# 
   313  0185                     	;# 
   314  0187                     	;# 
   315  0188                     	;# 
   316  0189                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319  0000                     	;# 
   320  0001                     	;# 
   321  0002                     	;# 
   322  0003                     	;# 
   323  0004                     	;# 
   324  0005                     	;# 
   325  0006                     	;# 
   326  0007                     	;# 
   327  0008                     	;# 
   328  0009                     	;# 
   329  000A                     	;# 
   330  000B                     	;# 
   331  000C                     	;# 
   332  000D                     	;# 
   333  000E                     	;# 
   334  000E                     	;# 
   335  000F                     	;# 
   336  0010                     	;# 
   337  0011                     	;# 
   338  0012                     	;# 
   339  0013                     	;# 
   340  0014                     	;# 
   341  0015                     	;# 
   342  0015                     	;# 
   343  0016                     	;# 
   344  0017                     	;# 
   345  0018                     	;# 
   346  0019                     	;# 
   347  001A                     	;# 
   348  001B                     	;# 
   349  001B                     	;# 
   350  001C                     	;# 
   351  001D                     	;# 
   352  001E                     	;# 
   353  001F                     	;# 
   354  0081                     	;# 
   355  0085                     	;# 
   356  0086                     	;# 
   357  0087                     	;# 
   358  0088                     	;# 
   359  0089                     	;# 
   360  008C                     	;# 
   361  008D                     	;# 
   362  008E                     	;# 
   363  008F                     	;# 
   364  0090                     	;# 
   365  0091                     	;# 
   366  0092                     	;# 
   367  0093                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0094                     	;# 
   371  0095                     	;# 
   372  0096                     	;# 
   373  0097                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009A                     	;# 
   377  009B                     	;# 
   378  009C                     	;# 
   379  009D                     	;# 
   380  009E                     	;# 
   381  009F                     	;# 
   382  0105                     	;# 
   383  0107                     	;# 
   384  0108                     	;# 
   385  0109                     	;# 
   386  010C                     	;# 
   387  010C                     	;# 
   388  010D                     	;# 
   389  010E                     	;# 
   390  010F                     	;# 
   391  0185                     	;# 
   392  0187                     	;# 
   393  0188                     	;# 
   394  0189                     	;# 
   395  018C                     	;# 
   396  018D                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000D                     	;# 
   411  000E                     	;# 
   412  000E                     	;# 
   413  000F                     	;# 
   414  0010                     	;# 
   415  0011                     	;# 
   416  0012                     	;# 
   417  0013                     	;# 
   418  0014                     	;# 
   419  0015                     	;# 
   420  0015                     	;# 
   421  0016                     	;# 
   422  0017                     	;# 
   423  0018                     	;# 
   424  0019                     	;# 
   425  001A                     	;# 
   426  001B                     	;# 
   427  001B                     	;# 
   428  001C                     	;# 
   429  001D                     	;# 
   430  001E                     	;# 
   431  001F                     	;# 
   432  0081                     	;# 
   433  0085                     	;# 
   434  0086                     	;# 
   435  0087                     	;# 
   436  0088                     	;# 
   437  0089                     	;# 
   438  008C                     	;# 
   439  008D                     	;# 
   440  008E                     	;# 
   441  008F                     	;# 
   442  0090                     	;# 
   443  0091                     	;# 
   444  0092                     	;# 
   445  0093                     	;# 
   446  0093                     	;# 
   447  0093                     	;# 
   448  0094                     	;# 
   449  0095                     	;# 
   450  0096                     	;# 
   451  0097                     	;# 
   452  0098                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009C                     	;# 
   457  009D                     	;# 
   458  009E                     	;# 
   459  009F                     	;# 
   460  0105                     	;# 
   461  0107                     	;# 
   462  0108                     	;# 
   463  0109                     	;# 
   464  010C                     	;# 
   465  010C                     	;# 
   466  010D                     	;# 
   467  010E                     	;# 
   468  010F                     	;# 
   469  0185                     	;# 
   470  0187                     	;# 
   471  0188                     	;# 
   472  0189                     	;# 
   473  018C                     	;# 
   474  018D                     	;# 
   475                           
   476                           	psect	idataBANK0
   477  0007                     __pidataBANK0:
   478                           
   479                           ;initializer for _banderaADC
   480  0007  3401               	retlw	1
   481                           
   482                           	psect	strings
   483  0800                     __pstrings:
   484  0800                     stringtab:
   485  0800                     __stringtab:
   486                           
   487                           ;	String table - string pointers are 1 byte each
   488  0800  1BFF               	btfsc	btemp+1,7
   489  0801  280A               	ljmp	stringcode
   490  0802  1383               	bcf	3,7
   491  0803  187F               	btfsc	btemp+1,0
   492  0804  1783               	bsf	3,7
   493  0805  0800               	movf	0,w
   494  0806  0A84               	incf	4,f
   495  0807  1903               	skipnz
   496  0808  0AFF               	incf	btemp+1,f
   497  0809  0008               	return
   498  080A                     stringcode:
   499  080A                     stringdir:
   500  080A  3008               	movlw	high stringdir
   501  080B  008A               	movwf	10
   502  080C  0804               	movf	4,w
   503  080D  0A84               	incf	4,f
   504  080E  0782               	addwf	2,f
   505  080F                     __stringbase:
   506  080F  3400               	retlw	0
   507  0810                     __end_of__stringtab:
   508  0810                     __powers_:
   509  0810  3400               	retlw	0
   510  0811  3400               	retlw	0
   511  0812  3480               	retlw	128
   512  0813  343F               	retlw	63
   513  0814  3400               	retlw	0
   514  0815  3400               	retlw	0
   515  0816  3420               	retlw	32
   516  0817  3441               	retlw	65
   517  0818  3400               	retlw	0
   518  0819  3400               	retlw	0
   519  081A  34C8               	retlw	200
   520  081B  3442               	retlw	66
   521  081C  3400               	retlw	0
   522  081D  3400               	retlw	0
   523  081E  347A               	retlw	122
   524  081F  3444               	retlw	68
   525  0820  3400               	retlw	0
   526  0821  3440               	retlw	64
   527  0822  341C               	retlw	28
   528  0823  3446               	retlw	70
   529  0824  3400               	retlw	0
   530  0825  3450               	retlw	80
   531  0826  34C3               	retlw	195
   532  0827  3447               	retlw	71
   533  0828  3400               	retlw	0
   534  0829  3424               	retlw	36
   535  082A  3474               	retlw	116
   536  082B  3449               	retlw	73
   537  082C  3480               	retlw	128
   538  082D  3496               	retlw	150
   539  082E  3418               	retlw	24
   540  082F  344B               	retlw	75
   541  0830  3420               	retlw	32
   542  0831  34BC               	retlw	188
   543  0832  34BE               	retlw	190
   544  0833  344C               	retlw	76
   545  0834  3428               	retlw	40
   546  0835  346B               	retlw	107
   547  0836  346E               	retlw	110
   548  0837  344E               	retlw	78
   549  0838  34F9               	retlw	249
   550  0839  3402               	retlw	2
   551  083A  3415               	retlw	21
   552  083B  3450               	retlw	80
   553  083C  34EC               	retlw	236
   554  083D  3478               	retlw	120
   555  083E  34AD               	retlw	173
   556  083F  3460               	retlw	96
   557  0840  34CA               	retlw	202
   558  0841  34F2               	retlw	242
   559  0842  3449               	retlw	73
   560  0843  3471               	retlw	113
   561  0844                     __end_of__powers_:
   562  0844                     __npowers_:
   563  0844  3400               	retlw	0
   564  0845  3400               	retlw	0
   565  0846  3480               	retlw	128
   566  0847  343F               	retlw	63
   567  0848  34CD               	retlw	205
   568  0849  34CC               	retlw	204
   569  084A  34CC               	retlw	204
   570  084B  343D               	retlw	61
   571  084C  340A               	retlw	10
   572  084D  34D7               	retlw	215
   573  084E  3423               	retlw	35
   574  084F  343C               	retlw	60
   575  0850  346F               	retlw	111
   576  0851  3412               	retlw	18
   577  0852  3483               	retlw	131
   578  0853  343A               	retlw	58
   579  0854  3417               	retlw	23
   580  0855  34B7               	retlw	183
   581  0856  34D1               	retlw	209
   582  0857  3438               	retlw	56
   583  0858  34AC               	retlw	172
   584  0859  34C5               	retlw	197
   585  085A  3427               	retlw	39
   586  085B  3437               	retlw	55
   587  085C  34BD               	retlw	189
   588  085D  3437               	retlw	55
   589  085E  3486               	retlw	134
   590  085F  3435               	retlw	53
   591  0860  3495               	retlw	149
   592  0861  34BF               	retlw	191
   593  0862  34D6               	retlw	214
   594  0863  3433               	retlw	51
   595  0864  3477               	retlw	119
   596  0865  34CC               	retlw	204
   597  0866  342B               	retlw	43
   598  0867  3432               	retlw	50
   599  0868  345F               	retlw	95
   600  0869  3470               	retlw	112
   601  086A  3489               	retlw	137
   602  086B  3430               	retlw	48
   603  086C  34FF               	retlw	255
   604  086D  34E6               	retlw	230
   605  086E  34DB               	retlw	219
   606  086F  342E               	retlw	46
   607  0870  3408               	retlw	8
   608  0871  34E5               	retlw	229
   609  0872  343C               	retlw	60
   610  0873  341E               	retlw	30
   611  0874  3460               	retlw	96
   612  0875  3442               	retlw	66
   613  0876  34A2               	retlw	162
   614  0877  340D               	retlw	13
   615  0878                     __end_of__npowers_:
   616  0878                     _dpowers:
   617  0878  3401               	retlw	1
   618  0879  3400               	retlw	0
   619  087A  3400               	retlw	0
   620  087B  3400               	retlw	0
   621  087C  340A               	retlw	10
   622  087D  3400               	retlw	0
   623  087E  3400               	retlw	0
   624  087F  3400               	retlw	0
   625  0880  3464               	retlw	100
   626  0881  3400               	retlw	0
   627  0882  3400               	retlw	0
   628  0883  3400               	retlw	0
   629  0884  34E8               	retlw	232
   630  0885  3403               	retlw	3
   631  0886  3400               	retlw	0
   632  0887  3400               	retlw	0
   633  0888  3410               	retlw	16
   634  0889  3427               	retlw	39
   635  088A  3400               	retlw	0
   636  088B  3400               	retlw	0
   637  088C  34A0               	retlw	160
   638  088D  3486               	retlw	134
   639  088E  3401               	retlw	1
   640  088F  3400               	retlw	0
   641  0890  3440               	retlw	64
   642  0891  3442               	retlw	66
   643  0892  340F               	retlw	15
   644  0893  3400               	retlw	0
   645  0894  3480               	retlw	128
   646  0895  3496               	retlw	150
   647  0896  3498               	retlw	152
   648  0897  3400               	retlw	0
   649  0898  3400               	retlw	0
   650  0899  34E1               	retlw	225
   651  089A  34F5               	retlw	245
   652  089B  3405               	retlw	5
   653  089C  3400               	retlw	0
   654  089D  34CA               	retlw	202
   655  089E  349A               	retlw	154
   656  089F  343B               	retlw	59
   657  08A0                     __end_of_dpowers:
   658  0014                     _SSPCON	set	20
   659  0019                     _TXREG	set	25
   660  000B                     _INTCONbits	set	11
   661  0018                     _RCSTAbits	set	24
   662  0013                     _SSPBUF	set	19
   663  0007                     _PORTCbits	set	7
   664  0005                     _PORTAbits	set	5
   665  0009                     _PORTE	set	9
   666  0008                     _PORTD	set	8
   667  0007                     _PORTC	set	7
   668  0009                     _PORTEbits	set	9
   669  0006                     _PORTB	set	6
   670  0094                     _SSPSTATbits	set	148
   671  0094                     _SSPSTAT	set	148
   672  0099                     _SPBRG	set	153
   673  008C                     _PIE1bits	set	140
   674  0098                     _TXSTAbits	set	152
   675  0086                     _TRISB	set	134
   676  0089                     _TRISE	set	137
   677  0087                     _TRISC	set	135
   678  0088                     _TRISD	set	136
   679  043B                     _TRISC3	set	1083
   680  043D                     _TRISC5	set	1085
   681  04C1                     _TRMT	set	1217
   682  0187                     _BAUDCTLbits	set	391
   683  0188                     _ANSEL	set	392
   684  08A0                     STR_1:
   685  08A0  3453               	retlw	83	;'S'
   686  08A1  3431               	retlw	49	;'1'
   687  08A2  343A               	retlw	58	;':'
   688  08A3  3420               	retlw	32	;' '
   689  08A4  3420               	retlw	32	;' '
   690  08A5  3420               	retlw	32	;' '
   691  08A6  3453               	retlw	83	;'S'
   692  08A7  3432               	retlw	50	;'2'
   693  08A8  343A               	retlw	58	;':'
   694  08A9  3420               	retlw	32	;' '
   695  08AA  3420               	retlw	32	;' '
   696  08AB  3420               	retlw	32	;' '
   697  08AC  3420               	retlw	32	;' '
   698  08AD  3453               	retlw	83	;'S'
   699  08AE  3433               	retlw	51	;'3'
   700  08AF  343A               	retlw	58	;':'
   701  08B0  3400               	retlw	0
   702  08B1                     STR_3:
   703  08B1  3425               	retlw	37	;'%'
   704  08B2  3433               	retlw	51	;'3'
   705  08B3  342E               	retlw	46	;'.'
   706  08B4  3430               	retlw	48	;'0'
   707  08B5  3466               	retlw	102	;'f'
   708  08B6  3443               	retlw	67	;'C'
   709  08B7  3400               	retlw	0
   710  08B8                     STR_2:
   711  08B8  3425               	retlw	37	;'%'
   712  08B9  3433               	retlw	51	;'3'
   713  08BA  342E               	retlw	46	;'.'
   714  08BB  3432               	retlw	50	;'2'
   715  08BC  3466               	retlw	102	;'f'
   716  08BD  3456               	retlw	86	;'V'
   717  08BE  3400               	retlw	0
   718                           
   719                           	psect	cinit
   720  07EC                     start_initialization:	
   721                           ; #config settings
   722                           
   723  07EC                     __initialization:
   724                           
   725                           ; Initialize objects allocated to BANK0
   726  07EC  120A  118A  2007  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   727  07F1  00EF               	movwf	__pdataBANK0& (0+127)
   728                           
   729                           ; Clear objects allocated to BANK1
   730  07F2  1383               	bcf	3,7	;select IRP bank0
   731  07F3  30C9               	movlw	low __pbssBANK1
   732  07F4  0084               	movwf	4
   733  07F5  30E8               	movlw	low (__pbssBANK1+31)
   734  07F6  160A  158A  237B  120A  118A  	fcall	clear_ram0
   735                           
   736                           ; Clear objects allocated to BANK0
   737  07FB  01EE               	clrf	__pbssBANK0& (0+127)
   738  07FC                     end_of_initialization:	
   739                           ;End of C runtime variable initialization code
   740                           
   741  07FC                     __end_of__initialization:
   742  07FC  0183               	clrf	3
   743  07FD  160A  118A  29E6   	ljmp	_main	;jump to C main() function
   744                           
   745                           	psect	bssBANK0
   746  006E                     __pbssBANK0:
   747  006E                     _mensaje:
   748  006E                     	ds	1
   749                           
   750                           	psect	dataBANK0
   751  006F                     __pdataBANK0:
   752  006F                     _banderaADC:
   753  006F                     	ds	1
   754                           
   755                           	psect	bssBANK1
   756  00C9                     __pbssBANK1:
   757  00C9                     _p:
   758  00C9                     	ds	4
   759  00CD                     _x:
   760  00CD                     	ds	4
   761  00D1                     _esclavo1:
   762  00D1                     	ds	1
   763  00D2                     _adc:
   764  00D2                     	ds	1
   765  00D3                     _s:
   766  00D3                     	ds	20
   767  00E7                     _lmm:
   768  00E7                     	ds	1
   769                           
   770                           	psect	clrtext
   771  1B7B                     clear_ram0:	
   772                           ;	Called with FSR containing the base address, and
   773                           ;	W with the last address+1
   774                           
   775  1B7B  0064               	clrwdt	;clear the watchdog before getting into this loop
   776  1B7C                     clrloop0:
   777  1B7C  0180               	clrf	0	;clear RAM location pointed to by FSR
   778  1B7D  0A84               	incf	4,f	;increment pointer
   779  1B7E  0604               	xorwf	4,w	;XOR with final address
   780  1B7F  1903               	btfsc	3,2	;have we reached the end yet?
   781  1B80  3400               	retlw	0	;all done for this memory range, return
   782  1B81  0604               	xorwf	4,w	;XOR again to restore value
   783  1B82  2B7C               	goto	clrloop0	;do the next byte
   784                           
   785                           	psect	cstackBANK1
   786  00A0                     __pcstackBANK1:
   787  00A0                     ?_sprintf:
   788  00A0                     sprintf@f:	
   789                           ; 2 bytes @ 0x0
   790                           
   791                           
   792                           ; 1 bytes @ 0x0
   793  00A0                     	ds	5
   794  00A5                     ??_sprintf:
   795                           
   796                           ; 1 bytes @ 0x5
   797  00A5                     	ds	5
   798  00AA                     _sprintf$1213:
   799                           
   800                           ; 4 bytes @ 0xA
   801  00AA                     	ds	4
   802  00AE                     sprintf@ap:
   803                           
   804                           ; 1 bytes @ 0xE
   805  00AE                     	ds	1
   806  00AF                     sprintf@val:
   807                           
   808                           ; 4 bytes @ 0xF
   809  00AF                     	ds	4
   810  00B3                     sprintf@flag:
   811                           
   812                           ; 2 bytes @ 0x13
   813  00B3                     	ds	2
   814  00B5                     sprintf@width:
   815                           
   816                           ; 2 bytes @ 0x15
   817  00B5                     	ds	2
   818  00B7                     sprintf@tmpval:
   819                           
   820                           ; 4 bytes @ 0x17
   821  00B7                     	ds	4
   822  00BB                     sprintf@eexp:
   823                           
   824                           ; 2 bytes @ 0x1B
   825  00BB                     	ds	2
   826  00BD                     sprintf@fval:
   827                           
   828                           ; 4 bytes @ 0x1D
   829  00BD                     	ds	4
   830  00C1                     sprintf@sp:
   831                           
   832                           ; 1 bytes @ 0x21
   833  00C1                     	ds	1
   834  00C2                     sprintf@prec:
   835                           
   836                           ; 2 bytes @ 0x22
   837  00C2                     	ds	2
   838  00C4                     sprintf@c:
   839                           
   840                           ; 1 bytes @ 0x24
   841  00C4                     	ds	1
   842  00C5                     ??_main:
   843                           
   844                           ; 1 bytes @ 0x25
   845  00C5                     	ds	4
   846                           
   847                           	psect	cstackCOMMON
   848  0070                     __pcstackCOMMON:
   849  0070                     ?_isdigit:
   850  0070                     ?___fleq:	
   851                           ; 1 bit 
   852                           
   853  0070                     ?___flge:	
   854                           ; 1 bit 
   855                           
   856  0070                     ?_spiInit:	
   857                           ; 1 bit 
   858                           
   859  0070                     ?_spiRead:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ??_spiRead:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ??_isdigit:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?_Lcd_Port:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ??_Lcd_Port:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ?_Lcd_Cmd:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ?_Lcd_Clear:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  0070                     ?_Lcd_Init:	
   881                           ; 1 bytes @ 0x0
   882                           
   883  0070                     ?_Lcd_Write_Char:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  0070                     ?_setup:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0070                     ??_setup:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0070                     ?_main:	
   893                           ; 1 bytes @ 0x0
   894                           
   895  0070                     ?_spiReceiveWait:	
   896                           ; 1 bytes @ 0x0
   897                           
   898  0070                     ??_spiReceiveWait:	
   899                           ; 1 bytes @ 0x0
   900                           
   901  0070                     ?__Umul8_16:	
   902                           ; 1 bytes @ 0x0
   903                           
   904  0070                     ?___wmul:	
   905                           ; 2 bytes @ 0x0
   906                           
   907  0070                     ?___awmod:	
   908                           ; 2 bytes @ 0x0
   909                           
   910  0070                     ?___lwmod:	
   911                           ; 2 bytes @ 0x0
   912                           
   913  0070                     ?__tdiv_to_l_:	
   914                           ; 2 bytes @ 0x0
   915                           
   916  0070                     ?__div_to_l_:	
   917                           ; 4 bytes @ 0x0
   918                           
   919  0070                     ?___lldiv:	
   920                           ; 4 bytes @ 0x0
   921                           
   922  0070                     ?___flneg:	
   923                           ; 4 bytes @ 0x0
   924                           
   925  0070                     ?___llmod:	
   926                           ; 4 bytes @ 0x0
   927                           
   928  0070                     ?___xxtofl:	
   929                           ; 4 bytes @ 0x0
   930                           
   931  0070                     Lcd_Port@a:	
   932                           ; 4 bytes @ 0x0
   933                           
   934  0070                     spiInit@sDataSample:	
   935                           ; 1 bytes @ 0x0
   936                           
   937  0070                     __Umul8_16@multiplicand:	
   938                           ; 1 bytes @ 0x0
   939                           
   940  0070                     _isdigit$1011:	
   941                           ; 1 bytes @ 0x0
   942                           
   943  0070                     ___wmul@multiplier:	
   944                           ; 1 bytes @ 0x0
   945                           
   946  0070                     ___awmod@divisor:	
   947                           ; 2 bytes @ 0x0
   948                           
   949  0070                     ___lwmod@divisor:	
   950                           ; 2 bytes @ 0x0
   951                           
   952  0070                     ___lldiv@divisor:	
   953                           ; 2 bytes @ 0x0
   954                           
   955  0070                     __div_to_l_@f1:	
   956                           ; 4 bytes @ 0x0
   957                           
   958  0070                     ___fleq@ff1:	
   959                           ; 4 bytes @ 0x0
   960                           
   961  0070                     ___flge@ff1:	
   962                           ; 4 bytes @ 0x0
   963                           
   964  0070                     ___flneg@f1:	
   965                           ; 4 bytes @ 0x0
   966                           
   967  0070                     __tdiv_to_l_@f1:	
   968                           ; 4 bytes @ 0x0
   969                           
   970  0070                     ___llmod@divisor:	
   971                           ; 4 bytes @ 0x0
   972                           
   973  0070                     ___xxtofl@val:	
   974                           ; 4 bytes @ 0x0
   975                           
   976                           
   977                           ; 4 bytes @ 0x0
   978  0070                     	ds	1
   979  0071                     ??_Lcd_Cmd:
   980  0071                     ??_Lcd_Write_Char:	
   981                           ; 1 bytes @ 0x1
   982                           
   983  0071                     spiInit@sClockIdle:	
   984                           ; 1 bytes @ 0x1
   985                           
   986  0071                     isdigit@c:	
   987                           ; 1 bytes @ 0x1
   988                           
   989                           
   990                           ; 1 bytes @ 0x1
   991  0071                     	ds	1
   992  0072                     ??__Umul8_16:
   993  0072                     Lcd_Write_Char@a:	
   994                           ; 1 bytes @ 0x2
   995                           
   996  0072                     spiInit@sTransmitEdge:	
   997                           ; 1 bytes @ 0x2
   998                           
   999  0072                     ___wmul@multiplicand:	
  1000                           ; 1 bytes @ 0x2
  1001                           
  1002  0072                     ___awmod@dividend:	
  1003                           ; 2 bytes @ 0x2
  1004                           
  1005  0072                     ___lwmod@dividend:	
  1006                           ; 2 bytes @ 0x2
  1007                           
  1008                           
  1009                           ; 2 bytes @ 0x2
  1010  0072                     	ds	1
  1011  0073                     ??_spiInit:
  1012  0073                     ?_Lcd_Write_String:	
  1013                           ; 1 bytes @ 0x3
  1014                           
  1015  0073                     Lcd_Cmd@a:	
  1016                           ; 1 bytes @ 0x3
  1017                           
  1018  0073                     spiInit@sType:	
  1019                           ; 1 bytes @ 0x3
  1020                           
  1021  0073                     Lcd_Write_String@a:	
  1022                           ; 1 bytes @ 0x3
  1023                           
  1024                           
  1025                           ; 2 bytes @ 0x3
  1026  0073                     	ds	1
  1027  0074                     ??_Lcd_Clear:
  1028  0074                     ?_Lcd_Set_Cursor:	
  1029                           ; 1 bytes @ 0x4
  1030                           
  1031  0074                     ??_Lcd_Init:	
  1032                           ; 1 bytes @ 0x4
  1033                           
  1034  0074                     ??___wmul:	
  1035                           ; 1 bytes @ 0x4
  1036                           
  1037  0074                     ??___awmod:	
  1038                           ; 1 bytes @ 0x4
  1039                           
  1040  0074                     ??___flneg:	
  1041                           ; 1 bytes @ 0x4
  1042                           
  1043  0074                     ??___lwmod:	
  1044                           ; 1 bytes @ 0x4
  1045                           
  1046  0074                     ??___xxtofl:	
  1047                           ; 1 bytes @ 0x4
  1048                           
  1049  0074                     Lcd_Set_Cursor@b:	
  1050                           ; 1 bytes @ 0x4
  1051                           
  1052  0074                     ___wmul@product:	
  1053                           ; 1 bytes @ 0x4
  1054                           
  1055  0074                     __Umul8_16@product:	
  1056                           ; 2 bytes @ 0x4
  1057                           
  1058  0074                     ___lldiv@dividend:	
  1059                           ; 2 bytes @ 0x4
  1060                           
  1061  0074                     __div_to_l_@f2:	
  1062                           ; 4 bytes @ 0x4
  1063                           
  1064  0074                     ___fleq@ff2:	
  1065                           ; 4 bytes @ 0x4
  1066                           
  1067  0074                     ___flge@ff2:	
  1068                           ; 4 bytes @ 0x4
  1069                           
  1070  0074                     __tdiv_to_l_@f2:	
  1071                           ; 4 bytes @ 0x4
  1072                           
  1073  0074                     ___llmod@dividend:	
  1074                           ; 4 bytes @ 0x4
  1075                           
  1076                           
  1077                           ; 4 bytes @ 0x4
  1078  0074                     	ds	1
  1079  0075                     ??_Lcd_Set_Cursor:
  1080  0075                     ??_Lcd_Write_String:	
  1081                           ; 1 bytes @ 0x5
  1082                           
  1083  0075                     ___awmod@counter:	
  1084                           ; 1 bytes @ 0x5
  1085                           
  1086  0075                     ___lwmod@counter:	
  1087                           ; 1 bytes @ 0x5
  1088                           
  1089                           
  1090                           ; 1 bytes @ 0x5
  1091  0075                     	ds	1
  1092  0076                     ?___lwdiv:
  1093  0076                     Lcd_Set_Cursor@a:	
  1094                           ; 2 bytes @ 0x6
  1095                           
  1096  0076                     ___awmod@sign:	
  1097                           ; 1 bytes @ 0x6
  1098                           
  1099  0076                     ___lwdiv@divisor:	
  1100                           ; 1 bytes @ 0x6
  1101                           
  1102  0076                     __Umul8_16@word_mpld:	
  1103                           ; 2 bytes @ 0x6
  1104                           
  1105                           
  1106                           ; 2 bytes @ 0x6
  1107  0076                     	ds	1
  1108  0077                     ?___awdiv:
  1109  0077                     Lcd_Set_Cursor@temp:	
  1110                           ; 2 bytes @ 0x7
  1111                           
  1112  0077                     ___awdiv@divisor:	
  1113                           ; 1 bytes @ 0x7
  1114                           
  1115                           
  1116                           ; 2 bytes @ 0x7
  1117  0077                     	ds	1
  1118  0078                     ??__tdiv_to_l_:
  1119  0078                     ??__div_to_l_:	
  1120                           ; 1 bytes @ 0x8
  1121                           
  1122  0078                     ??___lldiv:	
  1123                           ; 1 bytes @ 0x8
  1124                           
  1125  0078                     ??___fleq:	
  1126                           ; 1 bytes @ 0x8
  1127                           
  1128  0078                     ??___flge:	
  1129                           ; 1 bytes @ 0x8
  1130                           
  1131  0078                     ??___llmod:	
  1132                           ; 1 bytes @ 0x8
  1133                           
  1134  0078                     __Umul8_16@multiplier:	
  1135                           ; 1 bytes @ 0x8
  1136                           
  1137  0078                     ___xxtofl@sign:	
  1138                           ; 1 bytes @ 0x8
  1139                           
  1140  0078                     Lcd_Write_String@i:	
  1141                           ; 1 bytes @ 0x8
  1142                           
  1143  0078                     ___lwdiv@dividend:	
  1144                           ; 2 bytes @ 0x8
  1145                           
  1146                           
  1147                           ; 2 bytes @ 0x8
  1148  0078                     	ds	1
  1149  0079                     ___llmod@counter:
  1150  0079                     ___xxtofl@exp:	
  1151                           ; 1 bytes @ 0x9
  1152                           
  1153  0079                     ___awdiv@dividend:	
  1154                           ; 1 bytes @ 0x9
  1155                           
  1156  0079                     ___lldiv@quotient:	
  1157                           ; 2 bytes @ 0x9
  1158                           
  1159                           
  1160                           ; 4 bytes @ 0x9
  1161  0079                     	ds	1
  1162  007A                     ??___lwdiv:
  1163  007A                     ___xxtofl@arg:	
  1164                           ; 1 bytes @ 0xA
  1165                           
  1166                           
  1167                           ; 4 bytes @ 0xA
  1168  007A                     	ds	1
  1169  007B                     ??___awdiv:
  1170  007B                     ___lwdiv@quotient:	
  1171                           ; 1 bytes @ 0xB
  1172                           
  1173                           
  1174                           ; 2 bytes @ 0xB
  1175  007B                     	ds	2
  1176  007D                     ___lldiv@counter:
  1177  007D                     ___lwdiv@counter:	
  1178                           ; 1 bytes @ 0xD
  1179                           
  1180                           
  1181                           ; 1 bytes @ 0xD
  1182  007D                     	ds	1
  1183  007E                     ??___flsub:
  1184                           
  1185                           	psect	cstackBANK0
  1186  0020                     __pcstackBANK0:	
  1187                           ; 1 bytes @ 0xE
  1188                           
  1189  0020                     ___awdiv@counter:
  1190  0020                     __div_to_l_@quot:	
  1191                           ; 1 bytes @ 0x0
  1192                           
  1193  0020                     __tdiv_to_l_@quot:	
  1194                           ; 4 bytes @ 0x0
  1195                           
  1196                           
  1197                           ; 4 bytes @ 0x0
  1198  0020                     	ds	1
  1199  0021                     ___awdiv@sign:
  1200                           
  1201                           ; 1 bytes @ 0x1
  1202  0021                     	ds	1
  1203  0022                     ___awdiv@quotient:
  1204                           
  1205                           ; 2 bytes @ 0x2
  1206  0022                     	ds	2
  1207  0024                     ?___flmul:
  1208  0024                     __div_to_l_@cntr:	
  1209                           ; 4 bytes @ 0x4
  1210                           
  1211  0024                     __tdiv_to_l_@cntr:	
  1212                           ; 1 bytes @ 0x4
  1213                           
  1214  0024                     ___flmul@b:	
  1215                           ; 1 bytes @ 0x4
  1216                           
  1217                           
  1218                           ; 4 bytes @ 0x4
  1219  0024                     	ds	1
  1220  0025                     __div_to_l_@exp1:
  1221  0025                     __tdiv_to_l_@exp1:	
  1222                           ; 1 bytes @ 0x5
  1223                           
  1224                           
  1225                           ; 1 bytes @ 0x5
  1226  0025                     	ds	3
  1227  0028                     ___flmul@a:
  1228                           
  1229                           ; 4 bytes @ 0x8
  1230  0028                     	ds	4
  1231  002C                     ??___flmul:
  1232                           
  1233                           ; 1 bytes @ 0xC
  1234  002C                     	ds	5
  1235  0031                     ___flmul@sign:
  1236                           
  1237                           ; 1 bytes @ 0x11
  1238  0031                     	ds	1
  1239  0032                     ___flmul@grs:
  1240                           
  1241                           ; 4 bytes @ 0x12
  1242  0032                     	ds	4
  1243  0036                     ___flmul@aexp:
  1244                           
  1245                           ; 1 bytes @ 0x16
  1246  0036                     	ds	1
  1247  0037                     ___flmul@bexp:
  1248                           
  1249                           ; 1 bytes @ 0x17
  1250  0037                     	ds	1
  1251  0038                     ___flmul@prod:
  1252                           
  1253                           ; 4 bytes @ 0x18
  1254  0038                     	ds	4
  1255  003C                     ___flmul@temp:
  1256                           
  1257                           ; 2 bytes @ 0x1C
  1258  003C                     	ds	2
  1259  003E                     ?_fround:
  1260  003E                     ?_scale:	
  1261                           ; 4 bytes @ 0x1E
  1262                           
  1263                           
  1264                           ; 4 bytes @ 0x1E
  1265  003E                     	ds	4
  1266  0042                     ??_fround:
  1267  0042                     ??_scale:	
  1268                           ; 1 bytes @ 0x22
  1269                           
  1270                           
  1271                           ; 1 bytes @ 0x22
  1272  0042                     	ds	7
  1273  0049                     _fround$1211:
  1274                           
  1275                           ; 4 bytes @ 0x29
  1276  0049                     	ds	3
  1277  004C                     _scale$1212:
  1278                           
  1279                           ; 4 bytes @ 0x2C
  1280  004C                     	ds	1
  1281  004D                     _fround$1210:
  1282                           
  1283                           ; 4 bytes @ 0x2D
  1284  004D                     	ds	3
  1285  0050                     scale@scl:
  1286                           
  1287                           ; 1 bytes @ 0x30
  1288  0050                     	ds	1
  1289  0051                     ?___fltol:
  1290  0051                     fround@prec:	
  1291                           ; 4 bytes @ 0x31
  1292                           
  1293  0051                     ___fltol@f1:	
  1294                           ; 1 bytes @ 0x31
  1295                           
  1296                           
  1297                           ; 4 bytes @ 0x31
  1298  0051                     	ds	1
  1299  0052                     ?___fladd:
  1300  0052                     ___fladd@b:	
  1301                           ; 4 bytes @ 0x32
  1302                           
  1303                           
  1304                           ; 4 bytes @ 0x32
  1305  0052                     	ds	3
  1306  0055                     ??___fltol:
  1307                           
  1308                           ; 1 bytes @ 0x35
  1309  0055                     	ds	1
  1310  0056                     ___fladd@a:
  1311                           
  1312                           ; 4 bytes @ 0x36
  1313  0056                     	ds	4
  1314  005A                     ??___fladd:
  1315  005A                     ___fltol@sign1:	
  1316                           ; 1 bytes @ 0x3A
  1317                           
  1318                           
  1319                           ; 1 bytes @ 0x3A
  1320  005A                     	ds	1
  1321  005B                     ___fltol@exp1:
  1322                           
  1323                           ; 1 bytes @ 0x3B
  1324  005B                     	ds	7
  1325  0062                     ___fladd@signs:
  1326                           
  1327                           ; 1 bytes @ 0x42
  1328  0062                     	ds	1
  1329  0063                     ___fladd@aexp:
  1330                           
  1331                           ; 1 bytes @ 0x43
  1332  0063                     	ds	1
  1333  0064                     ___fladd@bexp:
  1334                           
  1335                           ; 1 bytes @ 0x44
  1336  0064                     	ds	1
  1337  0065                     ___fladd@grs:
  1338                           
  1339                           ; 1 bytes @ 0x45
  1340  0065                     	ds	1
  1341  0066                     ?___flsub:
  1342  0066                     ___flsub@a:	
  1343                           ; 4 bytes @ 0x46
  1344                           
  1345                           
  1346                           ; 4 bytes @ 0x46
  1347  0066                     	ds	4
  1348  006A                     ___flsub@b:
  1349                           
  1350                           ; 4 bytes @ 0x4A
  1351  006A                     	ds	4
  1352                           
  1353                           	psect	maintext
  1354  11E6                     __pmaintext:	
  1355 ;;
  1356 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1357 ;;
  1358 ;; *************** function _main *****************
  1359 ;; Defined at:
  1360 ;;		line 78 in file "main.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;		None
  1363 ;; Auto vars:     Size  Location     Type
  1364 ;;		None
  1365 ;; Return value:  Size  Location     Type
  1366 ;;                  1    wreg      void 
  1367 ;; Registers used:
  1368 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1369 ;; Tracked objects:
  1370 ;;		On entry : B00/0
  1371 ;;		On exit  : 0/0
  1372 ;;		Unchanged: 0/0
  1373 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1374 ;;      Params:         0       0       0       0       0
  1375 ;;      Locals:         0       0       0       0       0
  1376 ;;      Temps:          0       0       4       0       0
  1377 ;;      Totals:         0       0       4       0       0
  1378 ;;Total ram usage:        4 bytes
  1379 ;; Hardware stack levels required when called:    4
  1380 ;; This function calls:
  1381 ;;		_Lcd_Clear
  1382 ;;		_Lcd_Init
  1383 ;;		_Lcd_Set_Cursor
  1384 ;;		_Lcd_Write_String
  1385 ;;		___flmul
  1386 ;;		___xxtofl
  1387 ;;		_setup
  1388 ;;		_spiInit
  1389 ;;		_spiRead
  1390 ;;		_sprintf
  1391 ;; This function is called by:
  1392 ;;		Startup code after reset
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           
  1397                           ;psect for function _main
  1398  11E6                     _main:
  1399  11E6                     l3439:	
  1400                           ;incstack = 0
  1401                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1402                           
  1403                           
  1404                           ;main.c: 81:     setup();
  1405  11E6  160A  158A  23B6  160A  118A  	fcall	_setup
  1406                           
  1407                           ;main.c: 84:     Lcd_Init();
  1408  11EB  160A  158A  24E2  160A  118A  	fcall	_Lcd_Init
  1409                           
  1410                           ;main.c: 85:     Lcd_Clear();
  1411  11F0  160A  158A  2397  160A  118A  	fcall	_Lcd_Clear
  1412                           
  1413                           ;main.c: 87:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
  1414  11F5  01F0               	clrf	spiInit@sDataSample
  1415  11F6  01F1               	clrf	spiInit@sClockIdle
  1416  11F7  01F2               	clrf	spiInit@sTransmitEdge
  1417  11F8  3020               	movlw	32
  1418  11F9  160A  158A  23C9  160A  118A  	fcall	_spiInit
  1419  11FE                     l97:	
  1420                           ;main.c: 88:     while (1) {
  1421                           
  1422                           
  1423                           ;main.c: 92:         Lcd_Set_Cursor(1, 1);
  1424  11FE  01F4               	clrf	Lcd_Set_Cursor@b
  1425  11FF  0AF4               	incf	Lcd_Set_Cursor@b,f
  1426  1200  3001               	movlw	1
  1427  1201  160A  158A  2414  160A  118A  	fcall	_Lcd_Set_Cursor
  1428  1206                     l3441:
  1429                           
  1430                           ;main.c: 93:         Lcd_Write_String("S1:   S2:    S3:");
  1431  1206  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1432  1207  00F3               	movwf	Lcd_Write_String@a
  1433  1208  3080               	movlw	128
  1434  1209  00F4               	movwf	Lcd_Write_String@a+1
  1435  120A  160A  158A  2523  160A  118A  	fcall	_Lcd_Write_String
  1436  120F                     l3443:
  1437                           
  1438                           ;main.c: 94:         x = adc * 0.0195;
  1439  120F  303C               	movlw	60
  1440  1210  1283               	bcf	3,5	;RP0=0, select bank0
  1441  1211  1303               	bcf	3,6	;RP1=0, select bank0
  1442  1212  00A7               	movwf	___flmul@b+3
  1443  1213  309F               	movlw	159
  1444  1214  00A6               	movwf	___flmul@b+2
  1445  1215  30BE               	movlw	190
  1446  1216  00A5               	movwf	___flmul@b+1
  1447  1217  3077               	movlw	119
  1448  1218  00A4               	movwf	___flmul@b
  1449  1219  1683               	bsf	3,5	;RP0=1, select bank1
  1450  121A  1303               	bcf	3,6	;RP1=0, select bank1
  1451  121B  0852               	movf	_adc^(0+128),w
  1452  121C  00C5               	movwf	??_main^(0+128)
  1453  121D  01C6               	clrf	(??_main^(0+128)+1)
  1454  121E  01C7               	clrf	(??_main^(0+128)+2)
  1455  121F  01C8               	clrf	(??_main^(0+128)+3)
  1456  1220  0848               	movf	(??_main+3)^(0+128),w
  1457  1221  00F3               	movwf	___xxtofl@val+3
  1458  1222  0847               	movf	(??_main+2)^(0+128),w
  1459  1223  00F2               	movwf	___xxtofl@val+2
  1460  1224  0846               	movf	(??_main+1)^(0+128),w
  1461  1225  00F1               	movwf	___xxtofl@val+1
  1462  1226  0845               	movf	??_main^(0+128),w
  1463  1227  00F0               	movwf	___xxtofl@val
  1464  1228  3001               	movlw	1
  1465  1229  160A  158A  2746  160A  118A  	fcall	___xxtofl
  1466  122E  0873               	movf	?___xxtofl+3,w
  1467  122F  1283               	bcf	3,5	;RP0=0, select bank0
  1468  1230  1303               	bcf	3,6	;RP1=0, select bank0
  1469  1231  00AB               	movwf	___flmul@a+3
  1470  1232  0872               	movf	?___xxtofl+2,w
  1471  1233  00AA               	movwf	___flmul@a+2
  1472  1234  0871               	movf	?___xxtofl+1,w
  1473  1235  00A9               	movwf	___flmul@a+1
  1474  1236  0870               	movf	?___xxtofl,w
  1475  1237  00A8               	movwf	___flmul@a
  1476  1238  120A  158A  249F  160A  118A  	fcall	___flmul
  1477  123D  1283               	bcf	3,5	;RP0=0, select bank0
  1478  123E  1303               	bcf	3,6	;RP1=0, select bank0
  1479  123F  0827               	movf	?___flmul+3,w
  1480  1240  1683               	bsf	3,5	;RP0=1, select bank1
  1481  1241  1303               	bcf	3,6	;RP1=0, select bank1
  1482  1242  00D0               	movwf	(_x+3)^(0+128)
  1483  1243  1283               	bcf	3,5	;RP0=0, select bank0
  1484  1244  1303               	bcf	3,6	;RP1=0, select bank0
  1485  1245  0826               	movf	?___flmul+2,w
  1486  1246  1683               	bsf	3,5	;RP0=1, select bank1
  1487  1247  1303               	bcf	3,6	;RP1=0, select bank1
  1488  1248  00CF               	movwf	(_x+2)^(0+128)
  1489  1249  1283               	bcf	3,5	;RP0=0, select bank0
  1490  124A  1303               	bcf	3,6	;RP1=0, select bank0
  1491  124B  0825               	movf	?___flmul+1,w
  1492  124C  1683               	bsf	3,5	;RP0=1, select bank1
  1493  124D  1303               	bcf	3,6	;RP1=0, select bank1
  1494  124E  00CE               	movwf	(_x+1)^(0+128)
  1495  124F  1283               	bcf	3,5	;RP0=0, select bank0
  1496  1250  1303               	bcf	3,6	;RP1=0, select bank0
  1497  1251  0824               	movf	?___flmul,w
  1498  1252  1683               	bsf	3,5	;RP0=1, select bank1
  1499  1253  1303               	bcf	3,6	;RP1=0, select bank1
  1500  1254  00CD               	movwf	_x^(0+128)
  1501  1255                     l3445:
  1502                           
  1503                           ;main.c: 95:         Lcd_Set_Cursor(2, 1);
  1504  1255  01F4               	clrf	Lcd_Set_Cursor@b
  1505  1256  0AF4               	incf	Lcd_Set_Cursor@b,f
  1506  1257  3002               	movlw	2
  1507  1258  160A  158A  2414  160A  118A  	fcall	_Lcd_Set_Cursor
  1508  125D                     l3447:
  1509                           
  1510                           ;main.c: 96:         sprintf(s, "%3.2fV", x);
  1511  125D  30A9               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1512  125E  1683               	bsf	3,5	;RP0=1, select bank1
  1513  125F  1303               	bcf	3,6	;RP1=0, select bank1
  1514  1260  00C5               	movwf	??_main^(0+128)
  1515  1261  0845               	movf	??_main^(0+128),w
  1516  1262  00A0               	movwf	sprintf@f^(0+128)
  1517  1263  0850               	movf	(_x+3)^(0+128),w
  1518  1264  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1519  1265  084F               	movf	(_x+2)^(0+128),w
  1520  1266  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1521  1267  084E               	movf	(_x+1)^(0+128),w
  1522  1268  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1523  1269  084D               	movf	_x^(0+128),w
  1524  126A  00A1               	movwf	(?_sprintf^(0+128)+1)
  1525  126B  30D3               	movlw	(low (_s| 0))& (0+255)
  1526  126C  120A  118A  2071  160A  118A  	fcall	_sprintf
  1527  1271                     l3449:
  1528                           
  1529                           ;main.c: 97:         Lcd_Write_String(s);
  1530  1271  30D3               	movlw	(low (_s| 0))& (0+255)
  1531  1272  00F3               	movwf	Lcd_Write_String@a
  1532  1273  3000               	movlw	0
  1533  1274  00F4               	movwf	Lcd_Write_String@a+1
  1534  1275  160A  158A  2523  160A  118A  	fcall	_Lcd_Write_String
  1535  127A                     l3451:
  1536                           
  1537                           ;main.c: 102:         p = 1.95 * lmm;
  1538  127A  303F               	movlw	63
  1539  127B  1283               	bcf	3,5	;RP0=0, select bank0
  1540  127C  1303               	bcf	3,6	;RP1=0, select bank0
  1541  127D  00A7               	movwf	___flmul@b+3
  1542  127E  30F9               	movlw	249
  1543  127F  00A6               	movwf	___flmul@b+2
  1544  1280  3099               	movlw	153
  1545  1281  00A5               	movwf	___flmul@b+1
  1546  1282  309A               	movlw	154
  1547  1283  00A4               	movwf	___flmul@b
  1548  1284  1683               	bsf	3,5	;RP0=1, select bank1
  1549  1285  1303               	bcf	3,6	;RP1=0, select bank1
  1550  1286  0867               	movf	_lmm^(0+128),w
  1551  1287  00C5               	movwf	??_main^(0+128)
  1552  1288  01C6               	clrf	(??_main^(0+128)+1)
  1553  1289  01C7               	clrf	(??_main^(0+128)+2)
  1554  128A  01C8               	clrf	(??_main^(0+128)+3)
  1555  128B  0848               	movf	(??_main+3)^(0+128),w
  1556  128C  00F3               	movwf	___xxtofl@val+3
  1557  128D  0847               	movf	(??_main+2)^(0+128),w
  1558  128E  00F2               	movwf	___xxtofl@val+2
  1559  128F  0846               	movf	(??_main+1)^(0+128),w
  1560  1290  00F1               	movwf	___xxtofl@val+1
  1561  1291  0845               	movf	??_main^(0+128),w
  1562  1292  00F0               	movwf	___xxtofl@val
  1563  1293  3001               	movlw	1
  1564  1294  160A  158A  2746  160A  118A  	fcall	___xxtofl
  1565  1299  0873               	movf	?___xxtofl+3,w
  1566  129A  1283               	bcf	3,5	;RP0=0, select bank0
  1567  129B  1303               	bcf	3,6	;RP1=0, select bank0
  1568  129C  00AB               	movwf	___flmul@a+3
  1569  129D  0872               	movf	?___xxtofl+2,w
  1570  129E  00AA               	movwf	___flmul@a+2
  1571  129F  0871               	movf	?___xxtofl+1,w
  1572  12A0  00A9               	movwf	___flmul@a+1
  1573  12A1  0870               	movf	?___xxtofl,w
  1574  12A2  00A8               	movwf	___flmul@a
  1575  12A3  120A  158A  249F  160A  118A  	fcall	___flmul
  1576  12A8  1283               	bcf	3,5	;RP0=0, select bank0
  1577  12A9  1303               	bcf	3,6	;RP1=0, select bank0
  1578  12AA  0827               	movf	?___flmul+3,w
  1579  12AB  1683               	bsf	3,5	;RP0=1, select bank1
  1580  12AC  1303               	bcf	3,6	;RP1=0, select bank1
  1581  12AD  00CC               	movwf	(_p+3)^(0+128)
  1582  12AE  1283               	bcf	3,5	;RP0=0, select bank0
  1583  12AF  1303               	bcf	3,6	;RP1=0, select bank0
  1584  12B0  0826               	movf	?___flmul+2,w
  1585  12B1  1683               	bsf	3,5	;RP0=1, select bank1
  1586  12B2  1303               	bcf	3,6	;RP1=0, select bank1
  1587  12B3  00CB               	movwf	(_p+2)^(0+128)
  1588  12B4  1283               	bcf	3,5	;RP0=0, select bank0
  1589  12B5  1303               	bcf	3,6	;RP1=0, select bank0
  1590  12B6  0825               	movf	?___flmul+1,w
  1591  12B7  1683               	bsf	3,5	;RP0=1, select bank1
  1592  12B8  1303               	bcf	3,6	;RP1=0, select bank1
  1593  12B9  00CA               	movwf	(_p+1)^(0+128)
  1594  12BA  1283               	bcf	3,5	;RP0=0, select bank0
  1595  12BB  1303               	bcf	3,6	;RP1=0, select bank0
  1596  12BC  0824               	movf	?___flmul,w
  1597  12BD  1683               	bsf	3,5	;RP0=1, select bank1
  1598  12BE  1303               	bcf	3,6	;RP1=0, select bank1
  1599  12BF  00C9               	movwf	_p^(0+128)
  1600  12C0                     l3453:
  1601                           
  1602                           ;main.c: 104:         Lcd_Set_Cursor(2, 9);
  1603  12C0  3009               	movlw	9
  1604  12C1  00C5               	movwf	??_main^(0+128)
  1605  12C2  0845               	movf	??_main^(0+128),w
  1606  12C3  00F4               	movwf	Lcd_Set_Cursor@b
  1607  12C4  3002               	movlw	2
  1608  12C5  160A  158A  2414  160A  118A  	fcall	_Lcd_Set_Cursor
  1609  12CA                     l3455:
  1610                           
  1611                           ;main.c: 105:         sprintf(s, "%3.0fC", p);
  1612  12CA  30A2               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1613  12CB  1683               	bsf	3,5	;RP0=1, select bank1
  1614  12CC  1303               	bcf	3,6	;RP1=0, select bank1
  1615  12CD  00C5               	movwf	??_main^(0+128)
  1616  12CE  0845               	movf	??_main^(0+128),w
  1617  12CF  00A0               	movwf	sprintf@f^(0+128)
  1618  12D0  084C               	movf	(_p+3)^(0+128),w
  1619  12D1  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1620  12D2  084B               	movf	(_p+2)^(0+128),w
  1621  12D3  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1622  12D4  084A               	movf	(_p+1)^(0+128),w
  1623  12D5  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1624  12D6  0849               	movf	_p^(0+128),w
  1625  12D7  00A1               	movwf	(?_sprintf^(0+128)+1)
  1626  12D8  30D3               	movlw	(low (_s| 0))& (0+255)
  1627  12D9  120A  118A  2071  160A  118A  	fcall	_sprintf
  1628  12DE                     l3457:
  1629                           
  1630                           ;main.c: 106:         Lcd_Write_String(s);
  1631  12DE  30D3               	movlw	(low (_s| 0))& (0+255)
  1632  12DF  00F3               	movwf	Lcd_Write_String@a
  1633  12E0  3000               	movlw	0
  1634  12E1  00F4               	movwf	Lcd_Write_String@a+1
  1635  12E2  160A  158A  2523  160A  118A  	fcall	_Lcd_Write_String
  1636  12E7                     l3459:
  1637                           
  1638                           ;main.c: 113:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1639  12E7  3003               	movlw	3
  1640  12E8  1683               	bsf	3,5	;RP0=1, select bank1
  1641  12E9  1303               	bcf	3,6	;RP1=0, select bank1
  1642  12EA  00C6               	movwf	(??_main^(0+128)+1)
  1643  12EB  3097               	movlw	151
  1644  12EC  00C5               	movwf	??_main^(0+128)
  1645  12ED                     u5607:
  1646  12ED  0BC5               	decfsz	??_main^(0+128),f
  1647  12EE  2AED               	goto	u5607
  1648  12EF  0BC6               	decfsz	(??_main^(0+128)+1),f
  1649  12F0  2AED               	goto	u5607
  1650  12F1                     l3461:
  1651                           
  1652                           ;main.c: 114:         PORTCbits.RC0 = 0;
  1653  12F1  1283               	bcf	3,5	;RP0=0, select bank0
  1654  12F2  1303               	bcf	3,6	;RP1=0, select bank0
  1655  12F3  1007               	bcf	7,0	;volatile
  1656  12F4                     l3463:
  1657                           
  1658                           ;main.c: 115:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1659  12F4  3003               	movlw	3
  1660  12F5  1683               	bsf	3,5	;RP0=1, select bank1
  1661  12F6  1303               	bcf	3,6	;RP1=0, select bank1
  1662  12F7  00C6               	movwf	(??_main^(0+128)+1)
  1663  12F8  3097               	movlw	151
  1664  12F9  00C5               	movwf	??_main^(0+128)
  1665  12FA                     u5617:
  1666  12FA  0BC5               	decfsz	??_main^(0+128),f
  1667  12FB  2AFA               	goto	u5617
  1668  12FC  0BC6               	decfsz	(??_main^(0+128)+1),f
  1669  12FD  2AFA               	goto	u5617
  1670  12FE                     l3465:
  1671                           
  1672                           ;main.c: 116:         SSPBUF = 0;
  1673  12FE  1283               	bcf	3,5	;RP0=0, select bank0
  1674  12FF  1303               	bcf	3,6	;RP1=0, select bank0
  1675  1300  0193               	clrf	19	;volatile
  1676  1301                     l3467:
  1677                           
  1678                           ;main.c: 117:         adc = spiRead();
  1679  1301  160A  158A  2383  160A  118A  	fcall	_spiRead
  1680  1306  1683               	bsf	3,5	;RP0=1, select bank1
  1681  1307  1303               	bcf	3,6	;RP1=0, select bank1
  1682  1308  00C5               	movwf	??_main^(0+128)
  1683  1309  0845               	movf	??_main^(0+128),w
  1684  130A  00D2               	movwf	_adc^(0+128)
  1685  130B                     l3469:
  1686                           
  1687                           ;main.c: 118:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1688  130B  3003               	movlw	3
  1689  130C  1683               	bsf	3,5	;RP0=1, select bank1
  1690  130D  1303               	bcf	3,6	;RP1=0, select bank1
  1691  130E  00C6               	movwf	(??_main^(0+128)+1)
  1692  130F  3097               	movlw	151
  1693  1310  00C5               	movwf	??_main^(0+128)
  1694  1311                     u5627:
  1695  1311  0BC5               	decfsz	??_main^(0+128),f
  1696  1312  2B11               	goto	u5627
  1697  1313  0BC6               	decfsz	(??_main^(0+128)+1),f
  1698  1314  2B11               	goto	u5627
  1699  1315                     l3471:
  1700                           
  1701                           ;main.c: 119:         PORTCbits.RC0 = 1;
  1702  1315  1283               	bcf	3,5	;RP0=0, select bank0
  1703  1316  1303               	bcf	3,6	;RP1=0, select bank0
  1704  1317  1407               	bsf	7,0	;volatile
  1705  1318                     l3473:
  1706                           
  1707                           ;main.c: 120:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1708  1318  3003               	movlw	3
  1709  1319  1683               	bsf	3,5	;RP0=1, select bank1
  1710  131A  1303               	bcf	3,6	;RP1=0, select bank1
  1711  131B  00C7               	movwf	(??_main^(0+128)+2)
  1712  131C  3008               	movlw	8
  1713  131D  00C6               	movwf	(??_main^(0+128)+1)
  1714  131E  3076               	movlw	118
  1715  131F  00C5               	movwf	??_main^(0+128)
  1716  1320                     u5637:
  1717  1320  0BC5               	decfsz	??_main^(0+128),f
  1718  1321  2B20               	goto	u5637
  1719  1322  0BC6               	decfsz	(??_main^(0+128)+1),f
  1720  1323  2B20               	goto	u5637
  1721  1324  0BC7               	decfsz	(??_main^(0+128)+2),f
  1722  1325  2B20               	goto	u5637
  1723  1326  0000               	nop
  1724  1327                     l3475:
  1725                           
  1726                           ;main.c: 125:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1727  1327  301A               	movlw	26
  1728  1328  1683               	bsf	3,5	;RP0=1, select bank1
  1729  1329  1303               	bcf	3,6	;RP1=0, select bank1
  1730  132A  00C6               	movwf	(??_main^(0+128)+1)
  1731  132B  30F7               	movlw	247
  1732  132C  00C5               	movwf	??_main^(0+128)
  1733  132D                     u5647:
  1734  132D  0BC5               	decfsz	??_main^(0+128),f
  1735  132E  2B2D               	goto	u5647
  1736  132F  0BC6               	decfsz	(??_main^(0+128)+1),f
  1737  1330  2B2D               	goto	u5647
  1738  1331  2B32               	nop2
  1739  1332                     l3477:
  1740                           
  1741                           ;main.c: 126:         PORTCbits.RC2 = 0;
  1742  1332  1283               	bcf	3,5	;RP0=0, select bank0
  1743  1333  1303               	bcf	3,6	;RP1=0, select bank0
  1744  1334  1107               	bcf	7,2	;volatile
  1745  1335                     l3479:
  1746                           
  1747                           ;main.c: 127:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1748  1335  301A               	movlw	26
  1749  1336  1683               	bsf	3,5	;RP0=1, select bank1
  1750  1337  1303               	bcf	3,6	;RP1=0, select bank1
  1751  1338  00C6               	movwf	(??_main^(0+128)+1)
  1752  1339  30F7               	movlw	247
  1753  133A  00C5               	movwf	??_main^(0+128)
  1754  133B                     u5657:
  1755  133B  0BC5               	decfsz	??_main^(0+128),f
  1756  133C  2B3B               	goto	u5657
  1757  133D  0BC6               	decfsz	(??_main^(0+128)+1),f
  1758  133E  2B3B               	goto	u5657
  1759  133F  2B40               	nop2
  1760  1340                     l3481:
  1761                           
  1762                           ;main.c: 128:         SSPBUF = 0;
  1763  1340  1283               	bcf	3,5	;RP0=0, select bank0
  1764  1341  1303               	bcf	3,6	;RP1=0, select bank0
  1765  1342  0193               	clrf	19	;volatile
  1766  1343                     l3483:
  1767                           
  1768                           ;main.c: 130:         lmm = spiRead();
  1769  1343  160A  158A  2383  160A  118A  	fcall	_spiRead
  1770  1348  1683               	bsf	3,5	;RP0=1, select bank1
  1771  1349  1303               	bcf	3,6	;RP1=0, select bank1
  1772  134A  00C5               	movwf	??_main^(0+128)
  1773  134B  0845               	movf	??_main^(0+128),w
  1774  134C  00E7               	movwf	_lmm^(0+128)
  1775  134D                     l3485:
  1776                           
  1777                           ;main.c: 131:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1778  134D  3003               	movlw	3
  1779  134E  1683               	bsf	3,5	;RP0=1, select bank1
  1780  134F  1303               	bcf	3,6	;RP1=0, select bank1
  1781  1350  00C6               	movwf	(??_main^(0+128)+1)
  1782  1351  3097               	movlw	151
  1783  1352  00C5               	movwf	??_main^(0+128)
  1784  1353                     u5667:
  1785  1353  0BC5               	decfsz	??_main^(0+128),f
  1786  1354  2B53               	goto	u5667
  1787  1355  0BC6               	decfsz	(??_main^(0+128)+1),f
  1788  1356  2B53               	goto	u5667
  1789  1357                     l3487:
  1790                           
  1791                           ;main.c: 132:         PORTCbits.RC2 = 1;
  1792  1357  1283               	bcf	3,5	;RP0=0, select bank0
  1793  1358  1303               	bcf	3,6	;RP1=0, select bank0
  1794  1359  1507               	bsf	7,2	;volatile
  1795  135A                     l3489:
  1796                           
  1797                           ;main.c: 133:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1798  135A  3003               	movlw	3
  1799  135B  1683               	bsf	3,5	;RP0=1, select bank1
  1800  135C  1303               	bcf	3,6	;RP1=0, select bank1
  1801  135D  00C7               	movwf	(??_main^(0+128)+2)
  1802  135E  3008               	movlw	8
  1803  135F  00C6               	movwf	(??_main^(0+128)+1)
  1804  1360  3076               	movlw	118
  1805  1361  00C5               	movwf	??_main^(0+128)
  1806  1362                     u5677:
  1807  1362  0BC5               	decfsz	??_main^(0+128),f
  1808  1363  2B62               	goto	u5677
  1809  1364  0BC6               	decfsz	(??_main^(0+128)+1),f
  1810  1365  2B62               	goto	u5677
  1811  1366  0BC7               	decfsz	(??_main^(0+128)+2),f
  1812  1367  2B62               	goto	u5677
  1813  1368  0000               	nop
  1814  1369  29FE               	goto	l97
  1815  136A  120A  118A  2800   	ljmp	start
  1816  136D                     __end_of_main:
  1817                           
  1818                           	psect	text1
  1819  0071                     __ptext1:	
  1820 ;; *************** function _sprintf *****************
  1821 ;; Defined at:
  1822 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1823 ;; Parameters:    Size  Location     Type
  1824 ;;  sp              1    wreg     PTR unsigned char 
  1825 ;;		 -> s(20), 
  1826 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1827 ;;		 -> STR_3(7), STR_2(7), 
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  sp              1   33[BANK1 ] PTR unsigned char 
  1830 ;;		 -> s(20), 
  1831 ;;  fval            4   29[BANK1 ] PTR unsigned char 
  1832 ;;  tmpval          4   23[BANK1 ] struct .
  1833 ;;  val             4   15[BANK1 ] unsigned long 
  1834 ;;  prec            2   34[BANK1 ] int 
  1835 ;;  eexp            2   27[BANK1 ] int 
  1836 ;;  width           2   21[BANK1 ] int 
  1837 ;;  flag            2   19[BANK1 ] unsigned short 
  1838 ;;  cp              2    0        PTR const unsigned char 
  1839 ;;  len             2    0        unsigned int 
  1840 ;;  c               1   36[BANK1 ] unsigned char 
  1841 ;;  ap              1   14[BANK1 ] PTR void [1]
  1842 ;;		 -> ?_sprintf(2), 
  1843 ;;  d               1    0        unsigned char 
  1844 ;; Return value:  Size  Location     Type
  1845 ;;                  2    0[BANK1 ] int 
  1846 ;; Registers used:
  1847 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1848 ;; Tracked objects:
  1849 ;;		On entry : 0/0
  1850 ;;		On exit  : 0/0
  1851 ;;		Unchanged: 0/0
  1852 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1853 ;;      Params:         0       0       5       0       0
  1854 ;;      Locals:         0       0      27       0       0
  1855 ;;      Temps:          0       0       5       0       0
  1856 ;;      Totals:         0       0      37       0       0
  1857 ;;Total ram usage:       37 bytes
  1858 ;; Hardware stack levels used:    1
  1859 ;; Hardware stack levels required when called:    3
  1860 ;; This function calls:
  1861 ;;		___awdiv
  1862 ;;		___fladd
  1863 ;;		___fleq
  1864 ;;		___flge
  1865 ;;		___flmul
  1866 ;;		___flneg
  1867 ;;		___flsub
  1868 ;;		___fltol
  1869 ;;		___lldiv
  1870 ;;		___llmod
  1871 ;;		___wmul
  1872 ;;		___xxtofl
  1873 ;;		__div_to_l_
  1874 ;;		__tdiv_to_l_
  1875 ;;		_fround
  1876 ;;		_isdigit
  1877 ;;		_scale
  1878 ;; This function is called by:
  1879 ;;		_main
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           
  1884                           ;psect for function _sprintf
  1885  0071                     _sprintf:
  1886                           
  1887                           ;incstack = 0
  1888                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1889                           ;sprintf@sp stored from wreg
  1890  0071  1683               	bsf	3,5	;RP0=1, select bank1
  1891  0072  1303               	bcf	3,6	;RP1=0, select bank1
  1892  0073  00C1               	movwf	sprintf@sp^(0+128)
  1893  0074                     l3171:
  1894                           
  1895                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1896  0074  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1897  0075  00A5               	movwf	??_sprintf^(0+128)
  1898  0076  0825               	movf	??_sprintf^(0+128),w
  1899  0077  00AE               	movwf	sprintf@ap^(0+128)
  1900                           
  1901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1902  0078  2FD5               	goto	l3421
  1903  0079                     l3173:
  1904                           
  1905                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1906  0079  3025               	movlw	37
  1907  007A  0644               	xorwf	sprintf@c^(0+128),w
  1908  007B  1903               	btfsc	3,2
  1909  007C  287E               	goto	u5131
  1910  007D  287F               	goto	u5130
  1911  007E                     u5131:
  1912  007E  288B               	goto	l3179
  1913  007F                     u5130:
  1914  007F                     l3175:
  1915                           
  1916                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1917  007F  0844               	movf	sprintf@c^(0+128),w
  1918  0080  00A5               	movwf	??_sprintf^(0+128)
  1919  0081  0841               	movf	sprintf@sp^(0+128),w
  1920  0082  0084               	movwf	4
  1921  0083  0825               	movf	??_sprintf^(0+128),w
  1922  0084  1383               	bcf	3,7	;select IRP bank0
  1923  0085  0080               	movwf	0
  1924  0086                     l3177:
  1925  0086  3001               	movlw	1
  1926  0087  00A5               	movwf	??_sprintf^(0+128)
  1927  0088  0825               	movf	??_sprintf^(0+128),w
  1928  0089  07C1               	addwf	sprintf@sp^(0+128),f
  1929                           
  1930                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1931  008A  2FD5               	goto	l3421
  1932  008B                     l3179:
  1933                           
  1934                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1935  008B  01B5               	clrf	sprintf@width^(0+128)
  1936  008C  01B6               	clrf	(sprintf@width+1)^(0+128)
  1937                           
  1938                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1939  008D  01B3               	clrf	sprintf@flag^(0+128)
  1940  008E  01B4               	clrf	(sprintf@flag+1)^(0+128)
  1941  008F                     l3181:
  1942                           
  1943                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1944  008F  0820               	movf	sprintf@f^(0+128),w
  1945  0090  0084               	movwf	4
  1946  0091  120A  158A  200A  120A  118A  	fcall	stringdir
  1947  0096  160A  158A  23A4  120A  118A  	fcall	_isdigit
  1948  009B  1C03               	btfss	3,0
  1949  009C  289E               	goto	u5141
  1950  009D  289F               	goto	u5140
  1951  009E                     u5141:
  1952  009E  28DF               	goto	l3193
  1953  009F                     u5140:
  1954  009F                     l3183:
  1955                           
  1956                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1957  009F  1683               	bsf	3,5	;RP0=1, select bank1
  1958  00A0  1303               	bcf	3,6	;RP1=0, select bank1
  1959  00A1  01B5               	clrf	sprintf@width^(0+128)
  1960  00A2  01B6               	clrf	(sprintf@width+1)^(0+128)
  1961  00A3                     l3185:
  1962                           
  1963                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1964  00A3  300A               	movlw	10
  1965  00A4  00F0               	movwf	___wmul@multiplier
  1966  00A5  3000               	movlw	0
  1967  00A6  00F1               	movwf	___wmul@multiplier+1
  1968  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  1969  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  1970  00A9  0836               	movf	(sprintf@width+1)^(0+128),w
  1971  00AA  00F3               	movwf	___wmul@multiplicand+1
  1972  00AB  0835               	movf	sprintf@width^(0+128),w
  1973  00AC  00F2               	movwf	___wmul@multiplicand
  1974  00AD  160A  158A  245C  120A  118A  	fcall	___wmul
  1975  00B2  0871               	movf	?___wmul+1,w
  1976  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  1977  00B4  1303               	bcf	3,6	;RP1=0, select bank1
  1978  00B5  00B6               	movwf	(sprintf@width+1)^(0+128)
  1979  00B6  0870               	movf	?___wmul,w
  1980  00B7  00B5               	movwf	sprintf@width^(0+128)
  1981  00B8                     l3187:
  1982                           
  1983                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1984  00B8  0820               	movf	sprintf@f^(0+128),w
  1985  00B9  0084               	movwf	4
  1986  00BA  120A  158A  200A  120A  118A  	fcall	stringdir
  1987  00BF  3ED0               	addlw	208
  1988  00C0  00A5               	movwf	??_sprintf^(0+128)
  1989  00C1  30FF               	movlw	255
  1990  00C2  1803               	skipnc
  1991  00C3  3000               	movlw	0
  1992  00C4  00A6               	movwf	(??_sprintf^(0+128)+1)
  1993  00C5  0825               	movf	??_sprintf^(0+128),w
  1994  00C6  07B5               	addwf	sprintf@width^(0+128),f
  1995  00C7  1803               	skipnc
  1996  00C8  0AB6               	incf	(sprintf@width+1)^(0+128),f
  1997  00C9  0826               	movf	(??_sprintf+1)^(0+128),w
  1998  00CA  07B6               	addwf	(sprintf@width+1)^(0+128),f
  1999  00CB                     l3189:
  2000  00CB  3001               	movlw	1
  2001  00CC  00A5               	movwf	??_sprintf^(0+128)
  2002  00CD  0825               	movf	??_sprintf^(0+128),w
  2003  00CE  07A0               	addwf	sprintf@f^(0+128),f
  2004  00CF                     l3191:
  2005                           
  2006                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2007  00CF  0820               	movf	sprintf@f^(0+128),w
  2008  00D0  0084               	movwf	4
  2009  00D1  120A  158A  200A  120A  118A  	fcall	stringdir
  2010  00D6  160A  158A  23A4  120A  118A  	fcall	_isdigit
  2011  00DB  1803               	btfsc	3,0
  2012  00DC  28DE               	goto	u5151
  2013  00DD  28DF               	goto	u5150
  2014  00DE                     u5151:
  2015  00DE  28A3               	goto	l3185
  2016  00DF                     u5150:
  2017  00DF                     l3193:
  2018                           
  2019                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2020  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  2021  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  2022  00E1  0820               	movf	sprintf@f^(0+128),w
  2023  00E2  0084               	movwf	4
  2024  00E3  120A  158A  200A  120A  118A  	fcall	stringdir
  2025  00E8  3A2E               	xorlw	46
  2026  00E9  1D03               	skipz
  2027  00EA  28EC               	goto	u5161
  2028  00EB  28ED               	goto	u5160
  2029  00EC                     u5161:
  2030  00EC  2932               	goto	l3209
  2031  00ED                     u5160:
  2032  00ED                     l3195:
  2033                           
  2034                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2035  00ED  1734               	bsf	(sprintf@flag^(0+128)+1),6
  2036  00EE                     l3197:
  2037                           
  2038                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2039  00EE  3001               	movlw	1
  2040  00EF  00A5               	movwf	??_sprintf^(0+128)
  2041  00F0  0825               	movf	??_sprintf^(0+128),w
  2042  00F1  07A0               	addwf	sprintf@f^(0+128),f
  2043  00F2                     l3199:
  2044                           
  2045                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2046  00F2  01C2               	clrf	sprintf@prec^(0+128)
  2047  00F3  01C3               	clrf	(sprintf@prec+1)^(0+128)
  2048                           
  2049                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2050  00F4  2921               	goto	l3207
  2051  00F5                     l3201:
  2052                           
  2053                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2054  00F5  300A               	movlw	10
  2055  00F6  00F0               	movwf	___wmul@multiplier
  2056  00F7  3000               	movlw	0
  2057  00F8  00F1               	movwf	___wmul@multiplier+1
  2058  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  2059  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  2060  00FB  0843               	movf	(sprintf@prec+1)^(0+128),w
  2061  00FC  00F3               	movwf	___wmul@multiplicand+1
  2062  00FD  0842               	movf	sprintf@prec^(0+128),w
  2063  00FE  00F2               	movwf	___wmul@multiplicand
  2064  00FF  160A  158A  245C  120A  118A  	fcall	___wmul
  2065  0104  0871               	movf	?___wmul+1,w
  2066  0105  1683               	bsf	3,5	;RP0=1, select bank1
  2067  0106  1303               	bcf	3,6	;RP1=0, select bank1
  2068  0107  00C3               	movwf	(sprintf@prec+1)^(0+128)
  2069  0108  0870               	movf	?___wmul,w
  2070  0109  00C2               	movwf	sprintf@prec^(0+128)
  2071  010A                     l3203:
  2072                           
  2073                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2074  010A  0820               	movf	sprintf@f^(0+128),w
  2075  010B  0084               	movwf	4
  2076  010C  120A  158A  200A  120A  118A  	fcall	stringdir
  2077  0111  3ED0               	addlw	208
  2078  0112  00A5               	movwf	??_sprintf^(0+128)
  2079  0113  30FF               	movlw	255
  2080  0114  1803               	skipnc
  2081  0115  3000               	movlw	0
  2082  0116  00A6               	movwf	(??_sprintf^(0+128)+1)
  2083  0117  0825               	movf	??_sprintf^(0+128),w
  2084  0118  07C2               	addwf	sprintf@prec^(0+128),f
  2085  0119  1803               	skipnc
  2086  011A  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  2087  011B  0826               	movf	(??_sprintf+1)^(0+128),w
  2088  011C  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  2089  011D                     l3205:
  2090  011D  3001               	movlw	1
  2091  011E  00A5               	movwf	??_sprintf^(0+128)
  2092  011F  0825               	movf	??_sprintf^(0+128),w
  2093  0120  07A0               	addwf	sprintf@f^(0+128),f
  2094  0121                     l3207:
  2095                           
  2096                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2097  0121  0820               	movf	sprintf@f^(0+128),w
  2098  0122  0084               	movwf	4
  2099  0123  120A  158A  200A  120A  118A  	fcall	stringdir
  2100  0128  160A  158A  23A4  120A  118A  	fcall	_isdigit
  2101  012D  1803               	btfsc	3,0
  2102  012E  2930               	goto	u5171
  2103  012F  2931               	goto	u5170
  2104  0130                     u5171:
  2105  0130  28F5               	goto	l3201
  2106  0131                     u5170:
  2107  0131  2938               	goto	l3215
  2108  0132                     l3209:
  2109                           
  2110                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2111  0132  01C2               	clrf	sprintf@prec^(0+128)
  2112  0133  01C3               	clrf	(sprintf@prec+1)^(0+128)
  2113  0134                     l3211:
  2114                           
  2115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2116  0134  1634               	bsf	(sprintf@flag^(0+128)+1),4
  2117  0135  2938               	goto	l3215
  2118  0136                     l307:	
  2119                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2120                           
  2121                           
  2122                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2123  0136  1534               	bsf	(sprintf@flag^(0+128)+1),2
  2124                           
  2125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2126  0137  2954               	goto	l3217
  2127  0138                     l3215:
  2128  0138  3001               	movlw	1
  2129  0139  1683               	bsf	3,5	;RP0=1, select bank1
  2130  013A  1303               	bcf	3,6	;RP1=0, select bank1
  2131  013B  07A0               	addwf	sprintf@f^(0+128),f
  2132  013C  30FF               	movlw	-1
  2133  013D  0720               	addwf	sprintf@f^(0+128),w
  2134  013E  0084               	movwf	4
  2135  013F  120A  158A  200A  120A  118A  	fcall	stringdir
  2136  0144  00C4               	movwf	sprintf@c^(0+128)
  2137  0145  00A5               	movwf	??_sprintf^(0+128)
  2138  0146  01A6               	clrf	(??_sprintf^(0+128)+1)
  2139                           
  2140                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2141                           ; Switch size 1, requested type "simple"
  2142                           ; Number of cases is 1, Range of values is 0 to 0
  2143                           ; switch strategies available:
  2144                           ; Name         Instructions Cycles
  2145                           ; simple_byte            4     3 (average)
  2146                           ; direct_byte           11     8 (fixed)
  2147                           ; jumptable            260     6 (fixed)
  2148                           ;	Chosen strategy is simple_byte
  2149  0147  0826               	movf	(??_sprintf+1)^(0+128),w
  2150  0148  3A00               	xorlw	0	; case 0
  2151  0149  1903               	skipnz
  2152  014A  294C               	goto	l3521
  2153  014B  2FD5               	goto	l3421
  2154  014C                     l3521:
  2155                           
  2156                           ; Switch size 1, requested type "simple"
  2157                           ; Number of cases is 2, Range of values is 0 to 102
  2158                           ; switch strategies available:
  2159                           ; Name         Instructions Cycles
  2160                           ; simple_byte            7     4 (average)
  2161                           ; jumptable            260     6 (fixed)
  2162                           ;	Chosen strategy is simple_byte
  2163  014C  0825               	movf	??_sprintf^(0+128),w
  2164  014D  3A00               	xorlw	0	; case 0
  2165  014E  1903               	skipnz
  2166  014F  2FE7               	goto	l3423
  2167  0150  3A66               	xorlw	102	; case 102
  2168  0151  1903               	skipnz
  2169  0152  2936               	goto	l307
  2170  0153  2FD5               	goto	l3421
  2171  0154                     l3217:
  2172                           
  2173                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2174  0154  3000               	movlw	0
  2175  0155  0533               	andwf	sprintf@flag^(0+128),w
  2176  0156  00A5               	movwf	??_sprintf^(0+128)
  2177  0157  3007               	movlw	7
  2178  0158  0534               	andwf	(sprintf@flag+1)^(0+128),w
  2179  0159  00A6               	movwf	(??_sprintf+1)^(0+128)
  2180  015A  0825               	movf	??_sprintf^(0+128),w
  2181  015B  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2182  015C  1903               	btfsc	3,2
  2183  015D  295F               	goto	u5181
  2184  015E  2960               	goto	u5180
  2185  015F                     u5181:
  2186  015F  2F12               	goto	l3375
  2187  0160                     u5180:
  2188  0160                     l3219:
  2189                           
  2190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2191  0160  1E34               	btfss	(sprintf@flag+1)^(0+128),4
  2192  0161  2963               	goto	u5191
  2193  0162  2964               	goto	u5190
  2194  0163                     u5191:
  2195  0163  2968               	goto	l3223
  2196  0164                     u5190:
  2197  0164                     l3221:
  2198                           
  2199                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2200  0164  3006               	movlw	6
  2201  0165  00C2               	movwf	sprintf@prec^(0+128)
  2202  0166  3000               	movlw	0
  2203  0167  00C3               	movwf	(sprintf@prec^(0+128)+1)
  2204  0168                     l3223:
  2205                           
  2206                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2207  0168  082E               	movf	sprintf@ap^(0+128),w
  2208  0169  0084               	movwf	4
  2209  016A  1383               	bcf	3,7	;select IRP bank0
  2210  016B  0800               	movf	0,w
  2211  016C  00BD               	movwf	sprintf@fval^(0+128)
  2212  016D  0A84               	incf	4,f
  2213  016E  0800               	movf	0,w
  2214  016F  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2215  0170  0A84               	incf	4,f
  2216  0171  0800               	movf	0,w
  2217  0172  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2218  0173  0A84               	incf	4,f
  2219  0174  0800               	movf	0,w
  2220  0175  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2221  0176                     l3225:
  2222  0176  3004               	movlw	4
  2223  0177  00A5               	movwf	??_sprintf^(0+128)
  2224  0178  0825               	movf	??_sprintf^(0+128),w
  2225  0179  07AE               	addwf	sprintf@ap^(0+128),f
  2226  017A                     l3227:
  2227                           
  2228                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2229  017A  0840               	movf	(sprintf@fval+3)^(0+128),w
  2230  017B  00F3               	movwf	___flge@ff1+3
  2231  017C  083F               	movf	(sprintf@fval+2)^(0+128),w
  2232  017D  00F2               	movwf	___flge@ff1+2
  2233  017E  083E               	movf	(sprintf@fval+1)^(0+128),w
  2234  017F  00F1               	movwf	___flge@ff1+1
  2235  0180  083D               	movf	sprintf@fval^(0+128),w
  2236  0181  00F0               	movwf	___flge@ff1
  2237  0182  3000               	movlw	0
  2238  0183  00F7               	movwf	___flge@ff2+3
  2239  0184  3000               	movlw	0
  2240  0185  00F6               	movwf	___flge@ff2+2
  2241  0186  3000               	movlw	0
  2242  0187  00F5               	movwf	___flge@ff2+1
  2243  0188  3000               	movlw	0
  2244  0189  00F4               	movwf	___flge@ff2
  2245  018A  160A  158A  26A4  120A  118A  	fcall	___flge
  2246  018F  1803               	btfsc	3,0
  2247  0190  2992               	goto	u5201
  2248  0191  2993               	goto	u5200
  2249  0192                     u5201:
  2250  0192  29B0               	goto	l3233
  2251  0193                     u5200:
  2252  0193                     l3229:
  2253                           
  2254                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2255  0193  1683               	bsf	3,5	;RP0=1, select bank1
  2256  0194  1303               	bcf	3,6	;RP1=0, select bank1
  2257  0195  0840               	movf	(sprintf@fval+3)^(0+128),w
  2258  0196  00F3               	movwf	___flneg@f1+3
  2259  0197  083F               	movf	(sprintf@fval+2)^(0+128),w
  2260  0198  00F2               	movwf	___flneg@f1+2
  2261  0199  083E               	movf	(sprintf@fval+1)^(0+128),w
  2262  019A  00F1               	movwf	___flneg@f1+1
  2263  019B  083D               	movf	sprintf@fval^(0+128),w
  2264  019C  00F0               	movwf	___flneg@f1
  2265  019D  160A  158A  238C  120A  118A  	fcall	___flneg
  2266  01A2  0873               	movf	?___flneg+3,w
  2267  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  2268  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  2269  01A5  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2270  01A6  0872               	movf	?___flneg+2,w
  2271  01A7  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2272  01A8  0871               	movf	?___flneg+1,w
  2273  01A9  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2274  01AA  0870               	movf	?___flneg,w
  2275  01AB  00BD               	movwf	sprintf@fval^(0+128)
  2276  01AC                     l3231:
  2277                           
  2278                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2279  01AC  3003               	movlw	3
  2280  01AD  04B3               	iorwf	sprintf@flag^(0+128),f
  2281  01AE  3000               	movlw	0
  2282  01AF  04B4               	iorwf	(sprintf@flag+1)^(0+128),f
  2283  01B0                     l3233:
  2284                           
  2285                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2286  01B0  1683               	bsf	3,5	;RP0=1, select bank1
  2287  01B1  1303               	bcf	3,6	;RP1=0, select bank1
  2288  01B2  01BB               	clrf	sprintf@eexp^(0+128)
  2289  01B3  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  2290  01B4                     l3235:
  2291                           
  2292                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2293  01B4  0840               	movf	(sprintf@fval+3)^(0+128),w
  2294  01B5  00F3               	movwf	___fleq@ff1+3
  2295  01B6  083F               	movf	(sprintf@fval+2)^(0+128),w
  2296  01B7  00F2               	movwf	___fleq@ff1+2
  2297  01B8  083E               	movf	(sprintf@fval+1)^(0+128),w
  2298  01B9  00F1               	movwf	___fleq@ff1+1
  2299  01BA  083D               	movf	sprintf@fval^(0+128),w
  2300  01BB  00F0               	movwf	___fleq@ff1
  2301  01BC  3000               	movlw	0
  2302  01BD  00F7               	movwf	___fleq@ff2+3
  2303  01BE  3000               	movlw	0
  2304  01BF  00F6               	movwf	___fleq@ff2+2
  2305  01C0  3000               	movlw	0
  2306  01C1  00F5               	movwf	___fleq@ff2+1
  2307  01C2  3000               	movlw	0
  2308  01C3  00F4               	movwf	___fleq@ff2
  2309  01C4  160A  158A  25A9  120A  118A  	fcall	___fleq
  2310  01C9  1803               	btfsc	3,0
  2311  01CA  29CC               	goto	u5211
  2312  01CB  29CD               	goto	u5210
  2313  01CC                     u5211:
  2314  01CC  2ABD               	goto	l3261
  2315  01CD                     u5210:
  2316  01CD                     l3237:
  2317                           
  2318                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2319  01CD  1003               	clrc
  2320  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  2321  01CF  1303               	bcf	3,6	;RP1=0, select bank1
  2322  01D0  0D3F               	rlf	(sprintf@fval+2)^(0+128),w
  2323  01D1  0D40               	rlf	(sprintf@fval+3)^(0+128),w
  2324  01D2  3E82               	addlw	130
  2325  01D3  00BB               	movwf	sprintf@eexp^(0+128)
  2326  01D4  30FF               	movlw	255
  2327  01D5  1803               	skipnc
  2328  01D6  3000               	movlw	0
  2329  01D7  00BC               	movwf	(sprintf@eexp^(0+128)+1)
  2330  01D8                     l3239:
  2331                           
  2332                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2333  01D8  30FF               	movlw	255
  2334  01D9  07BB               	addwf	sprintf@eexp^(0+128),f
  2335  01DA  1803               	skipnc
  2336  01DB  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2337  01DC  30FF               	movlw	255
  2338  01DD  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2339  01DE                     l3241:
  2340                           
  2341                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2342  01DE  3003               	movlw	3
  2343  01DF  00F0               	movwf	___wmul@multiplier
  2344  01E0  3000               	movlw	0
  2345  01E1  00F1               	movwf	___wmul@multiplier+1
  2346  01E2  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2347  01E3  00F3               	movwf	___wmul@multiplicand+1
  2348  01E4  083B               	movf	sprintf@eexp^(0+128),w
  2349  01E5  00F2               	movwf	___wmul@multiplicand
  2350  01E6  160A  158A  245C  120A  118A  	fcall	___wmul
  2351  01EB  0871               	movf	?___wmul+1,w
  2352  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  2353  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  2354  01EE  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2355  01EF  0870               	movf	?___wmul,w
  2356  01F0  00BB               	movwf	sprintf@eexp^(0+128)
  2357  01F1                     l3243:
  2358                           
  2359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2360  01F1  300A               	movlw	10
  2361  01F2  00F7               	movwf	___awdiv@divisor
  2362  01F3  3000               	movlw	0
  2363  01F4  00F8               	movwf	___awdiv@divisor+1
  2364  01F5  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2365  01F6  00FA               	movwf	___awdiv@dividend+1
  2366  01F7  083B               	movf	sprintf@eexp^(0+128),w
  2367  01F8  00F9               	movwf	___awdiv@dividend
  2368  01F9  120A  118A  2008  120A  118A  	fcall	___awdiv
  2369  01FE  0878               	movf	?___awdiv+1,w
  2370  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  2371  0200  1303               	bcf	3,6	;RP1=0, select bank1
  2372  0201  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2373  0202  0877               	movf	?___awdiv,w
  2374  0203  00BB               	movwf	sprintf@eexp^(0+128)
  2375  0204                     l3245:
  2376                           
  2377                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2378  0204  1FBC               	btfss	(sprintf@eexp+1)^(0+128),7
  2379  0205  2A07               	goto	u5221
  2380  0206  2A08               	goto	u5220
  2381  0207                     u5221:
  2382  0207  2A0E               	goto	l3249
  2383  0208                     u5220:
  2384  0208                     l3247:
  2385                           
  2386                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2387  0208  30FF               	movlw	255
  2388  0209  07BB               	addwf	sprintf@eexp^(0+128),f
  2389  020A  1803               	skipnc
  2390  020B  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2391  020C  30FF               	movlw	255
  2392  020D  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2393  020E                     l3249:
  2394                           
  2395                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2396  020E  033B               	decf	sprintf@eexp^(0+128),w
  2397  020F  3AFF               	xorlw	255
  2398  0210  120A  158A  2140  120A  118A  	fcall	_scale
  2399  0215  1283               	bcf	3,5	;RP0=0, select bank0
  2400  0216  1303               	bcf	3,6	;RP1=0, select bank0
  2401  0217  0841               	movf	?_scale+3,w
  2402  0218  1683               	bsf	3,5	;RP0=1, select bank1
  2403  0219  1303               	bcf	3,6	;RP1=0, select bank1
  2404  021A  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2405  021B  1283               	bcf	3,5	;RP0=0, select bank0
  2406  021C  1303               	bcf	3,6	;RP1=0, select bank0
  2407  021D  0840               	movf	?_scale+2,w
  2408  021E  1683               	bsf	3,5	;RP0=1, select bank1
  2409  021F  1303               	bcf	3,6	;RP1=0, select bank1
  2410  0220  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2411  0221  1283               	bcf	3,5	;RP0=0, select bank0
  2412  0222  1303               	bcf	3,6	;RP1=0, select bank0
  2413  0223  083F               	movf	?_scale+1,w
  2414  0224  1683               	bsf	3,5	;RP0=1, select bank1
  2415  0225  1303               	bcf	3,6	;RP1=0, select bank1
  2416  0226  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2417  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2418  0228  1303               	bcf	3,6	;RP1=0, select bank0
  2419  0229  083E               	movf	?_scale,w
  2420  022A  1683               	bsf	3,5	;RP0=1, select bank1
  2421  022B  1303               	bcf	3,6	;RP1=0, select bank1
  2422  022C  00B7               	movwf	sprintf@tmpval^(0+128)
  2423  022D                     l3251:
  2424                           
  2425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2426  022D  0840               	movf	(sprintf@fval+3)^(0+128),w
  2427  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2428  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2429  0230  00A7               	movwf	___flmul@b+3
  2430  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2431  0232  1303               	bcf	3,6	;RP1=0, select bank1
  2432  0233  083F               	movf	(sprintf@fval+2)^(0+128),w
  2433  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2434  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2435  0236  00A6               	movwf	___flmul@b+2
  2436  0237  1683               	bsf	3,5	;RP0=1, select bank1
  2437  0238  1303               	bcf	3,6	;RP1=0, select bank1
  2438  0239  083E               	movf	(sprintf@fval+1)^(0+128),w
  2439  023A  1283               	bcf	3,5	;RP0=0, select bank0
  2440  023B  1303               	bcf	3,6	;RP1=0, select bank0
  2441  023C  00A5               	movwf	___flmul@b+1
  2442  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2443  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2444  023F  083D               	movf	sprintf@fval^(0+128),w
  2445  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2446  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2447  0242  00A4               	movwf	___flmul@b
  2448  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2449  0244  1303               	bcf	3,6	;RP1=0, select bank1
  2450  0245  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2451  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2452  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2453  0248  00AB               	movwf	___flmul@a+3
  2454  0249  1683               	bsf	3,5	;RP0=1, select bank1
  2455  024A  1303               	bcf	3,6	;RP1=0, select bank1
  2456  024B  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2457  024C  1283               	bcf	3,5	;RP0=0, select bank0
  2458  024D  1303               	bcf	3,6	;RP1=0, select bank0
  2459  024E  00AA               	movwf	___flmul@a+2
  2460  024F  1683               	bsf	3,5	;RP0=1, select bank1
  2461  0250  1303               	bcf	3,6	;RP1=0, select bank1
  2462  0251  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2463  0252  1283               	bcf	3,5	;RP0=0, select bank0
  2464  0253  1303               	bcf	3,6	;RP1=0, select bank0
  2465  0254  00A9               	movwf	___flmul@a+1
  2466  0255  1683               	bsf	3,5	;RP0=1, select bank1
  2467  0256  1303               	bcf	3,6	;RP1=0, select bank1
  2468  0257  0837               	movf	sprintf@tmpval^(0+128),w
  2469  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2470  0259  1303               	bcf	3,6	;RP1=0, select bank0
  2471  025A  00A8               	movwf	___flmul@a
  2472  025B  120A  158A  249F  120A  118A  	fcall	___flmul
  2473  0260  1283               	bcf	3,5	;RP0=0, select bank0
  2474  0261  1303               	bcf	3,6	;RP1=0, select bank0
  2475  0262  0827               	movf	?___flmul+3,w
  2476  0263  1683               	bsf	3,5	;RP0=1, select bank1
  2477  0264  1303               	bcf	3,6	;RP1=0, select bank1
  2478  0265  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2479  0266  1283               	bcf	3,5	;RP0=0, select bank0
  2480  0267  1303               	bcf	3,6	;RP1=0, select bank0
  2481  0268  0826               	movf	?___flmul+2,w
  2482  0269  1683               	bsf	3,5	;RP0=1, select bank1
  2483  026A  1303               	bcf	3,6	;RP1=0, select bank1
  2484  026B  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2485  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2486  026D  1303               	bcf	3,6	;RP1=0, select bank0
  2487  026E  0825               	movf	?___flmul+1,w
  2488  026F  1683               	bsf	3,5	;RP0=1, select bank1
  2489  0270  1303               	bcf	3,6	;RP1=0, select bank1
  2490  0271  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2491  0272  1283               	bcf	3,5	;RP0=0, select bank0
  2492  0273  1303               	bcf	3,6	;RP1=0, select bank0
  2493  0274  0824               	movf	?___flmul,w
  2494  0275  1683               	bsf	3,5	;RP0=1, select bank1
  2495  0276  1303               	bcf	3,6	;RP1=0, select bank1
  2496  0277  00B7               	movwf	sprintf@tmpval^(0+128)
  2497  0278                     l3253:
  2498                           
  2499                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2500  0278  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2501  0279  00F3               	movwf	___flge@ff1+3
  2502  027A  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2503  027B  00F2               	movwf	___flge@ff1+2
  2504  027C  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2505  027D  00F1               	movwf	___flge@ff1+1
  2506  027E  0837               	movf	sprintf@tmpval^(0+128),w
  2507  027F  00F0               	movwf	___flge@ff1
  2508  0280  303F               	movlw	63
  2509  0281  00F7               	movwf	___flge@ff2+3
  2510  0282  3080               	movlw	128
  2511  0283  00F6               	movwf	___flge@ff2+2
  2512  0284  3000               	movlw	0
  2513  0285  00F5               	movwf	___flge@ff2+1
  2514  0286  3000               	movlw	0
  2515  0287  00F4               	movwf	___flge@ff2
  2516  0288  160A  158A  26A4  120A  118A  	fcall	___flge
  2517  028D  1803               	btfsc	3,0
  2518  028E  2A90               	goto	u5231
  2519  028F  2A91               	goto	u5230
  2520  0290                     u5231:
  2521  0290  2A9A               	goto	l3257
  2522  0291                     u5230:
  2523  0291                     l3255:
  2524                           
  2525                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2526  0291  30FF               	movlw	255
  2527  0292  1683               	bsf	3,5	;RP0=1, select bank1
  2528  0293  1303               	bcf	3,6	;RP1=0, select bank1
  2529  0294  07BB               	addwf	sprintf@eexp^(0+128),f
  2530  0295  1803               	skipnc
  2531  0296  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2532  0297  30FF               	movlw	255
  2533  0298  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2534  0299  2ABD               	goto	l3261
  2535  029A                     l3257:
  2536  029A  1683               	bsf	3,5	;RP0=1, select bank1
  2537  029B  1303               	bcf	3,6	;RP1=0, select bank1
  2538  029C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2539  029D  00F3               	movwf	___flge@ff1+3
  2540  029E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2541  029F  00F2               	movwf	___flge@ff1+2
  2542  02A0  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2543  02A1  00F1               	movwf	___flge@ff1+1
  2544  02A2  0837               	movf	sprintf@tmpval^(0+128),w
  2545  02A3  00F0               	movwf	___flge@ff1
  2546  02A4  3041               	movlw	65
  2547  02A5  00F7               	movwf	___flge@ff2+3
  2548  02A6  3020               	movlw	32
  2549  02A7  00F6               	movwf	___flge@ff2+2
  2550  02A8  3000               	movlw	0
  2551  02A9  00F5               	movwf	___flge@ff2+1
  2552  02AA  3000               	movlw	0
  2553  02AB  00F4               	movwf	___flge@ff2
  2554  02AC  160A  158A  26A4  120A  118A  	fcall	___flge
  2555  02B1  1C03               	btfss	3,0
  2556  02B2  2AB4               	goto	u5241
  2557  02B3  2AB5               	goto	u5240
  2558  02B4                     u5241:
  2559  02B4  2ABD               	goto	l3261
  2560  02B5                     u5240:
  2561  02B5                     l3259:
  2562                           
  2563                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2564  02B5  3001               	movlw	1
  2565  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2566  02B7  1303               	bcf	3,6	;RP1=0, select bank1
  2567  02B8  07BB               	addwf	sprintf@eexp^(0+128),f
  2568  02B9  1803               	skipnc
  2569  02BA  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2570  02BB  3000               	movlw	0
  2571  02BC  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2572  02BD                     l3261:
  2573                           
  2574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2575  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  2576  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  2577  02BF  0843               	movf	(sprintf@prec+1)^(0+128),w
  2578  02C0  3A80               	xorlw	128
  2579  02C1  00FF               	movwf	btemp+1
  2580  02C2  3080               	movlw	128
  2581  02C3  027F               	subwf	btemp+1,w
  2582  02C4  1D03               	skipz
  2583  02C5  2AC8               	goto	u5255
  2584  02C6  300D               	movlw	13
  2585  02C7  0242               	subwf	sprintf@prec^(0+128),w
  2586  02C8                     u5255:
  2587  02C8  1803               	skipnc
  2588  02C9  2ACB               	goto	u5251
  2589  02CA  2ACC               	goto	u5250
  2590  02CB                     u5251:
  2591  02CB  2B13               	goto	l3265
  2592  02CC                     u5250:
  2593  02CC                     l3263:
  2594                           
  2595                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2596  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  2597  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  2598  02CE  0842               	movf	sprintf@prec^(0+128),w
  2599  02CF  160A  118A  236D  120A  118A  	fcall	_fround
  2600  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2601  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2602  02D6  0841               	movf	?_fround+3,w
  2603  02D7  00D5               	movwf	___fladd@b+3
  2604  02D8  0840               	movf	?_fround+2,w
  2605  02D9  00D4               	movwf	___fladd@b+2
  2606  02DA  083F               	movf	?_fround+1,w
  2607  02DB  00D3               	movwf	___fladd@b+1
  2608  02DC  083E               	movf	?_fround,w
  2609  02DD  00D2               	movwf	___fladd@b
  2610  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  2611  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  2612  02E0  0840               	movf	(sprintf@fval+3)^(0+128),w
  2613  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2614  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2615  02E3  00D9               	movwf	___fladd@a+3
  2616  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  2617  02E5  1303               	bcf	3,6	;RP1=0, select bank1
  2618  02E6  083F               	movf	(sprintf@fval+2)^(0+128),w
  2619  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2620  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2621  02E9  00D8               	movwf	___fladd@a+2
  2622  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  2623  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  2624  02EC  083E               	movf	(sprintf@fval+1)^(0+128),w
  2625  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2626  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2627  02EF  00D7               	movwf	___fladd@a+1
  2628  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  2629  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  2630  02F2  083D               	movf	sprintf@fval^(0+128),w
  2631  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  2632  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  2633  02F5  00D6               	movwf	___fladd@a
  2634  02F6  160A  118A  2578  120A  118A  	fcall	___fladd
  2635  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  2636  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  2637  02FD  0855               	movf	?___fladd+3,w
  2638  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  2639  02FF  1303               	bcf	3,6	;RP1=0, select bank1
  2640  0300  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2641  0301  1283               	bcf	3,5	;RP0=0, select bank0
  2642  0302  1303               	bcf	3,6	;RP1=0, select bank0
  2643  0303  0854               	movf	?___fladd+2,w
  2644  0304  1683               	bsf	3,5	;RP0=1, select bank1
  2645  0305  1303               	bcf	3,6	;RP1=0, select bank1
  2646  0306  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2647  0307  1283               	bcf	3,5	;RP0=0, select bank0
  2648  0308  1303               	bcf	3,6	;RP1=0, select bank0
  2649  0309  0853               	movf	?___fladd+1,w
  2650  030A  1683               	bsf	3,5	;RP0=1, select bank1
  2651  030B  1303               	bcf	3,6	;RP1=0, select bank1
  2652  030C  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2653  030D  1283               	bcf	3,5	;RP0=0, select bank0
  2654  030E  1303               	bcf	3,6	;RP1=0, select bank0
  2655  030F  0852               	movf	?___fladd,w
  2656  0310  1683               	bsf	3,5	;RP0=1, select bank1
  2657  0311  1303               	bcf	3,6	;RP1=0, select bank1
  2658  0312  00BD               	movwf	sprintf@fval^(0+128)
  2659  0313                     l3265:
  2660                           
  2661                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2662  0313  1683               	bsf	3,5	;RP0=1, select bank1
  2663  0314  1303               	bcf	3,6	;RP1=0, select bank1
  2664  0315  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2665  0316  3A80               	xorlw	128
  2666  0317  00FF               	movwf	btemp+1
  2667  0318  3080               	movlw	128
  2668  0319  027F               	subwf	btemp+1,w
  2669  031A  1D03               	skipz
  2670  031B  2B1E               	goto	u5265
  2671  031C  300A               	movlw	10
  2672  031D  023B               	subwf	sprintf@eexp^(0+128),w
  2673  031E                     u5265:
  2674  031E  1803               	skipnc
  2675  031F  2B21               	goto	u5261
  2676  0320  2B22               	goto	u5260
  2677  0321                     u5261:
  2678  0321  2B73               	goto	l3273
  2679  0322                     u5260:
  2680  0322                     l3267:
  2681  0322  1683               	bsf	3,5	;RP0=1, select bank1
  2682  0323  1303               	bcf	3,6	;RP1=0, select bank1
  2683  0324  0840               	movf	(sprintf@fval+3)^(0+128),w
  2684  0325  00F3               	movwf	___fleq@ff1+3
  2685  0326  083F               	movf	(sprintf@fval+2)^(0+128),w
  2686  0327  00F2               	movwf	___fleq@ff1+2
  2687  0328  083E               	movf	(sprintf@fval+1)^(0+128),w
  2688  0329  00F1               	movwf	___fleq@ff1+1
  2689  032A  083D               	movf	sprintf@fval^(0+128),w
  2690  032B  00F0               	movwf	___fleq@ff1
  2691  032C  3000               	movlw	0
  2692  032D  00F7               	movwf	___fleq@ff2+3
  2693  032E  3000               	movlw	0
  2694  032F  00F6               	movwf	___fleq@ff2+2
  2695  0330  3000               	movlw	0
  2696  0331  00F5               	movwf	___fleq@ff2+1
  2697  0332  3000               	movlw	0
  2698  0333  00F4               	movwf	___fleq@ff2
  2699  0334  160A  158A  25A9  120A  118A  	fcall	___fleq
  2700  0339  1803               	btfsc	3,0
  2701  033A  2B3C               	goto	u5271
  2702  033B  2B3D               	goto	u5270
  2703  033C                     u5271:
  2704  033C  2BE5               	goto	l3287
  2705  033D                     u5270:
  2706  033D                     l3269:
  2707  033D  1683               	bsf	3,5	;RP0=1, select bank1
  2708  033E  1303               	bcf	3,6	;RP1=0, select bank1
  2709  033F  0840               	movf	(sprintf@fval+3)^(0+128),w
  2710  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2711  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2712  0342  00D4               	movwf	___fltol@f1+3
  2713  0343  1683               	bsf	3,5	;RP0=1, select bank1
  2714  0344  1303               	bcf	3,6	;RP1=0, select bank1
  2715  0345  083F               	movf	(sprintf@fval+2)^(0+128),w
  2716  0346  1283               	bcf	3,5	;RP0=0, select bank0
  2717  0347  1303               	bcf	3,6	;RP1=0, select bank0
  2718  0348  00D3               	movwf	___fltol@f1+2
  2719  0349  1683               	bsf	3,5	;RP0=1, select bank1
  2720  034A  1303               	bcf	3,6	;RP1=0, select bank1
  2721  034B  083E               	movf	(sprintf@fval+1)^(0+128),w
  2722  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2723  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2724  034E  00D2               	movwf	___fltol@f1+1
  2725  034F  1683               	bsf	3,5	;RP0=1, select bank1
  2726  0350  1303               	bcf	3,6	;RP1=0, select bank1
  2727  0351  083D               	movf	sprintf@fval^(0+128),w
  2728  0352  1283               	bcf	3,5	;RP0=0, select bank0
  2729  0353  1303               	bcf	3,6	;RP1=0, select bank0
  2730  0354  00D1               	movwf	___fltol@f1
  2731  0355  120A  158A  20C4  120A  118A  	fcall	___fltol
  2732  035A  1283               	bcf	3,5	;RP0=0, select bank0
  2733  035B  1303               	bcf	3,6	;RP1=0, select bank0
  2734  035C  0854               	movf	?___fltol+3,w
  2735  035D  0453               	iorwf	?___fltol+2,w
  2736  035E  0452               	iorwf	?___fltol+1,w
  2737  035F  0451               	iorwf	?___fltol,w
  2738  0360  1D03               	skipz
  2739  0361  2B63               	goto	u5281
  2740  0362  2B64               	goto	u5280
  2741  0363                     u5281:
  2742  0363  2BE5               	goto	l3287
  2743  0364                     u5280:
  2744  0364                     l3271:
  2745  0364  1683               	bsf	3,5	;RP0=1, select bank1
  2746  0365  1303               	bcf	3,6	;RP1=0, select bank1
  2747  0366  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2748  0367  3A80               	xorlw	128
  2749  0368  00FF               	movwf	btemp+1
  2750  0369  3080               	movlw	128
  2751  036A  027F               	subwf	btemp+1,w
  2752  036B  1D03               	skipz
  2753  036C  2B6F               	goto	u5295
  2754  036D  3002               	movlw	2
  2755  036E  023B               	subwf	sprintf@eexp^(0+128),w
  2756  036F                     u5295:
  2757  036F  1C03               	skipc
  2758  0370  2B72               	goto	u5291
  2759  0371  2B73               	goto	u5290
  2760  0372                     u5291:
  2761  0372  2BE5               	goto	l3287
  2762  0373                     u5290:
  2763  0373                     l3273:
  2764                           
  2765                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2766  0373  1683               	bsf	3,5	;RP0=1, select bank1
  2767  0374  1303               	bcf	3,6	;RP1=0, select bank1
  2768  0375  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2769  0376  00F3               	movwf	___flge@ff1+3
  2770  0377  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2771  0378  00F2               	movwf	___flge@ff1+2
  2772  0379  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2773  037A  00F1               	movwf	___flge@ff1+1
  2774  037B  0837               	movf	sprintf@tmpval^(0+128),w
  2775  037C  00F0               	movwf	___flge@ff1
  2776  037D  3040               	movlw	64
  2777  037E  00F7               	movwf	___flge@ff2+3
  2778  037F  3089               	movlw	137
  2779  0380  00F6               	movwf	___flge@ff2+2
  2780  0381  3070               	movlw	112
  2781  0382  00F5               	movwf	___flge@ff2+1
  2782  0383  305F               	movlw	95
  2783  0384  00F4               	movwf	___flge@ff2
  2784  0385  160A  158A  26A4  120A  118A  	fcall	___flge
  2785  038A  1803               	btfsc	3,0
  2786  038B  2B8D               	goto	u5301
  2787  038C  2B8E               	goto	u5300
  2788  038D                     u5301:
  2789  038D  2B97               	goto	l3277
  2790  038E                     u5300:
  2791  038E                     l3275:
  2792                           
  2793                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2794  038E  30F7               	movlw	247
  2795  038F  1683               	bsf	3,5	;RP0=1, select bank1
  2796  0390  1303               	bcf	3,6	;RP1=0, select bank1
  2797  0391  07BB               	addwf	sprintf@eexp^(0+128),f
  2798  0392  1803               	skipnc
  2799  0393  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2800  0394  30FF               	movlw	255
  2801  0395  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2802                           
  2803                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2804  0396  2B9F               	goto	l3279
  2805  0397                     l3277:
  2806                           
  2807                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2808  0397  30F8               	movlw	248
  2809  0398  1683               	bsf	3,5	;RP0=1, select bank1
  2810  0399  1303               	bcf	3,6	;RP1=0, select bank1
  2811  039A  07BB               	addwf	sprintf@eexp^(0+128),f
  2812  039B  1803               	skipnc
  2813  039C  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2814  039D  30FF               	movlw	255
  2815  039E  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2816  039F                     l3279:
  2817                           
  2818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2819  039F  083B               	movf	sprintf@eexp^(0+128),w
  2820  03A0  120A  158A  2140  120A  118A  	fcall	_scale
  2821  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2822  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2823  03A7  0841               	movf	?_scale+3,w
  2824  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  2825  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  2826  03AA  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2827  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2828  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2829  03AD  0840               	movf	?_scale+2,w
  2830  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  2831  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  2832  03B0  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2833  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2834  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2835  03B3  083F               	movf	?_scale+1,w
  2836  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2837  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2838  03B6  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2839  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2840  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2841  03B9  083E               	movf	?_scale,w
  2842  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  2843  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  2844  03BC  00B7               	movwf	sprintf@tmpval^(0+128)
  2845  03BD                     l3281:
  2846  03BD  0840               	movf	(sprintf@fval+3)^(0+128),w
  2847  03BE  00F3               	movwf	__div_to_l_@f1+3
  2848  03BF  083F               	movf	(sprintf@fval+2)^(0+128),w
  2849  03C0  00F2               	movwf	__div_to_l_@f1+2
  2850  03C1  083E               	movf	(sprintf@fval+1)^(0+128),w
  2851  03C2  00F1               	movwf	__div_to_l_@f1+1
  2852  03C3  083D               	movf	sprintf@fval^(0+128),w
  2853  03C4  00F0               	movwf	__div_to_l_@f1
  2854  03C5  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2855  03C6  00F7               	movwf	__div_to_l_@f2+3
  2856  03C7  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2857  03C8  00F6               	movwf	__div_to_l_@f2+2
  2858  03C9  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2859  03CA  00F5               	movwf	__div_to_l_@f2+1
  2860  03CB  0837               	movf	sprintf@tmpval^(0+128),w
  2861  03CC  00F4               	movwf	__div_to_l_@f2
  2862  03CD  160A  118A  2128  120A  118A  	fcall	__div_to_l_
  2863  03D2  0873               	movf	?__div_to_l_+3,w
  2864  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  2865  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  2866  03D5  00B2               	movwf	(sprintf@val+3)^(0+128)
  2867  03D6  0872               	movf	?__div_to_l_+2,w
  2868  03D7  00B1               	movwf	(sprintf@val+2)^(0+128)
  2869  03D8  0871               	movf	?__div_to_l_+1,w
  2870  03D9  00B0               	movwf	(sprintf@val+1)^(0+128)
  2871  03DA  0870               	movf	?__div_to_l_,w
  2872  03DB  00AF               	movwf	sprintf@val^(0+128)
  2873  03DC                     l3285:
  2874                           
  2875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2876  03DC  3000               	movlw	0
  2877  03DD  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2878  03DE  3000               	movlw	0
  2879  03DF  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2880  03E0  3000               	movlw	0
  2881  03E1  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2882  03E2  3000               	movlw	0
  2883  03E3  00BD               	movwf	sprintf@fval^(0+128)
  2884                           
  2885                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2886  03E4  2C69               	goto	l3293
  2887  03E5                     l3287:
  2888                           
  2889                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2890  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  2891  03E6  1303               	bcf	3,6	;RP1=0, select bank1
  2892  03E7  0840               	movf	(sprintf@fval+3)^(0+128),w
  2893  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  2894  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  2895  03EA  00D4               	movwf	___fltol@f1+3
  2896  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  2897  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  2898  03ED  083F               	movf	(sprintf@fval+2)^(0+128),w
  2899  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2900  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2901  03F0  00D3               	movwf	___fltol@f1+2
  2902  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  2903  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  2904  03F3  083E               	movf	(sprintf@fval+1)^(0+128),w
  2905  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  2906  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  2907  03F6  00D2               	movwf	___fltol@f1+1
  2908  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  2909  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  2910  03F9  083D               	movf	sprintf@fval^(0+128),w
  2911  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2912  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2913  03FC  00D1               	movwf	___fltol@f1
  2914  03FD  120A  158A  20C4  120A  118A  	fcall	___fltol
  2915  0402  1283               	bcf	3,5	;RP0=0, select bank0
  2916  0403  1303               	bcf	3,6	;RP1=0, select bank0
  2917  0404  0854               	movf	?___fltol+3,w
  2918  0405  1683               	bsf	3,5	;RP0=1, select bank1
  2919  0406  1303               	bcf	3,6	;RP1=0, select bank1
  2920  0407  00B2               	movwf	(sprintf@val+3)^(0+128)
  2921  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2922  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2923  040A  0853               	movf	?___fltol+2,w
  2924  040B  1683               	bsf	3,5	;RP0=1, select bank1
  2925  040C  1303               	bcf	3,6	;RP1=0, select bank1
  2926  040D  00B1               	movwf	(sprintf@val+2)^(0+128)
  2927  040E  1283               	bcf	3,5	;RP0=0, select bank0
  2928  040F  1303               	bcf	3,6	;RP1=0, select bank0
  2929  0410  0852               	movf	?___fltol+1,w
  2930  0411  1683               	bsf	3,5	;RP0=1, select bank1
  2931  0412  1303               	bcf	3,6	;RP1=0, select bank1
  2932  0413  00B0               	movwf	(sprintf@val+1)^(0+128)
  2933  0414  1283               	bcf	3,5	;RP0=0, select bank0
  2934  0415  1303               	bcf	3,6	;RP1=0, select bank0
  2935  0416  0851               	movf	?___fltol,w
  2936  0417  1683               	bsf	3,5	;RP0=1, select bank1
  2937  0418  1303               	bcf	3,6	;RP1=0, select bank1
  2938  0419  00AF               	movwf	sprintf@val^(0+128)
  2939  041A                     l3289:
  2940                           
  2941                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2942  041A  0832               	movf	(sprintf@val+3)^(0+128),w
  2943  041B  00F3               	movwf	___xxtofl@val+3
  2944  041C  0831               	movf	(sprintf@val+2)^(0+128),w
  2945  041D  00F2               	movwf	___xxtofl@val+2
  2946  041E  0830               	movf	(sprintf@val+1)^(0+128),w
  2947  041F  00F1               	movwf	___xxtofl@val+1
  2948  0420  082F               	movf	sprintf@val^(0+128),w
  2949  0421  00F0               	movwf	___xxtofl@val
  2950  0422  3000               	movlw	0
  2951  0423  160A  158A  2746  120A  118A  	fcall	___xxtofl
  2952  0428  0873               	movf	?___xxtofl+3,w
  2953  0429  1283               	bcf	3,5	;RP0=0, select bank0
  2954  042A  1303               	bcf	3,6	;RP1=0, select bank0
  2955  042B  00E9               	movwf	___flsub@a+3
  2956  042C  0872               	movf	?___xxtofl+2,w
  2957  042D  00E8               	movwf	___flsub@a+2
  2958  042E  0871               	movf	?___xxtofl+1,w
  2959  042F  00E7               	movwf	___flsub@a+1
  2960  0430  0870               	movf	?___xxtofl,w
  2961  0431  00E6               	movwf	___flsub@a
  2962  0432  1683               	bsf	3,5	;RP0=1, select bank1
  2963  0433  1303               	bcf	3,6	;RP1=0, select bank1
  2964  0434  0840               	movf	(sprintf@fval+3)^(0+128),w
  2965  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2966  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2967  0437  00ED               	movwf	___flsub@b+3
  2968  0438  1683               	bsf	3,5	;RP0=1, select bank1
  2969  0439  1303               	bcf	3,6	;RP1=0, select bank1
  2970  043A  083F               	movf	(sprintf@fval+2)^(0+128),w
  2971  043B  1283               	bcf	3,5	;RP0=0, select bank0
  2972  043C  1303               	bcf	3,6	;RP1=0, select bank0
  2973  043D  00EC               	movwf	___flsub@b+2
  2974  043E  1683               	bsf	3,5	;RP0=1, select bank1
  2975  043F  1303               	bcf	3,6	;RP1=0, select bank1
  2976  0440  083E               	movf	(sprintf@fval+1)^(0+128),w
  2977  0441  1283               	bcf	3,5	;RP0=0, select bank0
  2978  0442  1303               	bcf	3,6	;RP1=0, select bank0
  2979  0443  00EB               	movwf	___flsub@b+1
  2980  0444  1683               	bsf	3,5	;RP0=1, select bank1
  2981  0445  1303               	bcf	3,6	;RP1=0, select bank1
  2982  0446  083D               	movf	sprintf@fval^(0+128),w
  2983  0447  1283               	bcf	3,5	;RP0=0, select bank0
  2984  0448  1303               	bcf	3,6	;RP1=0, select bank0
  2985  0449  00EA               	movwf	___flsub@b
  2986  044A  160A  158A  2438  120A  118A  	fcall	___flsub
  2987  044F  1283               	bcf	3,5	;RP0=0, select bank0
  2988  0450  1303               	bcf	3,6	;RP1=0, select bank0
  2989  0451  0869               	movf	?___flsub+3,w
  2990  0452  1683               	bsf	3,5	;RP0=1, select bank1
  2991  0453  1303               	bcf	3,6	;RP1=0, select bank1
  2992  0454  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2993  0455  1283               	bcf	3,5	;RP0=0, select bank0
  2994  0456  1303               	bcf	3,6	;RP1=0, select bank0
  2995  0457  0868               	movf	?___flsub+2,w
  2996  0458  1683               	bsf	3,5	;RP0=1, select bank1
  2997  0459  1303               	bcf	3,6	;RP1=0, select bank1
  2998  045A  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2999  045B  1283               	bcf	3,5	;RP0=0, select bank0
  3000  045C  1303               	bcf	3,6	;RP1=0, select bank0
  3001  045D  0867               	movf	?___flsub+1,w
  3002  045E  1683               	bsf	3,5	;RP0=1, select bank1
  3003  045F  1303               	bcf	3,6	;RP1=0, select bank1
  3004  0460  00BE               	movwf	(sprintf@fval+1)^(0+128)
  3005  0461  1283               	bcf	3,5	;RP0=0, select bank0
  3006  0462  1303               	bcf	3,6	;RP1=0, select bank0
  3007  0463  0866               	movf	?___flsub,w
  3008  0464  1683               	bsf	3,5	;RP0=1, select bank1
  3009  0465  1303               	bcf	3,6	;RP1=0, select bank1
  3010  0466  00BD               	movwf	sprintf@fval^(0+128)
  3011  0467                     l3291:
  3012                           
  3013                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  3014  0467  01BB               	clrf	sprintf@eexp^(0+128)
  3015  0468  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  3016  0469                     l3293:
  3017                           
  3018                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  3019  0469  01C4               	clrf	sprintf@c^(0+128)
  3020  046A  0AC4               	incf	sprintf@c^(0+128),f
  3021  046B                     l3299:
  3022                           
  3023                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  3024  046B  0844               	movf	sprintf@c^(0+128),w
  3025  046C  00A5               	movwf	??_sprintf^(0+128)
  3026  046D  3001               	movlw	1
  3027  046E                     u5315:
  3028  046E  1003               	clrc
  3029  046F  0DA5               	rlf	??_sprintf^(0+128),f
  3030  0470  3EFF               	addlw	-1
  3031  0471  1D03               	skipz
  3032  0472  2C6E               	goto	u5315
  3033  0473  1003               	clrc
  3034  0474  0D25               	rlf	??_sprintf^(0+128),w
  3035  0475  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3036  0476  0084               	movwf	4
  3037  0477  120A  158A  200A  120A  118A  	fcall	stringdir
  3038  047C  00A6               	movwf	(??_sprintf+1)^(0+128)
  3039  047D  120A  158A  200A  120A  118A  	fcall	stringdir
  3040  0482  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  3041  0483  120A  158A  200A  120A  118A  	fcall	stringdir
  3042  0488  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  3043  0489  120A  158A  200A  120A  118A  	fcall	stringdir
  3044  048E  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  3045  048F  0829               	movf	(??_sprintf+4)^(0+128),w
  3046  0490  0232               	subwf	(sprintf@val+3)^(0+128),w
  3047  0491  1D03               	skipz
  3048  0492  2C9D               	goto	u5325
  3049  0493  0828               	movf	(??_sprintf+3)^(0+128),w
  3050  0494  0231               	subwf	(sprintf@val+2)^(0+128),w
  3051  0495  1D03               	skipz
  3052  0496  2C9D               	goto	u5325
  3053  0497  0827               	movf	(??_sprintf+2)^(0+128),w
  3054  0498  0230               	subwf	(sprintf@val+1)^(0+128),w
  3055  0499  1D03               	skipz
  3056  049A  2C9D               	goto	u5325
  3057  049B  0826               	movf	(??_sprintf+1)^(0+128),w
  3058  049C  022F               	subwf	sprintf@val^(0+128),w
  3059  049D                     u5325:
  3060  049D  1803               	skipnc
  3061  049E  2CA0               	goto	u5321
  3062  049F  2CA1               	goto	u5320
  3063  04A0                     u5321:
  3064  04A0  2CA2               	goto	l3303
  3065  04A1                     u5320:
  3066  04A1  2CAC               	goto	l3305
  3067  04A2                     l3303:
  3068  04A2  3001               	movlw	1
  3069  04A3  00A5               	movwf	??_sprintf^(0+128)
  3070  04A4  0825               	movf	??_sprintf^(0+128),w
  3071  04A5  07C4               	addwf	sprintf@c^(0+128),f
  3072  04A6  300A               	movlw	10
  3073  04A7  0644               	xorwf	sprintf@c^(0+128),w
  3074  04A8  1D03               	btfss	3,2
  3075  04A9  2CAB               	goto	u5331
  3076  04AA  2CAC               	goto	u5330
  3077  04AB                     u5331:
  3078  04AB  2C6B               	goto	l3299
  3079  04AC                     u5330:
  3080  04AC                     l3305:
  3081                           
  3082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  3083  04AC  0844               	movf	sprintf@c^(0+128),w
  3084  04AD  0742               	addwf	sprintf@prec^(0+128),w
  3085  04AE  00A5               	movwf	??_sprintf^(0+128)
  3086  04AF  0843               	movf	(sprintf@prec+1)^(0+128),w
  3087  04B0  1803               	skipnc
  3088  04B1  0A43               	incf	(sprintf@prec+1)^(0+128),w
  3089  04B2  00A6               	movwf	(??_sprintf^(0+128)+1)
  3090  04B3  083B               	movf	sprintf@eexp^(0+128),w
  3091  04B4  0725               	addwf	??_sprintf^(0+128),w
  3092  04B5  00A7               	movwf	(??_sprintf+2)^(0+128)
  3093  04B6  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3094  04B7  1803               	skipnc
  3095  04B8  0A3C               	incf	(sprintf@eexp+1)^(0+128),w
  3096  04B9  0726               	addwf	(??_sprintf+1)^(0+128),w
  3097  04BA  00A8               	movwf	(??_sprintf+3)^(0+128)
  3098  04BB  0827               	movf	(??_sprintf+2)^(0+128),w
  3099  04BC  02B5               	subwf	sprintf@width^(0+128),f
  3100  04BD  0828               	movf	(??_sprintf+3)^(0+128),w
  3101  04BE  1C03               	skipc
  3102  04BF  03B6               	decf	(sprintf@width+1)^(0+128),f
  3103  04C0  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3104                           
  3105                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  3106  04C1  0842               	movf	sprintf@prec^(0+128),w
  3107  04C2  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3108  04C3  1903               	btfsc	3,2
  3109  04C4  2CC6               	goto	u5341
  3110  04C5  2CC7               	goto	u5340
  3111  04C6                     u5341:
  3112  04C6  2CCD               	goto	l3309
  3113  04C7                     u5340:
  3114  04C7                     l3307:
  3115                           
  3116                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  3117  04C7  30FF               	movlw	255
  3118  04C8  07B5               	addwf	sprintf@width^(0+128),f
  3119  04C9  1803               	skipnc
  3120  04CA  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3121  04CB  30FF               	movlw	255
  3122  04CC  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3123  04CD                     l3309:
  3124                           
  3125                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  3126  04CD  3003               	movlw	3
  3127  04CE  0533               	andwf	sprintf@flag^(0+128),w
  3128  04CF  00A5               	movwf	??_sprintf^(0+128)
  3129  04D0  3000               	movlw	0
  3130  04D1  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3131  04D2  00A6               	movwf	(??_sprintf+1)^(0+128)
  3132  04D3  0825               	movf	??_sprintf^(0+128),w
  3133  04D4  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3134  04D5  1903               	btfsc	3,2
  3135  04D6  2CD8               	goto	u5351
  3136  04D7  2CD9               	goto	u5350
  3137  04D8                     u5351:
  3138  04D8  2CEE               	goto	l3319
  3139  04D9                     u5350:
  3140  04D9                     l3311:
  3141                           
  3142                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  3143  04D9  30FF               	movlw	255
  3144  04DA  07B5               	addwf	sprintf@width^(0+128),f
  3145  04DB  1803               	skipnc
  3146  04DC  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3147  04DD  30FF               	movlw	255
  3148  04DE  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3149  04DF  2CEE               	goto	l3319
  3150  04E0                     l3313:
  3151                           
  3152                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  3153  04E0  3020               	movlw	32
  3154  04E1  1683               	bsf	3,5	;RP0=1, select bank1
  3155  04E2  1303               	bcf	3,6	;RP1=0, select bank1
  3156  04E3  00A5               	movwf	??_sprintf^(0+128)
  3157  04E4  0841               	movf	sprintf@sp^(0+128),w
  3158  04E5  0084               	movwf	4
  3159  04E6  0825               	movf	??_sprintf^(0+128),w
  3160  04E7  1383               	bcf	3,7	;select IRP bank0
  3161  04E8  0080               	movwf	0
  3162  04E9                     l3315:
  3163  04E9  3001               	movlw	1
  3164  04EA  00A5               	movwf	??_sprintf^(0+128)
  3165  04EB  0825               	movf	??_sprintf^(0+128),w
  3166  04EC  07C1               	addwf	sprintf@sp^(0+128),f
  3167  04ED  2CD9               	goto	l3311
  3168  04EE                     l3319:
  3169                           
  3170                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  3171  04EE  0836               	movf	(sprintf@width+1)^(0+128),w
  3172  04EF  3A80               	xorlw	128
  3173  04F0  00FF               	movwf	btemp+1
  3174  04F1  3080               	movlw	128
  3175  04F2  027F               	subwf	btemp+1,w
  3176  04F3  1D03               	skipz
  3177  04F4  2CF7               	goto	u5365
  3178  04F5  3001               	movlw	1
  3179  04F6  0235               	subwf	sprintf@width^(0+128),w
  3180  04F7                     u5365:
  3181  04F7  1803               	skipnc
  3182  04F8  2CFA               	goto	u5361
  3183  04F9  2CFB               	goto	u5360
  3184  04FA                     u5361:
  3185  04FA  2CE0               	goto	l3313
  3186  04FB                     u5360:
  3187  04FB                     l3321:
  3188                           
  3189                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  3190  04FB  3003               	movlw	3
  3191  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  3192  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  3193  04FE  0533               	andwf	sprintf@flag^(0+128),w
  3194  04FF  00A5               	movwf	??_sprintf^(0+128)
  3195  0500  3000               	movlw	0
  3196  0501  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3197  0502  00A6               	movwf	(??_sprintf+1)^(0+128)
  3198  0503  0825               	movf	??_sprintf^(0+128),w
  3199  0504  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3200  0505  1903               	btfsc	3,2
  3201  0506  2D08               	goto	u5371
  3202  0507  2D09               	goto	u5370
  3203  0508                     u5371:
  3204  0508  2D7B               	goto	l338
  3205  0509                     u5370:
  3206  0509                     l3323:
  3207                           
  3208                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3209  0509  302D               	movlw	45
  3210  050A  00A5               	movwf	??_sprintf^(0+128)
  3211  050B  0841               	movf	sprintf@sp^(0+128),w
  3212  050C  0084               	movwf	4
  3213  050D  0825               	movf	??_sprintf^(0+128),w
  3214  050E  1383               	bcf	3,7	;select IRP bank0
  3215  050F  0080               	movwf	0
  3216  0510                     l3325:
  3217  0510  3001               	movlw	1
  3218  0511  00A5               	movwf	??_sprintf^(0+128)
  3219  0512  0825               	movf	??_sprintf^(0+128),w
  3220  0513  07C1               	addwf	sprintf@sp^(0+128),f
  3221  0514  2D7B               	goto	l338
  3222  0515                     l3327:
  3223                           
  3224                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3225  0515  0844               	movf	sprintf@c^(0+128),w
  3226  0516  00A5               	movwf	??_sprintf^(0+128)
  3227  0517  3001               	movlw	1
  3228  0518                     u5385:
  3229  0518  1003               	clrc
  3230  0519  0DA5               	rlf	??_sprintf^(0+128),f
  3231  051A  3EFF               	addlw	-1
  3232  051B  1D03               	skipz
  3233  051C  2D18               	goto	u5385
  3234  051D  1003               	clrc
  3235  051E  0D25               	rlf	??_sprintf^(0+128),w
  3236  051F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3237  0520  0084               	movwf	4
  3238  0521  120A  158A  200A  120A  118A  	fcall	stringdir
  3239  0526  00F0               	movwf	___lldiv@divisor
  3240  0527  120A  158A  200A  120A  118A  	fcall	stringdir
  3241  052C  00F1               	movwf	___lldiv@divisor+1
  3242  052D  120A  158A  200A  120A  118A  	fcall	stringdir
  3243  0532  00F2               	movwf	___lldiv@divisor+2
  3244  0533  120A  158A  200A  120A  118A  	fcall	stringdir
  3245  0538  00F3               	movwf	___lldiv@divisor+3
  3246  0539  0832               	movf	(sprintf@val+3)^(0+128),w
  3247  053A  00F7               	movwf	___lldiv@dividend+3
  3248  053B  0831               	movf	(sprintf@val+2)^(0+128),w
  3249  053C  00F6               	movwf	___lldiv@dividend+2
  3250  053D  0830               	movf	(sprintf@val+1)^(0+128),w
  3251  053E  00F5               	movwf	___lldiv@dividend+1
  3252  053F  082F               	movf	sprintf@val^(0+128),w
  3253  0540  00F4               	movwf	___lldiv@dividend
  3254  0541  160A  118A  2005  120A  118A  	fcall	___lldiv
  3255  0546  0873               	movf	?___lldiv+3,w
  3256  0547  1683               	bsf	3,5	;RP0=1, select bank1
  3257  0548  1303               	bcf	3,6	;RP1=0, select bank1
  3258  0549  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3259  054A  0872               	movf	?___lldiv+2,w
  3260  054B  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3261  054C  0871               	movf	?___lldiv+1,w
  3262  054D  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3263  054E  0870               	movf	?___lldiv,w
  3264  054F  00B7               	movwf	sprintf@tmpval^(0+128)
  3265  0550                     l3329:
  3266                           
  3267                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3268  0550  3000               	movlw	0
  3269  0551  00F3               	movwf	___llmod@divisor+3
  3270  0552  3000               	movlw	0
  3271  0553  00F2               	movwf	___llmod@divisor+2
  3272  0554  3000               	movlw	0
  3273  0555  00F1               	movwf	___llmod@divisor+1
  3274  0556  300A               	movlw	10
  3275  0557  00F0               	movwf	___llmod@divisor
  3276  0558  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3277  0559  00F7               	movwf	___llmod@dividend+3
  3278  055A  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3279  055B  00F6               	movwf	___llmod@dividend+2
  3280  055C  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3281  055D  00F5               	movwf	___llmod@dividend+1
  3282  055E  0837               	movf	sprintf@tmpval^(0+128),w
  3283  055F  00F4               	movwf	___llmod@dividend
  3284  0560  160A  158A  25F7  120A  118A  	fcall	___llmod
  3285  0565  0873               	movf	?___llmod+3,w
  3286  0566  1683               	bsf	3,5	;RP0=1, select bank1
  3287  0567  1303               	bcf	3,6	;RP1=0, select bank1
  3288  0568  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3289  0569  0872               	movf	?___llmod+2,w
  3290  056A  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3291  056B  0871               	movf	?___llmod+1,w
  3292  056C  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3293  056D  0870               	movf	?___llmod,w
  3294  056E  00B7               	movwf	sprintf@tmpval^(0+128)
  3295  056F                     l3331:
  3296                           
  3297                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3298  056F  0837               	movf	sprintf@tmpval^(0+128),w
  3299  0570  3E30               	addlw	48
  3300  0571  00A5               	movwf	??_sprintf^(0+128)
  3301  0572  0841               	movf	sprintf@sp^(0+128),w
  3302  0573  0084               	movwf	4
  3303  0574  0825               	movf	??_sprintf^(0+128),w
  3304  0575  1383               	bcf	3,7	;select IRP bank0
  3305  0576  0080               	movwf	0
  3306  0577  3001               	movlw	1
  3307  0578  00A5               	movwf	??_sprintf^(0+128)
  3308  0579  0825               	movf	??_sprintf^(0+128),w
  3309  057A  07C1               	addwf	sprintf@sp^(0+128),f
  3310  057B                     l338:	
  3311                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3312                           
  3313                           
  3314                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3315  057B  3001               	movlw	1
  3316  057C  02C4               	subwf	sprintf@c^(0+128),f
  3317  057D  0A44               	incf	sprintf@c^(0+128),w
  3318  057E  1D03               	btfss	3,2
  3319  057F  2D81               	goto	u5391
  3320  0580  2D82               	goto	u5390
  3321  0581                     u5391:
  3322  0581  2D15               	goto	l3327
  3323  0582                     u5390:
  3324  0582  2D96               	goto	l3339
  3325  0583                     l3333:
  3326                           
  3327                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3328  0583  3030               	movlw	48
  3329  0584  1683               	bsf	3,5	;RP0=1, select bank1
  3330  0585  1303               	bcf	3,6	;RP1=0, select bank1
  3331  0586  00A5               	movwf	??_sprintf^(0+128)
  3332  0587  0841               	movf	sprintf@sp^(0+128),w
  3333  0588  0084               	movwf	4
  3334  0589  0825               	movf	??_sprintf^(0+128),w
  3335  058A  1383               	bcf	3,7	;select IRP bank0
  3336  058B  0080               	movwf	0
  3337  058C                     l3335:
  3338  058C  3001               	movlw	1
  3339  058D  00A5               	movwf	??_sprintf^(0+128)
  3340  058E  0825               	movf	??_sprintf^(0+128),w
  3341  058F  07C1               	addwf	sprintf@sp^(0+128),f
  3342  0590                     l3337:
  3343                           
  3344                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3345  0590  30FF               	movlw	255
  3346  0591  07BB               	addwf	sprintf@eexp^(0+128),f
  3347  0592  1803               	skipnc
  3348  0593  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3349  0594  30FF               	movlw	255
  3350  0595  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3351  0596                     l3339:
  3352                           
  3353                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3354  0596  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3355  0597  3A80               	xorlw	128
  3356  0598  00FF               	movwf	btemp+1
  3357  0599  3080               	movlw	128
  3358  059A  027F               	subwf	btemp+1,w
  3359  059B  1D03               	skipz
  3360  059C  2D9F               	goto	u5405
  3361  059D  3001               	movlw	1
  3362  059E  023B               	subwf	sprintf@eexp^(0+128),w
  3363  059F                     u5405:
  3364  059F  1803               	skipnc
  3365  05A0  2DA2               	goto	u5401
  3366  05A1  2DA3               	goto	u5400
  3367  05A2                     u5401:
  3368  05A2  2D83               	goto	l3333
  3369  05A3                     u5400:
  3370  05A3                     l3341:
  3371                           
  3372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3373  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  3374  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  3375  05A5  0843               	movf	(sprintf@prec+1)^(0+128),w
  3376  05A6  3A80               	xorlw	128
  3377  05A7  00FF               	movwf	btemp+1
  3378  05A8  3080               	movlw	128
  3379  05A9  027F               	subwf	btemp+1,w
  3380  05AA  1D03               	skipz
  3381  05AB  2DAE               	goto	u5415
  3382  05AC  3009               	movlw	9
  3383  05AD  0242               	subwf	sprintf@prec^(0+128),w
  3384  05AE                     u5415:
  3385  05AE  1C03               	skipc
  3386  05AF  2DB1               	goto	u5411
  3387  05B0  2DB2               	goto	u5410
  3388  05B1                     u5411:
  3389  05B1  2DB9               	goto	l3345
  3390  05B2                     u5410:
  3391  05B2                     l3343:
  3392                           
  3393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3394  05B2  3008               	movlw	8
  3395  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  3396  05B4  1303               	bcf	3,6	;RP1=0, select bank1
  3397  05B5  00A5               	movwf	??_sprintf^(0+128)
  3398  05B6  0825               	movf	??_sprintf^(0+128),w
  3399  05B7  00C4               	movwf	sprintf@c^(0+128)
  3400  05B8  2DBF               	goto	l345
  3401  05B9                     l3345:
  3402                           
  3403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3404  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  3405  05BA  1303               	bcf	3,6	;RP1=0, select bank1
  3406  05BB  0842               	movf	sprintf@prec^(0+128),w
  3407  05BC  00A5               	movwf	??_sprintf^(0+128)
  3408  05BD  0825               	movf	??_sprintf^(0+128),w
  3409  05BE  00C4               	movwf	sprintf@c^(0+128)
  3410  05BF                     l345:
  3411                           
  3412                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3413  05BF  0844               	movf	sprintf@c^(0+128),w
  3414  05C0  00A5               	movwf	??_sprintf^(0+128)
  3415  05C1  01A6               	clrf	(??_sprintf^(0+128)+1)
  3416  05C2  0825               	movf	??_sprintf^(0+128),w
  3417  05C3  02C2               	subwf	sprintf@prec^(0+128),f
  3418  05C4  0826               	movf	(??_sprintf+1)^(0+128),w
  3419  05C5  1C03               	skipc
  3420  05C6  03C3               	decf	(sprintf@prec+1)^(0+128),f
  3421  05C7  02C3               	subwf	(sprintf@prec+1)^(0+128),f
  3422  05C8                     l3347:
  3423                           
  3424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3425  05C8  0844               	movf	sprintf@c^(0+128),w
  3426  05C9  1903               	btfsc	3,2
  3427  05CA  2DCC               	goto	u5421
  3428  05CB  2DCD               	goto	u5420
  3429  05CC                     u5421:
  3430  05CC  2DD8               	goto	l3353
  3431  05CD                     u5420:
  3432  05CD                     l3349:
  3433                           
  3434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3435  05CD  302E               	movlw	46
  3436  05CE  00A5               	movwf	??_sprintf^(0+128)
  3437  05CF  0841               	movf	sprintf@sp^(0+128),w
  3438  05D0  0084               	movwf	4
  3439  05D1  0825               	movf	??_sprintf^(0+128),w
  3440  05D2  1383               	bcf	3,7	;select IRP bank0
  3441  05D3  0080               	movwf	0
  3442  05D4                     l3351:
  3443  05D4  3001               	movlw	1
  3444  05D5  00A5               	movwf	??_sprintf^(0+128)
  3445  05D6  0825               	movf	??_sprintf^(0+128),w
  3446  05D7  07C1               	addwf	sprintf@sp^(0+128),f
  3447  05D8                     l3353:
  3448                           
  3449                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3450  05D8  0844               	movf	sprintf@c^(0+128),w
  3451  05D9  120A  158A  2140  120A  118A  	fcall	_scale
  3452  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  3453  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  3454  05E0  0841               	movf	?_scale+3,w
  3455  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  3456  05E2  1303               	bcf	3,6	;RP1=0, select bank1
  3457  05E3  00AD               	movwf	(_sprintf$1213+3)^(0+128)
  3458  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  3459  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  3460  05E6  0840               	movf	?_scale+2,w
  3461  05E7  1683               	bsf	3,5	;RP0=1, select bank1
  3462  05E8  1303               	bcf	3,6	;RP1=0, select bank1
  3463  05E9  00AC               	movwf	(_sprintf$1213+2)^(0+128)
  3464  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  3465  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  3466  05EC  083F               	movf	?_scale+1,w
  3467  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  3468  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  3469  05EF  00AB               	movwf	(_sprintf$1213+1)^(0+128)
  3470  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  3471  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  3472  05F2  083E               	movf	?_scale,w
  3473  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  3474  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  3475  05F5  00AA               	movwf	_sprintf$1213^(0+128)
  3476  05F6                     l3355:
  3477                           
  3478                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3479  05F6  082D               	movf	(_sprintf$1213+3)^(0+128),w
  3480  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3481  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  3482  05F9  00AB               	movwf	___flmul@a+3
  3483  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  3484  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  3485  05FC  082C               	movf	(_sprintf$1213+2)^(0+128),w
  3486  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  3487  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  3488  05FF  00AA               	movwf	___flmul@a+2
  3489  0600  1683               	bsf	3,5	;RP0=1, select bank1
  3490  0601  1303               	bcf	3,6	;RP1=0, select bank1
  3491  0602  082B               	movf	(_sprintf$1213+1)^(0+128),w
  3492  0603  1283               	bcf	3,5	;RP0=0, select bank0
  3493  0604  1303               	bcf	3,6	;RP1=0, select bank0
  3494  0605  00A9               	movwf	___flmul@a+1
  3495  0606  1683               	bsf	3,5	;RP0=1, select bank1
  3496  0607  1303               	bcf	3,6	;RP1=0, select bank1
  3497  0608  082A               	movf	_sprintf$1213^(0+128),w
  3498  0609  1283               	bcf	3,5	;RP0=0, select bank0
  3499  060A  1303               	bcf	3,6	;RP1=0, select bank0
  3500  060B  00A8               	movwf	___flmul@a
  3501  060C  1683               	bsf	3,5	;RP0=1, select bank1
  3502  060D  1303               	bcf	3,6	;RP1=0, select bank1
  3503  060E  0840               	movf	(sprintf@fval+3)^(0+128),w
  3504  060F  1283               	bcf	3,5	;RP0=0, select bank0
  3505  0610  1303               	bcf	3,6	;RP1=0, select bank0
  3506  0611  00A7               	movwf	___flmul@b+3
  3507  0612  1683               	bsf	3,5	;RP0=1, select bank1
  3508  0613  1303               	bcf	3,6	;RP1=0, select bank1
  3509  0614  083F               	movf	(sprintf@fval+2)^(0+128),w
  3510  0615  1283               	bcf	3,5	;RP0=0, select bank0
  3511  0616  1303               	bcf	3,6	;RP1=0, select bank0
  3512  0617  00A6               	movwf	___flmul@b+2
  3513  0618  1683               	bsf	3,5	;RP0=1, select bank1
  3514  0619  1303               	bcf	3,6	;RP1=0, select bank1
  3515  061A  083E               	movf	(sprintf@fval+1)^(0+128),w
  3516  061B  1283               	bcf	3,5	;RP0=0, select bank0
  3517  061C  1303               	bcf	3,6	;RP1=0, select bank0
  3518  061D  00A5               	movwf	___flmul@b+1
  3519  061E  1683               	bsf	3,5	;RP0=1, select bank1
  3520  061F  1303               	bcf	3,6	;RP1=0, select bank1
  3521  0620  083D               	movf	sprintf@fval^(0+128),w
  3522  0621  1283               	bcf	3,5	;RP0=0, select bank0
  3523  0622  1303               	bcf	3,6	;RP1=0, select bank0
  3524  0623  00A4               	movwf	___flmul@b
  3525  0624  120A  158A  249F  120A  118A  	fcall	___flmul
  3526  0629  1283               	bcf	3,5	;RP0=0, select bank0
  3527  062A  1303               	bcf	3,6	;RP1=0, select bank0
  3528  062B  0827               	movf	?___flmul+3,w
  3529  062C  00D4               	movwf	___fltol@f1+3
  3530  062D  0826               	movf	?___flmul+2,w
  3531  062E  00D3               	movwf	___fltol@f1+2
  3532  062F  0825               	movf	?___flmul+1,w
  3533  0630  00D2               	movwf	___fltol@f1+1
  3534  0631  0824               	movf	?___flmul,w
  3535  0632  00D1               	movwf	___fltol@f1
  3536  0633  120A  158A  20C4  120A  118A  	fcall	___fltol
  3537  0638  1283               	bcf	3,5	;RP0=0, select bank0
  3538  0639  1303               	bcf	3,6	;RP1=0, select bank0
  3539  063A  0854               	movf	?___fltol+3,w
  3540  063B  1683               	bsf	3,5	;RP0=1, select bank1
  3541  063C  1303               	bcf	3,6	;RP1=0, select bank1
  3542  063D  00B2               	movwf	(sprintf@val+3)^(0+128)
  3543  063E  1283               	bcf	3,5	;RP0=0, select bank0
  3544  063F  1303               	bcf	3,6	;RP1=0, select bank0
  3545  0640  0853               	movf	?___fltol+2,w
  3546  0641  1683               	bsf	3,5	;RP0=1, select bank1
  3547  0642  1303               	bcf	3,6	;RP1=0, select bank1
  3548  0643  00B1               	movwf	(sprintf@val+2)^(0+128)
  3549  0644  1283               	bcf	3,5	;RP0=0, select bank0
  3550  0645  1303               	bcf	3,6	;RP1=0, select bank0
  3551  0646  0852               	movf	?___fltol+1,w
  3552  0647  1683               	bsf	3,5	;RP0=1, select bank1
  3553  0648  1303               	bcf	3,6	;RP1=0, select bank1
  3554  0649  00B0               	movwf	(sprintf@val+1)^(0+128)
  3555  064A  1283               	bcf	3,5	;RP0=0, select bank0
  3556  064B  1303               	bcf	3,6	;RP1=0, select bank0
  3557  064C  0851               	movf	?___fltol,w
  3558  064D  1683               	bsf	3,5	;RP0=1, select bank1
  3559  064E  1303               	bcf	3,6	;RP1=0, select bank1
  3560  064F  00AF               	movwf	sprintf@val^(0+128)
  3561                           
  3562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3563  0650  2EF2               	goto	l3365
  3564  0651                     l3357:
  3565                           
  3566                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3567  0651  0844               	movf	sprintf@c^(0+128),w
  3568  0652  00A5               	movwf	??_sprintf^(0+128)
  3569  0653  3001               	movlw	1
  3570  0654                     u5435:
  3571  0654  1003               	clrc
  3572  0655  0DA5               	rlf	??_sprintf^(0+128),f
  3573  0656  3EFF               	addlw	-1
  3574  0657  1D03               	skipz
  3575  0658  2E54               	goto	u5435
  3576  0659  1003               	clrc
  3577  065A  0D25               	rlf	??_sprintf^(0+128),w
  3578  065B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3579  065C  0084               	movwf	4
  3580  065D  120A  158A  200A  120A  118A  	fcall	stringdir
  3581  0662  00F0               	movwf	___lldiv@divisor
  3582  0663  120A  158A  200A  120A  118A  	fcall	stringdir
  3583  0668  00F1               	movwf	___lldiv@divisor+1
  3584  0669  120A  158A  200A  120A  118A  	fcall	stringdir
  3585  066E  00F2               	movwf	___lldiv@divisor+2
  3586  066F  120A  158A  200A  120A  118A  	fcall	stringdir
  3587  0674  00F3               	movwf	___lldiv@divisor+3
  3588  0675  0832               	movf	(sprintf@val+3)^(0+128),w
  3589  0676  00F7               	movwf	___lldiv@dividend+3
  3590  0677  0831               	movf	(sprintf@val+2)^(0+128),w
  3591  0678  00F6               	movwf	___lldiv@dividend+2
  3592  0679  0830               	movf	(sprintf@val+1)^(0+128),w
  3593  067A  00F5               	movwf	___lldiv@dividend+1
  3594  067B  082F               	movf	sprintf@val^(0+128),w
  3595  067C  00F4               	movwf	___lldiv@dividend
  3596  067D  160A  118A  2005  120A  118A  	fcall	___lldiv
  3597  0682  0873               	movf	?___lldiv+3,w
  3598  0683  1683               	bsf	3,5	;RP0=1, select bank1
  3599  0684  1303               	bcf	3,6	;RP1=0, select bank1
  3600  0685  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3601  0686  0872               	movf	?___lldiv+2,w
  3602  0687  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3603  0688  0871               	movf	?___lldiv+1,w
  3604  0689  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3605  068A  0870               	movf	?___lldiv,w
  3606  068B  00B7               	movwf	sprintf@tmpval^(0+128)
  3607  068C                     l3359:
  3608                           
  3609                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3610  068C  3000               	movlw	0
  3611  068D  00F3               	movwf	___llmod@divisor+3
  3612  068E  3000               	movlw	0
  3613  068F  00F2               	movwf	___llmod@divisor+2
  3614  0690  3000               	movlw	0
  3615  0691  00F1               	movwf	___llmod@divisor+1
  3616  0692  300A               	movlw	10
  3617  0693  00F0               	movwf	___llmod@divisor
  3618  0694  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3619  0695  00F7               	movwf	___llmod@dividend+3
  3620  0696  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3621  0697  00F6               	movwf	___llmod@dividend+2
  3622  0698  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3623  0699  00F5               	movwf	___llmod@dividend+1
  3624  069A  0837               	movf	sprintf@tmpval^(0+128),w
  3625  069B  00F4               	movwf	___llmod@dividend
  3626  069C  160A  158A  25F7  120A  118A  	fcall	___llmod
  3627  06A1  0873               	movf	?___llmod+3,w
  3628  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  3629  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  3630  06A4  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3631  06A5  0872               	movf	?___llmod+2,w
  3632  06A6  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3633  06A7  0871               	movf	?___llmod+1,w
  3634  06A8  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3635  06A9  0870               	movf	?___llmod,w
  3636  06AA  00B7               	movwf	sprintf@tmpval^(0+128)
  3637  06AB                     l3361:
  3638                           
  3639                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3640  06AB  0837               	movf	sprintf@tmpval^(0+128),w
  3641  06AC  3E30               	addlw	48
  3642  06AD  00A5               	movwf	??_sprintf^(0+128)
  3643  06AE  0841               	movf	sprintf@sp^(0+128),w
  3644  06AF  0084               	movwf	4
  3645  06B0  0825               	movf	??_sprintf^(0+128),w
  3646  06B1  1383               	bcf	3,7	;select IRP bank0
  3647  06B2  0080               	movwf	0
  3648  06B3  3001               	movlw	1
  3649  06B4  00A5               	movwf	??_sprintf^(0+128)
  3650  06B5  0825               	movf	??_sprintf^(0+128),w
  3651  06B6  07C1               	addwf	sprintf@sp^(0+128),f
  3652  06B7                     l3363:
  3653                           
  3654                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3655  06B7  0844               	movf	sprintf@c^(0+128),w
  3656  06B8  00A5               	movwf	??_sprintf^(0+128)
  3657  06B9  3001               	movlw	1
  3658  06BA                     u5445:
  3659  06BA  1003               	clrc
  3660  06BB  0DA5               	rlf	??_sprintf^(0+128),f
  3661  06BC  3EFF               	addlw	-1
  3662  06BD  1D03               	skipz
  3663  06BE  2EBA               	goto	u5445
  3664  06BF  1003               	clrc
  3665  06C0  0D25               	rlf	??_sprintf^(0+128),w
  3666  06C1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3667  06C2  0084               	movwf	4
  3668  06C3  120A  158A  200A  120A  118A  	fcall	stringdir
  3669  06C8  00F0               	movwf	___llmod@divisor
  3670  06C9  120A  158A  200A  120A  118A  	fcall	stringdir
  3671  06CE  00F1               	movwf	___llmod@divisor+1
  3672  06CF  120A  158A  200A  120A  118A  	fcall	stringdir
  3673  06D4  00F2               	movwf	___llmod@divisor+2
  3674  06D5  120A  158A  200A  120A  118A  	fcall	stringdir
  3675  06DA  00F3               	movwf	___llmod@divisor+3
  3676  06DB  0832               	movf	(sprintf@val+3)^(0+128),w
  3677  06DC  00F7               	movwf	___llmod@dividend+3
  3678  06DD  0831               	movf	(sprintf@val+2)^(0+128),w
  3679  06DE  00F6               	movwf	___llmod@dividend+2
  3680  06DF  0830               	movf	(sprintf@val+1)^(0+128),w
  3681  06E0  00F5               	movwf	___llmod@dividend+1
  3682  06E1  082F               	movf	sprintf@val^(0+128),w
  3683  06E2  00F4               	movwf	___llmod@dividend
  3684  06E3  160A  158A  25F7  120A  118A  	fcall	___llmod
  3685  06E8  0873               	movf	?___llmod+3,w
  3686  06E9  1683               	bsf	3,5	;RP0=1, select bank1
  3687  06EA  1303               	bcf	3,6	;RP1=0, select bank1
  3688  06EB  00B2               	movwf	(sprintf@val+3)^(0+128)
  3689  06EC  0872               	movf	?___llmod+2,w
  3690  06ED  00B1               	movwf	(sprintf@val+2)^(0+128)
  3691  06EE  0871               	movf	?___llmod+1,w
  3692  06EF  00B0               	movwf	(sprintf@val+1)^(0+128)
  3693  06F0  0870               	movf	?___llmod,w
  3694  06F1  00AF               	movwf	sprintf@val^(0+128)
  3695  06F2                     l3365:
  3696                           
  3697                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3698  06F2  3001               	movlw	1
  3699  06F3  02C4               	subwf	sprintf@c^(0+128),f
  3700  06F4  0A44               	incf	sprintf@c^(0+128),w
  3701  06F5  1D03               	btfss	3,2
  3702  06F6  2EF8               	goto	u5451
  3703  06F7  2EF9               	goto	u5450
  3704  06F8                     u5451:
  3705  06F8  2E51               	goto	l3357
  3706  06F9                     u5450:
  3707  06F9  2F0B               	goto	l3373
  3708  06FA                     l3367:
  3709                           
  3710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3711  06FA  3030               	movlw	48
  3712  06FB  00A5               	movwf	??_sprintf^(0+128)
  3713  06FC  0841               	movf	sprintf@sp^(0+128),w
  3714  06FD  0084               	movwf	4
  3715  06FE  0825               	movf	??_sprintf^(0+128),w
  3716  06FF  1383               	bcf	3,7	;select IRP bank0
  3717  0700  0080               	movwf	0
  3718  0701                     l3369:
  3719  0701  3001               	movlw	1
  3720  0702  00A5               	movwf	??_sprintf^(0+128)
  3721  0703  0825               	movf	??_sprintf^(0+128),w
  3722  0704  07C1               	addwf	sprintf@sp^(0+128),f
  3723  0705                     l3371:
  3724                           
  3725                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3726  0705  30FF               	movlw	255
  3727  0706  07C2               	addwf	sprintf@prec^(0+128),f
  3728  0707  1803               	skipnc
  3729  0708  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3730  0709  30FF               	movlw	255
  3731  070A  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3732  070B                     l3373:
  3733                           
  3734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3735  070B  0842               	movf	sprintf@prec^(0+128),w
  3736  070C  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3737  070D  1D03               	btfss	3,2
  3738  070E  2F10               	goto	u5461
  3739  070F  2F11               	goto	u5460
  3740  0710                     u5461:
  3741  0710  2EFA               	goto	l3367
  3742  0711                     u5460:
  3743  0711  2FD5               	goto	l3421
  3744  0712                     l3375:
  3745                           
  3746                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3747  0712  0842               	movf	sprintf@prec^(0+128),w
  3748  0713  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3749  0714  1D03               	btfss	3,2
  3750  0715  2F17               	goto	u5471
  3751  0716  2F18               	goto	u5470
  3752  0717                     u5471:
  3753  0717  2F26               	goto	l353
  3754  0718                     u5470:
  3755  0718                     l3377:
  3756  0718  0832               	movf	(sprintf@val+3)^(0+128),w
  3757  0719  0431               	iorwf	(sprintf@val+2)^(0+128),w
  3758  071A  0430               	iorwf	(sprintf@val+1)^(0+128),w
  3759  071B  042F               	iorwf	sprintf@val^(0+128),w
  3760  071C  1D03               	skipz
  3761  071D  2F1F               	goto	u5481
  3762  071E  2F20               	goto	u5480
  3763  071F                     u5481:
  3764  071F  2F26               	goto	l353
  3765  0720                     u5480:
  3766  0720                     l3379:
  3767                           
  3768                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3769  0720  3001               	movlw	1
  3770  0721  07C2               	addwf	sprintf@prec^(0+128),f
  3771  0722  1803               	skipnc
  3772  0723  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3773  0724  3000               	movlw	0
  3774  0725  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3775  0726                     l353:
  3776                           
  3777                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3778  0726  0843               	movf	(sprintf@prec+1)^(0+128),w
  3779  0727  3A80               	xorlw	128
  3780  0728  3C80               	sublw	128
  3781  0729  1D03               	skipz
  3782  072A  2F2D               	goto	u5495
  3783  072B  0842               	movf	sprintf@prec^(0+128),w
  3784  072C  0244               	subwf	sprintf@c^(0+128),w
  3785  072D                     u5495:
  3786  072D  1803               	skipnc
  3787  072E  2F30               	goto	u5491
  3788  072F  2F31               	goto	u5490
  3789  0730                     u5491:
  3790  0730  2F38               	goto	l3383
  3791  0731                     u5490:
  3792  0731                     l3381:
  3793                           
  3794                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  3795  0731  1683               	bsf	3,5	;RP0=1, select bank1
  3796  0732  1303               	bcf	3,6	;RP1=0, select bank1
  3797  0733  0842               	movf	sprintf@prec^(0+128),w
  3798  0734  00A5               	movwf	??_sprintf^(0+128)
  3799  0735  0825               	movf	??_sprintf^(0+128),w
  3800  0736  00C4               	movwf	sprintf@c^(0+128)
  3801  0737  2F50               	goto	l3387
  3802  0738                     l3383:
  3803  0738  1683               	bsf	3,5	;RP0=1, select bank1
  3804  0739  1303               	bcf	3,6	;RP1=0, select bank1
  3805  073A  0843               	movf	(sprintf@prec+1)^(0+128),w
  3806  073B  3A80               	xorlw	128
  3807  073C  00A5               	movwf	??_sprintf^(0+128)
  3808  073D  3080               	movlw	128
  3809  073E  0225               	subwf	??_sprintf^(0+128),w
  3810  073F  1D03               	skipz
  3811  0740  2F43               	goto	u5505
  3812  0741  0844               	movf	sprintf@c^(0+128),w
  3813  0742  0242               	subwf	sprintf@prec^(0+128),w
  3814  0743                     u5505:
  3815  0743  1803               	skipnc
  3816  0744  2F46               	goto	u5501
  3817  0745  2F47               	goto	u5500
  3818  0746                     u5501:
  3819  0746  2F50               	goto	l3387
  3820  0747                     u5500:
  3821  0747                     l3385:
  3822                           
  3823                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3824  0747  1683               	bsf	3,5	;RP0=1, select bank1
  3825  0748  1303               	bcf	3,6	;RP1=0, select bank1
  3826  0749  0844               	movf	sprintf@c^(0+128),w
  3827  074A  00A5               	movwf	??_sprintf^(0+128)
  3828  074B  01A6               	clrf	(??_sprintf^(0+128)+1)
  3829  074C  0825               	movf	??_sprintf^(0+128),w
  3830  074D  00C2               	movwf	sprintf@prec^(0+128)
  3831  074E  0826               	movf	(??_sprintf+1)^(0+128),w
  3832  074F  00C3               	movwf	(sprintf@prec+1)^(0+128)
  3833  0750                     l3387:
  3834                           
  3835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3836  0750  1683               	bsf	3,5	;RP0=1, select bank1
  3837  0751  1303               	bcf	3,6	;RP1=0, select bank1
  3838  0752  0835               	movf	sprintf@width^(0+128),w
  3839  0753  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3840  0754  1903               	btfsc	3,2
  3841  0755  2F57               	goto	u5511
  3842  0756  2F58               	goto	u5510
  3843  0757                     u5511:
  3844  0757  2F6A               	goto	l3393
  3845  0758                     u5510:
  3846  0758                     l3389:
  3847  0758  3003               	movlw	3
  3848  0759  0533               	andwf	sprintf@flag^(0+128),w
  3849  075A  00A5               	movwf	??_sprintf^(0+128)
  3850  075B  3000               	movlw	0
  3851  075C  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3852  075D  00A6               	movwf	(??_sprintf+1)^(0+128)
  3853  075E  0825               	movf	??_sprintf^(0+128),w
  3854  075F  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3855  0760  1903               	btfsc	3,2
  3856  0761  2F63               	goto	u5521
  3857  0762  2F64               	goto	u5520
  3858  0763                     u5521:
  3859  0763  2F6A               	goto	l3393
  3860  0764                     u5520:
  3861  0764                     l3391:
  3862                           
  3863                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3864  0764  30FF               	movlw	255
  3865  0765  07B5               	addwf	sprintf@width^(0+128),f
  3866  0766  1803               	skipnc
  3867  0767  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3868  0768  30FF               	movlw	255
  3869  0769  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3870  076A                     l3393:
  3871                           
  3872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  3873  076A  1F34               	btfss	(sprintf@flag+1)^(0+128),6
  3874  076B  2F6D               	goto	u5531
  3875  076C  2F6E               	goto	u5530
  3876  076D                     u5531:
  3877  076D  2F89               	goto	l3401
  3878  076E                     u5530:
  3879  076E                     l3395:
  3880                           
  3881                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  3882  076E  0843               	movf	(sprintf@prec+1)^(0+128),w
  3883  076F  3A80               	xorlw	128
  3884  0770  00A5               	movwf	??_sprintf^(0+128)
  3885  0771  0836               	movf	(sprintf@width+1)^(0+128),w
  3886  0772  3A80               	xorlw	128
  3887  0773  0225               	subwf	??_sprintf^(0+128),w
  3888  0774  1D03               	skipz
  3889  0775  2F78               	goto	u5545
  3890  0776  0835               	movf	sprintf@width^(0+128),w
  3891  0777  0242               	subwf	sprintf@prec^(0+128),w
  3892  0778                     u5545:
  3893  0778  1803               	skipnc
  3894  0779  2F7B               	goto	u5541
  3895  077A  2F7C               	goto	u5540
  3896  077B                     u5541:
  3897  077B  2F85               	goto	l3399
  3898  077C                     u5540:
  3899  077C                     l3397:
  3900                           
  3901                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  3902  077C  1683               	bsf	3,5	;RP0=1, select bank1
  3903  077D  1303               	bcf	3,6	;RP1=0, select bank1
  3904  077E  0842               	movf	sprintf@prec^(0+128),w
  3905  077F  02B5               	subwf	sprintf@width^(0+128),f
  3906  0780  0843               	movf	(sprintf@prec+1)^(0+128),w
  3907  0781  1C03               	skipc
  3908  0782  03B6               	decf	(sprintf@width+1)^(0+128),f
  3909  0783  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3910  0784  2F89               	goto	l3401
  3911  0785                     l3399:
  3912                           
  3913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  3914  0785  1683               	bsf	3,5	;RP0=1, select bank1
  3915  0786  1303               	bcf	3,6	;RP1=0, select bank1
  3916  0787  01B5               	clrf	sprintf@width^(0+128)
  3917  0788  01B6               	clrf	(sprintf@width+1)^(0+128)
  3918  0789                     l3401:
  3919                           
  3920                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3921  0789  0836               	movf	(sprintf@width+1)^(0+128),w
  3922  078A  3A80               	xorlw	128
  3923  078B  3C80               	sublw	128
  3924  078C  1D03               	skipz
  3925  078D  2F90               	goto	u5555
  3926  078E  0835               	movf	sprintf@width^(0+128),w
  3927  078F  0244               	subwf	sprintf@c^(0+128),w
  3928  0790                     u5555:
  3929  0790  1803               	skipnc
  3930  0791  2F93               	goto	u5551
  3931  0792  2F94               	goto	u5550
  3932  0793                     u5551:
  3933  0793  2FA0               	goto	l3405
  3934  0794                     u5550:
  3935  0794                     l3403:
  3936                           
  3937                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3938  0794  1683               	bsf	3,5	;RP0=1, select bank1
  3939  0795  1303               	bcf	3,6	;RP1=0, select bank1
  3940  0796  0844               	movf	sprintf@c^(0+128),w
  3941  0797  00A5               	movwf	??_sprintf^(0+128)
  3942  0798  01A6               	clrf	(??_sprintf^(0+128)+1)
  3943  0799  0825               	movf	??_sprintf^(0+128),w
  3944  079A  02B5               	subwf	sprintf@width^(0+128),f
  3945  079B  0826               	movf	(??_sprintf+1)^(0+128),w
  3946  079C  1C03               	skipc
  3947  079D  03B6               	decf	(sprintf@width+1)^(0+128),f
  3948  079E  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3949  079F  2FA4               	goto	l3407
  3950  07A0                     l3405:
  3951                           
  3952                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3953  07A0  1683               	bsf	3,5	;RP0=1, select bank1
  3954  07A1  1303               	bcf	3,6	;RP1=0, select bank1
  3955  07A2  01B5               	clrf	sprintf@width^(0+128)
  3956  07A3  01B6               	clrf	(sprintf@width+1)^(0+128)
  3957  07A4                     l3407:
  3958                           
  3959                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3960  07A4  0835               	movf	sprintf@width^(0+128),w
  3961  07A5  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3962  07A6  1903               	btfsc	3,2
  3963  07A7  2FA9               	goto	u5561
  3964  07A8  2FAA               	goto	u5560
  3965  07A9                     u5561:
  3966  07A9  2FC1               	goto	l3415
  3967  07AA                     u5560:
  3968  07AA                     l3409:
  3969                           
  3970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  3971  07AA  3020               	movlw	32
  3972  07AB  00A5               	movwf	??_sprintf^(0+128)
  3973  07AC  0841               	movf	sprintf@sp^(0+128),w
  3974  07AD  0084               	movwf	4
  3975  07AE  0825               	movf	??_sprintf^(0+128),w
  3976  07AF  1383               	bcf	3,7	;select IRP bank0
  3977  07B0  0080               	movwf	0
  3978  07B1                     l3411:
  3979  07B1  3001               	movlw	1
  3980  07B2  00A5               	movwf	??_sprintf^(0+128)
  3981  07B3  0825               	movf	??_sprintf^(0+128),w
  3982  07B4  07C1               	addwf	sprintf@sp^(0+128),f
  3983  07B5                     l3413:
  3984  07B5  30FF               	movlw	255
  3985  07B6  07B5               	addwf	sprintf@width^(0+128),f
  3986  07B7  1803               	skipnc
  3987  07B8  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3988  07B9  30FF               	movlw	255
  3989  07BA  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3990  07BB  0835               	movf	sprintf@width^(0+128),w
  3991  07BC  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3992  07BD  1D03               	btfss	3,2
  3993  07BE  2FC0               	goto	u5571
  3994  07BF  2FC1               	goto	u5570
  3995  07C0                     u5571:
  3996  07C0  2FAA               	goto	l3409
  3997  07C1                     u5570:
  3998  07C1                     l3415:
  3999                           
  4000                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  4001  07C1  3003               	movlw	3
  4002  07C2  0533               	andwf	sprintf@flag^(0+128),w
  4003  07C3  00A5               	movwf	??_sprintf^(0+128)
  4004  07C4  3000               	movlw	0
  4005  07C5  0534               	andwf	(sprintf@flag+1)^(0+128),w
  4006  07C6  00A6               	movwf	(??_sprintf+1)^(0+128)
  4007  07C7  0825               	movf	??_sprintf^(0+128),w
  4008  07C8  0426               	iorwf	(??_sprintf^(0+128)+1),w
  4009  07C9  1903               	btfsc	3,2
  4010  07CA  2FCC               	goto	u5581
  4011  07CB  2FCD               	goto	u5580
  4012  07CC                     u5581:
  4013  07CC  2FD5               	goto	l3421
  4014  07CD                     u5580:
  4015  07CD                     l3417:
  4016                           
  4017                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  4018  07CD  302D               	movlw	45
  4019  07CE  00A5               	movwf	??_sprintf^(0+128)
  4020  07CF  0841               	movf	sprintf@sp^(0+128),w
  4021  07D0  0084               	movwf	4
  4022  07D1  0825               	movf	??_sprintf^(0+128),w
  4023  07D2  1383               	bcf	3,7	;select IRP bank0
  4024  07D3  0080               	movwf	0
  4025  07D4  2886               	goto	l3177
  4026  07D5                     l3421:
  4027                           
  4028                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  4029  07D5  3001               	movlw	1
  4030  07D6  07A0               	addwf	sprintf@f^(0+128),f
  4031  07D7  30FF               	movlw	-1
  4032  07D8  0720               	addwf	sprintf@f^(0+128),w
  4033  07D9  0084               	movwf	4
  4034  07DA  120A  158A  200A  120A  118A  	fcall	stringdir
  4035  07DF  00A5               	movwf	??_sprintf^(0+128)
  4036  07E0  0825               	movf	??_sprintf^(0+128),w
  4037  07E1  00C4               	movwf	sprintf@c^(0+128)
  4038  07E2  0844               	movf	sprintf@c^(0+128),w
  4039  07E3  1D03               	btfss	3,2
  4040  07E4  2FE6               	goto	u5591
  4041  07E5  2FE7               	goto	u5590
  4042  07E6                     u5591:
  4043  07E6  2879               	goto	l3173
  4044  07E7                     u5590:
  4045  07E7                     l3423:
  4046                           
  4047                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  4048  07E7  0841               	movf	sprintf@sp^(0+128),w
  4049  07E8  0084               	movwf	4
  4050  07E9  1383               	bcf	3,7	;select IRP bank0
  4051  07EA  0180               	clrf	0
  4052  07EB                     l368:
  4053  07EB  0008               	return
  4054  07EC                     __end_of_sprintf:
  4055                           
  4056                           	psect	text2
  4057  0940                     __ptext2:	
  4058 ;; *************** function _scale *****************
  4059 ;; Defined at:
  4060 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;  scl             1    wreg     char 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;  scl             1   48[BANK0 ] char 
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  4   30[BANK0 ] char 
  4067 ;; Registers used:
  4068 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4069 ;; Tracked objects:
  4070 ;;		On entry : 0/0
  4071 ;;		On exit  : 0/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4074 ;;      Params:         0       4       0       0       0
  4075 ;;      Locals:         0       5       0       0       0
  4076 ;;      Temps:          0      10       0       0       0
  4077 ;;      Totals:         0      19       0       0       0
  4078 ;;Total ram usage:       19 bytes
  4079 ;; Hardware stack levels used:    1
  4080 ;; Hardware stack levels required when called:    2
  4081 ;; This function calls:
  4082 ;;		___awdiv
  4083 ;;		___awmod
  4084 ;;		___flmul
  4085 ;; This function is called by:
  4086 ;;		_sprintf
  4087 ;; This function uses a non-reentrant model
  4088 ;;
  4089                           
  4090                           
  4091                           ;psect for function _scale
  4092  0940                     _scale:
  4093                           
  4094                           ;incstack = 0
  4095                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4096                           ;scale@scl stored from wreg
  4097  0940  1283               	bcf	3,5	;RP0=0, select bank0
  4098  0941  1303               	bcf	3,6	;RP1=0, select bank0
  4099  0942  00D0               	movwf	scale@scl
  4100  0943                     l2777:
  4101                           
  4102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  4103  0943  1FD0               	btfss	scale@scl,7
  4104  0944  2946               	goto	u4101
  4105  0945  2947               	goto	u4100
  4106  0946                     u4101:
  4107  0946  2AF4               	goto	l2799
  4108  0947                     u4100:
  4109  0947                     l2779:
  4110                           
  4111                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  4112  0947  09D0               	comf	scale@scl,f
  4113  0948  0AD0               	incf	scale@scl,f
  4114  0949                     l2781:
  4115                           
  4116                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  4117  0949  0850               	movf	scale@scl,w
  4118  094A  3A80               	xorlw	128
  4119  094B  3E12               	addlw	-238
  4120  094C  1C03               	skipc
  4121  094D  294F               	goto	u4111
  4122  094E  2950               	goto	u4110
  4123  094F                     u4111:
  4124  094F  2A38               	goto	l2789
  4125  0950                     u4110:
  4126  0950                     l2783:
  4127                           
  4128                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4129  0950  300A               	movlw	10
  4130  0951  00F7               	movwf	___awdiv@divisor
  4131  0952  3000               	movlw	0
  4132  0953  00F8               	movwf	___awdiv@divisor+1
  4133  0954  0850               	movf	scale@scl,w
  4134  0955  00F2               	movwf	___awmod@dividend
  4135  0956  01F3               	clrf	___awmod@dividend+1
  4136  0957  1BF2               	btfsc	___awmod@dividend,7
  4137  0958  03F3               	decf	___awmod@dividend+1,f
  4138  0959  3064               	movlw	100
  4139  095A  00F0               	movwf	___awmod@divisor
  4140  095B  3000               	movlw	0
  4141  095C  00F1               	movwf	___awmod@divisor+1
  4142  095D  160A  158A  264B  120A  158A  	fcall	___awmod
  4143  0962  0871               	movf	?___awmod+1,w
  4144  0963  00FA               	movwf	___awdiv@dividend+1
  4145  0964  0870               	movf	?___awmod,w
  4146  0965  00F9               	movwf	___awdiv@dividend
  4147  0966  120A  118A  2008  120A  158A  	fcall	___awdiv
  4148  096B  0877               	movf	?___awdiv,w
  4149  096C  1283               	bcf	3,5	;RP0=0, select bank0
  4150  096D  1303               	bcf	3,6	;RP1=0, select bank0
  4151  096E  00C2               	movwf	??_scale
  4152  096F  3001               	movlw	1
  4153  0970                     u4125:
  4154  0970  1003               	clrc
  4155  0971  0DC2               	rlf	??_scale,f
  4156  0972  3EFF               	addlw	-1
  4157  0973  1D03               	skipz
  4158  0974  2970               	goto	u4125
  4159  0975  1003               	clrc
  4160  0976  0D42               	rlf	??_scale,w
  4161  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4162  0978  0084               	movwf	4
  4163  0979  120A  158A  200A  120A  158A  	fcall	stringdir
  4164  097E  00C3               	movwf	??_scale+1
  4165  097F  120A  158A  200A  120A  158A  	fcall	stringdir
  4166  0984  00C4               	movwf	??_scale+2
  4167  0985  120A  158A  200A  120A  158A  	fcall	stringdir
  4168  098A  00C5               	movwf	??_scale+3
  4169  098B  120A  158A  200A  120A  158A  	fcall	stringdir
  4170  0990  00C6               	movwf	??_scale+4
  4171  0991  0846               	movf	??_scale+4,w
  4172  0992  00A7               	movwf	___flmul@b+3
  4173  0993  0845               	movf	??_scale+3,w
  4174  0994  00A6               	movwf	___flmul@b+2
  4175  0995  0844               	movf	??_scale+2,w
  4176  0996  00A5               	movwf	___flmul@b+1
  4177  0997  0843               	movf	??_scale+1,w
  4178  0998  00A4               	movwf	___flmul@b
  4179  0999  3064               	movlw	100
  4180  099A  00F7               	movwf	___awdiv@divisor
  4181  099B  3000               	movlw	0
  4182  099C  00F8               	movwf	___awdiv@divisor+1
  4183  099D  0850               	movf	scale@scl,w
  4184  099E  00F9               	movwf	___awdiv@dividend
  4185  099F  01FA               	clrf	___awdiv@dividend+1
  4186  09A0  1BF9               	btfsc	___awdiv@dividend,7
  4187  09A1  03FA               	decf	___awdiv@dividend+1,f
  4188  09A2  120A  118A  2008  120A  158A  	fcall	___awdiv
  4189  09A7  0877               	movf	?___awdiv,w
  4190  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  4191  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  4192  09AA  00C7               	movwf	??_scale+5
  4193  09AB  3001               	movlw	1
  4194  09AC                     u4135:
  4195  09AC  1003               	clrc
  4196  09AD  0DC7               	rlf	??_scale+5,f
  4197  09AE  3EFF               	addlw	-1
  4198  09AF  1D03               	skipz
  4199  09B0  29AC               	goto	u4135
  4200  09B1  1003               	clrc
  4201  09B2  0D47               	rlf	??_scale+5,w
  4202  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4203  09B4  0084               	movwf	4
  4204  09B5  120A  158A  200A  120A  158A  	fcall	stringdir
  4205  09BA  00C8               	movwf	??_scale+6
  4206  09BB  120A  158A  200A  120A  158A  	fcall	stringdir
  4207  09C0  00C9               	movwf	??_scale+7
  4208  09C1  120A  158A  200A  120A  158A  	fcall	stringdir
  4209  09C6  00CA               	movwf	??_scale+8
  4210  09C7  120A  158A  200A  120A  158A  	fcall	stringdir
  4211  09CC  00CB               	movwf	??_scale+9
  4212  09CD  084B               	movf	??_scale+9,w
  4213  09CE  00AB               	movwf	___flmul@a+3
  4214  09CF  084A               	movf	??_scale+8,w
  4215  09D0  00AA               	movwf	___flmul@a+2
  4216  09D1  0849               	movf	??_scale+7,w
  4217  09D2  00A9               	movwf	___flmul@a+1
  4218  09D3  0848               	movf	??_scale+6,w
  4219  09D4  00A8               	movwf	___flmul@a
  4220  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  4221  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  4222  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  4223  09DC  0827               	movf	?___flmul+3,w
  4224  09DD  00CF               	movwf	_scale$1212+3
  4225  09DE  0826               	movf	?___flmul+2,w
  4226  09DF  00CE               	movwf	_scale$1212+2
  4227  09E0  0825               	movf	?___flmul+1,w
  4228  09E1  00CD               	movwf	_scale$1212+1
  4229  09E2  0824               	movf	?___flmul,w
  4230  09E3  00CC               	movwf	_scale$1212
  4231                           
  4232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4233  09E4  300A               	movlw	10
  4234  09E5  00F0               	movwf	___awmod@divisor
  4235  09E6  3000               	movlw	0
  4236  09E7  00F1               	movwf	___awmod@divisor+1
  4237  09E8  0850               	movf	scale@scl,w
  4238  09E9  00F2               	movwf	___awmod@dividend
  4239  09EA  01F3               	clrf	___awmod@dividend+1
  4240  09EB  1BF2               	btfsc	___awmod@dividend,7
  4241  09EC  03F3               	decf	___awmod@dividend+1,f
  4242  09ED  160A  158A  264B  120A  158A  	fcall	___awmod
  4243  09F2  0870               	movf	?___awmod,w
  4244  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  4245  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  4246  09F5  00C2               	movwf	??_scale
  4247  09F6  3001               	movlw	1
  4248  09F7                     u4145:
  4249  09F7  1003               	clrc
  4250  09F8  0DC2               	rlf	??_scale,f
  4251  09F9  3EFF               	addlw	-1
  4252  09FA  1D03               	skipz
  4253  09FB  29F7               	goto	u4145
  4254  09FC  1003               	clrc
  4255  09FD  0D42               	rlf	??_scale,w
  4256  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4257  09FF  0084               	movwf	4
  4258  0A00  120A  158A  200A  120A  158A  	fcall	stringdir
  4259  0A05  00C3               	movwf	??_scale+1
  4260  0A06  120A  158A  200A  120A  158A  	fcall	stringdir
  4261  0A0B  00C4               	movwf	??_scale+2
  4262  0A0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4263  0A11  00C5               	movwf	??_scale+3
  4264  0A12  120A  158A  200A  120A  158A  	fcall	stringdir
  4265  0A17  00C6               	movwf	??_scale+4
  4266  0A18  0846               	movf	??_scale+4,w
  4267  0A19  00A7               	movwf	___flmul@b+3
  4268  0A1A  0845               	movf	??_scale+3,w
  4269  0A1B  00A6               	movwf	___flmul@b+2
  4270  0A1C  0844               	movf	??_scale+2,w
  4271  0A1D  00A5               	movwf	___flmul@b+1
  4272  0A1E  0843               	movf	??_scale+1,w
  4273  0A1F  00A4               	movwf	___flmul@b
  4274  0A20  084F               	movf	_scale$1212+3,w
  4275  0A21  00AB               	movwf	___flmul@a+3
  4276  0A22  084E               	movf	_scale$1212+2,w
  4277  0A23  00AA               	movwf	___flmul@a+2
  4278  0A24  084D               	movf	_scale$1212+1,w
  4279  0A25  00A9               	movwf	___flmul@a+1
  4280  0A26  084C               	movf	_scale$1212,w
  4281  0A27  00A8               	movwf	___flmul@a
  4282  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  4283  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  4284  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  4285  0A2F  0827               	movf	?___flmul+3,w
  4286  0A30  00C1               	movwf	?_scale+3
  4287  0A31  0826               	movf	?___flmul+2,w
  4288  0A32  00C0               	movwf	?_scale+2
  4289  0A33  0825               	movf	?___flmul+1,w
  4290  0A34  00BF               	movwf	?_scale+1
  4291  0A35  0824               	movf	?___flmul,w
  4292  0A36  00BE               	movwf	?_scale
  4293  0A37  2C9E               	goto	l285
  4294  0A38                     l2789:
  4295  0A38  0850               	movf	scale@scl,w
  4296  0A39  3A80               	xorlw	128
  4297  0A3A  3E75               	addlw	-139
  4298  0A3B  1C03               	skipc
  4299  0A3C  2A3E               	goto	u4151
  4300  0A3D  2A3F               	goto	u4150
  4301  0A3E                     u4151:
  4302  0A3E  2AC7               	goto	l2795
  4303  0A3F                     u4150:
  4304  0A3F                     l2791:
  4305                           
  4306                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4307  0A3F  300A               	movlw	10
  4308  0A40  00F0               	movwf	___awmod@divisor
  4309  0A41  3000               	movlw	0
  4310  0A42  00F1               	movwf	___awmod@divisor+1
  4311  0A43  0850               	movf	scale@scl,w
  4312  0A44  00F2               	movwf	___awmod@dividend
  4313  0A45  01F3               	clrf	___awmod@dividend+1
  4314  0A46  1BF2               	btfsc	___awmod@dividend,7
  4315  0A47  03F3               	decf	___awmod@dividend+1,f
  4316  0A48  160A  158A  264B  120A  158A  	fcall	___awmod
  4317  0A4D  0870               	movf	?___awmod,w
  4318  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  4319  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  4320  0A50  00C2               	movwf	??_scale
  4321  0A51  3001               	movlw	1
  4322  0A52                     u4165:
  4323  0A52  1003               	clrc
  4324  0A53  0DC2               	rlf	??_scale,f
  4325  0A54  3EFF               	addlw	-1
  4326  0A55  1D03               	skipz
  4327  0A56  2A52               	goto	u4165
  4328  0A57  1003               	clrc
  4329  0A58  0D42               	rlf	??_scale,w
  4330  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4331  0A5A  0084               	movwf	4
  4332  0A5B  120A  158A  200A  120A  158A  	fcall	stringdir
  4333  0A60  00C3               	movwf	??_scale+1
  4334  0A61  120A  158A  200A  120A  158A  	fcall	stringdir
  4335  0A66  00C4               	movwf	??_scale+2
  4336  0A67  120A  158A  200A  120A  158A  	fcall	stringdir
  4337  0A6C  00C5               	movwf	??_scale+3
  4338  0A6D  120A  158A  200A  120A  158A  	fcall	stringdir
  4339  0A72  00C6               	movwf	??_scale+4
  4340  0A73  0846               	movf	??_scale+4,w
  4341  0A74  00A7               	movwf	___flmul@b+3
  4342  0A75  0845               	movf	??_scale+3,w
  4343  0A76  00A6               	movwf	___flmul@b+2
  4344  0A77  0844               	movf	??_scale+2,w
  4345  0A78  00A5               	movwf	___flmul@b+1
  4346  0A79  0843               	movf	??_scale+1,w
  4347  0A7A  00A4               	movwf	___flmul@b
  4348  0A7B  300A               	movlw	10
  4349  0A7C  00F7               	movwf	___awdiv@divisor
  4350  0A7D  3000               	movlw	0
  4351  0A7E  00F8               	movwf	___awdiv@divisor+1
  4352  0A7F  0850               	movf	scale@scl,w
  4353  0A80  00F9               	movwf	___awdiv@dividend
  4354  0A81  01FA               	clrf	___awdiv@dividend+1
  4355  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4356  0A83  03FA               	decf	___awdiv@dividend+1,f
  4357  0A84  120A  118A  2008  120A  158A  	fcall	___awdiv
  4358  0A89  0877               	movf	?___awdiv,w
  4359  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4360  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4361  0A8C  00C7               	movwf	??_scale+5
  4362  0A8D  3001               	movlw	1
  4363  0A8E                     u4175:
  4364  0A8E  1003               	clrc
  4365  0A8F  0DC7               	rlf	??_scale+5,f
  4366  0A90  3EFF               	addlw	-1
  4367  0A91  1D03               	skipz
  4368  0A92  2A8E               	goto	u4175
  4369  0A93  1003               	clrc
  4370  0A94  0D47               	rlf	??_scale+5,w
  4371  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4372  0A96  0084               	movwf	4
  4373  0A97  120A  158A  200A  120A  158A  	fcall	stringdir
  4374  0A9C  00C8               	movwf	??_scale+6
  4375  0A9D  120A  158A  200A  120A  158A  	fcall	stringdir
  4376  0AA2  00C9               	movwf	??_scale+7
  4377  0AA3  120A  158A  200A  120A  158A  	fcall	stringdir
  4378  0AA8  00CA               	movwf	??_scale+8
  4379  0AA9  120A  158A  200A  120A  158A  	fcall	stringdir
  4380  0AAE  00CB               	movwf	??_scale+9
  4381  0AAF  084B               	movf	??_scale+9,w
  4382  0AB0  00AB               	movwf	___flmul@a+3
  4383  0AB1  084A               	movf	??_scale+8,w
  4384  0AB2  00AA               	movwf	___flmul@a+2
  4385  0AB3  0849               	movf	??_scale+7,w
  4386  0AB4  00A9               	movwf	___flmul@a+1
  4387  0AB5  0848               	movf	??_scale+6,w
  4388  0AB6  00A8               	movwf	___flmul@a
  4389  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  4390  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4391  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4392  0ABE  0827               	movf	?___flmul+3,w
  4393  0ABF  00C1               	movwf	?_scale+3
  4394  0AC0  0826               	movf	?___flmul+2,w
  4395  0AC1  00C0               	movwf	?_scale+2
  4396  0AC2  0825               	movf	?___flmul+1,w
  4397  0AC3  00BF               	movwf	?_scale+1
  4398  0AC4  0824               	movf	?___flmul,w
  4399  0AC5  00BE               	movwf	?_scale
  4400  0AC6  2C9E               	goto	l285
  4401  0AC7                     l2795:
  4402                           
  4403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4404  0AC7  0850               	movf	scale@scl,w
  4405  0AC8  00C2               	movwf	??_scale
  4406  0AC9  3001               	movlw	1
  4407  0ACA                     u4185:
  4408  0ACA  1003               	clrc
  4409  0ACB  0DC2               	rlf	??_scale,f
  4410  0ACC  3EFF               	addlw	-1
  4411  0ACD  1D03               	skipz
  4412  0ACE  2ACA               	goto	u4185
  4413  0ACF  1003               	clrc
  4414  0AD0  0D42               	rlf	??_scale,w
  4415  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4416  0AD2  0084               	movwf	4
  4417  0AD3  120A  158A  200A  120A  158A  	fcall	stringdir
  4418  0AD8  00C3               	movwf	??_scale+1
  4419  0AD9  120A  158A  200A  120A  158A  	fcall	stringdir
  4420  0ADE  00C4               	movwf	??_scale+2
  4421  0ADF  120A  158A  200A  120A  158A  	fcall	stringdir
  4422  0AE4  00C5               	movwf	??_scale+3
  4423  0AE5  120A  158A  200A  120A  158A  	fcall	stringdir
  4424  0AEA  00C6               	movwf	??_scale+4
  4425  0AEB  0846               	movf	??_scale+4,w
  4426  0AEC  00C1               	movwf	?_scale+3
  4427  0AED  0845               	movf	??_scale+3,w
  4428  0AEE  00C0               	movwf	?_scale+2
  4429  0AEF  0844               	movf	??_scale+2,w
  4430  0AF0  00BF               	movwf	?_scale+1
  4431  0AF1  0843               	movf	??_scale+1,w
  4432  0AF2  00BE               	movwf	?_scale
  4433  0AF3  2C9E               	goto	l285
  4434  0AF4                     l2799:
  4435                           
  4436                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4437  0AF4  0850               	movf	scale@scl,w
  4438  0AF5  3A80               	xorlw	128
  4439  0AF6  3E12               	addlw	-238
  4440  0AF7  1C03               	skipc
  4441  0AF8  2AFA               	goto	u4191
  4442  0AF9  2AFB               	goto	u4190
  4443  0AFA                     u4191:
  4444  0AFA  2BE3               	goto	l2807
  4445  0AFB                     u4190:
  4446  0AFB                     l2801:
  4447                           
  4448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4449  0AFB  300A               	movlw	10
  4450  0AFC  00F7               	movwf	___awdiv@divisor
  4451  0AFD  3000               	movlw	0
  4452  0AFE  00F8               	movwf	___awdiv@divisor+1
  4453  0AFF  0850               	movf	scale@scl,w
  4454  0B00  00F2               	movwf	___awmod@dividend
  4455  0B01  01F3               	clrf	___awmod@dividend+1
  4456  0B02  1BF2               	btfsc	___awmod@dividend,7
  4457  0B03  03F3               	decf	___awmod@dividend+1,f
  4458  0B04  3064               	movlw	100
  4459  0B05  00F0               	movwf	___awmod@divisor
  4460  0B06  3000               	movlw	0
  4461  0B07  00F1               	movwf	___awmod@divisor+1
  4462  0B08  160A  158A  264B  120A  158A  	fcall	___awmod
  4463  0B0D  0871               	movf	?___awmod+1,w
  4464  0B0E  00FA               	movwf	___awdiv@dividend+1
  4465  0B0F  0870               	movf	?___awmod,w
  4466  0B10  00F9               	movwf	___awdiv@dividend
  4467  0B11  120A  118A  2008  120A  158A  	fcall	___awdiv
  4468  0B16  0877               	movf	?___awdiv,w
  4469  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  4470  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4471  0B19  00C2               	movwf	??_scale
  4472  0B1A  3001               	movlw	1
  4473  0B1B                     u4205:
  4474  0B1B  1003               	clrc
  4475  0B1C  0DC2               	rlf	??_scale,f
  4476  0B1D  3EFF               	addlw	-1
  4477  0B1E  1D03               	skipz
  4478  0B1F  2B1B               	goto	u4205
  4479  0B20  1003               	clrc
  4480  0B21  0D42               	rlf	??_scale,w
  4481  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4482  0B23  0084               	movwf	4
  4483  0B24  120A  158A  200A  120A  158A  	fcall	stringdir
  4484  0B29  00C3               	movwf	??_scale+1
  4485  0B2A  120A  158A  200A  120A  158A  	fcall	stringdir
  4486  0B2F  00C4               	movwf	??_scale+2
  4487  0B30  120A  158A  200A  120A  158A  	fcall	stringdir
  4488  0B35  00C5               	movwf	??_scale+3
  4489  0B36  120A  158A  200A  120A  158A  	fcall	stringdir
  4490  0B3B  00C6               	movwf	??_scale+4
  4491  0B3C  0846               	movf	??_scale+4,w
  4492  0B3D  00A7               	movwf	___flmul@b+3
  4493  0B3E  0845               	movf	??_scale+3,w
  4494  0B3F  00A6               	movwf	___flmul@b+2
  4495  0B40  0844               	movf	??_scale+2,w
  4496  0B41  00A5               	movwf	___flmul@b+1
  4497  0B42  0843               	movf	??_scale+1,w
  4498  0B43  00A4               	movwf	___flmul@b
  4499  0B44  3064               	movlw	100
  4500  0B45  00F7               	movwf	___awdiv@divisor
  4501  0B46  3000               	movlw	0
  4502  0B47  00F8               	movwf	___awdiv@divisor+1
  4503  0B48  0850               	movf	scale@scl,w
  4504  0B49  00F9               	movwf	___awdiv@dividend
  4505  0B4A  01FA               	clrf	___awdiv@dividend+1
  4506  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4507  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4508  0B4D  120A  118A  2008  120A  158A  	fcall	___awdiv
  4509  0B52  0877               	movf	?___awdiv,w
  4510  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4511  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4512  0B55  00C7               	movwf	??_scale+5
  4513  0B56  3001               	movlw	1
  4514  0B57                     u4215:
  4515  0B57  1003               	clrc
  4516  0B58  0DC7               	rlf	??_scale+5,f
  4517  0B59  3EFF               	addlw	-1
  4518  0B5A  1D03               	skipz
  4519  0B5B  2B57               	goto	u4215
  4520  0B5C  1003               	clrc
  4521  0B5D  0D47               	rlf	??_scale+5,w
  4522  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4523  0B5F  0084               	movwf	4
  4524  0B60  120A  158A  200A  120A  158A  	fcall	stringdir
  4525  0B65  00C8               	movwf	??_scale+6
  4526  0B66  120A  158A  200A  120A  158A  	fcall	stringdir
  4527  0B6B  00C9               	movwf	??_scale+7
  4528  0B6C  120A  158A  200A  120A  158A  	fcall	stringdir
  4529  0B71  00CA               	movwf	??_scale+8
  4530  0B72  120A  158A  200A  120A  158A  	fcall	stringdir
  4531  0B77  00CB               	movwf	??_scale+9
  4532  0B78  084B               	movf	??_scale+9,w
  4533  0B79  00AB               	movwf	___flmul@a+3
  4534  0B7A  084A               	movf	??_scale+8,w
  4535  0B7B  00AA               	movwf	___flmul@a+2
  4536  0B7C  0849               	movf	??_scale+7,w
  4537  0B7D  00A9               	movwf	___flmul@a+1
  4538  0B7E  0848               	movf	??_scale+6,w
  4539  0B7F  00A8               	movwf	___flmul@a
  4540  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4541  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4542  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4543  0B87  0827               	movf	?___flmul+3,w
  4544  0B88  00CF               	movwf	_scale$1212+3
  4545  0B89  0826               	movf	?___flmul+2,w
  4546  0B8A  00CE               	movwf	_scale$1212+2
  4547  0B8B  0825               	movf	?___flmul+1,w
  4548  0B8C  00CD               	movwf	_scale$1212+1
  4549  0B8D  0824               	movf	?___flmul,w
  4550  0B8E  00CC               	movwf	_scale$1212
  4551                           
  4552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4553  0B8F  300A               	movlw	10
  4554  0B90  00F0               	movwf	___awmod@divisor
  4555  0B91  3000               	movlw	0
  4556  0B92  00F1               	movwf	___awmod@divisor+1
  4557  0B93  0850               	movf	scale@scl,w
  4558  0B94  00F2               	movwf	___awmod@dividend
  4559  0B95  01F3               	clrf	___awmod@dividend+1
  4560  0B96  1BF2               	btfsc	___awmod@dividend,7
  4561  0B97  03F3               	decf	___awmod@dividend+1,f
  4562  0B98  160A  158A  264B  120A  158A  	fcall	___awmod
  4563  0B9D  0870               	movf	?___awmod,w
  4564  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4565  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4566  0BA0  00C2               	movwf	??_scale
  4567  0BA1  3001               	movlw	1
  4568  0BA2                     u4225:
  4569  0BA2  1003               	clrc
  4570  0BA3  0DC2               	rlf	??_scale,f
  4571  0BA4  3EFF               	addlw	-1
  4572  0BA5  1D03               	skipz
  4573  0BA6  2BA2               	goto	u4225
  4574  0BA7  1003               	clrc
  4575  0BA8  0D42               	rlf	??_scale,w
  4576  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4577  0BAA  0084               	movwf	4
  4578  0BAB  120A  158A  200A  120A  158A  	fcall	stringdir
  4579  0BB0  00C3               	movwf	??_scale+1
  4580  0BB1  120A  158A  200A  120A  158A  	fcall	stringdir
  4581  0BB6  00C4               	movwf	??_scale+2
  4582  0BB7  120A  158A  200A  120A  158A  	fcall	stringdir
  4583  0BBC  00C5               	movwf	??_scale+3
  4584  0BBD  120A  158A  200A  120A  158A  	fcall	stringdir
  4585  0BC2  00C6               	movwf	??_scale+4
  4586  0BC3  0846               	movf	??_scale+4,w
  4587  0BC4  00A7               	movwf	___flmul@b+3
  4588  0BC5  0845               	movf	??_scale+3,w
  4589  0BC6  00A6               	movwf	___flmul@b+2
  4590  0BC7  0844               	movf	??_scale+2,w
  4591  0BC8  00A5               	movwf	___flmul@b+1
  4592  0BC9  0843               	movf	??_scale+1,w
  4593  0BCA  00A4               	movwf	___flmul@b
  4594  0BCB  084F               	movf	_scale$1212+3,w
  4595  0BCC  00AB               	movwf	___flmul@a+3
  4596  0BCD  084E               	movf	_scale$1212+2,w
  4597  0BCE  00AA               	movwf	___flmul@a+2
  4598  0BCF  084D               	movf	_scale$1212+1,w
  4599  0BD0  00A9               	movwf	___flmul@a+1
  4600  0BD1  084C               	movf	_scale$1212,w
  4601  0BD2  00A8               	movwf	___flmul@a
  4602  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4603  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4604  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4605  0BDA  0827               	movf	?___flmul+3,w
  4606  0BDB  00C1               	movwf	?_scale+3
  4607  0BDC  0826               	movf	?___flmul+2,w
  4608  0BDD  00C0               	movwf	?_scale+2
  4609  0BDE  0825               	movf	?___flmul+1,w
  4610  0BDF  00BF               	movwf	?_scale+1
  4611  0BE0  0824               	movf	?___flmul,w
  4612  0BE1  00BE               	movwf	?_scale
  4613  0BE2  2C9E               	goto	l285
  4614  0BE3                     l2807:
  4615  0BE3  0850               	movf	scale@scl,w
  4616  0BE4  3A80               	xorlw	128
  4617  0BE5  3E75               	addlw	-139
  4618  0BE6  1C03               	skipc
  4619  0BE7  2BE9               	goto	u4231
  4620  0BE8  2BEA               	goto	u4230
  4621  0BE9                     u4231:
  4622  0BE9  2C72               	goto	l2813
  4623  0BEA                     u4230:
  4624  0BEA                     l2809:
  4625                           
  4626                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4627  0BEA  300A               	movlw	10
  4628  0BEB  00F0               	movwf	___awmod@divisor
  4629  0BEC  3000               	movlw	0
  4630  0BED  00F1               	movwf	___awmod@divisor+1
  4631  0BEE  0850               	movf	scale@scl,w
  4632  0BEF  00F2               	movwf	___awmod@dividend
  4633  0BF0  01F3               	clrf	___awmod@dividend+1
  4634  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4635  0BF2  03F3               	decf	___awmod@dividend+1,f
  4636  0BF3  160A  158A  264B  120A  158A  	fcall	___awmod
  4637  0BF8  0870               	movf	?___awmod,w
  4638  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4639  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4640  0BFB  00C2               	movwf	??_scale
  4641  0BFC  3001               	movlw	1
  4642  0BFD                     u4245:
  4643  0BFD  1003               	clrc
  4644  0BFE  0DC2               	rlf	??_scale,f
  4645  0BFF  3EFF               	addlw	-1
  4646  0C00  1D03               	skipz
  4647  0C01  2BFD               	goto	u4245
  4648  0C02  1003               	clrc
  4649  0C03  0D42               	rlf	??_scale,w
  4650  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4651  0C05  0084               	movwf	4
  4652  0C06  120A  158A  200A  120A  158A  	fcall	stringdir
  4653  0C0B  00C3               	movwf	??_scale+1
  4654  0C0C  120A  158A  200A  120A  158A  	fcall	stringdir
  4655  0C11  00C4               	movwf	??_scale+2
  4656  0C12  120A  158A  200A  120A  158A  	fcall	stringdir
  4657  0C17  00C5               	movwf	??_scale+3
  4658  0C18  120A  158A  200A  120A  158A  	fcall	stringdir
  4659  0C1D  00C6               	movwf	??_scale+4
  4660  0C1E  0846               	movf	??_scale+4,w
  4661  0C1F  00A7               	movwf	___flmul@b+3
  4662  0C20  0845               	movf	??_scale+3,w
  4663  0C21  00A6               	movwf	___flmul@b+2
  4664  0C22  0844               	movf	??_scale+2,w
  4665  0C23  00A5               	movwf	___flmul@b+1
  4666  0C24  0843               	movf	??_scale+1,w
  4667  0C25  00A4               	movwf	___flmul@b
  4668  0C26  300A               	movlw	10
  4669  0C27  00F7               	movwf	___awdiv@divisor
  4670  0C28  3000               	movlw	0
  4671  0C29  00F8               	movwf	___awdiv@divisor+1
  4672  0C2A  0850               	movf	scale@scl,w
  4673  0C2B  00F9               	movwf	___awdiv@dividend
  4674  0C2C  01FA               	clrf	___awdiv@dividend+1
  4675  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4676  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4677  0C2F  120A  118A  2008  120A  158A  	fcall	___awdiv
  4678  0C34  0877               	movf	?___awdiv,w
  4679  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4680  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4681  0C37  00C7               	movwf	??_scale+5
  4682  0C38  3001               	movlw	1
  4683  0C39                     u4255:
  4684  0C39  1003               	clrc
  4685  0C3A  0DC7               	rlf	??_scale+5,f
  4686  0C3B  3EFF               	addlw	-1
  4687  0C3C  1D03               	skipz
  4688  0C3D  2C39               	goto	u4255
  4689  0C3E  1003               	clrc
  4690  0C3F  0D47               	rlf	??_scale+5,w
  4691  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4692  0C41  0084               	movwf	4
  4693  0C42  120A  158A  200A  120A  158A  	fcall	stringdir
  4694  0C47  00C8               	movwf	??_scale+6
  4695  0C48  120A  158A  200A  120A  158A  	fcall	stringdir
  4696  0C4D  00C9               	movwf	??_scale+7
  4697  0C4E  120A  158A  200A  120A  158A  	fcall	stringdir
  4698  0C53  00CA               	movwf	??_scale+8
  4699  0C54  120A  158A  200A  120A  158A  	fcall	stringdir
  4700  0C59  00CB               	movwf	??_scale+9
  4701  0C5A  084B               	movf	??_scale+9,w
  4702  0C5B  00AB               	movwf	___flmul@a+3
  4703  0C5C  084A               	movf	??_scale+8,w
  4704  0C5D  00AA               	movwf	___flmul@a+2
  4705  0C5E  0849               	movf	??_scale+7,w
  4706  0C5F  00A9               	movwf	___flmul@a+1
  4707  0C60  0848               	movf	??_scale+6,w
  4708  0C61  00A8               	movwf	___flmul@a
  4709  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4710  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4711  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4712  0C69  0827               	movf	?___flmul+3,w
  4713  0C6A  00C1               	movwf	?_scale+3
  4714  0C6B  0826               	movf	?___flmul+2,w
  4715  0C6C  00C0               	movwf	?_scale+2
  4716  0C6D  0825               	movf	?___flmul+1,w
  4717  0C6E  00BF               	movwf	?_scale+1
  4718  0C6F  0824               	movf	?___flmul,w
  4719  0C70  00BE               	movwf	?_scale
  4720  0C71  2C9E               	goto	l285
  4721  0C72                     l2813:
  4722                           
  4723                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4724  0C72  0850               	movf	scale@scl,w
  4725  0C73  00C2               	movwf	??_scale
  4726  0C74  3001               	movlw	1
  4727  0C75                     u4265:
  4728  0C75  1003               	clrc
  4729  0C76  0DC2               	rlf	??_scale,f
  4730  0C77  3EFF               	addlw	-1
  4731  0C78  1D03               	skipz
  4732  0C79  2C75               	goto	u4265
  4733  0C7A  1003               	clrc
  4734  0C7B  0D42               	rlf	??_scale,w
  4735  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4736  0C7D  0084               	movwf	4
  4737  0C7E  120A  158A  200A  120A  158A  	fcall	stringdir
  4738  0C83  00C3               	movwf	??_scale+1
  4739  0C84  120A  158A  200A  120A  158A  	fcall	stringdir
  4740  0C89  00C4               	movwf	??_scale+2
  4741  0C8A  120A  158A  200A  120A  158A  	fcall	stringdir
  4742  0C8F  00C5               	movwf	??_scale+3
  4743  0C90  120A  158A  200A  120A  158A  	fcall	stringdir
  4744  0C95  00C6               	movwf	??_scale+4
  4745  0C96  0846               	movf	??_scale+4,w
  4746  0C97  00C1               	movwf	?_scale+3
  4747  0C98  0845               	movf	??_scale+3,w
  4748  0C99  00C0               	movwf	?_scale+2
  4749  0C9A  0844               	movf	??_scale+2,w
  4750  0C9B  00BF               	movwf	?_scale+1
  4751  0C9C  0843               	movf	??_scale+1,w
  4752  0C9D  00BE               	movwf	?_scale
  4753  0C9E                     l285:
  4754  0C9E  0008               	return
  4755  0C9F                     __end_of_scale:
  4756                           
  4757                           	psect	text3
  4758  1E4B                     __ptext3:	
  4759 ;; *************** function ___awmod *****************
  4760 ;; Defined at:
  4761 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4762 ;; Parameters:    Size  Location     Type
  4763 ;;  divisor         2    0[COMMON] int 
  4764 ;;  dividend        2    2[COMMON] int 
  4765 ;; Auto vars:     Size  Location     Type
  4766 ;;  sign            1    6[COMMON] unsigned char 
  4767 ;;  counter         1    5[COMMON] unsigned char 
  4768 ;; Return value:  Size  Location     Type
  4769 ;;                  2    0[COMMON] int 
  4770 ;; Registers used:
  4771 ;;		wreg, status,2, status,0
  4772 ;; Tracked objects:
  4773 ;;		On entry : 0/0
  4774 ;;		On exit  : 0/0
  4775 ;;		Unchanged: 0/0
  4776 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4777 ;;      Params:         4       0       0       0       0
  4778 ;;      Locals:         2       0       0       0       0
  4779 ;;      Temps:          1       0       0       0       0
  4780 ;;      Totals:         7       0       0       0       0
  4781 ;;Total ram usage:        7 bytes
  4782 ;; Hardware stack levels used:    1
  4783 ;; This function calls:
  4784 ;;		Nothing
  4785 ;; This function is called by:
  4786 ;;		_scale
  4787 ;; This function uses a non-reentrant model
  4788 ;;
  4789                           
  4790                           
  4791                           ;psect for function ___awmod
  4792  1E4B                     ___awmod:
  4793  1E4B                     l2315:	
  4794                           ;incstack = 0
  4795                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4796                           
  4797  1E4B  01F6               	clrf	___awmod@sign
  4798  1E4C                     l2317:
  4799  1E4C  1FF3               	btfss	___awmod@dividend+1,7
  4800  1E4D  2E4F               	goto	u2961
  4801  1E4E  2E50               	goto	u2960
  4802  1E4F                     u2961:
  4803  1E4F  2E57               	goto	l2323
  4804  1E50                     u2960:
  4805  1E50                     l2319:
  4806  1E50  09F2               	comf	___awmod@dividend,f
  4807  1E51  09F3               	comf	___awmod@dividend+1,f
  4808  1E52  0AF2               	incf	___awmod@dividend,f
  4809  1E53  1903               	skipnz
  4810  1E54  0AF3               	incf	___awmod@dividend+1,f
  4811  1E55                     l2321:
  4812  1E55  01F6               	clrf	___awmod@sign
  4813  1E56  0AF6               	incf	___awmod@sign,f
  4814  1E57                     l2323:
  4815  1E57  1FF1               	btfss	___awmod@divisor+1,7
  4816  1E58  2E5A               	goto	u2971
  4817  1E59  2E5B               	goto	u2970
  4818  1E5A                     u2971:
  4819  1E5A  2E60               	goto	l2327
  4820  1E5B                     u2970:
  4821  1E5B                     l2325:
  4822  1E5B  09F0               	comf	___awmod@divisor,f
  4823  1E5C  09F1               	comf	___awmod@divisor+1,f
  4824  1E5D  0AF0               	incf	___awmod@divisor,f
  4825  1E5E  1903               	skipnz
  4826  1E5F  0AF1               	incf	___awmod@divisor+1,f
  4827  1E60                     l2327:
  4828  1E60  0870               	movf	___awmod@divisor,w
  4829  1E61  0471               	iorwf	___awmod@divisor+1,w
  4830  1E62  1903               	btfsc	3,2
  4831  1E63  2E65               	goto	u2981
  4832  1E64  2E66               	goto	u2980
  4833  1E65                     u2981:
  4834  1E65  2E95               	goto	l2345
  4835  1E66                     u2980:
  4836  1E66                     l2329:
  4837  1E66  01F5               	clrf	___awmod@counter
  4838  1E67  0AF5               	incf	___awmod@counter,f
  4839  1E68  2E74               	goto	l2335
  4840  1E69                     l2331:
  4841  1E69  3001               	movlw	1
  4842  1E6A                     u2995:
  4843  1E6A  1003               	clrc
  4844  1E6B  0DF0               	rlf	___awmod@divisor,f
  4845  1E6C  0DF1               	rlf	___awmod@divisor+1,f
  4846  1E6D  3EFF               	addlw	-1
  4847  1E6E  1D03               	skipz
  4848  1E6F  2E6A               	goto	u2995
  4849  1E70                     l2333:
  4850  1E70  3001               	movlw	1
  4851  1E71  00F4               	movwf	??___awmod
  4852  1E72  0874               	movf	??___awmod,w
  4853  1E73  07F5               	addwf	___awmod@counter,f
  4854  1E74                     l2335:
  4855  1E74  1FF1               	btfss	___awmod@divisor+1,7
  4856  1E75  2E77               	goto	u3001
  4857  1E76  2E78               	goto	u3000
  4858  1E77                     u3001:
  4859  1E77  2E69               	goto	l2331
  4860  1E78                     u3000:
  4861  1E78                     l2337:
  4862  1E78  0871               	movf	___awmod@divisor+1,w
  4863  1E79  0273               	subwf	___awmod@dividend+1,w
  4864  1E7A  1D03               	skipz
  4865  1E7B  2E7E               	goto	u3015
  4866  1E7C  0870               	movf	___awmod@divisor,w
  4867  1E7D  0272               	subwf	___awmod@dividend,w
  4868  1E7E                     u3015:
  4869  1E7E  1C03               	skipc
  4870  1E7F  2E81               	goto	u3011
  4871  1E80  2E82               	goto	u3010
  4872  1E81                     u3011:
  4873  1E81  2E88               	goto	l2341
  4874  1E82                     u3010:
  4875  1E82                     l2339:
  4876  1E82  0870               	movf	___awmod@divisor,w
  4877  1E83  02F2               	subwf	___awmod@dividend,f
  4878  1E84  0871               	movf	___awmod@divisor+1,w
  4879  1E85  1C03               	skipc
  4880  1E86  03F3               	decf	___awmod@dividend+1,f
  4881  1E87  02F3               	subwf	___awmod@dividend+1,f
  4882  1E88                     l2341:
  4883  1E88  3001               	movlw	1
  4884  1E89                     u3025:
  4885  1E89  1003               	clrc
  4886  1E8A  0CF1               	rrf	___awmod@divisor+1,f
  4887  1E8B  0CF0               	rrf	___awmod@divisor,f
  4888  1E8C  3EFF               	addlw	-1
  4889  1E8D  1D03               	skipz
  4890  1E8E  2E89               	goto	u3025
  4891  1E8F                     l2343:
  4892  1E8F  3001               	movlw	1
  4893  1E90  02F5               	subwf	___awmod@counter,f
  4894  1E91  1D03               	btfss	3,2
  4895  1E92  2E94               	goto	u3031
  4896  1E93  2E95               	goto	u3030
  4897  1E94                     u3031:
  4898  1E94  2E78               	goto	l2337
  4899  1E95                     u3030:
  4900  1E95                     l2345:
  4901  1E95  0876               	movf	___awmod@sign,w
  4902  1E96  1903               	btfsc	3,2
  4903  1E97  2E99               	goto	u3041
  4904  1E98  2E9A               	goto	u3040
  4905  1E99                     u3041:
  4906  1E99  2E9F               	goto	l2349
  4907  1E9A                     u3040:
  4908  1E9A                     l2347:
  4909  1E9A  09F2               	comf	___awmod@dividend,f
  4910  1E9B  09F3               	comf	___awmod@dividend+1,f
  4911  1E9C  0AF2               	incf	___awmod@dividend,f
  4912  1E9D  1903               	skipnz
  4913  1E9E  0AF3               	incf	___awmod@dividend+1,f
  4914  1E9F                     l2349:
  4915  1E9F  0873               	movf	___awmod@dividend+1,w
  4916  1EA0  00F1               	movwf	?___awmod+1
  4917  1EA1  0872               	movf	___awmod@dividend,w
  4918  1EA2  00F0               	movwf	?___awmod
  4919  1EA3                     l538:
  4920  1EA3  0008               	return
  4921  1EA4                     __end_of___awmod:
  4922                           
  4923                           	psect	text4
  4924  0008                     __ptext4:	
  4925 ;; *************** function ___awdiv *****************
  4926 ;; Defined at:
  4927 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4928 ;; Parameters:    Size  Location     Type
  4929 ;;  divisor         2    7[COMMON] int 
  4930 ;;  dividend        2    9[COMMON] int 
  4931 ;; Auto vars:     Size  Location     Type
  4932 ;;  quotient        2    2[BANK0 ] int 
  4933 ;;  sign            1    1[BANK0 ] unsigned char 
  4934 ;;  counter         1    0[BANK0 ] unsigned char 
  4935 ;; Return value:  Size  Location     Type
  4936 ;;                  2    7[COMMON] int 
  4937 ;; Registers used:
  4938 ;;		wreg, status,2, status,0
  4939 ;; Tracked objects:
  4940 ;;		On entry : 0/0
  4941 ;;		On exit  : 0/0
  4942 ;;		Unchanged: 0/0
  4943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4944 ;;      Params:         4       0       0       0       0
  4945 ;;      Locals:         0       4       0       0       0
  4946 ;;      Temps:          1       0       0       0       0
  4947 ;;      Totals:         5       4       0       0       0
  4948 ;;Total ram usage:        9 bytes
  4949 ;; Hardware stack levels used:    1
  4950 ;; This function calls:
  4951 ;;		Nothing
  4952 ;; This function is called by:
  4953 ;;		_scale
  4954 ;;		_sprintf
  4955 ;; This function uses a non-reentrant model
  4956 ;;
  4957                           
  4958                           
  4959                           ;psect for function ___awdiv
  4960  0008                     ___awdiv:
  4961  0008                     l2271:	
  4962                           ;incstack = 0
  4963                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4964                           
  4965  0008  1283               	bcf	3,5	;RP0=0, select bank0
  4966  0009  1303               	bcf	3,6	;RP1=0, select bank0
  4967  000A  01A1               	clrf	___awdiv@sign
  4968  000B                     l2273:
  4969  000B  1FF8               	btfss	___awdiv@divisor+1,7
  4970  000C  280E               	goto	u2861
  4971  000D  280F               	goto	u2860
  4972  000E                     u2861:
  4973  000E  2816               	goto	l2279
  4974  000F                     u2860:
  4975  000F                     l2275:
  4976  000F  09F7               	comf	___awdiv@divisor,f
  4977  0010  09F8               	comf	___awdiv@divisor+1,f
  4978  0011  0AF7               	incf	___awdiv@divisor,f
  4979  0012  1903               	skipnz
  4980  0013  0AF8               	incf	___awdiv@divisor+1,f
  4981  0014                     l2277:
  4982  0014  01A1               	clrf	___awdiv@sign
  4983  0015  0AA1               	incf	___awdiv@sign,f
  4984  0016                     l2279:
  4985  0016  1FFA               	btfss	___awdiv@dividend+1,7
  4986  0017  2819               	goto	u2871
  4987  0018  281A               	goto	u2870
  4988  0019                     u2871:
  4989  0019  2823               	goto	l2285
  4990  001A                     u2870:
  4991  001A                     l2281:
  4992  001A  09F9               	comf	___awdiv@dividend,f
  4993  001B  09FA               	comf	___awdiv@dividend+1,f
  4994  001C  0AF9               	incf	___awdiv@dividend,f
  4995  001D  1903               	skipnz
  4996  001E  0AFA               	incf	___awdiv@dividend+1,f
  4997  001F                     l2283:
  4998  001F  3001               	movlw	1
  4999  0020  00FB               	movwf	??___awdiv
  5000  0021  087B               	movf	??___awdiv,w
  5001  0022  06A1               	xorwf	___awdiv@sign,f
  5002  0023                     l2285:
  5003  0023  01A2               	clrf	___awdiv@quotient
  5004  0024  01A3               	clrf	___awdiv@quotient+1
  5005  0025                     l2287:
  5006  0025  0877               	movf	___awdiv@divisor,w
  5007  0026  0478               	iorwf	___awdiv@divisor+1,w
  5008  0027  1903               	btfsc	3,2
  5009  0028  282A               	goto	u2881
  5010  0029  282B               	goto	u2880
  5011  002A                     u2881:
  5012  002A  2862               	goto	l2307
  5013  002B                     u2880:
  5014  002B                     l2289:
  5015  002B  01A0               	clrf	___awdiv@counter
  5016  002C  0AA0               	incf	___awdiv@counter,f
  5017  002D  2839               	goto	l2295
  5018  002E                     l2291:
  5019  002E  3001               	movlw	1
  5020  002F                     u2895:
  5021  002F  1003               	clrc
  5022  0030  0DF7               	rlf	___awdiv@divisor,f
  5023  0031  0DF8               	rlf	___awdiv@divisor+1,f
  5024  0032  3EFF               	addlw	-1
  5025  0033  1D03               	skipz
  5026  0034  282F               	goto	u2895
  5027  0035                     l2293:
  5028  0035  3001               	movlw	1
  5029  0036  00FB               	movwf	??___awdiv
  5030  0037  087B               	movf	??___awdiv,w
  5031  0038  07A0               	addwf	___awdiv@counter,f
  5032  0039                     l2295:
  5033  0039  1FF8               	btfss	___awdiv@divisor+1,7
  5034  003A  283C               	goto	u2901
  5035  003B  283D               	goto	u2900
  5036  003C                     u2901:
  5037  003C  282E               	goto	l2291
  5038  003D                     u2900:
  5039  003D                     l2297:
  5040  003D  3001               	movlw	1
  5041  003E                     u2915:
  5042  003E  1003               	clrc
  5043  003F  0DA2               	rlf	___awdiv@quotient,f
  5044  0040  0DA3               	rlf	___awdiv@quotient+1,f
  5045  0041  3EFF               	addlw	-1
  5046  0042  1D03               	skipz
  5047  0043  283E               	goto	u2915
  5048  0044  0878               	movf	___awdiv@divisor+1,w
  5049  0045  027A               	subwf	___awdiv@dividend+1,w
  5050  0046  1D03               	skipz
  5051  0047  284A               	goto	u2925
  5052  0048  0877               	movf	___awdiv@divisor,w
  5053  0049  0279               	subwf	___awdiv@dividend,w
  5054  004A                     u2925:
  5055  004A  1C03               	skipc
  5056  004B  284D               	goto	u2921
  5057  004C  284E               	goto	u2920
  5058  004D                     u2921:
  5059  004D  2855               	goto	l2303
  5060  004E                     u2920:
  5061  004E                     l2299:
  5062  004E  0877               	movf	___awdiv@divisor,w
  5063  004F  02F9               	subwf	___awdiv@dividend,f
  5064  0050  0878               	movf	___awdiv@divisor+1,w
  5065  0051  1C03               	skipc
  5066  0052  03FA               	decf	___awdiv@dividend+1,f
  5067  0053  02FA               	subwf	___awdiv@dividend+1,f
  5068  0054                     l2301:
  5069  0054  1422               	bsf	___awdiv@quotient,0
  5070  0055                     l2303:
  5071  0055  3001               	movlw	1
  5072  0056                     u2935:
  5073  0056  1003               	clrc
  5074  0057  0CF8               	rrf	___awdiv@divisor+1,f
  5075  0058  0CF7               	rrf	___awdiv@divisor,f
  5076  0059  3EFF               	addlw	-1
  5077  005A  1D03               	skipz
  5078  005B  2856               	goto	u2935
  5079  005C                     l2305:
  5080  005C  3001               	movlw	1
  5081  005D  02A0               	subwf	___awdiv@counter,f
  5082  005E  1D03               	btfss	3,2
  5083  005F  2861               	goto	u2941
  5084  0060  2862               	goto	u2940
  5085  0061                     u2941:
  5086  0061  283D               	goto	l2297
  5087  0062                     u2940:
  5088  0062                     l2307:
  5089  0062  0821               	movf	___awdiv@sign,w
  5090  0063  1903               	btfsc	3,2
  5091  0064  2866               	goto	u2951
  5092  0065  2867               	goto	u2950
  5093  0066                     u2951:
  5094  0066  286C               	goto	l2311
  5095  0067                     u2950:
  5096  0067                     l2309:
  5097  0067  09A2               	comf	___awdiv@quotient,f
  5098  0068  09A3               	comf	___awdiv@quotient+1,f
  5099  0069  0AA2               	incf	___awdiv@quotient,f
  5100  006A  1903               	skipnz
  5101  006B  0AA3               	incf	___awdiv@quotient+1,f
  5102  006C                     l2311:
  5103  006C  0823               	movf	___awdiv@quotient+1,w
  5104  006D  00F8               	movwf	?___awdiv+1
  5105  006E  0822               	movf	___awdiv@quotient,w
  5106  006F  00F7               	movwf	?___awdiv
  5107  0070                     l525:
  5108  0070  0008               	return
  5109  0071                     __end_of___awdiv:
  5110                           
  5111                           	psect	text5
  5112  1BA4                     __ptext5:	
  5113 ;; *************** function _isdigit *****************
  5114 ;; Defined at:
  5115 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  5116 ;; Parameters:    Size  Location     Type
  5117 ;;  c               1    wreg     unsigned char 
  5118 ;; Auto vars:     Size  Location     Type
  5119 ;;  c               1    1[COMMON] unsigned char 
  5120 ;; Return value:  Size  Location     Type
  5121 ;;		None               void
  5122 ;; Registers used:
  5123 ;;		wreg, status,2, status,0
  5124 ;; Tracked objects:
  5125 ;;		On entry : 0/0
  5126 ;;		On exit  : 0/0
  5127 ;;		Unchanged: 0/0
  5128 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5129 ;;      Params:         0       0       0       0       0
  5130 ;;      Locals:         2       0       0       0       0
  5131 ;;      Temps:          0       0       0       0       0
  5132 ;;      Totals:         2       0       0       0       0
  5133 ;;Total ram usage:        2 bytes
  5134 ;; Hardware stack levels used:    1
  5135 ;; This function calls:
  5136 ;;		Nothing
  5137 ;; This function is called by:
  5138 ;;		_sprintf
  5139 ;; This function uses a non-reentrant model
  5140 ;;
  5141                           
  5142                           
  5143                           ;psect for function _isdigit
  5144  1BA4                     _isdigit:
  5145                           
  5146                           ;incstack = 0
  5147                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  5148                           ;isdigit@c stored from wreg
  5149  1BA4  00F1               	movwf	isdigit@c
  5150  1BA5                     l2817:
  5151  1BA5  01F0               	clrf	_isdigit$1011
  5152  1BA6                     l2819:
  5153  1BA6  303A               	movlw	58
  5154  1BA7  0271               	subwf	isdigit@c,w
  5155  1BA8  1803               	skipnc
  5156  1BA9  2BAB               	goto	u4271
  5157  1BAA  2BAC               	goto	u4270
  5158  1BAB                     u4271:
  5159  1BAB  2BB4               	goto	l2825
  5160  1BAC                     u4270:
  5161  1BAC                     l2821:
  5162  1BAC  3030               	movlw	48
  5163  1BAD  0271               	subwf	isdigit@c,w
  5164  1BAE  1C03               	skipc
  5165  1BAF  2BB1               	goto	u4281
  5166  1BB0  2BB2               	goto	u4280
  5167  1BB1                     u4281:
  5168  1BB1  2BB4               	goto	l2825
  5169  1BB2                     u4280:
  5170  1BB2                     l2823:
  5171  1BB2  01F0               	clrf	_isdigit$1011
  5172  1BB3  0AF0               	incf	_isdigit$1011,f
  5173  1BB4                     l2825:
  5174  1BB4  0C70               	rrf	_isdigit$1011,w
  5175  1BB5                     l859:
  5176  1BB5  0008               	return
  5177  1BB6                     __end_of_isdigit:
  5178                           
  5179                           	psect	text6
  5180  136D                     __ptext6:	
  5181 ;; *************** function _fround *****************
  5182 ;; Defined at:
  5183 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  5184 ;; Parameters:    Size  Location     Type
  5185 ;;  prec            1    wreg     unsigned char 
  5186 ;; Auto vars:     Size  Location     Type
  5187 ;;  prec            1   49[BANK0 ] unsigned char 
  5188 ;; Return value:  Size  Location     Type
  5189 ;;                  4   30[BANK0 ] unsigned char 
  5190 ;; Registers used:
  5191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  5192 ;; Tracked objects:
  5193 ;;		On entry : 0/0
  5194 ;;		On exit  : 0/0
  5195 ;;		Unchanged: 0/0
  5196 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5197 ;;      Params:         0       4       0       0       0
  5198 ;;      Locals:         0       9       0       0       0
  5199 ;;      Temps:          0       7       0       0       0
  5200 ;;      Totals:         0      20       0       0       0
  5201 ;;Total ram usage:       20 bytes
  5202 ;; Hardware stack levels used:    1
  5203 ;; Hardware stack levels required when called:    2
  5204 ;; This function calls:
  5205 ;;		___flmul
  5206 ;;		___lwdiv
  5207 ;;		___lwmod
  5208 ;; This function is called by:
  5209 ;;		_sprintf
  5210 ;; This function uses a non-reentrant model
  5211 ;;
  5212                           
  5213                           
  5214                           ;psect for function _fround
  5215  136D                     _fround:
  5216                           
  5217                           ;incstack = 0
  5218                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5219                           ;fround@prec stored from wreg
  5220  136D  1283               	bcf	3,5	;RP0=0, select bank0
  5221  136E  1303               	bcf	3,6	;RP1=0, select bank0
  5222  136F  00D1               	movwf	fround@prec
  5223  1370                     l2759:
  5224                           
  5225                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5226  1370  306E               	movlw	110
  5227  1371  0251               	subwf	fround@prec,w
  5228  1372  1C03               	skipc
  5229  1373  2B75               	goto	u4021
  5230  1374  2B76               	goto	u4020
  5231  1375                     u4021:
  5232  1375  2C83               	goto	l2767
  5233  1376                     u4020:
  5234  1376                     l2761:
  5235                           
  5236                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5237  1376  303F               	movlw	63
  5238  1377  00A7               	movwf	___flmul@b+3
  5239  1378  3000               	movlw	0
  5240  1379  00A6               	movwf	___flmul@b+2
  5241  137A  3000               	movlw	0
  5242  137B  00A5               	movwf	___flmul@b+1
  5243  137C  3000               	movlw	0
  5244  137D  00A4               	movwf	___flmul@b
  5245  137E  3064               	movlw	100
  5246  137F  00F6               	movwf	___lwdiv@divisor
  5247  1380  3000               	movlw	0
  5248  1381  00F7               	movwf	___lwdiv@divisor+1
  5249  1382  0851               	movf	fround@prec,w
  5250  1383  00C2               	movwf	??_fround
  5251  1384  01C3               	clrf	??_fround+1
  5252  1385  0842               	movf	??_fround,w
  5253  1386  00F8               	movwf	___lwdiv@dividend
  5254  1387  0843               	movf	??_fround+1,w
  5255  1388  00F9               	movwf	___lwdiv@dividend+1
  5256  1389  160A  158A  2565  160A  118A  	fcall	___lwdiv
  5257  138E  0876               	movf	?___lwdiv,w
  5258  138F  1283               	bcf	3,5	;RP0=0, select bank0
  5259  1390  1303               	bcf	3,6	;RP1=0, select bank0
  5260  1391  00C4               	movwf	??_fround+2
  5261  1392  3001               	movlw	1
  5262  1393                     u4035:
  5263  1393  1003               	clrc
  5264  1394  0DC4               	rlf	??_fround+2,f
  5265  1395  3EFF               	addlw	-1
  5266  1396  1D03               	skipz
  5267  1397  2B93               	goto	u4035
  5268  1398  1003               	clrc
  5269  1399  0D44               	rlf	??_fround+2,w
  5270  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5271  139B  0084               	movwf	4
  5272  139C  120A  158A  200A  160A  118A  	fcall	stringdir
  5273  13A1  00C5               	movwf	??_fround+3
  5274  13A2  120A  158A  200A  160A  118A  	fcall	stringdir
  5275  13A7  00C6               	movwf	??_fround+4
  5276  13A8  120A  158A  200A  160A  118A  	fcall	stringdir
  5277  13AD  00C7               	movwf	??_fround+5
  5278  13AE  120A  158A  200A  160A  118A  	fcall	stringdir
  5279  13B3  00C8               	movwf	??_fround+6
  5280  13B4  0848               	movf	??_fround+6,w
  5281  13B5  00AB               	movwf	___flmul@a+3
  5282  13B6  0847               	movf	??_fround+5,w
  5283  13B7  00AA               	movwf	___flmul@a+2
  5284  13B8  0846               	movf	??_fround+4,w
  5285  13B9  00A9               	movwf	___flmul@a+1
  5286  13BA  0845               	movf	??_fround+3,w
  5287  13BB  00A8               	movwf	___flmul@a
  5288  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  5289  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  5290  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  5291  13C3  0827               	movf	?___flmul+3,w
  5292  13C4  00D0               	movwf	_fround$1210+3
  5293  13C5  0826               	movf	?___flmul+2,w
  5294  13C6  00CF               	movwf	_fround$1210+2
  5295  13C7  0825               	movf	?___flmul+1,w
  5296  13C8  00CE               	movwf	_fround$1210+1
  5297  13C9  0824               	movf	?___flmul,w
  5298  13CA  00CD               	movwf	_fround$1210
  5299                           
  5300                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5301  13CB  300A               	movlw	10
  5302  13CC  00F6               	movwf	___lwdiv@divisor
  5303  13CD  3000               	movlw	0
  5304  13CE  00F7               	movwf	___lwdiv@divisor+1
  5305  13CF  0851               	movf	fround@prec,w
  5306  13D0  00C2               	movwf	??_fround
  5307  13D1  01C3               	clrf	??_fround+1
  5308  13D2  0842               	movf	??_fround,w
  5309  13D3  00F2               	movwf	___lwmod@dividend
  5310  13D4  0843               	movf	??_fround+1,w
  5311  13D5  00F3               	movwf	___lwmod@dividend+1
  5312  13D6  3064               	movlw	100
  5313  13D7  00F0               	movwf	___lwmod@divisor
  5314  13D8  3000               	movlw	0
  5315  13D9  00F1               	movwf	___lwmod@divisor+1
  5316  13DA  160A  158A  24A8  160A  118A  	fcall	___lwmod
  5317  13DF  0871               	movf	?___lwmod+1,w
  5318  13E0  00F9               	movwf	___lwdiv@dividend+1
  5319  13E1  0870               	movf	?___lwmod,w
  5320  13E2  00F8               	movwf	___lwdiv@dividend
  5321  13E3  160A  158A  2565  160A  118A  	fcall	___lwdiv
  5322  13E8  0876               	movf	?___lwdiv,w
  5323  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  5324  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  5325  13EB  00C4               	movwf	??_fround+2
  5326  13EC  3001               	movlw	1
  5327  13ED                     u4045:
  5328  13ED  1003               	clrc
  5329  13EE  0DC4               	rlf	??_fround+2,f
  5330  13EF  3EFF               	addlw	-1
  5331  13F0  1D03               	skipz
  5332  13F1  2BED               	goto	u4045
  5333  13F2  1003               	clrc
  5334  13F3  0D44               	rlf	??_fround+2,w
  5335  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5336  13F5  0084               	movwf	4
  5337  13F6  120A  158A  200A  160A  118A  	fcall	stringdir
  5338  13FB  00C5               	movwf	??_fround+3
  5339  13FC  120A  158A  200A  160A  118A  	fcall	stringdir
  5340  1401  00C6               	movwf	??_fround+4
  5341  1402  120A  158A  200A  160A  118A  	fcall	stringdir
  5342  1407  00C7               	movwf	??_fround+5
  5343  1408  120A  158A  200A  160A  118A  	fcall	stringdir
  5344  140D  00C8               	movwf	??_fround+6
  5345  140E  0848               	movf	??_fround+6,w
  5346  140F  00A7               	movwf	___flmul@b+3
  5347  1410  0847               	movf	??_fround+5,w
  5348  1411  00A6               	movwf	___flmul@b+2
  5349  1412  0846               	movf	??_fround+4,w
  5350  1413  00A5               	movwf	___flmul@b+1
  5351  1414  0845               	movf	??_fround+3,w
  5352  1415  00A4               	movwf	___flmul@b
  5353  1416  0850               	movf	_fround$1210+3,w
  5354  1417  00AB               	movwf	___flmul@a+3
  5355  1418  084F               	movf	_fround$1210+2,w
  5356  1419  00AA               	movwf	___flmul@a+2
  5357  141A  084E               	movf	_fround$1210+1,w
  5358  141B  00A9               	movwf	___flmul@a+1
  5359  141C  084D               	movf	_fround$1210,w
  5360  141D  00A8               	movwf	___flmul@a
  5361  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  5362  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5363  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5364  1425  0827               	movf	?___flmul+3,w
  5365  1426  00CC               	movwf	_fround$1211+3
  5366  1427  0826               	movf	?___flmul+2,w
  5367  1428  00CB               	movwf	_fround$1211+2
  5368  1429  0825               	movf	?___flmul+1,w
  5369  142A  00CA               	movwf	_fround$1211+1
  5370  142B  0824               	movf	?___flmul,w
  5371  142C  00C9               	movwf	_fround$1211
  5372                           
  5373                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5374  142D  300A               	movlw	10
  5375  142E  00F0               	movwf	___lwmod@divisor
  5376  142F  3000               	movlw	0
  5377  1430  00F1               	movwf	___lwmod@divisor+1
  5378  1431  0851               	movf	fround@prec,w
  5379  1432  00C2               	movwf	??_fround
  5380  1433  01C3               	clrf	??_fround+1
  5381  1434  0842               	movf	??_fround,w
  5382  1435  00F2               	movwf	___lwmod@dividend
  5383  1436  0843               	movf	??_fround+1,w
  5384  1437  00F3               	movwf	___lwmod@dividend+1
  5385  1438  160A  158A  24A8  160A  118A  	fcall	___lwmod
  5386  143D  0870               	movf	?___lwmod,w
  5387  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5388  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5389  1440  00C4               	movwf	??_fround+2
  5390  1441  3001               	movlw	1
  5391  1442                     u4055:
  5392  1442  1003               	clrc
  5393  1443  0DC4               	rlf	??_fround+2,f
  5394  1444  3EFF               	addlw	-1
  5395  1445  1D03               	skipz
  5396  1446  2C42               	goto	u4055
  5397  1447  1003               	clrc
  5398  1448  0D44               	rlf	??_fround+2,w
  5399  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5400  144A  0084               	movwf	4
  5401  144B  120A  158A  200A  160A  118A  	fcall	stringdir
  5402  1450  00C5               	movwf	??_fround+3
  5403  1451  120A  158A  200A  160A  118A  	fcall	stringdir
  5404  1456  00C6               	movwf	??_fround+4
  5405  1457  120A  158A  200A  160A  118A  	fcall	stringdir
  5406  145C  00C7               	movwf	??_fround+5
  5407  145D  120A  158A  200A  160A  118A  	fcall	stringdir
  5408  1462  00C8               	movwf	??_fround+6
  5409  1463  0848               	movf	??_fround+6,w
  5410  1464  00A7               	movwf	___flmul@b+3
  5411  1465  0847               	movf	??_fround+5,w
  5412  1466  00A6               	movwf	___flmul@b+2
  5413  1467  0846               	movf	??_fround+4,w
  5414  1468  00A5               	movwf	___flmul@b+1
  5415  1469  0845               	movf	??_fround+3,w
  5416  146A  00A4               	movwf	___flmul@b
  5417  146B  084C               	movf	_fround$1211+3,w
  5418  146C  00AB               	movwf	___flmul@a+3
  5419  146D  084B               	movf	_fround$1211+2,w
  5420  146E  00AA               	movwf	___flmul@a+2
  5421  146F  084A               	movf	_fround$1211+1,w
  5422  1470  00A9               	movwf	___flmul@a+1
  5423  1471  0849               	movf	_fround$1211,w
  5424  1472  00A8               	movwf	___flmul@a
  5425  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  5426  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5427  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5428  147A  0827               	movf	?___flmul+3,w
  5429  147B  00C1               	movwf	?_fround+3
  5430  147C  0826               	movf	?___flmul+2,w
  5431  147D  00C0               	movwf	?_fround+2
  5432  147E  0825               	movf	?___flmul+1,w
  5433  147F  00BF               	movwf	?_fround+1
  5434  1480  0824               	movf	?___flmul,w
  5435  1481  00BE               	movwf	?_fround
  5436  1482  2D77               	goto	l278
  5437  1483                     l2767:
  5438  1483  300B               	movlw	11
  5439  1484  0251               	subwf	fround@prec,w
  5440  1485  1C03               	skipc
  5441  1486  2C88               	goto	u4061
  5442  1487  2C89               	goto	u4060
  5443  1488                     u4061:
  5444  1488  2D34               	goto	l2773
  5445  1489                     u4060:
  5446  1489                     l2769:
  5447                           
  5448                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5449  1489  303F               	movlw	63
  5450  148A  00A7               	movwf	___flmul@b+3
  5451  148B  3000               	movlw	0
  5452  148C  00A6               	movwf	___flmul@b+2
  5453  148D  3000               	movlw	0
  5454  148E  00A5               	movwf	___flmul@b+1
  5455  148F  3000               	movlw	0
  5456  1490  00A4               	movwf	___flmul@b
  5457  1491  300A               	movlw	10
  5458  1492  00F6               	movwf	___lwdiv@divisor
  5459  1493  3000               	movlw	0
  5460  1494  00F7               	movwf	___lwdiv@divisor+1
  5461  1495  0851               	movf	fround@prec,w
  5462  1496  00C2               	movwf	??_fround
  5463  1497  01C3               	clrf	??_fround+1
  5464  1498  0842               	movf	??_fround,w
  5465  1499  00F8               	movwf	___lwdiv@dividend
  5466  149A  0843               	movf	??_fround+1,w
  5467  149B  00F9               	movwf	___lwdiv@dividend+1
  5468  149C  160A  158A  2565  160A  118A  	fcall	___lwdiv
  5469  14A1  0876               	movf	?___lwdiv,w
  5470  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  5471  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  5472  14A4  00C4               	movwf	??_fround+2
  5473  14A5  3001               	movlw	1
  5474  14A6                     u4075:
  5475  14A6  1003               	clrc
  5476  14A7  0DC4               	rlf	??_fround+2,f
  5477  14A8  3EFF               	addlw	-1
  5478  14A9  1D03               	skipz
  5479  14AA  2CA6               	goto	u4075
  5480  14AB  1003               	clrc
  5481  14AC  0D44               	rlf	??_fround+2,w
  5482  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5483  14AE  0084               	movwf	4
  5484  14AF  120A  158A  200A  160A  118A  	fcall	stringdir
  5485  14B4  00C5               	movwf	??_fround+3
  5486  14B5  120A  158A  200A  160A  118A  	fcall	stringdir
  5487  14BA  00C6               	movwf	??_fround+4
  5488  14BB  120A  158A  200A  160A  118A  	fcall	stringdir
  5489  14C0  00C7               	movwf	??_fround+5
  5490  14C1  120A  158A  200A  160A  118A  	fcall	stringdir
  5491  14C6  00C8               	movwf	??_fround+6
  5492  14C7  0848               	movf	??_fround+6,w
  5493  14C8  00AB               	movwf	___flmul@a+3
  5494  14C9  0847               	movf	??_fround+5,w
  5495  14CA  00AA               	movwf	___flmul@a+2
  5496  14CB  0846               	movf	??_fround+4,w
  5497  14CC  00A9               	movwf	___flmul@a+1
  5498  14CD  0845               	movf	??_fround+3,w
  5499  14CE  00A8               	movwf	___flmul@a
  5500  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5501  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5502  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5503  14D6  0827               	movf	?___flmul+3,w
  5504  14D7  00D0               	movwf	_fround$1210+3
  5505  14D8  0826               	movf	?___flmul+2,w
  5506  14D9  00CF               	movwf	_fround$1210+2
  5507  14DA  0825               	movf	?___flmul+1,w
  5508  14DB  00CE               	movwf	_fround$1210+1
  5509  14DC  0824               	movf	?___flmul,w
  5510  14DD  00CD               	movwf	_fround$1210
  5511                           
  5512                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5513  14DE  300A               	movlw	10
  5514  14DF  00F0               	movwf	___lwmod@divisor
  5515  14E0  3000               	movlw	0
  5516  14E1  00F1               	movwf	___lwmod@divisor+1
  5517  14E2  0851               	movf	fround@prec,w
  5518  14E3  00C2               	movwf	??_fround
  5519  14E4  01C3               	clrf	??_fround+1
  5520  14E5  0842               	movf	??_fround,w
  5521  14E6  00F2               	movwf	___lwmod@dividend
  5522  14E7  0843               	movf	??_fround+1,w
  5523  14E8  00F3               	movwf	___lwmod@dividend+1
  5524  14E9  160A  158A  24A8  160A  118A  	fcall	___lwmod
  5525  14EE  0870               	movf	?___lwmod,w
  5526  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5527  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5528  14F1  00C4               	movwf	??_fround+2
  5529  14F2  3001               	movlw	1
  5530  14F3                     u4085:
  5531  14F3  1003               	clrc
  5532  14F4  0DC4               	rlf	??_fround+2,f
  5533  14F5  3EFF               	addlw	-1
  5534  14F6  1D03               	skipz
  5535  14F7  2CF3               	goto	u4085
  5536  14F8  1003               	clrc
  5537  14F9  0D44               	rlf	??_fround+2,w
  5538  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5539  14FB  0084               	movwf	4
  5540  14FC  120A  158A  200A  160A  118A  	fcall	stringdir
  5541  1501  00C5               	movwf	??_fround+3
  5542  1502  120A  158A  200A  160A  118A  	fcall	stringdir
  5543  1507  00C6               	movwf	??_fround+4
  5544  1508  120A  158A  200A  160A  118A  	fcall	stringdir
  5545  150D  00C7               	movwf	??_fround+5
  5546  150E  120A  158A  200A  160A  118A  	fcall	stringdir
  5547  1513  00C8               	movwf	??_fround+6
  5548  1514  0848               	movf	??_fround+6,w
  5549  1515  00A7               	movwf	___flmul@b+3
  5550  1516  0847               	movf	??_fround+5,w
  5551  1517  00A6               	movwf	___flmul@b+2
  5552  1518  0846               	movf	??_fround+4,w
  5553  1519  00A5               	movwf	___flmul@b+1
  5554  151A  0845               	movf	??_fround+3,w
  5555  151B  00A4               	movwf	___flmul@b
  5556  151C  0850               	movf	_fround$1210+3,w
  5557  151D  00AB               	movwf	___flmul@a+3
  5558  151E  084F               	movf	_fround$1210+2,w
  5559  151F  00AA               	movwf	___flmul@a+2
  5560  1520  084E               	movf	_fround$1210+1,w
  5561  1521  00A9               	movwf	___flmul@a+1
  5562  1522  084D               	movf	_fround$1210,w
  5563  1523  00A8               	movwf	___flmul@a
  5564  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  5565  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5566  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5567  152B  0827               	movf	?___flmul+3,w
  5568  152C  00C1               	movwf	?_fround+3
  5569  152D  0826               	movf	?___flmul+2,w
  5570  152E  00C0               	movwf	?_fround+2
  5571  152F  0825               	movf	?___flmul+1,w
  5572  1530  00BF               	movwf	?_fround+1
  5573  1531  0824               	movf	?___flmul,w
  5574  1532  00BE               	movwf	?_fround
  5575  1533  2D77               	goto	l278
  5576  1534                     l2773:
  5577                           
  5578                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5579  1534  303F               	movlw	63
  5580  1535  00A7               	movwf	___flmul@b+3
  5581  1536  3000               	movlw	0
  5582  1537  00A6               	movwf	___flmul@b+2
  5583  1538  3000               	movlw	0
  5584  1539  00A5               	movwf	___flmul@b+1
  5585  153A  3000               	movlw	0
  5586  153B  00A4               	movwf	___flmul@b
  5587  153C  0851               	movf	fround@prec,w
  5588  153D  00C2               	movwf	??_fround
  5589  153E  3001               	movlw	1
  5590  153F                     u4095:
  5591  153F  1003               	clrc
  5592  1540  0DC2               	rlf	??_fround,f
  5593  1541  3EFF               	addlw	-1
  5594  1542  1D03               	skipz
  5595  1543  2D3F               	goto	u4095
  5596  1544  1003               	clrc
  5597  1545  0D42               	rlf	??_fround,w
  5598  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5599  1547  0084               	movwf	4
  5600  1548  120A  158A  200A  160A  118A  	fcall	stringdir
  5601  154D  00C3               	movwf	??_fround+1
  5602  154E  120A  158A  200A  160A  118A  	fcall	stringdir
  5603  1553  00C4               	movwf	??_fround+2
  5604  1554  120A  158A  200A  160A  118A  	fcall	stringdir
  5605  1559  00C5               	movwf	??_fround+3
  5606  155A  120A  158A  200A  160A  118A  	fcall	stringdir
  5607  155F  00C6               	movwf	??_fround+4
  5608  1560  0846               	movf	??_fround+4,w
  5609  1561  00AB               	movwf	___flmul@a+3
  5610  1562  0845               	movf	??_fround+3,w
  5611  1563  00AA               	movwf	___flmul@a+2
  5612  1564  0844               	movf	??_fround+2,w
  5613  1565  00A9               	movwf	___flmul@a+1
  5614  1566  0843               	movf	??_fround+1,w
  5615  1567  00A8               	movwf	___flmul@a
  5616  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  5617  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5618  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5619  156F  0827               	movf	?___flmul+3,w
  5620  1570  00C1               	movwf	?_fround+3
  5621  1571  0826               	movf	?___flmul+2,w
  5622  1572  00C0               	movwf	?_fround+2
  5623  1573  0825               	movf	?___flmul+1,w
  5624  1574  00BF               	movwf	?_fround+1
  5625  1575  0824               	movf	?___flmul,w
  5626  1576  00BE               	movwf	?_fround
  5627  1577                     l278:
  5628  1577  0008               	return
  5629  1578                     __end_of_fround:
  5630                           
  5631                           	psect	text7
  5632  1CA8                     __ptext7:	
  5633 ;; *************** function ___lwmod *****************
  5634 ;; Defined at:
  5635 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;  divisor         2    0[COMMON] unsigned int 
  5638 ;;  dividend        2    2[COMMON] unsigned int 
  5639 ;; Auto vars:     Size  Location     Type
  5640 ;;  counter         1    5[COMMON] unsigned char 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  2    0[COMMON] unsigned int 
  5643 ;; Registers used:
  5644 ;;		wreg, status,2, status,0
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5650 ;;      Params:         4       0       0       0       0
  5651 ;;      Locals:         1       0       0       0       0
  5652 ;;      Temps:          1       0       0       0       0
  5653 ;;      Totals:         6       0       0       0       0
  5654 ;;Total ram usage:        6 bytes
  5655 ;; Hardware stack levels used:    1
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		_fround
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           
  5664                           ;psect for function ___lwmod
  5665  1CA8                     ___lwmod:
  5666  1CA8                     l2379:	
  5667                           ;incstack = 0
  5668                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5669                           
  5670  1CA8  0870               	movf	___lwmod@divisor,w
  5671  1CA9  0471               	iorwf	___lwmod@divisor+1,w
  5672  1CAA  1903               	btfsc	3,2
  5673  1CAB  2CAD               	goto	u3121
  5674  1CAC  2CAE               	goto	u3120
  5675  1CAD                     u3121:
  5676  1CAD  2CDD               	goto	l2397
  5677  1CAE                     u3120:
  5678  1CAE                     l2381:
  5679  1CAE  01F5               	clrf	___lwmod@counter
  5680  1CAF  0AF5               	incf	___lwmod@counter,f
  5681  1CB0  2CBC               	goto	l2387
  5682  1CB1                     l2383:
  5683  1CB1  3001               	movlw	1
  5684  1CB2                     u3135:
  5685  1CB2  1003               	clrc
  5686  1CB3  0DF0               	rlf	___lwmod@divisor,f
  5687  1CB4  0DF1               	rlf	___lwmod@divisor+1,f
  5688  1CB5  3EFF               	addlw	-1
  5689  1CB6  1D03               	skipz
  5690  1CB7  2CB2               	goto	u3135
  5691  1CB8                     l2385:
  5692  1CB8  3001               	movlw	1
  5693  1CB9  00F4               	movwf	??___lwmod
  5694  1CBA  0874               	movf	??___lwmod,w
  5695  1CBB  07F5               	addwf	___lwmod@counter,f
  5696  1CBC                     l2387:
  5697  1CBC  1FF1               	btfss	___lwmod@divisor+1,7
  5698  1CBD  2CBF               	goto	u3141
  5699  1CBE  2CC0               	goto	u3140
  5700  1CBF                     u3141:
  5701  1CBF  2CB1               	goto	l2383
  5702  1CC0                     u3140:
  5703  1CC0                     l2389:
  5704  1CC0  0871               	movf	___lwmod@divisor+1,w
  5705  1CC1  0273               	subwf	___lwmod@dividend+1,w
  5706  1CC2  1D03               	skipz
  5707  1CC3  2CC6               	goto	u3155
  5708  1CC4  0870               	movf	___lwmod@divisor,w
  5709  1CC5  0272               	subwf	___lwmod@dividend,w
  5710  1CC6                     u3155:
  5711  1CC6  1C03               	skipc
  5712  1CC7  2CC9               	goto	u3151
  5713  1CC8  2CCA               	goto	u3150
  5714  1CC9                     u3151:
  5715  1CC9  2CD0               	goto	l2393
  5716  1CCA                     u3150:
  5717  1CCA                     l2391:
  5718  1CCA  0870               	movf	___lwmod@divisor,w
  5719  1CCB  02F2               	subwf	___lwmod@dividend,f
  5720  1CCC  0871               	movf	___lwmod@divisor+1,w
  5721  1CCD  1C03               	skipc
  5722  1CCE  03F3               	decf	___lwmod@dividend+1,f
  5723  1CCF  02F3               	subwf	___lwmod@dividend+1,f
  5724  1CD0                     l2393:
  5725  1CD0  3001               	movlw	1
  5726  1CD1                     u3165:
  5727  1CD1  1003               	clrc
  5728  1CD2  0CF1               	rrf	___lwmod@divisor+1,f
  5729  1CD3  0CF0               	rrf	___lwmod@divisor,f
  5730  1CD4  3EFF               	addlw	-1
  5731  1CD5  1D03               	skipz
  5732  1CD6  2CD1               	goto	u3165
  5733  1CD7                     l2395:
  5734  1CD7  3001               	movlw	1
  5735  1CD8  02F5               	subwf	___lwmod@counter,f
  5736  1CD9  1D03               	btfss	3,2
  5737  1CDA  2CDC               	goto	u3171
  5738  1CDB  2CDD               	goto	u3170
  5739  1CDC                     u3171:
  5740  1CDC  2CC0               	goto	l2389
  5741  1CDD                     u3170:
  5742  1CDD                     l2397:
  5743  1CDD  0873               	movf	___lwmod@dividend+1,w
  5744  1CDE  00F1               	movwf	?___lwmod+1
  5745  1CDF  0872               	movf	___lwmod@dividend,w
  5746  1CE0  00F0               	movwf	?___lwmod
  5747  1CE1                     l688:
  5748  1CE1  0008               	return
  5749  1CE2                     __end_of___lwmod:
  5750                           
  5751                           	psect	text8
  5752  1D65                     __ptext8:	
  5753 ;; *************** function ___lwdiv *****************
  5754 ;; Defined at:
  5755 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5756 ;; Parameters:    Size  Location     Type
  5757 ;;  divisor         2    6[COMMON] unsigned int 
  5758 ;;  dividend        2    8[COMMON] unsigned int 
  5759 ;; Auto vars:     Size  Location     Type
  5760 ;;  quotient        2   11[COMMON] unsigned int 
  5761 ;;  counter         1   13[COMMON] unsigned char 
  5762 ;; Return value:  Size  Location     Type
  5763 ;;                  2    6[COMMON] unsigned int 
  5764 ;; Registers used:
  5765 ;;		wreg, status,2, status,0
  5766 ;; Tracked objects:
  5767 ;;		On entry : 0/0
  5768 ;;		On exit  : 0/0
  5769 ;;		Unchanged: 0/0
  5770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5771 ;;      Params:         4       0       0       0       0
  5772 ;;      Locals:         3       0       0       0       0
  5773 ;;      Temps:          1       0       0       0       0
  5774 ;;      Totals:         8       0       0       0       0
  5775 ;;Total ram usage:        8 bytes
  5776 ;; Hardware stack levels used:    1
  5777 ;; This function calls:
  5778 ;;		Nothing
  5779 ;; This function is called by:
  5780 ;;		_fround
  5781 ;; This function uses a non-reentrant model
  5782 ;;
  5783                           
  5784                           
  5785                           ;psect for function ___lwdiv
  5786  1D65                     ___lwdiv:
  5787  1D65                     l2353:	
  5788                           ;incstack = 0
  5789                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5790                           
  5791  1D65  01FB               	clrf	___lwdiv@quotient
  5792  1D66  01FC               	clrf	___lwdiv@quotient+1
  5793  1D67                     l2355:
  5794  1D67  0876               	movf	___lwdiv@divisor,w
  5795  1D68  0477               	iorwf	___lwdiv@divisor+1,w
  5796  1D69  1903               	btfsc	3,2
  5797  1D6A  2D6C               	goto	u3051
  5798  1D6B  2D6D               	goto	u3050
  5799  1D6C                     u3051:
  5800  1D6C  2DA4               	goto	l2375
  5801  1D6D                     u3050:
  5802  1D6D                     l2357:
  5803  1D6D  01FD               	clrf	___lwdiv@counter
  5804  1D6E  0AFD               	incf	___lwdiv@counter,f
  5805  1D6F  2D7B               	goto	l2363
  5806  1D70                     l2359:
  5807  1D70  3001               	movlw	1
  5808  1D71                     u3065:
  5809  1D71  1003               	clrc
  5810  1D72  0DF6               	rlf	___lwdiv@divisor,f
  5811  1D73  0DF7               	rlf	___lwdiv@divisor+1,f
  5812  1D74  3EFF               	addlw	-1
  5813  1D75  1D03               	skipz
  5814  1D76  2D71               	goto	u3065
  5815  1D77                     l2361:
  5816  1D77  3001               	movlw	1
  5817  1D78  00FA               	movwf	??___lwdiv
  5818  1D79  087A               	movf	??___lwdiv,w
  5819  1D7A  07FD               	addwf	___lwdiv@counter,f
  5820  1D7B                     l2363:
  5821  1D7B  1FF7               	btfss	___lwdiv@divisor+1,7
  5822  1D7C  2D7E               	goto	u3071
  5823  1D7D  2D7F               	goto	u3070
  5824  1D7E                     u3071:
  5825  1D7E  2D70               	goto	l2359
  5826  1D7F                     u3070:
  5827  1D7F                     l2365:
  5828  1D7F  3001               	movlw	1
  5829  1D80                     u3085:
  5830  1D80  1003               	clrc
  5831  1D81  0DFB               	rlf	___lwdiv@quotient,f
  5832  1D82  0DFC               	rlf	___lwdiv@quotient+1,f
  5833  1D83  3EFF               	addlw	-1
  5834  1D84  1D03               	skipz
  5835  1D85  2D80               	goto	u3085
  5836  1D86  0877               	movf	___lwdiv@divisor+1,w
  5837  1D87  0279               	subwf	___lwdiv@dividend+1,w
  5838  1D88  1D03               	skipz
  5839  1D89  2D8C               	goto	u3095
  5840  1D8A  0876               	movf	___lwdiv@divisor,w
  5841  1D8B  0278               	subwf	___lwdiv@dividend,w
  5842  1D8C                     u3095:
  5843  1D8C  1C03               	skipc
  5844  1D8D  2D8F               	goto	u3091
  5845  1D8E  2D90               	goto	u3090
  5846  1D8F                     u3091:
  5847  1D8F  2D97               	goto	l2371
  5848  1D90                     u3090:
  5849  1D90                     l2367:
  5850  1D90  0876               	movf	___lwdiv@divisor,w
  5851  1D91  02F8               	subwf	___lwdiv@dividend,f
  5852  1D92  0877               	movf	___lwdiv@divisor+1,w
  5853  1D93  1C03               	skipc
  5854  1D94  03F9               	decf	___lwdiv@dividend+1,f
  5855  1D95  02F9               	subwf	___lwdiv@dividend+1,f
  5856  1D96                     l2369:
  5857  1D96  147B               	bsf	___lwdiv@quotient,0
  5858  1D97                     l2371:
  5859  1D97  3001               	movlw	1
  5860  1D98                     u3105:
  5861  1D98  1003               	clrc
  5862  1D99  0CF7               	rrf	___lwdiv@divisor+1,f
  5863  1D9A  0CF6               	rrf	___lwdiv@divisor,f
  5864  1D9B  3EFF               	addlw	-1
  5865  1D9C  1D03               	skipz
  5866  1D9D  2D98               	goto	u3105
  5867  1D9E                     l2373:
  5868  1D9E  3001               	movlw	1
  5869  1D9F  02FD               	subwf	___lwdiv@counter,f
  5870  1DA0  1D03               	btfss	3,2
  5871  1DA1  2DA3               	goto	u3111
  5872  1DA2  2DA4               	goto	u3110
  5873  1DA3                     u3111:
  5874  1DA3  2D7F               	goto	l2365
  5875  1DA4                     u3110:
  5876  1DA4                     l2375:
  5877  1DA4  087C               	movf	___lwdiv@quotient+1,w
  5878  1DA5  00F7               	movwf	?___lwdiv+1
  5879  1DA6  087B               	movf	___lwdiv@quotient,w
  5880  1DA7  00F6               	movwf	?___lwdiv
  5881  1DA8                     l678:
  5882  1DA8  0008               	return
  5883  1DA9                     __end_of___lwdiv:
  5884                           
  5885                           	psect	text9
  5886  0C9F                     __ptext9:	
  5887 ;; *************** function ___flmul *****************
  5888 ;; Defined at:
  5889 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5890 ;; Parameters:    Size  Location     Type
  5891 ;;  b               4    4[BANK0 ] unsigned int 
  5892 ;;  a               4    8[BANK0 ] unsigned int 
  5893 ;; Auto vars:     Size  Location     Type
  5894 ;;  prod            4   24[BANK0 ] struct .
  5895 ;;  grs             4   18[BANK0 ] unsigned long 
  5896 ;;  temp            2   28[BANK0 ] struct .
  5897 ;;  bexp            1   23[BANK0 ] unsigned char 
  5898 ;;  aexp            1   22[BANK0 ] unsigned char 
  5899 ;;  sign            1   17[BANK0 ] unsigned char 
  5900 ;; Return value:  Size  Location     Type
  5901 ;;                  4    4[BANK0 ] unsigned char 
  5902 ;; Registers used:
  5903 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5904 ;; Tracked objects:
  5905 ;;		On entry : 0/0
  5906 ;;		On exit  : 0/0
  5907 ;;		Unchanged: 0/0
  5908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5909 ;;      Params:         0       8       0       0       0
  5910 ;;      Locals:         0      13       0       0       0
  5911 ;;      Temps:          0       5       0       0       0
  5912 ;;      Totals:         0      26       0       0       0
  5913 ;;Total ram usage:       26 bytes
  5914 ;; Hardware stack levels used:    1
  5915 ;; Hardware stack levels required when called:    1
  5916 ;; This function calls:
  5917 ;;		__Umul8_16
  5918 ;; This function is called by:
  5919 ;;		_main
  5920 ;;		_fround
  5921 ;;		_scale
  5922 ;;		_sprintf
  5923 ;; This function uses a non-reentrant model
  5924 ;;
  5925                           
  5926                           
  5927                           ;psect for function ___flmul
  5928  0C9F                     ___flmul:
  5929  0C9F                     l2595:	
  5930                           ;incstack = 0
  5931                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5932                           
  5933  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  5934  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  5935  0CA1  0827               	movf	___flmul@b+3,w
  5936  0CA2  3980               	andlw	128
  5937  0CA3  00AC               	movwf	??___flmul
  5938  0CA4  082C               	movf	??___flmul,w
  5939  0CA5  00B1               	movwf	___flmul@sign
  5940  0CA6                     l2597:
  5941  0CA6  0827               	movf	___flmul@b+3,w
  5942  0CA7  00AC               	movwf	??___flmul
  5943  0CA8  072C               	addwf	??___flmul,w
  5944  0CA9  00AD               	movwf	??___flmul+1
  5945  0CAA  082D               	movf	??___flmul+1,w
  5946  0CAB  00B7               	movwf	___flmul@bexp
  5947  0CAC                     l2599:
  5948  0CAC  1FA6               	btfss	___flmul@b+2,7
  5949  0CAD  2CAF               	goto	u3641
  5950  0CAE  2CB0               	goto	u3640
  5951  0CAF                     u3641:
  5952  0CAF  2CB1               	goto	l2603
  5953  0CB0                     u3640:
  5954  0CB0                     l2601:
  5955  0CB0  1437               	bsf	___flmul@bexp,0
  5956  0CB1                     l2603:
  5957  0CB1  0837               	movf	___flmul@bexp,w
  5958  0CB2  1903               	btfsc	3,2
  5959  0CB3  2CB5               	goto	u3651
  5960  0CB4  2CB6               	goto	u3650
  5961  0CB5                     u3651:
  5962  0CB5  2CC5               	goto	l2611
  5963  0CB6                     u3650:
  5964  0CB6                     l2605:
  5965  0CB6  0A37               	incf	___flmul@bexp,w
  5966  0CB7  1D03               	btfss	3,2
  5967  0CB8  2CBA               	goto	u3661
  5968  0CB9  2CBB               	goto	u3660
  5969  0CBA                     u3661:
  5970  0CBA  2CC3               	goto	l2609
  5971  0CBB                     u3660:
  5972  0CBB                     l2607:
  5973  0CBB  3000               	movlw	0
  5974  0CBC  00A7               	movwf	___flmul@b+3
  5975  0CBD  3000               	movlw	0
  5976  0CBE  00A6               	movwf	___flmul@b+2
  5977  0CBF  3000               	movlw	0
  5978  0CC0  00A5               	movwf	___flmul@b+1
  5979  0CC1  3000               	movlw	0
  5980  0CC2  00A4               	movwf	___flmul@b
  5981  0CC3                     l2609:
  5982  0CC3  17A6               	bsf	___flmul@b+2,7
  5983  0CC4  2CCD               	goto	l2613
  5984  0CC5                     l2611:
  5985  0CC5  3000               	movlw	0
  5986  0CC6  00A7               	movwf	___flmul@b+3
  5987  0CC7  3000               	movlw	0
  5988  0CC8  00A6               	movwf	___flmul@b+2
  5989  0CC9  3000               	movlw	0
  5990  0CCA  00A5               	movwf	___flmul@b+1
  5991  0CCB  3000               	movlw	0
  5992  0CCC  00A4               	movwf	___flmul@b
  5993  0CCD                     l2613:
  5994  0CCD  082B               	movf	___flmul@a+3,w
  5995  0CCE  3980               	andlw	128
  5996  0CCF  00AC               	movwf	??___flmul
  5997  0CD0  082C               	movf	??___flmul,w
  5998  0CD1  06B1               	xorwf	___flmul@sign,f
  5999  0CD2                     l2615:
  6000  0CD2  082B               	movf	___flmul@a+3,w
  6001  0CD3  00AC               	movwf	??___flmul
  6002  0CD4  072C               	addwf	??___flmul,w
  6003  0CD5  00AD               	movwf	??___flmul+1
  6004  0CD6  082D               	movf	??___flmul+1,w
  6005  0CD7  00B6               	movwf	___flmul@aexp
  6006  0CD8                     l2617:
  6007  0CD8  1FAA               	btfss	___flmul@a+2,7
  6008  0CD9  2CDB               	goto	u3671
  6009  0CDA  2CDC               	goto	u3670
  6010  0CDB                     u3671:
  6011  0CDB  2CDD               	goto	l2621
  6012  0CDC                     u3670:
  6013  0CDC                     l2619:
  6014  0CDC  1436               	bsf	___flmul@aexp,0
  6015  0CDD                     l2621:
  6016  0CDD  0836               	movf	___flmul@aexp,w
  6017  0CDE  1903               	btfsc	3,2
  6018  0CDF  2CE1               	goto	u3681
  6019  0CE0  2CE2               	goto	u3680
  6020  0CE1                     u3681:
  6021  0CE1  2CF1               	goto	l2629
  6022  0CE2                     u3680:
  6023  0CE2                     l2623:
  6024  0CE2  0A36               	incf	___flmul@aexp,w
  6025  0CE3  1D03               	btfss	3,2
  6026  0CE4  2CE6               	goto	u3691
  6027  0CE5  2CE7               	goto	u3690
  6028  0CE6                     u3691:
  6029  0CE6  2CEF               	goto	l2627
  6030  0CE7                     u3690:
  6031  0CE7                     l2625:
  6032  0CE7  3000               	movlw	0
  6033  0CE8  00AB               	movwf	___flmul@a+3
  6034  0CE9  3000               	movlw	0
  6035  0CEA  00AA               	movwf	___flmul@a+2
  6036  0CEB  3000               	movlw	0
  6037  0CEC  00A9               	movwf	___flmul@a+1
  6038  0CED  3000               	movlw	0
  6039  0CEE  00A8               	movwf	___flmul@a
  6040  0CEF                     l2627:
  6041  0CEF  17AA               	bsf	___flmul@a+2,7
  6042  0CF0  2CF9               	goto	l2631
  6043  0CF1                     l2629:
  6044  0CF1  3000               	movlw	0
  6045  0CF2  00AB               	movwf	___flmul@a+3
  6046  0CF3  3000               	movlw	0
  6047  0CF4  00AA               	movwf	___flmul@a+2
  6048  0CF5  3000               	movlw	0
  6049  0CF6  00A9               	movwf	___flmul@a+1
  6050  0CF7  3000               	movlw	0
  6051  0CF8  00A8               	movwf	___flmul@a
  6052  0CF9                     l2631:
  6053  0CF9  0836               	movf	___flmul@aexp,w
  6054  0CFA  1903               	btfsc	3,2
  6055  0CFB  2CFD               	goto	u3701
  6056  0CFC  2CFE               	goto	u3700
  6057  0CFD                     u3701:
  6058  0CFD  2D03               	goto	l2635
  6059  0CFE                     u3700:
  6060  0CFE                     l2633:
  6061  0CFE  0837               	movf	___flmul@bexp,w
  6062  0CFF  1D03               	btfss	3,2
  6063  0D00  2D02               	goto	u3711
  6064  0D01  2D03               	goto	u3710
  6065  0D02                     u3711:
  6066  0D02  2D0C               	goto	l2639
  6067  0D03                     u3710:
  6068  0D03                     l2635:
  6069  0D03  3000               	movlw	0
  6070  0D04  00A7               	movwf	?___flmul+3
  6071  0D05  3000               	movlw	0
  6072  0D06  00A6               	movwf	?___flmul+2
  6073  0D07  3000               	movlw	0
  6074  0D08  00A5               	movwf	?___flmul+1
  6075  0D09  3000               	movlw	0
  6076  0D0A  00A4               	movwf	?___flmul
  6077  0D0B  2FFF               	goto	l795
  6078  0D0C                     l2639:
  6079  0D0C  0824               	movf	___flmul@b,w
  6080  0D0D  00AC               	movwf	??___flmul
  6081  0D0E  082C               	movf	??___flmul,w
  6082  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  6083  0D10  082A               	movf	___flmul@a+2,w
  6084  0D11  160A  158A  2481  120A  158A  	fcall	__Umul8_16
  6085  0D16  0871               	movf	?__Umul8_16+1,w
  6086  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  6087  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  6088  0D19  00BD               	movwf	___flmul@temp+1
  6089  0D1A  0870               	movf	?__Umul8_16,w
  6090  0D1B  00BC               	movwf	___flmul@temp
  6091  0D1C                     l2641:
  6092  0D1C  083C               	movf	___flmul@temp,w
  6093  0D1D  00AC               	movwf	??___flmul
  6094  0D1E  01AD               	clrf	??___flmul+1
  6095  0D1F  01AE               	clrf	??___flmul+2
  6096  0D20  01AF               	clrf	??___flmul+3
  6097  0D21  082F               	movf	??___flmul+3,w
  6098  0D22  00B5               	movwf	___flmul@grs+3
  6099  0D23  082E               	movf	??___flmul+2,w
  6100  0D24  00B4               	movwf	___flmul@grs+2
  6101  0D25  082D               	movf	??___flmul+1,w
  6102  0D26  00B3               	movwf	___flmul@grs+1
  6103  0D27  082C               	movf	??___flmul,w
  6104  0D28  00B2               	movwf	___flmul@grs
  6105  0D29                     l2643:
  6106  0D29  083D               	movf	___flmul@temp+1,w
  6107  0D2A  00AC               	movwf	??___flmul
  6108  0D2B  01AD               	clrf	??___flmul+1
  6109  0D2C  01AE               	clrf	??___flmul+2
  6110  0D2D  01AF               	clrf	??___flmul+3
  6111  0D2E  082F               	movf	??___flmul+3,w
  6112  0D2F  00BB               	movwf	___flmul@prod+3
  6113  0D30  082E               	movf	??___flmul+2,w
  6114  0D31  00BA               	movwf	___flmul@prod+2
  6115  0D32  082D               	movf	??___flmul+1,w
  6116  0D33  00B9               	movwf	___flmul@prod+1
  6117  0D34  082C               	movf	??___flmul,w
  6118  0D35  00B8               	movwf	___flmul@prod
  6119  0D36  0825               	movf	___flmul@b+1,w
  6120  0D37  00AC               	movwf	??___flmul
  6121  0D38  082C               	movf	??___flmul,w
  6122  0D39  00F0               	movwf	__Umul8_16@multiplicand
  6123  0D3A  0829               	movf	___flmul@a+1,w
  6124  0D3B  160A  158A  2481  120A  158A  	fcall	__Umul8_16
  6125  0D40  0871               	movf	?__Umul8_16+1,w
  6126  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  6127  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  6128  0D43  00BD               	movwf	___flmul@temp+1
  6129  0D44  0870               	movf	?__Umul8_16,w
  6130  0D45  00BC               	movwf	___flmul@temp
  6131  0D46                     l2645:
  6132  0D46  083C               	movf	___flmul@temp,w
  6133  0D47  00AC               	movwf	??___flmul
  6134  0D48  01AD               	clrf	??___flmul+1
  6135  0D49  01AE               	clrf	??___flmul+2
  6136  0D4A  01AF               	clrf	??___flmul+3
  6137  0D4B  082C               	movf	??___flmul,w
  6138  0D4C  07B2               	addwf	___flmul@grs,f
  6139  0D4D  082D               	movf	??___flmul+1,w
  6140  0D4E  1103               	clrz
  6141  0D4F  1803               	skipnc
  6142  0D50  3E01               	addlw	1
  6143  0D51  1903               	skipnz
  6144  0D52  2D54               	goto	u3721
  6145  0D53  07B3               	addwf	___flmul@grs+1,f
  6146  0D54                     u3721:
  6147  0D54  082E               	movf	??___flmul+2,w
  6148  0D55  1103               	clrz
  6149  0D56  1803               	skipnc
  6150  0D57  3E01               	addlw	1
  6151  0D58  1903               	skipnz
  6152  0D59  2D5B               	goto	u3722
  6153  0D5A  07B4               	addwf	___flmul@grs+2,f
  6154  0D5B                     u3722:
  6155  0D5B  082F               	movf	??___flmul+3,w
  6156  0D5C  1103               	clrz
  6157  0D5D  1803               	skipnc
  6158  0D5E  3E01               	addlw	1
  6159  0D5F  1903               	skipnz
  6160  0D60  2D62               	goto	u3723
  6161  0D61  07B5               	addwf	___flmul@grs+3,f
  6162  0D62                     u3723:
  6163  0D62                     l2647:
  6164  0D62  083D               	movf	___flmul@temp+1,w
  6165  0D63  00AC               	movwf	??___flmul
  6166  0D64  01AD               	clrf	??___flmul+1
  6167  0D65  01AE               	clrf	??___flmul+2
  6168  0D66  01AF               	clrf	??___flmul+3
  6169  0D67  082C               	movf	??___flmul,w
  6170  0D68  07B8               	addwf	___flmul@prod,f
  6171  0D69  082D               	movf	??___flmul+1,w
  6172  0D6A  1103               	clrz
  6173  0D6B  1803               	skipnc
  6174  0D6C  3E01               	addlw	1
  6175  0D6D  1903               	skipnz
  6176  0D6E  2D70               	goto	u3731
  6177  0D6F  07B9               	addwf	___flmul@prod+1,f
  6178  0D70                     u3731:
  6179  0D70  082E               	movf	??___flmul+2,w
  6180  0D71  1103               	clrz
  6181  0D72  1803               	skipnc
  6182  0D73  3E01               	addlw	1
  6183  0D74  1903               	skipnz
  6184  0D75  2D77               	goto	u3732
  6185  0D76  07BA               	addwf	___flmul@prod+2,f
  6186  0D77                     u3732:
  6187  0D77  082F               	movf	??___flmul+3,w
  6188  0D78  1103               	clrz
  6189  0D79  1803               	skipnc
  6190  0D7A  3E01               	addlw	1
  6191  0D7B  1903               	skipnz
  6192  0D7C  2D7E               	goto	u3733
  6193  0D7D  07BB               	addwf	___flmul@prod+3,f
  6194  0D7E                     u3733:
  6195  0D7E  0826               	movf	___flmul@b+2,w
  6196  0D7F  00AC               	movwf	??___flmul
  6197  0D80  082C               	movf	??___flmul,w
  6198  0D81  00F0               	movwf	__Umul8_16@multiplicand
  6199  0D82  0828               	movf	___flmul@a,w
  6200  0D83  160A  158A  2481  120A  158A  	fcall	__Umul8_16
  6201  0D88  0871               	movf	?__Umul8_16+1,w
  6202  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  6203  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  6204  0D8B  00BD               	movwf	___flmul@temp+1
  6205  0D8C  0870               	movf	?__Umul8_16,w
  6206  0D8D  00BC               	movwf	___flmul@temp
  6207  0D8E                     l2649:
  6208  0D8E  083C               	movf	___flmul@temp,w
  6209  0D8F  00AC               	movwf	??___flmul
  6210  0D90  01AD               	clrf	??___flmul+1
  6211  0D91  01AE               	clrf	??___flmul+2
  6212  0D92  01AF               	clrf	??___flmul+3
  6213  0D93  082C               	movf	??___flmul,w
  6214  0D94  07B2               	addwf	___flmul@grs,f
  6215  0D95  082D               	movf	??___flmul+1,w
  6216  0D96  1103               	clrz
  6217  0D97  1803               	skipnc
  6218  0D98  3E01               	addlw	1
  6219  0D99  1903               	skipnz
  6220  0D9A  2D9C               	goto	u3741
  6221  0D9B  07B3               	addwf	___flmul@grs+1,f
  6222  0D9C                     u3741:
  6223  0D9C  082E               	movf	??___flmul+2,w
  6224  0D9D  1103               	clrz
  6225  0D9E  1803               	skipnc
  6226  0D9F  3E01               	addlw	1
  6227  0DA0  1903               	skipnz
  6228  0DA1  2DA3               	goto	u3742
  6229  0DA2  07B4               	addwf	___flmul@grs+2,f
  6230  0DA3                     u3742:
  6231  0DA3  082F               	movf	??___flmul+3,w
  6232  0DA4  1103               	clrz
  6233  0DA5  1803               	skipnc
  6234  0DA6  3E01               	addlw	1
  6235  0DA7  1903               	skipnz
  6236  0DA8  2DAA               	goto	u3743
  6237  0DA9  07B5               	addwf	___flmul@grs+3,f
  6238  0DAA                     u3743:
  6239  0DAA                     l2651:
  6240  0DAA  083D               	movf	___flmul@temp+1,w
  6241  0DAB  00AC               	movwf	??___flmul
  6242  0DAC  01AD               	clrf	??___flmul+1
  6243  0DAD  01AE               	clrf	??___flmul+2
  6244  0DAE  01AF               	clrf	??___flmul+3
  6245  0DAF  082C               	movf	??___flmul,w
  6246  0DB0  07B8               	addwf	___flmul@prod,f
  6247  0DB1  082D               	movf	??___flmul+1,w
  6248  0DB2  1103               	clrz
  6249  0DB3  1803               	skipnc
  6250  0DB4  3E01               	addlw	1
  6251  0DB5  1903               	skipnz
  6252  0DB6  2DB8               	goto	u3751
  6253  0DB7  07B9               	addwf	___flmul@prod+1,f
  6254  0DB8                     u3751:
  6255  0DB8  082E               	movf	??___flmul+2,w
  6256  0DB9  1103               	clrz
  6257  0DBA  1803               	skipnc
  6258  0DBB  3E01               	addlw	1
  6259  0DBC  1903               	skipnz
  6260  0DBD  2DBF               	goto	u3752
  6261  0DBE  07BA               	addwf	___flmul@prod+2,f
  6262  0DBF                     u3752:
  6263  0DBF  082F               	movf	??___flmul+3,w
  6264  0DC0  1103               	clrz
  6265  0DC1  1803               	skipnc
  6266  0DC2  3E01               	addlw	1
  6267  0DC3  1903               	skipnz
  6268  0DC4  2DC6               	goto	u3753
  6269  0DC5  07BB               	addwf	___flmul@prod+3,f
  6270  0DC6                     u3753:
  6271  0DC6                     l2653:
  6272  0DC6  3008               	movlw	8
  6273  0DC7  00AC               	movwf	??___flmul
  6274  0DC8                     u3765:
  6275  0DC8  1003               	clrc
  6276  0DC9  0DB2               	rlf	___flmul@grs,f
  6277  0DCA  0DB3               	rlf	___flmul@grs+1,f
  6278  0DCB  0DB4               	rlf	___flmul@grs+2,f
  6279  0DCC  0DB5               	rlf	___flmul@grs+3,f
  6280  0DCD  0BAC               	decfsz	??___flmul,f
  6281  0DCE  2DC8               	goto	u3765
  6282  0DCF                     l2655:
  6283  0DCF  0825               	movf	___flmul@b+1,w
  6284  0DD0  00AC               	movwf	??___flmul
  6285  0DD1  082C               	movf	??___flmul,w
  6286  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  6287  0DD3  0828               	movf	___flmul@a,w
  6288  0DD4  160A  158A  2481  120A  158A  	fcall	__Umul8_16
  6289  0DD9  0871               	movf	?__Umul8_16+1,w
  6290  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  6291  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  6292  0DDC  00BD               	movwf	___flmul@temp+1
  6293  0DDD  0870               	movf	?__Umul8_16,w
  6294  0DDE  00BC               	movwf	___flmul@temp
  6295  0DDF                     l2657:
  6296  0DDF  083C               	movf	___flmul@temp,w
  6297  0DE0  00AC               	movwf	??___flmul
  6298  0DE1  083D               	movf	___flmul@temp+1,w
  6299  0DE2  00AD               	movwf	??___flmul+1
  6300  0DE3  01AE               	clrf	??___flmul+2
  6301  0DE4  01AF               	clrf	??___flmul+3
  6302  0DE5  082C               	movf	??___flmul,w
  6303  0DE6  07B2               	addwf	___flmul@grs,f
  6304  0DE7  082D               	movf	??___flmul+1,w
  6305  0DE8  1103               	clrz
  6306  0DE9  1803               	skipnc
  6307  0DEA  3E01               	addlw	1
  6308  0DEB  1903               	skipnz
  6309  0DEC  2DEE               	goto	u3771
  6310  0DED  07B3               	addwf	___flmul@grs+1,f
  6311  0DEE                     u3771:
  6312  0DEE  082E               	movf	??___flmul+2,w
  6313  0DEF  1103               	clrz
  6314  0DF0  1803               	skipnc
  6315  0DF1  3E01               	addlw	1
  6316  0DF2  1903               	skipnz
  6317  0DF3  2DF5               	goto	u3772
  6318  0DF4  07B4               	addwf	___flmul@grs+2,f
  6319  0DF5                     u3772:
  6320  0DF5  082F               	movf	??___flmul+3,w
  6321  0DF6  1103               	clrz
  6322  0DF7  1803               	skipnc
  6323  0DF8  3E01               	addlw	1
  6324  0DF9  1903               	skipnz
  6325  0DFA  2DFC               	goto	u3773
  6326  0DFB  07B5               	addwf	___flmul@grs+3,f
  6327  0DFC                     u3773:
  6328  0DFC                     l2659:
  6329  0DFC  0824               	movf	___flmul@b,w
  6330  0DFD  00AC               	movwf	??___flmul
  6331  0DFE  082C               	movf	??___flmul,w
  6332  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  6333  0E00  0829               	movf	___flmul@a+1,w
  6334  0E01  160A  158A  2481  120A  158A  	fcall	__Umul8_16
  6335  0E06  0871               	movf	?__Umul8_16+1,w
  6336  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  6337  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  6338  0E09  00BD               	movwf	___flmul@temp+1
  6339  0E0A  0870               	movf	?__Umul8_16,w
  6340  0E0B  00BC               	movwf	___flmul@temp
  6341  0E0C                     l2661:
  6342  0E0C  083C               	movf	___flmul@temp,w
  6343  0E0D  00AC               	movwf	??___flmul
  6344  0E0E  083D               	movf	___flmul@temp+1,w
  6345  0E0F  00AD               	movwf	??___flmul+1
  6346  0E10  01AE               	clrf	??___flmul+2
  6347  0E11  01AF               	clrf	??___flmul+3
  6348  0E12  082C               	movf	??___flmul,w
  6349  0E13  07B2               	addwf	___flmul@grs,f
  6350  0E14  082D               	movf	??___flmul+1,w
  6351  0E15  1103               	clrz
  6352  0E16  1803               	skipnc
  6353  0E17  3E01               	addlw	1
  6354  0E18  1903               	skipnz
  6355  0E19  2E1B               	goto	u3781
  6356  0E1A  07B3               	addwf	___flmul@grs+1,f
  6357  0E1B                     u3781:
  6358  0E1B  082E               	movf	??___flmul+2,w
  6359  0E1C  1103               	clrz
  6360  0E1D  1803               	skipnc
  6361  0E1E  3E01               	addlw	1
  6362  0E1F  1903               	skipnz
  6363  0E20  2E22               	goto	u3782
  6364  0E21  07B4               	addwf	___flmul@grs+2,f
  6365  0E22                     u3782:
  6366  0E22  082F               	movf	??___flmul+3,w
  6367  0E23  1103               	clrz
  6368  0E24  1803               	skipnc
  6369  0E25  3E01               	addlw	1
  6370  0E26  1903               	skipnz
  6371  0E27  2E29               	goto	u3783
  6372  0E28  07B5               	addwf	___flmul@grs+3,f
  6373  0E29                     u3783:
  6374  0E29                     l2663:
  6375  0E29  3008               	movlw	8
  6376  0E2A  00AC               	movwf	??___flmul
  6377  0E2B                     u3795:
  6378  0E2B  1003               	clrc
  6379  0E2C  0DB2               	rlf	___flmul@grs,f
  6380  0E2D  0DB3               	rlf	___flmul@grs+1,f
  6381  0E2E  0DB4               	rlf	___flmul@grs+2,f
  6382  0E2F  0DB5               	rlf	___flmul@grs+3,f
  6383  0E30  0BAC               	decfsz	??___flmul,f
  6384  0E31  2E2B               	goto	u3795
  6385  0E32  0824               	movf	___flmul@b,w
  6386  0E33  00AC               	movwf	??___flmul
  6387  0E34  082C               	movf	??___flmul,w
  6388  0E35  00F0               	movwf	__Umul8_16@multiplicand
  6389  0E36  0828               	movf	___flmul@a,w
  6390  0E37  160A  158A  2481  120A  158A  	fcall	__Umul8_16
  6391  0E3C  0871               	movf	?__Umul8_16+1,w
  6392  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  6393  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  6394  0E3F  00BD               	movwf	___flmul@temp+1
  6395  0E40  0870               	movf	?__Umul8_16,w
  6396  0E41  00BC               	movwf	___flmul@temp
  6397  0E42                     l2665:
  6398  0E42  083C               	movf	___flmul@temp,w
  6399  0E43  00AC               	movwf	??___flmul
  6400  0E44  083D               	movf	___flmul@temp+1,w
  6401  0E45  00AD               	movwf	??___flmul+1
  6402  0E46  01AE               	clrf	??___flmul+2
  6403  0E47  01AF               	clrf	??___flmul+3
  6404  0E48  082C               	movf	??___flmul,w
  6405  0E49  07B2               	addwf	___flmul@grs,f
  6406  0E4A  082D               	movf	??___flmul+1,w
  6407  0E4B  1103               	clrz
  6408  0E4C  1803               	skipnc
  6409  0E4D  3E01               	addlw	1
  6410  0E4E  1903               	skipnz
  6411  0E4F  2E51               	goto	u3801
  6412  0E50  07B3               	addwf	___flmul@grs+1,f
  6413  0E51                     u3801:
  6414  0E51  082E               	movf	??___flmul+2,w
  6415  0E52  1103               	clrz
  6416  0E53  1803               	skipnc
  6417  0E54  3E01               	addlw	1
  6418  0E55  1903               	skipnz
  6419  0E56  2E58               	goto	u3802
  6420  0E57  07B4               	addwf	___flmul@grs+2,f
  6421  0E58                     u3802:
  6422  0E58  082F               	movf	??___flmul+3,w
  6423  0E59  1103               	clrz
  6424  0E5A  1803               	skipnc
  6425  0E5B  3E01               	addlw	1
  6426  0E5C  1903               	skipnz
  6427  0E5D  2E5F               	goto	u3803
  6428  0E5E  07B5               	addwf	___flmul@grs+3,f
  6429  0E5F                     u3803:
  6430  0E5F                     l2667:
  6431  0E5F  0825               	movf	___flmul@b+1,w
  6432  0E60  00AC               	movwf	??___flmul
  6433  0E61  082C               	movf	??___flmul,w
  6434  0E62  00F0               	movwf	__Umul8_16@multiplicand
  6435  0E63  082A               	movf	___flmul@a+2,w
  6436  0E64  160A  158A  2481  120A  158A  	fcall	__Umul8_16
  6437  0E69  0871               	movf	?__Umul8_16+1,w
  6438  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  6439  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  6440  0E6C  00BD               	movwf	___flmul@temp+1
  6441  0E6D  0870               	movf	?__Umul8_16,w
  6442  0E6E  00BC               	movwf	___flmul@temp
  6443  0E6F  083C               	movf	___flmul@temp,w
  6444  0E70  00AC               	movwf	??___flmul
  6445  0E71  083D               	movf	___flmul@temp+1,w
  6446  0E72  00AD               	movwf	??___flmul+1
  6447  0E73  01AE               	clrf	??___flmul+2
  6448  0E74  01AF               	clrf	??___flmul+3
  6449  0E75  082C               	movf	??___flmul,w
  6450  0E76  07B8               	addwf	___flmul@prod,f
  6451  0E77  082D               	movf	??___flmul+1,w
  6452  0E78  1103               	clrz
  6453  0E79  1803               	skipnc
  6454  0E7A  3E01               	addlw	1
  6455  0E7B  1903               	skipnz
  6456  0E7C  2E7E               	goto	u3811
  6457  0E7D  07B9               	addwf	___flmul@prod+1,f
  6458  0E7E                     u3811:
  6459  0E7E  082E               	movf	??___flmul+2,w
  6460  0E7F  1103               	clrz
  6461  0E80  1803               	skipnc
  6462  0E81  3E01               	addlw	1
  6463  0E82  1903               	skipnz
  6464  0E83  2E85               	goto	u3812
  6465  0E84  07BA               	addwf	___flmul@prod+2,f
  6466  0E85                     u3812:
  6467  0E85  082F               	movf	??___flmul+3,w
  6468  0E86  1103               	clrz
  6469  0E87  1803               	skipnc
  6470  0E88  3E01               	addlw	1
  6471  0E89  1903               	skipnz
  6472  0E8A  2E8C               	goto	u3813
  6473  0E8B  07BB               	addwf	___flmul@prod+3,f
  6474  0E8C                     u3813:
  6475  0E8C                     l2669:
  6476  0E8C  0826               	movf	___flmul@b+2,w
  6477  0E8D  00AC               	movwf	??___flmul
  6478  0E8E  082C               	movf	??___flmul,w
  6479  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  6480  0E90  0829               	movf	___flmul@a+1,w
  6481  0E91  160A  158A  2481  120A  158A  	fcall	__Umul8_16
  6482  0E96  0871               	movf	?__Umul8_16+1,w
  6483  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  6484  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  6485  0E99  00BD               	movwf	___flmul@temp+1
  6486  0E9A  0870               	movf	?__Umul8_16,w
  6487  0E9B  00BC               	movwf	___flmul@temp
  6488  0E9C                     l2671:
  6489  0E9C  083C               	movf	___flmul@temp,w
  6490  0E9D  00AC               	movwf	??___flmul
  6491  0E9E  083D               	movf	___flmul@temp+1,w
  6492  0E9F  00AD               	movwf	??___flmul+1
  6493  0EA0  01AE               	clrf	??___flmul+2
  6494  0EA1  01AF               	clrf	??___flmul+3
  6495  0EA2  082C               	movf	??___flmul,w
  6496  0EA3  07B8               	addwf	___flmul@prod,f
  6497  0EA4  082D               	movf	??___flmul+1,w
  6498  0EA5  1103               	clrz
  6499  0EA6  1803               	skipnc
  6500  0EA7  3E01               	addlw	1
  6501  0EA8  1903               	skipnz
  6502  0EA9  2EAB               	goto	u3821
  6503  0EAA  07B9               	addwf	___flmul@prod+1,f
  6504  0EAB                     u3821:
  6505  0EAB  082E               	movf	??___flmul+2,w
  6506  0EAC  1103               	clrz
  6507  0EAD  1803               	skipnc
  6508  0EAE  3E01               	addlw	1
  6509  0EAF  1903               	skipnz
  6510  0EB0  2EB2               	goto	u3822
  6511  0EB1  07BA               	addwf	___flmul@prod+2,f
  6512  0EB2                     u3822:
  6513  0EB2  082F               	movf	??___flmul+3,w
  6514  0EB3  1103               	clrz
  6515  0EB4  1803               	skipnc
  6516  0EB5  3E01               	addlw	1
  6517  0EB6  1903               	skipnz
  6518  0EB7  2EB9               	goto	u3823
  6519  0EB8  07BB               	addwf	___flmul@prod+3,f
  6520  0EB9                     u3823:
  6521  0EB9  0826               	movf	___flmul@b+2,w
  6522  0EBA  00AC               	movwf	??___flmul
  6523  0EBB  082C               	movf	??___flmul,w
  6524  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  6525  0EBD  082A               	movf	___flmul@a+2,w
  6526  0EBE  160A  158A  2481  120A  158A  	fcall	__Umul8_16
  6527  0EC3  0871               	movf	?__Umul8_16+1,w
  6528  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  6529  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  6530  0EC6  00BD               	movwf	___flmul@temp+1
  6531  0EC7  0870               	movf	?__Umul8_16,w
  6532  0EC8  00BC               	movwf	___flmul@temp
  6533  0EC9                     l2673:
  6534  0EC9  083C               	movf	___flmul@temp,w
  6535  0ECA  00AC               	movwf	??___flmul
  6536  0ECB  083D               	movf	___flmul@temp+1,w
  6537  0ECC  00AD               	movwf	??___flmul+1
  6538  0ECD  01AE               	clrf	??___flmul+2
  6539  0ECE  01AF               	clrf	??___flmul+3
  6540  0ECF  3008               	movlw	8
  6541  0ED0                     u3835:
  6542  0ED0  1003               	clrc
  6543  0ED1  0DAC               	rlf	??___flmul,f
  6544  0ED2  0DAD               	rlf	??___flmul+1,f
  6545  0ED3  0DAE               	rlf	??___flmul+2,f
  6546  0ED4  0DAF               	rlf	??___flmul+3,f
  6547  0ED5                     u3830:
  6548  0ED5  3EFF               	addlw	-1
  6549  0ED6  1D03               	skipz
  6550  0ED7  2ED0               	goto	u3835
  6551  0ED8  082C               	movf	??___flmul,w
  6552  0ED9  07B8               	addwf	___flmul@prod,f
  6553  0EDA  082D               	movf	??___flmul+1,w
  6554  0EDB  1103               	clrz
  6555  0EDC  1803               	skipnc
  6556  0EDD  3E01               	addlw	1
  6557  0EDE  1903               	skipnz
  6558  0EDF  2EE1               	goto	u3841
  6559  0EE0  07B9               	addwf	___flmul@prod+1,f
  6560  0EE1                     u3841:
  6561  0EE1  082E               	movf	??___flmul+2,w
  6562  0EE2  1103               	clrz
  6563  0EE3  1803               	skipnc
  6564  0EE4  3E01               	addlw	1
  6565  0EE5  1903               	skipnz
  6566  0EE6  2EE8               	goto	u3842
  6567  0EE7  07BA               	addwf	___flmul@prod+2,f
  6568  0EE8                     u3842:
  6569  0EE8  082F               	movf	??___flmul+3,w
  6570  0EE9  1103               	clrz
  6571  0EEA  1803               	skipnc
  6572  0EEB  3E01               	addlw	1
  6573  0EEC  1903               	skipnz
  6574  0EED  2EEF               	goto	u3843
  6575  0EEE  07BB               	addwf	___flmul@prod+3,f
  6576  0EEF                     u3843:
  6577  0EEF                     l2675:
  6578  0EEF  0832               	movf	___flmul@grs,w
  6579  0EF0  00AC               	movwf	??___flmul
  6580  0EF1  0833               	movf	___flmul@grs+1,w
  6581  0EF2  00AD               	movwf	??___flmul+1
  6582  0EF3  0834               	movf	___flmul@grs+2,w
  6583  0EF4  00AE               	movwf	??___flmul+2
  6584  0EF5  0835               	movf	___flmul@grs+3,w
  6585  0EF6  00AF               	movwf	??___flmul+3
  6586  0EF7  3018               	movlw	24
  6587  0EF8                     u3855:
  6588  0EF8  1003               	clrc
  6589  0EF9  0CAF               	rrf	??___flmul+3,f
  6590  0EFA  0CAE               	rrf	??___flmul+2,f
  6591  0EFB  0CAD               	rrf	??___flmul+1,f
  6592  0EFC  0CAC               	rrf	??___flmul,f
  6593  0EFD                     u3850:
  6594  0EFD  3EFF               	addlw	-1
  6595  0EFE  1D03               	skipz
  6596  0EFF  2EF8               	goto	u3855
  6597  0F00  082C               	movf	??___flmul,w
  6598  0F01  07B8               	addwf	___flmul@prod,f
  6599  0F02  082D               	movf	??___flmul+1,w
  6600  0F03  1103               	clrz
  6601  0F04  1803               	skipnc
  6602  0F05  3E01               	addlw	1
  6603  0F06  1903               	skipnz
  6604  0F07  2F09               	goto	u3861
  6605  0F08  07B9               	addwf	___flmul@prod+1,f
  6606  0F09                     u3861:
  6607  0F09  082E               	movf	??___flmul+2,w
  6608  0F0A  1103               	clrz
  6609  0F0B  1803               	skipnc
  6610  0F0C  3E01               	addlw	1
  6611  0F0D  1903               	skipnz
  6612  0F0E  2F10               	goto	u3862
  6613  0F0F  07BA               	addwf	___flmul@prod+2,f
  6614  0F10                     u3862:
  6615  0F10  082F               	movf	??___flmul+3,w
  6616  0F11  1103               	clrz
  6617  0F12  1803               	skipnc
  6618  0F13  3E01               	addlw	1
  6619  0F14  1903               	skipnz
  6620  0F15  2F17               	goto	u3863
  6621  0F16  07BB               	addwf	___flmul@prod+3,f
  6622  0F17                     u3863:
  6623  0F17                     l2677:
  6624  0F17  3008               	movlw	8
  6625  0F18  00AC               	movwf	??___flmul
  6626  0F19                     u3875:
  6627  0F19  1003               	clrc
  6628  0F1A  0DB2               	rlf	___flmul@grs,f
  6629  0F1B  0DB3               	rlf	___flmul@grs+1,f
  6630  0F1C  0DB4               	rlf	___flmul@grs+2,f
  6631  0F1D  0DB5               	rlf	___flmul@grs+3,f
  6632  0F1E  0BAC               	decfsz	??___flmul,f
  6633  0F1F  2F19               	goto	u3875
  6634  0F20                     l2679:
  6635  0F20  0837               	movf	___flmul@bexp,w
  6636  0F21  0736               	addwf	___flmul@aexp,w
  6637  0F22  00AC               	movwf	??___flmul
  6638  0F23  01AD               	clrf	??___flmul+1
  6639  0F24  0DAD               	rlf	??___flmul+1,f
  6640  0F25  082C               	movf	??___flmul,w
  6641  0F26  3E82               	addlw	130
  6642  0F27  00BC               	movwf	___flmul@temp
  6643  0F28  082D               	movf	??___flmul+1,w
  6644  0F29  1803               	skipnc
  6645  0F2A  3E01               	addlw	1
  6646  0F2B  3EFF               	addlw	255
  6647  0F2C  00BD               	movwf	___flmul@temp+1
  6648  0F2D  2F4B               	goto	l2691
  6649  0F2E                     l2681:
  6650  0F2E  3001               	movlw	1
  6651  0F2F  00AC               	movwf	??___flmul
  6652  0F30                     u3885:
  6653  0F30  1003               	clrc
  6654  0F31  0DB8               	rlf	___flmul@prod,f
  6655  0F32  0DB9               	rlf	___flmul@prod+1,f
  6656  0F33  0DBA               	rlf	___flmul@prod+2,f
  6657  0F34  0DBB               	rlf	___flmul@prod+3,f
  6658  0F35  0BAC               	decfsz	??___flmul,f
  6659  0F36  2F30               	goto	u3885
  6660  0F37                     l2683:
  6661  0F37  1FB5               	btfss	___flmul@grs+3,7
  6662  0F38  2F3A               	goto	u3891
  6663  0F39  2F3B               	goto	u3890
  6664  0F3A                     u3891:
  6665  0F3A  2F3C               	goto	l2687
  6666  0F3B                     u3890:
  6667  0F3B                     l2685:
  6668  0F3B  1438               	bsf	___flmul@prod,0
  6669  0F3C                     l2687:
  6670  0F3C  3001               	movlw	1
  6671  0F3D  00AC               	movwf	??___flmul
  6672  0F3E                     u3905:
  6673  0F3E  1003               	clrc
  6674  0F3F  0DB2               	rlf	___flmul@grs,f
  6675  0F40  0DB3               	rlf	___flmul@grs+1,f
  6676  0F41  0DB4               	rlf	___flmul@grs+2,f
  6677  0F42  0DB5               	rlf	___flmul@grs+3,f
  6678  0F43  0BAC               	decfsz	??___flmul,f
  6679  0F44  2F3E               	goto	u3905
  6680  0F45                     l2689:
  6681  0F45  30FF               	movlw	255
  6682  0F46  07BC               	addwf	___flmul@temp,f
  6683  0F47  1803               	skipnc
  6684  0F48  0ABD               	incf	___flmul@temp+1,f
  6685  0F49  30FF               	movlw	255
  6686  0F4A  07BD               	addwf	___flmul@temp+1,f
  6687  0F4B                     l2691:
  6688  0F4B  1FBA               	btfss	___flmul@prod+2,7
  6689  0F4C  2F4E               	goto	u3911
  6690  0F4D  2F4F               	goto	u3910
  6691  0F4E                     u3911:
  6692  0F4E  2F2E               	goto	l2681
  6693  0F4F                     u3910:
  6694  0F4F                     l2693:
  6695  0F4F  01B6               	clrf	___flmul@aexp
  6696  0F50                     l2695:
  6697  0F50  1FB5               	btfss	___flmul@grs+3,7
  6698  0F51  2F53               	goto	u3921
  6699  0F52  2F54               	goto	u3920
  6700  0F53                     u3921:
  6701  0F53  2F70               	goto	l2703
  6702  0F54                     u3920:
  6703  0F54                     l2697:
  6704  0F54  30FF               	movlw	255
  6705  0F55  0532               	andwf	___flmul@grs,w
  6706  0F56  00AC               	movwf	??___flmul
  6707  0F57  30FF               	movlw	255
  6708  0F58  0533               	andwf	___flmul@grs+1,w
  6709  0F59  00AD               	movwf	??___flmul+1
  6710  0F5A  30FF               	movlw	255
  6711  0F5B  0534               	andwf	___flmul@grs+2,w
  6712  0F5C  00AE               	movwf	??___flmul+2
  6713  0F5D  307F               	movlw	127
  6714  0F5E  0535               	andwf	___flmul@grs+3,w
  6715  0F5F  00AF               	movwf	??___flmul+3
  6716  0F60  082F               	movf	??___flmul+3,w
  6717  0F61  042E               	iorwf	??___flmul+2,w
  6718  0F62  042D               	iorwf	??___flmul+1,w
  6719  0F63  042C               	iorwf	??___flmul,w
  6720  0F64  1903               	skipnz
  6721  0F65  2F67               	goto	u3931
  6722  0F66  2F68               	goto	u3930
  6723  0F67                     u3931:
  6724  0F67  2F6B               	goto	l801
  6725  0F68                     u3930:
  6726  0F68                     l2699:
  6727  0F68  01B6               	clrf	___flmul@aexp
  6728  0F69  0AB6               	incf	___flmul@aexp,f
  6729  0F6A  2F70               	goto	l2703
  6730  0F6B                     l801:
  6731  0F6B  1C38               	btfss	___flmul@prod,0
  6732  0F6C  2F6E               	goto	u3941
  6733  0F6D  2F6F               	goto	u3940
  6734  0F6E                     u3941:
  6735  0F6E  2F70               	goto	l2703
  6736  0F6F                     u3940:
  6737  0F6F  2F68               	goto	l2699
  6738  0F70                     l2703:
  6739  0F70  0836               	movf	___flmul@aexp,w
  6740  0F71  1903               	btfsc	3,2
  6741  0F72  2F74               	goto	u3951
  6742  0F73  2F75               	goto	u3950
  6743  0F74                     u3951:
  6744  0F74  2FA6               	goto	l2713
  6745  0F75                     u3950:
  6746  0F75                     l2705:
  6747  0F75  3001               	movlw	1
  6748  0F76  07B8               	addwf	___flmul@prod,f
  6749  0F77  3000               	movlw	0
  6750  0F78  1803               	skipnc
  6751  0F79  3001               	movlw	1
  6752  0F7A  07B9               	addwf	___flmul@prod+1,f
  6753  0F7B  3000               	movlw	0
  6754  0F7C  1803               	skipnc
  6755  0F7D  3001               	movlw	1
  6756  0F7E  07BA               	addwf	___flmul@prod+2,f
  6757  0F7F  3000               	movlw	0
  6758  0F80  1803               	skipnc
  6759  0F81  3001               	movlw	1
  6760  0F82  07BB               	addwf	___flmul@prod+3,f
  6761  0F83                     l2707:
  6762  0F83  1C3B               	btfss	___flmul@prod+3,0
  6763  0F84  2F86               	goto	u3961
  6764  0F85  2F87               	goto	u3960
  6765  0F86                     u3961:
  6766  0F86  2FA6               	goto	l2713
  6767  0F87                     u3960:
  6768  0F87                     l2709:
  6769  0F87  0838               	movf	___flmul@prod,w
  6770  0F88  00AC               	movwf	??___flmul
  6771  0F89  0839               	movf	___flmul@prod+1,w
  6772  0F8A  00AD               	movwf	??___flmul+1
  6773  0F8B  083A               	movf	___flmul@prod+2,w
  6774  0F8C  00AE               	movwf	??___flmul+2
  6775  0F8D  083B               	movf	___flmul@prod+3,w
  6776  0F8E  00AF               	movwf	??___flmul+3
  6777  0F8F  3001               	movlw	1
  6778  0F90  00B0               	movwf	??___flmul+4
  6779  0F91                     u3975:
  6780  0F91  0D2F               	rlf	??___flmul+3,w
  6781  0F92  0CAF               	rrf	??___flmul+3,f
  6782  0F93  0CAE               	rrf	??___flmul+2,f
  6783  0F94  0CAD               	rrf	??___flmul+1,f
  6784  0F95  0CAC               	rrf	??___flmul,f
  6785  0F96                     u3970:
  6786  0F96  0BB0               	decfsz	??___flmul+4,f
  6787  0F97  2F91               	goto	u3975
  6788  0F98  082F               	movf	??___flmul+3,w
  6789  0F99  00BB               	movwf	___flmul@prod+3
  6790  0F9A  082E               	movf	??___flmul+2,w
  6791  0F9B  00BA               	movwf	___flmul@prod+2
  6792  0F9C  082D               	movf	??___flmul+1,w
  6793  0F9D  00B9               	movwf	___flmul@prod+1
  6794  0F9E  082C               	movf	??___flmul,w
  6795  0F9F  00B8               	movwf	___flmul@prod
  6796  0FA0                     l2711:
  6797  0FA0  3001               	movlw	1
  6798  0FA1  07BC               	addwf	___flmul@temp,f
  6799  0FA2  1803               	skipnc
  6800  0FA3  0ABD               	incf	___flmul@temp+1,f
  6801  0FA4  3000               	movlw	0
  6802  0FA5  07BD               	addwf	___flmul@temp+1,f
  6803  0FA6                     l2713:
  6804  0FA6  083D               	movf	___flmul@temp+1,w
  6805  0FA7  3A80               	xorlw	128
  6806  0FA8  00FF               	movwf	btemp+1
  6807  0FA9  3080               	movlw	128
  6808  0FAA  027F               	subwf	btemp+1,w
  6809  0FAB  1D03               	skipz
  6810  0FAC  2FAF               	goto	u3985
  6811  0FAD  30FF               	movlw	255
  6812  0FAE  023C               	subwf	___flmul@temp,w
  6813  0FAF                     u3985:
  6814  0FAF  1C03               	skipc
  6815  0FB0  2FB2               	goto	u3981
  6816  0FB1  2FB3               	goto	u3980
  6817  0FB2                     u3981:
  6818  0FB2  2FBE               	goto	l2717
  6819  0FB3                     u3980:
  6820  0FB3                     l2715:
  6821  0FB3  307F               	movlw	127
  6822  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  6823  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  6824  0FB6  00BB               	movwf	___flmul@prod+3
  6825  0FB7  3080               	movlw	128
  6826  0FB8  00BA               	movwf	___flmul@prod+2
  6827  0FB9  3000               	movlw	0
  6828  0FBA  00B9               	movwf	___flmul@prod+1
  6829  0FBB  3000               	movlw	0
  6830  0FBC  00B8               	movwf	___flmul@prod
  6831  0FBD  2FF3               	goto	l807
  6832  0FBE                     l2717:
  6833  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  6834  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  6835  0FC0  083D               	movf	___flmul@temp+1,w
  6836  0FC1  3A80               	xorlw	128
  6837  0FC2  00FF               	movwf	btemp+1
  6838  0FC3  3080               	movlw	128
  6839  0FC4  027F               	subwf	btemp+1,w
  6840  0FC5  1D03               	skipz
  6841  0FC6  2FC9               	goto	u3995
  6842  0FC7  3001               	movlw	1
  6843  0FC8  023C               	subwf	___flmul@temp,w
  6844  0FC9                     u3995:
  6845  0FC9  1803               	skipnc
  6846  0FCA  2FCC               	goto	u3991
  6847  0FCB  2FCD               	goto	u3990
  6848  0FCC                     u3991:
  6849  0FCC  2FD9               	goto	l2723
  6850  0FCD                     u3990:
  6851  0FCD                     l2719:
  6852  0FCD  3000               	movlw	0
  6853  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  6854  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  6855  0FD0  00BB               	movwf	___flmul@prod+3
  6856  0FD1  3000               	movlw	0
  6857  0FD2  00BA               	movwf	___flmul@prod+2
  6858  0FD3  3000               	movlw	0
  6859  0FD4  00B9               	movwf	___flmul@prod+1
  6860  0FD5  3000               	movlw	0
  6861  0FD6  00B8               	movwf	___flmul@prod
  6862  0FD7                     l2721:
  6863  0FD7  01B1               	clrf	___flmul@sign
  6864  0FD8  2FF3               	goto	l807
  6865  0FD9                     l2723:
  6866  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  6867  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  6868  0FDB  083C               	movf	___flmul@temp,w
  6869  0FDC  00AC               	movwf	??___flmul
  6870  0FDD  082C               	movf	??___flmul,w
  6871  0FDE  00B7               	movwf	___flmul@bexp
  6872  0FDF  30FF               	movlw	255
  6873  0FE0  05B8               	andwf	___flmul@prod,f
  6874  0FE1  30FF               	movlw	255
  6875  0FE2  05B9               	andwf	___flmul@prod+1,f
  6876  0FE3  307F               	movlw	127
  6877  0FE4  05BA               	andwf	___flmul@prod+2,f
  6878  0FE5  3000               	movlw	0
  6879  0FE6  05BB               	andwf	___flmul@prod+3,f
  6880  0FE7                     l2725:
  6881  0FE7  1C37               	btfss	___flmul@bexp,0
  6882  0FE8  2FEA               	goto	u4001
  6883  0FE9  2FEB               	goto	u4000
  6884  0FEA                     u4001:
  6885  0FEA  2FEC               	goto	l2729
  6886  0FEB                     u4000:
  6887  0FEB                     l2727:
  6888  0FEB  17BA               	bsf	___flmul@prod+2,7
  6889  0FEC                     l2729:
  6890  0FEC  0837               	movf	___flmul@bexp,w
  6891  0FED  00AC               	movwf	??___flmul
  6892  0FEE  1003               	clrc
  6893  0FEF  0C2C               	rrf	??___flmul,w
  6894  0FF0  00AD               	movwf	??___flmul+1
  6895  0FF1  082D               	movf	??___flmul+1,w
  6896  0FF2  00BB               	movwf	___flmul@prod+3
  6897  0FF3                     l807:
  6898  0FF3  0831               	movf	___flmul@sign,w
  6899  0FF4  00AC               	movwf	??___flmul
  6900  0FF5  082C               	movf	??___flmul,w
  6901  0FF6  04BB               	iorwf	___flmul@prod+3,f
  6902  0FF7                     l2731:
  6903  0FF7  083B               	movf	___flmul@prod+3,w
  6904  0FF8  00A7               	movwf	?___flmul+3
  6905  0FF9  083A               	movf	___flmul@prod+2,w
  6906  0FFA  00A6               	movwf	?___flmul+2
  6907  0FFB  0839               	movf	___flmul@prod+1,w
  6908  0FFC  00A5               	movwf	?___flmul+1
  6909  0FFD  0838               	movf	___flmul@prod,w
  6910  0FFE  00A4               	movwf	?___flmul
  6911  0FFF                     l795:
  6912  0FFF  0008               	return
  6913  1000                     __end_of___flmul:
  6914                           
  6915                           	psect	text10
  6916  1C81                     __ptext10:	
  6917 ;; *************** function __Umul8_16 *****************
  6918 ;; Defined at:
  6919 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6920 ;; Parameters:    Size  Location     Type
  6921 ;;  multiplier      1    wreg     unsigned char 
  6922 ;;  multiplicand    1    0[COMMON] unsigned char 
  6923 ;; Auto vars:     Size  Location     Type
  6924 ;;  multiplier      1    8[COMMON] unsigned char 
  6925 ;;  word_mpld       2    6[COMMON] unsigned int 
  6926 ;;  product         2    4[COMMON] unsigned int 
  6927 ;; Return value:  Size  Location     Type
  6928 ;;                  2    0[COMMON] unsigned int 
  6929 ;; Registers used:
  6930 ;;		wreg, status,2, status,0
  6931 ;; Tracked objects:
  6932 ;;		On entry : 0/0
  6933 ;;		On exit  : 0/0
  6934 ;;		Unchanged: 0/0
  6935 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6936 ;;      Params:         2       0       0       0       0
  6937 ;;      Locals:         5       0       0       0       0
  6938 ;;      Temps:          2       0       0       0       0
  6939 ;;      Totals:         9       0       0       0       0
  6940 ;;Total ram usage:        9 bytes
  6941 ;; Hardware stack levels used:    1
  6942 ;; This function calls:
  6943 ;;		Nothing
  6944 ;; This function is called by:
  6945 ;;		___flmul
  6946 ;; This function uses a non-reentrant model
  6947 ;;
  6948                           
  6949                           
  6950                           ;psect for function __Umul8_16
  6951  1C81                     __Umul8_16:
  6952                           
  6953                           ;incstack = 0
  6954                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6955                           ;__Umul8_16@multiplier stored from wreg
  6956  1C81  00F8               	movwf	__Umul8_16@multiplier
  6957  1C82                     l2255:
  6958  1C82  01F4               	clrf	__Umul8_16@product
  6959  1C83  01F5               	clrf	__Umul8_16@product+1
  6960  1C84                     l2257:
  6961  1C84  0870               	movf	__Umul8_16@multiplicand,w
  6962  1C85  00F2               	movwf	??__Umul8_16
  6963  1C86  01F3               	clrf	??__Umul8_16+1
  6964  1C87  0872               	movf	??__Umul8_16,w
  6965  1C88  00F6               	movwf	__Umul8_16@word_mpld
  6966  1C89  0873               	movf	??__Umul8_16+1,w
  6967  1C8A  00F7               	movwf	__Umul8_16@word_mpld+1
  6968  1C8B                     l2259:
  6969  1C8B  1C78               	btfss	__Umul8_16@multiplier,0
  6970  1C8C  2C8E               	goto	u2831
  6971  1C8D  2C8F               	goto	u2830
  6972  1C8E                     u2831:
  6973  1C8E  2C95               	goto	l814
  6974  1C8F                     u2830:
  6975  1C8F                     l2261:
  6976  1C8F  0876               	movf	__Umul8_16@word_mpld,w
  6977  1C90  07F4               	addwf	__Umul8_16@product,f
  6978  1C91  1803               	skipnc
  6979  1C92  0AF5               	incf	__Umul8_16@product+1,f
  6980  1C93  0877               	movf	__Umul8_16@word_mpld+1,w
  6981  1C94  07F5               	addwf	__Umul8_16@product+1,f
  6982  1C95                     l814:
  6983  1C95  3001               	movlw	1
  6984  1C96                     u2845:
  6985  1C96  1003               	clrc
  6986  1C97  0DF6               	rlf	__Umul8_16@word_mpld,f
  6987  1C98  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6988  1C99  3EFF               	addlw	-1
  6989  1C9A  1D03               	skipz
  6990  1C9B  2C96               	goto	u2845
  6991  1C9C  1003               	clrc
  6992  1C9D  0CF8               	rrf	__Umul8_16@multiplier,f
  6993  1C9E                     l2263:
  6994  1C9E  0878               	movf	__Umul8_16@multiplier,w
  6995  1C9F  1D03               	btfss	3,2
  6996  1CA0  2CA2               	goto	u2851
  6997  1CA1  2CA3               	goto	u2850
  6998  1CA2                     u2851:
  6999  1CA2  2C8B               	goto	l2259
  7000  1CA3                     u2850:
  7001  1CA3                     l2265:
  7002  1CA3  0875               	movf	__Umul8_16@product+1,w
  7003  1CA4  00F1               	movwf	?__Umul8_16+1
  7004  1CA5  0874               	movf	__Umul8_16@product,w
  7005  1CA6  00F0               	movwf	?__Umul8_16
  7006  1CA7                     l816:
  7007  1CA7  0008               	return
  7008  1CA8                     __end_of__Umul8_16:
  7009                           
  7010                           	psect	text11
  7011  106B                     __ptext11:	
  7012 ;; *************** function __tdiv_to_l_ *****************
  7013 ;; Defined at:
  7014 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  7015 ;; Parameters:    Size  Location     Type
  7016 ;;  f1              4    0[COMMON] float 
  7017 ;;  f2              4    4[COMMON] float 
  7018 ;; Auto vars:     Size  Location     Type
  7019 ;;  quot            4    0[BANK0 ] unsigned long 
  7020 ;;  exp1            1    5[BANK0 ] unsigned char 
  7021 ;;  cntr            1    4[BANK0 ] unsigned char 
  7022 ;; Return value:  Size  Location     Type
  7023 ;;                  4    0[COMMON] unsigned long 
  7024 ;; Registers used:
  7025 ;;		wreg, status,2, status,0
  7026 ;; Tracked objects:
  7027 ;;		On entry : 0/0
  7028 ;;		On exit  : 0/0
  7029 ;;		Unchanged: 0/0
  7030 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7031 ;;      Params:         8       0       0       0       0
  7032 ;;      Locals:         0       6       0       0       0
  7033 ;;      Temps:          4       0       0       0       0
  7034 ;;      Totals:        12       6       0       0       0
  7035 ;;Total ram usage:       18 bytes
  7036 ;; Hardware stack levels used:    1
  7037 ;; This function calls:
  7038 ;;		Nothing
  7039 ;; This function is called by:
  7040 ;;		_sprintf
  7041 ;; This function uses a non-reentrant model
  7042 ;;
  7043                           
  7044                           
  7045                           ;psect for function __tdiv_to_l_
  7046  106B                     __tdiv_to_l_:
  7047  106B                     l2829:	
  7048                           ;incstack = 0
  7049                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  7050                           
  7051  106B  0870               	movf	__tdiv_to_l_@f1,w
  7052  106C  00F8               	movwf	??__tdiv_to_l_
  7053  106D  0871               	movf	__tdiv_to_l_@f1+1,w
  7054  106E  00F9               	movwf	??__tdiv_to_l_+1
  7055  106F  0872               	movf	__tdiv_to_l_@f1+2,w
  7056  1070  00FA               	movwf	??__tdiv_to_l_+2
  7057  1071  1003               	clrc
  7058  1072  0D79               	rlf	??__tdiv_to_l_+1,w
  7059  1073  0D7A               	rlf	??__tdiv_to_l_+2,w
  7060  1074  00FB               	movwf	??__tdiv_to_l_+3
  7061  1075  087B               	movf	??__tdiv_to_l_+3,w
  7062  1076  1283               	bcf	3,5	;RP0=0, select bank0
  7063  1077  1303               	bcf	3,6	;RP1=0, select bank0
  7064  1078  00A5               	movwf	__tdiv_to_l_@exp1
  7065  1079  0825               	movf	__tdiv_to_l_@exp1,w
  7066  107A  1D03               	btfss	3,2
  7067  107B  287D               	goto	u4291
  7068  107C  287E               	goto	u4290
  7069  107D                     u4291:
  7070  107D  2887               	goto	l2835
  7071  107E                     u4290:
  7072  107E                     l2831:
  7073  107E  3000               	movlw	0
  7074  107F  00F3               	movwf	?__tdiv_to_l_+3
  7075  1080  3000               	movlw	0
  7076  1081  00F2               	movwf	?__tdiv_to_l_+2
  7077  1082  3000               	movlw	0
  7078  1083  00F1               	movwf	?__tdiv_to_l_+1
  7079  1084  3000               	movlw	0
  7080  1085  00F0               	movwf	?__tdiv_to_l_
  7081  1086  2927               	goto	l589
  7082  1087                     l2835:
  7083  1087  0874               	movf	__tdiv_to_l_@f2,w
  7084  1088  00F8               	movwf	??__tdiv_to_l_
  7085  1089  0875               	movf	__tdiv_to_l_@f2+1,w
  7086  108A  00F9               	movwf	??__tdiv_to_l_+1
  7087  108B  0876               	movf	__tdiv_to_l_@f2+2,w
  7088  108C  00FA               	movwf	??__tdiv_to_l_+2
  7089  108D  1003               	clrc
  7090  108E  0D79               	rlf	??__tdiv_to_l_+1,w
  7091  108F  0D7A               	rlf	??__tdiv_to_l_+2,w
  7092  1090  00FB               	movwf	??__tdiv_to_l_+3
  7093  1091  087B               	movf	??__tdiv_to_l_+3,w
  7094  1092  00A4               	movwf	__tdiv_to_l_@cntr
  7095  1093  0824               	movf	__tdiv_to_l_@cntr,w
  7096  1094  1D03               	btfss	3,2
  7097  1095  2897               	goto	u4301
  7098  1096  2898               	goto	u4300
  7099  1097                     u4301:
  7100  1097  2899               	goto	l590
  7101  1098                     u4300:
  7102  1098  287E               	goto	l2831
  7103  1099                     l590:
  7104  1099  17F1               	bsf	__tdiv_to_l_@f1+1,7
  7105  109A                     l2841:
  7106  109A  30FF               	movlw	255
  7107  109B  05F0               	andwf	__tdiv_to_l_@f1,f
  7108  109C  30FF               	movlw	255
  7109  109D  05F1               	andwf	__tdiv_to_l_@f1+1,f
  7110  109E  3000               	movlw	0
  7111  109F  05F2               	andwf	__tdiv_to_l_@f1+2,f
  7112  10A0                     l2843:
  7113  10A0  17F5               	bsf	__tdiv_to_l_@f2+1,7
  7114  10A1  30FF               	movlw	255
  7115  10A2  05F4               	andwf	__tdiv_to_l_@f2,f
  7116  10A3  30FF               	movlw	255
  7117  10A4  05F5               	andwf	__tdiv_to_l_@f2+1,f
  7118  10A5  3000               	movlw	0
  7119  10A6  05F6               	andwf	__tdiv_to_l_@f2+2,f
  7120  10A7  3000               	movlw	0
  7121  10A8  00A3               	movwf	__tdiv_to_l_@quot+3
  7122  10A9  3000               	movlw	0
  7123  10AA  00A2               	movwf	__tdiv_to_l_@quot+2
  7124  10AB  3000               	movlw	0
  7125  10AC  00A1               	movwf	__tdiv_to_l_@quot+1
  7126  10AD  3000               	movlw	0
  7127  10AE  00A0               	movwf	__tdiv_to_l_@quot
  7128  10AF                     l2845:
  7129  10AF  307F               	movlw	127
  7130  10B0  02A5               	subwf	__tdiv_to_l_@exp1,f
  7131  10B1                     l2847:
  7132  10B1  3098               	movlw	152
  7133  10B2  0724               	addwf	__tdiv_to_l_@cntr,w
  7134  10B3  00F8               	movwf	??__tdiv_to_l_
  7135  10B4  0878               	movf	??__tdiv_to_l_,w
  7136  10B5  02A5               	subwf	__tdiv_to_l_@exp1,f
  7137  10B6  3018               	movlw	24
  7138  10B7  00F8               	movwf	??__tdiv_to_l_
  7139  10B8  0878               	movf	??__tdiv_to_l_,w
  7140  10B9  00A4               	movwf	__tdiv_to_l_@cntr
  7141  10BA                     l2849:
  7142  10BA  3001               	movlw	1
  7143  10BB  00F8               	movwf	??__tdiv_to_l_
  7144  10BC                     u4315:
  7145  10BC  1003               	clrc
  7146  10BD  0DA0               	rlf	__tdiv_to_l_@quot,f
  7147  10BE  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7148  10BF  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7149  10C0  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7150  10C1  0BF8               	decfsz	??__tdiv_to_l_,f
  7151  10C2  28BC               	goto	u4315
  7152  10C3                     l2851:
  7153  10C3  0876               	movf	__tdiv_to_l_@f2+2,w
  7154  10C4  0272               	subwf	__tdiv_to_l_@f1+2,w
  7155  10C5  1D03               	skipz
  7156  10C6  28CD               	goto	u4325
  7157  10C7  0875               	movf	__tdiv_to_l_@f2+1,w
  7158  10C8  0271               	subwf	__tdiv_to_l_@f1+1,w
  7159  10C9  1D03               	skipz
  7160  10CA  28CD               	goto	u4325
  7161  10CB  0874               	movf	__tdiv_to_l_@f2,w
  7162  10CC  0270               	subwf	__tdiv_to_l_@f1,w
  7163  10CD                     u4325:
  7164  10CD  1C03               	skipc
  7165  10CE  28D0               	goto	u4321
  7166  10CF  28D1               	goto	u4320
  7167  10D0                     u4321:
  7168  10D0  28DC               	goto	l2857
  7169  10D1                     u4320:
  7170  10D1                     l2853:
  7171  10D1  0874               	movf	__tdiv_to_l_@f2,w
  7172  10D2  02F0               	subwf	__tdiv_to_l_@f1,f
  7173  10D3  0875               	movf	__tdiv_to_l_@f2+1,w
  7174  10D4  1C03               	skipc
  7175  10D5  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  7176  10D6  02F1               	subwf	__tdiv_to_l_@f1+1,f
  7177  10D7  0876               	movf	__tdiv_to_l_@f2+2,w
  7178  10D8  1C03               	skipc
  7179  10D9  0A76               	incf	__tdiv_to_l_@f2+2,w
  7180  10DA  02F2               	subwf	__tdiv_to_l_@f1+2,f
  7181  10DB                     l2855:
  7182  10DB  1420               	bsf	__tdiv_to_l_@quot,0
  7183  10DC                     l2857:
  7184  10DC  3001               	movlw	1
  7185  10DD                     u4335:
  7186  10DD  1003               	clrc
  7187  10DE  0DF0               	rlf	__tdiv_to_l_@f1,f
  7188  10DF  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  7189  10E0  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  7190  10E1  3EFF               	addlw	-1
  7191  10E2  1D03               	skipz
  7192  10E3  28DD               	goto	u4335
  7193  10E4                     l2859:
  7194  10E4  3001               	movlw	1
  7195  10E5  02A4               	subwf	__tdiv_to_l_@cntr,f
  7196  10E6  1D03               	btfss	3,2
  7197  10E7  28E9               	goto	u4341
  7198  10E8  28EA               	goto	u4340
  7199  10E9                     u4341:
  7200  10E9  28BA               	goto	l2849
  7201  10EA                     u4340:
  7202  10EA                     l593:
  7203  10EA  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7204  10EB  28ED               	goto	u4351
  7205  10EC  28EE               	goto	u4350
  7206  10ED                     u4351:
  7207  10ED  2908               	goto	l2869
  7208  10EE                     u4350:
  7209  10EE                     l2861:
  7210  10EE  0825               	movf	__tdiv_to_l_@exp1,w
  7211  10EF  3A80               	xorlw	128
  7212  10F0  3E97               	addlw	151
  7213  10F1  1803               	skipnc
  7214  10F2  28F4               	goto	u4361
  7215  10F3  28F5               	goto	u4360
  7216  10F4                     u4361:
  7217  10F4  28F6               	goto	l2867
  7218  10F5                     u4360:
  7219  10F5  287E               	goto	l2831
  7220  10F6                     l2867:
  7221  10F6  3001               	movlw	1
  7222  10F7                     u4375:
  7223  10F7  1003               	clrc
  7224  10F8  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  7225  10F9  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7226  10FA  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7227  10FB  0CA0               	rrf	__tdiv_to_l_@quot,f
  7228  10FC  3EFF               	addlw	-1
  7229  10FD  1D03               	skipz
  7230  10FE  28F7               	goto	u4375
  7231  10FF  3001               	movlw	1
  7232  1100  00F8               	movwf	??__tdiv_to_l_
  7233  1101  0878               	movf	??__tdiv_to_l_,w
  7234  1102  07A5               	addwf	__tdiv_to_l_@exp1,f
  7235  1103  1D03               	btfss	3,2
  7236  1104  2906               	goto	u4381
  7237  1105  2907               	goto	u4380
  7238  1106                     u4381:
  7239  1106  28F6               	goto	l2867
  7240  1107                     u4380:
  7241  1107  291F               	goto	l2877
  7242  1108                     l2869:
  7243  1108  3018               	movlw	24
  7244  1109  0225               	subwf	__tdiv_to_l_@exp1,w
  7245  110A  1C03               	skipc
  7246  110B  290D               	goto	u4391
  7247  110C  290E               	goto	u4390
  7248  110D                     u4391:
  7249  110D  291A               	goto	l600
  7250  110E                     u4390:
  7251  110E  287E               	goto	l2831
  7252  110F                     l2875:
  7253  110F  3001               	movlw	1
  7254  1110  00F8               	movwf	??__tdiv_to_l_
  7255  1111                     u4405:
  7256  1111  1003               	clrc
  7257  1112  0DA0               	rlf	__tdiv_to_l_@quot,f
  7258  1113  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7259  1114  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7260  1115  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7261  1116  0BF8               	decfsz	??__tdiv_to_l_,f
  7262  1117  2911               	goto	u4405
  7263  1118  3001               	movlw	1
  7264  1119  02A5               	subwf	__tdiv_to_l_@exp1,f
  7265  111A                     l600:
  7266  111A  0825               	movf	__tdiv_to_l_@exp1,w
  7267  111B  1D03               	btfss	3,2
  7268  111C  291E               	goto	u4411
  7269  111D  291F               	goto	u4410
  7270  111E                     u4411:
  7271  111E  290F               	goto	l2875
  7272  111F                     u4410:
  7273  111F                     l2877:
  7274  111F  0823               	movf	__tdiv_to_l_@quot+3,w
  7275  1120  00F3               	movwf	?__tdiv_to_l_+3
  7276  1121  0822               	movf	__tdiv_to_l_@quot+2,w
  7277  1122  00F2               	movwf	?__tdiv_to_l_+2
  7278  1123  0821               	movf	__tdiv_to_l_@quot+1,w
  7279  1124  00F1               	movwf	?__tdiv_to_l_+1
  7280  1125  0820               	movf	__tdiv_to_l_@quot,w
  7281  1126  00F0               	movwf	?__tdiv_to_l_
  7282  1127                     l589:
  7283  1127  0008               	return
  7284  1128                     __end_of__tdiv_to_l_:
  7285                           
  7286                           	psect	text12
  7287  1128                     __ptext12:	
  7288 ;; *************** function __div_to_l_ *****************
  7289 ;; Defined at:
  7290 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  7291 ;; Parameters:    Size  Location     Type
  7292 ;;  f1              4    0[COMMON] unsigned long 
  7293 ;;  f2              4    4[COMMON] unsigned long 
  7294 ;; Auto vars:     Size  Location     Type
  7295 ;;  quot            4    0[BANK0 ] unsigned long 
  7296 ;;  exp1            1    5[BANK0 ] unsigned char 
  7297 ;;  cntr            1    4[BANK0 ] unsigned char 
  7298 ;; Return value:  Size  Location     Type
  7299 ;;                  4    0[COMMON] unsigned long 
  7300 ;; Registers used:
  7301 ;;		wreg, status,2, status,0
  7302 ;; Tracked objects:
  7303 ;;		On entry : 0/0
  7304 ;;		On exit  : 0/0
  7305 ;;		Unchanged: 0/0
  7306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7307 ;;      Params:         8       0       0       0       0
  7308 ;;      Locals:         0       6       0       0       0
  7309 ;;      Temps:          1       0       0       0       0
  7310 ;;      Totals:         9       6       0       0       0
  7311 ;;Total ram usage:       15 bytes
  7312 ;; Hardware stack levels used:    1
  7313 ;; This function calls:
  7314 ;;		Nothing
  7315 ;; This function is called by:
  7316 ;;		_sprintf
  7317 ;; This function uses a non-reentrant model
  7318 ;;
  7319                           
  7320                           
  7321                           ;psect for function __div_to_l_
  7322  1128                     __div_to_l_:
  7323  1128                     l2881:	
  7324                           ;incstack = 0
  7325                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7326                           
  7327  1128  1003               	clrc
  7328  1129  0D72               	rlf	__div_to_l_@f1+2,w
  7329  112A  0D73               	rlf	__div_to_l_@f1+3,w
  7330  112B  00F8               	movwf	??__div_to_l_
  7331  112C  0878               	movf	??__div_to_l_,w
  7332  112D  1283               	bcf	3,5	;RP0=0, select bank0
  7333  112E  1303               	bcf	3,6	;RP1=0, select bank0
  7334  112F  00A5               	movwf	__div_to_l_@exp1
  7335  1130  0825               	movf	__div_to_l_@exp1,w
  7336  1131  1D03               	btfss	3,2
  7337  1132  2934               	goto	u4421
  7338  1133  2935               	goto	u4420
  7339  1134                     u4421:
  7340  1134  293E               	goto	l2887
  7341  1135                     u4420:
  7342  1135                     l2883:
  7343  1135  3000               	movlw	0
  7344  1136  00F3               	movwf	?__div_to_l_+3
  7345  1137  3000               	movlw	0
  7346  1138  00F2               	movwf	?__div_to_l_+2
  7347  1139  3000               	movlw	0
  7348  113A  00F1               	movwf	?__div_to_l_+1
  7349  113B  3000               	movlw	0
  7350  113C  00F0               	movwf	?__div_to_l_
  7351  113D  29E5               	goto	l542
  7352  113E                     l2887:
  7353  113E  1003               	clrc
  7354  113F  0D76               	rlf	__div_to_l_@f2+2,w
  7355  1140  0D77               	rlf	__div_to_l_@f2+3,w
  7356  1141  00F8               	movwf	??__div_to_l_
  7357  1142  0878               	movf	??__div_to_l_,w
  7358  1143  00A4               	movwf	__div_to_l_@cntr
  7359  1144  0824               	movf	__div_to_l_@cntr,w
  7360  1145  1D03               	btfss	3,2
  7361  1146  2948               	goto	u4431
  7362  1147  2949               	goto	u4430
  7363  1148                     u4431:
  7364  1148  294A               	goto	l543
  7365  1149                     u4430:
  7366  1149  2935               	goto	l2883
  7367  114A                     l543:
  7368  114A  17F2               	bsf	__div_to_l_@f1+2,7
  7369  114B                     l2893:
  7370  114B  30FF               	movlw	255
  7371  114C  05F0               	andwf	__div_to_l_@f1,f
  7372  114D  30FF               	movlw	255
  7373  114E  05F1               	andwf	__div_to_l_@f1+1,f
  7374  114F  30FF               	movlw	255
  7375  1150  05F2               	andwf	__div_to_l_@f1+2,f
  7376  1151  3000               	movlw	0
  7377  1152  05F3               	andwf	__div_to_l_@f1+3,f
  7378  1153                     l2895:
  7379  1153  17F6               	bsf	__div_to_l_@f2+2,7
  7380  1154  30FF               	movlw	255
  7381  1155  05F4               	andwf	__div_to_l_@f2,f
  7382  1156  30FF               	movlw	255
  7383  1157  05F5               	andwf	__div_to_l_@f2+1,f
  7384  1158  30FF               	movlw	255
  7385  1159  05F6               	andwf	__div_to_l_@f2+2,f
  7386  115A  3000               	movlw	0
  7387  115B  05F7               	andwf	__div_to_l_@f2+3,f
  7388  115C  3000               	movlw	0
  7389  115D  00A3               	movwf	__div_to_l_@quot+3
  7390  115E  3000               	movlw	0
  7391  115F  00A2               	movwf	__div_to_l_@quot+2
  7392  1160  3000               	movlw	0
  7393  1161  00A1               	movwf	__div_to_l_@quot+1
  7394  1162  3000               	movlw	0
  7395  1163  00A0               	movwf	__div_to_l_@quot
  7396  1164                     l2897:
  7397  1164  307F               	movlw	127
  7398  1165  02A5               	subwf	__div_to_l_@exp1,f
  7399  1166                     l2899:
  7400  1166  30A0               	movlw	160
  7401  1167  0724               	addwf	__div_to_l_@cntr,w
  7402  1168  00F8               	movwf	??__div_to_l_
  7403  1169  0878               	movf	??__div_to_l_,w
  7404  116A  02A5               	subwf	__div_to_l_@exp1,f
  7405  116B  3020               	movlw	32
  7406  116C  00F8               	movwf	??__div_to_l_
  7407  116D  0878               	movf	??__div_to_l_,w
  7408  116E  00A4               	movwf	__div_to_l_@cntr
  7409  116F                     l2901:
  7410  116F  3001               	movlw	1
  7411  1170  00F8               	movwf	??__div_to_l_
  7412  1171                     u4445:
  7413  1171  1003               	clrc
  7414  1172  0DA0               	rlf	__div_to_l_@quot,f
  7415  1173  0DA1               	rlf	__div_to_l_@quot+1,f
  7416  1174  0DA2               	rlf	__div_to_l_@quot+2,f
  7417  1175  0DA3               	rlf	__div_to_l_@quot+3,f
  7418  1176  0BF8               	decfsz	??__div_to_l_,f
  7419  1177  2971               	goto	u4445
  7420  1178                     l2903:
  7421  1178  0877               	movf	__div_to_l_@f2+3,w
  7422  1179  0273               	subwf	__div_to_l_@f1+3,w
  7423  117A  1D03               	skipz
  7424  117B  2986               	goto	u4455
  7425  117C  0876               	movf	__div_to_l_@f2+2,w
  7426  117D  0272               	subwf	__div_to_l_@f1+2,w
  7427  117E  1D03               	skipz
  7428  117F  2986               	goto	u4455
  7429  1180  0875               	movf	__div_to_l_@f2+1,w
  7430  1181  0271               	subwf	__div_to_l_@f1+1,w
  7431  1182  1D03               	skipz
  7432  1183  2986               	goto	u4455
  7433  1184  0874               	movf	__div_to_l_@f2,w
  7434  1185  0270               	subwf	__div_to_l_@f1,w
  7435  1186                     u4455:
  7436  1186  1C03               	skipc
  7437  1187  2989               	goto	u4451
  7438  1188  298A               	goto	u4450
  7439  1189                     u4451:
  7440  1189  2999               	goto	l2909
  7441  118A                     u4450:
  7442  118A                     l2905:
  7443  118A  0874               	movf	__div_to_l_@f2,w
  7444  118B  02F0               	subwf	__div_to_l_@f1,f
  7445  118C  0875               	movf	__div_to_l_@f2+1,w
  7446  118D  1C03               	skipc
  7447  118E  0F75               	incfsz	__div_to_l_@f2+1,w
  7448  118F  02F1               	subwf	__div_to_l_@f1+1,f
  7449  1190  0876               	movf	__div_to_l_@f2+2,w
  7450  1191  1C03               	skipc
  7451  1192  0F76               	incfsz	__div_to_l_@f2+2,w
  7452  1193  02F2               	subwf	__div_to_l_@f1+2,f
  7453  1194  0877               	movf	__div_to_l_@f2+3,w
  7454  1195  1C03               	skipc
  7455  1196  0F77               	incfsz	__div_to_l_@f2+3,w
  7456  1197  02F3               	subwf	__div_to_l_@f1+3,f
  7457  1198                     l2907:
  7458  1198  1420               	bsf	__div_to_l_@quot,0
  7459  1199                     l2909:
  7460  1199  3001               	movlw	1
  7461  119A  00F8               	movwf	??__div_to_l_
  7462  119B                     u4465:
  7463  119B  1003               	clrc
  7464  119C  0DF0               	rlf	__div_to_l_@f1,f
  7465  119D  0DF1               	rlf	__div_to_l_@f1+1,f
  7466  119E  0DF2               	rlf	__div_to_l_@f1+2,f
  7467  119F  0DF3               	rlf	__div_to_l_@f1+3,f
  7468  11A0  0BF8               	decfsz	??__div_to_l_,f
  7469  11A1  299B               	goto	u4465
  7470  11A2                     l2911:
  7471  11A2  3001               	movlw	1
  7472  11A3  02A4               	subwf	__div_to_l_@cntr,f
  7473  11A4  1D03               	btfss	3,2
  7474  11A5  29A7               	goto	u4471
  7475  11A6  29A8               	goto	u4470
  7476  11A7                     u4471:
  7477  11A7  296F               	goto	l2901
  7478  11A8                     u4470:
  7479  11A8                     l546:
  7480  11A8  1FA5               	btfss	__div_to_l_@exp1,7
  7481  11A9  29AB               	goto	u4481
  7482  11AA  29AC               	goto	u4480
  7483  11AB                     u4481:
  7484  11AB  29C6               	goto	l2921
  7485  11AC                     u4480:
  7486  11AC                     l2913:
  7487  11AC  0825               	movf	__div_to_l_@exp1,w
  7488  11AD  3A80               	xorlw	128
  7489  11AE  3E9F               	addlw	159
  7490  11AF  1803               	skipnc
  7491  11B0  29B2               	goto	u4491
  7492  11B1  29B3               	goto	u4490
  7493  11B2                     u4491:
  7494  11B2  29B4               	goto	l2919
  7495  11B3                     u4490:
  7496  11B3  2935               	goto	l2883
  7497  11B4                     l2919:
  7498  11B4  3001               	movlw	1
  7499  11B5                     u4505:
  7500  11B5  1003               	clrc
  7501  11B6  0CA3               	rrf	__div_to_l_@quot+3,f
  7502  11B7  0CA2               	rrf	__div_to_l_@quot+2,f
  7503  11B8  0CA1               	rrf	__div_to_l_@quot+1,f
  7504  11B9  0CA0               	rrf	__div_to_l_@quot,f
  7505  11BA  3EFF               	addlw	-1
  7506  11BB  1D03               	skipz
  7507  11BC  29B5               	goto	u4505
  7508  11BD  3001               	movlw	1
  7509  11BE  00F8               	movwf	??__div_to_l_
  7510  11BF  0878               	movf	??__div_to_l_,w
  7511  11C0  07A5               	addwf	__div_to_l_@exp1,f
  7512  11C1  1D03               	btfss	3,2
  7513  11C2  29C4               	goto	u4511
  7514  11C3  29C5               	goto	u4510
  7515  11C4                     u4511:
  7516  11C4  29B4               	goto	l2919
  7517  11C5                     u4510:
  7518  11C5  29DD               	goto	l2929
  7519  11C6                     l2921:
  7520  11C6  3020               	movlw	32
  7521  11C7  0225               	subwf	__div_to_l_@exp1,w
  7522  11C8  1C03               	skipc
  7523  11C9  29CB               	goto	u4521
  7524  11CA  29CC               	goto	u4520
  7525  11CB                     u4521:
  7526  11CB  29D8               	goto	l553
  7527  11CC                     u4520:
  7528  11CC  2935               	goto	l2883
  7529  11CD                     l2927:
  7530  11CD  3001               	movlw	1
  7531  11CE  00F8               	movwf	??__div_to_l_
  7532  11CF                     u4535:
  7533  11CF  1003               	clrc
  7534  11D0  0DA0               	rlf	__div_to_l_@quot,f
  7535  11D1  0DA1               	rlf	__div_to_l_@quot+1,f
  7536  11D2  0DA2               	rlf	__div_to_l_@quot+2,f
  7537  11D3  0DA3               	rlf	__div_to_l_@quot+3,f
  7538  11D4  0BF8               	decfsz	??__div_to_l_,f
  7539  11D5  29CF               	goto	u4535
  7540  11D6  3001               	movlw	1
  7541  11D7  02A5               	subwf	__div_to_l_@exp1,f
  7542  11D8                     l553:
  7543  11D8  0825               	movf	__div_to_l_@exp1,w
  7544  11D9  1D03               	btfss	3,2
  7545  11DA  29DC               	goto	u4541
  7546  11DB  29DD               	goto	u4540
  7547  11DC                     u4541:
  7548  11DC  29CD               	goto	l2927
  7549  11DD                     u4540:
  7550  11DD                     l2929:
  7551  11DD  0823               	movf	__div_to_l_@quot+3,w
  7552  11DE  00F3               	movwf	?__div_to_l_+3
  7553  11DF  0822               	movf	__div_to_l_@quot+2,w
  7554  11E0  00F2               	movwf	?__div_to_l_+2
  7555  11E1  0821               	movf	__div_to_l_@quot+1,w
  7556  11E2  00F1               	movwf	?__div_to_l_+1
  7557  11E3  0820               	movf	__div_to_l_@quot,w
  7558  11E4  00F0               	movwf	?__div_to_l_
  7559  11E5                     l542:
  7560  11E5  0008               	return
  7561  11E6                     __end_of__div_to_l_:
  7562                           
  7563                           	psect	text13
  7564  1F46                     __ptext13:	
  7565 ;; *************** function ___xxtofl *****************
  7566 ;; Defined at:
  7567 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7568 ;; Parameters:    Size  Location     Type
  7569 ;;  sign            1    wreg     unsigned char 
  7570 ;;  val             4    0[COMMON] long 
  7571 ;; Auto vars:     Size  Location     Type
  7572 ;;  sign            1    8[COMMON] unsigned char 
  7573 ;;  arg             4   10[COMMON] unsigned long 
  7574 ;;  exp             1    9[COMMON] unsigned char 
  7575 ;; Return value:  Size  Location     Type
  7576 ;;                  4    0[COMMON] unsigned char 
  7577 ;; Registers used:
  7578 ;;		wreg, status,2, status,0
  7579 ;; Tracked objects:
  7580 ;;		On entry : 0/0
  7581 ;;		On exit  : 0/0
  7582 ;;		Unchanged: 0/0
  7583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7584 ;;      Params:         4       0       0       0       0
  7585 ;;      Locals:         6       0       0       0       0
  7586 ;;      Temps:          4       0       0       0       0
  7587 ;;      Totals:        14       0       0       0       0
  7588 ;;Total ram usage:       14 bytes
  7589 ;; Hardware stack levels used:    1
  7590 ;; This function calls:
  7591 ;;		Nothing
  7592 ;; This function is called by:
  7593 ;;		_main
  7594 ;;		_sprintf
  7595 ;; This function uses a non-reentrant model
  7596 ;;
  7597                           
  7598                           
  7599                           ;psect for function ___xxtofl
  7600  1F46                     ___xxtofl:
  7601                           
  7602                           ;incstack = 0
  7603                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7604                           ;___xxtofl@sign stored from wreg
  7605  1F46  00F8               	movwf	___xxtofl@sign
  7606  1F47                     l3073:
  7607  1F47  0878               	movf	___xxtofl@sign,w
  7608  1F48  1903               	btfsc	3,2
  7609  1F49  2F4B               	goto	u4931
  7610  1F4A  2F4C               	goto	u4930
  7611  1F4B                     u4931:
  7612  1F4B  2F60               	goto	l3079
  7613  1F4C                     u4930:
  7614  1F4C                     l3075:
  7615  1F4C  1FF3               	btfss	___xxtofl@val+3,7
  7616  1F4D  2F4F               	goto	u4941
  7617  1F4E  2F50               	goto	u4940
  7618  1F4F                     u4941:
  7619  1F4F  2F60               	goto	l3079
  7620  1F50                     u4940:
  7621  1F50                     l3077:
  7622  1F50  0970               	comf	___xxtofl@val,w
  7623  1F51  00FA               	movwf	___xxtofl@arg
  7624  1F52  0971               	comf	___xxtofl@val+1,w
  7625  1F53  00FB               	movwf	___xxtofl@arg+1
  7626  1F54  0972               	comf	___xxtofl@val+2,w
  7627  1F55  00FC               	movwf	___xxtofl@arg+2
  7628  1F56  0973               	comf	___xxtofl@val+3,w
  7629  1F57  00FD               	movwf	___xxtofl@arg+3
  7630  1F58  0AFA               	incf	___xxtofl@arg,f
  7631  1F59  1903               	skipnz
  7632  1F5A  0AFB               	incf	___xxtofl@arg+1,f
  7633  1F5B  1903               	skipnz
  7634  1F5C  0AFC               	incf	___xxtofl@arg+2,f
  7635  1F5D  1903               	skipnz
  7636  1F5E  0AFD               	incf	___xxtofl@arg+3,f
  7637  1F5F  2F68               	goto	l839
  7638  1F60                     l3079:
  7639  1F60  0873               	movf	___xxtofl@val+3,w
  7640  1F61  00FD               	movwf	___xxtofl@arg+3
  7641  1F62  0872               	movf	___xxtofl@val+2,w
  7642  1F63  00FC               	movwf	___xxtofl@arg+2
  7643  1F64  0871               	movf	___xxtofl@val+1,w
  7644  1F65  00FB               	movwf	___xxtofl@arg+1
  7645  1F66  0870               	movf	___xxtofl@val,w
  7646  1F67  00FA               	movwf	___xxtofl@arg
  7647  1F68                     l839:
  7648  1F68  0873               	movf	___xxtofl@val+3,w
  7649  1F69  0472               	iorwf	___xxtofl@val+2,w
  7650  1F6A  0471               	iorwf	___xxtofl@val+1,w
  7651  1F6B  0470               	iorwf	___xxtofl@val,w
  7652  1F6C  1D03               	skipz
  7653  1F6D  2F6F               	goto	u4951
  7654  1F6E  2F70               	goto	u4950
  7655  1F6F                     u4951:
  7656  1F6F  2F79               	goto	l3085
  7657  1F70                     u4950:
  7658  1F70                     l3081:
  7659  1F70  3000               	movlw	0
  7660  1F71  00F3               	movwf	?___xxtofl+3
  7661  1F72  3000               	movlw	0
  7662  1F73  00F2               	movwf	?___xxtofl+2
  7663  1F74  3000               	movlw	0
  7664  1F75  00F1               	movwf	?___xxtofl+1
  7665  1F76  3000               	movlw	0
  7666  1F77  00F0               	movwf	?___xxtofl
  7667  1F78  2FFF               	goto	l841
  7668  1F79                     l3085:
  7669  1F79  3096               	movlw	150
  7670  1F7A  00F4               	movwf	??___xxtofl
  7671  1F7B  0874               	movf	??___xxtofl,w
  7672  1F7C  00F9               	movwf	___xxtofl@exp
  7673  1F7D  2F8B               	goto	l3089
  7674  1F7E                     l3087:
  7675  1F7E  3001               	movlw	1
  7676  1F7F  00F4               	movwf	??___xxtofl
  7677  1F80  0874               	movf	??___xxtofl,w
  7678  1F81  07F9               	addwf	___xxtofl@exp,f
  7679  1F82  3001               	movlw	1
  7680  1F83                     u4965:
  7681  1F83  1003               	clrc
  7682  1F84  0CFD               	rrf	___xxtofl@arg+3,f
  7683  1F85  0CFC               	rrf	___xxtofl@arg+2,f
  7684  1F86  0CFB               	rrf	___xxtofl@arg+1,f
  7685  1F87  0CFA               	rrf	___xxtofl@arg,f
  7686  1F88  3EFF               	addlw	-1
  7687  1F89  1D03               	skipz
  7688  1F8A  2F83               	goto	u4965
  7689  1F8B                     l3089:
  7690  1F8B  30FE               	movlw	254
  7691  1F8C  057D               	andwf	___xxtofl@arg+3,w
  7692  1F8D  1D03               	btfss	3,2
  7693  1F8E  2F90               	goto	u4971
  7694  1F8F  2F91               	goto	u4970
  7695  1F90                     u4971:
  7696  1F90  2F7E               	goto	l3087
  7697  1F91                     u4970:
  7698  1F91  2FAD               	goto	l845
  7699  1F92                     l3091:
  7700  1F92  3001               	movlw	1
  7701  1F93  00F4               	movwf	??___xxtofl
  7702  1F94  0874               	movf	??___xxtofl,w
  7703  1F95  07F9               	addwf	___xxtofl@exp,f
  7704  1F96                     l3093:
  7705  1F96  3001               	movlw	1
  7706  1F97  07FA               	addwf	___xxtofl@arg,f
  7707  1F98  3000               	movlw	0
  7708  1F99  1803               	skipnc
  7709  1F9A  3001               	movlw	1
  7710  1F9B  07FB               	addwf	___xxtofl@arg+1,f
  7711  1F9C  3000               	movlw	0
  7712  1F9D  1803               	skipnc
  7713  1F9E  3001               	movlw	1
  7714  1F9F  07FC               	addwf	___xxtofl@arg+2,f
  7715  1FA0  3000               	movlw	0
  7716  1FA1  1803               	skipnc
  7717  1FA2  3001               	movlw	1
  7718  1FA3  07FD               	addwf	___xxtofl@arg+3,f
  7719  1FA4                     l3095:
  7720  1FA4  3001               	movlw	1
  7721  1FA5                     u4985:
  7722  1FA5  1003               	clrc
  7723  1FA6  0CFD               	rrf	___xxtofl@arg+3,f
  7724  1FA7  0CFC               	rrf	___xxtofl@arg+2,f
  7725  1FA8  0CFB               	rrf	___xxtofl@arg+1,f
  7726  1FA9  0CFA               	rrf	___xxtofl@arg,f
  7727  1FAA  3EFF               	addlw	-1
  7728  1FAB  1D03               	skipz
  7729  1FAC  2FA5               	goto	u4985
  7730  1FAD                     l845:
  7731  1FAD  30FF               	movlw	255
  7732  1FAE  057D               	andwf	___xxtofl@arg+3,w
  7733  1FAF  1D03               	btfss	3,2
  7734  1FB0  2FB2               	goto	u4991
  7735  1FB1  2FB3               	goto	u4990
  7736  1FB2                     u4991:
  7737  1FB2  2F92               	goto	l3091
  7738  1FB3                     u4990:
  7739  1FB3  2FBF               	goto	l3099
  7740  1FB4                     l3097:
  7741  1FB4  3001               	movlw	1
  7742  1FB5  02F9               	subwf	___xxtofl@exp,f
  7743  1FB6  3001               	movlw	1
  7744  1FB7  00F4               	movwf	??___xxtofl
  7745  1FB8                     u5005:
  7746  1FB8  1003               	clrc
  7747  1FB9  0DFA               	rlf	___xxtofl@arg,f
  7748  1FBA  0DFB               	rlf	___xxtofl@arg+1,f
  7749  1FBB  0DFC               	rlf	___xxtofl@arg+2,f
  7750  1FBC  0DFD               	rlf	___xxtofl@arg+3,f
  7751  1FBD  0BF4               	decfsz	??___xxtofl,f
  7752  1FBE  2FB8               	goto	u5005
  7753  1FBF                     l3099:
  7754  1FBF  1BFC               	btfsc	___xxtofl@arg+2,7
  7755  1FC0  2FC2               	goto	u5011
  7756  1FC1  2FC3               	goto	u5010
  7757  1FC2                     u5011:
  7758  1FC2  2FC9               	goto	l852
  7759  1FC3                     u5010:
  7760  1FC3                     l3101:
  7761  1FC3  3002               	movlw	2
  7762  1FC4  0279               	subwf	___xxtofl@exp,w
  7763  1FC5  1803               	skipnc
  7764  1FC6  2FC8               	goto	u5021
  7765  1FC7  2FC9               	goto	u5020
  7766  1FC8                     u5021:
  7767  1FC8  2FB4               	goto	l3097
  7768  1FC9                     u5020:
  7769  1FC9                     l852:
  7770  1FC9  1879               	btfsc	___xxtofl@exp,0
  7771  1FCA  2FCC               	goto	u5031
  7772  1FCB  2FCD               	goto	u5030
  7773  1FCC                     u5031:
  7774  1FCC  2FD5               	goto	l853
  7775  1FCD                     u5030:
  7776  1FCD                     l3103:
  7777  1FCD  30FF               	movlw	255
  7778  1FCE  05FA               	andwf	___xxtofl@arg,f
  7779  1FCF  30FF               	movlw	255
  7780  1FD0  05FB               	andwf	___xxtofl@arg+1,f
  7781  1FD1  307F               	movlw	127
  7782  1FD2  05FC               	andwf	___xxtofl@arg+2,f
  7783  1FD3  30FF               	movlw	255
  7784  1FD4  05FD               	andwf	___xxtofl@arg+3,f
  7785  1FD5                     l853:
  7786  1FD5  1003               	clrc
  7787  1FD6  0CF9               	rrf	___xxtofl@exp,f
  7788  1FD7                     l3105:
  7789  1FD7  0879               	movf	___xxtofl@exp,w
  7790  1FD8  00F4               	movwf	??___xxtofl
  7791  1FD9  01F5               	clrf	??___xxtofl+1
  7792  1FDA  01F6               	clrf	??___xxtofl+2
  7793  1FDB  01F7               	clrf	??___xxtofl+3
  7794  1FDC  3018               	movlw	24
  7795  1FDD                     u5045:
  7796  1FDD  1003               	clrc
  7797  1FDE  0DF4               	rlf	??___xxtofl,f
  7798  1FDF  0DF5               	rlf	??___xxtofl+1,f
  7799  1FE0  0DF6               	rlf	??___xxtofl+2,f
  7800  1FE1  0DF7               	rlf	??___xxtofl+3,f
  7801  1FE2                     u5040:
  7802  1FE2  3EFF               	addlw	-1
  7803  1FE3  1D03               	skipz
  7804  1FE4  2FDD               	goto	u5045
  7805  1FE5  0874               	movf	??___xxtofl,w
  7806  1FE6  04FA               	iorwf	___xxtofl@arg,f
  7807  1FE7  0875               	movf	??___xxtofl+1,w
  7808  1FE8  04FB               	iorwf	___xxtofl@arg+1,f
  7809  1FE9  0876               	movf	??___xxtofl+2,w
  7810  1FEA  04FC               	iorwf	___xxtofl@arg+2,f
  7811  1FEB  0877               	movf	??___xxtofl+3,w
  7812  1FEC  04FD               	iorwf	___xxtofl@arg+3,f
  7813  1FED                     l3107:
  7814  1FED  0878               	movf	___xxtofl@sign,w
  7815  1FEE  1903               	btfsc	3,2
  7816  1FEF  2FF1               	goto	u5051
  7817  1FF0  2FF2               	goto	u5050
  7818  1FF1                     u5051:
  7819  1FF1  2FF7               	goto	l3113
  7820  1FF2                     u5050:
  7821  1FF2                     l3109:
  7822  1FF2  1FF3               	btfss	___xxtofl@val+3,7
  7823  1FF3  2FF5               	goto	u5061
  7824  1FF4  2FF6               	goto	u5060
  7825  1FF5                     u5061:
  7826  1FF5  2FF7               	goto	l3113
  7827  1FF6                     u5060:
  7828  1FF6                     l3111:
  7829  1FF6  17FD               	bsf	___xxtofl@arg+3,7
  7830  1FF7                     l3113:
  7831  1FF7  087D               	movf	___xxtofl@arg+3,w
  7832  1FF8  00F3               	movwf	?___xxtofl+3
  7833  1FF9  087C               	movf	___xxtofl@arg+2,w
  7834  1FFA  00F2               	movwf	?___xxtofl+2
  7835  1FFB  087B               	movf	___xxtofl@arg+1,w
  7836  1FFC  00F1               	movwf	?___xxtofl+1
  7837  1FFD  087A               	movf	___xxtofl@arg,w
  7838  1FFE  00F0               	movwf	?___xxtofl
  7839  1FFF                     l841:
  7840  1FFF  0008               	return
  7841  2000                     __end_of___xxtofl:
  7842                           
  7843                           	psect	text14
  7844  1C5C                     __ptext14:	
  7845 ;; *************** function ___wmul *****************
  7846 ;; Defined at:
  7847 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  7848 ;; Parameters:    Size  Location     Type
  7849 ;;  multiplier      2    0[COMMON] unsigned int 
  7850 ;;  multiplicand    2    2[COMMON] unsigned int 
  7851 ;; Auto vars:     Size  Location     Type
  7852 ;;  product         2    4[COMMON] unsigned int 
  7853 ;; Return value:  Size  Location     Type
  7854 ;;                  2    0[COMMON] unsigned int 
  7855 ;; Registers used:
  7856 ;;		wreg, status,2, status,0
  7857 ;; Tracked objects:
  7858 ;;		On entry : 0/0
  7859 ;;		On exit  : 0/0
  7860 ;;		Unchanged: 0/0
  7861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7862 ;;      Params:         4       0       0       0       0
  7863 ;;      Locals:         2       0       0       0       0
  7864 ;;      Temps:          0       0       0       0       0
  7865 ;;      Totals:         6       0       0       0       0
  7866 ;;Total ram usage:        6 bytes
  7867 ;; Hardware stack levels used:    1
  7868 ;; This function calls:
  7869 ;;		Nothing
  7870 ;; This function is called by:
  7871 ;;		_sprintf
  7872 ;; This function uses a non-reentrant model
  7873 ;;
  7874                           
  7875                           
  7876                           ;psect for function ___wmul
  7877  1C5C                     ___wmul:
  7878  1C5C                     l2933:	
  7879                           ;incstack = 0
  7880                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7881                           
  7882  1C5C  01F4               	clrf	___wmul@product
  7883  1C5D  01F5               	clrf	___wmul@product+1
  7884  1C5E                     l2935:
  7885  1C5E  1C70               	btfss	___wmul@multiplier,0
  7886  1C5F  2C61               	goto	u4551
  7887  1C60  2C62               	goto	u4550
  7888  1C61                     u4551:
  7889  1C61  2C68               	goto	l372
  7890  1C62                     u4550:
  7891  1C62                     l2937:
  7892  1C62  0872               	movf	___wmul@multiplicand,w
  7893  1C63  07F4               	addwf	___wmul@product,f
  7894  1C64  1803               	skipnc
  7895  1C65  0AF5               	incf	___wmul@product+1,f
  7896  1C66  0873               	movf	___wmul@multiplicand+1,w
  7897  1C67  07F5               	addwf	___wmul@product+1,f
  7898  1C68                     l372:
  7899  1C68  3001               	movlw	1
  7900  1C69                     u4565:
  7901  1C69  1003               	clrc
  7902  1C6A  0DF2               	rlf	___wmul@multiplicand,f
  7903  1C6B  0DF3               	rlf	___wmul@multiplicand+1,f
  7904  1C6C  3EFF               	addlw	-1
  7905  1C6D  1D03               	skipz
  7906  1C6E  2C69               	goto	u4565
  7907  1C6F                     l2939:
  7908  1C6F  3001               	movlw	1
  7909  1C70                     u4575:
  7910  1C70  1003               	clrc
  7911  1C71  0CF1               	rrf	___wmul@multiplier+1,f
  7912  1C72  0CF0               	rrf	___wmul@multiplier,f
  7913  1C73  3EFF               	addlw	-1
  7914  1C74  1D03               	skipz
  7915  1C75  2C70               	goto	u4575
  7916  1C76                     l2941:
  7917  1C76  0870               	movf	___wmul@multiplier,w
  7918  1C77  0471               	iorwf	___wmul@multiplier+1,w
  7919  1C78  1D03               	btfss	3,2
  7920  1C79  2C7B               	goto	u4581
  7921  1C7A  2C7C               	goto	u4580
  7922  1C7B                     u4581:
  7923  1C7B  2C5E               	goto	l2935
  7924  1C7C                     u4580:
  7925  1C7C                     l2943:
  7926  1C7C  0875               	movf	___wmul@product+1,w
  7927  1C7D  00F1               	movwf	?___wmul+1
  7928  1C7E  0874               	movf	___wmul@product,w
  7929  1C7F  00F0               	movwf	?___wmul
  7930  1C80                     l374:
  7931  1C80  0008               	return
  7932  1C81                     __end_of___wmul:
  7933                           
  7934                           	psect	text15
  7935  1DF7                     __ptext15:	
  7936 ;; *************** function ___llmod *****************
  7937 ;; Defined at:
  7938 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  7939 ;; Parameters:    Size  Location     Type
  7940 ;;  divisor         4    0[COMMON] unsigned long 
  7941 ;;  dividend        4    4[COMMON] unsigned long 
  7942 ;; Auto vars:     Size  Location     Type
  7943 ;;  counter         1    9[COMMON] unsigned char 
  7944 ;; Return value:  Size  Location     Type
  7945 ;;                  4    0[COMMON] unsigned long 
  7946 ;; Registers used:
  7947 ;;		wreg, status,2, status,0
  7948 ;; Tracked objects:
  7949 ;;		On entry : 0/0
  7950 ;;		On exit  : 0/0
  7951 ;;		Unchanged: 0/0
  7952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7953 ;;      Params:         8       0       0       0       0
  7954 ;;      Locals:         1       0       0       0       0
  7955 ;;      Temps:          1       0       0       0       0
  7956 ;;      Totals:        10       0       0       0       0
  7957 ;;Total ram usage:       10 bytes
  7958 ;; Hardware stack levels used:    1
  7959 ;; This function calls:
  7960 ;;		Nothing
  7961 ;; This function is called by:
  7962 ;;		_sprintf
  7963 ;; This function uses a non-reentrant model
  7964 ;;
  7965                           
  7966                           
  7967                           ;psect for function ___llmod
  7968  1DF7                     ___llmod:
  7969  1DF7                     l3047:	
  7970                           ;incstack = 0
  7971                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7972                           
  7973  1DF7  0873               	movf	___llmod@divisor+3,w
  7974  1DF8  0472               	iorwf	___llmod@divisor+2,w
  7975  1DF9  0471               	iorwf	___llmod@divisor+1,w
  7976  1DFA  0470               	iorwf	___llmod@divisor,w
  7977  1DFB  1903               	skipnz
  7978  1DFC  2DFE               	goto	u4871
  7979  1DFD  2DFF               	goto	u4870
  7980  1DFE                     u4871:
  7981  1DFE  2E42               	goto	l3063
  7982  1DFF                     u4870:
  7983  1DFF                     l3049:
  7984  1DFF  01F9               	clrf	___llmod@counter
  7985  1E00  0AF9               	incf	___llmod@counter,f
  7986  1E01  2E0F               	goto	l3053
  7987  1E02                     l3051:
  7988  1E02  3001               	movlw	1
  7989  1E03  00F8               	movwf	??___llmod
  7990  1E04                     u4885:
  7991  1E04  1003               	clrc
  7992  1E05  0DF0               	rlf	___llmod@divisor,f
  7993  1E06  0DF1               	rlf	___llmod@divisor+1,f
  7994  1E07  0DF2               	rlf	___llmod@divisor+2,f
  7995  1E08  0DF3               	rlf	___llmod@divisor+3,f
  7996  1E09  0BF8               	decfsz	??___llmod,f
  7997  1E0A  2E04               	goto	u4885
  7998  1E0B  3001               	movlw	1
  7999  1E0C  00F8               	movwf	??___llmod
  8000  1E0D  0878               	movf	??___llmod,w
  8001  1E0E  07F9               	addwf	___llmod@counter,f
  8002  1E0F                     l3053:
  8003  1E0F  1FF3               	btfss	___llmod@divisor+3,7
  8004  1E10  2E12               	goto	u4891
  8005  1E11  2E13               	goto	u4890
  8006  1E12                     u4891:
  8007  1E12  2E02               	goto	l3051
  8008  1E13                     u4890:
  8009  1E13                     l3055:
  8010  1E13  0873               	movf	___llmod@divisor+3,w
  8011  1E14  0277               	subwf	___llmod@dividend+3,w
  8012  1E15  1D03               	skipz
  8013  1E16  2E21               	goto	u4905
  8014  1E17  0872               	movf	___llmod@divisor+2,w
  8015  1E18  0276               	subwf	___llmod@dividend+2,w
  8016  1E19  1D03               	skipz
  8017  1E1A  2E21               	goto	u4905
  8018  1E1B  0871               	movf	___llmod@divisor+1,w
  8019  1E1C  0275               	subwf	___llmod@dividend+1,w
  8020  1E1D  1D03               	skipz
  8021  1E1E  2E21               	goto	u4905
  8022  1E1F  0870               	movf	___llmod@divisor,w
  8023  1E20  0274               	subwf	___llmod@dividend,w
  8024  1E21                     u4905:
  8025  1E21  1C03               	skipc
  8026  1E22  2E24               	goto	u4901
  8027  1E23  2E25               	goto	u4900
  8028  1E24                     u4901:
  8029  1E24  2E33               	goto	l3059
  8030  1E25                     u4900:
  8031  1E25                     l3057:
  8032  1E25  0870               	movf	___llmod@divisor,w
  8033  1E26  02F4               	subwf	___llmod@dividend,f
  8034  1E27  0871               	movf	___llmod@divisor+1,w
  8035  1E28  1C03               	skipc
  8036  1E29  0F71               	incfsz	___llmod@divisor+1,w
  8037  1E2A  02F5               	subwf	___llmod@dividend+1,f
  8038  1E2B  0872               	movf	___llmod@divisor+2,w
  8039  1E2C  1C03               	skipc
  8040  1E2D  0F72               	incfsz	___llmod@divisor+2,w
  8041  1E2E  02F6               	subwf	___llmod@dividend+2,f
  8042  1E2F  0873               	movf	___llmod@divisor+3,w
  8043  1E30  1C03               	skipc
  8044  1E31  0F73               	incfsz	___llmod@divisor+3,w
  8045  1E32  02F7               	subwf	___llmod@dividend+3,f
  8046  1E33                     l3059:
  8047  1E33  3001               	movlw	1
  8048  1E34                     u4915:
  8049  1E34  1003               	clrc
  8050  1E35  0CF3               	rrf	___llmod@divisor+3,f
  8051  1E36  0CF2               	rrf	___llmod@divisor+2,f
  8052  1E37  0CF1               	rrf	___llmod@divisor+1,f
  8053  1E38  0CF0               	rrf	___llmod@divisor,f
  8054  1E39  3EFF               	addlw	-1
  8055  1E3A  1D03               	skipz
  8056  1E3B  2E34               	goto	u4915
  8057  1E3C                     l3061:
  8058  1E3C  3001               	movlw	1
  8059  1E3D  02F9               	subwf	___llmod@counter,f
  8060  1E3E  1D03               	btfss	3,2
  8061  1E3F  2E41               	goto	u4921
  8062  1E40  2E42               	goto	u4920
  8063  1E41                     u4921:
  8064  1E41  2E13               	goto	l3055
  8065  1E42                     u4920:
  8066  1E42                     l3063:
  8067  1E42  0877               	movf	___llmod@dividend+3,w
  8068  1E43  00F3               	movwf	?___llmod+3
  8069  1E44  0876               	movf	___llmod@dividend+2,w
  8070  1E45  00F2               	movwf	?___llmod+2
  8071  1E46  0875               	movf	___llmod@dividend+1,w
  8072  1E47  00F1               	movwf	?___llmod+1
  8073  1E48  0874               	movf	___llmod@dividend,w
  8074  1E49  00F0               	movwf	?___llmod
  8075  1E4A                     l628:
  8076  1E4A  0008               	return
  8077  1E4B                     __end_of___llmod:
  8078                           
  8079                           	psect	text16
  8080  1005                     __ptext16:	
  8081 ;; *************** function ___lldiv *****************
  8082 ;; Defined at:
  8083 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  8084 ;; Parameters:    Size  Location     Type
  8085 ;;  divisor         4    0[COMMON] unsigned long 
  8086 ;;  dividend        4    4[COMMON] unsigned long 
  8087 ;; Auto vars:     Size  Location     Type
  8088 ;;  quotient        4    9[COMMON] unsigned long 
  8089 ;;  counter         1   13[COMMON] unsigned char 
  8090 ;; Return value:  Size  Location     Type
  8091 ;;                  4    0[COMMON] unsigned long 
  8092 ;; Registers used:
  8093 ;;		wreg, status,2, status,0
  8094 ;; Tracked objects:
  8095 ;;		On entry : 0/0
  8096 ;;		On exit  : 0/0
  8097 ;;		Unchanged: 0/0
  8098 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8099 ;;      Params:         8       0       0       0       0
  8100 ;;      Locals:         5       0       0       0       0
  8101 ;;      Temps:          1       0       0       0       0
  8102 ;;      Totals:        14       0       0       0       0
  8103 ;;Total ram usage:       14 bytes
  8104 ;; Hardware stack levels used:    1
  8105 ;; This function calls:
  8106 ;;		Nothing
  8107 ;; This function is called by:
  8108 ;;		_sprintf
  8109 ;; This function uses a non-reentrant model
  8110 ;;
  8111                           
  8112                           
  8113                           ;psect for function ___lldiv
  8114  1005                     ___lldiv:
  8115  1005                     l2947:	
  8116                           ;incstack = 0
  8117                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  8118                           
  8119  1005  3000               	movlw	0
  8120  1006  00FC               	movwf	___lldiv@quotient+3
  8121  1007  3000               	movlw	0
  8122  1008  00FB               	movwf	___lldiv@quotient+2
  8123  1009  3000               	movlw	0
  8124  100A  00FA               	movwf	___lldiv@quotient+1
  8125  100B  3000               	movlw	0
  8126  100C  00F9               	movwf	___lldiv@quotient
  8127  100D  0873               	movf	___lldiv@divisor+3,w
  8128  100E  0472               	iorwf	___lldiv@divisor+2,w
  8129  100F  0471               	iorwf	___lldiv@divisor+1,w
  8130  1010  0470               	iorwf	___lldiv@divisor,w
  8131  1011  1903               	skipnz
  8132  1012  2814               	goto	u4591
  8133  1013  2815               	goto	u4590
  8134  1014                     u4591:
  8135  1014  2862               	goto	l2967
  8136  1015                     u4590:
  8137  1015                     l2949:
  8138  1015  01FD               	clrf	___lldiv@counter
  8139  1016  0AFD               	incf	___lldiv@counter,f
  8140  1017  2825               	goto	l2953
  8141  1018                     l2951:
  8142  1018  3001               	movlw	1
  8143  1019  00F8               	movwf	??___lldiv
  8144  101A                     u4605:
  8145  101A  1003               	clrc
  8146  101B  0DF0               	rlf	___lldiv@divisor,f
  8147  101C  0DF1               	rlf	___lldiv@divisor+1,f
  8148  101D  0DF2               	rlf	___lldiv@divisor+2,f
  8149  101E  0DF3               	rlf	___lldiv@divisor+3,f
  8150  101F  0BF8               	decfsz	??___lldiv,f
  8151  1020  281A               	goto	u4605
  8152  1021  3001               	movlw	1
  8153  1022  00F8               	movwf	??___lldiv
  8154  1023  0878               	movf	??___lldiv,w
  8155  1024  07FD               	addwf	___lldiv@counter,f
  8156  1025                     l2953:
  8157  1025  1FF3               	btfss	___lldiv@divisor+3,7
  8158  1026  2828               	goto	u4611
  8159  1027  2829               	goto	u4610
  8160  1028                     u4611:
  8161  1028  2818               	goto	l2951
  8162  1029                     u4610:
  8163  1029                     l2955:
  8164  1029  3001               	movlw	1
  8165  102A  00F8               	movwf	??___lldiv
  8166  102B                     u4625:
  8167  102B  1003               	clrc
  8168  102C  0DF9               	rlf	___lldiv@quotient,f
  8169  102D  0DFA               	rlf	___lldiv@quotient+1,f
  8170  102E  0DFB               	rlf	___lldiv@quotient+2,f
  8171  102F  0DFC               	rlf	___lldiv@quotient+3,f
  8172  1030  0BF8               	decfsz	??___lldiv,f
  8173  1031  282B               	goto	u4625
  8174  1032                     l2957:
  8175  1032  0873               	movf	___lldiv@divisor+3,w
  8176  1033  0277               	subwf	___lldiv@dividend+3,w
  8177  1034  1D03               	skipz
  8178  1035  2840               	goto	u4635
  8179  1036  0872               	movf	___lldiv@divisor+2,w
  8180  1037  0276               	subwf	___lldiv@dividend+2,w
  8181  1038  1D03               	skipz
  8182  1039  2840               	goto	u4635
  8183  103A  0871               	movf	___lldiv@divisor+1,w
  8184  103B  0275               	subwf	___lldiv@dividend+1,w
  8185  103C  1D03               	skipz
  8186  103D  2840               	goto	u4635
  8187  103E  0870               	movf	___lldiv@divisor,w
  8188  103F  0274               	subwf	___lldiv@dividend,w
  8189  1040                     u4635:
  8190  1040  1C03               	skipc
  8191  1041  2843               	goto	u4631
  8192  1042  2844               	goto	u4630
  8193  1043                     u4631:
  8194  1043  2853               	goto	l2963
  8195  1044                     u4630:
  8196  1044                     l2959:
  8197  1044  0870               	movf	___lldiv@divisor,w
  8198  1045  02F4               	subwf	___lldiv@dividend,f
  8199  1046  0871               	movf	___lldiv@divisor+1,w
  8200  1047  1C03               	skipc
  8201  1048  0F71               	incfsz	___lldiv@divisor+1,w
  8202  1049  02F5               	subwf	___lldiv@dividend+1,f
  8203  104A  0872               	movf	___lldiv@divisor+2,w
  8204  104B  1C03               	skipc
  8205  104C  0F72               	incfsz	___lldiv@divisor+2,w
  8206  104D  02F6               	subwf	___lldiv@dividend+2,f
  8207  104E  0873               	movf	___lldiv@divisor+3,w
  8208  104F  1C03               	skipc
  8209  1050  0F73               	incfsz	___lldiv@divisor+3,w
  8210  1051  02F7               	subwf	___lldiv@dividend+3,f
  8211  1052                     l2961:
  8212  1052  1479               	bsf	___lldiv@quotient,0
  8213  1053                     l2963:
  8214  1053  3001               	movlw	1
  8215  1054                     u4645:
  8216  1054  1003               	clrc
  8217  1055  0CF3               	rrf	___lldiv@divisor+3,f
  8218  1056  0CF2               	rrf	___lldiv@divisor+2,f
  8219  1057  0CF1               	rrf	___lldiv@divisor+1,f
  8220  1058  0CF0               	rrf	___lldiv@divisor,f
  8221  1059  3EFF               	addlw	-1
  8222  105A  1D03               	skipz
  8223  105B  2854               	goto	u4645
  8224  105C                     l2965:
  8225  105C  3001               	movlw	1
  8226  105D  02FD               	subwf	___lldiv@counter,f
  8227  105E  1D03               	btfss	3,2
  8228  105F  2861               	goto	u4651
  8229  1060  2862               	goto	u4650
  8230  1061                     u4651:
  8231  1061  2829               	goto	l2955
  8232  1062                     u4650:
  8233  1062                     l2967:
  8234  1062  087C               	movf	___lldiv@quotient+3,w
  8235  1063  00F3               	movwf	?___lldiv+3
  8236  1064  087B               	movf	___lldiv@quotient+2,w
  8237  1065  00F2               	movwf	?___lldiv+2
  8238  1066  087A               	movf	___lldiv@quotient+1,w
  8239  1067  00F1               	movwf	?___lldiv+1
  8240  1068  0879               	movf	___lldiv@quotient,w
  8241  1069  00F0               	movwf	?___lldiv
  8242  106A                     l408:
  8243  106A  0008               	return
  8244  106B                     __end_of___lldiv:
  8245                           
  8246                           	psect	text17
  8247  08C4                     __ptext17:	
  8248 ;; *************** function ___fltol *****************
  8249 ;; Defined at:
  8250 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  8251 ;; Parameters:    Size  Location     Type
  8252 ;;  f1              4   49[BANK0 ] unsigned long 
  8253 ;; Auto vars:     Size  Location     Type
  8254 ;;  exp1            1   59[BANK0 ] unsigned char 
  8255 ;;  sign1           1   58[BANK0 ] unsigned char 
  8256 ;; Return value:  Size  Location     Type
  8257 ;;                  4   49[BANK0 ] long 
  8258 ;; Registers used:
  8259 ;;		wreg, status,2, status,0
  8260 ;; Tracked objects:
  8261 ;;		On entry : 0/0
  8262 ;;		On exit  : 0/0
  8263 ;;		Unchanged: 0/0
  8264 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8265 ;;      Params:         0       4       0       0       0
  8266 ;;      Locals:         0       2       0       0       0
  8267 ;;      Temps:          0       5       0       0       0
  8268 ;;      Totals:         0      11       0       0       0
  8269 ;;Total ram usage:       11 bytes
  8270 ;; Hardware stack levels used:    1
  8271 ;; This function calls:
  8272 ;;		Nothing
  8273 ;; This function is called by:
  8274 ;;		_sprintf
  8275 ;; This function uses a non-reentrant model
  8276 ;;
  8277                           
  8278                           
  8279                           ;psect for function ___fltol
  8280  08C4                     ___fltol:
  8281  08C4                     l3011:	
  8282                           ;incstack = 0
  8283                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8284                           
  8285  08C4  1003               	clrc
  8286  08C5  1283               	bcf	3,5	;RP0=0, select bank0
  8287  08C6  1303               	bcf	3,6	;RP1=0, select bank0
  8288  08C7  0D53               	rlf	___fltol@f1+2,w
  8289  08C8  0D54               	rlf	___fltol@f1+3,w
  8290  08C9  00D5               	movwf	??___fltol
  8291  08CA  0855               	movf	??___fltol,w
  8292  08CB  00DB               	movwf	___fltol@exp1
  8293  08CC  085B               	movf	___fltol@exp1,w
  8294  08CD  1D03               	btfss	3,2
  8295  08CE  28D0               	goto	u4771
  8296  08CF  28D1               	goto	u4770
  8297  08D0                     u4771:
  8298  08D0  28DA               	goto	l3017
  8299  08D1                     u4770:
  8300  08D1                     l3013:
  8301  08D1  3000               	movlw	0
  8302  08D2  00D4               	movwf	?___fltol+3
  8303  08D3  3000               	movlw	0
  8304  08D4  00D3               	movwf	?___fltol+2
  8305  08D5  3000               	movlw	0
  8306  08D6  00D2               	movwf	?___fltol+1
  8307  08D7  3000               	movlw	0
  8308  08D8  00D1               	movwf	?___fltol
  8309  08D9  293F               	goto	l575
  8310  08DA                     l3017:
  8311  08DA  0851               	movf	___fltol@f1,w
  8312  08DB  00D5               	movwf	??___fltol
  8313  08DC  0852               	movf	___fltol@f1+1,w
  8314  08DD  00D6               	movwf	??___fltol+1
  8315  08DE  0853               	movf	___fltol@f1+2,w
  8316  08DF  00D7               	movwf	??___fltol+2
  8317  08E0  0854               	movf	___fltol@f1+3,w
  8318  08E1  00D8               	movwf	??___fltol+3
  8319  08E2  301F               	movlw	31
  8320  08E3                     u4785:
  8321  08E3  1003               	clrc
  8322  08E4  0CD8               	rrf	??___fltol+3,f
  8323  08E5  0CD7               	rrf	??___fltol+2,f
  8324  08E6  0CD6               	rrf	??___fltol+1,f
  8325  08E7  0CD5               	rrf	??___fltol,f
  8326  08E8                     u4780:
  8327  08E8  3EFF               	addlw	-1
  8328  08E9  1D03               	skipz
  8329  08EA  28E3               	goto	u4785
  8330  08EB  0855               	movf	??___fltol,w
  8331  08EC  00D9               	movwf	??___fltol+4
  8332  08ED  0859               	movf	??___fltol+4,w
  8333  08EE  00DA               	movwf	___fltol@sign1
  8334  08EF                     l3019:
  8335  08EF  17D3               	bsf	___fltol@f1+2,7
  8336  08F0                     l3021:
  8337  08F0  30FF               	movlw	255
  8338  08F1  05D1               	andwf	___fltol@f1,f
  8339  08F2  30FF               	movlw	255
  8340  08F3  05D2               	andwf	___fltol@f1+1,f
  8341  08F4  30FF               	movlw	255
  8342  08F5  05D3               	andwf	___fltol@f1+2,f
  8343  08F6  3000               	movlw	0
  8344  08F7  05D4               	andwf	___fltol@f1+3,f
  8345  08F8                     l3023:
  8346  08F8  3096               	movlw	150
  8347  08F9  02DB               	subwf	___fltol@exp1,f
  8348  08FA                     l3025:
  8349  08FA  1FDB               	btfss	___fltol@exp1,7
  8350  08FB  28FD               	goto	u4791
  8351  08FC  28FE               	goto	u4790
  8352  08FD                     u4791:
  8353  08FD  2918               	goto	l3035
  8354  08FE                     u4790:
  8355  08FE                     l3027:
  8356  08FE  085B               	movf	___fltol@exp1,w
  8357  08FF  3A80               	xorlw	128
  8358  0900  3E97               	addlw	151
  8359  0901  1803               	skipnc
  8360  0902  2904               	goto	u4801
  8361  0903  2905               	goto	u4800
  8362  0904                     u4801:
  8363  0904  2906               	goto	l3033
  8364  0905                     u4800:
  8365  0905  28D1               	goto	l3013
  8366  0906                     l3033:
  8367  0906  3001               	movlw	1
  8368  0907                     u4815:
  8369  0907  1003               	clrc
  8370  0908  0CD4               	rrf	___fltol@f1+3,f
  8371  0909  0CD3               	rrf	___fltol@f1+2,f
  8372  090A  0CD2               	rrf	___fltol@f1+1,f
  8373  090B  0CD1               	rrf	___fltol@f1,f
  8374  090C  3EFF               	addlw	-1
  8375  090D  1D03               	skipz
  8376  090E  2907               	goto	u4815
  8377  090F  3001               	movlw	1
  8378  0910  00D5               	movwf	??___fltol
  8379  0911  0855               	movf	??___fltol,w
  8380  0912  07DB               	addwf	___fltol@exp1,f
  8381  0913  1D03               	btfss	3,2
  8382  0914  2916               	goto	u4821
  8383  0915  2917               	goto	u4820
  8384  0916                     u4821:
  8385  0916  2906               	goto	l3033
  8386  0917                     u4820:
  8387  0917  292F               	goto	l3043
  8388  0918                     l3035:
  8389  0918  3020               	movlw	32
  8390  0919  025B               	subwf	___fltol@exp1,w
  8391  091A  1C03               	skipc
  8392  091B  291D               	goto	u4831
  8393  091C  291E               	goto	u4830
  8394  091D                     u4831:
  8395  091D  292A               	goto	l582
  8396  091E                     u4830:
  8397  091E  28D1               	goto	l3013
  8398  091F                     l3041:
  8399  091F  3001               	movlw	1
  8400  0920  00D5               	movwf	??___fltol
  8401  0921                     u4845:
  8402  0921  1003               	clrc
  8403  0922  0DD1               	rlf	___fltol@f1,f
  8404  0923  0DD2               	rlf	___fltol@f1+1,f
  8405  0924  0DD3               	rlf	___fltol@f1+2,f
  8406  0925  0DD4               	rlf	___fltol@f1+3,f
  8407  0926  0BD5               	decfsz	??___fltol,f
  8408  0927  2921               	goto	u4845
  8409  0928  3001               	movlw	1
  8410  0929  02DB               	subwf	___fltol@exp1,f
  8411  092A                     l582:
  8412  092A  085B               	movf	___fltol@exp1,w
  8413  092B  1D03               	btfss	3,2
  8414  092C  292E               	goto	u4851
  8415  092D  292F               	goto	u4850
  8416  092E                     u4851:
  8417  092E  291F               	goto	l3041
  8418  092F                     u4850:
  8419  092F                     l3043:
  8420  092F  085A               	movf	___fltol@sign1,w
  8421  0930  1903               	btfsc	3,2
  8422  0931  2933               	goto	u4861
  8423  0932  2934               	goto	u4860
  8424  0933                     u4861:
  8425  0933  293F               	goto	l585
  8426  0934                     u4860:
  8427  0934                     l3045:
  8428  0934  09D1               	comf	___fltol@f1,f
  8429  0935  09D2               	comf	___fltol@f1+1,f
  8430  0936  09D3               	comf	___fltol@f1+2,f
  8431  0937  09D4               	comf	___fltol@f1+3,f
  8432  0938  0AD1               	incf	___fltol@f1,f
  8433  0939  1903               	skipnz
  8434  093A  0AD2               	incf	___fltol@f1+1,f
  8435  093B  1903               	skipnz
  8436  093C  0AD3               	incf	___fltol@f1+2,f
  8437  093D  1903               	skipnz
  8438  093E  0AD4               	incf	___fltol@f1+3,f
  8439  093F                     l585:
  8440  093F                     l575:
  8441  093F  0008               	return
  8442  0940                     __end_of___fltol:
  8443                           
  8444                           	psect	text18
  8445  1C38                     __ptext18:	
  8446 ;; *************** function ___flsub *****************
  8447 ;; Defined at:
  8448 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8449 ;; Parameters:    Size  Location     Type
  8450 ;;  a               4   70[BANK0 ] long 
  8451 ;;  b               4   74[BANK0 ] long 
  8452 ;; Auto vars:     Size  Location     Type
  8453 ;;		None
  8454 ;; Return value:  Size  Location     Type
  8455 ;;                  4   70[BANK0 ] long 
  8456 ;; Registers used:
  8457 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8458 ;; Tracked objects:
  8459 ;;		On entry : 0/0
  8460 ;;		On exit  : 0/0
  8461 ;;		Unchanged: 0/0
  8462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8463 ;;      Params:         0       8       0       0       0
  8464 ;;      Locals:         0       0       0       0       0
  8465 ;;      Temps:          0       0       0       0       0
  8466 ;;      Totals:         0       8       0       0       0
  8467 ;;Total ram usage:        8 bytes
  8468 ;; Hardware stack levels used:    1
  8469 ;; Hardware stack levels required when called:    1
  8470 ;; This function calls:
  8471 ;;		___fladd
  8472 ;; This function is called by:
  8473 ;;		_sprintf
  8474 ;; This function uses a non-reentrant model
  8475 ;;
  8476                           
  8477                           
  8478                           ;psect for function ___flsub
  8479  1C38                     ___flsub:
  8480  1C38                     l3067:	
  8481                           ;incstack = 0
  8482                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8483                           
  8484  1C38  3080               	movlw	128
  8485  1C39  1283               	bcf	3,5	;RP0=0, select bank0
  8486  1C3A  1303               	bcf	3,6	;RP1=0, select bank0
  8487  1C3B  06E9               	xorwf	___flsub@a+3,f
  8488  1C3C                     l3069:
  8489  1C3C  086D               	movf	___flsub@b+3,w
  8490  1C3D  00D5               	movwf	___fladd@b+3
  8491  1C3E  086C               	movf	___flsub@b+2,w
  8492  1C3F  00D4               	movwf	___fladd@b+2
  8493  1C40  086B               	movf	___flsub@b+1,w
  8494  1C41  00D3               	movwf	___fladd@b+1
  8495  1C42  086A               	movf	___flsub@b,w
  8496  1C43  00D2               	movwf	___fladd@b
  8497  1C44  0869               	movf	___flsub@a+3,w
  8498  1C45  00D9               	movwf	___fladd@a+3
  8499  1C46  0868               	movf	___flsub@a+2,w
  8500  1C47  00D8               	movwf	___fladd@a+2
  8501  1C48  0867               	movf	___flsub@a+1,w
  8502  1C49  00D7               	movwf	___fladd@a+1
  8503  1C4A  0866               	movf	___flsub@a,w
  8504  1C4B  00D6               	movwf	___fladd@a
  8505  1C4C  160A  118A  2578  160A  158A  	fcall	___fladd
  8506  1C51  1283               	bcf	3,5	;RP0=0, select bank0
  8507  1C52  1303               	bcf	3,6	;RP1=0, select bank0
  8508  1C53  0855               	movf	?___fladd+3,w
  8509  1C54  00E9               	movwf	?___flsub+3
  8510  1C55  0854               	movf	?___fladd+2,w
  8511  1C56  00E8               	movwf	?___flsub+2
  8512  1C57  0853               	movf	?___fladd+1,w
  8513  1C58  00E7               	movwf	?___flsub+1
  8514  1C59  0852               	movf	?___fladd,w
  8515  1C5A  00E6               	movwf	?___flsub
  8516  1C5B                     l745:
  8517  1C5B  0008               	return
  8518  1C5C                     __end_of___flsub:
  8519                           
  8520                           	psect	text19
  8521  1578                     __ptext19:	
  8522 ;; *************** function ___fladd *****************
  8523 ;; Defined at:
  8524 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8525 ;; Parameters:    Size  Location     Type
  8526 ;;  b               4   50[BANK0 ] long 
  8527 ;;  a               4   54[BANK0 ] long 
  8528 ;; Auto vars:     Size  Location     Type
  8529 ;;  grs             1   69[BANK0 ] unsigned char 
  8530 ;;  bexp            1   68[BANK0 ] unsigned char 
  8531 ;;  aexp            1   67[BANK0 ] unsigned char 
  8532 ;;  signs           1   66[BANK0 ] unsigned char 
  8533 ;; Return value:  Size  Location     Type
  8534 ;;                  4   50[BANK0 ] unsigned char 
  8535 ;; Registers used:
  8536 ;;		wreg, status,2, status,0, btemp+1
  8537 ;; Tracked objects:
  8538 ;;		On entry : 0/0
  8539 ;;		On exit  : 0/0
  8540 ;;		Unchanged: 0/0
  8541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8542 ;;      Params:         0       8       0       0       0
  8543 ;;      Locals:         0       4       0       0       0
  8544 ;;      Temps:          0       8       0       0       0
  8545 ;;      Totals:         0      20       0       0       0
  8546 ;;Total ram usage:       20 bytes
  8547 ;; Hardware stack levels used:    1
  8548 ;; This function calls:
  8549 ;;		Nothing
  8550 ;; This function is called by:
  8551 ;;		_sprintf
  8552 ;;		___flsub
  8553 ;; This function uses a non-reentrant model
  8554 ;;
  8555                           
  8556                           
  8557                           ;psect for function ___fladd
  8558  1578                     ___fladd:
  8559  1578                     l2401:	
  8560                           ;incstack = 0
  8561                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8562                           
  8563  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8564  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8565  157A  0855               	movf	___fladd@b+3,w
  8566  157B  3980               	andlw	128
  8567  157C  00DA               	movwf	??___fladd
  8568  157D  085A               	movf	??___fladd,w
  8569  157E  00E2               	movwf	___fladd@signs
  8570  157F                     l2403:
  8571  157F  0855               	movf	___fladd@b+3,w
  8572  1580  00DA               	movwf	??___fladd
  8573  1581  075A               	addwf	??___fladd,w
  8574  1582  00DB               	movwf	??___fladd+1
  8575  1583  085B               	movf	??___fladd+1,w
  8576  1584  00E4               	movwf	___fladd@bexp
  8577  1585                     l2405:
  8578  1585  1FD4               	btfss	___fladd@b+2,7
  8579  1586  2D88               	goto	u3181
  8580  1587  2D89               	goto	u3180
  8581  1588                     u3181:
  8582  1588  2D8A               	goto	l2409
  8583  1589                     u3180:
  8584  1589                     l2407:
  8585  1589  1464               	bsf	___fladd@bexp,0
  8586  158A                     l2409:
  8587  158A  0864               	movf	___fladd@bexp,w
  8588  158B  1903               	btfsc	3,2
  8589  158C  2D8E               	goto	u3191
  8590  158D  2D8F               	goto	u3190
  8591  158E                     u3191:
  8592  158E  2D9F               	goto	l2419
  8593  158F                     u3190:
  8594  158F                     l2411:
  8595  158F  0A64               	incf	___fladd@bexp,w
  8596  1590  1D03               	btfss	3,2
  8597  1591  2D93               	goto	u3201
  8598  1592  2D94               	goto	u3200
  8599  1593                     u3201:
  8600  1593  2D9C               	goto	l2415
  8601  1594                     u3200:
  8602  1594                     l2413:
  8603  1594  3000               	movlw	0
  8604  1595  00D5               	movwf	___fladd@b+3
  8605  1596  3000               	movlw	0
  8606  1597  00D4               	movwf	___fladd@b+2
  8607  1598  3000               	movlw	0
  8608  1599  00D3               	movwf	___fladd@b+1
  8609  159A  3000               	movlw	0
  8610  159B  00D2               	movwf	___fladd@b
  8611  159C                     l2415:
  8612  159C  17D4               	bsf	___fladd@b+2,7
  8613  159D                     l2417:
  8614  159D  01D5               	clrf	___fladd@b+3
  8615  159E  2DA7               	goto	l2421
  8616  159F                     l2419:
  8617  159F  3000               	movlw	0
  8618  15A0  00D5               	movwf	___fladd@b+3
  8619  15A1  3000               	movlw	0
  8620  15A2  00D4               	movwf	___fladd@b+2
  8621  15A3  3000               	movlw	0
  8622  15A4  00D3               	movwf	___fladd@b+1
  8623  15A5  3000               	movlw	0
  8624  15A6  00D2               	movwf	___fladd@b
  8625  15A7                     l2421:
  8626  15A7  0859               	movf	___fladd@a+3,w
  8627  15A8  3980               	andlw	128
  8628  15A9  00DA               	movwf	??___fladd
  8629  15AA  085A               	movf	??___fladd,w
  8630  15AB  00E3               	movwf	___fladd@aexp
  8631  15AC                     l2423:
  8632  15AC  0863               	movf	___fladd@aexp,w
  8633  15AD  0662               	xorwf	___fladd@signs,w
  8634  15AE  1903               	skipnz
  8635  15AF  2DB1               	goto	u3211
  8636  15B0  2DB2               	goto	u3210
  8637  15B1                     u3211:
  8638  15B1  2DB3               	goto	l2427
  8639  15B2                     u3210:
  8640  15B2                     l2425:
  8641  15B2  1762               	bsf	___fladd@signs,6
  8642  15B3                     l2427:
  8643  15B3  0859               	movf	___fladd@a+3,w
  8644  15B4  00DA               	movwf	??___fladd
  8645  15B5  075A               	addwf	??___fladd,w
  8646  15B6  00DB               	movwf	??___fladd+1
  8647  15B7  085B               	movf	??___fladd+1,w
  8648  15B8  00E3               	movwf	___fladd@aexp
  8649  15B9                     l2429:
  8650  15B9  1FD8               	btfss	___fladd@a+2,7
  8651  15BA  2DBC               	goto	u3221
  8652  15BB  2DBD               	goto	u3220
  8653  15BC                     u3221:
  8654  15BC  2DBE               	goto	l2433
  8655  15BD                     u3220:
  8656  15BD                     l2431:
  8657  15BD  1463               	bsf	___fladd@aexp,0
  8658  15BE                     l2433:
  8659  15BE  0863               	movf	___fladd@aexp,w
  8660  15BF  1903               	btfsc	3,2
  8661  15C0  2DC2               	goto	u3231
  8662  15C1  2DC3               	goto	u3230
  8663  15C2                     u3231:
  8664  15C2  2DD3               	goto	l2443
  8665  15C3                     u3230:
  8666  15C3                     l2435:
  8667  15C3  0A63               	incf	___fladd@aexp,w
  8668  15C4  1D03               	btfss	3,2
  8669  15C5  2DC7               	goto	u3241
  8670  15C6  2DC8               	goto	u3240
  8671  15C7                     u3241:
  8672  15C7  2DD0               	goto	l2439
  8673  15C8                     u3240:
  8674  15C8                     l2437:
  8675  15C8  3000               	movlw	0
  8676  15C9  00D9               	movwf	___fladd@a+3
  8677  15CA  3000               	movlw	0
  8678  15CB  00D8               	movwf	___fladd@a+2
  8679  15CC  3000               	movlw	0
  8680  15CD  00D7               	movwf	___fladd@a+1
  8681  15CE  3000               	movlw	0
  8682  15CF  00D6               	movwf	___fladd@a
  8683  15D0                     l2439:
  8684  15D0  17D8               	bsf	___fladd@a+2,7
  8685  15D1                     l2441:
  8686  15D1  01D9               	clrf	___fladd@a+3
  8687  15D2  2DDB               	goto	l699
  8688  15D3                     l2443:
  8689  15D3  3000               	movlw	0
  8690  15D4  00D9               	movwf	___fladd@a+3
  8691  15D5  3000               	movlw	0
  8692  15D6  00D8               	movwf	___fladd@a+2
  8693  15D7  3000               	movlw	0
  8694  15D8  00D7               	movwf	___fladd@a+1
  8695  15D9  3000               	movlw	0
  8696  15DA  00D6               	movwf	___fladd@a
  8697  15DB                     l699:
  8698  15DB  0864               	movf	___fladd@bexp,w
  8699  15DC  0263               	subwf	___fladd@aexp,w
  8700  15DD  1803               	skipnc
  8701  15DE  2DE0               	goto	u3251
  8702  15DF  2DE1               	goto	u3250
  8703  15E0                     u3251:
  8704  15E0  2E25               	goto	l2479
  8705  15E1                     u3250:
  8706  15E1                     l2445:
  8707  15E1  1F62               	btfss	___fladd@signs,6
  8708  15E2  2DE4               	goto	u3261
  8709  15E3  2DE5               	goto	u3260
  8710  15E4                     u3261:
  8711  15E4  2DE9               	goto	l2449
  8712  15E5                     u3260:
  8713  15E5                     l2447:
  8714  15E5  3080               	movlw	128
  8715  15E6  00DA               	movwf	??___fladd
  8716  15E7  085A               	movf	??___fladd,w
  8717  15E8  06E2               	xorwf	___fladd@signs,f
  8718  15E9                     l2449:
  8719  15E9  0864               	movf	___fladd@bexp,w
  8720  15EA  00DA               	movwf	??___fladd
  8721  15EB  085A               	movf	??___fladd,w
  8722  15EC  00E5               	movwf	___fladd@grs
  8723  15ED                     l2451:
  8724  15ED  0863               	movf	___fladd@aexp,w
  8725  15EE  00DA               	movwf	??___fladd
  8726  15EF  085A               	movf	??___fladd,w
  8727  15F0  00E4               	movwf	___fladd@bexp
  8728  15F1                     l2453:
  8729  15F1  0865               	movf	___fladd@grs,w
  8730  15F2  00DA               	movwf	??___fladd
  8731  15F3  085A               	movf	??___fladd,w
  8732  15F4  00E3               	movwf	___fladd@aexp
  8733  15F5                     l2455:
  8734  15F5  0852               	movf	___fladd@b,w
  8735  15F6  00DA               	movwf	??___fladd
  8736  15F7  085A               	movf	??___fladd,w
  8737  15F8  00E5               	movwf	___fladd@grs
  8738  15F9                     l2457:
  8739  15F9  0856               	movf	___fladd@a,w
  8740  15FA  00DA               	movwf	??___fladd
  8741  15FB  085A               	movf	??___fladd,w
  8742  15FC  00D2               	movwf	___fladd@b
  8743  15FD                     l2459:
  8744  15FD  0865               	movf	___fladd@grs,w
  8745  15FE  00DA               	movwf	??___fladd
  8746  15FF  085A               	movf	??___fladd,w
  8747  1600  00D6               	movwf	___fladd@a
  8748  1601                     l2461:
  8749  1601  0853               	movf	___fladd@b+1,w
  8750  1602  00DA               	movwf	??___fladd
  8751  1603  085A               	movf	??___fladd,w
  8752  1604  00E5               	movwf	___fladd@grs
  8753  1605                     l2463:
  8754  1605  0857               	movf	___fladd@a+1,w
  8755  1606  00DA               	movwf	??___fladd
  8756  1607  085A               	movf	??___fladd,w
  8757  1608  00D3               	movwf	___fladd@b+1
  8758  1609                     l2465:
  8759  1609  0865               	movf	___fladd@grs,w
  8760  160A  00DA               	movwf	??___fladd
  8761  160B  085A               	movf	??___fladd,w
  8762  160C  00D7               	movwf	___fladd@a+1
  8763  160D                     l2467:
  8764  160D  0854               	movf	___fladd@b+2,w
  8765  160E  00DA               	movwf	??___fladd
  8766  160F  085A               	movf	??___fladd,w
  8767  1610  00E5               	movwf	___fladd@grs
  8768  1611                     l2469:
  8769  1611  0858               	movf	___fladd@a+2,w
  8770  1612  00DA               	movwf	??___fladd
  8771  1613  085A               	movf	??___fladd,w
  8772  1614  00D4               	movwf	___fladd@b+2
  8773  1615                     l2471:
  8774  1615  0865               	movf	___fladd@grs,w
  8775  1616  00DA               	movwf	??___fladd
  8776  1617  085A               	movf	??___fladd,w
  8777  1618  00D8               	movwf	___fladd@a+2
  8778  1619                     l2473:
  8779  1619  0855               	movf	___fladd@b+3,w
  8780  161A  00DA               	movwf	??___fladd
  8781  161B  085A               	movf	??___fladd,w
  8782  161C  00E5               	movwf	___fladd@grs
  8783  161D                     l2475:
  8784  161D  0859               	movf	___fladd@a+3,w
  8785  161E  00DA               	movwf	??___fladd
  8786  161F  085A               	movf	??___fladd,w
  8787  1620  00D5               	movwf	___fladd@b+3
  8788  1621                     l2477:
  8789  1621  0865               	movf	___fladd@grs,w
  8790  1622  00DA               	movwf	??___fladd
  8791  1623  085A               	movf	??___fladd,w
  8792  1624  00D9               	movwf	___fladd@a+3
  8793  1625                     l2479:
  8794  1625  01E5               	clrf	___fladd@grs
  8795  1626                     l2481:
  8796  1626  0863               	movf	___fladd@aexp,w
  8797  1627  00DA               	movwf	??___fladd
  8798  1628  01DB               	clrf	??___fladd+1
  8799  1629  085B               	movf	??___fladd+1,w
  8800  162A  00DD               	movwf	??___fladd+3
  8801  162B  0864               	movf	___fladd@bexp,w
  8802  162C  025A               	subwf	??___fladd,w
  8803  162D  00DC               	movwf	??___fladd+2
  8804  162E  1C03               	skipc
  8805  162F  03DD               	decf	??___fladd+3,f
  8806  1630  085D               	movf	??___fladd+3,w
  8807  1631  3A80               	xorlw	128
  8808  1632  00FF               	movwf	btemp+1
  8809  1633  3080               	movlw	128
  8810  1634  027F               	subwf	btemp+1,w
  8811  1635  1D03               	skipz
  8812  1636  2E39               	goto	u3275
  8813  1637  301A               	movlw	26
  8814  1638  025C               	subwf	??___fladd+2,w
  8815  1639                     u3275:
  8816  1639  1C03               	skipc
  8817  163A  2E3C               	goto	u3271
  8818  163B  2E3D               	goto	u3270
  8819  163C                     u3271:
  8820  163C  2E7A               	goto	l2497
  8821  163D                     u3270:
  8822  163D                     l2483:
  8823  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8824  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8825  163F  0855               	movf	___fladd@b+3,w
  8826  1640  0454               	iorwf	___fladd@b+2,w
  8827  1641  0453               	iorwf	___fladd@b+1,w
  8828  1642  0452               	iorwf	___fladd@b,w
  8829  1643  1D03               	skipz
  8830  1644  2E46               	goto	u3281
  8831  1645  2E48               	goto	u3280
  8832  1646                     u3281:
  8833  1646  3001               	movlw	1
  8834  1647  2E49               	goto	u3290
  8835  1648                     u3280:
  8836  1648  3000               	movlw	0
  8837  1649                     u3290:
  8838  1649  00DA               	movwf	??___fladd
  8839  164A  085A               	movf	??___fladd,w
  8840  164B  00E5               	movwf	___fladd@grs
  8841  164C  3000               	movlw	0
  8842  164D  00D5               	movwf	___fladd@b+3
  8843  164E  3000               	movlw	0
  8844  164F  00D4               	movwf	___fladd@b+2
  8845  1650  3000               	movlw	0
  8846  1651  00D3               	movwf	___fladd@b+1
  8847  1652  3000               	movlw	0
  8848  1653  00D2               	movwf	___fladd@b
  8849  1654  0863               	movf	___fladd@aexp,w
  8850  1655  00DA               	movwf	??___fladd
  8851  1656  085A               	movf	??___fladd,w
  8852  1657  00E4               	movwf	___fladd@bexp
  8853  1658  2E82               	goto	l703
  8854  1659                     l705:
  8855  1659  1C65               	btfss	___fladd@grs,0
  8856  165A  2E5C               	goto	u3301
  8857  165B  2E5D               	goto	u3300
  8858  165C                     u3301:
  8859  165C  2E66               	goto	l2487
  8860  165D                     u3300:
  8861  165D                     l2485:
  8862  165D  0865               	movf	___fladd@grs,w
  8863  165E  00DA               	movwf	??___fladd
  8864  165F  1003               	clrc
  8865  1660  0C5A               	rrf	??___fladd,w
  8866  1661  3801               	iorlw	1
  8867  1662  00DB               	movwf	??___fladd+1
  8868  1663  085B               	movf	??___fladd+1,w
  8869  1664  00E5               	movwf	___fladd@grs
  8870  1665  2E68               	goto	l2489
  8871  1666                     l2487:
  8872  1666  1003               	clrc
  8873  1667  0CE5               	rrf	___fladd@grs,f
  8874  1668                     l2489:
  8875  1668  1C52               	btfss	___fladd@b,0
  8876  1669  2E6B               	goto	u3311
  8877  166A  2E6C               	goto	u3310
  8878  166B                     u3311:
  8879  166B  2E6D               	goto	l2493
  8880  166C                     u3310:
  8881  166C                     l2491:
  8882  166C  17E5               	bsf	___fladd@grs,7
  8883  166D                     l2493:
  8884  166D  3001               	movlw	1
  8885  166E  00DA               	movwf	??___fladd
  8886  166F                     u3325:
  8887  166F  0D55               	rlf	___fladd@b+3,w
  8888  1670  0CD5               	rrf	___fladd@b+3,f
  8889  1671  0CD4               	rrf	___fladd@b+2,f
  8890  1672  0CD3               	rrf	___fladd@b+1,f
  8891  1673  0CD2               	rrf	___fladd@b,f
  8892  1674  0BDA               	decfsz	??___fladd& (0+127),f
  8893  1675  2E6F               	goto	u3325
  8894  1676                     l2495:
  8895  1676  3001               	movlw	1
  8896  1677  00DA               	movwf	??___fladd
  8897  1678  085A               	movf	??___fladd,w
  8898  1679  07E4               	addwf	___fladd@bexp,f
  8899  167A                     l2497:
  8900  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8901  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8902  167C  0863               	movf	___fladd@aexp,w
  8903  167D  0264               	subwf	___fladd@bexp,w
  8904  167E  1C03               	skipc
  8905  167F  2E81               	goto	u3331
  8906  1680  2E82               	goto	u3330
  8907  1681                     u3331:
  8908  1681  2E59               	goto	l705
  8909  1682                     u3330:
  8910  1682                     l703:
  8911  1682  1B62               	btfsc	___fladd@signs,6
  8912  1683  2E85               	goto	u3341
  8913  1684  2E86               	goto	u3340
  8914  1685                     u3341:
  8915  1685  2ED1               	goto	l2523
  8916  1686                     u3340:
  8917  1686                     l2499:
  8918  1686  0864               	movf	___fladd@bexp,w
  8919  1687  1D03               	btfss	3,2
  8920  1688  2E8A               	goto	u3351
  8921  1689  2E8B               	goto	u3350
  8922  168A                     u3351:
  8923  168A  2E94               	goto	l2505
  8924  168B                     u3350:
  8925  168B                     l2501:
  8926  168B  3000               	movlw	0
  8927  168C  00D5               	movwf	?___fladd+3
  8928  168D  3000               	movlw	0
  8929  168E  00D4               	movwf	?___fladd+2
  8930  168F  3000               	movlw	0
  8931  1690  00D3               	movwf	?___fladd+1
  8932  1691  3000               	movlw	0
  8933  1692  00D2               	movwf	?___fladd
  8934  1693  2FFF               	goto	l712
  8935  1694                     l2505:
  8936  1694  0856               	movf	___fladd@a,w
  8937  1695  07D2               	addwf	___fladd@b,f
  8938  1696  0857               	movf	___fladd@a+1,w
  8939  1697  1103               	clrz
  8940  1698  1803               	skipnc
  8941  1699  3E01               	addlw	1
  8942  169A  1903               	skipnz
  8943  169B  2E9D               	goto	u3361
  8944  169C  07D3               	addwf	___fladd@b+1,f
  8945  169D                     u3361:
  8946  169D  0858               	movf	___fladd@a+2,w
  8947  169E  1103               	clrz
  8948  169F  1803               	skipnc
  8949  16A0  3E01               	addlw	1
  8950  16A1  1903               	skipnz
  8951  16A2  2EA4               	goto	u3362
  8952  16A3  07D4               	addwf	___fladd@b+2,f
  8953  16A4                     u3362:
  8954  16A4  0859               	movf	___fladd@a+3,w
  8955  16A5  1103               	clrz
  8956  16A6  1803               	skipnc
  8957  16A7  3E01               	addlw	1
  8958  16A8  1903               	skipnz
  8959  16A9  2EAB               	goto	u3363
  8960  16AA  07D5               	addwf	___fladd@b+3,f
  8961  16AB                     u3363:
  8962  16AB                     l2507:
  8963  16AB  1C55               	btfss	___fladd@b+3,0
  8964  16AC  2EAE               	goto	u3371
  8965  16AD  2EAF               	goto	u3370
  8966  16AE                     u3371:
  8967  16AE  2F85               	goto	l2557
  8968  16AF                     u3370:
  8969  16AF                     l2509:
  8970  16AF  1C65               	btfss	___fladd@grs,0
  8971  16B0  2EB2               	goto	u3381
  8972  16B1  2EB3               	goto	u3380
  8973  16B2                     u3381:
  8974  16B2  2EBC               	goto	l2513
  8975  16B3                     u3380:
  8976  16B3                     l2511:
  8977  16B3  0865               	movf	___fladd@grs,w
  8978  16B4  00DA               	movwf	??___fladd
  8979  16B5  1003               	clrc
  8980  16B6  0C5A               	rrf	??___fladd,w
  8981  16B7  3801               	iorlw	1
  8982  16B8  00DB               	movwf	??___fladd+1
  8983  16B9  085B               	movf	??___fladd+1,w
  8984  16BA  00E5               	movwf	___fladd@grs
  8985  16BB  2EBE               	goto	l2515
  8986  16BC                     l2513:
  8987  16BC  1003               	clrc
  8988  16BD  0CE5               	rrf	___fladd@grs,f
  8989  16BE                     l2515:
  8990  16BE  1C52               	btfss	___fladd@b,0
  8991  16BF  2EC1               	goto	u3391
  8992  16C0  2EC2               	goto	u3390
  8993  16C1                     u3391:
  8994  16C1  2EC3               	goto	l2519
  8995  16C2                     u3390:
  8996  16C2                     l2517:
  8997  16C2  17E5               	bsf	___fladd@grs,7
  8998  16C3                     l2519:
  8999  16C3  3001               	movlw	1
  9000  16C4  00DA               	movwf	??___fladd
  9001  16C5                     u3405:
  9002  16C5  0D55               	rlf	___fladd@b+3,w
  9003  16C6  0CD5               	rrf	___fladd@b+3,f
  9004  16C7  0CD4               	rrf	___fladd@b+2,f
  9005  16C8  0CD3               	rrf	___fladd@b+1,f
  9006  16C9  0CD2               	rrf	___fladd@b,f
  9007  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  9008  16CB  2EC5               	goto	u3405
  9009  16CC                     l2521:
  9010  16CC  3001               	movlw	1
  9011  16CD  00DA               	movwf	??___fladd
  9012  16CE  085A               	movf	??___fladd,w
  9013  16CF  07E4               	addwf	___fladd@bexp,f
  9014  16D0  2F85               	goto	l2557
  9015  16D1                     l2523:
  9016  16D1  0855               	movf	___fladd@b+3,w
  9017  16D2  3A80               	xorlw	128
  9018  16D3  00FF               	movwf	btemp+1
  9019  16D4  0859               	movf	___fladd@a+3,w
  9020  16D5  3A80               	xorlw	128
  9021  16D6  027F               	subwf	btemp+1,w
  9022  16D7  1D03               	skipz
  9023  16D8  2EE3               	goto	u3413
  9024  16D9  0858               	movf	___fladd@a+2,w
  9025  16DA  0254               	subwf	___fladd@b+2,w
  9026  16DB  1D03               	skipz
  9027  16DC  2EE3               	goto	u3413
  9028  16DD  0857               	movf	___fladd@a+1,w
  9029  16DE  0253               	subwf	___fladd@b+1,w
  9030  16DF  1D03               	skipz
  9031  16E0  2EE3               	goto	u3413
  9032  16E1  0856               	movf	___fladd@a,w
  9033  16E2  0252               	subwf	___fladd@b,w
  9034  16E3                     u3413:
  9035  16E3  1803               	skipnc
  9036  16E4  2EE6               	goto	u3411
  9037  16E5  2EE7               	goto	u3410
  9038  16E6                     u3411:
  9039  16E6  2F3F               	goto	l2533
  9040  16E7                     u3410:
  9041  16E7                     l2525:
  9042  16E7  30FF               	movlw	255
  9043  16E8  00DA               	movwf	??___fladd
  9044  16E9  30FF               	movlw	255
  9045  16EA  00DB               	movwf	??___fladd+1
  9046  16EB  30FF               	movlw	255
  9047  16EC  00DC               	movwf	??___fladd+2
  9048  16ED  30FF               	movlw	255
  9049  16EE  00DD               	movwf	??___fladd+3
  9050  16EF  0856               	movf	___fladd@a,w
  9051  16F0  00DE               	movwf	??___fladd+4
  9052  16F1  0857               	movf	___fladd@a+1,w
  9053  16F2  00DF               	movwf	??___fladd+5
  9054  16F3  0858               	movf	___fladd@a+2,w
  9055  16F4  00E0               	movwf	??___fladd+6
  9056  16F5  0859               	movf	___fladd@a+3,w
  9057  16F6  00E1               	movwf	??___fladd+7
  9058  16F7  0852               	movf	___fladd@b,w
  9059  16F8  02DE               	subwf	??___fladd+4,f
  9060  16F9  0853               	movf	___fladd@b+1,w
  9061  16FA  1C03               	skipc
  9062  16FB  0F53               	incfsz	___fladd@b+1,w
  9063  16FC  2EFE               	goto	u3421
  9064  16FD  2EFF               	goto	u3422
  9065  16FE                     u3421:
  9066  16FE  02DF               	subwf	??___fladd+5,f
  9067  16FF                     u3422:
  9068  16FF  0854               	movf	___fladd@b+2,w
  9069  1700  1C03               	skipc
  9070  1701  0F54               	incfsz	___fladd@b+2,w
  9071  1702  2F04               	goto	u3423
  9072  1703  2F05               	goto	u3424
  9073  1704                     u3423:
  9074  1704  02E0               	subwf	??___fladd+6,f
  9075  1705                     u3424:
  9076  1705  0855               	movf	___fladd@b+3,w
  9077  1706  1C03               	skipc
  9078  1707  0F55               	incfsz	___fladd@b+3,w
  9079  1708  2F0A               	goto	u3425
  9080  1709  2F0B               	goto	u3426
  9081  170A                     u3425:
  9082  170A  02E1               	subwf	??___fladd+7,f
  9083  170B                     u3426:
  9084  170B  085E               	movf	??___fladd+4,w
  9085  170C  07DA               	addwf	??___fladd,f
  9086  170D  085F               	movf	??___fladd+5,w
  9087  170E  1803               	skipnc
  9088  170F  0F5F               	incfsz	??___fladd+5,w
  9089  1710  2F12               	goto	u3430
  9090  1711  2F13               	goto	u3431
  9091  1712                     u3430:
  9092  1712  07DB               	addwf	??___fladd+1,f
  9093  1713                     u3431:
  9094  1713  0860               	movf	??___fladd+6,w
  9095  1714  1803               	skipnc
  9096  1715  0F60               	incfsz	??___fladd+6,w
  9097  1716  2F18               	goto	u3432
  9098  1717  2F19               	goto	u3433
  9099  1718                     u3432:
  9100  1718  07DC               	addwf	??___fladd+2,f
  9101  1719                     u3433:
  9102  1719  0861               	movf	??___fladd+7,w
  9103  171A  1803               	skipnc
  9104  171B  0A61               	incf	??___fladd+7,w
  9105  171C  07DD               	addwf	??___fladd+3,f
  9106  171D  085D               	movf	??___fladd+3,w
  9107  171E  00D5               	movwf	___fladd@b+3
  9108  171F  085C               	movf	??___fladd+2,w
  9109  1720  00D4               	movwf	___fladd@b+2
  9110  1721  085B               	movf	??___fladd+1,w
  9111  1722  00D3               	movwf	___fladd@b+1
  9112  1723  085A               	movf	??___fladd,w
  9113  1724  00D2               	movwf	___fladd@b
  9114  1725                     l2527:
  9115  1725  3080               	movlw	128
  9116  1726  00DA               	movwf	??___fladd
  9117  1727  085A               	movf	??___fladd,w
  9118  1728  06E2               	xorwf	___fladd@signs,f
  9119  1729  09E5               	comf	___fladd@grs,f
  9120  172A  0AE5               	incf	___fladd@grs,f
  9121  172B                     l2529:
  9122  172B  0865               	movf	___fladd@grs,w
  9123  172C  1D03               	btfss	3,2
  9124  172D  2F2F               	goto	u3441
  9125  172E  2F30               	goto	u3440
  9126  172F                     u3441:
  9127  172F  2F4D               	goto	l720
  9128  1730                     u3440:
  9129  1730                     l2531:
  9130  1730  3001               	movlw	1
  9131  1731  07D2               	addwf	___fladd@b,f
  9132  1732  3000               	movlw	0
  9133  1733  1803               	skipnc
  9134  1734  3001               	movlw	1
  9135  1735  07D3               	addwf	___fladd@b+1,f
  9136  1736  3000               	movlw	0
  9137  1737  1803               	skipnc
  9138  1738  3001               	movlw	1
  9139  1739  07D4               	addwf	___fladd@b+2,f
  9140  173A  3000               	movlw	0
  9141  173B  1803               	skipnc
  9142  173C  3001               	movlw	1
  9143  173D  07D5               	addwf	___fladd@b+3,f
  9144  173E  2F4D               	goto	l720
  9145  173F                     l2533:
  9146  173F  0856               	movf	___fladd@a,w
  9147  1740  02D2               	subwf	___fladd@b,f
  9148  1741  0857               	movf	___fladd@a+1,w
  9149  1742  1C03               	skipc
  9150  1743  0F57               	incfsz	___fladd@a+1,w
  9151  1744  02D3               	subwf	___fladd@b+1,f
  9152  1745  0858               	movf	___fladd@a+2,w
  9153  1746  1C03               	skipc
  9154  1747  0F58               	incfsz	___fladd@a+2,w
  9155  1748  02D4               	subwf	___fladd@b+2,f
  9156  1749  0859               	movf	___fladd@a+3,w
  9157  174A  1C03               	skipc
  9158  174B  0F59               	incfsz	___fladd@a+3,w
  9159  174C  02D5               	subwf	___fladd@b+3,f
  9160  174D                     l720:
  9161  174D  0855               	movf	___fladd@b+3,w
  9162  174E  0454               	iorwf	___fladd@b+2,w
  9163  174F  0453               	iorwf	___fladd@b+1,w
  9164  1750  0452               	iorwf	___fladd@b,w
  9165  1751  1D03               	skipz
  9166  1752  2F54               	goto	u3451
  9167  1753  2F55               	goto	u3450
  9168  1754                     u3451:
  9169  1754  2F81               	goto	l2555
  9170  1755                     u3450:
  9171  1755                     l2535:
  9172  1755  0865               	movf	___fladd@grs,w
  9173  1756  1D03               	btfss	3,2
  9174  1757  2F59               	goto	u3461
  9175  1758  2F5A               	goto	u3460
  9176  1759                     u3461:
  9177  1759  2F81               	goto	l2555
  9178  175A                     u3460:
  9179  175A                     l2537:
  9180  175A  3000               	movlw	0
  9181  175B  00D5               	movwf	?___fladd+3
  9182  175C  3000               	movlw	0
  9183  175D  00D4               	movwf	?___fladd+2
  9184  175E  3000               	movlw	0
  9185  175F  00D3               	movwf	?___fladd+1
  9186  1760  3000               	movlw	0
  9187  1761  00D2               	movwf	?___fladd
  9188  1762  2FFF               	goto	l712
  9189  1763                     l2541:
  9190  1763  3001               	movlw	1
  9191  1764  00DA               	movwf	??___fladd
  9192  1765                     u3475:
  9193  1765  1003               	clrc
  9194  1766  0DD2               	rlf	___fladd@b,f
  9195  1767  0DD3               	rlf	___fladd@b+1,f
  9196  1768  0DD4               	rlf	___fladd@b+2,f
  9197  1769  0DD5               	rlf	___fladd@b+3,f
  9198  176A  0BDA               	decfsz	??___fladd,f
  9199  176B  2F65               	goto	u3475
  9200  176C                     l2543:
  9201  176C  1FE5               	btfss	___fladd@grs,7
  9202  176D  2F6F               	goto	u3481
  9203  176E  2F70               	goto	u3480
  9204  176F                     u3481:
  9205  176F  2F71               	goto	l724
  9206  1770                     u3480:
  9207  1770                     l2545:
  9208  1770  1452               	bsf	___fladd@b,0
  9209  1771                     l724:
  9210  1771  1C65               	btfss	___fladd@grs,0
  9211  1772  2F74               	goto	u3491
  9212  1773  2F75               	goto	u3490
  9213  1774                     u3491:
  9214  1774  2F78               	goto	l2549
  9215  1775                     u3490:
  9216  1775                     l2547:
  9217  1775  1403               	setc
  9218  1776  0DE5               	rlf	___fladd@grs,f
  9219  1777  2F7A               	goto	l2551
  9220  1778                     l2549:
  9221  1778  1003               	clrc
  9222  1779  0DE5               	rlf	___fladd@grs,f
  9223  177A                     l2551:
  9224  177A  0864               	movf	___fladd@bexp,w
  9225  177B  1903               	btfsc	3,2
  9226  177C  2F7E               	goto	u3501
  9227  177D  2F7F               	goto	u3500
  9228  177E                     u3501:
  9229  177E  2F81               	goto	l2555
  9230  177F                     u3500:
  9231  177F                     l2553:
  9232  177F  3001               	movlw	1
  9233  1780  02E4               	subwf	___fladd@bexp,f
  9234  1781                     l2555:
  9235  1781  1FD4               	btfss	___fladd@b+2,7
  9236  1782  2F84               	goto	u3511
  9237  1783  2F85               	goto	u3510
  9238  1784                     u3511:
  9239  1784  2F63               	goto	l2541
  9240  1785                     u3510:
  9241  1785                     l2557:
  9242  1785  01E3               	clrf	___fladd@aexp
  9243  1786                     l2559:
  9244  1786  1FE5               	btfss	___fladd@grs,7
  9245  1787  2F89               	goto	u3521
  9246  1788  2F8A               	goto	u3520
  9247  1789                     u3521:
  9248  1789  2F98               	goto	l2567
  9249  178A                     u3520:
  9250  178A                     l2561:
  9251  178A  0865               	movf	___fladd@grs,w
  9252  178B  397F               	andlw	127
  9253  178C  1903               	btfsc	3,2
  9254  178D  2F8F               	goto	u3531
  9255  178E  2F90               	goto	u3530
  9256  178F                     u3531:
  9257  178F  2F93               	goto	l730
  9258  1790                     u3530:
  9259  1790                     l2563:
  9260  1790  01E3               	clrf	___fladd@aexp
  9261  1791  0AE3               	incf	___fladd@aexp,f
  9262  1792  2F98               	goto	l2567
  9263  1793                     l730:
  9264  1793  1C52               	btfss	___fladd@b,0
  9265  1794  2F96               	goto	u3541
  9266  1795  2F97               	goto	u3540
  9267  1796                     u3541:
  9268  1796  2F98               	goto	l2567
  9269  1797                     u3540:
  9270  1797  2F90               	goto	l2563
  9271  1798                     l2567:
  9272  1798  0863               	movf	___fladd@aexp,w
  9273  1799  1903               	btfsc	3,2
  9274  179A  2F9C               	goto	u3551
  9275  179B  2F9D               	goto	u3550
  9276  179C                     u3551:
  9277  179C  2FD1               	goto	l733
  9278  179D                     u3550:
  9279  179D                     l2569:
  9280  179D  3001               	movlw	1
  9281  179E  07D2               	addwf	___fladd@b,f
  9282  179F  3000               	movlw	0
  9283  17A0  1803               	skipnc
  9284  17A1  3001               	movlw	1
  9285  17A2  07D3               	addwf	___fladd@b+1,f
  9286  17A3  3000               	movlw	0
  9287  17A4  1803               	skipnc
  9288  17A5  3001               	movlw	1
  9289  17A6  07D4               	addwf	___fladd@b+2,f
  9290  17A7  3000               	movlw	0
  9291  17A8  1803               	skipnc
  9292  17A9  3001               	movlw	1
  9293  17AA  07D5               	addwf	___fladd@b+3,f
  9294  17AB                     l2571:
  9295  17AB  1C55               	btfss	___fladd@b+3,0
  9296  17AC  2FAE               	goto	u3561
  9297  17AD  2FAF               	goto	u3560
  9298  17AE                     u3561:
  9299  17AE  2FD1               	goto	l733
  9300  17AF                     u3560:
  9301  17AF                     l2573:
  9302  17AF  0852               	movf	___fladd@b,w
  9303  17B0  00DA               	movwf	??___fladd
  9304  17B1  0853               	movf	___fladd@b+1,w
  9305  17B2  00DB               	movwf	??___fladd+1
  9306  17B3  0854               	movf	___fladd@b+2,w
  9307  17B4  00DC               	movwf	??___fladd+2
  9308  17B5  0855               	movf	___fladd@b+3,w
  9309  17B6  00DD               	movwf	??___fladd+3
  9310  17B7  3001               	movlw	1
  9311  17B8  00DE               	movwf	??___fladd+4
  9312  17B9                     u3575:
  9313  17B9  0D5D               	rlf	??___fladd+3,w
  9314  17BA  0CDD               	rrf	??___fladd+3,f
  9315  17BB  0CDC               	rrf	??___fladd+2,f
  9316  17BC  0CDB               	rrf	??___fladd+1,f
  9317  17BD  0CDA               	rrf	??___fladd,f
  9318  17BE                     u3570:
  9319  17BE  0BDE               	decfsz	??___fladd+4,f
  9320  17BF  2FB9               	goto	u3575
  9321  17C0  085D               	movf	??___fladd+3,w
  9322  17C1  00D5               	movwf	___fladd@b+3
  9323  17C2  085C               	movf	??___fladd+2,w
  9324  17C3  00D4               	movwf	___fladd@b+2
  9325  17C4  085B               	movf	??___fladd+1,w
  9326  17C5  00D3               	movwf	___fladd@b+1
  9327  17C6  085A               	movf	??___fladd,w
  9328  17C7  00D2               	movwf	___fladd@b
  9329  17C8  0A64               	incf	___fladd@bexp,w
  9330  17C9  1903               	btfsc	3,2
  9331  17CA  2FCC               	goto	u3581
  9332  17CB  2FCD               	goto	u3580
  9333  17CC                     u3581:
  9334  17CC  2FD1               	goto	l733
  9335  17CD                     u3580:
  9336  17CD                     l2575:
  9337  17CD  3001               	movlw	1
  9338  17CE  00DA               	movwf	??___fladd
  9339  17CF  085A               	movf	??___fladd,w
  9340  17D0  07E4               	addwf	___fladd@bexp,f
  9341  17D1                     l733:
  9342  17D1  0A64               	incf	___fladd@bexp,w
  9343  17D2  1903               	btfsc	3,2
  9344  17D3  2FD5               	goto	u3591
  9345  17D4  2FD6               	goto	u3590
  9346  17D5                     u3591:
  9347  17D5  2FDB               	goto	l2579
  9348  17D6                     u3590:
  9349  17D6                     l2577:
  9350  17D6  0864               	movf	___fladd@bexp,w
  9351  17D7  1D03               	btfss	3,2
  9352  17D8  2FDA               	goto	u3601
  9353  17D9  2FDB               	goto	u3600
  9354  17DA                     u3601:
  9355  17DA  2FE9               	goto	l2585
  9356  17DB                     u3600:
  9357  17DB                     l2579:
  9358  17DB  3000               	movlw	0
  9359  17DC  00D5               	movwf	___fladd@b+3
  9360  17DD  3000               	movlw	0
  9361  17DE  00D4               	movwf	___fladd@b+2
  9362  17DF  3000               	movlw	0
  9363  17E0  00D3               	movwf	___fladd@b+1
  9364  17E1  3000               	movlw	0
  9365  17E2  00D2               	movwf	___fladd@b
  9366  17E3                     l2581:
  9367  17E3  0864               	movf	___fladd@bexp,w
  9368  17E4  1D03               	btfss	3,2
  9369  17E5  2FE7               	goto	u3611
  9370  17E6  2FE8               	goto	u3610
  9371  17E7                     u3611:
  9372  17E7  2FE9               	goto	l2585
  9373  17E8                     u3610:
  9374  17E8                     l2583:
  9375  17E8  01E2               	clrf	___fladd@signs
  9376  17E9                     l2585:
  9377  17E9  1C64               	btfss	___fladd@bexp,0
  9378  17EA  2FEC               	goto	u3621
  9379  17EB  2FED               	goto	u3620
  9380  17EC                     u3621:
  9381  17EC  2FEF               	goto	l2589
  9382  17ED                     u3620:
  9383  17ED                     l2587:
  9384  17ED  17D4               	bsf	___fladd@b+2,7
  9385  17EE  2FF3               	goto	l741
  9386  17EF                     l2589:
  9387  17EF  307F               	movlw	127
  9388  17F0  00DA               	movwf	??___fladd
  9389  17F1  085A               	movf	??___fladd,w
  9390  17F2  05D4               	andwf	___fladd@b+2,f
  9391  17F3                     l741:
  9392  17F3  0864               	movf	___fladd@bexp,w
  9393  17F4  00DA               	movwf	??___fladd
  9394  17F5  1003               	clrc
  9395  17F6  0C5A               	rrf	??___fladd,w
  9396  17F7  00DB               	movwf	??___fladd+1
  9397  17F8  085B               	movf	??___fladd+1,w
  9398  17F9  00D5               	movwf	___fladd@b+3
  9399  17FA                     l2591:
  9400  17FA  1FE2               	btfss	___fladd@signs,7
  9401  17FB  2FFD               	goto	u3631
  9402  17FC  2FFE               	goto	u3630
  9403  17FD                     u3631:
  9404  17FD  2FFF               	goto	l742
  9405  17FE                     u3630:
  9406  17FE                     l2593:
  9407  17FE  17D5               	bsf	___fladd@b+3,7
  9408  17FF                     l742:
  9409  17FF                     l712:
  9410  17FF  0008               	return
  9411  1800                     __end_of___fladd:
  9412                           
  9413                           	psect	text20
  9414  1B8C                     __ptext20:	
  9415 ;; *************** function ___flneg *****************
  9416 ;; Defined at:
  9417 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  9418 ;; Parameters:    Size  Location     Type
  9419 ;;  f1              4    0[COMMON] unsigned char 
  9420 ;; Auto vars:     Size  Location     Type
  9421 ;;		None
  9422 ;; Return value:  Size  Location     Type
  9423 ;;                  4    0[COMMON] unsigned char 
  9424 ;; Registers used:
  9425 ;;		wreg
  9426 ;; Tracked objects:
  9427 ;;		On entry : 0/0
  9428 ;;		On exit  : 0/0
  9429 ;;		Unchanged: 0/0
  9430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9431 ;;      Params:         4       0       0       0       0
  9432 ;;      Locals:         0       0       0       0       0
  9433 ;;      Temps:          0       0       0       0       0
  9434 ;;      Totals:         4       0       0       0       0
  9435 ;;Total ram usage:        4 bytes
  9436 ;; Hardware stack levels used:    1
  9437 ;; This function calls:
  9438 ;;		Nothing
  9439 ;; This function is called by:
  9440 ;;		_sprintf
  9441 ;; This function uses a non-reentrant model
  9442 ;;
  9443                           
  9444                           
  9445                           ;psect for function ___flneg
  9446  1B8C                     ___flneg:
  9447  1B8C                     l3003:	
  9448                           ;incstack = 0
  9449                           ; Regs used in ___flneg: [wreg]
  9450                           
  9451  1B8C  0873               	movf	___flneg@f1+3,w
  9452  1B8D  0472               	iorwf	___flneg@f1+2,w
  9453  1B8E  0471               	iorwf	___flneg@f1+1,w
  9454  1B8F  0470               	iorwf	___flneg@f1,w
  9455  1B90  1903               	skipnz
  9456  1B91  2B93               	goto	u4761
  9457  1B92  2B94               	goto	u4760
  9458  1B93                     u4761:
  9459  1B93  2B96               	goto	l3007
  9460  1B94                     u4760:
  9461  1B94                     l3005:
  9462  1B94  3080               	movlw	128
  9463  1B95  06F3               	xorwf	___flneg@f1+3,f
  9464  1B96                     l3007:
  9465  1B96                     l571:
  9466  1B96  0008               	return
  9467  1B97                     __end_of___flneg:
  9468                           
  9469                           	psect	text21
  9470  1EA4                     __ptext21:	
  9471 ;; *************** function ___flge *****************
  9472 ;; Defined at:
  9473 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  9474 ;; Parameters:    Size  Location     Type
  9475 ;;  ff1             4    0[COMMON] unsigned char 
  9476 ;;  ff2             4    4[COMMON] unsigned char 
  9477 ;; Auto vars:     Size  Location     Type
  9478 ;;		None
  9479 ;; Return value:  Size  Location     Type
  9480 ;;		None               void
  9481 ;; Registers used:
  9482 ;;		wreg, status,2, status,0
  9483 ;; Tracked objects:
  9484 ;;		On entry : 0/0
  9485 ;;		On exit  : 0/0
  9486 ;;		Unchanged: 0/0
  9487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9488 ;;      Params:         8       0       0       0       0
  9489 ;;      Locals:         0       0       0       0       0
  9490 ;;      Temps:          4       0       0       0       0
  9491 ;;      Totals:        12       0       0       0       0
  9492 ;;Total ram usage:       12 bytes
  9493 ;; Hardware stack levels used:    1
  9494 ;; This function calls:
  9495 ;;		Nothing
  9496 ;; This function is called by:
  9497 ;;		_sprintf
  9498 ;; This function uses a non-reentrant model
  9499 ;;
  9500                           
  9501                           
  9502                           ;psect for function ___flge
  9503  1EA4                     ___flge:
  9504  1EA4                     l2983:	
  9505                           ;incstack = 0
  9506                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9507                           
  9508  1EA4  3000               	movlw	0
  9509  1EA5  0570               	andwf	___flge@ff1,w
  9510  1EA6  00F8               	movwf	??___flge
  9511  1EA7  3000               	movlw	0
  9512  1EA8  0571               	andwf	___flge@ff1+1,w
  9513  1EA9  00F9               	movwf	??___flge+1
  9514  1EAA  3080               	movlw	128
  9515  1EAB  0572               	andwf	___flge@ff1+2,w
  9516  1EAC  00FA               	movwf	??___flge+2
  9517  1EAD  307F               	movlw	127
  9518  1EAE  0573               	andwf	___flge@ff1+3,w
  9519  1EAF  00FB               	movwf	??___flge+3
  9520  1EB0  087B               	movf	??___flge+3,w
  9521  1EB1  047A               	iorwf	??___flge+2,w
  9522  1EB2  0479               	iorwf	??___flge+1,w
  9523  1EB3  0478               	iorwf	??___flge,w
  9524  1EB4  1D03               	skipz
  9525  1EB5  2EB7               	goto	u4691
  9526  1EB6  2EB8               	goto	u4690
  9527  1EB7                     u4691:
  9528  1EB7  2EC0               	goto	l563
  9529  1EB8                     u4690:
  9530  1EB8                     l2985:
  9531  1EB8  3000               	movlw	0
  9532  1EB9  00F3               	movwf	___flge@ff1+3
  9533  1EBA  3000               	movlw	0
  9534  1EBB  00F2               	movwf	___flge@ff1+2
  9535  1EBC  3000               	movlw	0
  9536  1EBD  00F1               	movwf	___flge@ff1+1
  9537  1EBE  3000               	movlw	0
  9538  1EBF  00F0               	movwf	___flge@ff1
  9539  1EC0                     l563:
  9540  1EC0  3000               	movlw	0
  9541  1EC1  0574               	andwf	___flge@ff2,w
  9542  1EC2  00F8               	movwf	??___flge
  9543  1EC3  3000               	movlw	0
  9544  1EC4  0575               	andwf	___flge@ff2+1,w
  9545  1EC5  00F9               	movwf	??___flge+1
  9546  1EC6  3080               	movlw	128
  9547  1EC7  0576               	andwf	___flge@ff2+2,w
  9548  1EC8  00FA               	movwf	??___flge+2
  9549  1EC9  307F               	movlw	127
  9550  1ECA  0577               	andwf	___flge@ff2+3,w
  9551  1ECB  00FB               	movwf	??___flge+3
  9552  1ECC  087B               	movf	??___flge+3,w
  9553  1ECD  047A               	iorwf	??___flge+2,w
  9554  1ECE  0479               	iorwf	??___flge+1,w
  9555  1ECF  0478               	iorwf	??___flge,w
  9556  1ED0  1D03               	skipz
  9557  1ED1  2ED3               	goto	u4701
  9558  1ED2  2ED4               	goto	u4700
  9559  1ED3                     u4701:
  9560  1ED3  2EDC               	goto	l2989
  9561  1ED4                     u4700:
  9562  1ED4                     l2987:
  9563  1ED4  3000               	movlw	0
  9564  1ED5  00F7               	movwf	___flge@ff2+3
  9565  1ED6  3000               	movlw	0
  9566  1ED7  00F6               	movwf	___flge@ff2+2
  9567  1ED8  3000               	movlw	0
  9568  1ED9  00F5               	movwf	___flge@ff2+1
  9569  1EDA  3000               	movlw	0
  9570  1EDB  00F4               	movwf	___flge@ff2
  9571  1EDC                     l2989:
  9572  1EDC  1FF3               	btfss	___flge@ff1+3,7
  9573  1EDD  2EDF               	goto	u4711
  9574  1EDE  2EE0               	goto	u4710
  9575  1EDF                     u4711:
  9576  1EDF  2F04               	goto	l2993
  9577  1EE0                     u4710:
  9578  1EE0                     l2991:
  9579  1EE0  3000               	movlw	0
  9580  1EE1  00F8               	movwf	??___flge
  9581  1EE2  3000               	movlw	0
  9582  1EE3  00F9               	movwf	??___flge+1
  9583  1EE4  3000               	movlw	0
  9584  1EE5  00FA               	movwf	??___flge+2
  9585  1EE6  3080               	movlw	128
  9586  1EE7  00FB               	movwf	??___flge+3
  9587  1EE8  0870               	movf	___flge@ff1,w
  9588  1EE9  02F8               	subwf	??___flge,f
  9589  1EEA  0871               	movf	___flge@ff1+1,w
  9590  1EEB  1C03               	skipc
  9591  1EEC  0F71               	incfsz	___flge@ff1+1,w
  9592  1EED  2EEF               	goto	u4721
  9593  1EEE  2EF0               	goto	u4722
  9594  1EEF                     u4721:
  9595  1EEF  02F9               	subwf	??___flge+1,f
  9596  1EF0                     u4722:
  9597  1EF0  0872               	movf	___flge@ff1+2,w
  9598  1EF1  1C03               	skipc
  9599  1EF2  0F72               	incfsz	___flge@ff1+2,w
  9600  1EF3  2EF5               	goto	u4723
  9601  1EF4  2EF6               	goto	u4724
  9602  1EF5                     u4723:
  9603  1EF5  02FA               	subwf	??___flge+2,f
  9604  1EF6                     u4724:
  9605  1EF6  0873               	movf	___flge@ff1+3,w
  9606  1EF7  1C03               	skipc
  9607  1EF8  0F73               	incfsz	___flge@ff1+3,w
  9608  1EF9  2EFB               	goto	u4725
  9609  1EFA  2EFC               	goto	u4726
  9610  1EFB                     u4725:
  9611  1EFB  02FB               	subwf	??___flge+3,f
  9612  1EFC                     u4726:
  9613  1EFC  087B               	movf	??___flge+3,w
  9614  1EFD  00F3               	movwf	___flge@ff1+3
  9615  1EFE  087A               	movf	??___flge+2,w
  9616  1EFF  00F2               	movwf	___flge@ff1+2
  9617  1F00  0879               	movf	??___flge+1,w
  9618  1F01  00F1               	movwf	___flge@ff1+1
  9619  1F02  0878               	movf	??___flge,w
  9620  1F03  00F0               	movwf	___flge@ff1
  9621  1F04                     l2993:
  9622  1F04  1FF7               	btfss	___flge@ff2+3,7
  9623  1F05  2F07               	goto	u4731
  9624  1F06  2F08               	goto	u4730
  9625  1F07                     u4731:
  9626  1F07  2F2C               	goto	l566
  9627  1F08                     u4730:
  9628  1F08                     l2995:
  9629  1F08  3000               	movlw	0
  9630  1F09  00F8               	movwf	??___flge
  9631  1F0A  3000               	movlw	0
  9632  1F0B  00F9               	movwf	??___flge+1
  9633  1F0C  3000               	movlw	0
  9634  1F0D  00FA               	movwf	??___flge+2
  9635  1F0E  3080               	movlw	128
  9636  1F0F  00FB               	movwf	??___flge+3
  9637  1F10  0874               	movf	___flge@ff2,w
  9638  1F11  02F8               	subwf	??___flge,f
  9639  1F12  0875               	movf	___flge@ff2+1,w
  9640  1F13  1C03               	skipc
  9641  1F14  0F75               	incfsz	___flge@ff2+1,w
  9642  1F15  2F17               	goto	u4741
  9643  1F16  2F18               	goto	u4742
  9644  1F17                     u4741:
  9645  1F17  02F9               	subwf	??___flge+1,f
  9646  1F18                     u4742:
  9647  1F18  0876               	movf	___flge@ff2+2,w
  9648  1F19  1C03               	skipc
  9649  1F1A  0F76               	incfsz	___flge@ff2+2,w
  9650  1F1B  2F1D               	goto	u4743
  9651  1F1C  2F1E               	goto	u4744
  9652  1F1D                     u4743:
  9653  1F1D  02FA               	subwf	??___flge+2,f
  9654  1F1E                     u4744:
  9655  1F1E  0877               	movf	___flge@ff2+3,w
  9656  1F1F  1C03               	skipc
  9657  1F20  0F77               	incfsz	___flge@ff2+3,w
  9658  1F21  2F23               	goto	u4745
  9659  1F22  2F24               	goto	u4746
  9660  1F23                     u4745:
  9661  1F23  02FB               	subwf	??___flge+3,f
  9662  1F24                     u4746:
  9663  1F24  087B               	movf	??___flge+3,w
  9664  1F25  00F7               	movwf	___flge@ff2+3
  9665  1F26  087A               	movf	??___flge+2,w
  9666  1F27  00F6               	movwf	___flge@ff2+2
  9667  1F28  0879               	movf	??___flge+1,w
  9668  1F29  00F5               	movwf	___flge@ff2+1
  9669  1F2A  0878               	movf	??___flge,w
  9670  1F2B  00F4               	movwf	___flge@ff2
  9671  1F2C                     l566:
  9672  1F2C  3080               	movlw	128
  9673  1F2D  06F3               	xorwf	___flge@ff1+3,f
  9674  1F2E  3080               	movlw	128
  9675  1F2F  06F7               	xorwf	___flge@ff2+3,f
  9676  1F30  0877               	movf	___flge@ff2+3,w
  9677  1F31  0273               	subwf	___flge@ff1+3,w
  9678  1F32  1D03               	skipz
  9679  1F33  2F3E               	goto	u4755
  9680  1F34  0876               	movf	___flge@ff2+2,w
  9681  1F35  0272               	subwf	___flge@ff1+2,w
  9682  1F36  1D03               	skipz
  9683  1F37  2F3E               	goto	u4755
  9684  1F38  0875               	movf	___flge@ff2+1,w
  9685  1F39  0271               	subwf	___flge@ff1+1,w
  9686  1F3A  1D03               	skipz
  9687  1F3B  2F3E               	goto	u4755
  9688  1F3C  0874               	movf	___flge@ff2,w
  9689  1F3D  0270               	subwf	___flge@ff1,w
  9690  1F3E                     u4755:
  9691  1F3E  1803               	skipnc
  9692  1F3F  2F41               	goto	u4751
  9693  1F40  2F42               	goto	u4750
  9694  1F41                     u4751:
  9695  1F41  2F44               	goto	l2999
  9696  1F42                     u4750:
  9697  1F42                     l2997:
  9698  1F42  1003               	clrc
  9699  1F43  2F45               	goto	l567
  9700  1F44                     l2999:
  9701  1F44  1403               	setc
  9702  1F45                     l567:
  9703  1F45  0008               	return
  9704  1F46                     __end_of___flge:
  9705                           
  9706                           	psect	text22
  9707  1DA9                     __ptext22:	
  9708 ;; *************** function ___fleq *****************
  9709 ;; Defined at:
  9710 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  9711 ;; Parameters:    Size  Location     Type
  9712 ;;  ff1             4    0[COMMON] unsigned char 
  9713 ;;  ff2             4    4[COMMON] unsigned char 
  9714 ;; Auto vars:     Size  Location     Type
  9715 ;;		None
  9716 ;; Return value:  Size  Location     Type
  9717 ;;		None               void
  9718 ;; Registers used:
  9719 ;;		wreg, status,2, status,0
  9720 ;; Tracked objects:
  9721 ;;		On entry : 0/0
  9722 ;;		On exit  : 0/0
  9723 ;;		Unchanged: 0/0
  9724 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9725 ;;      Params:         8       0       0       0       0
  9726 ;;      Locals:         0       0       0       0       0
  9727 ;;      Temps:          4       0       0       0       0
  9728 ;;      Totals:        12       0       0       0       0
  9729 ;;Total ram usage:       12 bytes
  9730 ;; Hardware stack levels used:    1
  9731 ;; This function calls:
  9732 ;;		Nothing
  9733 ;; This function is called by:
  9734 ;;		_sprintf
  9735 ;; This function uses a non-reentrant model
  9736 ;;
  9737                           
  9738                           
  9739                           ;psect for function ___fleq
  9740  1DA9                     ___fleq:
  9741  1DA9                     l2971:	
  9742                           ;incstack = 0
  9743                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9744                           
  9745  1DA9  3000               	movlw	0
  9746  1DAA  0570               	andwf	___fleq@ff1,w
  9747  1DAB  00F8               	movwf	??___fleq
  9748  1DAC  3000               	movlw	0
  9749  1DAD  0571               	andwf	___fleq@ff1+1,w
  9750  1DAE  00F9               	movwf	??___fleq+1
  9751  1DAF  3080               	movlw	128
  9752  1DB0  0572               	andwf	___fleq@ff1+2,w
  9753  1DB1  00FA               	movwf	??___fleq+2
  9754  1DB2  307F               	movlw	127
  9755  1DB3  0573               	andwf	___fleq@ff1+3,w
  9756  1DB4  00FB               	movwf	??___fleq+3
  9757  1DB5  087B               	movf	??___fleq+3,w
  9758  1DB6  047A               	iorwf	??___fleq+2,w
  9759  1DB7  0479               	iorwf	??___fleq+1,w
  9760  1DB8  0478               	iorwf	??___fleq,w
  9761  1DB9  1D03               	skipz
  9762  1DBA  2DBC               	goto	u4661
  9763  1DBB  2DBD               	goto	u4660
  9764  1DBC                     u4661:
  9765  1DBC  2DC5               	goto	l558
  9766  1DBD                     u4660:
  9767  1DBD                     l2973:
  9768  1DBD  3000               	movlw	0
  9769  1DBE  00F3               	movwf	___fleq@ff1+3
  9770  1DBF  3000               	movlw	0
  9771  1DC0  00F2               	movwf	___fleq@ff1+2
  9772  1DC1  3000               	movlw	0
  9773  1DC2  00F1               	movwf	___fleq@ff1+1
  9774  1DC3  3000               	movlw	0
  9775  1DC4  00F0               	movwf	___fleq@ff1
  9776  1DC5                     l558:
  9777  1DC5  3000               	movlw	0
  9778  1DC6  0574               	andwf	___fleq@ff2,w
  9779  1DC7  00F8               	movwf	??___fleq
  9780  1DC8  3000               	movlw	0
  9781  1DC9  0575               	andwf	___fleq@ff2+1,w
  9782  1DCA  00F9               	movwf	??___fleq+1
  9783  1DCB  3080               	movlw	128
  9784  1DCC  0576               	andwf	___fleq@ff2+2,w
  9785  1DCD  00FA               	movwf	??___fleq+2
  9786  1DCE  307F               	movlw	127
  9787  1DCF  0577               	andwf	___fleq@ff2+3,w
  9788  1DD0  00FB               	movwf	??___fleq+3
  9789  1DD1  087B               	movf	??___fleq+3,w
  9790  1DD2  047A               	iorwf	??___fleq+2,w
  9791  1DD3  0479               	iorwf	??___fleq+1,w
  9792  1DD4  0478               	iorwf	??___fleq,w
  9793  1DD5  1D03               	skipz
  9794  1DD6  2DD8               	goto	u4671
  9795  1DD7  2DD9               	goto	u4670
  9796  1DD8                     u4671:
  9797  1DD8  2DE1               	goto	l559
  9798  1DD9                     u4670:
  9799  1DD9                     l2975:
  9800  1DD9  3000               	movlw	0
  9801  1DDA  00F7               	movwf	___fleq@ff2+3
  9802  1DDB  3000               	movlw	0
  9803  1DDC  00F6               	movwf	___fleq@ff2+2
  9804  1DDD  3000               	movlw	0
  9805  1DDE  00F5               	movwf	___fleq@ff2+1
  9806  1DDF  3000               	movlw	0
  9807  1DE0  00F4               	movwf	___fleq@ff2
  9808  1DE1                     l559:
  9809  1DE1  0877               	movf	___fleq@ff2+3,w
  9810  1DE2  0673               	xorwf	___fleq@ff1+3,w
  9811  1DE3  1D03               	skipz
  9812  1DE4  2DEF               	goto	u4685
  9813  1DE5  0876               	movf	___fleq@ff2+2,w
  9814  1DE6  0672               	xorwf	___fleq@ff1+2,w
  9815  1DE7  1D03               	skipz
  9816  1DE8  2DEF               	goto	u4685
  9817  1DE9  0875               	movf	___fleq@ff2+1,w
  9818  1DEA  0671               	xorwf	___fleq@ff1+1,w
  9819  1DEB  1D03               	skipz
  9820  1DEC  2DEF               	goto	u4685
  9821  1DED  0874               	movf	___fleq@ff2,w
  9822  1DEE  0670               	xorwf	___fleq@ff1,w
  9823  1DEF                     u4685:
  9824  1DEF  1903               	skipnz
  9825  1DF0  2DF2               	goto	u4681
  9826  1DF1  2DF3               	goto	u4680
  9827  1DF2                     u4681:
  9828  1DF2  2DF5               	goto	l2979
  9829  1DF3                     u4680:
  9830  1DF3                     l2977:
  9831  1DF3  1003               	clrc
  9832  1DF4  2DF6               	goto	l560
  9833  1DF5                     l2979:
  9834  1DF5  1403               	setc
  9835  1DF6                     l560:
  9836  1DF6  0008               	return
  9837  1DF7                     __end_of___fleq:
  9838                           
  9839                           	psect	text23
  9840  1B83                     __ptext23:	
  9841 ;; *************** function _spiRead *****************
  9842 ;; Defined at:
  9843 ;;		line 47 in file "SPI.c"
  9844 ;; Parameters:    Size  Location     Type
  9845 ;;		None
  9846 ;; Auto vars:     Size  Location     Type
  9847 ;;		None
  9848 ;; Return value:  Size  Location     Type
  9849 ;;                  1    wreg      unsigned char 
  9850 ;; Registers used:
  9851 ;;		wreg, status,2, status,0, pclath, cstack
  9852 ;; Tracked objects:
  9853 ;;		On entry : 0/0
  9854 ;;		On exit  : 0/0
  9855 ;;		Unchanged: 0/0
  9856 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9857 ;;      Params:         0       0       0       0       0
  9858 ;;      Locals:         0       0       0       0       0
  9859 ;;      Temps:          0       0       0       0       0
  9860 ;;      Totals:         0       0       0       0       0
  9861 ;;Total ram usage:        0 bytes
  9862 ;; Hardware stack levels used:    1
  9863 ;; Hardware stack levels required when called:    1
  9864 ;; This function calls:
  9865 ;;		_spiReceiveWait
  9866 ;; This function is called by:
  9867 ;;		_main
  9868 ;; This function uses a non-reentrant model
  9869 ;;
  9870                           
  9871                           
  9872                           ;psect for function _spiRead
  9873  1B83                     _spiRead:
  9874  1B83                     l3433:	
  9875                           ;incstack = 0
  9876                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  9877                           
  9878                           
  9879                           ;SPI.c: 49:     spiReceiveWait();
  9880  1B83  160A  158A  2374  160A  158A  	fcall	_spiReceiveWait
  9881  1B88                     l3435:
  9882                           
  9883                           ;SPI.c: 50:     return(SSPBUF);
  9884  1B88  1283               	bcf	3,5	;RP0=0, select bank0
  9885  1B89  1303               	bcf	3,6	;RP1=0, select bank0
  9886  1B8A  0813               	movf	19,w	;volatile
  9887  1B8B                     l176:
  9888  1B8B  0008               	return
  9889  1B8C                     __end_of_spiRead:
  9890                           
  9891                           	psect	text24
  9892  1B74                     __ptext24:	
  9893 ;; *************** function _spiReceiveWait *****************
  9894 ;; Defined at:
  9895 ;;		line 29 in file "SPI.c"
  9896 ;; Parameters:    Size  Location     Type
  9897 ;;		None
  9898 ;; Auto vars:     Size  Location     Type
  9899 ;;		None
  9900 ;; Return value:  Size  Location     Type
  9901 ;;                  1    wreg      void 
  9902 ;; Registers used:
  9903 ;;		None
  9904 ;; Tracked objects:
  9905 ;;		On entry : 0/0
  9906 ;;		On exit  : 0/0
  9907 ;;		Unchanged: 0/0
  9908 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9909 ;;      Params:         0       0       0       0       0
  9910 ;;      Locals:         0       0       0       0       0
  9911 ;;      Temps:          0       0       0       0       0
  9912 ;;      Totals:         0       0       0       0       0
  9913 ;;Total ram usage:        0 bytes
  9914 ;; Hardware stack levels used:    1
  9915 ;; This function calls:
  9916 ;;		Nothing
  9917 ;; This function is called by:
  9918 ;;		_spiRead
  9919 ;; This function uses a non-reentrant model
  9920 ;;
  9921                           
  9922                           
  9923                           ;psect for function _spiReceiveWait
  9924  1B74                     _spiReceiveWait:
  9925  1B74                     l2757:	
  9926                           ;incstack = 0
  9927                           ; Regs used in _spiReceiveWait: []
  9928                           
  9929  1B74                     l162:	
  9930                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  9931                           
  9932  1B74  1683               	bsf	3,5	;RP0=1, select bank1
  9933  1B75  1303               	bcf	3,6	;RP1=0, select bank1
  9934  1B76  1C14               	btfss	20,0	;volatile
  9935  1B77  2B79               	goto	u4011
  9936  1B78  2B7A               	goto	u4010
  9937  1B79                     u4011:
  9938  1B79  2B74               	goto	l162
  9939  1B7A                     u4010:
  9940  1B7A                     l165:
  9941  1B7A  0008               	return
  9942  1B7B                     __end_of_spiReceiveWait:
  9943                           
  9944                           	psect	text25
  9945  1BC9                     __ptext25:	
  9946 ;; *************** function _spiInit *****************
  9947 ;; Defined at:
  9948 ;;		line 12 in file "SPI.c"
  9949 ;; Parameters:    Size  Location     Type
  9950 ;;  sType           1    wreg     enum E1264
  9951 ;;  sDataSample     1    0[COMMON] enum E1272
  9952 ;;  sClockIdle      1    1[COMMON] enum E1276
  9953 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  9954 ;; Auto vars:     Size  Location     Type
  9955 ;;  sType           1    3[COMMON] enum E1264
  9956 ;; Return value:  Size  Location     Type
  9957 ;;                  1    wreg      void 
  9958 ;; Registers used:
  9959 ;;		wreg, status,2, status,0
  9960 ;; Tracked objects:
  9961 ;;		On entry : 0/0
  9962 ;;		On exit  : 0/0
  9963 ;;		Unchanged: 0/0
  9964 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9965 ;;      Params:         3       0       0       0       0
  9966 ;;      Locals:         1       0       0       0       0
  9967 ;;      Temps:          0       0       0       0       0
  9968 ;;      Totals:         4       0       0       0       0
  9969 ;;Total ram usage:        4 bytes
  9970 ;; Hardware stack levels used:    1
  9971 ;; This function calls:
  9972 ;;		Nothing
  9973 ;; This function is called by:
  9974 ;;		_main
  9975 ;; This function uses a non-reentrant model
  9976 ;;
  9977                           
  9978                           
  9979                           ;psect for function _spiInit
  9980  1BC9                     _spiInit:
  9981                           
  9982                           ;incstack = 0
  9983                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  9984                           ;spiInit@sType stored from wreg
  9985  1BC9  00F3               	movwf	spiInit@sType
  9986  1BCA                     l3161:
  9987                           
  9988                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  9989  1BCA  1683               	bsf	3,5	;RP0=1, select bank1
  9990  1BCB  1303               	bcf	3,6	;RP1=0, select bank1
  9991  1BCC  1287               	bcf	7,5	;volatile
  9992                           
  9993                           ;SPI.c: 15:     if(sType & 0b00000100)
  9994  1BCD  1D73               	btfss	spiInit@sType,2
  9995  1BCE  2BD0               	goto	u5121
  9996  1BCF  2BD1               	goto	u5120
  9997  1BD0                     u5121:
  9998  1BD0  2BD5               	goto	l3167
  9999  1BD1                     u5120:
 10000  1BD1                     l3163:
 10001                           
 10002                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
 10003  1BD1  0872               	movf	spiInit@sTransmitEdge,w
 10004  1BD2  0094               	movwf	20	;volatile
 10005  1BD3                     l3165:
 10006                           
 10007                           ;SPI.c: 18:         TRISC3 = 1;
 10008  1BD3  1587               	bsf	7,3	;volatile
 10009                           
 10010                           ;SPI.c: 19:     }
 10011  1BD4  2BD9               	goto	l158
 10012  1BD5                     l3167:
 10013                           
 10014                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
 10015  1BD5  0870               	movf	spiInit@sDataSample,w
 10016  1BD6  0472               	iorwf	spiInit@sTransmitEdge,w
 10017  1BD7  0094               	movwf	20	;volatile
 10018  1BD8                     l3169:
 10019                           
 10020                           ;SPI.c: 23:         TRISC3 = 0;
 10021  1BD8  1187               	bcf	7,3	;volatile
 10022  1BD9                     l158:	
 10023                           ;SPI.c: 24:     }
 10024                           
 10025                           
 10026                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
 10027  1BD9  0873               	movf	spiInit@sType,w
 10028  1BDA  0471               	iorwf	spiInit@sClockIdle,w
 10029  1BDB  1283               	bcf	3,5	;RP0=0, select bank0
 10030  1BDC  1303               	bcf	3,6	;RP1=0, select bank0
 10031  1BDD  0094               	movwf	20	;volatile
 10032  1BDE                     l159:
 10033  1BDE  0008               	return
 10034  1BDF                     __end_of_spiInit:
 10035                           
 10036                           	psect	text26
 10037  1BB6                     __ptext26:	
 10038 ;; *************** function _setup *****************
 10039 ;; Defined at:
 10040 ;;		line 64 in file "main.c"
 10041 ;; Parameters:    Size  Location     Type
 10042 ;;		None
 10043 ;; Auto vars:     Size  Location     Type
 10044 ;;		None
 10045 ;; Return value:  Size  Location     Type
 10046 ;;                  1    wreg      void 
 10047 ;; Registers used:
 10048 ;;		wreg, status,2
 10049 ;; Tracked objects:
 10050 ;;		On entry : 0/0
 10051 ;;		On exit  : 0/0
 10052 ;;		Unchanged: 0/0
 10053 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10054 ;;      Params:         0       0       0       0       0
 10055 ;;      Locals:         0       0       0       0       0
 10056 ;;      Temps:          0       0       0       0       0
 10057 ;;      Totals:         0       0       0       0       0
 10058 ;;Total ram usage:        0 bytes
 10059 ;; Hardware stack levels used:    1
 10060 ;; This function calls:
 10061 ;;		Nothing
 10062 ;; This function is called by:
 10063 ;;		_main
 10064 ;; This function uses a non-reentrant model
 10065 ;;
 10066                           
 10067                           
 10068                           ;psect for function _setup
 10069  1BB6                     _setup:
 10070  1BB6                     l3149:	
 10071                           ;incstack = 0
 10072                           ; Regs used in _setup: [wreg+status,2]
 10073                           
 10074                           
 10075                           ;main.c: 65:     TRISD = 0b00000000;
 10076  1BB6  1683               	bsf	3,5	;RP0=1, select bank1
 10077  1BB7  1303               	bcf	3,6	;RP1=0, select bank1
 10078  1BB8  0188               	clrf	8	;volatile
 10079  1BB9                     l3151:
 10080                           
 10081                           ;main.c: 66:     TRISC = 0b10010000;
 10082  1BB9  3090               	movlw	144
 10083  1BBA  0087               	movwf	7	;volatile
 10084  1BBB                     l3153:
 10085                           
 10086                           ;main.c: 67:     TRISE = 0b00000000;
 10087  1BBB  0189               	clrf	9	;volatile
 10088  1BBC                     l3155:
 10089                           
 10090                           ;main.c: 68:     TRISB = 0b00000000;
 10091  1BBC  0186               	clrf	6	;volatile
 10092  1BBD                     l3157:
 10093                           
 10094                           ;main.c: 69:     ANSEL = 0b00000011;
 10095  1BBD  3003               	movlw	3
 10096  1BBE  1683               	bsf	3,5	;RP0=1, select bank3
 10097  1BBF  1703               	bsf	3,6	;RP1=1, select bank3
 10098  1BC0  0088               	movwf	8	;volatile
 10099                           
 10100                           ;main.c: 70:     PORTC = 0;
 10101  1BC1  1283               	bcf	3,5	;RP0=0, select bank0
 10102  1BC2  1303               	bcf	3,6	;RP1=0, select bank0
 10103  1BC3  0187               	clrf	7	;volatile
 10104                           
 10105                           ;main.c: 71:     PORTD = 0;
 10106  1BC4  0188               	clrf	8	;volatile
 10107                           
 10108                           ;main.c: 72:     PORTE = 0;
 10109  1BC5  0189               	clrf	9	;volatile
 10110                           
 10111                           ;main.c: 73:     PORTB = 0;
 10112  1BC6  0186               	clrf	6	;volatile
 10113  1BC7                     l3159:
 10114                           
 10115                           ;main.c: 74:     PORTAbits.RA0 = 1;
 10116  1BC7  1405               	bsf	5,0	;volatile
 10117  1BC8                     l92:
 10118  1BC8  0008               	return
 10119  1BC9                     __end_of_setup:
 10120                           
 10121                           	psect	text27
 10122  1D23                     __ptext27:	
 10123 ;; *************** function _Lcd_Write_String *****************
 10124 ;; Defined at:
 10125 ;;		line 67 in file "LCD.c"
 10126 ;; Parameters:    Size  Location     Type
 10127 ;;  a               2    3[COMMON] PTR unsigned char 
 10128 ;;		 -> s(20), STR_1(17), 
 10129 ;; Auto vars:     Size  Location     Type
 10130 ;;  i               2    8[COMMON] int 
 10131 ;; Return value:  Size  Location     Type
 10132 ;;                  1    wreg      void 
 10133 ;; Registers used:
 10134 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
 10135 ;; Tracked objects:
 10136 ;;		On entry : 0/0
 10137 ;;		On exit  : 0/0
 10138 ;;		Unchanged: 0/0
 10139 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10140 ;;      Params:         2       0       0       0       0
 10141 ;;      Locals:         2       0       0       0       0
 10142 ;;      Temps:          3       0       0       0       0
 10143 ;;      Totals:         7       0       0       0       0
 10144 ;;Total ram usage:        7 bytes
 10145 ;; Hardware stack levels used:    1
 10146 ;; Hardware stack levels required when called:    2
 10147 ;; This function calls:
 10148 ;;		_Lcd_Write_Char
 10149 ;; This function is called by:
 10150 ;;		_main
 10151 ;; This function uses a non-reentrant model
 10152 ;;
 10153                           
 10154                           
 10155                           ;psect for function _Lcd_Write_String
 10156  1D23                     _Lcd_Write_String:
 10157  1D23                     l3141:	
 10158                           ;incstack = 0
 10159                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
 10160                           
 10161                           
 10162                           ;LCD.c: 68:     int i;;LCD.c: 69:     for (i = 0; a[i] != '\0'; i++)
 10163  1D23  01F8               	clrf	Lcd_Write_String@i
 10164  1D24  01F9               	clrf	Lcd_Write_String@i+1
 10165  1D25  2D48               	goto	l3147
 10166  1D26                     l3143:
 10167                           
 10168                           ;LCD.c: 70:         Lcd_Write_Char(a[i]);
 10169  1D26  0878               	movf	Lcd_Write_String@i,w
 10170  1D27  0773               	addwf	Lcd_Write_String@a,w
 10171  1D28  00F6               	movwf	??_Lcd_Write_String+1
 10172  1D29  0874               	movf	Lcd_Write_String@a+1,w
 10173  1D2A  00F5               	movwf	??_Lcd_Write_String
 10174  1D2B  1803               	skipnc
 10175  1D2C  0AF5               	incf	??_Lcd_Write_String,f
 10176  1D2D  1FF8               	btfss	Lcd_Write_String@i,7
 10177  1D2E  2D30               	goto	u5090
 10178  1D2F  03F5               	decf	??_Lcd_Write_String,f
 10179  1D30                     u5090:
 10180  1D30  0875               	movf	??_Lcd_Write_String,w
 10181  1D31  00F7               	movwf	??_Lcd_Write_String+2
 10182  1D32  0877               	movf	??_Lcd_Write_String+2,w
 10183  1D33  1283               	bcf	3,5	;RP0=0, select bank0
 10184  1D34  1303               	bcf	3,6	;RP1=0, select bank0
 10185  1D35  00FF               	movwf	btemp+1
 10186  1D36  0876               	movf	??_Lcd_Write_String+1,w
 10187  1D37  0084               	movwf	4
 10188  1D38  120A  158A  2000  160A  158A  	fcall	stringtab
 10189  1D3D  160A  158A  23F9  160A  158A  	fcall	_Lcd_Write_Char
 10190  1D42                     l3145:
 10191  1D42  3001               	movlw	1
 10192  1D43  07F8               	addwf	Lcd_Write_String@i,f
 10193  1D44  1803               	skipnc
 10194  1D45  0AF9               	incf	Lcd_Write_String@i+1,f
 10195  1D46  3000               	movlw	0
 10196  1D47  07F9               	addwf	Lcd_Write_String@i+1,f
 10197  1D48                     l3147:
 10198  1D48  0878               	movf	Lcd_Write_String@i,w
 10199  1D49  0773               	addwf	Lcd_Write_String@a,w
 10200  1D4A  00F6               	movwf	??_Lcd_Write_String+1
 10201  1D4B  0874               	movf	Lcd_Write_String@a+1,w
 10202  1D4C  00F5               	movwf	??_Lcd_Write_String
 10203  1D4D  1803               	skipnc
 10204  1D4E  0AF5               	incf	??_Lcd_Write_String,f
 10205  1D4F  1FF8               	btfss	Lcd_Write_String@i,7
 10206  1D50  2D52               	goto	u5100
 10207  1D51  03F5               	decf	??_Lcd_Write_String,f
 10208  1D52                     u5100:
 10209  1D52  0875               	movf	??_Lcd_Write_String,w
 10210  1D53  00F7               	movwf	??_Lcd_Write_String+2
 10211  1D54  0877               	movf	??_Lcd_Write_String+2,w
 10212  1D55  1283               	bcf	3,5	;RP0=0, select bank0
 10213  1D56  1303               	bcf	3,6	;RP1=0, select bank0
 10214  1D57  00FF               	movwf	btemp+1
 10215  1D58  0876               	movf	??_Lcd_Write_String+1,w
 10216  1D59  0084               	movwf	4
 10217  1D5A  120A  158A  2000  160A  158A  	fcall	stringtab
 10218  1D5F  3A00               	xorlw	0
 10219  1D60  1D03               	skipz
 10220  1D61  2D63               	goto	u5111
 10221  1D62  2D64               	goto	u5110
 10222  1D63                     u5111:
 10223  1D63  2D26               	goto	l3143
 10224  1D64                     u5110:
 10225  1D64                     l33:
 10226  1D64  0008               	return
 10227  1D65                     __end_of_Lcd_Write_String:
 10228                           
 10229                           	psect	text28
 10230  1BF9                     __ptext28:	
 10231 ;; *************** function _Lcd_Write_Char *****************
 10232 ;; Defined at:
 10233 ;;		line 58 in file "LCD.c"
 10234 ;; Parameters:    Size  Location     Type
 10235 ;;  a               1    wreg     unsigned char 
 10236 ;; Auto vars:     Size  Location     Type
 10237 ;;  a               1    2[COMMON] unsigned char 
 10238 ;; Return value:  Size  Location     Type
 10239 ;;                  1    wreg      void 
 10240 ;; Registers used:
 10241 ;;		wreg, status,2, status,0, pclath, cstack
 10242 ;; Tracked objects:
 10243 ;;		On entry : 0/0
 10244 ;;		On exit  : 0/0
 10245 ;;		Unchanged: 0/0
 10246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10247 ;;      Params:         0       0       0       0       0
 10248 ;;      Locals:         1       0       0       0       0
 10249 ;;      Temps:          1       0       0       0       0
 10250 ;;      Totals:         2       0       0       0       0
 10251 ;;Total ram usage:        2 bytes
 10252 ;; Hardware stack levels used:    1
 10253 ;; Hardware stack levels required when called:    1
 10254 ;; This function calls:
 10255 ;;		_Lcd_Port
 10256 ;; This function is called by:
 10257 ;;		_Lcd_Write_String
 10258 ;; This function uses a non-reentrant model
 10259 ;;
 10260                           
 10261                           
 10262                           ;psect for function _Lcd_Write_Char
 10263  1BF9                     _Lcd_Write_Char:
 10264                           
 10265                           ;incstack = 0
 10266                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10267                           ;Lcd_Write_Char@a stored from wreg
 10268  1BF9  00F2               	movwf	Lcd_Write_Char@a
 10269  1BFA                     l2745:
 10270                           
 10271                           ;LCD.c: 59:     PORTEbits.RE0 = 1;
 10272  1BFA  1283               	bcf	3,5	;RP0=0, select bank0
 10273  1BFB  1303               	bcf	3,6	;RP1=0, select bank0
 10274  1BFC  1409               	bsf	9,0	;volatile
 10275  1BFD                     l2747:
 10276                           
 10277                           ;LCD.c: 60:     Lcd_Port(a);
 10278  1BFD  0872               	movf	Lcd_Write_Char@a,w
 10279  1BFE  160A  158A  236E  160A  158A  	fcall	_Lcd_Port
 10280  1C03                     l2749:
 10281                           
 10282                           ;LCD.c: 61:     PORTEbits.RE1 = 1;
 10283  1C03  1283               	bcf	3,5	;RP0=0, select bank0
 10284  1C04  1303               	bcf	3,6	;RP1=0, select bank0
 10285  1C05  1489               	bsf	9,1	;volatile
 10286  1C06                     l2751:
 10287                           
 10288                           ;LCD.c: 62:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10289  1C06  301A               	movlw	26
 10290  1C07  00F1               	movwf	??_Lcd_Write_Char
 10291  1C08                     u5687:
 10292  1C08  0BF1               	decfsz	??_Lcd_Write_Char,f
 10293  1C09  2C08               	goto	u5687
 10294  1C0A  0000               	nop
 10295  1C0B                     l2753:
 10296                           
 10297                           ;LCD.c: 63:     PORTEbits.RE1 = 0;
 10298  1C0B  1283               	bcf	3,5	;RP0=0, select bank0
 10299  1C0C  1303               	bcf	3,6	;RP1=0, select bank0
 10300  1C0D  1089               	bcf	9,1	;volatile
 10301  1C0E                     l2755:
 10302                           
 10303                           ;LCD.c: 64:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10304  1C0E  301A               	movlw	26
 10305  1C0F  00F1               	movwf	??_Lcd_Write_Char
 10306  1C10                     u5697:
 10307  1C10  0BF1               	decfsz	??_Lcd_Write_Char,f
 10308  1C11  2C10               	goto	u5697
 10309  1C12  0000               	nop
 10310  1C13                     l27:
 10311  1C13  0008               	return
 10312  1C14                     __end_of_Lcd_Write_Char:
 10313                           
 10314                           	psect	text29
 10315  1C14                     __ptext29:	
 10316 ;; *************** function _Lcd_Set_Cursor *****************
 10317 ;; Defined at:
 10318 ;;		line 33 in file "LCD.c"
 10319 ;; Parameters:    Size  Location     Type
 10320 ;;  a               1    wreg     unsigned char 
 10321 ;;  b               1    4[COMMON] unsigned char 
 10322 ;; Auto vars:     Size  Location     Type
 10323 ;;  a               1    6[COMMON] unsigned char 
 10324 ;;  temp            1    7[COMMON] unsigned char 
 10325 ;; Return value:  Size  Location     Type
 10326 ;;                  1    wreg      void 
 10327 ;; Registers used:
 10328 ;;		wreg, status,2, status,0, pclath, cstack
 10329 ;; Tracked objects:
 10330 ;;		On entry : 0/0
 10331 ;;		On exit  : 0/0
 10332 ;;		Unchanged: 0/0
 10333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10334 ;;      Params:         1       0       0       0       0
 10335 ;;      Locals:         2       0       0       0       0
 10336 ;;      Temps:          1       0       0       0       0
 10337 ;;      Totals:         4       0       0       0       0
 10338 ;;Total ram usage:        4 bytes
 10339 ;; Hardware stack levels used:    1
 10340 ;; Hardware stack levels required when called:    2
 10341 ;; This function calls:
 10342 ;;		_Lcd_Cmd
 10343 ;; This function is called by:
 10344 ;;		_main
 10345 ;; This function uses a non-reentrant model
 10346 ;;
 10347                           
 10348                           
 10349                           ;psect for function _Lcd_Set_Cursor
 10350  1C14                     _Lcd_Set_Cursor:
 10351                           
 10352                           ;incstack = 0
 10353                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10354                           ;Lcd_Set_Cursor@a stored from wreg
 10355  1C14  00F6               	movwf	Lcd_Set_Cursor@a
 10356  1C15                     l3119:
 10357                           
 10358                           ;LCD.c: 34:     char temp;;LCD.c: 35:     if (a == 1) {
 10359  1C15  0376               	decf	Lcd_Set_Cursor@a,w
 10360  1C16  1D03               	btfss	3,2
 10361  1C17  2C19               	goto	u5071
 10362  1C18  2C1A               	goto	u5070
 10363  1C19                     u5071:
 10364  1C19  2C26               	goto	l3125
 10365  1C1A                     u5070:
 10366  1C1A                     l3121:
 10367                           
 10368                           ;LCD.c: 36:         temp = 0x80 + b - 1;
 10369  1C1A  0874               	movf	Lcd_Set_Cursor@b,w
 10370  1C1B  3E7F               	addlw	127
 10371  1C1C  00F5               	movwf	??_Lcd_Set_Cursor
 10372  1C1D  0875               	movf	??_Lcd_Set_Cursor,w
 10373  1C1E  00F7               	movwf	Lcd_Set_Cursor@temp
 10374  1C1F                     l3123:
 10375                           
 10376                           ;LCD.c: 37:         Lcd_Cmd(temp);
 10377  1C1F  0877               	movf	Lcd_Set_Cursor@temp,w
 10378  1C20  160A  158A  23DF  160A  158A  	fcall	_Lcd_Cmd
 10379                           
 10380                           ;LCD.c: 38:     } else if (a == 2) {
 10381  1C25  2C37               	goto	l21
 10382  1C26                     l3125:
 10383  1C26  3002               	movlw	2
 10384  1C27  0676               	xorwf	Lcd_Set_Cursor@a,w
 10385  1C28  1D03               	btfss	3,2
 10386  1C29  2C2B               	goto	u5081
 10387  1C2A  2C2C               	goto	u5080
 10388  1C2B                     u5081:
 10389  1C2B  2C37               	goto	l21
 10390  1C2C                     u5080:
 10391  1C2C                     l3127:
 10392                           
 10393                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
 10394  1C2C  0874               	movf	Lcd_Set_Cursor@b,w
 10395  1C2D  3EBF               	addlw	191
 10396  1C2E  00F5               	movwf	??_Lcd_Set_Cursor
 10397  1C2F  0875               	movf	??_Lcd_Set_Cursor,w
 10398  1C30  00F7               	movwf	Lcd_Set_Cursor@temp
 10399  1C31                     l3129:
 10400                           
 10401                           ;LCD.c: 40:         Lcd_Cmd(temp);
 10402  1C31  0877               	movf	Lcd_Set_Cursor@temp,w
 10403  1C32  160A  158A  23DF  160A  158A  	fcall	_Lcd_Cmd
 10404  1C37                     l21:
 10405  1C37  0008               	return
 10406  1C38                     __end_of_Lcd_Set_Cursor:
 10407                           
 10408                           	psect	text30
 10409  1CE2                     __ptext30:	
 10410 ;; *************** function _Lcd_Init *****************
 10411 ;; Defined at:
 10412 ;;		line 44 in file "LCD.c"
 10413 ;; Parameters:    Size  Location     Type
 10414 ;;		None
 10415 ;; Auto vars:     Size  Location     Type
 10416 ;;		None
 10417 ;; Return value:  Size  Location     Type
 10418 ;;                  1    wreg      void 
 10419 ;; Registers used:
 10420 ;;		wreg, status,2, status,0, pclath, cstack
 10421 ;; Tracked objects:
 10422 ;;		On entry : 0/0
 10423 ;;		On exit  : 0/0
 10424 ;;		Unchanged: 0/0
 10425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10426 ;;      Params:         0       0       0       0       0
 10427 ;;      Locals:         0       0       0       0       0
 10428 ;;      Temps:          2       0       0       0       0
 10429 ;;      Totals:         2       0       0       0       0
 10430 ;;Total ram usage:        2 bytes
 10431 ;; Hardware stack levels used:    1
 10432 ;; Hardware stack levels required when called:    2
 10433 ;; This function calls:
 10434 ;;		_Lcd_Cmd
 10435 ;;		_Lcd_Port
 10436 ;; This function is called by:
 10437 ;;		_main
 10438 ;; This function uses a non-reentrant model
 10439 ;;
 10440                           
 10441                           
 10442                           ;psect for function _Lcd_Init
 10443  1CE2                     _Lcd_Init:
 10444  1CE2                     l3131:	
 10445                           ;incstack = 0
 10446                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10447                           
 10448                           
 10449                           ;LCD.c: 45:     Lcd_Port(0x00);
 10450  1CE2  3000               	movlw	0
 10451  1CE3  160A  158A  236E  160A  158A  	fcall	_Lcd_Port
 10452  1CE8                     l3133:
 10453                           
 10454                           ;LCD.c: 46:     _delay((unsigned long)((20)*(8000000/4000.0)));
 10455  1CE8  3034               	movlw	52
 10456  1CE9  00F5               	movwf	??_Lcd_Init+1
 10457  1CEA  30F1               	movlw	241
 10458  1CEB  00F4               	movwf	??_Lcd_Init
 10459  1CEC                     u5707:
 10460  1CEC  0BF4               	decfsz	??_Lcd_Init,f
 10461  1CED  2CEC               	goto	u5707
 10462  1CEE  0BF5               	decfsz	??_Lcd_Init+1,f
 10463  1CEF  2CEC               	goto	u5707
 10464  1CF0  2CF1               	nop2
 10465  1CF1                     l3135:
 10466                           
 10467                           ;LCD.c: 47:     Lcd_Cmd(0x3F);
 10468  1CF1  303F               	movlw	63
 10469  1CF2  160A  158A  23DF  160A  158A  	fcall	_Lcd_Cmd
 10470                           
 10471                           ;LCD.c: 48:     _delay((unsigned long)((10)*(8000000/4000.0)));
 10472  1CF7  301A               	movlw	26
 10473  1CF8  00F5               	movwf	??_Lcd_Init+1
 10474  1CF9  30F8               	movlw	248
 10475  1CFA  00F4               	movwf	??_Lcd_Init
 10476  1CFB                     u5717:
 10477  1CFB  0BF4               	decfsz	??_Lcd_Init,f
 10478  1CFC  2CFB               	goto	u5717
 10479  1CFD  0BF5               	decfsz	??_Lcd_Init+1,f
 10480  1CFE  2CFB               	goto	u5717
 10481  1CFF  0000               	nop
 10482  1D00                     l3137:
 10483                           
 10484                           ;LCD.c: 49:     Lcd_Cmd(0x3F);
 10485  1D00  303F               	movlw	63
 10486  1D01  160A  158A  23DF  160A  158A  	fcall	_Lcd_Cmd
 10487  1D06                     l3139:
 10488                           
 10489                           ;LCD.c: 50:     _delay((unsigned long)((200)*(8000000/4000000.0)));
 10490  1D06  3085               	movlw	133
 10491  1D07  00F4               	movwf	??_Lcd_Init
 10492  1D08                     u5727:
 10493  1D08  0BF4               	decfsz	??_Lcd_Init,f
 10494  1D09  2D08               	goto	u5727
 10495                           
 10496                           ;LCD.c: 51:     Lcd_Cmd(0x3F);
 10497  1D0A  303F               	movlw	63
 10498  1D0B  160A  158A  23DF  160A  158A  	fcall	_Lcd_Cmd
 10499                           
 10500                           ;LCD.c: 53:     Lcd_Cmd(0x38);
 10501  1D10  3038               	movlw	56
 10502  1D11  160A  158A  23DF  160A  158A  	fcall	_Lcd_Cmd
 10503                           
 10504                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
 10505  1D16  300C               	movlw	12
 10506  1D17  160A  158A  23DF  160A  158A  	fcall	_Lcd_Cmd
 10507                           
 10508                           ;LCD.c: 55:     Lcd_Cmd(0x06);
 10509  1D1C  3006               	movlw	6
 10510  1D1D  160A  158A  23DF  160A  158A  	fcall	_Lcd_Cmd
 10511  1D22                     l24:
 10512  1D22  0008               	return
 10513  1D23                     __end_of_Lcd_Init:
 10514                           
 10515                           	psect	text31
 10516  1B97                     __ptext31:	
 10517 ;; *************** function _Lcd_Clear *****************
 10518 ;; Defined at:
 10519 ;;		line 28 in file "LCD.c"
 10520 ;; Parameters:    Size  Location     Type
 10521 ;;		None
 10522 ;; Auto vars:     Size  Location     Type
 10523 ;;		None
 10524 ;; Return value:  Size  Location     Type
 10525 ;;                  1    wreg      void 
 10526 ;; Registers used:
 10527 ;;		wreg, status,2, status,0, pclath, cstack
 10528 ;; Tracked objects:
 10529 ;;		On entry : 0/0
 10530 ;;		On exit  : 0/0
 10531 ;;		Unchanged: 0/0
 10532 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10533 ;;      Params:         0       0       0       0       0
 10534 ;;      Locals:         0       0       0       0       0
 10535 ;;      Temps:          0       0       0       0       0
 10536 ;;      Totals:         0       0       0       0       0
 10537 ;;Total ram usage:        0 bytes
 10538 ;; Hardware stack levels used:    1
 10539 ;; Hardware stack levels required when called:    2
 10540 ;; This function calls:
 10541 ;;		_Lcd_Cmd
 10542 ;; This function is called by:
 10543 ;;		_main
 10544 ;; This function uses a non-reentrant model
 10545 ;;
 10546                           
 10547                           
 10548                           ;psect for function _Lcd_Clear
 10549  1B97                     _Lcd_Clear:
 10550  1B97                     l3117:	
 10551                           ;incstack = 0
 10552                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10553                           
 10554                           
 10555                           ;LCD.c: 29:     Lcd_Cmd(0);
 10556  1B97  3000               	movlw	0
 10557  1B98  160A  158A  23DF  160A  158A  	fcall	_Lcd_Cmd
 10558                           
 10559                           ;LCD.c: 30:     Lcd_Cmd(1);
 10560  1B9D  3001               	movlw	1
 10561  1B9E  160A  158A  23DF  160A  158A  	fcall	_Lcd_Cmd
 10562  1BA3                     l15:
 10563  1BA3  0008               	return
 10564  1BA4                     __end_of_Lcd_Clear:
 10565                           
 10566                           	psect	text32
 10567  1BDF                     __ptext32:	
 10568 ;; *************** function _Lcd_Cmd *****************
 10569 ;; Defined at:
 10570 ;;		line 20 in file "LCD.c"
 10571 ;; Parameters:    Size  Location     Type
 10572 ;;  a               1    wreg     unsigned char 
 10573 ;; Auto vars:     Size  Location     Type
 10574 ;;  a               1    3[COMMON] unsigned char 
 10575 ;; Return value:  Size  Location     Type
 10576 ;;                  1    wreg      void 
 10577 ;; Registers used:
 10578 ;;		wreg, status,2, status,0, pclath, cstack
 10579 ;; Tracked objects:
 10580 ;;		On entry : 0/0
 10581 ;;		On exit  : 0/0
 10582 ;;		Unchanged: 0/0
 10583 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10584 ;;      Params:         0       0       0       0       0
 10585 ;;      Locals:         1       0       0       0       0
 10586 ;;      Temps:          2       0       0       0       0
 10587 ;;      Totals:         3       0       0       0       0
 10588 ;;Total ram usage:        3 bytes
 10589 ;; Hardware stack levels used:    1
 10590 ;; Hardware stack levels required when called:    1
 10591 ;; This function calls:
 10592 ;;		_Lcd_Port
 10593 ;; This function is called by:
 10594 ;;		_Lcd_Clear
 10595 ;;		_Lcd_Set_Cursor
 10596 ;;		_Lcd_Init
 10597 ;; This function uses a non-reentrant model
 10598 ;;
 10599                           
 10600                           
 10601                           ;psect for function _Lcd_Cmd
 10602  1BDF                     _Lcd_Cmd:
 10603                           
 10604                           ;incstack = 0
 10605                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10606                           ;Lcd_Cmd@a stored from wreg
 10607  1BDF  00F3               	movwf	Lcd_Cmd@a
 10608  1BE0                     l2735:
 10609                           
 10610                           ;LCD.c: 21:     PORTEbits.RE0 = 0;
 10611  1BE0  1283               	bcf	3,5	;RP0=0, select bank0
 10612  1BE1  1303               	bcf	3,6	;RP1=0, select bank0
 10613  1BE2  1009               	bcf	9,0	;volatile
 10614  1BE3                     l2737:
 10615                           
 10616                           ;LCD.c: 22:     Lcd_Port(a);
 10617  1BE3  0873               	movf	Lcd_Cmd@a,w
 10618  1BE4  160A  158A  236E  160A  158A  	fcall	_Lcd_Port
 10619  1BE9                     l2739:
 10620                           
 10621                           ;LCD.c: 23:     PORTEbits.RE1 = 1;
 10622  1BE9  1283               	bcf	3,5	;RP0=0, select bank0
 10623  1BEA  1303               	bcf	3,6	;RP1=0, select bank0
 10624  1BEB  1489               	bsf	9,1	;volatile
 10625  1BEC                     l2741:
 10626                           
 10627                           ;LCD.c: 24:     _delay((unsigned long)((4)*(8000000/4000.0)));
 10628  1BEC  300B               	movlw	11
 10629  1BED  00F2               	movwf	??_Lcd_Cmd+1
 10630  1BEE  3062               	movlw	98
 10631  1BEF  00F1               	movwf	??_Lcd_Cmd
 10632  1BF0                     u5737:
 10633  1BF0  0BF1               	decfsz	??_Lcd_Cmd,f
 10634  1BF1  2BF0               	goto	u5737
 10635  1BF2  0BF2               	decfsz	??_Lcd_Cmd+1,f
 10636  1BF3  2BF0               	goto	u5737
 10637  1BF4  0000               	nop
 10638  1BF5                     l2743:
 10639                           
 10640                           ;LCD.c: 25:     PORTEbits.RE1 = 0;
 10641  1BF5  1283               	bcf	3,5	;RP0=0, select bank0
 10642  1BF6  1303               	bcf	3,6	;RP1=0, select bank0
 10643  1BF7  1089               	bcf	9,1	;volatile
 10644  1BF8                     l12:
 10645  1BF8  0008               	return
 10646  1BF9                     __end_of_Lcd_Cmd:
 10647                           
 10648                           	psect	text33
 10649  1B6E                     __ptext33:	
 10650 ;; *************** function _Lcd_Port *****************
 10651 ;; Defined at:
 10652 ;;		line 16 in file "LCD.c"
 10653 ;; Parameters:    Size  Location     Type
 10654 ;;  a               1    wreg     unsigned char 
 10655 ;; Auto vars:     Size  Location     Type
 10656 ;;  a               1    0[COMMON] unsigned char 
 10657 ;; Return value:  Size  Location     Type
 10658 ;;                  1    wreg      void 
 10659 ;; Registers used:
 10660 ;;		wreg
 10661 ;; Tracked objects:
 10662 ;;		On entry : 0/0
 10663 ;;		On exit  : 0/0
 10664 ;;		Unchanged: 0/0
 10665 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10666 ;;      Params:         0       0       0       0       0
 10667 ;;      Locals:         1       0       0       0       0
 10668 ;;      Temps:          0       0       0       0       0
 10669 ;;      Totals:         1       0       0       0       0
 10670 ;;Total ram usage:        1 bytes
 10671 ;; Hardware stack levels used:    1
 10672 ;; This function calls:
 10673 ;;		Nothing
 10674 ;; This function is called by:
 10675 ;;		_Lcd_Cmd
 10676 ;;		_Lcd_Init
 10677 ;;		_Lcd_Write_Char
 10678 ;; This function uses a non-reentrant model
 10679 ;;
 10680                           
 10681                           
 10682                           ;psect for function _Lcd_Port
 10683  1B6E                     _Lcd_Port:
 10684                           
 10685                           ;incstack = 0
 10686                           ; Regs used in _Lcd_Port: [wreg]
 10687                           ;Lcd_Port@a stored from wreg
 10688  1B6E  00F0               	movwf	Lcd_Port@a
 10689  1B6F                     l2269:
 10690                           
 10691                           ;LCD.c: 17:     PORTB = a;
 10692  1B6F  0870               	movf	Lcd_Port@a,w
 10693  1B70  1283               	bcf	3,5	;RP0=0, select bank0
 10694  1B71  1303               	bcf	3,6	;RP1=0, select bank0
 10695  1B72  0086               	movwf	6	;volatile
 10696  1B73                     l9:
 10697  1B73  0008               	return
 10698  1B74                     __end_of_Lcd_Port:
 10699  007E                     btemp	set	126	;btemp
 10700  007E                     wtemp0	set	126
 10701                           
 10702                           	psect	config
 10703                           
 10704                           ;Config register CONFIG1 @ 0x2007
 10705                           ;	Oscillator Selection bits
 10706                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
 10707                           ;	Watchdog Timer Enable bit
 10708                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10709                           ;	Power-up Timer Enable bit
 10710                           ;	PWRTE = OFF, PWRT disabled
 10711                           ;	RE3/MCLR pin function select bit
 10712                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10713                           ;	Code Protection bit
 10714                           ;	CP = OFF, Program memory code protection is disabled
 10715                           ;	Data Code Protection bit
 10716                           ;	CPD = OFF, Data memory code protection is disabled
 10717                           ;	Brown Out Reset Selection bits
 10718                           ;	BOREN = OFF, BOR disabled
 10719                           ;	Internal External Switchover bit
 10720                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10721                           ;	Fail-Safe Clock Monitor Enabled bit
 10722                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10723                           ;	Low Voltage Programming Enable bit
 10724                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10725                           ;	In-Circuit Debugger Mode bit
 10726                           ;	DEBUG = 0x1, unprogrammed default
 10727  2007                     	org	8199
 10728  2007  20D5               	dw	8405
 10729                           
 10730                           ;Config register CONFIG2 @ 0x2008
 10731                           ;	Brown-out Reset Selection bit
 10732                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10733                           ;	Flash Program Memory Self Write Enable bits
 10734                           ;	WRT = OFF, Write protection off
 10735  2008                     	org	8200
 10736  2008  3FFF               	dw	16383

Data Sizes:
    Strings     31
    Constant    144
    Data        1
    BSS         32
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     41      72
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_3(CODE[7]), STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> s(BANK1[20]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   38754
                                             37 BANK1      4     4      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___flmul
                           ___xxtofl
                              _setup
                            _spiInit
                            _spiRead
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   32269
                                              0 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     550
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     362
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     406
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _setup
   _spiInit
   _spiRead
     _spiReceiveWait
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     29      48       7       90.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A6      12        0.0%
ABS                  0      0      A6       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 20 18:31:49 2021

                        l9 1B73                          _p 00C9                          _s 00D3  
                        _x 00CD                          pc 0002                _SSPSTATbits 0094  
                       l12 1BF8                         l21 1C37                         l15 1BA3  
                       l24 1D22                         l33 1D64                         l27 1C13  
                       l92 1BC8                         l97 11FE               ___awdiv@sign 0021  
                       fsr 0004        ___wmul@multiplicand 0072        __Umul8_16@word_mpld 0076  
                      l162 1B74                        l307 0136                        l165 1B7A  
                      l158 1BD9                        l159 1BDE                        l176 1B8B  
                      l408 106A                        l600 111A                        l353 0726  
                      l345 05BF                        l338 057B                        l372 1C68  
                      l525 0070                        l285 0C9E                        l374 1C80  
                      l542 11E5                        l278 1577                        l703 1682  
                      l543 114A                        l560 1DF6                        l720 174D  
                      l712 17FF                        l368 07EB                        l705 1659  
                      l553 11D8                        l801 0F6B                        l730 1793  
                      l546 11A8                        l538 1EA3                        l563 1EC0  
                      l571 1B96                        l724 1771                        l628 1E4A  
                      l741 17F3                        l733 17D1                        l558 1DC5  
                      l566 1F2C                        l742 17FF                        l582 092A  
                      l590 1099                        l814 1C95                        l559 1DE1  
                      l567 1F45                        l575 093F                        l807 0FF3  
                      l816 1CA7                        l745 1C5B                        l585 093F  
                      l841 1FFF                        l593 10EA                        l852 1FC9  
                      l853 1FD5                        l845 1FAD                        l589 1127  
                      l678 1DA8                        l839 1F68                        l688 1CE1  
                      l699 15DB                        l795 0FFF                        l859 1BB5  
                      _adc 00D2                        _lmm 00E7                        fsr0 0004  
                      indf 0000               ___awmod@sign 0076               ___flmul@aexp 0036  
             ___flmul@bexp 0037               ___flmul@sign 0031               ___flmul@temp 003C  
             ___flmul@prod 0038               ___fltol@exp1 005B                       l3003 1B8C  
                     l3011 08C4                       l3005 1B94                       l3021 08F0  
                     l3013 08D1                       l3101 1FC3                       l2301 0054  
                     l3007 1B96                       l3023 08F8                       l3111 1FF6  
                     l3103 1FCD                       l2311 006C                       l2303 0055  
                     l3121 1C1A                       l2401 1578                       l3041 091F  
                     l3033 0906                       l3025 08FA                       l3017 08DA  
                     l3113 1FF7                       l3105 1FD7                       l2305 005C  
                     l2321 1E55                       l3201 00F5                       l3131 1CE2  
                     l3123 1C1F                       l2411 158F                       l2403 157F  
                     l3043 092F                       l3027 08FE                       l3035 0918  
                     l3019 08EF                       l3051 1E02                       l3107 1FED  
                     l2307 0062                       l2331 1E69                       l2323 1E57  
                     l2315 1E4B                       l3211 0134                       l3203 010A  
                     l3117 1B97                       l3133 1CE8                       l3125 1C26  
                     l3141 1D23                       l2501 168B                       l2421 15A7  
                     l2413 1594                       l2405 1585                       l3045 0934  
                     l3061 1E3C                       l3053 1E0F                       l3109 1FF2  
                     l2261 1C8F                       l2309 0067                       l2341 1E88  
                     l2333 1E70                       l2325 1E5B                       l2317 1E4C  
                     l3221 0164                       l3205 011D                       l3135 1CF1  
                     l3127 1C2C                       l3119 1C15                       l3143 1D26  
                     l3151 1BB9                       l2511 16B3                       l2431 15BD  
                     l2423 15AC                       l2415 159C                       l2407 1589  
                     l3055 1E13                       l3063 1E42                       l3047 1DF7  
                     l2263 1C9E                       l2255 1C82                       l2271 0008  
                     l2343 1E8F                       l2335 1E74                       l2327 1E60  
                     l2319 1E50                       l3311 04D9                       l3303 04A2  
                     l3231 01AC                       l3223 0168                       l3215 0138  
                     l3207 0121                       l3137 1D00                       l3129 1C31  
                     l3145 1D42                       l3153 1BBB                       l3161 1BCA  
                     l2521 16CC                       l2513 16BC                       l2505 1694  
                     l2441 15D1                       l2433 15BE                       l2425 15B2  
                     l2417 159D                       l2409 158A                       l3057 1E25  
                     l3049 1DFF                       l3081 1F70                       l3073 1F47  
                     l2265 1CA3                       l2257 1C84                       l2601 0CB0  
                     l2361 1D77                       l2353 1D65                       l2281 001A  
                     l2273 000B                       l2337 1E78                       l2329 1E66  
                     l2345 1E95                       l3401 0789                       l3321 04FB  
                     l3313 04E0                       l3305 04AC                       l3241 01DE  
                     l3233 01B0                       l3225 0176                       l3217 0154  
                     l3209 0132                       l3139 1D06                       l3147 1D48  
                     l3155 1BBC                       l3163 1BD1                       l2531 1730  
                     l2515 16BE                       l2507 16AB                       l2523 16D1  
                     l2451 15ED                       l2435 15C3                       l2443 15D3  
                     l2427 15B3                       l2419 159F                       l3067 1C38  
                     l3059 1E33                       l3091 1F92                       l3075 1F4C  
                     l2259 1C8B                       l2611 0CC5                       l2603 0CB1  
                     l2371 1D97                       l2363 1D7B                       l2355 1D67  
                     l2291 002E                       l2283 001F                       l2275 000F  
                     l2347 1E9A                       l2339 1E82                       l3411 07B1  
                     l3403 0794                       l3331 056F                       l3323 0509  
                     l3315 04E9                       l3307 04C7                       l3251 022D  
                     l3243 01F1                       l3235 01B4                       l3227 017A  
                     l3219 0160                       l3171 0074                       l2269 1B6F  
                     l3157 1BBD                       l3149 1BB6                       l3165 1BD3  
                     l2541 1763                       l2525 16E7                       l2533 173F  
                     l2517 16C2                       l2509 16AF                       l2461 1601  
                     l2453 15F1                       l2445 15E1                       l2437 15C8  
                     l2429 15B9                       l3069 1C3C                       l3093 1F96  
                     l3085 1F79                       l3077 1F50                       l2621 0CDD  
                     l2613 0CCD                       l2605 0CB6                       l2373 1D9E  
                     l2365 1D7F                       l2357 1D6D                       l2381 1CAE  
                     l2293 0035                       l2285 0023                       l2277 0014  
                     l2349 1E9F                       l3413 07B5                       l3405 07A0  
                     l3341 05A3                       l3333 0583                       l3325 0510  
                     l3309 04CD                       l3253 0278                       l3245 0204  
                     l3237 01CD                       l3261 02BD                       l3229 0193  
                     l3181 008F                       l3173 0079                       l3421 07D5  
                     l3159 1BC7                       l3167 1BD5                       l2551 177A  
                     l2543 176C                       l2535 1755                       l2527 1725  
                     l2519 16C3                       l2471 1615                       l2463 1605  
                     l2455 15F5                       l2447 15E5                       l2439 15D0  
                     l3095 1FA4                       l3087 1F7E                       l3079 1F60  
                     l2711 0FA0                       l2703 0F70                       l2631 0CF9  
                     l2623 0CE2                       l2615 0CD2                       l2607 0CBB  
                     l2367 1D90                       l2359 1D70                       l2375 1DA4  
                     l2391 1CCA                       l2383 1CB1                       l2295 0039  
                     l2287 0025                       l2279 0016                       l3415 07C1  
                     l3407 07A4                       l3351 05D4                       l3343 05B2  
                     l3335 058C                       l3327 0515                       l3319 04EE  
                     l3271 0364                       l3263 02CC                       l3255 0291  
                     l3247 0208                       l3239 01D8                       l3423 07E7  
                     l3191 00CF                       l3183 009F                       l3175 007F  
                     l3169 1BD8                       l3433 1B83                       l2561 178A  
                     l2553 177F                       l2545 1770                       l2537 175A  
                     l2529 172B                       l2481 1626                       l2473 1619  
                     l2465 1609                       l2457 15F9                       l2449 15E9  
                     l3097 1FB4                       l3089 1F8B                       l2721 0FD7  
                     l2705 0F75                       l2713 0FA6                       l2641 0D1C  
                     l2633 0CFE                       l2625 0CE7                       l2617 0CD8  
                     l2609 0CC3                       l2369 1D96                       l2393 1CD0  
                     l2385 1CB8                       l2297 003D                       l2289 002B  
                     l2801 0AFB                       l3417 07CD                       l3409 07AA  
                     l3361 06AB                       l3353 05D8                       l3345 05B9  
                     l3337 0590                       l3329 0550                       l3281 03BD  
                     l3273 0373                       l3265 0313                       l3257 029A  
                     l3249 020E                       l3521 014C                       l3185 00A3  
                     l3193 00DF                       l3177 0086                       l3441 1206  
                     l3435 1B88                       l2571 17AB                       l2563 1790  
                     l2547 1775                       l2555 1781                       l2491 166C  
                     l2483 163D                       l2475 161D                       l2467 160D  
                     l2459 15FD                       l3099 1FBF                       l2731 0FF7  
                     l2723 0FD9                       l2715 0FB3                       l2707 0F83  
                     l2651 0DAA                       l2643 0D29                       l2635 0D03  
                     l2627 0CEF                       l2619 0CDC                       l2395 1CD7  
                     l2387 1CBC                       l2379 1CA8                       l2299 004E  
                     l3371 0705                       l3363 06B7                       l3355 05F6  
                     l3347 05C8                       l3339 0596                       l3291 0467  
                     l3275 038E                       l3267 0322                       l3259 02B5  
                     l3195 00ED                       l3187 00B8                       l3179 008B  
                     l3451 127A                       l3443 120F                       l2741 1BEC  
                     l2581 17E3                       l2573 17AF                       l2549 1778  
                     l2557 1785                       l2493 166D                       l2485 165D  
                     l2477 1621                       l2469 1611                       l2901 116F  
                     l2725 0FE7                       l2717 0FBE                       l2709 0F87  
                     l2661 0E0C                       l2653 0DC6                       l2645 0D46  
                     l2629 0CF1                       l2389 1CC0                       l2397 1CDD  
                     l2821 1BAC                       l2813 0C72                       l3381 0731  
                     l3373 070B                       l3357 0651                       l3365 06F2  
                     l3349 05CD                       l3293 0469                       l3285 03DC  
                     l3277 0397                       l3269 033D                       l3197 00EE  
                     l3189 00CB                       l3461 12F1                       l3453 12C0  
                     l3445 1255                       l2743 1BF5                       l2735 1BE0  
                     l2751 1C06                       l2591 17FA                       l2583 17E8  
                     l2575 17CD                       l2567 1798                       l2559 1786  
                     l2495 1676                       l2487 1666                       l2479 1625  
                     l2911 11A2                       l2903 1178                       l2831 107E  
                     l2727 0FEB                       l2719 0FCD                       l2671 0E9C  
                     l2663 0E29                       l2655 0DCF                       l2647 0D62  
                     l2639 0D0C                       l2823 1BB2                       l2807 0BE3  
                     l3391 0764                       l3383 0738                       l3367 06FA  
                     l3359 068C                       l3279 039F                       l3287 03E5  
                     l3375 0712                       l3199 00F2                       l3471 1315  
                     l3463 12F4                       l3455 12CA                       l3447 125D  
                     l3439 11E6                       l2737 1BE3                       l2753 1C0B  
                     l2745 1BFA                       l2593 17FE                       l2585 17E9  
                     l2577 17D6                       l2569 179D                       l2489 1668  
                     l2497 167A                       l2913 11AC                       l2921 11C6  
                     l2905 118A                       l2841 109A                       l2729 0FEC  
                     l2681 0F2E                       l2673 0EC9                       l2665 0E42  
                     l2657 0DDF                       l2649 0D8E                       l2761 1376  
                     l2825 1BB4                       l2817 1BA5                       l2809 0BEA  
                     l3393 076A                       l3385 0747                       l3377 0718  
                     l3369 0701                       l3289 041A                       l3481 1340  
                     l3473 1318                       l3465 12FE                       l3457 12DE  
                     l3449 1271                       l2739 1BE9                       l2755 1C0E  
                     l2747 1BFD                       l2587 17ED                       l2579 17DB  
                     l2499 1686                       l2907 1198                       l2851 10C3  
                     l2843 10A0                       l2835 1087                       l2683 0F37  
                     l2691 0F4B                       l2675 0EEF                       l2667 0E5F  
                     l2659 0DFC                       l2595 0C9F                       l2819 1BA6  
                     l3395 076E                       l3387 0750                       l3379 0720  
                     l3299 046B                       l3483 1343                       l3475 1327  
                     l3467 1301                       l3459 12E7                       l2749 1C03  
                     l2757 1B74                       l2589 17EF                       l2941 1C76  
                     l2933 1C5C                       l2909 1199                       l2861 10EE  
                     l2853 10D1                       l2845 10AF                       l2829 106B  
                     l2693 0F4F                       l2685 0F3B                       l2677 0F17  
                     l2669 0E8C                       l2597 0CA6                       l2773 1534  
                     l2781 0949                       l3397 077C                       l3389 0758  
                     l3485 134D                       l3477 1332                       l3469 130B  
                     l2951 1018                       l2943 1C7C                       l2935 1C5E  
                     l2927 11CD                       l2919 11B4                       l2855 10DB  
                     l2847 10B1                       l2695 0F50                       l2687 0F3C  
                     l2679 0F20                       l2599 0CAC                       l2767 1483  
                     l2759 1370                       l2791 0A3F                       l2783 0950  
                     l3399 0785                       l3487 1357                       l3479 1335  
                     l2961 1052                       l2953 1025                       l2937 1C62  
                     l2929 11DD                       l2881 1128                       l2857 10DC  
                     l2849 10BA                       l2697 0F54                       l2689 0F45  
                     l2769 1489                       l2777 0943                       l3489 135A  
                     l2971 1DA9                       l2963 1053                       l2955 1029  
                     l2947 1005                       l2939 1C6F                       l2883 1135  
                     l2875 110F                       l2867 10F6                       l2859 10E4  
                     l2699 0F68                       l2795 0AC7                       l2779 0947  
                     l2973 1DBD                       l2965 105C                       l2957 1032  
                     l2949 1015                       l2893 114B                       l2877 111F  
                     l2869 1108                       l2789 0A38                       l2975 1DD9  
                     l2991 1EE0                       l2983 1EA4                       l2959 1044  
                     l2967 1062                       l2895 1153                       l2887 113E  
                     l2799 0AF4                       l2977 1DF3                       l2993 1F04  
                     l2985 1EB8                       l2897 1164                       l2979 1DF5  
                     l2995 1F08                       l2987 1ED4                       l2899 1166  
                     l2997 1F42                       l2989 1EDC                       l2999 1F44  
                     STR_1 08A0                       STR_2 08B8                       STR_3 08B1  
                     u3000 1E78                       u3001 1E77                       u3010 1E82  
                     u3011 1E81                       u3110 1DA4                       u3030 1E95  
                     u3111 1DA3                       u3031 1E94                       u3015 1E7E  
                     u3200 1594                       u4000 0FEB                       u3120 1CAE  
                     u3040 1E9A                       u3201 1593                       u4001 0FEA  
                     u3105 1D98                       u3121 1CAD                       u3041 1E99  
                     u3025 1E89                       u4010 1B7A                       u3210 15B2  
                     u3050 1D6D                       u4011 1B79                       u3211 15B1  
                     u3051 1D6C                       u3300 165D                       u3220 15BD  
                     u3140 1CC0                       u4020 1376                       u4100 0947  
                     u3301 165C                       u3221 15BC                       u3141 1CBF  
                     u4021 1375                       u4101 0946                       u3310 166C  
                     u3230 15C3                       u3070 1D7F                       u3150 1CCA  
                     u4110 0950                       u3311 166B                       u3231 15C2  
                     u3071 1D7E                       u3151 1CC9                       u3135 1CB2  
                     u4111 094F                       u3240 15C8                       u3241 15C7  
                     u3065 1D71                       u3410 16E7                       u3330 1682  
                     u3250 15E1                       u5010 1FC3                       u3090 1D90  
                     u3170 1CDD                       u3411 16E6                       u3331 1681  
                     u3251 15E0                       u5011 1FC2                       u3091 1D8F  
                     u3171 1CDC                       u3155 1CC6                       u4035 1393  
                     u5100 1D52                       u3500 177F                       u3340 1686  
                     u3260 15E5                       u3180 1589                       u5020 1FC9  
                     u4300 1098                       u4060 1489                       u3501 177E  
                     u3421 16FE                       u3413 16E3                       u3405 16C5  
                     u3341 1685                       u3325 166F                       u3261 15E4  
                     u3181 1588                       u5021 1FC8                       u5005 1FB8  
                     u4301 1097                       u3085 1D80                       u3165 1CD1  
                     u4061 1488                       u4045 13ED                       u4205 0B1B  
                     u4125 0970                       u5110 1D64                       u3510 1785  
                     u3430 1712                       u3422 16FF                       u3350 168B  
                     u3270 163D                       u3190 158F                       u5030 1FCD  
                     u4230 0BEA                       u4150 0A3F                       u5111 1D63  
                     u3511 1784                       u3431 1713                       u3423 1704  
                     u3351 168A                       u3271 163C                       u3191 158E  
                     u5031 1FCC                       u3095 1D8C                       u4055 1442  
                     u4231 0BE9                       u4215 0B57                       u4151 0A3E  
                     u4135 09AC                       u5120 1BD1                       u3600 17DB  
                     u3520 178A                       u3440 1730                       u3432 1718  
                     u3424 1705                       u3280 1648                       u5040 1FE2  
                     u4320 10D1                       u5200 0193                       u5121 1BD0  
                     u3601 17DA                       u3521 1789                       u3441 172F  
                     u3433 1719                       u3425 170A                       u3361 169D  
                     u3281 1646                       u4321 10D0                       u4225 0BA2  
                     u4145 09F7                       u5201 0192                       u3610 17E8  
                     u3530 1790                       u3450 1755                       u3426 170B  
                     u3370 16AF                       u3362 16A4                       u3290 1649  
                     u5050 1FF2                       u4410 111F                       u5210 01CD  
                     u5130 007F                       u3611 17E7                       u3531 178F  
                     u3451 1754                       u3371 16AE                       u3363 16AB  
                     u3275 1639                       u5051 1FF1                       u4411 111E  
                     u4315 10BC                       u4075 14A6                       u5211 01CC  
                     u5131 007E                       u3620 17ED                       u3540 1797  
                     u3460 175A                       u3380 16B3                       u5060 1FF6  
                     u4420 1135                       u4340 10EA                       u3700 0CFE  
                     u2900 003D                       u5300 038E                       u5220 0208  
                     u5140 009F                       u3621 17EC                       u3541 1796  
                     u3461 1759                       u3381 16B2                       u5061 1FF5  
                     u5045 1FDD                       u4421 1134                       u4405 1111  
                     u4341 10E9                       u4325 10CD                       u3701 0CFD  
                     u4085 14F3                       u2901 003C                       u4245 0BFD  
                     u4165 0A52                       u5301 038D                       u5221 0207  
                     u5141 009E                       u5070 1C1A                       u3630 17FE  
                     u3550 179D                       u3390 16C2                       u4510 11C5  
                     u4430 1149                       u4350 10EE                       u2830 1C8F  
                     u3710 0D03                       u4270 1BAC                       u4190 0AFB  
                     u5230 0291                       u5150 00DF                       u5071 1C19  
                     u3631 17FD                       u3551 179C                       u3391 16C1  
                     u4511 11C4                       u4431 1148                       u4351 10ED  
                     u4335 10DD                       u2831 1C8E                       u3711 0D02  
                     u4095 153F                       u4271 1BAB                       u4255 0C39  
                     u4191 0AFA                       u4175 0A8E                       u5231 0290  
                     u5151 00DE                       u5080 1C2C                       u3560 17AF  
                     u3480 1770                       u4520 11CC                       u4360 10F5  
                     u3640 0CB0                       u4280 1BB2                       u2920 004E  
                     u5400 05A3                       u5320 04A1                       u5240 02B5  
                     u5160 00ED                       u5081 1C2B                       u3561 17AE  
                     u3481 176F                       u4521 11CB                       u4505 11B5  
                     u4361 10F4                       u3801 0E51                       u3721 0D54  
                     u3641 0CAF                       u4281 1BB1                       u2921 004D  
                     u4265 0C75                       u4185 0ACA                       u5401 05A2  
                     u5321 04A0                       u5241 02B4                       u5161 00EC  
                     u5090 1D30                       u3570 17BE                       u3490 1775  
                     u4610 1029                       u4450 118A                       u4290 107E  
                     u2850 1CA3                       u3802 0E58                       u3722 0D5B  
                     u3650 0CB6                       u5410 05B2                       u5330 04AC  
                     u5250 02CC                       u5170 0131                       u3491 1774  
                     u3475 1765                       u4611 1028                       u4451 1189  
                     u4291 107D                       u2851 1CA2                       u3811 0E7E  
                     u3803 0E5F                       u3731 0D70                       u3723 0D62  
                     u3651 0CB5                       u2915 003E                       u5411 05B1  
                     u5331 04AB                       u5315 046E                       u5251 02CB  
                     u5171 0130                       u4700 1ED4                       u3580 17CD  
                     u4540 11DD                       u4380 1107                       u3812 0E85  
                     u3732 0D77                       u3660 0CBB                       u2940 0062  
                     u2860 000F                       u5500 0747                       u5420 05CD  
                     u5340 04C7                       u5260 0322                       u5180 0160  
                     u4701 1ED3                       u3581 17CC                       u4605 101A  
                     u4541 11DC                       u4445 1171                       u4381 1106  
                     u2845 1C96                       u3821 0EAB                       u3813 0E8C  
                     u3741 0D9C                       u3733 0D7E                       u3661 0CBA  
                     u2941 0061                       u2925 004A                       u2861 000E  
                     u5501 0746                       u5421 05CC                       u5405 059F  
                     u5341 04C6                       u5325 049D                       u5261 0321  
                     u5181 015F                       u4710 1EE0                       u3590 17D6  
                     u4630 1044                       u4550 1C62                       u4470 11A8  
                     u4390 110E                       u3910 0F4F                       u3830 0ED5  
                     u3822 0EB2                       u3742 0DA3                       u3670 0CDC  
                     u2950 0067                       u2870 001A                       u5510 0758  
                     u5350 04D9                       u5270 033D                       u5190 0164  
                     u4711 1EDF                       u3591 17D5                       u3575 17B9  
                     u4631 1043                       u4551 1C61                       u4535 11CF  
                     u4471 11A7                       u4455 1186                       u4391 110D  
                     u4375 10F7                       u3911 0F4E                       u3823 0EB9  
                     u3751 0DB8                       u3743 0DAA                       u3671 0CDB  
                     u2951 0066                       u2935 0056                       u2871 0019  
                     u5511 0757                       u5415 05AE                       u5351 04D8  
                     u5271 033C                       u5255 02C8                       u5191 0163  
                     u4800 0905                       u4480 11AC                       u3920 0F54  
                     u3752 0DBF                       u3680 0CE2                       u2880 002B  
                     u2960 1E50                       u5520 0764                       u5360 04FB  
                     u5280 0364                       u4721 1EEF                       u4801 0904  
                     u4625 102B                       u4481 11AB                       u4465 119B  
                     u3921 0F53                       u3905 0F3E                       u3841 0EE1  
                     u3753 0DC6                       u3681 0CE1                       u2881 002A  
                     u2961 1E4F                       u5521 0763                       u5505 0743  
                     u5361 04FA                       u5281 0363                       u5265 031E  
                     u4730 1F08                       u4722 1EF0                       u4650 1062  
                     u4490 11B3                       u3930 0F68                       u3850 0EFD  
                     u3842 0EE8                       u3690 0CE7                       u2970 1E5B  
                     u5530 076E                       u5450 06F9                       u5370 0509  
                     u5290 0373                       u4731 1F07                       u4723 1EF5  
                     u4651 1061                       u4635 1040                       u4491 11B2  
                     u3931 0F67                       u3843 0EEF                       u3835 0ED0  
                     u3771 0DEE                       u3691 0CE6                       u2971 1E5A  
                     u5531 076D                       u5451 06F8                       u5435 0654  
                     u5371 0508                       u5291 0372                       u4660 1DBD  
                     u4724 1EF6                       u4820 0917                       u4900 1E25  
                     u4580 1C7C                       u3940 0F6F                       u3772 0DF5  
                     u2980 1E66                       u5540 077C                       u5460 0711  
                     u4661 1DBC                       u4741 1F17                       u4725 1EFB  
                     u4821 0916                       u4645 1054                       u4901 1E24  
                     u4581 1C7B                       u4565 1C69                       u3941 0F6E  
                     u3861 0F09                       u3781 0E1B                       u3773 0DFC  
                     u3765 0DC8                       u2981 1E65                       u5541 077B  
                     u5461 0710                       u5445 06BA                       u5365 04F7  
                     u4670 1DD9                       u4750 1F42                       u4742 1F18  
                     u4726 1EFC                       u4830 091E                       u4590 1015  
                     u3950 0F75                       u3862 0F10                       u3782 0E22  
                     u5550 0794                       u5470 0718                       u5390 0582  
                     u4671 1DD8                       u4751 1F41                       u4743 1F1D  
                     u4831 091D                       u4815 0907                       u4591 1014  
                     u4575 1C70                       u3951 0F74                       u3863 0F17  
                     u3855 0EF8                       u3783 0E29                       u2895 002F  
                     u5551 0793                       u5471 0717                       u5391 0581  
                     u5295 036F                       u5607 12ED                       u4680 1DF3  
                     u4744 1F1E                       u4760 1B94                       u4920 1E42  
                     u3960 0F87                       u5560 07AA                       u5480 0720  
                     u4681 1DF2                       u4745 1F23                       u4761 1B93  
                     u4921 1E41                       u4905 1E21                       u3961 0F86  
                     u5561 07A9                       u5545 0778                       u5481 071F  
                     u5385 0518                       u5617 12FA                       u4746 1F24  
                     u4690 1EB8                       u4850 092F                       u4770 08D1  
                     u4930 1F4C                       u3970 0F96                       u3890 0F3B  
                     u5570 07C1                       u5490 0731                       u5707 1CEC  
                     u4755 1F3E                       u4691 1EB7                       u4851 092E  
                     u4771 08D0                       u4915 1E34                       u4931 1F4B  
                     u3891 0F3A                       u3875 0F19                       u3795 0E2B  
                     u2995 1E6A                       u5571 07C0                       u5555 0790  
                     u5491 0730                       u5627 1311                       u4860 0934  
                     u4780 08E8                       u4940 1F50                       u3980 0FB3  
                     u5580 07CD                       u5717 1CFB                       u4685 1DEF  
                     u4861 0933                       u4845 0921                       u4941 1F4F  
                     u3981 0FB2                       u3885 0F30                       u5581 07CC  
                     u5637 1320                       u4790 08FE                       u4870 1DFF  
                     u4950 1F70                       u3990 0FCD                       u5590 07E7  
                     u5727 1D08                       u4791 08FD                       u4871 1DFE  
                     u4951 1F6F                       u3991 0FCC                       u3975 0F91  
                     u5591 07E6                       u5495 072D                       u5647 132D  
                     u5737 1BF0                       u4785 08E3                       u3985 0FAF  
                     u5657 133B                       u4890 1E13                       u4970 1F91  
                     u4891 1E12                       u4971 1F90                       u3995 0FC9  
                     u5667 1353                       u4885 1E04                       u4965 1F83  
                     u5677 1362                       u4990 1FB3                       u5687 1C08  
                     u4991 1FB2                       u5697 1C10                       u4985 1FA5  
                     _TRMT 04C1          ?_Lcd_Write_String 0073                       _main 11E6  
                     btemp 007E                       start 0000         ??_Lcd_Write_String 0075  
             _sprintf$1213 00AA            __end_of_Lcd_Cmd 1BF9              ___fltol@sign1 005A  
          __end_of___fladd 1800                      ?_main 0070            __end_of___awdiv 0071  
          __end_of___flneg 1B97            __end_of___awmod 1EA4            __end_of___flmul 1000  
          __end_of___flsub 1C5C            __end_of___fltol 0940                      _ANSEL 0188  
          __end_of___lldiv 106B            ___awdiv@divisor 0077            __end_of___llmod 1E4B  
          __end_of___lwdiv 1DA9            __end_of___lwmod 1CE2            ___awdiv@counter 0020  
                    _SPBRG 0099                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _PORTE 0009    __size_of_Lcd_Set_Cursor 0024  
                    _TRISB 0086                      _TRISC 0087                      _TRISD 0088  
                    _TRISE 0089                      _TXREG 0019            __end_of_dpowers 08A0  
                    _scale 0940            __end_of_isdigit 1BB6                      _setup 1BB6  
                    pclath 000A            __end_of_spiInit 1BDF            __end_of_spiRead 1B8C  
                    status 0003                      wtemp0 007E            __end_of_sprintf 07EC  
         __end_of_Lcd_Init 1D23           __end_of_Lcd_Port 1B74            __initialization 07EC  
             __end_of_main 136D                     ??_main 00C5         __size_of_Lcd_Clear 000D  
     __size_of__tdiv_to_l_ 00BD           ___llmod@dividend 0074                     ?_scale 003E  
         ___awdiv@dividend 0079                     ?_setup 0070                  ??_Lcd_Cmd 0071  
  __size_of_Lcd_Write_Char 001B                     _TRISC3 043B                     _TRISC5 043D  
                   _SSPBUF 0013                     _SSPCON 0014           __end_of___xxtofl 2000  
         __end_of__powers_ 0844                     ___flge 1EA4                     ___fleq 1DA9  
                ??___fladd 005A                     ___wmul 1C5C                  ??___awdiv 007B  
                ??___flneg 0074                  ??___awmod 0074                  ??___flmul 002C  
                ??___flsub 007E                  ??___fltol 0055                  ??___lldiv 0078  
                ??___llmod 0078                  ??___lwdiv 007A                  ??___lwmod 0074  
                   _fround 136D           ___awdiv@quotient 0022            ___awmod@divisor 0070  
          ___awmod@counter 0075                  ??_isdigit 0070         __size_of__Umul8_16 0027  
                ??_spiInit 0073                  ??_spiRead 0070                  ??_sprintf 00A5  
          Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074                 ___flge@ff1 0070  
               ___flge@ff2 0074               ___xxtofl@arg 007A               ___xxtofl@exp 0079  
             ___xxtofl@val 0070                 ___fleq@ff1 0070                 ___fleq@ff2 0074  
  __end_of__initialization 07FC                 ___flneg@f1 0070          __end_of_Lcd_Clear 1BA4  
               ___fltol@f1 0051             __pcstackCOMMON 0070               __pidataBANK0 0007  
            __end_of_scale 0C9F              __end_of_setup 1BC9             _Lcd_Set_Cursor 1C14  
               __div_to_l_ 1128                 _banderaADC 006F                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070            __div_to_l_@exp1 0025            __div_to_l_@cntr 0024  
                  ??_scale 0042            __div_to_l_@quot 0020               sprintf@width 00B5  
                  ??_setup 0070                 __pbssBANK0 006E                 __pbssBANK1 00C9  
            __div_to_l_@f1 0070              __div_to_l_@f2 0074          __end_of__Umul8_16 1CA8  
               __pmaintext 11E6                    ?___flge 0070                    ?___fleq 0070  
                  ?___wmul 0070    __size_of_spiReceiveWait 0007                    ?_fround 003E  
__size_of_Lcd_Write_String 0042     __end_of_Lcd_Set_Cursor 1C38                  ?___xxtofl 0070  
               ??_Lcd_Init 0074                 ??_Lcd_Port 0070                    _SSPSTAT 0094  
               __stringtab 0800             _Lcd_Write_Char 1BF9                    _Lcd_Cmd 1BDF  
        __end_of__npowers_ 0878                 _scale$1212 004C            __size_of___flge 00A2  
          __size_of___fleq 004E                    ___fladd 1578                    ___awdiv 0008  
                  ___flneg 1B8C                    ___awmod 1E4B                    ___flmul 0C9F  
                  ___flsub 1C38                    ___fltol 08C4                    ___lldiv 1005  
          __size_of___wmul 0025                    ___llmod 1DF7                    ___lwdiv 1D65  
                  ___lwmod 1CA8            __size_of_fround 020B            ?_Lcd_Set_Cursor 0074  
                  __ptext1 0071                    __ptext2 0940                    __ptext3 1E4B  
                  __ptext4 0008                    __ptext5 1BA4                    __ptext6 136D  
                  __ptext7 1CA8                    __ptext8 1D65                    __ptext9 0C9F  
              ?__div_to_l_ 0070                    _dpowers 0878                    _isdigit 1BA4  
                  _mensaje 006E                 ??___xxtofl 0074           ___awmod@dividend 0072  
                  _spiInit 1BC9                    _spiRead 1B83                    _sprintf 0071  
                  clrloop0 1B7C     __end_of_Lcd_Write_Char 1C14       end_of_initialization 07FC  
          ___lldiv@divisor 0070            ___lldiv@counter 007D                  _RCSTAbits 0018  
                Lcd_Port@a 0070             __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074  
            ??__tdiv_to_l_ 0078                  _PORTAbits 0005                  _PORTCbits 0007  
                _PORTEbits 0009                ___fladd@grs 0065              ___xxtofl@sign 0078  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0073          Lcd_Write_String@i 0078  
              ___flmul@grs 0032                  _TXSTAbits 0098        __size_of__div_to_l_ 00BE  
                _Lcd_Clear 1B97             _spiReceiveWait 1B74             __end_of___flge 1F46  
           __end_of___fleq 1DF7             __end_of___wmul 1C81           _Lcd_Write_String 1D23  
              _BAUDCTLbits 0187             __end_of_fround 1578        start_initialization 07EC  
      __end_of__tdiv_to_l_ 1128          __size_of_Lcd_Init 0041          __size_of_Lcd_Port 0006  
          ___llmod@divisor 0070            ___llmod@counter 0079     __end_of_spiReceiveWait 1B7B  
               ?_Lcd_Clear 0070                   ??___flge 0078                   ??___fleq 0078  
                 ??___wmul 0074                  __Umul8_16 1C81                __pdataBANK0 006F  
          Lcd_Write_Char@a 0072                   ??_fround 0042              sprintf@tmpval 00B7  
                ___fladd@a 0056                  ___fladd@b 0052                 fround@prec 0051  
                ___flmul@a 0028                  ___flmul@b 0024                  ___flsub@a 0066  
                ___flsub@b 006A                  ___latbits 0002              __pcstackBANK0 0020  
            __pcstackBANK1 00A0          __size_of___xxtofl 00BA               _isdigit$1011 0070  
                 ?_Lcd_Cmd 0070                sprintf@flag 00B3                sprintf@eexp 00BB  
              sprintf@fval 00BD                sprintf@prec 00C2           ___lwdiv@dividend 0078  
          ?_spiReceiveWait 0070           ??_Lcd_Set_Cursor 0075                   ?___fladd 0052  
                 ?___awdiv 0077                   ?___flneg 0070                   ?___awmod 0070  
                 ?___flmul 0024                   ?___flsub 0066                   ?___fltol 0051  
                 ?___lldiv 0070                   ?___llmod 0070                  __npowers_ 0844  
               ?__Umul8_16 0070                   ?___lwdiv 0076                   ?___lwmod 0070  
                __pstrings 0800                __tdiv_to_l_ 106B               ??__div_to_l_ 0078  
                 ?_isdigit 0070                   ?_spiInit 0070                   ?_spiRead 0070  
         ___lwdiv@quotient 007B                   ?_sprintf 00A0             __size_of_scale 035F  
           __size_of_setup 0013       spiInit@sTransmitEdge 0072             ___wmul@product 0074  
                clear_ram0 1B7B                   _PIE1bits 008C         spiInit@sDataSample 0070  
                 Lcd_Cmd@a 0073         __end_of__div_to_l_ 11E6                ??_Lcd_Clear 0074  
              __stringbase 080F          ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071  
                 _Lcd_Init 1CE2                   _Lcd_Port 1B6E   __end_of_Lcd_Write_String 1D65  
         __size_of_Lcd_Cmd 001A                ??__Umul8_16 0072           __size_of___fladd 0288  
         __size_of___awdiv 0069           __size_of___flneg 000B           __size_of___awmod 0059  
         __size_of___flmul 0361           __size_of___flsub 0024           __size_of___fltol 007C  
         __size_of___lldiv 0066           __size_of___llmod 0054           __size_of___lwdiv 0044  
         __size_of___lwmod 003A                _fround$1210 004D                _fround$1211 0049  
       __end_of__stringtab 0810                 sprintf@val 00AF                   ___xxtofl 1F46  
         __size_of_isdigit 0012            ___lwdiv@divisor 0076            ___lwdiv@counter 007D  
                 __ptext10 1C81                   __ptext11 106B                   __ptext20 1B8C  
                 __ptext12 1128                   __ptext21 1EA4                   __ptext13 1F46  
                 __ptext30 1CE2                   __ptext22 1DA9                   __ptext14 1C5C  
                 __ptext31 1B97                   __ptext23 1B83                   __ptext15 1DF7  
                 __ptext32 1BDF                   __ptext24 1B74                   __ptext16 1005  
                 __ptext33 1B6E                   __ptext25 1BC9                   __ptext17 08C4  
                 __ptext26 1BB6                   __ptext18 1C38                   __ptext27 1D23  
                 __ptext19 1578                   __ptext28 1BF9                   __ptext29 1C14  
         __size_of_spiInit 0016           __size_of_spiRead 0009                   __powers_ 0810  
                 _esclavo1 00D1           __size_of_sprintf 077B              __size_of_main 0187  
             spiInit@sType 0073          spiInit@sClockIdle 0071                 _INTCONbits 000B  
                 isdigit@c 0071                   scale@scl 0050                  sprintf@ap 00AE  
         __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024                  sprintf@sp 00C1  
         __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072           ___lldiv@dividend 0074  
         ??_spiReceiveWait 0070                  stringcode 080A         Lcd_Set_Cursor@temp 0077  
             ?__tdiv_to_l_ 0070     __Umul8_16@multiplicand 0070                   sprintf@c 00C4  
                 sprintf@f 00A0           ___lldiv@quotient 0079            ___lwmod@divisor 0070  
          ___lwmod@counter 0075                   stringdir 080A                   stringtab 0800  
            ___fladd@signs 0062               ___fladd@aexp 0063               ___fladd@bexp 0064  
     __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
