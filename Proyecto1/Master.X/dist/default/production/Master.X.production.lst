

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Fri Feb 19 16:37:04 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2,group=1
    16                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2,group=3
    20                           	psect	text6,local,class=CODE,merge=1,delta=2,group=1
    21                           	psect	text7,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text23,local,class=CODE,merge=1,delta=2
    38                           	psect	text24,local,class=CODE,merge=1,delta=2
    39                           	psect	text25,local,class=CODE,merge=1,delta=2
    40                           	psect	text26,local,class=CODE,merge=1,delta=2
    41                           	psect	text27,local,class=CODE,merge=1,delta=2
    42                           	psect	text28,local,class=CODE,merge=1,delta=2
    43                           	psect	text29,local,class=CODE,merge=1,delta=2
    44                           	psect	text30,local,class=CODE,merge=1,delta=2
    45                           	psect	text31,local,class=CODE,merge=1,delta=2
    46                           	psect	text32,local,class=CODE,merge=1,delta=2
    47                           	psect	text33,local,class=CODE,merge=1,delta=2
    48                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    49                           	dabs	1,0x7E,2
    50  0000                     
    51                           ; Version 2.20
    52                           ; Generated 12/02/2020 GMT
    53                           ; 
    54                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    55                           ; All rights reserved.
    56                           ; 
    57                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    58                           ; 
    59                           ; Redistribution and use in source and binary forms, with or without modification, are
    60                           ; permitted provided that the following conditions are met:
    61                           ; 
    62                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    63                           ;        conditions and the following disclaimer.
    64                           ; 
    65                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    66                           ;        of conditions and the following disclaimer in the documentation and/or other
    67                           ;        materials provided with the distribution.
    68                           ; 
    69                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    70                           ;        software without specific prior written permission.
    71                           ; 
    72                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    73                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    74                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    75                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    76                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    77                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    78                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    79                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    80                           ; 
    81                           ; 
    82                           ; Code-generator required, PIC16F887 Definitions
    83                           ; 
    84                           ; SFR Addresses
    85  0000                     	;# 
    86  0001                     	;# 
    87  0002                     	;# 
    88  0003                     	;# 
    89  0004                     	;# 
    90  0005                     	;# 
    91  0006                     	;# 
    92  0007                     	;# 
    93  0008                     	;# 
    94  0009                     	;# 
    95  000A                     	;# 
    96  000B                     	;# 
    97  000C                     	;# 
    98  000D                     	;# 
    99  000E                     	;# 
   100  000E                     	;# 
   101  000F                     	;# 
   102  0010                     	;# 
   103  0011                     	;# 
   104  0012                     	;# 
   105  0013                     	;# 
   106  0014                     	;# 
   107  0015                     	;# 
   108  0015                     	;# 
   109  0016                     	;# 
   110  0017                     	;# 
   111  0018                     	;# 
   112  0019                     	;# 
   113  001A                     	;# 
   114  001B                     	;# 
   115  001B                     	;# 
   116  001C                     	;# 
   117  001D                     	;# 
   118  001E                     	;# 
   119  001F                     	;# 
   120  0081                     	;# 
   121  0085                     	;# 
   122  0086                     	;# 
   123  0087                     	;# 
   124  0088                     	;# 
   125  0089                     	;# 
   126  008C                     	;# 
   127  008D                     	;# 
   128  008E                     	;# 
   129  008F                     	;# 
   130  0090                     	;# 
   131  0091                     	;# 
   132  0092                     	;# 
   133  0093                     	;# 
   134  0093                     	;# 
   135  0093                     	;# 
   136  0094                     	;# 
   137  0095                     	;# 
   138  0096                     	;# 
   139  0097                     	;# 
   140  0098                     	;# 
   141  0099                     	;# 
   142  009A                     	;# 
   143  009B                     	;# 
   144  009C                     	;# 
   145  009D                     	;# 
   146  009E                     	;# 
   147  009F                     	;# 
   148  0105                     	;# 
   149  0107                     	;# 
   150  0108                     	;# 
   151  0109                     	;# 
   152  010C                     	;# 
   153  010C                     	;# 
   154  010D                     	;# 
   155  010E                     	;# 
   156  010F                     	;# 
   157  0185                     	;# 
   158  0187                     	;# 
   159  0188                     	;# 
   160  0189                     	;# 
   161  018C                     	;# 
   162  018D                     	;# 
   163  0000                     	;# 
   164  0001                     	;# 
   165  0002                     	;# 
   166  0003                     	;# 
   167  0004                     	;# 
   168  0005                     	;# 
   169  0006                     	;# 
   170  0007                     	;# 
   171  0008                     	;# 
   172  0009                     	;# 
   173  000A                     	;# 
   174  000B                     	;# 
   175  000C                     	;# 
   176  000D                     	;# 
   177  000E                     	;# 
   178  000E                     	;# 
   179  000F                     	;# 
   180  0010                     	;# 
   181  0011                     	;# 
   182  0012                     	;# 
   183  0013                     	;# 
   184  0014                     	;# 
   185  0015                     	;# 
   186  0015                     	;# 
   187  0016                     	;# 
   188  0017                     	;# 
   189  0018                     	;# 
   190  0019                     	;# 
   191  001A                     	;# 
   192  001B                     	;# 
   193  001B                     	;# 
   194  001C                     	;# 
   195  001D                     	;# 
   196  001E                     	;# 
   197  001F                     	;# 
   198  0081                     	;# 
   199  0085                     	;# 
   200  0086                     	;# 
   201  0087                     	;# 
   202  0088                     	;# 
   203  0089                     	;# 
   204  008C                     	;# 
   205  008D                     	;# 
   206  008E                     	;# 
   207  008F                     	;# 
   208  0090                     	;# 
   209  0091                     	;# 
   210  0092                     	;# 
   211  0093                     	;# 
   212  0093                     	;# 
   213  0093                     	;# 
   214  0094                     	;# 
   215  0095                     	;# 
   216  0096                     	;# 
   217  0097                     	;# 
   218  0098                     	;# 
   219  0099                     	;# 
   220  009A                     	;# 
   221  009B                     	;# 
   222  009C                     	;# 
   223  009D                     	;# 
   224  009E                     	;# 
   225  009F                     	;# 
   226  0105                     	;# 
   227  0107                     	;# 
   228  0108                     	;# 
   229  0109                     	;# 
   230  010C                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  0185                     	;# 
   236  0187                     	;# 
   237  0188                     	;# 
   238  0189                     	;# 
   239  018C                     	;# 
   240  018D                     	;# 
   241  0000                     	;# 
   242  0001                     	;# 
   243  0002                     	;# 
   244  0003                     	;# 
   245  0004                     	;# 
   246  0005                     	;# 
   247  0006                     	;# 
   248  0007                     	;# 
   249  0008                     	;# 
   250  0009                     	;# 
   251  000A                     	;# 
   252  000B                     	;# 
   253  000C                     	;# 
   254  000D                     	;# 
   255  000E                     	;# 
   256  000E                     	;# 
   257  000F                     	;# 
   258  0010                     	;# 
   259  0011                     	;# 
   260  0012                     	;# 
   261  0013                     	;# 
   262  0014                     	;# 
   263  0015                     	;# 
   264  0015                     	;# 
   265  0016                     	;# 
   266  0017                     	;# 
   267  0018                     	;# 
   268  0019                     	;# 
   269  001A                     	;# 
   270  001B                     	;# 
   271  001B                     	;# 
   272  001C                     	;# 
   273  001D                     	;# 
   274  001E                     	;# 
   275  001F                     	;# 
   276  0081                     	;# 
   277  0085                     	;# 
   278  0086                     	;# 
   279  0087                     	;# 
   280  0088                     	;# 
   281  0089                     	;# 
   282  008C                     	;# 
   283  008D                     	;# 
   284  008E                     	;# 
   285  008F                     	;# 
   286  0090                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0093                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0095                     	;# 
   294  0096                     	;# 
   295  0097                     	;# 
   296  0098                     	;# 
   297  0099                     	;# 
   298  009A                     	;# 
   299  009B                     	;# 
   300  009C                     	;# 
   301  009D                     	;# 
   302  009E                     	;# 
   303  009F                     	;# 
   304  0105                     	;# 
   305  0107                     	;# 
   306  0108                     	;# 
   307  0109                     	;# 
   308  010C                     	;# 
   309  010C                     	;# 
   310  010D                     	;# 
   311  010E                     	;# 
   312  010F                     	;# 
   313  0185                     	;# 
   314  0187                     	;# 
   315  0188                     	;# 
   316  0189                     	;# 
   317  018C                     	;# 
   318  018D                     	;# 
   319  0000                     	;# 
   320  0001                     	;# 
   321  0002                     	;# 
   322  0003                     	;# 
   323  0004                     	;# 
   324  0005                     	;# 
   325  0006                     	;# 
   326  0007                     	;# 
   327  0008                     	;# 
   328  0009                     	;# 
   329  000A                     	;# 
   330  000B                     	;# 
   331  000C                     	;# 
   332  000D                     	;# 
   333  000E                     	;# 
   334  000E                     	;# 
   335  000F                     	;# 
   336  0010                     	;# 
   337  0011                     	;# 
   338  0012                     	;# 
   339  0013                     	;# 
   340  0014                     	;# 
   341  0015                     	;# 
   342  0015                     	;# 
   343  0016                     	;# 
   344  0017                     	;# 
   345  0018                     	;# 
   346  0019                     	;# 
   347  001A                     	;# 
   348  001B                     	;# 
   349  001B                     	;# 
   350  001C                     	;# 
   351  001D                     	;# 
   352  001E                     	;# 
   353  001F                     	;# 
   354  0081                     	;# 
   355  0085                     	;# 
   356  0086                     	;# 
   357  0087                     	;# 
   358  0088                     	;# 
   359  0089                     	;# 
   360  008C                     	;# 
   361  008D                     	;# 
   362  008E                     	;# 
   363  008F                     	;# 
   364  0090                     	;# 
   365  0091                     	;# 
   366  0092                     	;# 
   367  0093                     	;# 
   368  0093                     	;# 
   369  0093                     	;# 
   370  0094                     	;# 
   371  0095                     	;# 
   372  0096                     	;# 
   373  0097                     	;# 
   374  0098                     	;# 
   375  0099                     	;# 
   376  009A                     	;# 
   377  009B                     	;# 
   378  009C                     	;# 
   379  009D                     	;# 
   380  009E                     	;# 
   381  009F                     	;# 
   382  0105                     	;# 
   383  0107                     	;# 
   384  0108                     	;# 
   385  0109                     	;# 
   386  010C                     	;# 
   387  010C                     	;# 
   388  010D                     	;# 
   389  010E                     	;# 
   390  010F                     	;# 
   391  0185                     	;# 
   392  0187                     	;# 
   393  0188                     	;# 
   394  0189                     	;# 
   395  018C                     	;# 
   396  018D                     	;# 
   397  0000                     	;# 
   398  0001                     	;# 
   399  0002                     	;# 
   400  0003                     	;# 
   401  0004                     	;# 
   402  0005                     	;# 
   403  0006                     	;# 
   404  0007                     	;# 
   405  0008                     	;# 
   406  0009                     	;# 
   407  000A                     	;# 
   408  000B                     	;# 
   409  000C                     	;# 
   410  000D                     	;# 
   411  000E                     	;# 
   412  000E                     	;# 
   413  000F                     	;# 
   414  0010                     	;# 
   415  0011                     	;# 
   416  0012                     	;# 
   417  0013                     	;# 
   418  0014                     	;# 
   419  0015                     	;# 
   420  0015                     	;# 
   421  0016                     	;# 
   422  0017                     	;# 
   423  0018                     	;# 
   424  0019                     	;# 
   425  001A                     	;# 
   426  001B                     	;# 
   427  001B                     	;# 
   428  001C                     	;# 
   429  001D                     	;# 
   430  001E                     	;# 
   431  001F                     	;# 
   432  0081                     	;# 
   433  0085                     	;# 
   434  0086                     	;# 
   435  0087                     	;# 
   436  0088                     	;# 
   437  0089                     	;# 
   438  008C                     	;# 
   439  008D                     	;# 
   440  008E                     	;# 
   441  008F                     	;# 
   442  0090                     	;# 
   443  0091                     	;# 
   444  0092                     	;# 
   445  0093                     	;# 
   446  0093                     	;# 
   447  0093                     	;# 
   448  0094                     	;# 
   449  0095                     	;# 
   450  0096                     	;# 
   451  0097                     	;# 
   452  0098                     	;# 
   453  0099                     	;# 
   454  009A                     	;# 
   455  009B                     	;# 
   456  009C                     	;# 
   457  009D                     	;# 
   458  009E                     	;# 
   459  009F                     	;# 
   460  0105                     	;# 
   461  0107                     	;# 
   462  0108                     	;# 
   463  0109                     	;# 
   464  010C                     	;# 
   465  010C                     	;# 
   466  010D                     	;# 
   467  010E                     	;# 
   468  010F                     	;# 
   469  0185                     	;# 
   470  0187                     	;# 
   471  0188                     	;# 
   472  0189                     	;# 
   473  018C                     	;# 
   474  018D                     	;# 
   475                           
   476                           	psect	idataBANK0
   477  0007                     __pidataBANK0:
   478                           
   479                           ;initializer for _banderaADC
   480  0007  3401               	retlw	1
   481                           
   482                           	psect	strings
   483  1000                     __pstrings:
   484  1000                     stringtab:
   485  1000                     __stringtab:
   486                           
   487                           ;	String table - string pointers are 1 byte each
   488  1000  1BFF               	btfsc	btemp+1,7
   489  1001  280A               	ljmp	stringcode
   490  1002  1383               	bcf	3,7
   491  1003  187F               	btfsc	btemp+1,0
   492  1004  1783               	bsf	3,7
   493  1005  0800               	movf	0,w
   494  1006  0A84               	incf	4,f
   495  1007  1903               	skipnz
   496  1008  0AFF               	incf	btemp+1,f
   497  1009  0008               	return
   498  100A                     stringcode:
   499  100A                     stringdir:
   500  100A  3010               	movlw	high stringdir
   501  100B  008A               	movwf	10
   502  100C  0804               	movf	4,w
   503  100D  0A84               	incf	4,f
   504  100E  0782               	addwf	2,f
   505  100F                     __stringbase:
   506  100F  3400               	retlw	0
   507  1010                     __end_of__stringtab:
   508  1010                     __powers_:
   509  1010  3400               	retlw	0
   510  1011  3400               	retlw	0
   511  1012  3480               	retlw	128
   512  1013  343F               	retlw	63
   513  1014  3400               	retlw	0
   514  1015  3400               	retlw	0
   515  1016  3420               	retlw	32
   516  1017  3441               	retlw	65
   517  1018  3400               	retlw	0
   518  1019  3400               	retlw	0
   519  101A  34C8               	retlw	200
   520  101B  3442               	retlw	66
   521  101C  3400               	retlw	0
   522  101D  3400               	retlw	0
   523  101E  347A               	retlw	122
   524  101F  3444               	retlw	68
   525  1020  3400               	retlw	0
   526  1021  3440               	retlw	64
   527  1022  341C               	retlw	28
   528  1023  3446               	retlw	70
   529  1024  3400               	retlw	0
   530  1025  3450               	retlw	80
   531  1026  34C3               	retlw	195
   532  1027  3447               	retlw	71
   533  1028  3400               	retlw	0
   534  1029  3424               	retlw	36
   535  102A  3474               	retlw	116
   536  102B  3449               	retlw	73
   537  102C  3480               	retlw	128
   538  102D  3496               	retlw	150
   539  102E  3418               	retlw	24
   540  102F  344B               	retlw	75
   541  1030  3420               	retlw	32
   542  1031  34BC               	retlw	188
   543  1032  34BE               	retlw	190
   544  1033  344C               	retlw	76
   545  1034  3428               	retlw	40
   546  1035  346B               	retlw	107
   547  1036  346E               	retlw	110
   548  1037  344E               	retlw	78
   549  1038  34F9               	retlw	249
   550  1039  3402               	retlw	2
   551  103A  3415               	retlw	21
   552  103B  3450               	retlw	80
   553  103C  34EC               	retlw	236
   554  103D  3478               	retlw	120
   555  103E  34AD               	retlw	173
   556  103F  3460               	retlw	96
   557  1040  34CA               	retlw	202
   558  1041  34F2               	retlw	242
   559  1042  3449               	retlw	73
   560  1043  3471               	retlw	113
   561  1044                     __end_of__powers_:
   562  1044                     __npowers_:
   563  1044  3400               	retlw	0
   564  1045  3400               	retlw	0
   565  1046  3480               	retlw	128
   566  1047  343F               	retlw	63
   567  1048  34CD               	retlw	205
   568  1049  34CC               	retlw	204
   569  104A  34CC               	retlw	204
   570  104B  343D               	retlw	61
   571  104C  340A               	retlw	10
   572  104D  34D7               	retlw	215
   573  104E  3423               	retlw	35
   574  104F  343C               	retlw	60
   575  1050  346F               	retlw	111
   576  1051  3412               	retlw	18
   577  1052  3483               	retlw	131
   578  1053  343A               	retlw	58
   579  1054  3417               	retlw	23
   580  1055  34B7               	retlw	183
   581  1056  34D1               	retlw	209
   582  1057  3438               	retlw	56
   583  1058  34AC               	retlw	172
   584  1059  34C5               	retlw	197
   585  105A  3427               	retlw	39
   586  105B  3437               	retlw	55
   587  105C  34BD               	retlw	189
   588  105D  3437               	retlw	55
   589  105E  3486               	retlw	134
   590  105F  3435               	retlw	53
   591  1060  3495               	retlw	149
   592  1061  34BF               	retlw	191
   593  1062  34D6               	retlw	214
   594  1063  3433               	retlw	51
   595  1064  3477               	retlw	119
   596  1065  34CC               	retlw	204
   597  1066  342B               	retlw	43
   598  1067  3432               	retlw	50
   599  1068  345F               	retlw	95
   600  1069  3470               	retlw	112
   601  106A  3489               	retlw	137
   602  106B  3430               	retlw	48
   603  106C  34FF               	retlw	255
   604  106D  34E6               	retlw	230
   605  106E  34DB               	retlw	219
   606  106F  342E               	retlw	46
   607  1070  3408               	retlw	8
   608  1071  34E5               	retlw	229
   609  1072  343C               	retlw	60
   610  1073  341E               	retlw	30
   611  1074  3460               	retlw	96
   612  1075  3442               	retlw	66
   613  1076  34A2               	retlw	162
   614  1077  340D               	retlw	13
   615  1078                     __end_of__npowers_:
   616  1078                     _dpowers:
   617  1078  3401               	retlw	1
   618  1079  3400               	retlw	0
   619  107A  3400               	retlw	0
   620  107B  3400               	retlw	0
   621  107C  340A               	retlw	10
   622  107D  3400               	retlw	0
   623  107E  3400               	retlw	0
   624  107F  3400               	retlw	0
   625  1080  3464               	retlw	100
   626  1081  3400               	retlw	0
   627  1082  3400               	retlw	0
   628  1083  3400               	retlw	0
   629  1084  34E8               	retlw	232
   630  1085  3403               	retlw	3
   631  1086  3400               	retlw	0
   632  1087  3400               	retlw	0
   633  1088  3410               	retlw	16
   634  1089  3427               	retlw	39
   635  108A  3400               	retlw	0
   636  108B  3400               	retlw	0
   637  108C  34A0               	retlw	160
   638  108D  3486               	retlw	134
   639  108E  3401               	retlw	1
   640  108F  3400               	retlw	0
   641  1090  3440               	retlw	64
   642  1091  3442               	retlw	66
   643  1092  340F               	retlw	15
   644  1093  3400               	retlw	0
   645  1094  3480               	retlw	128
   646  1095  3496               	retlw	150
   647  1096  3498               	retlw	152
   648  1097  3400               	retlw	0
   649  1098  3400               	retlw	0
   650  1099  34E1               	retlw	225
   651  109A  34F5               	retlw	245
   652  109B  3405               	retlw	5
   653  109C  3400               	retlw	0
   654  109D  34CA               	retlw	202
   655  109E  349A               	retlw	154
   656  109F  343B               	retlw	59
   657  10A0                     __end_of_dpowers:
   658  0014                     _SSPCON	set	20
   659  0019                     _TXREG	set	25
   660  000B                     _INTCONbits	set	11
   661  0018                     _RCSTAbits	set	24
   662  0013                     _SSPBUF	set	19
   663  0007                     _PORTCbits	set	7
   664  0005                     _PORTAbits	set	5
   665  0009                     _PORTE	set	9
   666  0008                     _PORTD	set	8
   667  0007                     _PORTC	set	7
   668  0009                     _PORTEbits	set	9
   669  0006                     _PORTB	set	6
   670  0094                     _SSPSTATbits	set	148
   671  0094                     _SSPSTAT	set	148
   672  0099                     _SPBRG	set	153
   673  008C                     _PIE1bits	set	140
   674  0098                     _TXSTAbits	set	152
   675  0086                     _TRISB	set	134
   676  0089                     _TRISE	set	137
   677  0087                     _TRISC	set	135
   678  0088                     _TRISD	set	136
   679  043B                     _TRISC3	set	1083
   680  043D                     _TRISC5	set	1085
   681  04C1                     _TRMT	set	1217
   682  0187                     _BAUDCTLbits	set	391
   683  0188                     _ANSEL	set	392
   684  10A0                     STR_1:
   685  10A0  3453               	retlw	83	;'S'
   686  10A1  3431               	retlw	49	;'1'
   687  10A2  343A               	retlw	58	;':'
   688  10A3  3420               	retlw	32	;' '
   689  10A4  3420               	retlw	32	;' '
   690  10A5  3420               	retlw	32	;' '
   691  10A6  3453               	retlw	83	;'S'
   692  10A7  3432               	retlw	50	;'2'
   693  10A8  343A               	retlw	58	;':'
   694  10A9  3420               	retlw	32	;' '
   695  10AA  3420               	retlw	32	;' '
   696  10AB  3420               	retlw	32	;' '
   697  10AC  3420               	retlw	32	;' '
   698  10AD  3453               	retlw	83	;'S'
   699  10AE  3433               	retlw	51	;'3'
   700  10AF  343A               	retlw	58	;':'
   701  10B0  3400               	retlw	0
   702  10B1                     STR_2:
   703  10B1  3425               	retlw	37	;'%'
   704  10B2  3433               	retlw	51	;'3'
   705  10B3  342E               	retlw	46	;'.'
   706  10B4  3432               	retlw	50	;'2'
   707  10B5  3466               	retlw	102	;'f'
   708  10B6  3456               	retlw	86	;'V'
   709  10B7  3400               	retlw	0
   710                           
   711                           	psect	cinit
   712  07EC                     start_initialization:	
   713                           ; #config settings
   714                           
   715  07EC                     __initialization:
   716                           
   717                           ; Initialize objects allocated to BANK0
   718  07EC  120A  118A  2007  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   719  07F1  00EF               	movwf	__pdataBANK0& (0+127)
   720                           
   721                           ; Clear objects allocated to BANK1
   722  07F2  1383               	bcf	3,7	;select IRP bank0
   723  07F3  30C9               	movlw	low __pbssBANK1
   724  07F4  0084               	movwf	4
   725  07F5  30E3               	movlw	low (__pbssBANK1+26)
   726  07F6  160A  158A  2435  120A  118A  	fcall	clear_ram0
   727                           
   728                           ; Clear objects allocated to BANK0
   729  07FB  01EE               	clrf	__pbssBANK0& (0+127)
   730  07FC                     end_of_initialization:	
   731                           ;End of C runtime variable initialization code
   732                           
   733  07FC                     __end_of__initialization:
   734  07FC  0183               	clrf	3
   735  07FD  120A  158A  2868   	ljmp	_main	;jump to C main() function
   736                           
   737                           	psect	bssBANK0
   738  006E                     __pbssBANK0:
   739  006E                     _mensaje:
   740  006E                     	ds	1
   741                           
   742                           	psect	dataBANK0
   743  006F                     __pdataBANK0:
   744  006F                     _banderaADC:
   745  006F                     	ds	1
   746                           
   747                           	psect	bssBANK1
   748  00C9                     __pbssBANK1:
   749  00C9                     _x:
   750  00C9                     	ds	4
   751  00CD                     _esclavo1:
   752  00CD                     	ds	1
   753  00CE                     _adc:
   754  00CE                     	ds	1
   755  00CF                     _s:
   756  00CF                     	ds	20
   757                           
   758                           	psect	clrtext
   759  1C35                     clear_ram0:	
   760                           ;	Called with FSR containing the base address, and
   761                           ;	W with the last address+1
   762                           
   763  1C35  0064               	clrwdt	;clear the watchdog before getting into this loop
   764  1C36                     clrloop0:
   765  1C36  0180               	clrf	0	;clear RAM location pointed to by FSR
   766  1C37  0A84               	incf	4,f	;increment pointer
   767  1C38  0604               	xorwf	4,w	;XOR with final address
   768  1C39  1903               	btfsc	3,2	;have we reached the end yet?
   769  1C3A  3400               	retlw	0	;all done for this memory range, return
   770  1C3B  0604               	xorwf	4,w	;XOR again to restore value
   771  1C3C  2C36               	goto	clrloop0	;do the next byte
   772                           
   773                           	psect	cstackBANK1
   774  00A0                     __pcstackBANK1:
   775  00A0                     ?_sprintf:
   776  00A0                     sprintf@f:	
   777                           ; 2 bytes @ 0x0
   778                           
   779                           
   780                           ; 1 bytes @ 0x0
   781  00A0                     	ds	5
   782  00A5                     ??_sprintf:
   783                           
   784                           ; 1 bytes @ 0x5
   785  00A5                     	ds	5
   786  00AA                     _sprintf$1210:
   787                           
   788                           ; 4 bytes @ 0xA
   789  00AA                     	ds	4
   790  00AE                     sprintf@ap:
   791                           
   792                           ; 1 bytes @ 0xE
   793  00AE                     	ds	1
   794  00AF                     sprintf@val:
   795                           
   796                           ; 4 bytes @ 0xF
   797  00AF                     	ds	4
   798  00B3                     sprintf@flag:
   799                           
   800                           ; 2 bytes @ 0x13
   801  00B3                     	ds	2
   802  00B5                     sprintf@width:
   803                           
   804                           ; 2 bytes @ 0x15
   805  00B5                     	ds	2
   806  00B7                     sprintf@tmpval:
   807                           
   808                           ; 4 bytes @ 0x17
   809  00B7                     	ds	4
   810  00BB                     sprintf@eexp:
   811                           
   812                           ; 2 bytes @ 0x1B
   813  00BB                     	ds	2
   814  00BD                     sprintf@fval:
   815                           
   816                           ; 4 bytes @ 0x1D
   817  00BD                     	ds	4
   818  00C1                     sprintf@sp:
   819                           
   820                           ; 1 bytes @ 0x21
   821  00C1                     	ds	1
   822  00C2                     sprintf@prec:
   823                           
   824                           ; 2 bytes @ 0x22
   825  00C2                     	ds	2
   826  00C4                     sprintf@c:
   827                           
   828                           ; 1 bytes @ 0x24
   829  00C4                     	ds	1
   830  00C5                     ??_main:
   831                           
   832                           ; 1 bytes @ 0x25
   833  00C5                     	ds	4
   834                           
   835                           	psect	cstackCOMMON
   836  0070                     __pcstackCOMMON:
   837  0070                     ?_isdigit:
   838  0070                     ?___fleq:	
   839                           ; 1 bit 
   840                           
   841  0070                     ?___flge:	
   842                           ; 1 bit 
   843                           
   844  0070                     ?_spiInit:	
   845                           ; 1 bit 
   846                           
   847  0070                     ?_spiRead:	
   848                           ; 1 bytes @ 0x0
   849                           
   850  0070                     ??_spiRead:	
   851                           ; 1 bytes @ 0x0
   852                           
   853  0070                     ??_isdigit:	
   854                           ; 1 bytes @ 0x0
   855                           
   856  0070                     ?_Lcd_Port:	
   857                           ; 1 bytes @ 0x0
   858                           
   859  0070                     ??_Lcd_Port:	
   860                           ; 1 bytes @ 0x0
   861                           
   862  0070                     ?_Lcd_Cmd:	
   863                           ; 1 bytes @ 0x0
   864                           
   865  0070                     ?_Lcd_Clear:	
   866                           ; 1 bytes @ 0x0
   867                           
   868  0070                     ?_Lcd_Init:	
   869                           ; 1 bytes @ 0x0
   870                           
   871  0070                     ?_Lcd_Write_Char:	
   872                           ; 1 bytes @ 0x0
   873                           
   874  0070                     ?_setup:	
   875                           ; 1 bytes @ 0x0
   876                           
   877  0070                     ??_setup:	
   878                           ; 1 bytes @ 0x0
   879                           
   880  0070                     ?_main:	
   881                           ; 1 bytes @ 0x0
   882                           
   883  0070                     ?_spiReceiveWait:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  0070                     ??_spiReceiveWait:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0070                     ?__Umul8_16:	
   890                           ; 1 bytes @ 0x0
   891                           
   892  0070                     ?___wmul:	
   893                           ; 2 bytes @ 0x0
   894                           
   895  0070                     ?___awmod:	
   896                           ; 2 bytes @ 0x0
   897                           
   898  0070                     ?___lwmod:	
   899                           ; 2 bytes @ 0x0
   900                           
   901  0070                     ?__tdiv_to_l_:	
   902                           ; 2 bytes @ 0x0
   903                           
   904  0070                     ?__div_to_l_:	
   905                           ; 4 bytes @ 0x0
   906                           
   907  0070                     ?___lldiv:	
   908                           ; 4 bytes @ 0x0
   909                           
   910  0070                     ?___flneg:	
   911                           ; 4 bytes @ 0x0
   912                           
   913  0070                     ?___llmod:	
   914                           ; 4 bytes @ 0x0
   915                           
   916  0070                     ?___xxtofl:	
   917                           ; 4 bytes @ 0x0
   918                           
   919  0070                     Lcd_Port@a:	
   920                           ; 4 bytes @ 0x0
   921                           
   922  0070                     spiInit@sDataSample:	
   923                           ; 1 bytes @ 0x0
   924                           
   925  0070                     __Umul8_16@multiplicand:	
   926                           ; 1 bytes @ 0x0
   927                           
   928  0070                     _isdigit$1008:	
   929                           ; 1 bytes @ 0x0
   930                           
   931  0070                     ___wmul@multiplier:	
   932                           ; 1 bytes @ 0x0
   933                           
   934  0070                     ___awmod@divisor:	
   935                           ; 2 bytes @ 0x0
   936                           
   937  0070                     ___lwmod@divisor:	
   938                           ; 2 bytes @ 0x0
   939                           
   940  0070                     ___lldiv@divisor:	
   941                           ; 2 bytes @ 0x0
   942                           
   943  0070                     __div_to_l_@f1:	
   944                           ; 4 bytes @ 0x0
   945                           
   946  0070                     ___fleq@ff1:	
   947                           ; 4 bytes @ 0x0
   948                           
   949  0070                     ___flge@ff1:	
   950                           ; 4 bytes @ 0x0
   951                           
   952  0070                     ___flneg@f1:	
   953                           ; 4 bytes @ 0x0
   954                           
   955  0070                     __tdiv_to_l_@f1:	
   956                           ; 4 bytes @ 0x0
   957                           
   958  0070                     ___llmod@divisor:	
   959                           ; 4 bytes @ 0x0
   960                           
   961  0070                     ___xxtofl@val:	
   962                           ; 4 bytes @ 0x0
   963                           
   964                           
   965                           ; 4 bytes @ 0x0
   966  0070                     	ds	1
   967  0071                     ??_Lcd_Cmd:
   968  0071                     ??_Lcd_Write_Char:	
   969                           ; 1 bytes @ 0x1
   970                           
   971  0071                     spiInit@sClockIdle:	
   972                           ; 1 bytes @ 0x1
   973                           
   974  0071                     isdigit@c:	
   975                           ; 1 bytes @ 0x1
   976                           
   977                           
   978                           ; 1 bytes @ 0x1
   979  0071                     	ds	1
   980  0072                     ??__Umul8_16:
   981  0072                     Lcd_Write_Char@a:	
   982                           ; 1 bytes @ 0x2
   983                           
   984  0072                     spiInit@sTransmitEdge:	
   985                           ; 1 bytes @ 0x2
   986                           
   987  0072                     ___wmul@multiplicand:	
   988                           ; 1 bytes @ 0x2
   989                           
   990  0072                     ___awmod@dividend:	
   991                           ; 2 bytes @ 0x2
   992                           
   993  0072                     ___lwmod@dividend:	
   994                           ; 2 bytes @ 0x2
   995                           
   996                           
   997                           ; 2 bytes @ 0x2
   998  0072                     	ds	1
   999  0073                     ??_spiInit:
  1000  0073                     ?_Lcd_Write_String:	
  1001                           ; 1 bytes @ 0x3
  1002                           
  1003  0073                     Lcd_Cmd@a:	
  1004                           ; 1 bytes @ 0x3
  1005                           
  1006  0073                     spiInit@sType:	
  1007                           ; 1 bytes @ 0x3
  1008                           
  1009  0073                     Lcd_Write_String@a:	
  1010                           ; 1 bytes @ 0x3
  1011                           
  1012                           
  1013                           ; 2 bytes @ 0x3
  1014  0073                     	ds	1
  1015  0074                     ??_Lcd_Clear:
  1016  0074                     ?_Lcd_Set_Cursor:	
  1017                           ; 1 bytes @ 0x4
  1018                           
  1019  0074                     ??_Lcd_Init:	
  1020                           ; 1 bytes @ 0x4
  1021                           
  1022  0074                     ??___wmul:	
  1023                           ; 1 bytes @ 0x4
  1024                           
  1025  0074                     ??___awmod:	
  1026                           ; 1 bytes @ 0x4
  1027                           
  1028  0074                     ??___flneg:	
  1029                           ; 1 bytes @ 0x4
  1030                           
  1031  0074                     ??___lwmod:	
  1032                           ; 1 bytes @ 0x4
  1033                           
  1034  0074                     ??___xxtofl:	
  1035                           ; 1 bytes @ 0x4
  1036                           
  1037  0074                     Lcd_Set_Cursor@b:	
  1038                           ; 1 bytes @ 0x4
  1039                           
  1040  0074                     ___wmul@product:	
  1041                           ; 1 bytes @ 0x4
  1042                           
  1043  0074                     __Umul8_16@product:	
  1044                           ; 2 bytes @ 0x4
  1045                           
  1046  0074                     ___lldiv@dividend:	
  1047                           ; 2 bytes @ 0x4
  1048                           
  1049  0074                     __div_to_l_@f2:	
  1050                           ; 4 bytes @ 0x4
  1051                           
  1052  0074                     ___fleq@ff2:	
  1053                           ; 4 bytes @ 0x4
  1054                           
  1055  0074                     ___flge@ff2:	
  1056                           ; 4 bytes @ 0x4
  1057                           
  1058  0074                     __tdiv_to_l_@f2:	
  1059                           ; 4 bytes @ 0x4
  1060                           
  1061  0074                     ___llmod@dividend:	
  1062                           ; 4 bytes @ 0x4
  1063                           
  1064                           
  1065                           ; 4 bytes @ 0x4
  1066  0074                     	ds	1
  1067  0075                     ??_Lcd_Set_Cursor:
  1068  0075                     ??_Lcd_Write_String:	
  1069                           ; 1 bytes @ 0x5
  1070                           
  1071  0075                     ___awmod@counter:	
  1072                           ; 1 bytes @ 0x5
  1073                           
  1074  0075                     ___lwmod@counter:	
  1075                           ; 1 bytes @ 0x5
  1076                           
  1077                           
  1078                           ; 1 bytes @ 0x5
  1079  0075                     	ds	1
  1080  0076                     ?___lwdiv:
  1081  0076                     Lcd_Set_Cursor@a:	
  1082                           ; 2 bytes @ 0x6
  1083                           
  1084  0076                     ___awmod@sign:	
  1085                           ; 1 bytes @ 0x6
  1086                           
  1087  0076                     ___lwdiv@divisor:	
  1088                           ; 1 bytes @ 0x6
  1089                           
  1090  0076                     __Umul8_16@word_mpld:	
  1091                           ; 2 bytes @ 0x6
  1092                           
  1093                           
  1094                           ; 2 bytes @ 0x6
  1095  0076                     	ds	1
  1096  0077                     ?___awdiv:
  1097  0077                     Lcd_Set_Cursor@temp:	
  1098                           ; 2 bytes @ 0x7
  1099                           
  1100  0077                     ___awdiv@divisor:	
  1101                           ; 1 bytes @ 0x7
  1102                           
  1103                           
  1104                           ; 2 bytes @ 0x7
  1105  0077                     	ds	1
  1106  0078                     ??__tdiv_to_l_:
  1107  0078                     ??__div_to_l_:	
  1108                           ; 1 bytes @ 0x8
  1109                           
  1110  0078                     ??___lldiv:	
  1111                           ; 1 bytes @ 0x8
  1112                           
  1113  0078                     ??___fleq:	
  1114                           ; 1 bytes @ 0x8
  1115                           
  1116  0078                     ??___flge:	
  1117                           ; 1 bytes @ 0x8
  1118                           
  1119  0078                     ??___llmod:	
  1120                           ; 1 bytes @ 0x8
  1121                           
  1122  0078                     __Umul8_16@multiplier:	
  1123                           ; 1 bytes @ 0x8
  1124                           
  1125  0078                     ___xxtofl@sign:	
  1126                           ; 1 bytes @ 0x8
  1127                           
  1128  0078                     Lcd_Write_String@i:	
  1129                           ; 1 bytes @ 0x8
  1130                           
  1131  0078                     ___lwdiv@dividend:	
  1132                           ; 2 bytes @ 0x8
  1133                           
  1134                           
  1135                           ; 2 bytes @ 0x8
  1136  0078                     	ds	1
  1137  0079                     ___llmod@counter:
  1138  0079                     ___xxtofl@exp:	
  1139                           ; 1 bytes @ 0x9
  1140                           
  1141  0079                     ___awdiv@dividend:	
  1142                           ; 1 bytes @ 0x9
  1143                           
  1144  0079                     ___lldiv@quotient:	
  1145                           ; 2 bytes @ 0x9
  1146                           
  1147                           
  1148                           ; 4 bytes @ 0x9
  1149  0079                     	ds	1
  1150  007A                     ??___lwdiv:
  1151  007A                     ___xxtofl@arg:	
  1152                           ; 1 bytes @ 0xA
  1153                           
  1154                           
  1155                           ; 4 bytes @ 0xA
  1156  007A                     	ds	1
  1157  007B                     ??___awdiv:
  1158  007B                     ___lwdiv@quotient:	
  1159                           ; 1 bytes @ 0xB
  1160                           
  1161                           
  1162                           ; 2 bytes @ 0xB
  1163  007B                     	ds	2
  1164  007D                     ___lldiv@counter:
  1165  007D                     ___lwdiv@counter:	
  1166                           ; 1 bytes @ 0xD
  1167                           
  1168                           
  1169                           ; 1 bytes @ 0xD
  1170  007D                     	ds	1
  1171  007E                     ??___flsub:
  1172                           
  1173                           	psect	cstackBANK0
  1174  0020                     __pcstackBANK0:	
  1175                           ; 1 bytes @ 0xE
  1176                           
  1177  0020                     ___awdiv@counter:
  1178  0020                     __div_to_l_@quot:	
  1179                           ; 1 bytes @ 0x0
  1180                           
  1181  0020                     __tdiv_to_l_@quot:	
  1182                           ; 4 bytes @ 0x0
  1183                           
  1184                           
  1185                           ; 4 bytes @ 0x0
  1186  0020                     	ds	1
  1187  0021                     ___awdiv@sign:
  1188                           
  1189                           ; 1 bytes @ 0x1
  1190  0021                     	ds	1
  1191  0022                     ___awdiv@quotient:
  1192                           
  1193                           ; 2 bytes @ 0x2
  1194  0022                     	ds	2
  1195  0024                     ?___flmul:
  1196  0024                     __div_to_l_@cntr:	
  1197                           ; 4 bytes @ 0x4
  1198                           
  1199  0024                     __tdiv_to_l_@cntr:	
  1200                           ; 1 bytes @ 0x4
  1201                           
  1202  0024                     ___flmul@b:	
  1203                           ; 1 bytes @ 0x4
  1204                           
  1205                           
  1206                           ; 4 bytes @ 0x4
  1207  0024                     	ds	1
  1208  0025                     __div_to_l_@exp1:
  1209  0025                     __tdiv_to_l_@exp1:	
  1210                           ; 1 bytes @ 0x5
  1211                           
  1212                           
  1213                           ; 1 bytes @ 0x5
  1214  0025                     	ds	3
  1215  0028                     ___flmul@a:
  1216                           
  1217                           ; 4 bytes @ 0x8
  1218  0028                     	ds	4
  1219  002C                     ??___flmul:
  1220                           
  1221                           ; 1 bytes @ 0xC
  1222  002C                     	ds	5
  1223  0031                     ___flmul@sign:
  1224                           
  1225                           ; 1 bytes @ 0x11
  1226  0031                     	ds	1
  1227  0032                     ___flmul@grs:
  1228                           
  1229                           ; 4 bytes @ 0x12
  1230  0032                     	ds	4
  1231  0036                     ___flmul@aexp:
  1232                           
  1233                           ; 1 bytes @ 0x16
  1234  0036                     	ds	1
  1235  0037                     ___flmul@bexp:
  1236                           
  1237                           ; 1 bytes @ 0x17
  1238  0037                     	ds	1
  1239  0038                     ___flmul@prod:
  1240                           
  1241                           ; 4 bytes @ 0x18
  1242  0038                     	ds	4
  1243  003C                     ___flmul@temp:
  1244                           
  1245                           ; 2 bytes @ 0x1C
  1246  003C                     	ds	2
  1247  003E                     ?_fround:
  1248  003E                     ?_scale:	
  1249                           ; 4 bytes @ 0x1E
  1250                           
  1251                           
  1252                           ; 4 bytes @ 0x1E
  1253  003E                     	ds	4
  1254  0042                     ??_fround:
  1255  0042                     ??_scale:	
  1256                           ; 1 bytes @ 0x22
  1257                           
  1258                           
  1259                           ; 1 bytes @ 0x22
  1260  0042                     	ds	7
  1261  0049                     _fround$1208:
  1262                           
  1263                           ; 4 bytes @ 0x29
  1264  0049                     	ds	3
  1265  004C                     _scale$1209:
  1266                           
  1267                           ; 4 bytes @ 0x2C
  1268  004C                     	ds	1
  1269  004D                     _fround$1207:
  1270                           
  1271                           ; 4 bytes @ 0x2D
  1272  004D                     	ds	3
  1273  0050                     scale@scl:
  1274                           
  1275                           ; 1 bytes @ 0x30
  1276  0050                     	ds	1
  1277  0051                     ?___fltol:
  1278  0051                     fround@prec:	
  1279                           ; 4 bytes @ 0x31
  1280                           
  1281  0051                     ___fltol@f1:	
  1282                           ; 1 bytes @ 0x31
  1283                           
  1284                           
  1285                           ; 4 bytes @ 0x31
  1286  0051                     	ds	1
  1287  0052                     ?___fladd:
  1288  0052                     ___fladd@b:	
  1289                           ; 4 bytes @ 0x32
  1290                           
  1291                           
  1292                           ; 4 bytes @ 0x32
  1293  0052                     	ds	3
  1294  0055                     ??___fltol:
  1295                           
  1296                           ; 1 bytes @ 0x35
  1297  0055                     	ds	1
  1298  0056                     ___fladd@a:
  1299                           
  1300                           ; 4 bytes @ 0x36
  1301  0056                     	ds	4
  1302  005A                     ??___fladd:
  1303  005A                     ___fltol@sign1:	
  1304                           ; 1 bytes @ 0x3A
  1305                           
  1306                           
  1307                           ; 1 bytes @ 0x3A
  1308  005A                     	ds	1
  1309  005B                     ___fltol@exp1:
  1310                           
  1311                           ; 1 bytes @ 0x3B
  1312  005B                     	ds	7
  1313  0062                     ___fladd@signs:
  1314                           
  1315                           ; 1 bytes @ 0x42
  1316  0062                     	ds	1
  1317  0063                     ___fladd@aexp:
  1318                           
  1319                           ; 1 bytes @ 0x43
  1320  0063                     	ds	1
  1321  0064                     ___fladd@bexp:
  1322                           
  1323                           ; 1 bytes @ 0x44
  1324  0064                     	ds	1
  1325  0065                     ___fladd@grs:
  1326                           
  1327                           ; 1 bytes @ 0x45
  1328  0065                     	ds	1
  1329  0066                     ?___flsub:
  1330  0066                     ___flsub@a:	
  1331                           ; 4 bytes @ 0x46
  1332                           
  1333                           
  1334                           ; 4 bytes @ 0x46
  1335  0066                     	ds	4
  1336  006A                     ___flsub@b:
  1337                           
  1338                           ; 4 bytes @ 0x4A
  1339  006A                     	ds	4
  1340                           
  1341                           	psect	maintext
  1342  0868                     __pmaintext:	
  1343 ;;
  1344 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1345 ;;
  1346 ;; *************** function _main *****************
  1347 ;; Defined at:
  1348 ;;		line 76 in file "main.c"
  1349 ;; Parameters:    Size  Location     Type
  1350 ;;		None
  1351 ;; Auto vars:     Size  Location     Type
  1352 ;;		None
  1353 ;; Return value:  Size  Location     Type
  1354 ;;                  1    wreg      void 
  1355 ;; Registers used:
  1356 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1357 ;; Tracked objects:
  1358 ;;		On entry : B00/0
  1359 ;;		On exit  : 0/0
  1360 ;;		Unchanged: 0/0
  1361 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1362 ;;      Params:         0       0       0       0       0
  1363 ;;      Locals:         0       0       0       0       0
  1364 ;;      Temps:          0       0       4       0       0
  1365 ;;      Totals:         0       0       4       0       0
  1366 ;;Total ram usage:        4 bytes
  1367 ;; Hardware stack levels required when called:    4
  1368 ;; This function calls:
  1369 ;;		_Lcd_Clear
  1370 ;;		_Lcd_Init
  1371 ;;		_Lcd_Set_Cursor
  1372 ;;		_Lcd_Write_String
  1373 ;;		___flmul
  1374 ;;		___xxtofl
  1375 ;;		_setup
  1376 ;;		_spiInit
  1377 ;;		_spiRead
  1378 ;;		_sprintf
  1379 ;; This function is called by:
  1380 ;;		Startup code after reset
  1381 ;; This function uses a non-reentrant model
  1382 ;;
  1383                           
  1384                           
  1385                           ;psect for function _main
  1386  0868                     _main:
  1387  0868                     l3411:	
  1388                           ;incstack = 0
  1389                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1390                           
  1391                           
  1392                           ;main.c: 79:     setup();
  1393  0868  160A  158A  2470  120A  158A  	fcall	_setup
  1394                           
  1395                           ;main.c: 82:     Lcd_Init();
  1396  086D  160A  158A  259C  120A  158A  	fcall	_Lcd_Init
  1397                           
  1398                           ;main.c: 83:     Lcd_Clear();
  1399  0872  160A  158A  2451  120A  158A  	fcall	_Lcd_Clear
  1400                           
  1401                           ;main.c: 85:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW
      +                          , SPI_IDLE_2_ACTIVE);
  1402  0877  01F0               	clrf	spiInit@sDataSample
  1403  0878  01F1               	clrf	spiInit@sClockIdle
  1404  0879  01F2               	clrf	spiInit@sTransmitEdge
  1405  087A  3020               	movlw	32
  1406  087B  160A  158A  2483  120A  158A  	fcall	_spiInit
  1407  0880                     l93:	
  1408                           ;main.c: 86:     while (1) {
  1409                           
  1410                           
  1411                           ;main.c: 90:         Lcd_Set_Cursor(1, 1);
  1412  0880  01F4               	clrf	Lcd_Set_Cursor@b
  1413  0881  0AF4               	incf	Lcd_Set_Cursor@b,f
  1414  0882  3001               	movlw	1
  1415  0883  160A  158A  24CE  120A  158A  	fcall	_Lcd_Set_Cursor
  1416  0888                     l3413:
  1417                           
  1418                           ;main.c: 91:         Lcd_Write_String("S1:   S2:    S3:");
  1419  0888  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1420  0889  00F3               	movwf	Lcd_Write_String@a
  1421  088A  3080               	movlw	128
  1422  088B  00F4               	movwf	Lcd_Write_String@a+1
  1423  088C  160A  158A  25DD  120A  158A  	fcall	_Lcd_Write_String
  1424  0891                     l3415:
  1425                           
  1426                           ;main.c: 92:         x = adc * 0.0195;
  1427  0891  303C               	movlw	60
  1428  0892  1283               	bcf	3,5	;RP0=0, select bank0
  1429  0893  1303               	bcf	3,6	;RP1=0, select bank0
  1430  0894  00A7               	movwf	___flmul@b+3
  1431  0895  309F               	movlw	159
  1432  0896  00A6               	movwf	___flmul@b+2
  1433  0897  30BE               	movlw	190
  1434  0898  00A5               	movwf	___flmul@b+1
  1435  0899  3077               	movlw	119
  1436  089A  00A4               	movwf	___flmul@b
  1437  089B  1683               	bsf	3,5	;RP0=1, select bank1
  1438  089C  1303               	bcf	3,6	;RP1=0, select bank1
  1439  089D  084E               	movf	_adc^(0+128),w
  1440  089E  00C5               	movwf	??_main^(0+128)
  1441  089F  01C6               	clrf	(??_main^(0+128)+1)
  1442  08A0  01C7               	clrf	(??_main^(0+128)+2)
  1443  08A1  01C8               	clrf	(??_main^(0+128)+3)
  1444  08A2  0848               	movf	(??_main+3)^(0+128),w
  1445  08A3  00F3               	movwf	___xxtofl@val+3
  1446  08A4  0847               	movf	(??_main+2)^(0+128),w
  1447  08A5  00F2               	movwf	___xxtofl@val+2
  1448  08A6  0846               	movf	(??_main+1)^(0+128),w
  1449  08A7  00F1               	movwf	___xxtofl@val+1
  1450  08A8  0845               	movf	??_main^(0+128),w
  1451  08A9  00F0               	movwf	___xxtofl@val
  1452  08AA  3001               	movlw	1
  1453  08AB  160A  118A  2138  120A  158A  	fcall	___xxtofl
  1454  08B0  0873               	movf	?___xxtofl+3,w
  1455  08B1  1283               	bcf	3,5	;RP0=0, select bank0
  1456  08B2  1303               	bcf	3,6	;RP1=0, select bank0
  1457  08B3  00AB               	movwf	___flmul@a+3
  1458  08B4  0872               	movf	?___xxtofl+2,w
  1459  08B5  00AA               	movwf	___flmul@a+2
  1460  08B6  0871               	movf	?___xxtofl+1,w
  1461  08B7  00A9               	movwf	___flmul@a+1
  1462  08B8  0870               	movf	?___xxtofl,w
  1463  08B9  00A8               	movwf	___flmul@a
  1464  08BA  120A  158A  249F  120A  158A  	fcall	___flmul
  1465  08BF  1283               	bcf	3,5	;RP0=0, select bank0
  1466  08C0  1303               	bcf	3,6	;RP1=0, select bank0
  1467  08C1  0827               	movf	?___flmul+3,w
  1468  08C2  1683               	bsf	3,5	;RP0=1, select bank1
  1469  08C3  1303               	bcf	3,6	;RP1=0, select bank1
  1470  08C4  00CC               	movwf	(_x+3)^(0+128)
  1471  08C5  1283               	bcf	3,5	;RP0=0, select bank0
  1472  08C6  1303               	bcf	3,6	;RP1=0, select bank0
  1473  08C7  0826               	movf	?___flmul+2,w
  1474  08C8  1683               	bsf	3,5	;RP0=1, select bank1
  1475  08C9  1303               	bcf	3,6	;RP1=0, select bank1
  1476  08CA  00CB               	movwf	(_x+2)^(0+128)
  1477  08CB  1283               	bcf	3,5	;RP0=0, select bank0
  1478  08CC  1303               	bcf	3,6	;RP1=0, select bank0
  1479  08CD  0825               	movf	?___flmul+1,w
  1480  08CE  1683               	bsf	3,5	;RP0=1, select bank1
  1481  08CF  1303               	bcf	3,6	;RP1=0, select bank1
  1482  08D0  00CA               	movwf	(_x+1)^(0+128)
  1483  08D1  1283               	bcf	3,5	;RP0=0, select bank0
  1484  08D2  1303               	bcf	3,6	;RP1=0, select bank0
  1485  08D3  0824               	movf	?___flmul,w
  1486  08D4  1683               	bsf	3,5	;RP0=1, select bank1
  1487  08D5  1303               	bcf	3,6	;RP1=0, select bank1
  1488  08D6  00C9               	movwf	_x^(0+128)
  1489  08D7                     l3417:
  1490                           
  1491                           ;main.c: 93:         Lcd_Set_Cursor(2, 1);
  1492  08D7  01F4               	clrf	Lcd_Set_Cursor@b
  1493  08D8  0AF4               	incf	Lcd_Set_Cursor@b,f
  1494  08D9  3002               	movlw	2
  1495  08DA  160A  158A  24CE  120A  158A  	fcall	_Lcd_Set_Cursor
  1496  08DF                     l3419:
  1497                           
  1498                           ;main.c: 94:         sprintf(s, "%3.2fV", x);
  1499  08DF  30A2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1500  08E0  1683               	bsf	3,5	;RP0=1, select bank1
  1501  08E1  1303               	bcf	3,6	;RP1=0, select bank1
  1502  08E2  00C5               	movwf	??_main^(0+128)
  1503  08E3  0845               	movf	??_main^(0+128),w
  1504  08E4  00A0               	movwf	sprintf@f^(0+128)
  1505  08E5  084C               	movf	(_x+3)^(0+128),w
  1506  08E6  00A4               	movwf	((?_sprintf+3)^(0+128)+1)
  1507  08E7  084B               	movf	(_x+2)^(0+128),w
  1508  08E8  00A3               	movwf	((?_sprintf+2)^(0+128)+1)
  1509  08E9  084A               	movf	(_x+1)^(0+128),w
  1510  08EA  00A2               	movwf	((?_sprintf+1)^(0+128)+1)
  1511  08EB  0849               	movf	_x^(0+128),w
  1512  08EC  00A1               	movwf	(?_sprintf^(0+128)+1)
  1513  08ED  30CF               	movlw	(low (_s| 0))& (0+255)
  1514  08EE  120A  118A  2071  120A  158A  	fcall	_sprintf
  1515  08F3                     l3421:
  1516                           
  1517                           ;main.c: 95:         Lcd_Write_String(s);
  1518  08F3  30CF               	movlw	(low (_s| 0))& (0+255)
  1519  08F4  00F3               	movwf	Lcd_Write_String@a
  1520  08F5  3000               	movlw	0
  1521  08F6  00F4               	movwf	Lcd_Write_String@a+1
  1522  08F7  160A  158A  25DD  120A  158A  	fcall	_Lcd_Write_String
  1523  08FC                     l3423:
  1524                           
  1525                           ;main.c: 97:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1526  08FC  3003               	movlw	3
  1527  08FD  1683               	bsf	3,5	;RP0=1, select bank1
  1528  08FE  1303               	bcf	3,6	;RP1=0, select bank1
  1529  08FF  00C6               	movwf	(??_main^(0+128)+1)
  1530  0900  3097               	movlw	151
  1531  0901  00C5               	movwf	??_main^(0+128)
  1532  0902                     u5607:
  1533  0902  0BC5               	decfsz	??_main^(0+128),f
  1534  0903  2902               	goto	u5607
  1535  0904  0BC6               	decfsz	(??_main^(0+128)+1),f
  1536  0905  2902               	goto	u5607
  1537  0906                     l3425:
  1538                           
  1539                           ;main.c: 98:         PORTCbits.RC0 = 0;
  1540  0906  1283               	bcf	3,5	;RP0=0, select bank0
  1541  0907  1303               	bcf	3,6	;RP1=0, select bank0
  1542  0908  1007               	bcf	7,0	;volatile
  1543  0909                     l3427:
  1544                           
  1545                           ;main.c: 99:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1546  0909  3003               	movlw	3
  1547  090A  1683               	bsf	3,5	;RP0=1, select bank1
  1548  090B  1303               	bcf	3,6	;RP1=0, select bank1
  1549  090C  00C6               	movwf	(??_main^(0+128)+1)
  1550  090D  3097               	movlw	151
  1551  090E  00C5               	movwf	??_main^(0+128)
  1552  090F                     u5617:
  1553  090F  0BC5               	decfsz	??_main^(0+128),f
  1554  0910  290F               	goto	u5617
  1555  0911  0BC6               	decfsz	(??_main^(0+128)+1),f
  1556  0912  290F               	goto	u5617
  1557  0913                     l3429:
  1558                           
  1559                           ;main.c: 100:         SSPBUF = 0;
  1560  0913  1283               	bcf	3,5	;RP0=0, select bank0
  1561  0914  1303               	bcf	3,6	;RP1=0, select bank0
  1562  0915  0193               	clrf	19	;volatile
  1563  0916                     l3431:
  1564                           
  1565                           ;main.c: 101:         adc = spiRead();
  1566  0916  160A  158A  243D  120A  158A  	fcall	_spiRead
  1567  091B  1683               	bsf	3,5	;RP0=1, select bank1
  1568  091C  1303               	bcf	3,6	;RP1=0, select bank1
  1569  091D  00C5               	movwf	??_main^(0+128)
  1570  091E  0845               	movf	??_main^(0+128),w
  1571  091F  00CE               	movwf	_adc^(0+128)
  1572  0920                     l3433:
  1573                           
  1574                           ;main.c: 102:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1575  0920  3003               	movlw	3
  1576  0921  1683               	bsf	3,5	;RP0=1, select bank1
  1577  0922  1303               	bcf	3,6	;RP1=0, select bank1
  1578  0923  00C6               	movwf	(??_main^(0+128)+1)
  1579  0924  3097               	movlw	151
  1580  0925  00C5               	movwf	??_main^(0+128)
  1581  0926                     u5627:
  1582  0926  0BC5               	decfsz	??_main^(0+128),f
  1583  0927  2926               	goto	u5627
  1584  0928  0BC6               	decfsz	(??_main^(0+128)+1),f
  1585  0929  2926               	goto	u5627
  1586  092A                     l3435:
  1587                           
  1588                           ;main.c: 103:         PORTCbits.RC0 = 1;
  1589  092A  1283               	bcf	3,5	;RP0=0, select bank0
  1590  092B  1303               	bcf	3,6	;RP1=0, select bank0
  1591  092C  1407               	bsf	7,0	;volatile
  1592  092D                     l3437:
  1593                           
  1594                           ;main.c: 104:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1595  092D  3003               	movlw	3
  1596  092E  1683               	bsf	3,5	;RP0=1, select bank1
  1597  092F  1303               	bcf	3,6	;RP1=0, select bank1
  1598  0930  00C7               	movwf	(??_main^(0+128)+2)
  1599  0931  3008               	movlw	8
  1600  0932  00C6               	movwf	(??_main^(0+128)+1)
  1601  0933  3076               	movlw	118
  1602  0934  00C5               	movwf	??_main^(0+128)
  1603  0935                     u5637:
  1604  0935  0BC5               	decfsz	??_main^(0+128),f
  1605  0936  2935               	goto	u5637
  1606  0937  0BC6               	decfsz	(??_main^(0+128)+1),f
  1607  0938  2935               	goto	u5637
  1608  0939  0BC7               	decfsz	(??_main^(0+128)+2),f
  1609  093A  2935               	goto	u5637
  1610  093B  0000               	nop
  1611  093C  2880               	goto	l93
  1612  093D  120A  118A  2800   	ljmp	start
  1613  0940                     __end_of_main:
  1614                           
  1615                           	psect	text1
  1616  0071                     __ptext1:	
  1617 ;; *************** function _sprintf *****************
  1618 ;; Defined at:
  1619 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  1620 ;; Parameters:    Size  Location     Type
  1621 ;;  sp              1    wreg     PTR unsigned char 
  1622 ;;		 -> s(20), 
  1623 ;;  f               1    0[BANK1 ] PTR const unsigned char 
  1624 ;;		 -> STR_2(7), 
  1625 ;; Auto vars:     Size  Location     Type
  1626 ;;  sp              1   33[BANK1 ] PTR unsigned char 
  1627 ;;		 -> s(20), 
  1628 ;;  fval            4   29[BANK1 ] PTR unsigned char 
  1629 ;;  tmpval          4   23[BANK1 ] struct .
  1630 ;;  val             4   15[BANK1 ] unsigned long 
  1631 ;;  prec            2   34[BANK1 ] int 
  1632 ;;  eexp            2   27[BANK1 ] int 
  1633 ;;  width           2   21[BANK1 ] int 
  1634 ;;  flag            2   19[BANK1 ] unsigned short 
  1635 ;;  cp              2    0        PTR const unsigned char 
  1636 ;;  len             2    0        unsigned int 
  1637 ;;  c               1   36[BANK1 ] unsigned char 
  1638 ;;  ap              1   14[BANK1 ] PTR void [1]
  1639 ;;		 -> ?_sprintf(2), 
  1640 ;;  d               1    0        unsigned char 
  1641 ;; Return value:  Size  Location     Type
  1642 ;;                  2    0[BANK1 ] int 
  1643 ;; Registers used:
  1644 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1645 ;; Tracked objects:
  1646 ;;		On entry : 0/0
  1647 ;;		On exit  : 0/0
  1648 ;;		Unchanged: 0/0
  1649 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1650 ;;      Params:         0       0       5       0       0
  1651 ;;      Locals:         0       0      27       0       0
  1652 ;;      Temps:          0       0       5       0       0
  1653 ;;      Totals:         0       0      37       0       0
  1654 ;;Total ram usage:       37 bytes
  1655 ;; Hardware stack levels used:    1
  1656 ;; Hardware stack levels required when called:    3
  1657 ;; This function calls:
  1658 ;;		___awdiv
  1659 ;;		___fladd
  1660 ;;		___fleq
  1661 ;;		___flge
  1662 ;;		___flmul
  1663 ;;		___flneg
  1664 ;;		___flsub
  1665 ;;		___fltol
  1666 ;;		___lldiv
  1667 ;;		___llmod
  1668 ;;		___wmul
  1669 ;;		___xxtofl
  1670 ;;		__div_to_l_
  1671 ;;		__tdiv_to_l_
  1672 ;;		_fround
  1673 ;;		_isdigit
  1674 ;;		_scale
  1675 ;; This function is called by:
  1676 ;;		_main
  1677 ;; This function uses a non-reentrant model
  1678 ;;
  1679                           
  1680                           
  1681                           ;psect for function _sprintf
  1682  0071                     _sprintf:
  1683                           
  1684                           ;incstack = 0
  1685                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1686                           ;sprintf@sp stored from wreg
  1687  0071  1683               	bsf	3,5	;RP0=1, select bank1
  1688  0072  1303               	bcf	3,6	;RP1=0, select bank1
  1689  0073  00C1               	movwf	sprintf@sp^(0+128)
  1690  0074                     l3143:
  1691                           
  1692                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  1693  0074  30A1               	movlw	(low ((?_sprintf| 0+1)))& (0+255)
  1694  0075  00A5               	movwf	??_sprintf^(0+128)
  1695  0076  0825               	movf	??_sprintf^(0+128),w
  1696  0077  00AE               	movwf	sprintf@ap^(0+128)
  1697                           
  1698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  1699  0078  2FD5               	goto	l3393
  1700  0079                     l3145:
  1701                           
  1702                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  1703  0079  3025               	movlw	37
  1704  007A  0644               	xorwf	sprintf@c^(0+128),w
  1705  007B  1903               	btfsc	3,2
  1706  007C  287E               	goto	u5131
  1707  007D  287F               	goto	u5130
  1708  007E                     u5131:
  1709  007E  288B               	goto	l3151
  1710  007F                     u5130:
  1711  007F                     l3147:
  1712                           
  1713                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  1714  007F  0844               	movf	sprintf@c^(0+128),w
  1715  0080  00A5               	movwf	??_sprintf^(0+128)
  1716  0081  0841               	movf	sprintf@sp^(0+128),w
  1717  0082  0084               	movwf	4
  1718  0083  0825               	movf	??_sprintf^(0+128),w
  1719  0084  1383               	bcf	3,7	;select IRP bank0
  1720  0085  0080               	movwf	0
  1721  0086                     l3149:
  1722  0086  3001               	movlw	1
  1723  0087  00A5               	movwf	??_sprintf^(0+128)
  1724  0088  0825               	movf	??_sprintf^(0+128),w
  1725  0089  07C1               	addwf	sprintf@sp^(0+128),f
  1726                           
  1727                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  1728  008A  2FD5               	goto	l3393
  1729  008B                     l3151:
  1730                           
  1731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  1732  008B  01B5               	clrf	sprintf@width^(0+128)
  1733  008C  01B6               	clrf	(sprintf@width+1)^(0+128)
  1734                           
  1735                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  1736  008D  01B3               	clrf	sprintf@flag^(0+128)
  1737  008E  01B4               	clrf	(sprintf@flag+1)^(0+128)
  1738  008F                     l3153:
  1739                           
  1740                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  1741  008F  0820               	movf	sprintf@f^(0+128),w
  1742  0090  0084               	movwf	4
  1743  0091  160A  118A  200A  120A  118A  	fcall	stringdir
  1744  0096  160A  158A  245E  120A  118A  	fcall	_isdigit
  1745  009B  1C03               	btfss	3,0
  1746  009C  289E               	goto	u5141
  1747  009D  289F               	goto	u5140
  1748  009E                     u5141:
  1749  009E  28DF               	goto	l3165
  1750  009F                     u5140:
  1751  009F                     l3155:
  1752                           
  1753                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  1754  009F  1683               	bsf	3,5	;RP0=1, select bank1
  1755  00A0  1303               	bcf	3,6	;RP1=0, select bank1
  1756  00A1  01B5               	clrf	sprintf@width^(0+128)
  1757  00A2  01B6               	clrf	(sprintf@width+1)^(0+128)
  1758  00A3                     l3157:
  1759                           
  1760                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  1761  00A3  300A               	movlw	10
  1762  00A4  00F0               	movwf	___wmul@multiplier
  1763  00A5  3000               	movlw	0
  1764  00A6  00F1               	movwf	___wmul@multiplier+1
  1765  00A7  1683               	bsf	3,5	;RP0=1, select bank1
  1766  00A8  1303               	bcf	3,6	;RP1=0, select bank1
  1767  00A9  0836               	movf	(sprintf@width+1)^(0+128),w
  1768  00AA  00F3               	movwf	___wmul@multiplicand+1
  1769  00AB  0835               	movf	sprintf@width^(0+128),w
  1770  00AC  00F2               	movwf	___wmul@multiplicand
  1771  00AD  160A  158A  2516  120A  118A  	fcall	___wmul
  1772  00B2  0871               	movf	?___wmul+1,w
  1773  00B3  1683               	bsf	3,5	;RP0=1, select bank1
  1774  00B4  1303               	bcf	3,6	;RP1=0, select bank1
  1775  00B5  00B6               	movwf	(sprintf@width+1)^(0+128)
  1776  00B6  0870               	movf	?___wmul,w
  1777  00B7  00B5               	movwf	sprintf@width^(0+128)
  1778  00B8                     l3159:
  1779                           
  1780                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  1781  00B8  0820               	movf	sprintf@f^(0+128),w
  1782  00B9  0084               	movwf	4
  1783  00BA  160A  118A  200A  120A  118A  	fcall	stringdir
  1784  00BF  3ED0               	addlw	208
  1785  00C0  00A5               	movwf	??_sprintf^(0+128)
  1786  00C1  30FF               	movlw	255
  1787  00C2  1803               	skipnc
  1788  00C3  3000               	movlw	0
  1789  00C4  00A6               	movwf	(??_sprintf^(0+128)+1)
  1790  00C5  0825               	movf	??_sprintf^(0+128),w
  1791  00C6  07B5               	addwf	sprintf@width^(0+128),f
  1792  00C7  1803               	skipnc
  1793  00C8  0AB6               	incf	(sprintf@width+1)^(0+128),f
  1794  00C9  0826               	movf	(??_sprintf+1)^(0+128),w
  1795  00CA  07B6               	addwf	(sprintf@width+1)^(0+128),f
  1796  00CB                     l3161:
  1797  00CB  3001               	movlw	1
  1798  00CC  00A5               	movwf	??_sprintf^(0+128)
  1799  00CD  0825               	movf	??_sprintf^(0+128),w
  1800  00CE  07A0               	addwf	sprintf@f^(0+128),f
  1801  00CF                     l3163:
  1802                           
  1803                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  1804  00CF  0820               	movf	sprintf@f^(0+128),w
  1805  00D0  0084               	movwf	4
  1806  00D1  160A  118A  200A  120A  118A  	fcall	stringdir
  1807  00D6  160A  158A  245E  120A  118A  	fcall	_isdigit
  1808  00DB  1803               	btfsc	3,0
  1809  00DC  28DE               	goto	u5151
  1810  00DD  28DF               	goto	u5150
  1811  00DE                     u5151:
  1812  00DE  28A3               	goto	l3157
  1813  00DF                     u5150:
  1814  00DF                     l3165:
  1815                           
  1816                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  1817  00DF  1683               	bsf	3,5	;RP0=1, select bank1
  1818  00E0  1303               	bcf	3,6	;RP1=0, select bank1
  1819  00E1  0820               	movf	sprintf@f^(0+128),w
  1820  00E2  0084               	movwf	4
  1821  00E3  160A  118A  200A  120A  118A  	fcall	stringdir
  1822  00E8  3A2E               	xorlw	46
  1823  00E9  1D03               	skipz
  1824  00EA  28EC               	goto	u5161
  1825  00EB  28ED               	goto	u5160
  1826  00EC                     u5161:
  1827  00EC  2932               	goto	l3181
  1828  00ED                     u5160:
  1829  00ED                     l3167:
  1830                           
  1831                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  1832  00ED  1734               	bsf	(sprintf@flag^(0+128)+1),6
  1833  00EE                     l3169:
  1834                           
  1835                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  1836  00EE  3001               	movlw	1
  1837  00EF  00A5               	movwf	??_sprintf^(0+128)
  1838  00F0  0825               	movf	??_sprintf^(0+128),w
  1839  00F1  07A0               	addwf	sprintf@f^(0+128),f
  1840  00F2                     l3171:
  1841                           
  1842                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  1843  00F2  01C2               	clrf	sprintf@prec^(0+128)
  1844  00F3  01C3               	clrf	(sprintf@prec+1)^(0+128)
  1845                           
  1846                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1847  00F4  2921               	goto	l3179
  1848  00F5                     l3173:
  1849                           
  1850                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  1851  00F5  300A               	movlw	10
  1852  00F6  00F0               	movwf	___wmul@multiplier
  1853  00F7  3000               	movlw	0
  1854  00F8  00F1               	movwf	___wmul@multiplier+1
  1855  00F9  1683               	bsf	3,5	;RP0=1, select bank1
  1856  00FA  1303               	bcf	3,6	;RP1=0, select bank1
  1857  00FB  0843               	movf	(sprintf@prec+1)^(0+128),w
  1858  00FC  00F3               	movwf	___wmul@multiplicand+1
  1859  00FD  0842               	movf	sprintf@prec^(0+128),w
  1860  00FE  00F2               	movwf	___wmul@multiplicand
  1861  00FF  160A  158A  2516  120A  118A  	fcall	___wmul
  1862  0104  0871               	movf	?___wmul+1,w
  1863  0105  1683               	bsf	3,5	;RP0=1, select bank1
  1864  0106  1303               	bcf	3,6	;RP1=0, select bank1
  1865  0107  00C3               	movwf	(sprintf@prec+1)^(0+128)
  1866  0108  0870               	movf	?___wmul,w
  1867  0109  00C2               	movwf	sprintf@prec^(0+128)
  1868  010A                     l3175:
  1869                           
  1870                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  1871  010A  0820               	movf	sprintf@f^(0+128),w
  1872  010B  0084               	movwf	4
  1873  010C  160A  118A  200A  120A  118A  	fcall	stringdir
  1874  0111  3ED0               	addlw	208
  1875  0112  00A5               	movwf	??_sprintf^(0+128)
  1876  0113  30FF               	movlw	255
  1877  0114  1803               	skipnc
  1878  0115  3000               	movlw	0
  1879  0116  00A6               	movwf	(??_sprintf^(0+128)+1)
  1880  0117  0825               	movf	??_sprintf^(0+128),w
  1881  0118  07C2               	addwf	sprintf@prec^(0+128),f
  1882  0119  1803               	skipnc
  1883  011A  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  1884  011B  0826               	movf	(??_sprintf+1)^(0+128),w
  1885  011C  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  1886  011D                     l3177:
  1887  011D  3001               	movlw	1
  1888  011E  00A5               	movwf	??_sprintf^(0+128)
  1889  011F  0825               	movf	??_sprintf^(0+128),w
  1890  0120  07A0               	addwf	sprintf@f^(0+128),f
  1891  0121                     l3179:
  1892                           
  1893                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  1894  0121  0820               	movf	sprintf@f^(0+128),w
  1895  0122  0084               	movwf	4
  1896  0123  160A  118A  200A  120A  118A  	fcall	stringdir
  1897  0128  160A  158A  245E  120A  118A  	fcall	_isdigit
  1898  012D  1803               	btfsc	3,0
  1899  012E  2930               	goto	u5171
  1900  012F  2931               	goto	u5170
  1901  0130                     u5171:
  1902  0130  28F5               	goto	l3173
  1903  0131                     u5170:
  1904  0131  2938               	goto	l3187
  1905  0132                     l3181:
  1906                           
  1907                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  1908  0132  01C2               	clrf	sprintf@prec^(0+128)
  1909  0133  01C3               	clrf	(sprintf@prec+1)^(0+128)
  1910  0134                     l3183:
  1911                           
  1912                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  1913  0134  1634               	bsf	(sprintf@flag^(0+128)+1),4
  1914  0135  2938               	goto	l3187
  1915  0136                     l303:	
  1916                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  1917                           
  1918                           
  1919                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  1920  0136  1534               	bsf	(sprintf@flag^(0+128)+1),2
  1921                           
  1922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  1923  0137  2954               	goto	l3189
  1924  0138                     l3187:
  1925  0138  3001               	movlw	1
  1926  0139  1683               	bsf	3,5	;RP0=1, select bank1
  1927  013A  1303               	bcf	3,6	;RP1=0, select bank1
  1928  013B  07A0               	addwf	sprintf@f^(0+128),f
  1929  013C  30FF               	movlw	-1
  1930  013D  0720               	addwf	sprintf@f^(0+128),w
  1931  013E  0084               	movwf	4
  1932  013F  160A  118A  200A  120A  118A  	fcall	stringdir
  1933  0144  00C4               	movwf	sprintf@c^(0+128)
  1934  0145  00A5               	movwf	??_sprintf^(0+128)
  1935  0146  01A6               	clrf	(??_sprintf^(0+128)+1)
  1936                           
  1937                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1938                           ; Switch size 1, requested type "simple"
  1939                           ; Number of cases is 1, Range of values is 0 to 0
  1940                           ; switch strategies available:
  1941                           ; Name         Instructions Cycles
  1942                           ; simple_byte            4     3 (average)
  1943                           ; direct_byte           11     8 (fixed)
  1944                           ; jumptable            260     6 (fixed)
  1945                           ;	Chosen strategy is simple_byte
  1946  0147  0826               	movf	(??_sprintf+1)^(0+128),w
  1947  0148  3A00               	xorlw	0	; case 0
  1948  0149  1903               	skipnz
  1949  014A  294C               	goto	l3469
  1950  014B  2FD5               	goto	l3393
  1951  014C                     l3469:
  1952                           
  1953                           ; Switch size 1, requested type "simple"
  1954                           ; Number of cases is 2, Range of values is 0 to 102
  1955                           ; switch strategies available:
  1956                           ; Name         Instructions Cycles
  1957                           ; simple_byte            7     4 (average)
  1958                           ; jumptable            260     6 (fixed)
  1959                           ;	Chosen strategy is simple_byte
  1960  014C  0825               	movf	??_sprintf^(0+128),w
  1961  014D  3A00               	xorlw	0	; case 0
  1962  014E  1903               	skipnz
  1963  014F  2FE7               	goto	l3395
  1964  0150  3A66               	xorlw	102	; case 102
  1965  0151  1903               	skipnz
  1966  0152  2936               	goto	l303
  1967  0153  2FD5               	goto	l3393
  1968  0154                     l3189:
  1969                           
  1970                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  1971  0154  3000               	movlw	0
  1972  0155  0533               	andwf	sprintf@flag^(0+128),w
  1973  0156  00A5               	movwf	??_sprintf^(0+128)
  1974  0157  3007               	movlw	7
  1975  0158  0534               	andwf	(sprintf@flag+1)^(0+128),w
  1976  0159  00A6               	movwf	(??_sprintf+1)^(0+128)
  1977  015A  0825               	movf	??_sprintf^(0+128),w
  1978  015B  0426               	iorwf	(??_sprintf^(0+128)+1),w
  1979  015C  1903               	btfsc	3,2
  1980  015D  295F               	goto	u5181
  1981  015E  2960               	goto	u5180
  1982  015F                     u5181:
  1983  015F  2F12               	goto	l3347
  1984  0160                     u5180:
  1985  0160                     l3191:
  1986                           
  1987                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  1988  0160  1E34               	btfss	(sprintf@flag+1)^(0+128),4
  1989  0161  2963               	goto	u5191
  1990  0162  2964               	goto	u5190
  1991  0163                     u5191:
  1992  0163  2968               	goto	l3195
  1993  0164                     u5190:
  1994  0164                     l3193:
  1995                           
  1996                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  1997  0164  3006               	movlw	6
  1998  0165  00C2               	movwf	sprintf@prec^(0+128)
  1999  0166  3000               	movlw	0
  2000  0167  00C3               	movwf	(sprintf@prec^(0+128)+1)
  2001  0168                     l3195:
  2002                           
  2003                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2004  0168  082E               	movf	sprintf@ap^(0+128),w
  2005  0169  0084               	movwf	4
  2006  016A  1383               	bcf	3,7	;select IRP bank0
  2007  016B  0800               	movf	0,w
  2008  016C  00BD               	movwf	sprintf@fval^(0+128)
  2009  016D  0A84               	incf	4,f
  2010  016E  0800               	movf	0,w
  2011  016F  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2012  0170  0A84               	incf	4,f
  2013  0171  0800               	movf	0,w
  2014  0172  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2015  0173  0A84               	incf	4,f
  2016  0174  0800               	movf	0,w
  2017  0175  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2018  0176                     l3197:
  2019  0176  3004               	movlw	4
  2020  0177  00A5               	movwf	??_sprintf^(0+128)
  2021  0178  0825               	movf	??_sprintf^(0+128),w
  2022  0179  07AE               	addwf	sprintf@ap^(0+128),f
  2023  017A                     l3199:
  2024                           
  2025                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2026  017A  0840               	movf	(sprintf@fval+3)^(0+128),w
  2027  017B  00F3               	movwf	___flge@ff1+3
  2028  017C  083F               	movf	(sprintf@fval+2)^(0+128),w
  2029  017D  00F2               	movwf	___flge@ff1+2
  2030  017E  083E               	movf	(sprintf@fval+1)^(0+128),w
  2031  017F  00F1               	movwf	___flge@ff1+1
  2032  0180  083D               	movf	sprintf@fval^(0+128),w
  2033  0181  00F0               	movwf	___flge@ff1
  2034  0182  3000               	movlw	0
  2035  0183  00F7               	movwf	___flge@ff2+3
  2036  0184  3000               	movlw	0
  2037  0185  00F6               	movwf	___flge@ff2+2
  2038  0186  3000               	movlw	0
  2039  0187  00F5               	movwf	___flge@ff2+1
  2040  0188  3000               	movlw	0
  2041  0189  00F4               	movwf	___flge@ff2
  2042  018A  160A  158A  275E  120A  118A  	fcall	___flge
  2043  018F  1803               	btfsc	3,0
  2044  0190  2992               	goto	u5201
  2045  0191  2993               	goto	u5200
  2046  0192                     u5201:
  2047  0192  29B0               	goto	l3205
  2048  0193                     u5200:
  2049  0193                     l3201:
  2050                           
  2051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2052  0193  1683               	bsf	3,5	;RP0=1, select bank1
  2053  0194  1303               	bcf	3,6	;RP1=0, select bank1
  2054  0195  0840               	movf	(sprintf@fval+3)^(0+128),w
  2055  0196  00F3               	movwf	___flneg@f1+3
  2056  0197  083F               	movf	(sprintf@fval+2)^(0+128),w
  2057  0198  00F2               	movwf	___flneg@f1+2
  2058  0199  083E               	movf	(sprintf@fval+1)^(0+128),w
  2059  019A  00F1               	movwf	___flneg@f1+1
  2060  019B  083D               	movf	sprintf@fval^(0+128),w
  2061  019C  00F0               	movwf	___flneg@f1
  2062  019D  160A  158A  2446  120A  118A  	fcall	___flneg
  2063  01A2  0873               	movf	?___flneg+3,w
  2064  01A3  1683               	bsf	3,5	;RP0=1, select bank1
  2065  01A4  1303               	bcf	3,6	;RP1=0, select bank1
  2066  01A5  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2067  01A6  0872               	movf	?___flneg+2,w
  2068  01A7  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2069  01A8  0871               	movf	?___flneg+1,w
  2070  01A9  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2071  01AA  0870               	movf	?___flneg,w
  2072  01AB  00BD               	movwf	sprintf@fval^(0+128)
  2073  01AC                     l3203:
  2074                           
  2075                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2076  01AC  3003               	movlw	3
  2077  01AD  04B3               	iorwf	sprintf@flag^(0+128),f
  2078  01AE  3000               	movlw	0
  2079  01AF  04B4               	iorwf	(sprintf@flag+1)^(0+128),f
  2080  01B0                     l3205:
  2081                           
  2082                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2083  01B0  1683               	bsf	3,5	;RP0=1, select bank1
  2084  01B1  1303               	bcf	3,6	;RP1=0, select bank1
  2085  01B2  01BB               	clrf	sprintf@eexp^(0+128)
  2086  01B3  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  2087  01B4                     l3207:
  2088                           
  2089                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2090  01B4  0840               	movf	(sprintf@fval+3)^(0+128),w
  2091  01B5  00F3               	movwf	___fleq@ff1+3
  2092  01B6  083F               	movf	(sprintf@fval+2)^(0+128),w
  2093  01B7  00F2               	movwf	___fleq@ff1+2
  2094  01B8  083E               	movf	(sprintf@fval+1)^(0+128),w
  2095  01B9  00F1               	movwf	___fleq@ff1+1
  2096  01BA  083D               	movf	sprintf@fval^(0+128),w
  2097  01BB  00F0               	movwf	___fleq@ff1
  2098  01BC  3000               	movlw	0
  2099  01BD  00F7               	movwf	___fleq@ff2+3
  2100  01BE  3000               	movlw	0
  2101  01BF  00F6               	movwf	___fleq@ff2+2
  2102  01C0  3000               	movlw	0
  2103  01C1  00F5               	movwf	___fleq@ff2+1
  2104  01C2  3000               	movlw	0
  2105  01C3  00F4               	movwf	___fleq@ff2
  2106  01C4  160A  158A  2663  120A  118A  	fcall	___fleq
  2107  01C9  1803               	btfsc	3,0
  2108  01CA  29CC               	goto	u5211
  2109  01CB  29CD               	goto	u5210
  2110  01CC                     u5211:
  2111  01CC  2ABD               	goto	l3233
  2112  01CD                     u5210:
  2113  01CD                     l3209:
  2114                           
  2115                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2116  01CD  1003               	clrc
  2117  01CE  1683               	bsf	3,5	;RP0=1, select bank1
  2118  01CF  1303               	bcf	3,6	;RP1=0, select bank1
  2119  01D0  0D3F               	rlf	(sprintf@fval+2)^(0+128),w
  2120  01D1  0D40               	rlf	(sprintf@fval+3)^(0+128),w
  2121  01D2  3E82               	addlw	130
  2122  01D3  00BB               	movwf	sprintf@eexp^(0+128)
  2123  01D4  30FF               	movlw	255
  2124  01D5  1803               	skipnc
  2125  01D6  3000               	movlw	0
  2126  01D7  00BC               	movwf	(sprintf@eexp^(0+128)+1)
  2127  01D8                     l3211:
  2128                           
  2129                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2130  01D8  30FF               	movlw	255
  2131  01D9  07BB               	addwf	sprintf@eexp^(0+128),f
  2132  01DA  1803               	skipnc
  2133  01DB  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2134  01DC  30FF               	movlw	255
  2135  01DD  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2136  01DE                     l3213:
  2137                           
  2138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2139  01DE  3003               	movlw	3
  2140  01DF  00F0               	movwf	___wmul@multiplier
  2141  01E0  3000               	movlw	0
  2142  01E1  00F1               	movwf	___wmul@multiplier+1
  2143  01E2  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2144  01E3  00F3               	movwf	___wmul@multiplicand+1
  2145  01E4  083B               	movf	sprintf@eexp^(0+128),w
  2146  01E5  00F2               	movwf	___wmul@multiplicand
  2147  01E6  160A  158A  2516  120A  118A  	fcall	___wmul
  2148  01EB  0871               	movf	?___wmul+1,w
  2149  01EC  1683               	bsf	3,5	;RP0=1, select bank1
  2150  01ED  1303               	bcf	3,6	;RP1=0, select bank1
  2151  01EE  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2152  01EF  0870               	movf	?___wmul,w
  2153  01F0  00BB               	movwf	sprintf@eexp^(0+128)
  2154  01F1                     l3215:
  2155                           
  2156                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2157  01F1  300A               	movlw	10
  2158  01F2  00F7               	movwf	___awdiv@divisor
  2159  01F3  3000               	movlw	0
  2160  01F4  00F8               	movwf	___awdiv@divisor+1
  2161  01F5  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2162  01F6  00FA               	movwf	___awdiv@dividend+1
  2163  01F7  083B               	movf	sprintf@eexp^(0+128),w
  2164  01F8  00F9               	movwf	___awdiv@dividend
  2165  01F9  120A  118A  2008  120A  118A  	fcall	___awdiv
  2166  01FE  0878               	movf	?___awdiv+1,w
  2167  01FF  1683               	bsf	3,5	;RP0=1, select bank1
  2168  0200  1303               	bcf	3,6	;RP1=0, select bank1
  2169  0201  00BC               	movwf	(sprintf@eexp+1)^(0+128)
  2170  0202  0877               	movf	?___awdiv,w
  2171  0203  00BB               	movwf	sprintf@eexp^(0+128)
  2172  0204                     l3217:
  2173                           
  2174                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2175  0204  1FBC               	btfss	(sprintf@eexp+1)^(0+128),7
  2176  0205  2A07               	goto	u5221
  2177  0206  2A08               	goto	u5220
  2178  0207                     u5221:
  2179  0207  2A0E               	goto	l3221
  2180  0208                     u5220:
  2181  0208                     l3219:
  2182                           
  2183                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2184  0208  30FF               	movlw	255
  2185  0209  07BB               	addwf	sprintf@eexp^(0+128),f
  2186  020A  1803               	skipnc
  2187  020B  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2188  020C  30FF               	movlw	255
  2189  020D  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2190  020E                     l3221:
  2191                           
  2192                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2193  020E  033B               	decf	sprintf@eexp^(0+128),w
  2194  020F  3AFF               	xorlw	255
  2195  0210  120A  158A  2140  120A  118A  	fcall	_scale
  2196  0215  1283               	bcf	3,5	;RP0=0, select bank0
  2197  0216  1303               	bcf	3,6	;RP1=0, select bank0
  2198  0217  0841               	movf	?_scale+3,w
  2199  0218  1683               	bsf	3,5	;RP0=1, select bank1
  2200  0219  1303               	bcf	3,6	;RP1=0, select bank1
  2201  021A  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2202  021B  1283               	bcf	3,5	;RP0=0, select bank0
  2203  021C  1303               	bcf	3,6	;RP1=0, select bank0
  2204  021D  0840               	movf	?_scale+2,w
  2205  021E  1683               	bsf	3,5	;RP0=1, select bank1
  2206  021F  1303               	bcf	3,6	;RP1=0, select bank1
  2207  0220  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2208  0221  1283               	bcf	3,5	;RP0=0, select bank0
  2209  0222  1303               	bcf	3,6	;RP1=0, select bank0
  2210  0223  083F               	movf	?_scale+1,w
  2211  0224  1683               	bsf	3,5	;RP0=1, select bank1
  2212  0225  1303               	bcf	3,6	;RP1=0, select bank1
  2213  0226  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2214  0227  1283               	bcf	3,5	;RP0=0, select bank0
  2215  0228  1303               	bcf	3,6	;RP1=0, select bank0
  2216  0229  083E               	movf	?_scale,w
  2217  022A  1683               	bsf	3,5	;RP0=1, select bank1
  2218  022B  1303               	bcf	3,6	;RP1=0, select bank1
  2219  022C  00B7               	movwf	sprintf@tmpval^(0+128)
  2220  022D                     l3223:
  2221                           
  2222                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2223  022D  0840               	movf	(sprintf@fval+3)^(0+128),w
  2224  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2225  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2226  0230  00A7               	movwf	___flmul@b+3
  2227  0231  1683               	bsf	3,5	;RP0=1, select bank1
  2228  0232  1303               	bcf	3,6	;RP1=0, select bank1
  2229  0233  083F               	movf	(sprintf@fval+2)^(0+128),w
  2230  0234  1283               	bcf	3,5	;RP0=0, select bank0
  2231  0235  1303               	bcf	3,6	;RP1=0, select bank0
  2232  0236  00A6               	movwf	___flmul@b+2
  2233  0237  1683               	bsf	3,5	;RP0=1, select bank1
  2234  0238  1303               	bcf	3,6	;RP1=0, select bank1
  2235  0239  083E               	movf	(sprintf@fval+1)^(0+128),w
  2236  023A  1283               	bcf	3,5	;RP0=0, select bank0
  2237  023B  1303               	bcf	3,6	;RP1=0, select bank0
  2238  023C  00A5               	movwf	___flmul@b+1
  2239  023D  1683               	bsf	3,5	;RP0=1, select bank1
  2240  023E  1303               	bcf	3,6	;RP1=0, select bank1
  2241  023F  083D               	movf	sprintf@fval^(0+128),w
  2242  0240  1283               	bcf	3,5	;RP0=0, select bank0
  2243  0241  1303               	bcf	3,6	;RP1=0, select bank0
  2244  0242  00A4               	movwf	___flmul@b
  2245  0243  1683               	bsf	3,5	;RP0=1, select bank1
  2246  0244  1303               	bcf	3,6	;RP1=0, select bank1
  2247  0245  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2248  0246  1283               	bcf	3,5	;RP0=0, select bank0
  2249  0247  1303               	bcf	3,6	;RP1=0, select bank0
  2250  0248  00AB               	movwf	___flmul@a+3
  2251  0249  1683               	bsf	3,5	;RP0=1, select bank1
  2252  024A  1303               	bcf	3,6	;RP1=0, select bank1
  2253  024B  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2254  024C  1283               	bcf	3,5	;RP0=0, select bank0
  2255  024D  1303               	bcf	3,6	;RP1=0, select bank0
  2256  024E  00AA               	movwf	___flmul@a+2
  2257  024F  1683               	bsf	3,5	;RP0=1, select bank1
  2258  0250  1303               	bcf	3,6	;RP1=0, select bank1
  2259  0251  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2260  0252  1283               	bcf	3,5	;RP0=0, select bank0
  2261  0253  1303               	bcf	3,6	;RP1=0, select bank0
  2262  0254  00A9               	movwf	___flmul@a+1
  2263  0255  1683               	bsf	3,5	;RP0=1, select bank1
  2264  0256  1303               	bcf	3,6	;RP1=0, select bank1
  2265  0257  0837               	movf	sprintf@tmpval^(0+128),w
  2266  0258  1283               	bcf	3,5	;RP0=0, select bank0
  2267  0259  1303               	bcf	3,6	;RP1=0, select bank0
  2268  025A  00A8               	movwf	___flmul@a
  2269  025B  120A  158A  249F  120A  118A  	fcall	___flmul
  2270  0260  1283               	bcf	3,5	;RP0=0, select bank0
  2271  0261  1303               	bcf	3,6	;RP1=0, select bank0
  2272  0262  0827               	movf	?___flmul+3,w
  2273  0263  1683               	bsf	3,5	;RP0=1, select bank1
  2274  0264  1303               	bcf	3,6	;RP1=0, select bank1
  2275  0265  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2276  0266  1283               	bcf	3,5	;RP0=0, select bank0
  2277  0267  1303               	bcf	3,6	;RP1=0, select bank0
  2278  0268  0826               	movf	?___flmul+2,w
  2279  0269  1683               	bsf	3,5	;RP0=1, select bank1
  2280  026A  1303               	bcf	3,6	;RP1=0, select bank1
  2281  026B  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2282  026C  1283               	bcf	3,5	;RP0=0, select bank0
  2283  026D  1303               	bcf	3,6	;RP1=0, select bank0
  2284  026E  0825               	movf	?___flmul+1,w
  2285  026F  1683               	bsf	3,5	;RP0=1, select bank1
  2286  0270  1303               	bcf	3,6	;RP1=0, select bank1
  2287  0271  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2288  0272  1283               	bcf	3,5	;RP0=0, select bank0
  2289  0273  1303               	bcf	3,6	;RP1=0, select bank0
  2290  0274  0824               	movf	?___flmul,w
  2291  0275  1683               	bsf	3,5	;RP0=1, select bank1
  2292  0276  1303               	bcf	3,6	;RP1=0, select bank1
  2293  0277  00B7               	movwf	sprintf@tmpval^(0+128)
  2294  0278                     l3225:
  2295                           
  2296                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2297  0278  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2298  0279  00F3               	movwf	___flge@ff1+3
  2299  027A  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2300  027B  00F2               	movwf	___flge@ff1+2
  2301  027C  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2302  027D  00F1               	movwf	___flge@ff1+1
  2303  027E  0837               	movf	sprintf@tmpval^(0+128),w
  2304  027F  00F0               	movwf	___flge@ff1
  2305  0280  303F               	movlw	63
  2306  0281  00F7               	movwf	___flge@ff2+3
  2307  0282  3080               	movlw	128
  2308  0283  00F6               	movwf	___flge@ff2+2
  2309  0284  3000               	movlw	0
  2310  0285  00F5               	movwf	___flge@ff2+1
  2311  0286  3000               	movlw	0
  2312  0287  00F4               	movwf	___flge@ff2
  2313  0288  160A  158A  275E  120A  118A  	fcall	___flge
  2314  028D  1803               	btfsc	3,0
  2315  028E  2A90               	goto	u5231
  2316  028F  2A91               	goto	u5230
  2317  0290                     u5231:
  2318  0290  2A9A               	goto	l3229
  2319  0291                     u5230:
  2320  0291                     l3227:
  2321                           
  2322                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  2323  0291  30FF               	movlw	255
  2324  0292  1683               	bsf	3,5	;RP0=1, select bank1
  2325  0293  1303               	bcf	3,6	;RP1=0, select bank1
  2326  0294  07BB               	addwf	sprintf@eexp^(0+128),f
  2327  0295  1803               	skipnc
  2328  0296  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2329  0297  30FF               	movlw	255
  2330  0298  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2331  0299  2ABD               	goto	l3233
  2332  029A                     l3229:
  2333  029A  1683               	bsf	3,5	;RP0=1, select bank1
  2334  029B  1303               	bcf	3,6	;RP1=0, select bank1
  2335  029C  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2336  029D  00F3               	movwf	___flge@ff1+3
  2337  029E  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2338  029F  00F2               	movwf	___flge@ff1+2
  2339  02A0  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2340  02A1  00F1               	movwf	___flge@ff1+1
  2341  02A2  0837               	movf	sprintf@tmpval^(0+128),w
  2342  02A3  00F0               	movwf	___flge@ff1
  2343  02A4  3041               	movlw	65
  2344  02A5  00F7               	movwf	___flge@ff2+3
  2345  02A6  3020               	movlw	32
  2346  02A7  00F6               	movwf	___flge@ff2+2
  2347  02A8  3000               	movlw	0
  2348  02A9  00F5               	movwf	___flge@ff2+1
  2349  02AA  3000               	movlw	0
  2350  02AB  00F4               	movwf	___flge@ff2
  2351  02AC  160A  158A  275E  120A  118A  	fcall	___flge
  2352  02B1  1C03               	btfss	3,0
  2353  02B2  2AB4               	goto	u5241
  2354  02B3  2AB5               	goto	u5240
  2355  02B4                     u5241:
  2356  02B4  2ABD               	goto	l3233
  2357  02B5                     u5240:
  2358  02B5                     l3231:
  2359                           
  2360                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  2361  02B5  3001               	movlw	1
  2362  02B6  1683               	bsf	3,5	;RP0=1, select bank1
  2363  02B7  1303               	bcf	3,6	;RP1=0, select bank1
  2364  02B8  07BB               	addwf	sprintf@eexp^(0+128),f
  2365  02B9  1803               	skipnc
  2366  02BA  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2367  02BB  3000               	movlw	0
  2368  02BC  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2369  02BD                     l3233:
  2370                           
  2371                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  2372  02BD  1683               	bsf	3,5	;RP0=1, select bank1
  2373  02BE  1303               	bcf	3,6	;RP1=0, select bank1
  2374  02BF  0843               	movf	(sprintf@prec+1)^(0+128),w
  2375  02C0  3A80               	xorlw	128
  2376  02C1  00FF               	movwf	btemp+1
  2377  02C2  3080               	movlw	128
  2378  02C3  027F               	subwf	btemp+1,w
  2379  02C4  1D03               	skipz
  2380  02C5  2AC8               	goto	u5255
  2381  02C6  300D               	movlw	13
  2382  02C7  0242               	subwf	sprintf@prec^(0+128),w
  2383  02C8                     u5255:
  2384  02C8  1803               	skipnc
  2385  02C9  2ACB               	goto	u5251
  2386  02CA  2ACC               	goto	u5250
  2387  02CB                     u5251:
  2388  02CB  2B13               	goto	l3237
  2389  02CC                     u5250:
  2390  02CC                     l3235:
  2391                           
  2392                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  2393  02CC  1683               	bsf	3,5	;RP0=1, select bank1
  2394  02CD  1303               	bcf	3,6	;RP1=0, select bank1
  2395  02CE  0842               	movf	sprintf@prec^(0+128),w
  2396  02CF  160A  118A  236D  120A  118A  	fcall	_fround
  2397  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2398  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2399  02D6  0841               	movf	?_fround+3,w
  2400  02D7  00D5               	movwf	___fladd@b+3
  2401  02D8  0840               	movf	?_fround+2,w
  2402  02D9  00D4               	movwf	___fladd@b+2
  2403  02DA  083F               	movf	?_fround+1,w
  2404  02DB  00D3               	movwf	___fladd@b+1
  2405  02DC  083E               	movf	?_fround,w
  2406  02DD  00D2               	movwf	___fladd@b
  2407  02DE  1683               	bsf	3,5	;RP0=1, select bank1
  2408  02DF  1303               	bcf	3,6	;RP1=0, select bank1
  2409  02E0  0840               	movf	(sprintf@fval+3)^(0+128),w
  2410  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  2411  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  2412  02E3  00D9               	movwf	___fladd@a+3
  2413  02E4  1683               	bsf	3,5	;RP0=1, select bank1
  2414  02E5  1303               	bcf	3,6	;RP1=0, select bank1
  2415  02E6  083F               	movf	(sprintf@fval+2)^(0+128),w
  2416  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  2417  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  2418  02E9  00D8               	movwf	___fladd@a+2
  2419  02EA  1683               	bsf	3,5	;RP0=1, select bank1
  2420  02EB  1303               	bcf	3,6	;RP1=0, select bank1
  2421  02EC  083E               	movf	(sprintf@fval+1)^(0+128),w
  2422  02ED  1283               	bcf	3,5	;RP0=0, select bank0
  2423  02EE  1303               	bcf	3,6	;RP1=0, select bank0
  2424  02EF  00D7               	movwf	___fladd@a+1
  2425  02F0  1683               	bsf	3,5	;RP0=1, select bank1
  2426  02F1  1303               	bcf	3,6	;RP1=0, select bank1
  2427  02F2  083D               	movf	sprintf@fval^(0+128),w
  2428  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  2429  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  2430  02F5  00D6               	movwf	___fladd@a
  2431  02F6  160A  118A  2578  120A  118A  	fcall	___fladd
  2432  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  2433  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  2434  02FD  0855               	movf	?___fladd+3,w
  2435  02FE  1683               	bsf	3,5	;RP0=1, select bank1
  2436  02FF  1303               	bcf	3,6	;RP1=0, select bank1
  2437  0300  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2438  0301  1283               	bcf	3,5	;RP0=0, select bank0
  2439  0302  1303               	bcf	3,6	;RP1=0, select bank0
  2440  0303  0854               	movf	?___fladd+2,w
  2441  0304  1683               	bsf	3,5	;RP0=1, select bank1
  2442  0305  1303               	bcf	3,6	;RP1=0, select bank1
  2443  0306  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2444  0307  1283               	bcf	3,5	;RP0=0, select bank0
  2445  0308  1303               	bcf	3,6	;RP1=0, select bank0
  2446  0309  0853               	movf	?___fladd+1,w
  2447  030A  1683               	bsf	3,5	;RP0=1, select bank1
  2448  030B  1303               	bcf	3,6	;RP1=0, select bank1
  2449  030C  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2450  030D  1283               	bcf	3,5	;RP0=0, select bank0
  2451  030E  1303               	bcf	3,6	;RP1=0, select bank0
  2452  030F  0852               	movf	?___fladd,w
  2453  0310  1683               	bsf	3,5	;RP0=1, select bank1
  2454  0311  1303               	bcf	3,6	;RP1=0, select bank1
  2455  0312  00BD               	movwf	sprintf@fval^(0+128)
  2456  0313                     l3237:
  2457                           
  2458                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  2459  0313  1683               	bsf	3,5	;RP0=1, select bank1
  2460  0314  1303               	bcf	3,6	;RP1=0, select bank1
  2461  0315  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2462  0316  3A80               	xorlw	128
  2463  0317  00FF               	movwf	btemp+1
  2464  0318  3080               	movlw	128
  2465  0319  027F               	subwf	btemp+1,w
  2466  031A  1D03               	skipz
  2467  031B  2B1E               	goto	u5265
  2468  031C  300A               	movlw	10
  2469  031D  023B               	subwf	sprintf@eexp^(0+128),w
  2470  031E                     u5265:
  2471  031E  1803               	skipnc
  2472  031F  2B21               	goto	u5261
  2473  0320  2B22               	goto	u5260
  2474  0321                     u5261:
  2475  0321  2B73               	goto	l3245
  2476  0322                     u5260:
  2477  0322                     l3239:
  2478  0322  1683               	bsf	3,5	;RP0=1, select bank1
  2479  0323  1303               	bcf	3,6	;RP1=0, select bank1
  2480  0324  0840               	movf	(sprintf@fval+3)^(0+128),w
  2481  0325  00F3               	movwf	___fleq@ff1+3
  2482  0326  083F               	movf	(sprintf@fval+2)^(0+128),w
  2483  0327  00F2               	movwf	___fleq@ff1+2
  2484  0328  083E               	movf	(sprintf@fval+1)^(0+128),w
  2485  0329  00F1               	movwf	___fleq@ff1+1
  2486  032A  083D               	movf	sprintf@fval^(0+128),w
  2487  032B  00F0               	movwf	___fleq@ff1
  2488  032C  3000               	movlw	0
  2489  032D  00F7               	movwf	___fleq@ff2+3
  2490  032E  3000               	movlw	0
  2491  032F  00F6               	movwf	___fleq@ff2+2
  2492  0330  3000               	movlw	0
  2493  0331  00F5               	movwf	___fleq@ff2+1
  2494  0332  3000               	movlw	0
  2495  0333  00F4               	movwf	___fleq@ff2
  2496  0334  160A  158A  2663  120A  118A  	fcall	___fleq
  2497  0339  1803               	btfsc	3,0
  2498  033A  2B3C               	goto	u5271
  2499  033B  2B3D               	goto	u5270
  2500  033C                     u5271:
  2501  033C  2BE5               	goto	l3259
  2502  033D                     u5270:
  2503  033D                     l3241:
  2504  033D  1683               	bsf	3,5	;RP0=1, select bank1
  2505  033E  1303               	bcf	3,6	;RP1=0, select bank1
  2506  033F  0840               	movf	(sprintf@fval+3)^(0+128),w
  2507  0340  1283               	bcf	3,5	;RP0=0, select bank0
  2508  0341  1303               	bcf	3,6	;RP1=0, select bank0
  2509  0342  00D4               	movwf	___fltol@f1+3
  2510  0343  1683               	bsf	3,5	;RP0=1, select bank1
  2511  0344  1303               	bcf	3,6	;RP1=0, select bank1
  2512  0345  083F               	movf	(sprintf@fval+2)^(0+128),w
  2513  0346  1283               	bcf	3,5	;RP0=0, select bank0
  2514  0347  1303               	bcf	3,6	;RP1=0, select bank0
  2515  0348  00D3               	movwf	___fltol@f1+2
  2516  0349  1683               	bsf	3,5	;RP0=1, select bank1
  2517  034A  1303               	bcf	3,6	;RP1=0, select bank1
  2518  034B  083E               	movf	(sprintf@fval+1)^(0+128),w
  2519  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2520  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2521  034E  00D2               	movwf	___fltol@f1+1
  2522  034F  1683               	bsf	3,5	;RP0=1, select bank1
  2523  0350  1303               	bcf	3,6	;RP1=0, select bank1
  2524  0351  083D               	movf	sprintf@fval^(0+128),w
  2525  0352  1283               	bcf	3,5	;RP0=0, select bank0
  2526  0353  1303               	bcf	3,6	;RP1=0, select bank0
  2527  0354  00D1               	movwf	___fltol@f1
  2528  0355  160A  118A  20BC  120A  118A  	fcall	___fltol
  2529  035A  1283               	bcf	3,5	;RP0=0, select bank0
  2530  035B  1303               	bcf	3,6	;RP1=0, select bank0
  2531  035C  0854               	movf	?___fltol+3,w
  2532  035D  0453               	iorwf	?___fltol+2,w
  2533  035E  0452               	iorwf	?___fltol+1,w
  2534  035F  0451               	iorwf	?___fltol,w
  2535  0360  1D03               	skipz
  2536  0361  2B63               	goto	u5281
  2537  0362  2B64               	goto	u5280
  2538  0363                     u5281:
  2539  0363  2BE5               	goto	l3259
  2540  0364                     u5280:
  2541  0364                     l3243:
  2542  0364  1683               	bsf	3,5	;RP0=1, select bank1
  2543  0365  1303               	bcf	3,6	;RP1=0, select bank1
  2544  0366  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2545  0367  3A80               	xorlw	128
  2546  0368  00FF               	movwf	btemp+1
  2547  0369  3080               	movlw	128
  2548  036A  027F               	subwf	btemp+1,w
  2549  036B  1D03               	skipz
  2550  036C  2B6F               	goto	u5295
  2551  036D  3002               	movlw	2
  2552  036E  023B               	subwf	sprintf@eexp^(0+128),w
  2553  036F                     u5295:
  2554  036F  1C03               	skipc
  2555  0370  2B72               	goto	u5291
  2556  0371  2B73               	goto	u5290
  2557  0372                     u5291:
  2558  0372  2BE5               	goto	l3259
  2559  0373                     u5290:
  2560  0373                     l3245:
  2561                           
  2562                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
  2563  0373  1683               	bsf	3,5	;RP0=1, select bank1
  2564  0374  1303               	bcf	3,6	;RP1=0, select bank1
  2565  0375  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2566  0376  00F3               	movwf	___flge@ff1+3
  2567  0377  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2568  0378  00F2               	movwf	___flge@ff1+2
  2569  0379  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2570  037A  00F1               	movwf	___flge@ff1+1
  2571  037B  0837               	movf	sprintf@tmpval^(0+128),w
  2572  037C  00F0               	movwf	___flge@ff1
  2573  037D  3040               	movlw	64
  2574  037E  00F7               	movwf	___flge@ff2+3
  2575  037F  3089               	movlw	137
  2576  0380  00F6               	movwf	___flge@ff2+2
  2577  0381  3070               	movlw	112
  2578  0382  00F5               	movwf	___flge@ff2+1
  2579  0383  305F               	movlw	95
  2580  0384  00F4               	movwf	___flge@ff2
  2581  0385  160A  158A  275E  120A  118A  	fcall	___flge
  2582  038A  1803               	btfsc	3,0
  2583  038B  2B8D               	goto	u5301
  2584  038C  2B8E               	goto	u5300
  2585  038D                     u5301:
  2586  038D  2B97               	goto	l3249
  2587  038E                     u5300:
  2588  038E                     l3247:
  2589                           
  2590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
  2591  038E  30F7               	movlw	247
  2592  038F  1683               	bsf	3,5	;RP0=1, select bank1
  2593  0390  1303               	bcf	3,6	;RP1=0, select bank1
  2594  0391  07BB               	addwf	sprintf@eexp^(0+128),f
  2595  0392  1803               	skipnc
  2596  0393  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2597  0394  30FF               	movlw	255
  2598  0395  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2599                           
  2600                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
  2601  0396  2B9F               	goto	l3251
  2602  0397                     l3249:
  2603                           
  2604                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
  2605  0397  30F8               	movlw	248
  2606  0398  1683               	bsf	3,5	;RP0=1, select bank1
  2607  0399  1303               	bcf	3,6	;RP1=0, select bank1
  2608  039A  07BB               	addwf	sprintf@eexp^(0+128),f
  2609  039B  1803               	skipnc
  2610  039C  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  2611  039D  30FF               	movlw	255
  2612  039E  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  2613  039F                     l3251:
  2614                           
  2615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
  2616  039F  083B               	movf	sprintf@eexp^(0+128),w
  2617  03A0  120A  158A  2140  120A  118A  	fcall	_scale
  2618  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2619  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2620  03A7  0841               	movf	?_scale+3,w
  2621  03A8  1683               	bsf	3,5	;RP0=1, select bank1
  2622  03A9  1303               	bcf	3,6	;RP1=0, select bank1
  2623  03AA  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  2624  03AB  1283               	bcf	3,5	;RP0=0, select bank0
  2625  03AC  1303               	bcf	3,6	;RP1=0, select bank0
  2626  03AD  0840               	movf	?_scale+2,w
  2627  03AE  1683               	bsf	3,5	;RP0=1, select bank1
  2628  03AF  1303               	bcf	3,6	;RP1=0, select bank1
  2629  03B0  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  2630  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2631  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2632  03B3  083F               	movf	?_scale+1,w
  2633  03B4  1683               	bsf	3,5	;RP0=1, select bank1
  2634  03B5  1303               	bcf	3,6	;RP1=0, select bank1
  2635  03B6  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  2636  03B7  1283               	bcf	3,5	;RP0=0, select bank0
  2637  03B8  1303               	bcf	3,6	;RP1=0, select bank0
  2638  03B9  083E               	movf	?_scale,w
  2639  03BA  1683               	bsf	3,5	;RP0=1, select bank1
  2640  03BB  1303               	bcf	3,6	;RP1=0, select bank1
  2641  03BC  00B7               	movwf	sprintf@tmpval^(0+128)
  2642  03BD                     l3253:
  2643  03BD  0840               	movf	(sprintf@fval+3)^(0+128),w
  2644  03BE  00F3               	movwf	__div_to_l_@f1+3
  2645  03BF  083F               	movf	(sprintf@fval+2)^(0+128),w
  2646  03C0  00F2               	movwf	__div_to_l_@f1+2
  2647  03C1  083E               	movf	(sprintf@fval+1)^(0+128),w
  2648  03C2  00F1               	movwf	__div_to_l_@f1+1
  2649  03C3  083D               	movf	sprintf@fval^(0+128),w
  2650  03C4  00F0               	movwf	__div_to_l_@f1
  2651  03C5  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  2652  03C6  00F7               	movwf	__div_to_l_@f2+3
  2653  03C7  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  2654  03C8  00F6               	movwf	__div_to_l_@f2+2
  2655  03C9  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  2656  03CA  00F5               	movwf	__div_to_l_@f2+1
  2657  03CB  0837               	movf	sprintf@tmpval^(0+128),w
  2658  03CC  00F4               	movwf	__div_to_l_@f2
  2659  03CD  160A  118A  22AF  120A  118A  	fcall	__div_to_l_
  2660  03D2  0873               	movf	?__div_to_l_+3,w
  2661  03D3  1683               	bsf	3,5	;RP0=1, select bank1
  2662  03D4  1303               	bcf	3,6	;RP1=0, select bank1
  2663  03D5  00B2               	movwf	(sprintf@val+3)^(0+128)
  2664  03D6  0872               	movf	?__div_to_l_+2,w
  2665  03D7  00B1               	movwf	(sprintf@val+2)^(0+128)
  2666  03D8  0871               	movf	?__div_to_l_+1,w
  2667  03D9  00B0               	movwf	(sprintf@val+1)^(0+128)
  2668  03DA  0870               	movf	?__div_to_l_,w
  2669  03DB  00AF               	movwf	sprintf@val^(0+128)
  2670  03DC                     l3257:
  2671                           
  2672                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
  2673  03DC  3000               	movlw	0
  2674  03DD  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2675  03DE  3000               	movlw	0
  2676  03DF  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2677  03E0  3000               	movlw	0
  2678  03E1  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2679  03E2  3000               	movlw	0
  2680  03E3  00BD               	movwf	sprintf@fval^(0+128)
  2681                           
  2682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
  2683  03E4  2C69               	goto	l3265
  2684  03E5                     l3259:
  2685                           
  2686                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
  2687  03E5  1683               	bsf	3,5	;RP0=1, select bank1
  2688  03E6  1303               	bcf	3,6	;RP1=0, select bank1
  2689  03E7  0840               	movf	(sprintf@fval+3)^(0+128),w
  2690  03E8  1283               	bcf	3,5	;RP0=0, select bank0
  2691  03E9  1303               	bcf	3,6	;RP1=0, select bank0
  2692  03EA  00D4               	movwf	___fltol@f1+3
  2693  03EB  1683               	bsf	3,5	;RP0=1, select bank1
  2694  03EC  1303               	bcf	3,6	;RP1=0, select bank1
  2695  03ED  083F               	movf	(sprintf@fval+2)^(0+128),w
  2696  03EE  1283               	bcf	3,5	;RP0=0, select bank0
  2697  03EF  1303               	bcf	3,6	;RP1=0, select bank0
  2698  03F0  00D3               	movwf	___fltol@f1+2
  2699  03F1  1683               	bsf	3,5	;RP0=1, select bank1
  2700  03F2  1303               	bcf	3,6	;RP1=0, select bank1
  2701  03F3  083E               	movf	(sprintf@fval+1)^(0+128),w
  2702  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  2703  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  2704  03F6  00D2               	movwf	___fltol@f1+1
  2705  03F7  1683               	bsf	3,5	;RP0=1, select bank1
  2706  03F8  1303               	bcf	3,6	;RP1=0, select bank1
  2707  03F9  083D               	movf	sprintf@fval^(0+128),w
  2708  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  2709  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  2710  03FC  00D1               	movwf	___fltol@f1
  2711  03FD  160A  118A  20BC  120A  118A  	fcall	___fltol
  2712  0402  1283               	bcf	3,5	;RP0=0, select bank0
  2713  0403  1303               	bcf	3,6	;RP1=0, select bank0
  2714  0404  0854               	movf	?___fltol+3,w
  2715  0405  1683               	bsf	3,5	;RP0=1, select bank1
  2716  0406  1303               	bcf	3,6	;RP1=0, select bank1
  2717  0407  00B2               	movwf	(sprintf@val+3)^(0+128)
  2718  0408  1283               	bcf	3,5	;RP0=0, select bank0
  2719  0409  1303               	bcf	3,6	;RP1=0, select bank0
  2720  040A  0853               	movf	?___fltol+2,w
  2721  040B  1683               	bsf	3,5	;RP0=1, select bank1
  2722  040C  1303               	bcf	3,6	;RP1=0, select bank1
  2723  040D  00B1               	movwf	(sprintf@val+2)^(0+128)
  2724  040E  1283               	bcf	3,5	;RP0=0, select bank0
  2725  040F  1303               	bcf	3,6	;RP1=0, select bank0
  2726  0410  0852               	movf	?___fltol+1,w
  2727  0411  1683               	bsf	3,5	;RP0=1, select bank1
  2728  0412  1303               	bcf	3,6	;RP1=0, select bank1
  2729  0413  00B0               	movwf	(sprintf@val+1)^(0+128)
  2730  0414  1283               	bcf	3,5	;RP0=0, select bank0
  2731  0415  1303               	bcf	3,6	;RP1=0, select bank0
  2732  0416  0851               	movf	?___fltol,w
  2733  0417  1683               	bsf	3,5	;RP0=1, select bank1
  2734  0418  1303               	bcf	3,6	;RP1=0, select bank1
  2735  0419  00AF               	movwf	sprintf@val^(0+128)
  2736  041A                     l3261:
  2737                           
  2738                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
  2739  041A  0832               	movf	(sprintf@val+3)^(0+128),w
  2740  041B  00F3               	movwf	___xxtofl@val+3
  2741  041C  0831               	movf	(sprintf@val+2)^(0+128),w
  2742  041D  00F2               	movwf	___xxtofl@val+2
  2743  041E  0830               	movf	(sprintf@val+1)^(0+128),w
  2744  041F  00F1               	movwf	___xxtofl@val+1
  2745  0420  082F               	movf	sprintf@val^(0+128),w
  2746  0421  00F0               	movwf	___xxtofl@val
  2747  0422  3000               	movlw	0
  2748  0423  160A  118A  2138  120A  118A  	fcall	___xxtofl
  2749  0428  0873               	movf	?___xxtofl+3,w
  2750  0429  1283               	bcf	3,5	;RP0=0, select bank0
  2751  042A  1303               	bcf	3,6	;RP1=0, select bank0
  2752  042B  00E9               	movwf	___flsub@a+3
  2753  042C  0872               	movf	?___xxtofl+2,w
  2754  042D  00E8               	movwf	___flsub@a+2
  2755  042E  0871               	movf	?___xxtofl+1,w
  2756  042F  00E7               	movwf	___flsub@a+1
  2757  0430  0870               	movf	?___xxtofl,w
  2758  0431  00E6               	movwf	___flsub@a
  2759  0432  1683               	bsf	3,5	;RP0=1, select bank1
  2760  0433  1303               	bcf	3,6	;RP1=0, select bank1
  2761  0434  0840               	movf	(sprintf@fval+3)^(0+128),w
  2762  0435  1283               	bcf	3,5	;RP0=0, select bank0
  2763  0436  1303               	bcf	3,6	;RP1=0, select bank0
  2764  0437  00ED               	movwf	___flsub@b+3
  2765  0438  1683               	bsf	3,5	;RP0=1, select bank1
  2766  0439  1303               	bcf	3,6	;RP1=0, select bank1
  2767  043A  083F               	movf	(sprintf@fval+2)^(0+128),w
  2768  043B  1283               	bcf	3,5	;RP0=0, select bank0
  2769  043C  1303               	bcf	3,6	;RP1=0, select bank0
  2770  043D  00EC               	movwf	___flsub@b+2
  2771  043E  1683               	bsf	3,5	;RP0=1, select bank1
  2772  043F  1303               	bcf	3,6	;RP1=0, select bank1
  2773  0440  083E               	movf	(sprintf@fval+1)^(0+128),w
  2774  0441  1283               	bcf	3,5	;RP0=0, select bank0
  2775  0442  1303               	bcf	3,6	;RP1=0, select bank0
  2776  0443  00EB               	movwf	___flsub@b+1
  2777  0444  1683               	bsf	3,5	;RP0=1, select bank1
  2778  0445  1303               	bcf	3,6	;RP1=0, select bank1
  2779  0446  083D               	movf	sprintf@fval^(0+128),w
  2780  0447  1283               	bcf	3,5	;RP0=0, select bank0
  2781  0448  1303               	bcf	3,6	;RP1=0, select bank0
  2782  0449  00EA               	movwf	___flsub@b
  2783  044A  160A  158A  24F2  120A  118A  	fcall	___flsub
  2784  044F  1283               	bcf	3,5	;RP0=0, select bank0
  2785  0450  1303               	bcf	3,6	;RP1=0, select bank0
  2786  0451  0869               	movf	?___flsub+3,w
  2787  0452  1683               	bsf	3,5	;RP0=1, select bank1
  2788  0453  1303               	bcf	3,6	;RP1=0, select bank1
  2789  0454  00C0               	movwf	(sprintf@fval+3)^(0+128)
  2790  0455  1283               	bcf	3,5	;RP0=0, select bank0
  2791  0456  1303               	bcf	3,6	;RP1=0, select bank0
  2792  0457  0868               	movf	?___flsub+2,w
  2793  0458  1683               	bsf	3,5	;RP0=1, select bank1
  2794  0459  1303               	bcf	3,6	;RP1=0, select bank1
  2795  045A  00BF               	movwf	(sprintf@fval+2)^(0+128)
  2796  045B  1283               	bcf	3,5	;RP0=0, select bank0
  2797  045C  1303               	bcf	3,6	;RP1=0, select bank0
  2798  045D  0867               	movf	?___flsub+1,w
  2799  045E  1683               	bsf	3,5	;RP0=1, select bank1
  2800  045F  1303               	bcf	3,6	;RP1=0, select bank1
  2801  0460  00BE               	movwf	(sprintf@fval+1)^(0+128)
  2802  0461  1283               	bcf	3,5	;RP0=0, select bank0
  2803  0462  1303               	bcf	3,6	;RP1=0, select bank0
  2804  0463  0866               	movf	?___flsub,w
  2805  0464  1683               	bsf	3,5	;RP0=1, select bank1
  2806  0465  1303               	bcf	3,6	;RP1=0, select bank1
  2807  0466  00BD               	movwf	sprintf@fval^(0+128)
  2808  0467                     l3263:
  2809                           
  2810                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
  2811  0467  01BB               	clrf	sprintf@eexp^(0+128)
  2812  0468  01BC               	clrf	(sprintf@eexp+1)^(0+128)
  2813  0469                     l3265:
  2814                           
  2815                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  2816  0469  01C4               	clrf	sprintf@c^(0+128)
  2817  046A  0AC4               	incf	sprintf@c^(0+128),f
  2818  046B                     l3271:
  2819                           
  2820                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
  2821  046B  0844               	movf	sprintf@c^(0+128),w
  2822  046C  00A5               	movwf	??_sprintf^(0+128)
  2823  046D  3001               	movlw	1
  2824  046E                     u5315:
  2825  046E  1003               	clrc
  2826  046F  0DA5               	rlf	??_sprintf^(0+128),f
  2827  0470  3EFF               	addlw	-1
  2828  0471  1D03               	skipz
  2829  0472  2C6E               	goto	u5315
  2830  0473  1003               	clrc
  2831  0474  0D25               	rlf	??_sprintf^(0+128),w
  2832  0475  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  2833  0476  0084               	movwf	4
  2834  0477  160A  118A  200A  120A  118A  	fcall	stringdir
  2835  047C  00A6               	movwf	(??_sprintf+1)^(0+128)
  2836  047D  160A  118A  200A  120A  118A  	fcall	stringdir
  2837  0482  00A7               	movwf	((??_sprintf+1)^(0+128)+1)
  2838  0483  160A  118A  200A  120A  118A  	fcall	stringdir
  2839  0488  00A8               	movwf	((??_sprintf+1)^(0+128)+2)
  2840  0489  160A  118A  200A  120A  118A  	fcall	stringdir
  2841  048E  00A9               	movwf	((??_sprintf+1)^(0+128)+3)
  2842  048F  0829               	movf	(??_sprintf+4)^(0+128),w
  2843  0490  0232               	subwf	(sprintf@val+3)^(0+128),w
  2844  0491  1D03               	skipz
  2845  0492  2C9D               	goto	u5325
  2846  0493  0828               	movf	(??_sprintf+3)^(0+128),w
  2847  0494  0231               	subwf	(sprintf@val+2)^(0+128),w
  2848  0495  1D03               	skipz
  2849  0496  2C9D               	goto	u5325
  2850  0497  0827               	movf	(??_sprintf+2)^(0+128),w
  2851  0498  0230               	subwf	(sprintf@val+1)^(0+128),w
  2852  0499  1D03               	skipz
  2853  049A  2C9D               	goto	u5325
  2854  049B  0826               	movf	(??_sprintf+1)^(0+128),w
  2855  049C  022F               	subwf	sprintf@val^(0+128),w
  2856  049D                     u5325:
  2857  049D  1803               	skipnc
  2858  049E  2CA0               	goto	u5321
  2859  049F  2CA1               	goto	u5320
  2860  04A0                     u5321:
  2861  04A0  2CA2               	goto	l3275
  2862  04A1                     u5320:
  2863  04A1  2CAC               	goto	l3277
  2864  04A2                     l3275:
  2865  04A2  3001               	movlw	1
  2866  04A3  00A5               	movwf	??_sprintf^(0+128)
  2867  04A4  0825               	movf	??_sprintf^(0+128),w
  2868  04A5  07C4               	addwf	sprintf@c^(0+128),f
  2869  04A6  300A               	movlw	10
  2870  04A7  0644               	xorwf	sprintf@c^(0+128),w
  2871  04A8  1D03               	btfss	3,2
  2872  04A9  2CAB               	goto	u5331
  2873  04AA  2CAC               	goto	u5330
  2874  04AB                     u5331:
  2875  04AB  2C6B               	goto	l3271
  2876  04AC                     u5330:
  2877  04AC                     l3277:
  2878                           
  2879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
  2880  04AC  0844               	movf	sprintf@c^(0+128),w
  2881  04AD  0742               	addwf	sprintf@prec^(0+128),w
  2882  04AE  00A5               	movwf	??_sprintf^(0+128)
  2883  04AF  0843               	movf	(sprintf@prec+1)^(0+128),w
  2884  04B0  1803               	skipnc
  2885  04B1  0A43               	incf	(sprintf@prec+1)^(0+128),w
  2886  04B2  00A6               	movwf	(??_sprintf^(0+128)+1)
  2887  04B3  083B               	movf	sprintf@eexp^(0+128),w
  2888  04B4  0725               	addwf	??_sprintf^(0+128),w
  2889  04B5  00A7               	movwf	(??_sprintf+2)^(0+128)
  2890  04B6  083C               	movf	(sprintf@eexp+1)^(0+128),w
  2891  04B7  1803               	skipnc
  2892  04B8  0A3C               	incf	(sprintf@eexp+1)^(0+128),w
  2893  04B9  0726               	addwf	(??_sprintf+1)^(0+128),w
  2894  04BA  00A8               	movwf	(??_sprintf+3)^(0+128)
  2895  04BB  0827               	movf	(??_sprintf+2)^(0+128),w
  2896  04BC  02B5               	subwf	sprintf@width^(0+128),f
  2897  04BD  0828               	movf	(??_sprintf+3)^(0+128),w
  2898  04BE  1C03               	skipc
  2899  04BF  03B6               	decf	(sprintf@width+1)^(0+128),f
  2900  04C0  02B6               	subwf	(sprintf@width+1)^(0+128),f
  2901                           
  2902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
  2903  04C1  0842               	movf	sprintf@prec^(0+128),w
  2904  04C2  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  2905  04C3  1903               	btfsc	3,2
  2906  04C4  2CC6               	goto	u5341
  2907  04C5  2CC7               	goto	u5340
  2908  04C6                     u5341:
  2909  04C6  2CCD               	goto	l3281
  2910  04C7                     u5340:
  2911  04C7                     l3279:
  2912                           
  2913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
  2914  04C7  30FF               	movlw	255
  2915  04C8  07B5               	addwf	sprintf@width^(0+128),f
  2916  04C9  1803               	skipnc
  2917  04CA  0AB6               	incf	(sprintf@width+1)^(0+128),f
  2918  04CB  30FF               	movlw	255
  2919  04CC  07B6               	addwf	(sprintf@width+1)^(0+128),f
  2920  04CD                     l3281:
  2921                           
  2922                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
  2923  04CD  3003               	movlw	3
  2924  04CE  0533               	andwf	sprintf@flag^(0+128),w
  2925  04CF  00A5               	movwf	??_sprintf^(0+128)
  2926  04D0  3000               	movlw	0
  2927  04D1  0534               	andwf	(sprintf@flag+1)^(0+128),w
  2928  04D2  00A6               	movwf	(??_sprintf+1)^(0+128)
  2929  04D3  0825               	movf	??_sprintf^(0+128),w
  2930  04D4  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2931  04D5  1903               	btfsc	3,2
  2932  04D6  2CD8               	goto	u5351
  2933  04D7  2CD9               	goto	u5350
  2934  04D8                     u5351:
  2935  04D8  2CEE               	goto	l3291
  2936  04D9                     u5350:
  2937  04D9                     l3283:
  2938                           
  2939                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
  2940  04D9  30FF               	movlw	255
  2941  04DA  07B5               	addwf	sprintf@width^(0+128),f
  2942  04DB  1803               	skipnc
  2943  04DC  0AB6               	incf	(sprintf@width+1)^(0+128),f
  2944  04DD  30FF               	movlw	255
  2945  04DE  07B6               	addwf	(sprintf@width+1)^(0+128),f
  2946  04DF  2CEE               	goto	l3291
  2947  04E0                     l3285:
  2948                           
  2949                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
  2950  04E0  3020               	movlw	32
  2951  04E1  1683               	bsf	3,5	;RP0=1, select bank1
  2952  04E2  1303               	bcf	3,6	;RP1=0, select bank1
  2953  04E3  00A5               	movwf	??_sprintf^(0+128)
  2954  04E4  0841               	movf	sprintf@sp^(0+128),w
  2955  04E5  0084               	movwf	4
  2956  04E6  0825               	movf	??_sprintf^(0+128),w
  2957  04E7  1383               	bcf	3,7	;select IRP bank0
  2958  04E8  0080               	movwf	0
  2959  04E9                     l3287:
  2960  04E9  3001               	movlw	1
  2961  04EA  00A5               	movwf	??_sprintf^(0+128)
  2962  04EB  0825               	movf	??_sprintf^(0+128),w
  2963  04EC  07C1               	addwf	sprintf@sp^(0+128),f
  2964  04ED  2CD9               	goto	l3283
  2965  04EE                     l3291:
  2966                           
  2967                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
  2968  04EE  0836               	movf	(sprintf@width+1)^(0+128),w
  2969  04EF  3A80               	xorlw	128
  2970  04F0  00FF               	movwf	btemp+1
  2971  04F1  3080               	movlw	128
  2972  04F2  027F               	subwf	btemp+1,w
  2973  04F3  1D03               	skipz
  2974  04F4  2CF7               	goto	u5365
  2975  04F5  3001               	movlw	1
  2976  04F6  0235               	subwf	sprintf@width^(0+128),w
  2977  04F7                     u5365:
  2978  04F7  1803               	skipnc
  2979  04F8  2CFA               	goto	u5361
  2980  04F9  2CFB               	goto	u5360
  2981  04FA                     u5361:
  2982  04FA  2CE0               	goto	l3285
  2983  04FB                     u5360:
  2984  04FB                     l3293:
  2985                           
  2986                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
  2987  04FB  3003               	movlw	3
  2988  04FC  1683               	bsf	3,5	;RP0=1, select bank1
  2989  04FD  1303               	bcf	3,6	;RP1=0, select bank1
  2990  04FE  0533               	andwf	sprintf@flag^(0+128),w
  2991  04FF  00A5               	movwf	??_sprintf^(0+128)
  2992  0500  3000               	movlw	0
  2993  0501  0534               	andwf	(sprintf@flag+1)^(0+128),w
  2994  0502  00A6               	movwf	(??_sprintf+1)^(0+128)
  2995  0503  0825               	movf	??_sprintf^(0+128),w
  2996  0504  0426               	iorwf	(??_sprintf^(0+128)+1),w
  2997  0505  1903               	btfsc	3,2
  2998  0506  2D08               	goto	u5371
  2999  0507  2D09               	goto	u5370
  3000  0508                     u5371:
  3001  0508  2D7B               	goto	l334
  3002  0509                     u5370:
  3003  0509                     l3295:
  3004                           
  3005                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
  3006  0509  302D               	movlw	45
  3007  050A  00A5               	movwf	??_sprintf^(0+128)
  3008  050B  0841               	movf	sprintf@sp^(0+128),w
  3009  050C  0084               	movwf	4
  3010  050D  0825               	movf	??_sprintf^(0+128),w
  3011  050E  1383               	bcf	3,7	;select IRP bank0
  3012  050F  0080               	movwf	0
  3013  0510                     l3297:
  3014  0510  3001               	movlw	1
  3015  0511  00A5               	movwf	??_sprintf^(0+128)
  3016  0512  0825               	movf	??_sprintf^(0+128),w
  3017  0513  07C1               	addwf	sprintf@sp^(0+128),f
  3018  0514  2D7B               	goto	l334
  3019  0515                     l3299:
  3020                           
  3021                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
  3022  0515  0844               	movf	sprintf@c^(0+128),w
  3023  0516  00A5               	movwf	??_sprintf^(0+128)
  3024  0517  3001               	movlw	1
  3025  0518                     u5385:
  3026  0518  1003               	clrc
  3027  0519  0DA5               	rlf	??_sprintf^(0+128),f
  3028  051A  3EFF               	addlw	-1
  3029  051B  1D03               	skipz
  3030  051C  2D18               	goto	u5385
  3031  051D  1003               	clrc
  3032  051E  0D25               	rlf	??_sprintf^(0+128),w
  3033  051F  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3034  0520  0084               	movwf	4
  3035  0521  160A  118A  200A  120A  118A  	fcall	stringdir
  3036  0526  00F0               	movwf	___lldiv@divisor
  3037  0527  160A  118A  200A  120A  118A  	fcall	stringdir
  3038  052C  00F1               	movwf	___lldiv@divisor+1
  3039  052D  160A  118A  200A  120A  118A  	fcall	stringdir
  3040  0532  00F2               	movwf	___lldiv@divisor+2
  3041  0533  160A  118A  200A  120A  118A  	fcall	stringdir
  3042  0538  00F3               	movwf	___lldiv@divisor+3
  3043  0539  0832               	movf	(sprintf@val+3)^(0+128),w
  3044  053A  00F7               	movwf	___lldiv@dividend+3
  3045  053B  0831               	movf	(sprintf@val+2)^(0+128),w
  3046  053C  00F6               	movwf	___lldiv@dividend+2
  3047  053D  0830               	movf	(sprintf@val+1)^(0+128),w
  3048  053E  00F5               	movwf	___lldiv@dividend+1
  3049  053F  082F               	movf	sprintf@val^(0+128),w
  3050  0540  00F4               	movwf	___lldiv@dividend
  3051  0541  120A  158A  2002  120A  118A  	fcall	___lldiv
  3052  0546  0873               	movf	?___lldiv+3,w
  3053  0547  1683               	bsf	3,5	;RP0=1, select bank1
  3054  0548  1303               	bcf	3,6	;RP1=0, select bank1
  3055  0549  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3056  054A  0872               	movf	?___lldiv+2,w
  3057  054B  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3058  054C  0871               	movf	?___lldiv+1,w
  3059  054D  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3060  054E  0870               	movf	?___lldiv,w
  3061  054F  00B7               	movwf	sprintf@tmpval^(0+128)
  3062  0550                     l3301:
  3063                           
  3064                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
  3065  0550  3000               	movlw	0
  3066  0551  00F3               	movwf	___llmod@divisor+3
  3067  0552  3000               	movlw	0
  3068  0553  00F2               	movwf	___llmod@divisor+2
  3069  0554  3000               	movlw	0
  3070  0555  00F1               	movwf	___llmod@divisor+1
  3071  0556  300A               	movlw	10
  3072  0557  00F0               	movwf	___llmod@divisor
  3073  0558  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3074  0559  00F7               	movwf	___llmod@dividend+3
  3075  055A  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3076  055B  00F6               	movwf	___llmod@dividend+2
  3077  055C  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3078  055D  00F5               	movwf	___llmod@dividend+1
  3079  055E  0837               	movf	sprintf@tmpval^(0+128),w
  3080  055F  00F4               	movwf	___llmod@dividend
  3081  0560  160A  158A  26B1  120A  118A  	fcall	___llmod
  3082  0565  0873               	movf	?___llmod+3,w
  3083  0566  1683               	bsf	3,5	;RP0=1, select bank1
  3084  0567  1303               	bcf	3,6	;RP1=0, select bank1
  3085  0568  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3086  0569  0872               	movf	?___llmod+2,w
  3087  056A  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3088  056B  0871               	movf	?___llmod+1,w
  3089  056C  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3090  056D  0870               	movf	?___llmod,w
  3091  056E  00B7               	movwf	sprintf@tmpval^(0+128)
  3092  056F                     l3303:
  3093                           
  3094                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
  3095  056F  0837               	movf	sprintf@tmpval^(0+128),w
  3096  0570  3E30               	addlw	48
  3097  0571  00A5               	movwf	??_sprintf^(0+128)
  3098  0572  0841               	movf	sprintf@sp^(0+128),w
  3099  0573  0084               	movwf	4
  3100  0574  0825               	movf	??_sprintf^(0+128),w
  3101  0575  1383               	bcf	3,7	;select IRP bank0
  3102  0576  0080               	movwf	0
  3103  0577  3001               	movlw	1
  3104  0578  00A5               	movwf	??_sprintf^(0+128)
  3105  0579  0825               	movf	??_sprintf^(0+128),w
  3106  057A  07C1               	addwf	sprintf@sp^(0+128),f
  3107  057B                     l334:	
  3108                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1230:     };C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1232:    }
  3109                           
  3110                           
  3111                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
  3112  057B  3001               	movlw	1
  3113  057C  02C4               	subwf	sprintf@c^(0+128),f
  3114  057D  0A44               	incf	sprintf@c^(0+128),w
  3115  057E  1D03               	btfss	3,2
  3116  057F  2D81               	goto	u5391
  3117  0580  2D82               	goto	u5390
  3118  0581                     u5391:
  3119  0581  2D15               	goto	l3299
  3120  0582                     u5390:
  3121  0582  2D96               	goto	l3311
  3122  0583                     l3305:
  3123                           
  3124                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
  3125  0583  3030               	movlw	48
  3126  0584  1683               	bsf	3,5	;RP0=1, select bank1
  3127  0585  1303               	bcf	3,6	;RP1=0, select bank1
  3128  0586  00A5               	movwf	??_sprintf^(0+128)
  3129  0587  0841               	movf	sprintf@sp^(0+128),w
  3130  0588  0084               	movwf	4
  3131  0589  0825               	movf	??_sprintf^(0+128),w
  3132  058A  1383               	bcf	3,7	;select IRP bank0
  3133  058B  0080               	movwf	0
  3134  058C                     l3307:
  3135  058C  3001               	movlw	1
  3136  058D  00A5               	movwf	??_sprintf^(0+128)
  3137  058E  0825               	movf	??_sprintf^(0+128),w
  3138  058F  07C1               	addwf	sprintf@sp^(0+128),f
  3139  0590                     l3309:
  3140                           
  3141                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
  3142  0590  30FF               	movlw	255
  3143  0591  07BB               	addwf	sprintf@eexp^(0+128),f
  3144  0592  1803               	skipnc
  3145  0593  0ABC               	incf	(sprintf@eexp+1)^(0+128),f
  3146  0594  30FF               	movlw	255
  3147  0595  07BC               	addwf	(sprintf@eexp+1)^(0+128),f
  3148  0596                     l3311:
  3149                           
  3150                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
  3151  0596  083C               	movf	(sprintf@eexp+1)^(0+128),w
  3152  0597  3A80               	xorlw	128
  3153  0598  00FF               	movwf	btemp+1
  3154  0599  3080               	movlw	128
  3155  059A  027F               	subwf	btemp+1,w
  3156  059B  1D03               	skipz
  3157  059C  2D9F               	goto	u5405
  3158  059D  3001               	movlw	1
  3159  059E  023B               	subwf	sprintf@eexp^(0+128),w
  3160  059F                     u5405:
  3161  059F  1803               	skipnc
  3162  05A0  2DA2               	goto	u5401
  3163  05A1  2DA3               	goto	u5400
  3164  05A2                     u5401:
  3165  05A2  2D83               	goto	l3305
  3166  05A3                     u5400:
  3167  05A3                     l3313:
  3168                           
  3169                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  3170  05A3  1683               	bsf	3,5	;RP0=1, select bank1
  3171  05A4  1303               	bcf	3,6	;RP1=0, select bank1
  3172  05A5  0843               	movf	(sprintf@prec+1)^(0+128),w
  3173  05A6  3A80               	xorlw	128
  3174  05A7  00FF               	movwf	btemp+1
  3175  05A8  3080               	movlw	128
  3176  05A9  027F               	subwf	btemp+1,w
  3177  05AA  1D03               	skipz
  3178  05AB  2DAE               	goto	u5415
  3179  05AC  3009               	movlw	9
  3180  05AD  0242               	subwf	sprintf@prec^(0+128),w
  3181  05AE                     u5415:
  3182  05AE  1C03               	skipc
  3183  05AF  2DB1               	goto	u5411
  3184  05B0  2DB2               	goto	u5410
  3185  05B1                     u5411:
  3186  05B1  2DB9               	goto	l3317
  3187  05B2                     u5410:
  3188  05B2                     l3315:
  3189                           
  3190                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
  3191  05B2  3008               	movlw	8
  3192  05B3  1683               	bsf	3,5	;RP0=1, select bank1
  3193  05B4  1303               	bcf	3,6	;RP1=0, select bank1
  3194  05B5  00A5               	movwf	??_sprintf^(0+128)
  3195  05B6  0825               	movf	??_sprintf^(0+128),w
  3196  05B7  00C4               	movwf	sprintf@c^(0+128)
  3197  05B8  2DBF               	goto	l341
  3198  05B9                     l3317:
  3199                           
  3200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
  3201  05B9  1683               	bsf	3,5	;RP0=1, select bank1
  3202  05BA  1303               	bcf	3,6	;RP1=0, select bank1
  3203  05BB  0842               	movf	sprintf@prec^(0+128),w
  3204  05BC  00A5               	movwf	??_sprintf^(0+128)
  3205  05BD  0825               	movf	??_sprintf^(0+128),w
  3206  05BE  00C4               	movwf	sprintf@c^(0+128)
  3207  05BF                     l341:
  3208                           
  3209                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
  3210  05BF  0844               	movf	sprintf@c^(0+128),w
  3211  05C0  00A5               	movwf	??_sprintf^(0+128)
  3212  05C1  01A6               	clrf	(??_sprintf^(0+128)+1)
  3213  05C2  0825               	movf	??_sprintf^(0+128),w
  3214  05C3  02C2               	subwf	sprintf@prec^(0+128),f
  3215  05C4  0826               	movf	(??_sprintf+1)^(0+128),w
  3216  05C5  1C03               	skipc
  3217  05C6  03C3               	decf	(sprintf@prec+1)^(0+128),f
  3218  05C7  02C3               	subwf	(sprintf@prec+1)^(0+128),f
  3219  05C8                     l3319:
  3220                           
  3221                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
  3222  05C8  0844               	movf	sprintf@c^(0+128),w
  3223  05C9  1903               	btfsc	3,2
  3224  05CA  2DCC               	goto	u5421
  3225  05CB  2DCD               	goto	u5420
  3226  05CC                     u5421:
  3227  05CC  2DD8               	goto	l3325
  3228  05CD                     u5420:
  3229  05CD                     l3321:
  3230                           
  3231                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
  3232  05CD  302E               	movlw	46
  3233  05CE  00A5               	movwf	??_sprintf^(0+128)
  3234  05CF  0841               	movf	sprintf@sp^(0+128),w
  3235  05D0  0084               	movwf	4
  3236  05D1  0825               	movf	??_sprintf^(0+128),w
  3237  05D2  1383               	bcf	3,7	;select IRP bank0
  3238  05D3  0080               	movwf	0
  3239  05D4                     l3323:
  3240  05D4  3001               	movlw	1
  3241  05D5  00A5               	movwf	??_sprintf^(0+128)
  3242  05D6  0825               	movf	??_sprintf^(0+128),w
  3243  05D7  07C1               	addwf	sprintf@sp^(0+128),f
  3244  05D8                     l3325:
  3245                           
  3246                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3247  05D8  0844               	movf	sprintf@c^(0+128),w
  3248  05D9  120A  158A  2140  120A  118A  	fcall	_scale
  3249  05DE  1283               	bcf	3,5	;RP0=0, select bank0
  3250  05DF  1303               	bcf	3,6	;RP1=0, select bank0
  3251  05E0  0841               	movf	?_scale+3,w
  3252  05E1  1683               	bsf	3,5	;RP0=1, select bank1
  3253  05E2  1303               	bcf	3,6	;RP1=0, select bank1
  3254  05E3  00AD               	movwf	(_sprintf$1210+3)^(0+128)
  3255  05E4  1283               	bcf	3,5	;RP0=0, select bank0
  3256  05E5  1303               	bcf	3,6	;RP1=0, select bank0
  3257  05E6  0840               	movf	?_scale+2,w
  3258  05E7  1683               	bsf	3,5	;RP0=1, select bank1
  3259  05E8  1303               	bcf	3,6	;RP1=0, select bank1
  3260  05E9  00AC               	movwf	(_sprintf$1210+2)^(0+128)
  3261  05EA  1283               	bcf	3,5	;RP0=0, select bank0
  3262  05EB  1303               	bcf	3,6	;RP1=0, select bank0
  3263  05EC  083F               	movf	?_scale+1,w
  3264  05ED  1683               	bsf	3,5	;RP0=1, select bank1
  3265  05EE  1303               	bcf	3,6	;RP1=0, select bank1
  3266  05EF  00AB               	movwf	(_sprintf$1210+1)^(0+128)
  3267  05F0  1283               	bcf	3,5	;RP0=0, select bank0
  3268  05F1  1303               	bcf	3,6	;RP1=0, select bank0
  3269  05F2  083E               	movf	?_scale,w
  3270  05F3  1683               	bsf	3,5	;RP0=1, select bank1
  3271  05F4  1303               	bcf	3,6	;RP1=0, select bank1
  3272  05F5  00AA               	movwf	_sprintf$1210^(0+128)
  3273  05F6                     l3327:
  3274                           
  3275                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
  3276  05F6  082D               	movf	(_sprintf$1210+3)^(0+128),w
  3277  05F7  1283               	bcf	3,5	;RP0=0, select bank0
  3278  05F8  1303               	bcf	3,6	;RP1=0, select bank0
  3279  05F9  00AB               	movwf	___flmul@a+3
  3280  05FA  1683               	bsf	3,5	;RP0=1, select bank1
  3281  05FB  1303               	bcf	3,6	;RP1=0, select bank1
  3282  05FC  082C               	movf	(_sprintf$1210+2)^(0+128),w
  3283  05FD  1283               	bcf	3,5	;RP0=0, select bank0
  3284  05FE  1303               	bcf	3,6	;RP1=0, select bank0
  3285  05FF  00AA               	movwf	___flmul@a+2
  3286  0600  1683               	bsf	3,5	;RP0=1, select bank1
  3287  0601  1303               	bcf	3,6	;RP1=0, select bank1
  3288  0602  082B               	movf	(_sprintf$1210+1)^(0+128),w
  3289  0603  1283               	bcf	3,5	;RP0=0, select bank0
  3290  0604  1303               	bcf	3,6	;RP1=0, select bank0
  3291  0605  00A9               	movwf	___flmul@a+1
  3292  0606  1683               	bsf	3,5	;RP0=1, select bank1
  3293  0607  1303               	bcf	3,6	;RP1=0, select bank1
  3294  0608  082A               	movf	_sprintf$1210^(0+128),w
  3295  0609  1283               	bcf	3,5	;RP0=0, select bank0
  3296  060A  1303               	bcf	3,6	;RP1=0, select bank0
  3297  060B  00A8               	movwf	___flmul@a
  3298  060C  1683               	bsf	3,5	;RP0=1, select bank1
  3299  060D  1303               	bcf	3,6	;RP1=0, select bank1
  3300  060E  0840               	movf	(sprintf@fval+3)^(0+128),w
  3301  060F  1283               	bcf	3,5	;RP0=0, select bank0
  3302  0610  1303               	bcf	3,6	;RP1=0, select bank0
  3303  0611  00A7               	movwf	___flmul@b+3
  3304  0612  1683               	bsf	3,5	;RP0=1, select bank1
  3305  0613  1303               	bcf	3,6	;RP1=0, select bank1
  3306  0614  083F               	movf	(sprintf@fval+2)^(0+128),w
  3307  0615  1283               	bcf	3,5	;RP0=0, select bank0
  3308  0616  1303               	bcf	3,6	;RP1=0, select bank0
  3309  0617  00A6               	movwf	___flmul@b+2
  3310  0618  1683               	bsf	3,5	;RP0=1, select bank1
  3311  0619  1303               	bcf	3,6	;RP1=0, select bank1
  3312  061A  083E               	movf	(sprintf@fval+1)^(0+128),w
  3313  061B  1283               	bcf	3,5	;RP0=0, select bank0
  3314  061C  1303               	bcf	3,6	;RP1=0, select bank0
  3315  061D  00A5               	movwf	___flmul@b+1
  3316  061E  1683               	bsf	3,5	;RP0=1, select bank1
  3317  061F  1303               	bcf	3,6	;RP1=0, select bank1
  3318  0620  083D               	movf	sprintf@fval^(0+128),w
  3319  0621  1283               	bcf	3,5	;RP0=0, select bank0
  3320  0622  1303               	bcf	3,6	;RP1=0, select bank0
  3321  0623  00A4               	movwf	___flmul@b
  3322  0624  120A  158A  249F  120A  118A  	fcall	___flmul
  3323  0629  1283               	bcf	3,5	;RP0=0, select bank0
  3324  062A  1303               	bcf	3,6	;RP1=0, select bank0
  3325  062B  0827               	movf	?___flmul+3,w
  3326  062C  00D4               	movwf	___fltol@f1+3
  3327  062D  0826               	movf	?___flmul+2,w
  3328  062E  00D3               	movwf	___fltol@f1+2
  3329  062F  0825               	movf	?___flmul+1,w
  3330  0630  00D2               	movwf	___fltol@f1+1
  3331  0631  0824               	movf	?___flmul,w
  3332  0632  00D1               	movwf	___fltol@f1
  3333  0633  160A  118A  20BC  120A  118A  	fcall	___fltol
  3334  0638  1283               	bcf	3,5	;RP0=0, select bank0
  3335  0639  1303               	bcf	3,6	;RP1=0, select bank0
  3336  063A  0854               	movf	?___fltol+3,w
  3337  063B  1683               	bsf	3,5	;RP0=1, select bank1
  3338  063C  1303               	bcf	3,6	;RP1=0, select bank1
  3339  063D  00B2               	movwf	(sprintf@val+3)^(0+128)
  3340  063E  1283               	bcf	3,5	;RP0=0, select bank0
  3341  063F  1303               	bcf	3,6	;RP1=0, select bank0
  3342  0640  0853               	movf	?___fltol+2,w
  3343  0641  1683               	bsf	3,5	;RP0=1, select bank1
  3344  0642  1303               	bcf	3,6	;RP1=0, select bank1
  3345  0643  00B1               	movwf	(sprintf@val+2)^(0+128)
  3346  0644  1283               	bcf	3,5	;RP0=0, select bank0
  3347  0645  1303               	bcf	3,6	;RP1=0, select bank0
  3348  0646  0852               	movf	?___fltol+1,w
  3349  0647  1683               	bsf	3,5	;RP0=1, select bank1
  3350  0648  1303               	bcf	3,6	;RP1=0, select bank1
  3351  0649  00B0               	movwf	(sprintf@val+1)^(0+128)
  3352  064A  1283               	bcf	3,5	;RP0=0, select bank0
  3353  064B  1303               	bcf	3,6	;RP1=0, select bank0
  3354  064C  0851               	movf	?___fltol,w
  3355  064D  1683               	bsf	3,5	;RP0=1, select bank1
  3356  064E  1303               	bcf	3,6	;RP1=0, select bank1
  3357  064F  00AF               	movwf	sprintf@val^(0+128)
  3358                           
  3359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3360  0650  2EF2               	goto	l3337
  3361  0651                     l3329:
  3362                           
  3363                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
  3364  0651  0844               	movf	sprintf@c^(0+128),w
  3365  0652  00A5               	movwf	??_sprintf^(0+128)
  3366  0653  3001               	movlw	1
  3367  0654                     u5435:
  3368  0654  1003               	clrc
  3369  0655  0DA5               	rlf	??_sprintf^(0+128),f
  3370  0656  3EFF               	addlw	-1
  3371  0657  1D03               	skipz
  3372  0658  2E54               	goto	u5435
  3373  0659  1003               	clrc
  3374  065A  0D25               	rlf	??_sprintf^(0+128),w
  3375  065B  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3376  065C  0084               	movwf	4
  3377  065D  160A  118A  200A  120A  118A  	fcall	stringdir
  3378  0662  00F0               	movwf	___lldiv@divisor
  3379  0663  160A  118A  200A  120A  118A  	fcall	stringdir
  3380  0668  00F1               	movwf	___lldiv@divisor+1
  3381  0669  160A  118A  200A  120A  118A  	fcall	stringdir
  3382  066E  00F2               	movwf	___lldiv@divisor+2
  3383  066F  160A  118A  200A  120A  118A  	fcall	stringdir
  3384  0674  00F3               	movwf	___lldiv@divisor+3
  3385  0675  0832               	movf	(sprintf@val+3)^(0+128),w
  3386  0676  00F7               	movwf	___lldiv@dividend+3
  3387  0677  0831               	movf	(sprintf@val+2)^(0+128),w
  3388  0678  00F6               	movwf	___lldiv@dividend+2
  3389  0679  0830               	movf	(sprintf@val+1)^(0+128),w
  3390  067A  00F5               	movwf	___lldiv@dividend+1
  3391  067B  082F               	movf	sprintf@val^(0+128),w
  3392  067C  00F4               	movwf	___lldiv@dividend
  3393  067D  120A  158A  2002  120A  118A  	fcall	___lldiv
  3394  0682  0873               	movf	?___lldiv+3,w
  3395  0683  1683               	bsf	3,5	;RP0=1, select bank1
  3396  0684  1303               	bcf	3,6	;RP1=0, select bank1
  3397  0685  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3398  0686  0872               	movf	?___lldiv+2,w
  3399  0687  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3400  0688  0871               	movf	?___lldiv+1,w
  3401  0689  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3402  068A  0870               	movf	?___lldiv,w
  3403  068B  00B7               	movwf	sprintf@tmpval^(0+128)
  3404  068C                     l3331:
  3405                           
  3406                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
  3407  068C  3000               	movlw	0
  3408  068D  00F3               	movwf	___llmod@divisor+3
  3409  068E  3000               	movlw	0
  3410  068F  00F2               	movwf	___llmod@divisor+2
  3411  0690  3000               	movlw	0
  3412  0691  00F1               	movwf	___llmod@divisor+1
  3413  0692  300A               	movlw	10
  3414  0693  00F0               	movwf	___llmod@divisor
  3415  0694  083A               	movf	(sprintf@tmpval+3)^(0+128),w
  3416  0695  00F7               	movwf	___llmod@dividend+3
  3417  0696  0839               	movf	(sprintf@tmpval+2)^(0+128),w
  3418  0697  00F6               	movwf	___llmod@dividend+2
  3419  0698  0838               	movf	(sprintf@tmpval+1)^(0+128),w
  3420  0699  00F5               	movwf	___llmod@dividend+1
  3421  069A  0837               	movf	sprintf@tmpval^(0+128),w
  3422  069B  00F4               	movwf	___llmod@dividend
  3423  069C  160A  158A  26B1  120A  118A  	fcall	___llmod
  3424  06A1  0873               	movf	?___llmod+3,w
  3425  06A2  1683               	bsf	3,5	;RP0=1, select bank1
  3426  06A3  1303               	bcf	3,6	;RP1=0, select bank1
  3427  06A4  00BA               	movwf	(sprintf@tmpval+3)^(0+128)
  3428  06A5  0872               	movf	?___llmod+2,w
  3429  06A6  00B9               	movwf	(sprintf@tmpval+2)^(0+128)
  3430  06A7  0871               	movf	?___llmod+1,w
  3431  06A8  00B8               	movwf	(sprintf@tmpval+1)^(0+128)
  3432  06A9  0870               	movf	?___llmod,w
  3433  06AA  00B7               	movwf	sprintf@tmpval^(0+128)
  3434  06AB                     l3333:
  3435                           
  3436                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
  3437  06AB  0837               	movf	sprintf@tmpval^(0+128),w
  3438  06AC  3E30               	addlw	48
  3439  06AD  00A5               	movwf	??_sprintf^(0+128)
  3440  06AE  0841               	movf	sprintf@sp^(0+128),w
  3441  06AF  0084               	movwf	4
  3442  06B0  0825               	movf	??_sprintf^(0+128),w
  3443  06B1  1383               	bcf	3,7	;select IRP bank0
  3444  06B2  0080               	movwf	0
  3445  06B3  3001               	movlw	1
  3446  06B4  00A5               	movwf	??_sprintf^(0+128)
  3447  06B5  0825               	movf	??_sprintf^(0+128),w
  3448  06B6  07C1               	addwf	sprintf@sp^(0+128),f
  3449  06B7                     l3335:
  3450                           
  3451                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
  3452  06B7  0844               	movf	sprintf@c^(0+128),w
  3453  06B8  00A5               	movwf	??_sprintf^(0+128)
  3454  06B9  3001               	movlw	1
  3455  06BA                     u5445:
  3456  06BA  1003               	clrc
  3457  06BB  0DA5               	rlf	??_sprintf^(0+128),f
  3458  06BC  3EFF               	addlw	-1
  3459  06BD  1D03               	skipz
  3460  06BE  2EBA               	goto	u5445
  3461  06BF  1003               	clrc
  3462  06C0  0D25               	rlf	??_sprintf^(0+128),w
  3463  06C1  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
  3464  06C2  0084               	movwf	4
  3465  06C3  160A  118A  200A  120A  118A  	fcall	stringdir
  3466  06C8  00F0               	movwf	___llmod@divisor
  3467  06C9  160A  118A  200A  120A  118A  	fcall	stringdir
  3468  06CE  00F1               	movwf	___llmod@divisor+1
  3469  06CF  160A  118A  200A  120A  118A  	fcall	stringdir
  3470  06D4  00F2               	movwf	___llmod@divisor+2
  3471  06D5  160A  118A  200A  120A  118A  	fcall	stringdir
  3472  06DA  00F3               	movwf	___llmod@divisor+3
  3473  06DB  0832               	movf	(sprintf@val+3)^(0+128),w
  3474  06DC  00F7               	movwf	___llmod@dividend+3
  3475  06DD  0831               	movf	(sprintf@val+2)^(0+128),w
  3476  06DE  00F6               	movwf	___llmod@dividend+2
  3477  06DF  0830               	movf	(sprintf@val+1)^(0+128),w
  3478  06E0  00F5               	movwf	___llmod@dividend+1
  3479  06E1  082F               	movf	sprintf@val^(0+128),w
  3480  06E2  00F4               	movwf	___llmod@dividend
  3481  06E3  160A  158A  26B1  120A  118A  	fcall	___llmod
  3482  06E8  0873               	movf	?___llmod+3,w
  3483  06E9  1683               	bsf	3,5	;RP0=1, select bank1
  3484  06EA  1303               	bcf	3,6	;RP1=0, select bank1
  3485  06EB  00B2               	movwf	(sprintf@val+3)^(0+128)
  3486  06EC  0872               	movf	?___llmod+2,w
  3487  06ED  00B1               	movwf	(sprintf@val+2)^(0+128)
  3488  06EE  0871               	movf	?___llmod+1,w
  3489  06EF  00B0               	movwf	(sprintf@val+1)^(0+128)
  3490  06F0  0870               	movf	?___llmod,w
  3491  06F1  00AF               	movwf	sprintf@val^(0+128)
  3492  06F2                     l3337:
  3493                           
  3494                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
  3495  06F2  3001               	movlw	1
  3496  06F3  02C4               	subwf	sprintf@c^(0+128),f
  3497  06F4  0A44               	incf	sprintf@c^(0+128),w
  3498  06F5  1D03               	btfss	3,2
  3499  06F6  2EF8               	goto	u5451
  3500  06F7  2EF9               	goto	u5450
  3501  06F8                     u5451:
  3502  06F8  2E51               	goto	l3329
  3503  06F9                     u5450:
  3504  06F9  2F0B               	goto	l3345
  3505  06FA                     l3339:
  3506                           
  3507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
  3508  06FA  3030               	movlw	48
  3509  06FB  00A5               	movwf	??_sprintf^(0+128)
  3510  06FC  0841               	movf	sprintf@sp^(0+128),w
  3511  06FD  0084               	movwf	4
  3512  06FE  0825               	movf	??_sprintf^(0+128),w
  3513  06FF  1383               	bcf	3,7	;select IRP bank0
  3514  0700  0080               	movwf	0
  3515  0701                     l3341:
  3516  0701  3001               	movlw	1
  3517  0702  00A5               	movwf	??_sprintf^(0+128)
  3518  0703  0825               	movf	??_sprintf^(0+128),w
  3519  0704  07C1               	addwf	sprintf@sp^(0+128),f
  3520  0705                     l3343:
  3521                           
  3522                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
  3523  0705  30FF               	movlw	255
  3524  0706  07C2               	addwf	sprintf@prec^(0+128),f
  3525  0707  1803               	skipnc
  3526  0708  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3527  0709  30FF               	movlw	255
  3528  070A  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3529  070B                     l3345:
  3530                           
  3531                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
  3532  070B  0842               	movf	sprintf@prec^(0+128),w
  3533  070C  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3534  070D  1D03               	btfss	3,2
  3535  070E  2F10               	goto	u5461
  3536  070F  2F11               	goto	u5460
  3537  0710                     u5461:
  3538  0710  2EFA               	goto	l3339
  3539  0711                     u5460:
  3540  0711  2FD5               	goto	l3393
  3541  0712                     l3347:
  3542                           
  3543                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec =
      +                          = 0 && val == 0)
  3544  0712  0842               	movf	sprintf@prec^(0+128),w
  3545  0713  0443               	iorwf	(sprintf@prec+1)^(0+128),w
  3546  0714  1D03               	btfss	3,2
  3547  0715  2F17               	goto	u5471
  3548  0716  2F18               	goto	u5470
  3549  0717                     u5471:
  3550  0717  2F26               	goto	l349
  3551  0718                     u5470:
  3552  0718                     l3349:
  3553  0718  0832               	movf	(sprintf@val+3)^(0+128),w
  3554  0719  0431               	iorwf	(sprintf@val+2)^(0+128),w
  3555  071A  0430               	iorwf	(sprintf@val+1)^(0+128),w
  3556  071B  042F               	iorwf	sprintf@val^(0+128),w
  3557  071C  1D03               	skipz
  3558  071D  2F1F               	goto	u5481
  3559  071E  2F20               	goto	u5480
  3560  071F                     u5481:
  3561  071F  2F26               	goto	l349
  3562  0720                     u5480:
  3563  0720                     l3351:
  3564                           
  3565                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
  3566  0720  3001               	movlw	1
  3567  0721  07C2               	addwf	sprintf@prec^(0+128),f
  3568  0722  1803               	skipnc
  3569  0723  0AC3               	incf	(sprintf@prec+1)^(0+128),f
  3570  0724  3000               	movlw	0
  3571  0725  07C3               	addwf	(sprintf@prec+1)^(0+128),f
  3572  0726                     l349:
  3573                           
  3574                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
  3575  0726  0843               	movf	(sprintf@prec+1)^(0+128),w
  3576  0727  3A80               	xorlw	128
  3577  0728  3C80               	sublw	128
  3578  0729  1D03               	skipz
  3579  072A  2F2D               	goto	u5495
  3580  072B  0842               	movf	sprintf@prec^(0+128),w
  3581  072C  0244               	subwf	sprintf@c^(0+128),w
  3582  072D                     u5495:
  3583  072D  1803               	skipnc
  3584  072E  2F30               	goto	u5491
  3585  072F  2F31               	goto	u5490
  3586  0730                     u5491:
  3587  0730  2F38               	goto	l3355
  3588  0731                     u5490:
  3589  0731                     l3353:
  3590                           
  3591                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
  3592  0731  1683               	bsf	3,5	;RP0=1, select bank1
  3593  0732  1303               	bcf	3,6	;RP1=0, select bank1
  3594  0733  0842               	movf	sprintf@prec^(0+128),w
  3595  0734  00A5               	movwf	??_sprintf^(0+128)
  3596  0735  0825               	movf	??_sprintf^(0+128),w
  3597  0736  00C4               	movwf	sprintf@c^(0+128)
  3598  0737  2F50               	goto	l3359
  3599  0738                     l3355:
  3600  0738  1683               	bsf	3,5	;RP0=1, select bank1
  3601  0739  1303               	bcf	3,6	;RP1=0, select bank1
  3602  073A  0843               	movf	(sprintf@prec+1)^(0+128),w
  3603  073B  3A80               	xorlw	128
  3604  073C  00A5               	movwf	??_sprintf^(0+128)
  3605  073D  3080               	movlw	128
  3606  073E  0225               	subwf	??_sprintf^(0+128),w
  3607  073F  1D03               	skipz
  3608  0740  2F43               	goto	u5505
  3609  0741  0844               	movf	sprintf@c^(0+128),w
  3610  0742  0242               	subwf	sprintf@prec^(0+128),w
  3611  0743                     u5505:
  3612  0743  1803               	skipnc
  3613  0744  2F46               	goto	u5501
  3614  0745  2F47               	goto	u5500
  3615  0746                     u5501:
  3616  0746  2F50               	goto	l3359
  3617  0747                     u5500:
  3618  0747                     l3357:
  3619                           
  3620                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
  3621  0747  1683               	bsf	3,5	;RP0=1, select bank1
  3622  0748  1303               	bcf	3,6	;RP1=0, select bank1
  3623  0749  0844               	movf	sprintf@c^(0+128),w
  3624  074A  00A5               	movwf	??_sprintf^(0+128)
  3625  074B  01A6               	clrf	(??_sprintf^(0+128)+1)
  3626  074C  0825               	movf	??_sprintf^(0+128),w
  3627  074D  00C2               	movwf	sprintf@prec^(0+128)
  3628  074E  0826               	movf	(??_sprintf+1)^(0+128),w
  3629  074F  00C3               	movwf	(sprintf@prec+1)^(0+128)
  3630  0750                     l3359:
  3631                           
  3632                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
  3633  0750  1683               	bsf	3,5	;RP0=1, select bank1
  3634  0751  1303               	bcf	3,6	;RP1=0, select bank1
  3635  0752  0835               	movf	sprintf@width^(0+128),w
  3636  0753  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3637  0754  1903               	btfsc	3,2
  3638  0755  2F57               	goto	u5511
  3639  0756  2F58               	goto	u5510
  3640  0757                     u5511:
  3641  0757  2F6A               	goto	l3365
  3642  0758                     u5510:
  3643  0758                     l3361:
  3644  0758  3003               	movlw	3
  3645  0759  0533               	andwf	sprintf@flag^(0+128),w
  3646  075A  00A5               	movwf	??_sprintf^(0+128)
  3647  075B  3000               	movlw	0
  3648  075C  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3649  075D  00A6               	movwf	(??_sprintf+1)^(0+128)
  3650  075E  0825               	movf	??_sprintf^(0+128),w
  3651  075F  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3652  0760  1903               	btfsc	3,2
  3653  0761  2F63               	goto	u5521
  3654  0762  2F64               	goto	u5520
  3655  0763                     u5521:
  3656  0763  2F6A               	goto	l3365
  3657  0764                     u5520:
  3658  0764                     l3363:
  3659                           
  3660                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
  3661  0764  30FF               	movlw	255
  3662  0765  07B5               	addwf	sprintf@width^(0+128),f
  3663  0766  1803               	skipnc
  3664  0767  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3665  0768  30FF               	movlw	255
  3666  0769  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3667  076A                     l3365:
  3668                           
  3669                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
  3670  076A  1F34               	btfss	(sprintf@flag+1)^(0+128),6
  3671  076B  2F6D               	goto	u5531
  3672  076C  2F6E               	goto	u5530
  3673  076D                     u5531:
  3674  076D  2F89               	goto	l3373
  3675  076E                     u5530:
  3676  076E                     l3367:
  3677                           
  3678                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
  3679  076E  0843               	movf	(sprintf@prec+1)^(0+128),w
  3680  076F  3A80               	xorlw	128
  3681  0770  00A5               	movwf	??_sprintf^(0+128)
  3682  0771  0836               	movf	(sprintf@width+1)^(0+128),w
  3683  0772  3A80               	xorlw	128
  3684  0773  0225               	subwf	??_sprintf^(0+128),w
  3685  0774  1D03               	skipz
  3686  0775  2F78               	goto	u5545
  3687  0776  0835               	movf	sprintf@width^(0+128),w
  3688  0777  0242               	subwf	sprintf@prec^(0+128),w
  3689  0778                     u5545:
  3690  0778  1803               	skipnc
  3691  0779  2F7B               	goto	u5541
  3692  077A  2F7C               	goto	u5540
  3693  077B                     u5541:
  3694  077B  2F85               	goto	l3371
  3695  077C                     u5540:
  3696  077C                     l3369:
  3697                           
  3698                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
  3699  077C  1683               	bsf	3,5	;RP0=1, select bank1
  3700  077D  1303               	bcf	3,6	;RP1=0, select bank1
  3701  077E  0842               	movf	sprintf@prec^(0+128),w
  3702  077F  02B5               	subwf	sprintf@width^(0+128),f
  3703  0780  0843               	movf	(sprintf@prec+1)^(0+128),w
  3704  0781  1C03               	skipc
  3705  0782  03B6               	decf	(sprintf@width+1)^(0+128),f
  3706  0783  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3707  0784  2F89               	goto	l3373
  3708  0785                     l3371:
  3709                           
  3710                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
  3711  0785  1683               	bsf	3,5	;RP0=1, select bank1
  3712  0786  1303               	bcf	3,6	;RP1=0, select bank1
  3713  0787  01B5               	clrf	sprintf@width^(0+128)
  3714  0788  01B6               	clrf	(sprintf@width+1)^(0+128)
  3715  0789                     l3373:
  3716                           
  3717                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
  3718  0789  0836               	movf	(sprintf@width+1)^(0+128),w
  3719  078A  3A80               	xorlw	128
  3720  078B  3C80               	sublw	128
  3721  078C  1D03               	skipz
  3722  078D  2F90               	goto	u5555
  3723  078E  0835               	movf	sprintf@width^(0+128),w
  3724  078F  0244               	subwf	sprintf@c^(0+128),w
  3725  0790                     u5555:
  3726  0790  1803               	skipnc
  3727  0791  2F93               	goto	u5551
  3728  0792  2F94               	goto	u5550
  3729  0793                     u5551:
  3730  0793  2FA0               	goto	l3377
  3731  0794                     u5550:
  3732  0794                     l3375:
  3733                           
  3734                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
  3735  0794  1683               	bsf	3,5	;RP0=1, select bank1
  3736  0795  1303               	bcf	3,6	;RP1=0, select bank1
  3737  0796  0844               	movf	sprintf@c^(0+128),w
  3738  0797  00A5               	movwf	??_sprintf^(0+128)
  3739  0798  01A6               	clrf	(??_sprintf^(0+128)+1)
  3740  0799  0825               	movf	??_sprintf^(0+128),w
  3741  079A  02B5               	subwf	sprintf@width^(0+128),f
  3742  079B  0826               	movf	(??_sprintf+1)^(0+128),w
  3743  079C  1C03               	skipc
  3744  079D  03B6               	decf	(sprintf@width+1)^(0+128),f
  3745  079E  02B6               	subwf	(sprintf@width+1)^(0+128),f
  3746  079F  2FA4               	goto	l3379
  3747  07A0                     l3377:
  3748                           
  3749                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
  3750  07A0  1683               	bsf	3,5	;RP0=1, select bank1
  3751  07A1  1303               	bcf	3,6	;RP1=0, select bank1
  3752  07A2  01B5               	clrf	sprintf@width^(0+128)
  3753  07A3  01B6               	clrf	(sprintf@width+1)^(0+128)
  3754  07A4                     l3379:
  3755                           
  3756                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
  3757  07A4  0835               	movf	sprintf@width^(0+128),w
  3758  07A5  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3759  07A6  1903               	btfsc	3,2
  3760  07A7  2FA9               	goto	u5561
  3761  07A8  2FAA               	goto	u5560
  3762  07A9                     u5561:
  3763  07A9  2FC1               	goto	l3387
  3764  07AA                     u5560:
  3765  07AA                     l3381:
  3766                           
  3767                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
  3768  07AA  3020               	movlw	32
  3769  07AB  00A5               	movwf	??_sprintf^(0+128)
  3770  07AC  0841               	movf	sprintf@sp^(0+128),w
  3771  07AD  0084               	movwf	4
  3772  07AE  0825               	movf	??_sprintf^(0+128),w
  3773  07AF  1383               	bcf	3,7	;select IRP bank0
  3774  07B0  0080               	movwf	0
  3775  07B1                     l3383:
  3776  07B1  3001               	movlw	1
  3777  07B2  00A5               	movwf	??_sprintf^(0+128)
  3778  07B3  0825               	movf	??_sprintf^(0+128),w
  3779  07B4  07C1               	addwf	sprintf@sp^(0+128),f
  3780  07B5                     l3385:
  3781  07B5  30FF               	movlw	255
  3782  07B6  07B5               	addwf	sprintf@width^(0+128),f
  3783  07B7  1803               	skipnc
  3784  07B8  0AB6               	incf	(sprintf@width+1)^(0+128),f
  3785  07B9  30FF               	movlw	255
  3786  07BA  07B6               	addwf	(sprintf@width+1)^(0+128),f
  3787  07BB  0835               	movf	sprintf@width^(0+128),w
  3788  07BC  0436               	iorwf	(sprintf@width+1)^(0+128),w
  3789  07BD  1D03               	btfss	3,2
  3790  07BE  2FC0               	goto	u5571
  3791  07BF  2FC1               	goto	u5570
  3792  07C0                     u5571:
  3793  07C0  2FAA               	goto	l3381
  3794  07C1                     u5570:
  3795  07C1                     l3387:
  3796                           
  3797                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
  3798  07C1  3003               	movlw	3
  3799  07C2  0533               	andwf	sprintf@flag^(0+128),w
  3800  07C3  00A5               	movwf	??_sprintf^(0+128)
  3801  07C4  3000               	movlw	0
  3802  07C5  0534               	andwf	(sprintf@flag+1)^(0+128),w
  3803  07C6  00A6               	movwf	(??_sprintf+1)^(0+128)
  3804  07C7  0825               	movf	??_sprintf^(0+128),w
  3805  07C8  0426               	iorwf	(??_sprintf^(0+128)+1),w
  3806  07C9  1903               	btfsc	3,2
  3807  07CA  2FCC               	goto	u5581
  3808  07CB  2FCD               	goto	u5580
  3809  07CC                     u5581:
  3810  07CC  2FD5               	goto	l3393
  3811  07CD                     u5580:
  3812  07CD                     l3389:
  3813                           
  3814                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
  3815  07CD  302D               	movlw	45
  3816  07CE  00A5               	movwf	??_sprintf^(0+128)
  3817  07CF  0841               	movf	sprintf@sp^(0+128),w
  3818  07D0  0084               	movwf	4
  3819  07D1  0825               	movf	??_sprintf^(0+128),w
  3820  07D2  1383               	bcf	3,7	;select IRP bank0
  3821  07D3  0080               	movwf	0
  3822  07D4  2886               	goto	l3149
  3823  07D5                     l3393:
  3824                           
  3825                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  3826  07D5  3001               	movlw	1
  3827  07D6  07A0               	addwf	sprintf@f^(0+128),f
  3828  07D7  30FF               	movlw	-1
  3829  07D8  0720               	addwf	sprintf@f^(0+128),w
  3830  07D9  0084               	movwf	4
  3831  07DA  160A  118A  200A  120A  118A  	fcall	stringdir
  3832  07DF  00A5               	movwf	??_sprintf^(0+128)
  3833  07E0  0825               	movf	??_sprintf^(0+128),w
  3834  07E1  00C4               	movwf	sprintf@c^(0+128)
  3835  07E2  0844               	movf	sprintf@c^(0+128),w
  3836  07E3  1D03               	btfss	3,2
  3837  07E4  2FE6               	goto	u5591
  3838  07E5  2FE7               	goto	u5590
  3839  07E6                     u5591:
  3840  07E6  2879               	goto	l3145
  3841  07E7                     u5590:
  3842  07E7                     l3395:
  3843                           
  3844                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
  3845  07E7  0841               	movf	sprintf@sp^(0+128),w
  3846  07E8  0084               	movwf	4
  3847  07E9  1383               	bcf	3,7	;select IRP bank0
  3848  07EA  0180               	clrf	0
  3849  07EB                     l364:
  3850  07EB  0008               	return
  3851  07EC                     __end_of_sprintf:
  3852                           
  3853                           	psect	text2
  3854  0940                     __ptext2:	
  3855 ;; *************** function _scale *****************
  3856 ;; Defined at:
  3857 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3858 ;; Parameters:    Size  Location     Type
  3859 ;;  scl             1    wreg     char 
  3860 ;; Auto vars:     Size  Location     Type
  3861 ;;  scl             1   48[BANK0 ] char 
  3862 ;; Return value:  Size  Location     Type
  3863 ;;                  4   30[BANK0 ] char 
  3864 ;; Registers used:
  3865 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3866 ;; Tracked objects:
  3867 ;;		On entry : 0/0
  3868 ;;		On exit  : 0/0
  3869 ;;		Unchanged: 0/0
  3870 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3871 ;;      Params:         0       4       0       0       0
  3872 ;;      Locals:         0       5       0       0       0
  3873 ;;      Temps:          0      10       0       0       0
  3874 ;;      Totals:         0      19       0       0       0
  3875 ;;Total ram usage:       19 bytes
  3876 ;; Hardware stack levels used:    1
  3877 ;; Hardware stack levels required when called:    2
  3878 ;; This function calls:
  3879 ;;		___awdiv
  3880 ;;		___awmod
  3881 ;;		___flmul
  3882 ;; This function is called by:
  3883 ;;		_sprintf
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           
  3888                           ;psect for function _scale
  3889  0940                     _scale:
  3890                           
  3891                           ;incstack = 0
  3892                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3893                           ;scale@scl stored from wreg
  3894  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3895  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3896  0942  00D0               	movwf	scale@scl
  3897  0943                     l2749:
  3898                           
  3899                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3900  0943  1FD0               	btfss	scale@scl,7
  3901  0944  2946               	goto	u4101
  3902  0945  2947               	goto	u4100
  3903  0946                     u4101:
  3904  0946  2AF4               	goto	l2771
  3905  0947                     u4100:
  3906  0947                     l2751:
  3907                           
  3908                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3909  0947  09D0               	comf	scale@scl,f
  3910  0948  0AD0               	incf	scale@scl,f
  3911  0949                     l2753:
  3912                           
  3913                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3914  0949  0850               	movf	scale@scl,w
  3915  094A  3A80               	xorlw	128
  3916  094B  3E12               	addlw	-238
  3917  094C  1C03               	skipc
  3918  094D  294F               	goto	u4111
  3919  094E  2950               	goto	u4110
  3920  094F                     u4111:
  3921  094F  2A38               	goto	l2761
  3922  0950                     u4110:
  3923  0950                     l2755:
  3924                           
  3925                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3926  0950  300A               	movlw	10
  3927  0951  00F7               	movwf	___awdiv@divisor
  3928  0952  3000               	movlw	0
  3929  0953  00F8               	movwf	___awdiv@divisor+1
  3930  0954  0850               	movf	scale@scl,w
  3931  0955  00F2               	movwf	___awmod@dividend
  3932  0956  01F3               	clrf	___awmod@dividend+1
  3933  0957  1BF2               	btfsc	___awmod@dividend,7
  3934  0958  03F3               	decf	___awmod@dividend+1,f
  3935  0959  3064               	movlw	100
  3936  095A  00F0               	movwf	___awmod@divisor
  3937  095B  3000               	movlw	0
  3938  095C  00F1               	movwf	___awmod@divisor+1
  3939  095D  160A  158A  2705  120A  158A  	fcall	___awmod
  3940  0962  0871               	movf	?___awmod+1,w
  3941  0963  00FA               	movwf	___awdiv@dividend+1
  3942  0964  0870               	movf	?___awmod,w
  3943  0965  00F9               	movwf	___awdiv@dividend
  3944  0966  120A  118A  2008  120A  158A  	fcall	___awdiv
  3945  096B  0877               	movf	?___awdiv,w
  3946  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3947  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3948  096E  00C2               	movwf	??_scale
  3949  096F  3001               	movlw	1
  3950  0970                     u4125:
  3951  0970  1003               	clrc
  3952  0971  0DC2               	rlf	??_scale,f
  3953  0972  3EFF               	addlw	-1
  3954  0973  1D03               	skipz
  3955  0974  2970               	goto	u4125
  3956  0975  1003               	clrc
  3957  0976  0D42               	rlf	??_scale,w
  3958  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3959  0978  0084               	movwf	4
  3960  0979  160A  118A  200A  120A  158A  	fcall	stringdir
  3961  097E  00C3               	movwf	??_scale+1
  3962  097F  160A  118A  200A  120A  158A  	fcall	stringdir
  3963  0984  00C4               	movwf	??_scale+2
  3964  0985  160A  118A  200A  120A  158A  	fcall	stringdir
  3965  098A  00C5               	movwf	??_scale+3
  3966  098B  160A  118A  200A  120A  158A  	fcall	stringdir
  3967  0990  00C6               	movwf	??_scale+4
  3968  0991  0846               	movf	??_scale+4,w
  3969  0992  00A7               	movwf	___flmul@b+3
  3970  0993  0845               	movf	??_scale+3,w
  3971  0994  00A6               	movwf	___flmul@b+2
  3972  0995  0844               	movf	??_scale+2,w
  3973  0996  00A5               	movwf	___flmul@b+1
  3974  0997  0843               	movf	??_scale+1,w
  3975  0998  00A4               	movwf	___flmul@b
  3976  0999  3064               	movlw	100
  3977  099A  00F7               	movwf	___awdiv@divisor
  3978  099B  3000               	movlw	0
  3979  099C  00F8               	movwf	___awdiv@divisor+1
  3980  099D  0850               	movf	scale@scl,w
  3981  099E  00F9               	movwf	___awdiv@dividend
  3982  099F  01FA               	clrf	___awdiv@dividend+1
  3983  09A0  1BF9               	btfsc	___awdiv@dividend,7
  3984  09A1  03FA               	decf	___awdiv@dividend+1,f
  3985  09A2  120A  118A  2008  120A  158A  	fcall	___awdiv
  3986  09A7  0877               	movf	?___awdiv,w
  3987  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  3988  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  3989  09AA  00C7               	movwf	??_scale+5
  3990  09AB  3001               	movlw	1
  3991  09AC                     u4135:
  3992  09AC  1003               	clrc
  3993  09AD  0DC7               	rlf	??_scale+5,f
  3994  09AE  3EFF               	addlw	-1
  3995  09AF  1D03               	skipz
  3996  09B0  29AC               	goto	u4135
  3997  09B1  1003               	clrc
  3998  09B2  0D47               	rlf	??_scale+5,w
  3999  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4000  09B4  0084               	movwf	4
  4001  09B5  160A  118A  200A  120A  158A  	fcall	stringdir
  4002  09BA  00C8               	movwf	??_scale+6
  4003  09BB  160A  118A  200A  120A  158A  	fcall	stringdir
  4004  09C0  00C9               	movwf	??_scale+7
  4005  09C1  160A  118A  200A  120A  158A  	fcall	stringdir
  4006  09C6  00CA               	movwf	??_scale+8
  4007  09C7  160A  118A  200A  120A  158A  	fcall	stringdir
  4008  09CC  00CB               	movwf	??_scale+9
  4009  09CD  084B               	movf	??_scale+9,w
  4010  09CE  00AB               	movwf	___flmul@a+3
  4011  09CF  084A               	movf	??_scale+8,w
  4012  09D0  00AA               	movwf	___flmul@a+2
  4013  09D1  0849               	movf	??_scale+7,w
  4014  09D2  00A9               	movwf	___flmul@a+1
  4015  09D3  0848               	movf	??_scale+6,w
  4016  09D4  00A8               	movwf	___flmul@a
  4017  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  4018  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  4019  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  4020  09DC  0827               	movf	?___flmul+3,w
  4021  09DD  00CF               	movwf	_scale$1209+3
  4022  09DE  0826               	movf	?___flmul+2,w
  4023  09DF  00CE               	movwf	_scale$1209+2
  4024  09E0  0825               	movf	?___flmul+1,w
  4025  09E1  00CD               	movwf	_scale$1209+1
  4026  09E2  0824               	movf	?___flmul,w
  4027  09E3  00CC               	movwf	_scale$1209
  4028                           
  4029                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  4030  09E4  300A               	movlw	10
  4031  09E5  00F0               	movwf	___awmod@divisor
  4032  09E6  3000               	movlw	0
  4033  09E7  00F1               	movwf	___awmod@divisor+1
  4034  09E8  0850               	movf	scale@scl,w
  4035  09E9  00F2               	movwf	___awmod@dividend
  4036  09EA  01F3               	clrf	___awmod@dividend+1
  4037  09EB  1BF2               	btfsc	___awmod@dividend,7
  4038  09EC  03F3               	decf	___awmod@dividend+1,f
  4039  09ED  160A  158A  2705  120A  158A  	fcall	___awmod
  4040  09F2  0870               	movf	?___awmod,w
  4041  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  4042  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  4043  09F5  00C2               	movwf	??_scale
  4044  09F6  3001               	movlw	1
  4045  09F7                     u4145:
  4046  09F7  1003               	clrc
  4047  09F8  0DC2               	rlf	??_scale,f
  4048  09F9  3EFF               	addlw	-1
  4049  09FA  1D03               	skipz
  4050  09FB  29F7               	goto	u4145
  4051  09FC  1003               	clrc
  4052  09FD  0D42               	rlf	??_scale,w
  4053  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4054  09FF  0084               	movwf	4
  4055  0A00  160A  118A  200A  120A  158A  	fcall	stringdir
  4056  0A05  00C3               	movwf	??_scale+1
  4057  0A06  160A  118A  200A  120A  158A  	fcall	stringdir
  4058  0A0B  00C4               	movwf	??_scale+2
  4059  0A0C  160A  118A  200A  120A  158A  	fcall	stringdir
  4060  0A11  00C5               	movwf	??_scale+3
  4061  0A12  160A  118A  200A  120A  158A  	fcall	stringdir
  4062  0A17  00C6               	movwf	??_scale+4
  4063  0A18  0846               	movf	??_scale+4,w
  4064  0A19  00A7               	movwf	___flmul@b+3
  4065  0A1A  0845               	movf	??_scale+3,w
  4066  0A1B  00A6               	movwf	___flmul@b+2
  4067  0A1C  0844               	movf	??_scale+2,w
  4068  0A1D  00A5               	movwf	___flmul@b+1
  4069  0A1E  0843               	movf	??_scale+1,w
  4070  0A1F  00A4               	movwf	___flmul@b
  4071  0A20  084F               	movf	_scale$1209+3,w
  4072  0A21  00AB               	movwf	___flmul@a+3
  4073  0A22  084E               	movf	_scale$1209+2,w
  4074  0A23  00AA               	movwf	___flmul@a+2
  4075  0A24  084D               	movf	_scale$1209+1,w
  4076  0A25  00A9               	movwf	___flmul@a+1
  4077  0A26  084C               	movf	_scale$1209,w
  4078  0A27  00A8               	movwf	___flmul@a
  4079  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  4080  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  4081  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  4082  0A2F  0827               	movf	?___flmul+3,w
  4083  0A30  00C1               	movwf	?_scale+3
  4084  0A31  0826               	movf	?___flmul+2,w
  4085  0A32  00C0               	movwf	?_scale+2
  4086  0A33  0825               	movf	?___flmul+1,w
  4087  0A34  00BF               	movwf	?_scale+1
  4088  0A35  0824               	movf	?___flmul,w
  4089  0A36  00BE               	movwf	?_scale
  4090  0A37  2C9E               	goto	l281
  4091  0A38                     l2761:
  4092  0A38  0850               	movf	scale@scl,w
  4093  0A39  3A80               	xorlw	128
  4094  0A3A  3E75               	addlw	-139
  4095  0A3B  1C03               	skipc
  4096  0A3C  2A3E               	goto	u4151
  4097  0A3D  2A3F               	goto	u4150
  4098  0A3E                     u4151:
  4099  0A3E  2AC7               	goto	l2767
  4100  0A3F                     u4150:
  4101  0A3F                     l2763:
  4102                           
  4103                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  4104  0A3F  300A               	movlw	10
  4105  0A40  00F0               	movwf	___awmod@divisor
  4106  0A41  3000               	movlw	0
  4107  0A42  00F1               	movwf	___awmod@divisor+1
  4108  0A43  0850               	movf	scale@scl,w
  4109  0A44  00F2               	movwf	___awmod@dividend
  4110  0A45  01F3               	clrf	___awmod@dividend+1
  4111  0A46  1BF2               	btfsc	___awmod@dividend,7
  4112  0A47  03F3               	decf	___awmod@dividend+1,f
  4113  0A48  160A  158A  2705  120A  158A  	fcall	___awmod
  4114  0A4D  0870               	movf	?___awmod,w
  4115  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  4116  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  4117  0A50  00C2               	movwf	??_scale
  4118  0A51  3001               	movlw	1
  4119  0A52                     u4165:
  4120  0A52  1003               	clrc
  4121  0A53  0DC2               	rlf	??_scale,f
  4122  0A54  3EFF               	addlw	-1
  4123  0A55  1D03               	skipz
  4124  0A56  2A52               	goto	u4165
  4125  0A57  1003               	clrc
  4126  0A58  0D42               	rlf	??_scale,w
  4127  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4128  0A5A  0084               	movwf	4
  4129  0A5B  160A  118A  200A  120A  158A  	fcall	stringdir
  4130  0A60  00C3               	movwf	??_scale+1
  4131  0A61  160A  118A  200A  120A  158A  	fcall	stringdir
  4132  0A66  00C4               	movwf	??_scale+2
  4133  0A67  160A  118A  200A  120A  158A  	fcall	stringdir
  4134  0A6C  00C5               	movwf	??_scale+3
  4135  0A6D  160A  118A  200A  120A  158A  	fcall	stringdir
  4136  0A72  00C6               	movwf	??_scale+4
  4137  0A73  0846               	movf	??_scale+4,w
  4138  0A74  00A7               	movwf	___flmul@b+3
  4139  0A75  0845               	movf	??_scale+3,w
  4140  0A76  00A6               	movwf	___flmul@b+2
  4141  0A77  0844               	movf	??_scale+2,w
  4142  0A78  00A5               	movwf	___flmul@b+1
  4143  0A79  0843               	movf	??_scale+1,w
  4144  0A7A  00A4               	movwf	___flmul@b
  4145  0A7B  300A               	movlw	10
  4146  0A7C  00F7               	movwf	___awdiv@divisor
  4147  0A7D  3000               	movlw	0
  4148  0A7E  00F8               	movwf	___awdiv@divisor+1
  4149  0A7F  0850               	movf	scale@scl,w
  4150  0A80  00F9               	movwf	___awdiv@dividend
  4151  0A81  01FA               	clrf	___awdiv@dividend+1
  4152  0A82  1BF9               	btfsc	___awdiv@dividend,7
  4153  0A83  03FA               	decf	___awdiv@dividend+1,f
  4154  0A84  120A  118A  2008  120A  158A  	fcall	___awdiv
  4155  0A89  0877               	movf	?___awdiv,w
  4156  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  4157  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  4158  0A8C  00C7               	movwf	??_scale+5
  4159  0A8D  3001               	movlw	1
  4160  0A8E                     u4175:
  4161  0A8E  1003               	clrc
  4162  0A8F  0DC7               	rlf	??_scale+5,f
  4163  0A90  3EFF               	addlw	-1
  4164  0A91  1D03               	skipz
  4165  0A92  2A8E               	goto	u4175
  4166  0A93  1003               	clrc
  4167  0A94  0D47               	rlf	??_scale+5,w
  4168  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4169  0A96  0084               	movwf	4
  4170  0A97  160A  118A  200A  120A  158A  	fcall	stringdir
  4171  0A9C  00C8               	movwf	??_scale+6
  4172  0A9D  160A  118A  200A  120A  158A  	fcall	stringdir
  4173  0AA2  00C9               	movwf	??_scale+7
  4174  0AA3  160A  118A  200A  120A  158A  	fcall	stringdir
  4175  0AA8  00CA               	movwf	??_scale+8
  4176  0AA9  160A  118A  200A  120A  158A  	fcall	stringdir
  4177  0AAE  00CB               	movwf	??_scale+9
  4178  0AAF  084B               	movf	??_scale+9,w
  4179  0AB0  00AB               	movwf	___flmul@a+3
  4180  0AB1  084A               	movf	??_scale+8,w
  4181  0AB2  00AA               	movwf	___flmul@a+2
  4182  0AB3  0849               	movf	??_scale+7,w
  4183  0AB4  00A9               	movwf	___flmul@a+1
  4184  0AB5  0848               	movf	??_scale+6,w
  4185  0AB6  00A8               	movwf	___flmul@a
  4186  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  4187  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  4188  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  4189  0ABE  0827               	movf	?___flmul+3,w
  4190  0ABF  00C1               	movwf	?_scale+3
  4191  0AC0  0826               	movf	?___flmul+2,w
  4192  0AC1  00C0               	movwf	?_scale+2
  4193  0AC2  0825               	movf	?___flmul+1,w
  4194  0AC3  00BF               	movwf	?_scale+1
  4195  0AC4  0824               	movf	?___flmul,w
  4196  0AC5  00BE               	movwf	?_scale
  4197  0AC6  2C9E               	goto	l281
  4198  0AC7                     l2767:
  4199                           
  4200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  4201  0AC7  0850               	movf	scale@scl,w
  4202  0AC8  00C2               	movwf	??_scale
  4203  0AC9  3001               	movlw	1
  4204  0ACA                     u4185:
  4205  0ACA  1003               	clrc
  4206  0ACB  0DC2               	rlf	??_scale,f
  4207  0ACC  3EFF               	addlw	-1
  4208  0ACD  1D03               	skipz
  4209  0ACE  2ACA               	goto	u4185
  4210  0ACF  1003               	clrc
  4211  0AD0  0D42               	rlf	??_scale,w
  4212  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4213  0AD2  0084               	movwf	4
  4214  0AD3  160A  118A  200A  120A  158A  	fcall	stringdir
  4215  0AD8  00C3               	movwf	??_scale+1
  4216  0AD9  160A  118A  200A  120A  158A  	fcall	stringdir
  4217  0ADE  00C4               	movwf	??_scale+2
  4218  0ADF  160A  118A  200A  120A  158A  	fcall	stringdir
  4219  0AE4  00C5               	movwf	??_scale+3
  4220  0AE5  160A  118A  200A  120A  158A  	fcall	stringdir
  4221  0AEA  00C6               	movwf	??_scale+4
  4222  0AEB  0846               	movf	??_scale+4,w
  4223  0AEC  00C1               	movwf	?_scale+3
  4224  0AED  0845               	movf	??_scale+3,w
  4225  0AEE  00C0               	movwf	?_scale+2
  4226  0AEF  0844               	movf	??_scale+2,w
  4227  0AF0  00BF               	movwf	?_scale+1
  4228  0AF1  0843               	movf	??_scale+1,w
  4229  0AF2  00BE               	movwf	?_scale
  4230  0AF3  2C9E               	goto	l281
  4231  0AF4                     l2771:
  4232                           
  4233                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  4234  0AF4  0850               	movf	scale@scl,w
  4235  0AF5  3A80               	xorlw	128
  4236  0AF6  3E12               	addlw	-238
  4237  0AF7  1C03               	skipc
  4238  0AF8  2AFA               	goto	u4191
  4239  0AF9  2AFB               	goto	u4190
  4240  0AFA                     u4191:
  4241  0AFA  2BE3               	goto	l2779
  4242  0AFB                     u4190:
  4243  0AFB                     l2773:
  4244                           
  4245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4246  0AFB  300A               	movlw	10
  4247  0AFC  00F7               	movwf	___awdiv@divisor
  4248  0AFD  3000               	movlw	0
  4249  0AFE  00F8               	movwf	___awdiv@divisor+1
  4250  0AFF  0850               	movf	scale@scl,w
  4251  0B00  00F2               	movwf	___awmod@dividend
  4252  0B01  01F3               	clrf	___awmod@dividend+1
  4253  0B02  1BF2               	btfsc	___awmod@dividend,7
  4254  0B03  03F3               	decf	___awmod@dividend+1,f
  4255  0B04  3064               	movlw	100
  4256  0B05  00F0               	movwf	___awmod@divisor
  4257  0B06  3000               	movlw	0
  4258  0B07  00F1               	movwf	___awmod@divisor+1
  4259  0B08  160A  158A  2705  120A  158A  	fcall	___awmod
  4260  0B0D  0871               	movf	?___awmod+1,w
  4261  0B0E  00FA               	movwf	___awdiv@dividend+1
  4262  0B0F  0870               	movf	?___awmod,w
  4263  0B10  00F9               	movwf	___awdiv@dividend
  4264  0B11  120A  118A  2008  120A  158A  	fcall	___awdiv
  4265  0B16  0877               	movf	?___awdiv,w
  4266  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  4267  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  4268  0B19  00C2               	movwf	??_scale
  4269  0B1A  3001               	movlw	1
  4270  0B1B                     u4205:
  4271  0B1B  1003               	clrc
  4272  0B1C  0DC2               	rlf	??_scale,f
  4273  0B1D  3EFF               	addlw	-1
  4274  0B1E  1D03               	skipz
  4275  0B1F  2B1B               	goto	u4205
  4276  0B20  1003               	clrc
  4277  0B21  0D42               	rlf	??_scale,w
  4278  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4279  0B23  0084               	movwf	4
  4280  0B24  160A  118A  200A  120A  158A  	fcall	stringdir
  4281  0B29  00C3               	movwf	??_scale+1
  4282  0B2A  160A  118A  200A  120A  158A  	fcall	stringdir
  4283  0B2F  00C4               	movwf	??_scale+2
  4284  0B30  160A  118A  200A  120A  158A  	fcall	stringdir
  4285  0B35  00C5               	movwf	??_scale+3
  4286  0B36  160A  118A  200A  120A  158A  	fcall	stringdir
  4287  0B3B  00C6               	movwf	??_scale+4
  4288  0B3C  0846               	movf	??_scale+4,w
  4289  0B3D  00A7               	movwf	___flmul@b+3
  4290  0B3E  0845               	movf	??_scale+3,w
  4291  0B3F  00A6               	movwf	___flmul@b+2
  4292  0B40  0844               	movf	??_scale+2,w
  4293  0B41  00A5               	movwf	___flmul@b+1
  4294  0B42  0843               	movf	??_scale+1,w
  4295  0B43  00A4               	movwf	___flmul@b
  4296  0B44  3064               	movlw	100
  4297  0B45  00F7               	movwf	___awdiv@divisor
  4298  0B46  3000               	movlw	0
  4299  0B47  00F8               	movwf	___awdiv@divisor+1
  4300  0B48  0850               	movf	scale@scl,w
  4301  0B49  00F9               	movwf	___awdiv@dividend
  4302  0B4A  01FA               	clrf	___awdiv@dividend+1
  4303  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  4304  0B4C  03FA               	decf	___awdiv@dividend+1,f
  4305  0B4D  120A  118A  2008  120A  158A  	fcall	___awdiv
  4306  0B52  0877               	movf	?___awdiv,w
  4307  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  4308  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  4309  0B55  00C7               	movwf	??_scale+5
  4310  0B56  3001               	movlw	1
  4311  0B57                     u4215:
  4312  0B57  1003               	clrc
  4313  0B58  0DC7               	rlf	??_scale+5,f
  4314  0B59  3EFF               	addlw	-1
  4315  0B5A  1D03               	skipz
  4316  0B5B  2B57               	goto	u4215
  4317  0B5C  1003               	clrc
  4318  0B5D  0D47               	rlf	??_scale+5,w
  4319  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  4320  0B5F  0084               	movwf	4
  4321  0B60  160A  118A  200A  120A  158A  	fcall	stringdir
  4322  0B65  00C8               	movwf	??_scale+6
  4323  0B66  160A  118A  200A  120A  158A  	fcall	stringdir
  4324  0B6B  00C9               	movwf	??_scale+7
  4325  0B6C  160A  118A  200A  120A  158A  	fcall	stringdir
  4326  0B71  00CA               	movwf	??_scale+8
  4327  0B72  160A  118A  200A  120A  158A  	fcall	stringdir
  4328  0B77  00CB               	movwf	??_scale+9
  4329  0B78  084B               	movf	??_scale+9,w
  4330  0B79  00AB               	movwf	___flmul@a+3
  4331  0B7A  084A               	movf	??_scale+8,w
  4332  0B7B  00AA               	movwf	___flmul@a+2
  4333  0B7C  0849               	movf	??_scale+7,w
  4334  0B7D  00A9               	movwf	___flmul@a+1
  4335  0B7E  0848               	movf	??_scale+6,w
  4336  0B7F  00A8               	movwf	___flmul@a
  4337  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  4338  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  4339  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  4340  0B87  0827               	movf	?___flmul+3,w
  4341  0B88  00CF               	movwf	_scale$1209+3
  4342  0B89  0826               	movf	?___flmul+2,w
  4343  0B8A  00CE               	movwf	_scale$1209+2
  4344  0B8B  0825               	movf	?___flmul+1,w
  4345  0B8C  00CD               	movwf	_scale$1209+1
  4346  0B8D  0824               	movf	?___flmul,w
  4347  0B8E  00CC               	movwf	_scale$1209
  4348                           
  4349                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  4350  0B8F  300A               	movlw	10
  4351  0B90  00F0               	movwf	___awmod@divisor
  4352  0B91  3000               	movlw	0
  4353  0B92  00F1               	movwf	___awmod@divisor+1
  4354  0B93  0850               	movf	scale@scl,w
  4355  0B94  00F2               	movwf	___awmod@dividend
  4356  0B95  01F3               	clrf	___awmod@dividend+1
  4357  0B96  1BF2               	btfsc	___awmod@dividend,7
  4358  0B97  03F3               	decf	___awmod@dividend+1,f
  4359  0B98  160A  158A  2705  120A  158A  	fcall	___awmod
  4360  0B9D  0870               	movf	?___awmod,w
  4361  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  4362  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  4363  0BA0  00C2               	movwf	??_scale
  4364  0BA1  3001               	movlw	1
  4365  0BA2                     u4225:
  4366  0BA2  1003               	clrc
  4367  0BA3  0DC2               	rlf	??_scale,f
  4368  0BA4  3EFF               	addlw	-1
  4369  0BA5  1D03               	skipz
  4370  0BA6  2BA2               	goto	u4225
  4371  0BA7  1003               	clrc
  4372  0BA8  0D42               	rlf	??_scale,w
  4373  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4374  0BAA  0084               	movwf	4
  4375  0BAB  160A  118A  200A  120A  158A  	fcall	stringdir
  4376  0BB0  00C3               	movwf	??_scale+1
  4377  0BB1  160A  118A  200A  120A  158A  	fcall	stringdir
  4378  0BB6  00C4               	movwf	??_scale+2
  4379  0BB7  160A  118A  200A  120A  158A  	fcall	stringdir
  4380  0BBC  00C5               	movwf	??_scale+3
  4381  0BBD  160A  118A  200A  120A  158A  	fcall	stringdir
  4382  0BC2  00C6               	movwf	??_scale+4
  4383  0BC3  0846               	movf	??_scale+4,w
  4384  0BC4  00A7               	movwf	___flmul@b+3
  4385  0BC5  0845               	movf	??_scale+3,w
  4386  0BC6  00A6               	movwf	___flmul@b+2
  4387  0BC7  0844               	movf	??_scale+2,w
  4388  0BC8  00A5               	movwf	___flmul@b+1
  4389  0BC9  0843               	movf	??_scale+1,w
  4390  0BCA  00A4               	movwf	___flmul@b
  4391  0BCB  084F               	movf	_scale$1209+3,w
  4392  0BCC  00AB               	movwf	___flmul@a+3
  4393  0BCD  084E               	movf	_scale$1209+2,w
  4394  0BCE  00AA               	movwf	___flmul@a+2
  4395  0BCF  084D               	movf	_scale$1209+1,w
  4396  0BD0  00A9               	movwf	___flmul@a+1
  4397  0BD1  084C               	movf	_scale$1209,w
  4398  0BD2  00A8               	movwf	___flmul@a
  4399  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  4400  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  4401  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  4402  0BDA  0827               	movf	?___flmul+3,w
  4403  0BDB  00C1               	movwf	?_scale+3
  4404  0BDC  0826               	movf	?___flmul+2,w
  4405  0BDD  00C0               	movwf	?_scale+2
  4406  0BDE  0825               	movf	?___flmul+1,w
  4407  0BDF  00BF               	movwf	?_scale+1
  4408  0BE0  0824               	movf	?___flmul,w
  4409  0BE1  00BE               	movwf	?_scale
  4410  0BE2  2C9E               	goto	l281
  4411  0BE3                     l2779:
  4412  0BE3  0850               	movf	scale@scl,w
  4413  0BE4  3A80               	xorlw	128
  4414  0BE5  3E75               	addlw	-139
  4415  0BE6  1C03               	skipc
  4416  0BE7  2BE9               	goto	u4231
  4417  0BE8  2BEA               	goto	u4230
  4418  0BE9                     u4231:
  4419  0BE9  2C72               	goto	l2785
  4420  0BEA                     u4230:
  4421  0BEA                     l2781:
  4422                           
  4423                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  4424  0BEA  300A               	movlw	10
  4425  0BEB  00F0               	movwf	___awmod@divisor
  4426  0BEC  3000               	movlw	0
  4427  0BED  00F1               	movwf	___awmod@divisor+1
  4428  0BEE  0850               	movf	scale@scl,w
  4429  0BEF  00F2               	movwf	___awmod@dividend
  4430  0BF0  01F3               	clrf	___awmod@dividend+1
  4431  0BF1  1BF2               	btfsc	___awmod@dividend,7
  4432  0BF2  03F3               	decf	___awmod@dividend+1,f
  4433  0BF3  160A  158A  2705  120A  158A  	fcall	___awmod
  4434  0BF8  0870               	movf	?___awmod,w
  4435  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  4436  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  4437  0BFB  00C2               	movwf	??_scale
  4438  0BFC  3001               	movlw	1
  4439  0BFD                     u4245:
  4440  0BFD  1003               	clrc
  4441  0BFE  0DC2               	rlf	??_scale,f
  4442  0BFF  3EFF               	addlw	-1
  4443  0C00  1D03               	skipz
  4444  0C01  2BFD               	goto	u4245
  4445  0C02  1003               	clrc
  4446  0C03  0D42               	rlf	??_scale,w
  4447  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4448  0C05  0084               	movwf	4
  4449  0C06  160A  118A  200A  120A  158A  	fcall	stringdir
  4450  0C0B  00C3               	movwf	??_scale+1
  4451  0C0C  160A  118A  200A  120A  158A  	fcall	stringdir
  4452  0C11  00C4               	movwf	??_scale+2
  4453  0C12  160A  118A  200A  120A  158A  	fcall	stringdir
  4454  0C17  00C5               	movwf	??_scale+3
  4455  0C18  160A  118A  200A  120A  158A  	fcall	stringdir
  4456  0C1D  00C6               	movwf	??_scale+4
  4457  0C1E  0846               	movf	??_scale+4,w
  4458  0C1F  00A7               	movwf	___flmul@b+3
  4459  0C20  0845               	movf	??_scale+3,w
  4460  0C21  00A6               	movwf	___flmul@b+2
  4461  0C22  0844               	movf	??_scale+2,w
  4462  0C23  00A5               	movwf	___flmul@b+1
  4463  0C24  0843               	movf	??_scale+1,w
  4464  0C25  00A4               	movwf	___flmul@b
  4465  0C26  300A               	movlw	10
  4466  0C27  00F7               	movwf	___awdiv@divisor
  4467  0C28  3000               	movlw	0
  4468  0C29  00F8               	movwf	___awdiv@divisor+1
  4469  0C2A  0850               	movf	scale@scl,w
  4470  0C2B  00F9               	movwf	___awdiv@dividend
  4471  0C2C  01FA               	clrf	___awdiv@dividend+1
  4472  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  4473  0C2E  03FA               	decf	___awdiv@dividend+1,f
  4474  0C2F  120A  118A  2008  120A  158A  	fcall	___awdiv
  4475  0C34  0877               	movf	?___awdiv,w
  4476  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  4477  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  4478  0C37  00C7               	movwf	??_scale+5
  4479  0C38  3001               	movlw	1
  4480  0C39                     u4255:
  4481  0C39  1003               	clrc
  4482  0C3A  0DC7               	rlf	??_scale+5,f
  4483  0C3B  3EFF               	addlw	-1
  4484  0C3C  1D03               	skipz
  4485  0C3D  2C39               	goto	u4255
  4486  0C3E  1003               	clrc
  4487  0C3F  0D47               	rlf	??_scale+5,w
  4488  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  4489  0C41  0084               	movwf	4
  4490  0C42  160A  118A  200A  120A  158A  	fcall	stringdir
  4491  0C47  00C8               	movwf	??_scale+6
  4492  0C48  160A  118A  200A  120A  158A  	fcall	stringdir
  4493  0C4D  00C9               	movwf	??_scale+7
  4494  0C4E  160A  118A  200A  120A  158A  	fcall	stringdir
  4495  0C53  00CA               	movwf	??_scale+8
  4496  0C54  160A  118A  200A  120A  158A  	fcall	stringdir
  4497  0C59  00CB               	movwf	??_scale+9
  4498  0C5A  084B               	movf	??_scale+9,w
  4499  0C5B  00AB               	movwf	___flmul@a+3
  4500  0C5C  084A               	movf	??_scale+8,w
  4501  0C5D  00AA               	movwf	___flmul@a+2
  4502  0C5E  0849               	movf	??_scale+7,w
  4503  0C5F  00A9               	movwf	___flmul@a+1
  4504  0C60  0848               	movf	??_scale+6,w
  4505  0C61  00A8               	movwf	___flmul@a
  4506  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  4507  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  4508  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  4509  0C69  0827               	movf	?___flmul+3,w
  4510  0C6A  00C1               	movwf	?_scale+3
  4511  0C6B  0826               	movf	?___flmul+2,w
  4512  0C6C  00C0               	movwf	?_scale+2
  4513  0C6D  0825               	movf	?___flmul+1,w
  4514  0C6E  00BF               	movwf	?_scale+1
  4515  0C6F  0824               	movf	?___flmul,w
  4516  0C70  00BE               	movwf	?_scale
  4517  0C71  2C9E               	goto	l281
  4518  0C72                     l2785:
  4519                           
  4520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  4521  0C72  0850               	movf	scale@scl,w
  4522  0C73  00C2               	movwf	??_scale
  4523  0C74  3001               	movlw	1
  4524  0C75                     u4265:
  4525  0C75  1003               	clrc
  4526  0C76  0DC2               	rlf	??_scale,f
  4527  0C77  3EFF               	addlw	-1
  4528  0C78  1D03               	skipz
  4529  0C79  2C75               	goto	u4265
  4530  0C7A  1003               	clrc
  4531  0C7B  0D42               	rlf	??_scale,w
  4532  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  4533  0C7D  0084               	movwf	4
  4534  0C7E  160A  118A  200A  120A  158A  	fcall	stringdir
  4535  0C83  00C3               	movwf	??_scale+1
  4536  0C84  160A  118A  200A  120A  158A  	fcall	stringdir
  4537  0C89  00C4               	movwf	??_scale+2
  4538  0C8A  160A  118A  200A  120A  158A  	fcall	stringdir
  4539  0C8F  00C5               	movwf	??_scale+3
  4540  0C90  160A  118A  200A  120A  158A  	fcall	stringdir
  4541  0C95  00C6               	movwf	??_scale+4
  4542  0C96  0846               	movf	??_scale+4,w
  4543  0C97  00C1               	movwf	?_scale+3
  4544  0C98  0845               	movf	??_scale+3,w
  4545  0C99  00C0               	movwf	?_scale+2
  4546  0C9A  0844               	movf	??_scale+2,w
  4547  0C9B  00BF               	movwf	?_scale+1
  4548  0C9C  0843               	movf	??_scale+1,w
  4549  0C9D  00BE               	movwf	?_scale
  4550  0C9E                     l281:
  4551  0C9E  0008               	return
  4552  0C9F                     __end_of_scale:
  4553                           
  4554                           	psect	text3
  4555  1F05                     __ptext3:	
  4556 ;; *************** function ___awmod *****************
  4557 ;; Defined at:
  4558 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  4559 ;; Parameters:    Size  Location     Type
  4560 ;;  divisor         2    0[COMMON] int 
  4561 ;;  dividend        2    2[COMMON] int 
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;  sign            1    6[COMMON] unsigned char 
  4564 ;;  counter         1    5[COMMON] unsigned char 
  4565 ;; Return value:  Size  Location     Type
  4566 ;;                  2    0[COMMON] int 
  4567 ;; Registers used:
  4568 ;;		wreg, status,2, status,0
  4569 ;; Tracked objects:
  4570 ;;		On entry : 0/0
  4571 ;;		On exit  : 0/0
  4572 ;;		Unchanged: 0/0
  4573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4574 ;;      Params:         4       0       0       0       0
  4575 ;;      Locals:         2       0       0       0       0
  4576 ;;      Temps:          1       0       0       0       0
  4577 ;;      Totals:         7       0       0       0       0
  4578 ;;Total ram usage:        7 bytes
  4579 ;; Hardware stack levels used:    1
  4580 ;; This function calls:
  4581 ;;		Nothing
  4582 ;; This function is called by:
  4583 ;;		_scale
  4584 ;; This function uses a non-reentrant model
  4585 ;;
  4586                           
  4587                           
  4588                           ;psect for function ___awmod
  4589  1F05                     ___awmod:
  4590  1F05                     l2287:	
  4591                           ;incstack = 0
  4592                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  4593                           
  4594  1F05  01F6               	clrf	___awmod@sign
  4595  1F06                     l2289:
  4596  1F06  1FF3               	btfss	___awmod@dividend+1,7
  4597  1F07  2F09               	goto	u2961
  4598  1F08  2F0A               	goto	u2960
  4599  1F09                     u2961:
  4600  1F09  2F11               	goto	l2295
  4601  1F0A                     u2960:
  4602  1F0A                     l2291:
  4603  1F0A  09F2               	comf	___awmod@dividend,f
  4604  1F0B  09F3               	comf	___awmod@dividend+1,f
  4605  1F0C  0AF2               	incf	___awmod@dividend,f
  4606  1F0D  1903               	skipnz
  4607  1F0E  0AF3               	incf	___awmod@dividend+1,f
  4608  1F0F                     l2293:
  4609  1F0F  01F6               	clrf	___awmod@sign
  4610  1F10  0AF6               	incf	___awmod@sign,f
  4611  1F11                     l2295:
  4612  1F11  1FF1               	btfss	___awmod@divisor+1,7
  4613  1F12  2F14               	goto	u2971
  4614  1F13  2F15               	goto	u2970
  4615  1F14                     u2971:
  4616  1F14  2F1A               	goto	l2299
  4617  1F15                     u2970:
  4618  1F15                     l2297:
  4619  1F15  09F0               	comf	___awmod@divisor,f
  4620  1F16  09F1               	comf	___awmod@divisor+1,f
  4621  1F17  0AF0               	incf	___awmod@divisor,f
  4622  1F18  1903               	skipnz
  4623  1F19  0AF1               	incf	___awmod@divisor+1,f
  4624  1F1A                     l2299:
  4625  1F1A  0870               	movf	___awmod@divisor,w
  4626  1F1B  0471               	iorwf	___awmod@divisor+1,w
  4627  1F1C  1903               	btfsc	3,2
  4628  1F1D  2F1F               	goto	u2981
  4629  1F1E  2F20               	goto	u2980
  4630  1F1F                     u2981:
  4631  1F1F  2F4F               	goto	l2317
  4632  1F20                     u2980:
  4633  1F20                     l2301:
  4634  1F20  01F5               	clrf	___awmod@counter
  4635  1F21  0AF5               	incf	___awmod@counter,f
  4636  1F22  2F2E               	goto	l2307
  4637  1F23                     l2303:
  4638  1F23  3001               	movlw	1
  4639  1F24                     u2995:
  4640  1F24  1003               	clrc
  4641  1F25  0DF0               	rlf	___awmod@divisor,f
  4642  1F26  0DF1               	rlf	___awmod@divisor+1,f
  4643  1F27  3EFF               	addlw	-1
  4644  1F28  1D03               	skipz
  4645  1F29  2F24               	goto	u2995
  4646  1F2A                     l2305:
  4647  1F2A  3001               	movlw	1
  4648  1F2B  00F4               	movwf	??___awmod
  4649  1F2C  0874               	movf	??___awmod,w
  4650  1F2D  07F5               	addwf	___awmod@counter,f
  4651  1F2E                     l2307:
  4652  1F2E  1FF1               	btfss	___awmod@divisor+1,7
  4653  1F2F  2F31               	goto	u3001
  4654  1F30  2F32               	goto	u3000
  4655  1F31                     u3001:
  4656  1F31  2F23               	goto	l2303
  4657  1F32                     u3000:
  4658  1F32                     l2309:
  4659  1F32  0871               	movf	___awmod@divisor+1,w
  4660  1F33  0273               	subwf	___awmod@dividend+1,w
  4661  1F34  1D03               	skipz
  4662  1F35  2F38               	goto	u3015
  4663  1F36  0870               	movf	___awmod@divisor,w
  4664  1F37  0272               	subwf	___awmod@dividend,w
  4665  1F38                     u3015:
  4666  1F38  1C03               	skipc
  4667  1F39  2F3B               	goto	u3011
  4668  1F3A  2F3C               	goto	u3010
  4669  1F3B                     u3011:
  4670  1F3B  2F42               	goto	l2313
  4671  1F3C                     u3010:
  4672  1F3C                     l2311:
  4673  1F3C  0870               	movf	___awmod@divisor,w
  4674  1F3D  02F2               	subwf	___awmod@dividend,f
  4675  1F3E  0871               	movf	___awmod@divisor+1,w
  4676  1F3F  1C03               	skipc
  4677  1F40  03F3               	decf	___awmod@dividend+1,f
  4678  1F41  02F3               	subwf	___awmod@dividend+1,f
  4679  1F42                     l2313:
  4680  1F42  3001               	movlw	1
  4681  1F43                     u3025:
  4682  1F43  1003               	clrc
  4683  1F44  0CF1               	rrf	___awmod@divisor+1,f
  4684  1F45  0CF0               	rrf	___awmod@divisor,f
  4685  1F46  3EFF               	addlw	-1
  4686  1F47  1D03               	skipz
  4687  1F48  2F43               	goto	u3025
  4688  1F49                     l2315:
  4689  1F49  3001               	movlw	1
  4690  1F4A  02F5               	subwf	___awmod@counter,f
  4691  1F4B  1D03               	btfss	3,2
  4692  1F4C  2F4E               	goto	u3031
  4693  1F4D  2F4F               	goto	u3030
  4694  1F4E                     u3031:
  4695  1F4E  2F32               	goto	l2309
  4696  1F4F                     u3030:
  4697  1F4F                     l2317:
  4698  1F4F  0876               	movf	___awmod@sign,w
  4699  1F50  1903               	btfsc	3,2
  4700  1F51  2F53               	goto	u3041
  4701  1F52  2F54               	goto	u3040
  4702  1F53                     u3041:
  4703  1F53  2F59               	goto	l2321
  4704  1F54                     u3040:
  4705  1F54                     l2319:
  4706  1F54  09F2               	comf	___awmod@dividend,f
  4707  1F55  09F3               	comf	___awmod@dividend+1,f
  4708  1F56  0AF2               	incf	___awmod@dividend,f
  4709  1F57  1903               	skipnz
  4710  1F58  0AF3               	incf	___awmod@dividend+1,f
  4711  1F59                     l2321:
  4712  1F59  0873               	movf	___awmod@dividend+1,w
  4713  1F5A  00F1               	movwf	?___awmod+1
  4714  1F5B  0872               	movf	___awmod@dividend,w
  4715  1F5C  00F0               	movwf	?___awmod
  4716  1F5D                     l534:
  4717  1F5D  0008               	return
  4718  1F5E                     __end_of___awmod:
  4719                           
  4720                           	psect	text4
  4721  0008                     __ptext4:	
  4722 ;; *************** function ___awdiv *****************
  4723 ;; Defined at:
  4724 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4725 ;; Parameters:    Size  Location     Type
  4726 ;;  divisor         2    7[COMMON] int 
  4727 ;;  dividend        2    9[COMMON] int 
  4728 ;; Auto vars:     Size  Location     Type
  4729 ;;  quotient        2    2[BANK0 ] int 
  4730 ;;  sign            1    1[BANK0 ] unsigned char 
  4731 ;;  counter         1    0[BANK0 ] unsigned char 
  4732 ;; Return value:  Size  Location     Type
  4733 ;;                  2    7[COMMON] int 
  4734 ;; Registers used:
  4735 ;;		wreg, status,2, status,0
  4736 ;; Tracked objects:
  4737 ;;		On entry : 0/0
  4738 ;;		On exit  : 0/0
  4739 ;;		Unchanged: 0/0
  4740 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4741 ;;      Params:         4       0       0       0       0
  4742 ;;      Locals:         0       4       0       0       0
  4743 ;;      Temps:          1       0       0       0       0
  4744 ;;      Totals:         5       4       0       0       0
  4745 ;;Total ram usage:        9 bytes
  4746 ;; Hardware stack levels used:    1
  4747 ;; This function calls:
  4748 ;;		Nothing
  4749 ;; This function is called by:
  4750 ;;		_scale
  4751 ;;		_sprintf
  4752 ;; This function uses a non-reentrant model
  4753 ;;
  4754                           
  4755                           
  4756                           ;psect for function ___awdiv
  4757  0008                     ___awdiv:
  4758  0008                     l2243:	
  4759                           ;incstack = 0
  4760                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4761                           
  4762  0008  1283               	bcf	3,5	;RP0=0, select bank0
  4763  0009  1303               	bcf	3,6	;RP1=0, select bank0
  4764  000A  01A1               	clrf	___awdiv@sign
  4765  000B                     l2245:
  4766  000B  1FF8               	btfss	___awdiv@divisor+1,7
  4767  000C  280E               	goto	u2861
  4768  000D  280F               	goto	u2860
  4769  000E                     u2861:
  4770  000E  2816               	goto	l2251
  4771  000F                     u2860:
  4772  000F                     l2247:
  4773  000F  09F7               	comf	___awdiv@divisor,f
  4774  0010  09F8               	comf	___awdiv@divisor+1,f
  4775  0011  0AF7               	incf	___awdiv@divisor,f
  4776  0012  1903               	skipnz
  4777  0013  0AF8               	incf	___awdiv@divisor+1,f
  4778  0014                     l2249:
  4779  0014  01A1               	clrf	___awdiv@sign
  4780  0015  0AA1               	incf	___awdiv@sign,f
  4781  0016                     l2251:
  4782  0016  1FFA               	btfss	___awdiv@dividend+1,7
  4783  0017  2819               	goto	u2871
  4784  0018  281A               	goto	u2870
  4785  0019                     u2871:
  4786  0019  2823               	goto	l2257
  4787  001A                     u2870:
  4788  001A                     l2253:
  4789  001A  09F9               	comf	___awdiv@dividend,f
  4790  001B  09FA               	comf	___awdiv@dividend+1,f
  4791  001C  0AF9               	incf	___awdiv@dividend,f
  4792  001D  1903               	skipnz
  4793  001E  0AFA               	incf	___awdiv@dividend+1,f
  4794  001F                     l2255:
  4795  001F  3001               	movlw	1
  4796  0020  00FB               	movwf	??___awdiv
  4797  0021  087B               	movf	??___awdiv,w
  4798  0022  06A1               	xorwf	___awdiv@sign,f
  4799  0023                     l2257:
  4800  0023  01A2               	clrf	___awdiv@quotient
  4801  0024  01A3               	clrf	___awdiv@quotient+1
  4802  0025                     l2259:
  4803  0025  0877               	movf	___awdiv@divisor,w
  4804  0026  0478               	iorwf	___awdiv@divisor+1,w
  4805  0027  1903               	btfsc	3,2
  4806  0028  282A               	goto	u2881
  4807  0029  282B               	goto	u2880
  4808  002A                     u2881:
  4809  002A  2862               	goto	l2279
  4810  002B                     u2880:
  4811  002B                     l2261:
  4812  002B  01A0               	clrf	___awdiv@counter
  4813  002C  0AA0               	incf	___awdiv@counter,f
  4814  002D  2839               	goto	l2267
  4815  002E                     l2263:
  4816  002E  3001               	movlw	1
  4817  002F                     u2895:
  4818  002F  1003               	clrc
  4819  0030  0DF7               	rlf	___awdiv@divisor,f
  4820  0031  0DF8               	rlf	___awdiv@divisor+1,f
  4821  0032  3EFF               	addlw	-1
  4822  0033  1D03               	skipz
  4823  0034  282F               	goto	u2895
  4824  0035                     l2265:
  4825  0035  3001               	movlw	1
  4826  0036  00FB               	movwf	??___awdiv
  4827  0037  087B               	movf	??___awdiv,w
  4828  0038  07A0               	addwf	___awdiv@counter,f
  4829  0039                     l2267:
  4830  0039  1FF8               	btfss	___awdiv@divisor+1,7
  4831  003A  283C               	goto	u2901
  4832  003B  283D               	goto	u2900
  4833  003C                     u2901:
  4834  003C  282E               	goto	l2263
  4835  003D                     u2900:
  4836  003D                     l2269:
  4837  003D  3001               	movlw	1
  4838  003E                     u2915:
  4839  003E  1003               	clrc
  4840  003F  0DA2               	rlf	___awdiv@quotient,f
  4841  0040  0DA3               	rlf	___awdiv@quotient+1,f
  4842  0041  3EFF               	addlw	-1
  4843  0042  1D03               	skipz
  4844  0043  283E               	goto	u2915
  4845  0044  0878               	movf	___awdiv@divisor+1,w
  4846  0045  027A               	subwf	___awdiv@dividend+1,w
  4847  0046  1D03               	skipz
  4848  0047  284A               	goto	u2925
  4849  0048  0877               	movf	___awdiv@divisor,w
  4850  0049  0279               	subwf	___awdiv@dividend,w
  4851  004A                     u2925:
  4852  004A  1C03               	skipc
  4853  004B  284D               	goto	u2921
  4854  004C  284E               	goto	u2920
  4855  004D                     u2921:
  4856  004D  2855               	goto	l2275
  4857  004E                     u2920:
  4858  004E                     l2271:
  4859  004E  0877               	movf	___awdiv@divisor,w
  4860  004F  02F9               	subwf	___awdiv@dividend,f
  4861  0050  0878               	movf	___awdiv@divisor+1,w
  4862  0051  1C03               	skipc
  4863  0052  03FA               	decf	___awdiv@dividend+1,f
  4864  0053  02FA               	subwf	___awdiv@dividend+1,f
  4865  0054                     l2273:
  4866  0054  1422               	bsf	___awdiv@quotient,0
  4867  0055                     l2275:
  4868  0055  3001               	movlw	1
  4869  0056                     u2935:
  4870  0056  1003               	clrc
  4871  0057  0CF8               	rrf	___awdiv@divisor+1,f
  4872  0058  0CF7               	rrf	___awdiv@divisor,f
  4873  0059  3EFF               	addlw	-1
  4874  005A  1D03               	skipz
  4875  005B  2856               	goto	u2935
  4876  005C                     l2277:
  4877  005C  3001               	movlw	1
  4878  005D  02A0               	subwf	___awdiv@counter,f
  4879  005E  1D03               	btfss	3,2
  4880  005F  2861               	goto	u2941
  4881  0060  2862               	goto	u2940
  4882  0061                     u2941:
  4883  0061  283D               	goto	l2269
  4884  0062                     u2940:
  4885  0062                     l2279:
  4886  0062  0821               	movf	___awdiv@sign,w
  4887  0063  1903               	btfsc	3,2
  4888  0064  2866               	goto	u2951
  4889  0065  2867               	goto	u2950
  4890  0066                     u2951:
  4891  0066  286C               	goto	l2283
  4892  0067                     u2950:
  4893  0067                     l2281:
  4894  0067  09A2               	comf	___awdiv@quotient,f
  4895  0068  09A3               	comf	___awdiv@quotient+1,f
  4896  0069  0AA2               	incf	___awdiv@quotient,f
  4897  006A  1903               	skipnz
  4898  006B  0AA3               	incf	___awdiv@quotient+1,f
  4899  006C                     l2283:
  4900  006C  0823               	movf	___awdiv@quotient+1,w
  4901  006D  00F8               	movwf	?___awdiv+1
  4902  006E  0822               	movf	___awdiv@quotient,w
  4903  006F  00F7               	movwf	?___awdiv
  4904  0070                     l521:
  4905  0070  0008               	return
  4906  0071                     __end_of___awdiv:
  4907                           
  4908                           	psect	text5
  4909  1C5E                     __ptext5:	
  4910 ;; *************** function _isdigit *****************
  4911 ;; Defined at:
  4912 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4913 ;; Parameters:    Size  Location     Type
  4914 ;;  c               1    wreg     unsigned char 
  4915 ;; Auto vars:     Size  Location     Type
  4916 ;;  c               1    1[COMMON] unsigned char 
  4917 ;; Return value:  Size  Location     Type
  4918 ;;		None               void
  4919 ;; Registers used:
  4920 ;;		wreg, status,2, status,0
  4921 ;; Tracked objects:
  4922 ;;		On entry : 0/0
  4923 ;;		On exit  : 0/0
  4924 ;;		Unchanged: 0/0
  4925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4926 ;;      Params:         0       0       0       0       0
  4927 ;;      Locals:         2       0       0       0       0
  4928 ;;      Temps:          0       0       0       0       0
  4929 ;;      Totals:         2       0       0       0       0
  4930 ;;Total ram usage:        2 bytes
  4931 ;; Hardware stack levels used:    1
  4932 ;; This function calls:
  4933 ;;		Nothing
  4934 ;; This function is called by:
  4935 ;;		_sprintf
  4936 ;; This function uses a non-reentrant model
  4937 ;;
  4938                           
  4939                           
  4940                           ;psect for function _isdigit
  4941  1C5E                     _isdigit:
  4942                           
  4943                           ;incstack = 0
  4944                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4945                           ;isdigit@c stored from wreg
  4946  1C5E  00F1               	movwf	isdigit@c
  4947  1C5F                     l2789:
  4948  1C5F  01F0               	clrf	_isdigit$1008
  4949  1C60                     l2791:
  4950  1C60  303A               	movlw	58
  4951  1C61  0271               	subwf	isdigit@c,w
  4952  1C62  1803               	skipnc
  4953  1C63  2C65               	goto	u4271
  4954  1C64  2C66               	goto	u4270
  4955  1C65                     u4271:
  4956  1C65  2C6E               	goto	l2797
  4957  1C66                     u4270:
  4958  1C66                     l2793:
  4959  1C66  3030               	movlw	48
  4960  1C67  0271               	subwf	isdigit@c,w
  4961  1C68  1C03               	skipc
  4962  1C69  2C6B               	goto	u4281
  4963  1C6A  2C6C               	goto	u4280
  4964  1C6B                     u4281:
  4965  1C6B  2C6E               	goto	l2797
  4966  1C6C                     u4280:
  4967  1C6C                     l2795:
  4968  1C6C  01F0               	clrf	_isdigit$1008
  4969  1C6D  0AF0               	incf	_isdigit$1008,f
  4970  1C6E                     l2797:
  4971  1C6E  0C70               	rrf	_isdigit$1008,w
  4972  1C6F                     l855:
  4973  1C6F  0008               	return
  4974  1C70                     __end_of_isdigit:
  4975                           
  4976                           	psect	text6
  4977  136D                     __ptext6:	
  4978 ;; *************** function _fround *****************
  4979 ;; Defined at:
  4980 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4981 ;; Parameters:    Size  Location     Type
  4982 ;;  prec            1    wreg     unsigned char 
  4983 ;; Auto vars:     Size  Location     Type
  4984 ;;  prec            1   49[BANK0 ] unsigned char 
  4985 ;; Return value:  Size  Location     Type
  4986 ;;                  4   30[BANK0 ] unsigned char 
  4987 ;; Registers used:
  4988 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4989 ;; Tracked objects:
  4990 ;;		On entry : 0/0
  4991 ;;		On exit  : 0/0
  4992 ;;		Unchanged: 0/0
  4993 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4994 ;;      Params:         0       4       0       0       0
  4995 ;;      Locals:         0       9       0       0       0
  4996 ;;      Temps:          0       7       0       0       0
  4997 ;;      Totals:         0      20       0       0       0
  4998 ;;Total ram usage:       20 bytes
  4999 ;; Hardware stack levels used:    1
  5000 ;; Hardware stack levels required when called:    2
  5001 ;; This function calls:
  5002 ;;		___flmul
  5003 ;;		___lwdiv
  5004 ;;		___lwmod
  5005 ;; This function is called by:
  5006 ;;		_sprintf
  5007 ;; This function uses a non-reentrant model
  5008 ;;
  5009                           
  5010                           
  5011                           ;psect for function _fround
  5012  136D                     _fround:
  5013                           
  5014                           ;incstack = 0
  5015                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  5016                           ;fround@prec stored from wreg
  5017  136D  1283               	bcf	3,5	;RP0=0, select bank0
  5018  136E  1303               	bcf	3,6	;RP1=0, select bank0
  5019  136F  00D1               	movwf	fround@prec
  5020  1370                     l2731:
  5021                           
  5022                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  5023  1370  306E               	movlw	110
  5024  1371  0251               	subwf	fround@prec,w
  5025  1372  1C03               	skipc
  5026  1373  2B75               	goto	u4021
  5027  1374  2B76               	goto	u4020
  5028  1375                     u4021:
  5029  1375  2C83               	goto	l2739
  5030  1376                     u4020:
  5031  1376                     l2733:
  5032                           
  5033                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5034  1376  303F               	movlw	63
  5035  1377  00A7               	movwf	___flmul@b+3
  5036  1378  3000               	movlw	0
  5037  1379  00A6               	movwf	___flmul@b+2
  5038  137A  3000               	movlw	0
  5039  137B  00A5               	movwf	___flmul@b+1
  5040  137C  3000               	movlw	0
  5041  137D  00A4               	movwf	___flmul@b
  5042  137E  3064               	movlw	100
  5043  137F  00F6               	movwf	___lwdiv@divisor
  5044  1380  3000               	movlw	0
  5045  1381  00F7               	movwf	___lwdiv@divisor+1
  5046  1382  0851               	movf	fround@prec,w
  5047  1383  00C2               	movwf	??_fround
  5048  1384  01C3               	clrf	??_fround+1
  5049  1385  0842               	movf	??_fround,w
  5050  1386  00F8               	movwf	___lwdiv@dividend
  5051  1387  0843               	movf	??_fround+1,w
  5052  1388  00F9               	movwf	___lwdiv@dividend+1
  5053  1389  160A  158A  261F  160A  118A  	fcall	___lwdiv
  5054  138E  0876               	movf	?___lwdiv,w
  5055  138F  1283               	bcf	3,5	;RP0=0, select bank0
  5056  1390  1303               	bcf	3,6	;RP1=0, select bank0
  5057  1391  00C4               	movwf	??_fround+2
  5058  1392  3001               	movlw	1
  5059  1393                     u4035:
  5060  1393  1003               	clrc
  5061  1394  0DC4               	rlf	??_fround+2,f
  5062  1395  3EFF               	addlw	-1
  5063  1396  1D03               	skipz
  5064  1397  2B93               	goto	u4035
  5065  1398  1003               	clrc
  5066  1399  0D44               	rlf	??_fround+2,w
  5067  139A  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  5068  139B  0084               	movwf	4
  5069  139C  160A  118A  200A  160A  118A  	fcall	stringdir
  5070  13A1  00C5               	movwf	??_fround+3
  5071  13A2  160A  118A  200A  160A  118A  	fcall	stringdir
  5072  13A7  00C6               	movwf	??_fround+4
  5073  13A8  160A  118A  200A  160A  118A  	fcall	stringdir
  5074  13AD  00C7               	movwf	??_fround+5
  5075  13AE  160A  118A  200A  160A  118A  	fcall	stringdir
  5076  13B3  00C8               	movwf	??_fround+6
  5077  13B4  0848               	movf	??_fround+6,w
  5078  13B5  00AB               	movwf	___flmul@a+3
  5079  13B6  0847               	movf	??_fround+5,w
  5080  13B7  00AA               	movwf	___flmul@a+2
  5081  13B8  0846               	movf	??_fround+4,w
  5082  13B9  00A9               	movwf	___flmul@a+1
  5083  13BA  0845               	movf	??_fround+3,w
  5084  13BB  00A8               	movwf	___flmul@a
  5085  13BC  120A  158A  249F  160A  118A  	fcall	___flmul
  5086  13C1  1283               	bcf	3,5	;RP0=0, select bank0
  5087  13C2  1303               	bcf	3,6	;RP1=0, select bank0
  5088  13C3  0827               	movf	?___flmul+3,w
  5089  13C4  00D0               	movwf	_fround$1207+3
  5090  13C5  0826               	movf	?___flmul+2,w
  5091  13C6  00CF               	movwf	_fround$1207+2
  5092  13C7  0825               	movf	?___flmul+1,w
  5093  13C8  00CE               	movwf	_fround$1207+1
  5094  13C9  0824               	movf	?___flmul,w
  5095  13CA  00CD               	movwf	_fround$1207
  5096                           
  5097                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5098  13CB  300A               	movlw	10
  5099  13CC  00F6               	movwf	___lwdiv@divisor
  5100  13CD  3000               	movlw	0
  5101  13CE  00F7               	movwf	___lwdiv@divisor+1
  5102  13CF  0851               	movf	fround@prec,w
  5103  13D0  00C2               	movwf	??_fround
  5104  13D1  01C3               	clrf	??_fround+1
  5105  13D2  0842               	movf	??_fround,w
  5106  13D3  00F2               	movwf	___lwmod@dividend
  5107  13D4  0843               	movf	??_fround+1,w
  5108  13D5  00F3               	movwf	___lwmod@dividend+1
  5109  13D6  3064               	movlw	100
  5110  13D7  00F0               	movwf	___lwmod@divisor
  5111  13D8  3000               	movlw	0
  5112  13D9  00F1               	movwf	___lwmod@divisor+1
  5113  13DA  160A  158A  2562  160A  118A  	fcall	___lwmod
  5114  13DF  0871               	movf	?___lwmod+1,w
  5115  13E0  00F9               	movwf	___lwdiv@dividend+1
  5116  13E1  0870               	movf	?___lwmod,w
  5117  13E2  00F8               	movwf	___lwdiv@dividend
  5118  13E3  160A  158A  261F  160A  118A  	fcall	___lwdiv
  5119  13E8  0876               	movf	?___lwdiv,w
  5120  13E9  1283               	bcf	3,5	;RP0=0, select bank0
  5121  13EA  1303               	bcf	3,6	;RP1=0, select bank0
  5122  13EB  00C4               	movwf	??_fround+2
  5123  13EC  3001               	movlw	1
  5124  13ED                     u4045:
  5125  13ED  1003               	clrc
  5126  13EE  0DC4               	rlf	??_fround+2,f
  5127  13EF  3EFF               	addlw	-1
  5128  13F0  1D03               	skipz
  5129  13F1  2BED               	goto	u4045
  5130  13F2  1003               	clrc
  5131  13F3  0D44               	rlf	??_fround+2,w
  5132  13F4  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5133  13F5  0084               	movwf	4
  5134  13F6  160A  118A  200A  160A  118A  	fcall	stringdir
  5135  13FB  00C5               	movwf	??_fround+3
  5136  13FC  160A  118A  200A  160A  118A  	fcall	stringdir
  5137  1401  00C6               	movwf	??_fround+4
  5138  1402  160A  118A  200A  160A  118A  	fcall	stringdir
  5139  1407  00C7               	movwf	??_fround+5
  5140  1408  160A  118A  200A  160A  118A  	fcall	stringdir
  5141  140D  00C8               	movwf	??_fround+6
  5142  140E  0848               	movf	??_fround+6,w
  5143  140F  00A7               	movwf	___flmul@b+3
  5144  1410  0847               	movf	??_fround+5,w
  5145  1411  00A6               	movwf	___flmul@b+2
  5146  1412  0846               	movf	??_fround+4,w
  5147  1413  00A5               	movwf	___flmul@b+1
  5148  1414  0845               	movf	??_fround+3,w
  5149  1415  00A4               	movwf	___flmul@b
  5150  1416  0850               	movf	_fround$1207+3,w
  5151  1417  00AB               	movwf	___flmul@a+3
  5152  1418  084F               	movf	_fround$1207+2,w
  5153  1419  00AA               	movwf	___flmul@a+2
  5154  141A  084E               	movf	_fround$1207+1,w
  5155  141B  00A9               	movwf	___flmul@a+1
  5156  141C  084D               	movf	_fround$1207,w
  5157  141D  00A8               	movwf	___flmul@a
  5158  141E  120A  158A  249F  160A  118A  	fcall	___flmul
  5159  1423  1283               	bcf	3,5	;RP0=0, select bank0
  5160  1424  1303               	bcf	3,6	;RP1=0, select bank0
  5161  1425  0827               	movf	?___flmul+3,w
  5162  1426  00CC               	movwf	_fround$1208+3
  5163  1427  0826               	movf	?___flmul+2,w
  5164  1428  00CB               	movwf	_fround$1208+2
  5165  1429  0825               	movf	?___flmul+1,w
  5166  142A  00CA               	movwf	_fround$1208+1
  5167  142B  0824               	movf	?___flmul,w
  5168  142C  00C9               	movwf	_fround$1208
  5169                           
  5170                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  5171  142D  300A               	movlw	10
  5172  142E  00F0               	movwf	___lwmod@divisor
  5173  142F  3000               	movlw	0
  5174  1430  00F1               	movwf	___lwmod@divisor+1
  5175  1431  0851               	movf	fround@prec,w
  5176  1432  00C2               	movwf	??_fround
  5177  1433  01C3               	clrf	??_fround+1
  5178  1434  0842               	movf	??_fround,w
  5179  1435  00F2               	movwf	___lwmod@dividend
  5180  1436  0843               	movf	??_fround+1,w
  5181  1437  00F3               	movwf	___lwmod@dividend+1
  5182  1438  160A  158A  2562  160A  118A  	fcall	___lwmod
  5183  143D  0870               	movf	?___lwmod,w
  5184  143E  1283               	bcf	3,5	;RP0=0, select bank0
  5185  143F  1303               	bcf	3,6	;RP1=0, select bank0
  5186  1440  00C4               	movwf	??_fround+2
  5187  1441  3001               	movlw	1
  5188  1442                     u4055:
  5189  1442  1003               	clrc
  5190  1443  0DC4               	rlf	??_fround+2,f
  5191  1444  3EFF               	addlw	-1
  5192  1445  1D03               	skipz
  5193  1446  2C42               	goto	u4055
  5194  1447  1003               	clrc
  5195  1448  0D44               	rlf	??_fround+2,w
  5196  1449  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5197  144A  0084               	movwf	4
  5198  144B  160A  118A  200A  160A  118A  	fcall	stringdir
  5199  1450  00C5               	movwf	??_fround+3
  5200  1451  160A  118A  200A  160A  118A  	fcall	stringdir
  5201  1456  00C6               	movwf	??_fround+4
  5202  1457  160A  118A  200A  160A  118A  	fcall	stringdir
  5203  145C  00C7               	movwf	??_fround+5
  5204  145D  160A  118A  200A  160A  118A  	fcall	stringdir
  5205  1462  00C8               	movwf	??_fround+6
  5206  1463  0848               	movf	??_fround+6,w
  5207  1464  00A7               	movwf	___flmul@b+3
  5208  1465  0847               	movf	??_fround+5,w
  5209  1466  00A6               	movwf	___flmul@b+2
  5210  1467  0846               	movf	??_fround+4,w
  5211  1468  00A5               	movwf	___flmul@b+1
  5212  1469  0845               	movf	??_fround+3,w
  5213  146A  00A4               	movwf	___flmul@b
  5214  146B  084C               	movf	_fround$1208+3,w
  5215  146C  00AB               	movwf	___flmul@a+3
  5216  146D  084B               	movf	_fround$1208+2,w
  5217  146E  00AA               	movwf	___flmul@a+2
  5218  146F  084A               	movf	_fround$1208+1,w
  5219  1470  00A9               	movwf	___flmul@a+1
  5220  1471  0849               	movf	_fround$1208,w
  5221  1472  00A8               	movwf	___flmul@a
  5222  1473  120A  158A  249F  160A  118A  	fcall	___flmul
  5223  1478  1283               	bcf	3,5	;RP0=0, select bank0
  5224  1479  1303               	bcf	3,6	;RP1=0, select bank0
  5225  147A  0827               	movf	?___flmul+3,w
  5226  147B  00C1               	movwf	?_fround+3
  5227  147C  0826               	movf	?___flmul+2,w
  5228  147D  00C0               	movwf	?_fround+2
  5229  147E  0825               	movf	?___flmul+1,w
  5230  147F  00BF               	movwf	?_fround+1
  5231  1480  0824               	movf	?___flmul,w
  5232  1481  00BE               	movwf	?_fround
  5233  1482  2D77               	goto	l274
  5234  1483                     l2739:
  5235  1483  300B               	movlw	11
  5236  1484  0251               	subwf	fround@prec,w
  5237  1485  1C03               	skipc
  5238  1486  2C88               	goto	u4061
  5239  1487  2C89               	goto	u4060
  5240  1488                     u4061:
  5241  1488  2D34               	goto	l2745
  5242  1489                     u4060:
  5243  1489                     l2741:
  5244                           
  5245                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5246  1489  303F               	movlw	63
  5247  148A  00A7               	movwf	___flmul@b+3
  5248  148B  3000               	movlw	0
  5249  148C  00A6               	movwf	___flmul@b+2
  5250  148D  3000               	movlw	0
  5251  148E  00A5               	movwf	___flmul@b+1
  5252  148F  3000               	movlw	0
  5253  1490  00A4               	movwf	___flmul@b
  5254  1491  300A               	movlw	10
  5255  1492  00F6               	movwf	___lwdiv@divisor
  5256  1493  3000               	movlw	0
  5257  1494  00F7               	movwf	___lwdiv@divisor+1
  5258  1495  0851               	movf	fround@prec,w
  5259  1496  00C2               	movwf	??_fround
  5260  1497  01C3               	clrf	??_fround+1
  5261  1498  0842               	movf	??_fround,w
  5262  1499  00F8               	movwf	___lwdiv@dividend
  5263  149A  0843               	movf	??_fround+1,w
  5264  149B  00F9               	movwf	___lwdiv@dividend+1
  5265  149C  160A  158A  261F  160A  118A  	fcall	___lwdiv
  5266  14A1  0876               	movf	?___lwdiv,w
  5267  14A2  1283               	bcf	3,5	;RP0=0, select bank0
  5268  14A3  1303               	bcf	3,6	;RP1=0, select bank0
  5269  14A4  00C4               	movwf	??_fround+2
  5270  14A5  3001               	movlw	1
  5271  14A6                     u4075:
  5272  14A6  1003               	clrc
  5273  14A7  0DC4               	rlf	??_fround+2,f
  5274  14A8  3EFF               	addlw	-1
  5275  14A9  1D03               	skipz
  5276  14AA  2CA6               	goto	u4075
  5277  14AB  1003               	clrc
  5278  14AC  0D44               	rlf	??_fround+2,w
  5279  14AD  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  5280  14AE  0084               	movwf	4
  5281  14AF  160A  118A  200A  160A  118A  	fcall	stringdir
  5282  14B4  00C5               	movwf	??_fround+3
  5283  14B5  160A  118A  200A  160A  118A  	fcall	stringdir
  5284  14BA  00C6               	movwf	??_fround+4
  5285  14BB  160A  118A  200A  160A  118A  	fcall	stringdir
  5286  14C0  00C7               	movwf	??_fround+5
  5287  14C1  160A  118A  200A  160A  118A  	fcall	stringdir
  5288  14C6  00C8               	movwf	??_fround+6
  5289  14C7  0848               	movf	??_fround+6,w
  5290  14C8  00AB               	movwf	___flmul@a+3
  5291  14C9  0847               	movf	??_fround+5,w
  5292  14CA  00AA               	movwf	___flmul@a+2
  5293  14CB  0846               	movf	??_fround+4,w
  5294  14CC  00A9               	movwf	___flmul@a+1
  5295  14CD  0845               	movf	??_fround+3,w
  5296  14CE  00A8               	movwf	___flmul@a
  5297  14CF  120A  158A  249F  160A  118A  	fcall	___flmul
  5298  14D4  1283               	bcf	3,5	;RP0=0, select bank0
  5299  14D5  1303               	bcf	3,6	;RP1=0, select bank0
  5300  14D6  0827               	movf	?___flmul+3,w
  5301  14D7  00D0               	movwf	_fround$1207+3
  5302  14D8  0826               	movf	?___flmul+2,w
  5303  14D9  00CF               	movwf	_fround$1207+2
  5304  14DA  0825               	movf	?___flmul+1,w
  5305  14DB  00CE               	movwf	_fround$1207+1
  5306  14DC  0824               	movf	?___flmul,w
  5307  14DD  00CD               	movwf	_fround$1207
  5308                           
  5309                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  5310  14DE  300A               	movlw	10
  5311  14DF  00F0               	movwf	___lwmod@divisor
  5312  14E0  3000               	movlw	0
  5313  14E1  00F1               	movwf	___lwmod@divisor+1
  5314  14E2  0851               	movf	fround@prec,w
  5315  14E3  00C2               	movwf	??_fround
  5316  14E4  01C3               	clrf	??_fround+1
  5317  14E5  0842               	movf	??_fround,w
  5318  14E6  00F2               	movwf	___lwmod@dividend
  5319  14E7  0843               	movf	??_fround+1,w
  5320  14E8  00F3               	movwf	___lwmod@dividend+1
  5321  14E9  160A  158A  2562  160A  118A  	fcall	___lwmod
  5322  14EE  0870               	movf	?___lwmod,w
  5323  14EF  1283               	bcf	3,5	;RP0=0, select bank0
  5324  14F0  1303               	bcf	3,6	;RP1=0, select bank0
  5325  14F1  00C4               	movwf	??_fround+2
  5326  14F2  3001               	movlw	1
  5327  14F3                     u4085:
  5328  14F3  1003               	clrc
  5329  14F4  0DC4               	rlf	??_fround+2,f
  5330  14F5  3EFF               	addlw	-1
  5331  14F6  1D03               	skipz
  5332  14F7  2CF3               	goto	u4085
  5333  14F8  1003               	clrc
  5334  14F9  0D44               	rlf	??_fround+2,w
  5335  14FA  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5336  14FB  0084               	movwf	4
  5337  14FC  160A  118A  200A  160A  118A  	fcall	stringdir
  5338  1501  00C5               	movwf	??_fround+3
  5339  1502  160A  118A  200A  160A  118A  	fcall	stringdir
  5340  1507  00C6               	movwf	??_fround+4
  5341  1508  160A  118A  200A  160A  118A  	fcall	stringdir
  5342  150D  00C7               	movwf	??_fround+5
  5343  150E  160A  118A  200A  160A  118A  	fcall	stringdir
  5344  1513  00C8               	movwf	??_fround+6
  5345  1514  0848               	movf	??_fround+6,w
  5346  1515  00A7               	movwf	___flmul@b+3
  5347  1516  0847               	movf	??_fround+5,w
  5348  1517  00A6               	movwf	___flmul@b+2
  5349  1518  0846               	movf	??_fround+4,w
  5350  1519  00A5               	movwf	___flmul@b+1
  5351  151A  0845               	movf	??_fround+3,w
  5352  151B  00A4               	movwf	___flmul@b
  5353  151C  0850               	movf	_fround$1207+3,w
  5354  151D  00AB               	movwf	___flmul@a+3
  5355  151E  084F               	movf	_fround$1207+2,w
  5356  151F  00AA               	movwf	___flmul@a+2
  5357  1520  084E               	movf	_fround$1207+1,w
  5358  1521  00A9               	movwf	___flmul@a+1
  5359  1522  084D               	movf	_fround$1207,w
  5360  1523  00A8               	movwf	___flmul@a
  5361  1524  120A  158A  249F  160A  118A  	fcall	___flmul
  5362  1529  1283               	bcf	3,5	;RP0=0, select bank0
  5363  152A  1303               	bcf	3,6	;RP1=0, select bank0
  5364  152B  0827               	movf	?___flmul+3,w
  5365  152C  00C1               	movwf	?_fround+3
  5366  152D  0826               	movf	?___flmul+2,w
  5367  152E  00C0               	movwf	?_fround+2
  5368  152F  0825               	movf	?___flmul+1,w
  5369  1530  00BF               	movwf	?_fround+1
  5370  1531  0824               	movf	?___flmul,w
  5371  1532  00BE               	movwf	?_fround
  5372  1533  2D77               	goto	l274
  5373  1534                     l2745:
  5374                           
  5375                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  5376  1534  303F               	movlw	63
  5377  1535  00A7               	movwf	___flmul@b+3
  5378  1536  3000               	movlw	0
  5379  1537  00A6               	movwf	___flmul@b+2
  5380  1538  3000               	movlw	0
  5381  1539  00A5               	movwf	___flmul@b+1
  5382  153A  3000               	movlw	0
  5383  153B  00A4               	movwf	___flmul@b
  5384  153C  0851               	movf	fround@prec,w
  5385  153D  00C2               	movwf	??_fround
  5386  153E  3001               	movlw	1
  5387  153F                     u4095:
  5388  153F  1003               	clrc
  5389  1540  0DC2               	rlf	??_fround,f
  5390  1541  3EFF               	addlw	-1
  5391  1542  1D03               	skipz
  5392  1543  2D3F               	goto	u4095
  5393  1544  1003               	clrc
  5394  1545  0D42               	rlf	??_fround,w
  5395  1546  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  5396  1547  0084               	movwf	4
  5397  1548  160A  118A  200A  160A  118A  	fcall	stringdir
  5398  154D  00C3               	movwf	??_fround+1
  5399  154E  160A  118A  200A  160A  118A  	fcall	stringdir
  5400  1553  00C4               	movwf	??_fround+2
  5401  1554  160A  118A  200A  160A  118A  	fcall	stringdir
  5402  1559  00C5               	movwf	??_fround+3
  5403  155A  160A  118A  200A  160A  118A  	fcall	stringdir
  5404  155F  00C6               	movwf	??_fround+4
  5405  1560  0846               	movf	??_fround+4,w
  5406  1561  00AB               	movwf	___flmul@a+3
  5407  1562  0845               	movf	??_fround+3,w
  5408  1563  00AA               	movwf	___flmul@a+2
  5409  1564  0844               	movf	??_fround+2,w
  5410  1565  00A9               	movwf	___flmul@a+1
  5411  1566  0843               	movf	??_fround+1,w
  5412  1567  00A8               	movwf	___flmul@a
  5413  1568  120A  158A  249F  160A  118A  	fcall	___flmul
  5414  156D  1283               	bcf	3,5	;RP0=0, select bank0
  5415  156E  1303               	bcf	3,6	;RP1=0, select bank0
  5416  156F  0827               	movf	?___flmul+3,w
  5417  1570  00C1               	movwf	?_fround+3
  5418  1571  0826               	movf	?___flmul+2,w
  5419  1572  00C0               	movwf	?_fround+2
  5420  1573  0825               	movf	?___flmul+1,w
  5421  1574  00BF               	movwf	?_fround+1
  5422  1575  0824               	movf	?___flmul,w
  5423  1576  00BE               	movwf	?_fround
  5424  1577                     l274:
  5425  1577  0008               	return
  5426  1578                     __end_of_fround:
  5427                           
  5428                           	psect	text7
  5429  1D62                     __ptext7:	
  5430 ;; *************** function ___lwmod *****************
  5431 ;; Defined at:
  5432 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  5433 ;; Parameters:    Size  Location     Type
  5434 ;;  divisor         2    0[COMMON] unsigned int 
  5435 ;;  dividend        2    2[COMMON] unsigned int 
  5436 ;; Auto vars:     Size  Location     Type
  5437 ;;  counter         1    5[COMMON] unsigned char 
  5438 ;; Return value:  Size  Location     Type
  5439 ;;                  2    0[COMMON] unsigned int 
  5440 ;; Registers used:
  5441 ;;		wreg, status,2, status,0
  5442 ;; Tracked objects:
  5443 ;;		On entry : 0/0
  5444 ;;		On exit  : 0/0
  5445 ;;		Unchanged: 0/0
  5446 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5447 ;;      Params:         4       0       0       0       0
  5448 ;;      Locals:         1       0       0       0       0
  5449 ;;      Temps:          1       0       0       0       0
  5450 ;;      Totals:         6       0       0       0       0
  5451 ;;Total ram usage:        6 bytes
  5452 ;; Hardware stack levels used:    1
  5453 ;; This function calls:
  5454 ;;		Nothing
  5455 ;; This function is called by:
  5456 ;;		_fround
  5457 ;; This function uses a non-reentrant model
  5458 ;;
  5459                           
  5460                           
  5461                           ;psect for function ___lwmod
  5462  1D62                     ___lwmod:
  5463  1D62                     l2351:	
  5464                           ;incstack = 0
  5465                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  5466                           
  5467  1D62  0870               	movf	___lwmod@divisor,w
  5468  1D63  0471               	iorwf	___lwmod@divisor+1,w
  5469  1D64  1903               	btfsc	3,2
  5470  1D65  2D67               	goto	u3121
  5471  1D66  2D68               	goto	u3120
  5472  1D67                     u3121:
  5473  1D67  2D97               	goto	l2369
  5474  1D68                     u3120:
  5475  1D68                     l2353:
  5476  1D68  01F5               	clrf	___lwmod@counter
  5477  1D69  0AF5               	incf	___lwmod@counter,f
  5478  1D6A  2D76               	goto	l2359
  5479  1D6B                     l2355:
  5480  1D6B  3001               	movlw	1
  5481  1D6C                     u3135:
  5482  1D6C  1003               	clrc
  5483  1D6D  0DF0               	rlf	___lwmod@divisor,f
  5484  1D6E  0DF1               	rlf	___lwmod@divisor+1,f
  5485  1D6F  3EFF               	addlw	-1
  5486  1D70  1D03               	skipz
  5487  1D71  2D6C               	goto	u3135
  5488  1D72                     l2357:
  5489  1D72  3001               	movlw	1
  5490  1D73  00F4               	movwf	??___lwmod
  5491  1D74  0874               	movf	??___lwmod,w
  5492  1D75  07F5               	addwf	___lwmod@counter,f
  5493  1D76                     l2359:
  5494  1D76  1FF1               	btfss	___lwmod@divisor+1,7
  5495  1D77  2D79               	goto	u3141
  5496  1D78  2D7A               	goto	u3140
  5497  1D79                     u3141:
  5498  1D79  2D6B               	goto	l2355
  5499  1D7A                     u3140:
  5500  1D7A                     l2361:
  5501  1D7A  0871               	movf	___lwmod@divisor+1,w
  5502  1D7B  0273               	subwf	___lwmod@dividend+1,w
  5503  1D7C  1D03               	skipz
  5504  1D7D  2D80               	goto	u3155
  5505  1D7E  0870               	movf	___lwmod@divisor,w
  5506  1D7F  0272               	subwf	___lwmod@dividend,w
  5507  1D80                     u3155:
  5508  1D80  1C03               	skipc
  5509  1D81  2D83               	goto	u3151
  5510  1D82  2D84               	goto	u3150
  5511  1D83                     u3151:
  5512  1D83  2D8A               	goto	l2365
  5513  1D84                     u3150:
  5514  1D84                     l2363:
  5515  1D84  0870               	movf	___lwmod@divisor,w
  5516  1D85  02F2               	subwf	___lwmod@dividend,f
  5517  1D86  0871               	movf	___lwmod@divisor+1,w
  5518  1D87  1C03               	skipc
  5519  1D88  03F3               	decf	___lwmod@dividend+1,f
  5520  1D89  02F3               	subwf	___lwmod@dividend+1,f
  5521  1D8A                     l2365:
  5522  1D8A  3001               	movlw	1
  5523  1D8B                     u3165:
  5524  1D8B  1003               	clrc
  5525  1D8C  0CF1               	rrf	___lwmod@divisor+1,f
  5526  1D8D  0CF0               	rrf	___lwmod@divisor,f
  5527  1D8E  3EFF               	addlw	-1
  5528  1D8F  1D03               	skipz
  5529  1D90  2D8B               	goto	u3165
  5530  1D91                     l2367:
  5531  1D91  3001               	movlw	1
  5532  1D92  02F5               	subwf	___lwmod@counter,f
  5533  1D93  1D03               	btfss	3,2
  5534  1D94  2D96               	goto	u3171
  5535  1D95  2D97               	goto	u3170
  5536  1D96                     u3171:
  5537  1D96  2D7A               	goto	l2361
  5538  1D97                     u3170:
  5539  1D97                     l2369:
  5540  1D97  0873               	movf	___lwmod@dividend+1,w
  5541  1D98  00F1               	movwf	?___lwmod+1
  5542  1D99  0872               	movf	___lwmod@dividend,w
  5543  1D9A  00F0               	movwf	?___lwmod
  5544  1D9B                     l684:
  5545  1D9B  0008               	return
  5546  1D9C                     __end_of___lwmod:
  5547                           
  5548                           	psect	text8
  5549  1E1F                     __ptext8:	
  5550 ;; *************** function ___lwdiv *****************
  5551 ;; Defined at:
  5552 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  5553 ;; Parameters:    Size  Location     Type
  5554 ;;  divisor         2    6[COMMON] unsigned int 
  5555 ;;  dividend        2    8[COMMON] unsigned int 
  5556 ;; Auto vars:     Size  Location     Type
  5557 ;;  quotient        2   11[COMMON] unsigned int 
  5558 ;;  counter         1   13[COMMON] unsigned char 
  5559 ;; Return value:  Size  Location     Type
  5560 ;;                  2    6[COMMON] unsigned int 
  5561 ;; Registers used:
  5562 ;;		wreg, status,2, status,0
  5563 ;; Tracked objects:
  5564 ;;		On entry : 0/0
  5565 ;;		On exit  : 0/0
  5566 ;;		Unchanged: 0/0
  5567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5568 ;;      Params:         4       0       0       0       0
  5569 ;;      Locals:         3       0       0       0       0
  5570 ;;      Temps:          1       0       0       0       0
  5571 ;;      Totals:         8       0       0       0       0
  5572 ;;Total ram usage:        8 bytes
  5573 ;; Hardware stack levels used:    1
  5574 ;; This function calls:
  5575 ;;		Nothing
  5576 ;; This function is called by:
  5577 ;;		_fround
  5578 ;; This function uses a non-reentrant model
  5579 ;;
  5580                           
  5581                           
  5582                           ;psect for function ___lwdiv
  5583  1E1F                     ___lwdiv:
  5584  1E1F                     l2325:	
  5585                           ;incstack = 0
  5586                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  5587                           
  5588  1E1F  01FB               	clrf	___lwdiv@quotient
  5589  1E20  01FC               	clrf	___lwdiv@quotient+1
  5590  1E21                     l2327:
  5591  1E21  0876               	movf	___lwdiv@divisor,w
  5592  1E22  0477               	iorwf	___lwdiv@divisor+1,w
  5593  1E23  1903               	btfsc	3,2
  5594  1E24  2E26               	goto	u3051
  5595  1E25  2E27               	goto	u3050
  5596  1E26                     u3051:
  5597  1E26  2E5E               	goto	l2347
  5598  1E27                     u3050:
  5599  1E27                     l2329:
  5600  1E27  01FD               	clrf	___lwdiv@counter
  5601  1E28  0AFD               	incf	___lwdiv@counter,f
  5602  1E29  2E35               	goto	l2335
  5603  1E2A                     l2331:
  5604  1E2A  3001               	movlw	1
  5605  1E2B                     u3065:
  5606  1E2B  1003               	clrc
  5607  1E2C  0DF6               	rlf	___lwdiv@divisor,f
  5608  1E2D  0DF7               	rlf	___lwdiv@divisor+1,f
  5609  1E2E  3EFF               	addlw	-1
  5610  1E2F  1D03               	skipz
  5611  1E30  2E2B               	goto	u3065
  5612  1E31                     l2333:
  5613  1E31  3001               	movlw	1
  5614  1E32  00FA               	movwf	??___lwdiv
  5615  1E33  087A               	movf	??___lwdiv,w
  5616  1E34  07FD               	addwf	___lwdiv@counter,f
  5617  1E35                     l2335:
  5618  1E35  1FF7               	btfss	___lwdiv@divisor+1,7
  5619  1E36  2E38               	goto	u3071
  5620  1E37  2E39               	goto	u3070
  5621  1E38                     u3071:
  5622  1E38  2E2A               	goto	l2331
  5623  1E39                     u3070:
  5624  1E39                     l2337:
  5625  1E39  3001               	movlw	1
  5626  1E3A                     u3085:
  5627  1E3A  1003               	clrc
  5628  1E3B  0DFB               	rlf	___lwdiv@quotient,f
  5629  1E3C  0DFC               	rlf	___lwdiv@quotient+1,f
  5630  1E3D  3EFF               	addlw	-1
  5631  1E3E  1D03               	skipz
  5632  1E3F  2E3A               	goto	u3085
  5633  1E40  0877               	movf	___lwdiv@divisor+1,w
  5634  1E41  0279               	subwf	___lwdiv@dividend+1,w
  5635  1E42  1D03               	skipz
  5636  1E43  2E46               	goto	u3095
  5637  1E44  0876               	movf	___lwdiv@divisor,w
  5638  1E45  0278               	subwf	___lwdiv@dividend,w
  5639  1E46                     u3095:
  5640  1E46  1C03               	skipc
  5641  1E47  2E49               	goto	u3091
  5642  1E48  2E4A               	goto	u3090
  5643  1E49                     u3091:
  5644  1E49  2E51               	goto	l2343
  5645  1E4A                     u3090:
  5646  1E4A                     l2339:
  5647  1E4A  0876               	movf	___lwdiv@divisor,w
  5648  1E4B  02F8               	subwf	___lwdiv@dividend,f
  5649  1E4C  0877               	movf	___lwdiv@divisor+1,w
  5650  1E4D  1C03               	skipc
  5651  1E4E  03F9               	decf	___lwdiv@dividend+1,f
  5652  1E4F  02F9               	subwf	___lwdiv@dividend+1,f
  5653  1E50                     l2341:
  5654  1E50  147B               	bsf	___lwdiv@quotient,0
  5655  1E51                     l2343:
  5656  1E51  3001               	movlw	1
  5657  1E52                     u3105:
  5658  1E52  1003               	clrc
  5659  1E53  0CF7               	rrf	___lwdiv@divisor+1,f
  5660  1E54  0CF6               	rrf	___lwdiv@divisor,f
  5661  1E55  3EFF               	addlw	-1
  5662  1E56  1D03               	skipz
  5663  1E57  2E52               	goto	u3105
  5664  1E58                     l2345:
  5665  1E58  3001               	movlw	1
  5666  1E59  02FD               	subwf	___lwdiv@counter,f
  5667  1E5A  1D03               	btfss	3,2
  5668  1E5B  2E5D               	goto	u3111
  5669  1E5C  2E5E               	goto	u3110
  5670  1E5D                     u3111:
  5671  1E5D  2E39               	goto	l2337
  5672  1E5E                     u3110:
  5673  1E5E                     l2347:
  5674  1E5E  087C               	movf	___lwdiv@quotient+1,w
  5675  1E5F  00F7               	movwf	?___lwdiv+1
  5676  1E60  087B               	movf	___lwdiv@quotient,w
  5677  1E61  00F6               	movwf	?___lwdiv
  5678  1E62                     l674:
  5679  1E62  0008               	return
  5680  1E63                     __end_of___lwdiv:
  5681                           
  5682                           	psect	text9
  5683  0C9F                     __ptext9:	
  5684 ;; *************** function ___flmul *****************
  5685 ;; Defined at:
  5686 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  5687 ;; Parameters:    Size  Location     Type
  5688 ;;  b               4    4[BANK0 ] unsigned int 
  5689 ;;  a               4    8[BANK0 ] unsigned int 
  5690 ;; Auto vars:     Size  Location     Type
  5691 ;;  prod            4   24[BANK0 ] struct .
  5692 ;;  grs             4   18[BANK0 ] unsigned long 
  5693 ;;  temp            2   28[BANK0 ] struct .
  5694 ;;  bexp            1   23[BANK0 ] unsigned char 
  5695 ;;  aexp            1   22[BANK0 ] unsigned char 
  5696 ;;  sign            1   17[BANK0 ] unsigned char 
  5697 ;; Return value:  Size  Location     Type
  5698 ;;                  4    4[BANK0 ] unsigned char 
  5699 ;; Registers used:
  5700 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5701 ;; Tracked objects:
  5702 ;;		On entry : 0/0
  5703 ;;		On exit  : 0/0
  5704 ;;		Unchanged: 0/0
  5705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5706 ;;      Params:         0       8       0       0       0
  5707 ;;      Locals:         0      13       0       0       0
  5708 ;;      Temps:          0       5       0       0       0
  5709 ;;      Totals:         0      26       0       0       0
  5710 ;;Total ram usage:       26 bytes
  5711 ;; Hardware stack levels used:    1
  5712 ;; Hardware stack levels required when called:    1
  5713 ;; This function calls:
  5714 ;;		__Umul8_16
  5715 ;; This function is called by:
  5716 ;;		_main
  5717 ;;		_fround
  5718 ;;		_scale
  5719 ;;		_sprintf
  5720 ;; This function uses a non-reentrant model
  5721 ;;
  5722                           
  5723                           
  5724                           ;psect for function ___flmul
  5725  0C9F                     ___flmul:
  5726  0C9F                     l2567:	
  5727                           ;incstack = 0
  5728                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5729                           
  5730  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  5731  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  5732  0CA1  0827               	movf	___flmul@b+3,w
  5733  0CA2  3980               	andlw	128
  5734  0CA3  00AC               	movwf	??___flmul
  5735  0CA4  082C               	movf	??___flmul,w
  5736  0CA5  00B1               	movwf	___flmul@sign
  5737  0CA6                     l2569:
  5738  0CA6  0827               	movf	___flmul@b+3,w
  5739  0CA7  00AC               	movwf	??___flmul
  5740  0CA8  072C               	addwf	??___flmul,w
  5741  0CA9  00AD               	movwf	??___flmul+1
  5742  0CAA  082D               	movf	??___flmul+1,w
  5743  0CAB  00B7               	movwf	___flmul@bexp
  5744  0CAC                     l2571:
  5745  0CAC  1FA6               	btfss	___flmul@b+2,7
  5746  0CAD  2CAF               	goto	u3641
  5747  0CAE  2CB0               	goto	u3640
  5748  0CAF                     u3641:
  5749  0CAF  2CB1               	goto	l2575
  5750  0CB0                     u3640:
  5751  0CB0                     l2573:
  5752  0CB0  1437               	bsf	___flmul@bexp,0
  5753  0CB1                     l2575:
  5754  0CB1  0837               	movf	___flmul@bexp,w
  5755  0CB2  1903               	btfsc	3,2
  5756  0CB3  2CB5               	goto	u3651
  5757  0CB4  2CB6               	goto	u3650
  5758  0CB5                     u3651:
  5759  0CB5  2CC5               	goto	l2583
  5760  0CB6                     u3650:
  5761  0CB6                     l2577:
  5762  0CB6  0A37               	incf	___flmul@bexp,w
  5763  0CB7  1D03               	btfss	3,2
  5764  0CB8  2CBA               	goto	u3661
  5765  0CB9  2CBB               	goto	u3660
  5766  0CBA                     u3661:
  5767  0CBA  2CC3               	goto	l2581
  5768  0CBB                     u3660:
  5769  0CBB                     l2579:
  5770  0CBB  3000               	movlw	0
  5771  0CBC  00A7               	movwf	___flmul@b+3
  5772  0CBD  3000               	movlw	0
  5773  0CBE  00A6               	movwf	___flmul@b+2
  5774  0CBF  3000               	movlw	0
  5775  0CC0  00A5               	movwf	___flmul@b+1
  5776  0CC1  3000               	movlw	0
  5777  0CC2  00A4               	movwf	___flmul@b
  5778  0CC3                     l2581:
  5779  0CC3  17A6               	bsf	___flmul@b+2,7
  5780  0CC4  2CCD               	goto	l2585
  5781  0CC5                     l2583:
  5782  0CC5  3000               	movlw	0
  5783  0CC6  00A7               	movwf	___flmul@b+3
  5784  0CC7  3000               	movlw	0
  5785  0CC8  00A6               	movwf	___flmul@b+2
  5786  0CC9  3000               	movlw	0
  5787  0CCA  00A5               	movwf	___flmul@b+1
  5788  0CCB  3000               	movlw	0
  5789  0CCC  00A4               	movwf	___flmul@b
  5790  0CCD                     l2585:
  5791  0CCD  082B               	movf	___flmul@a+3,w
  5792  0CCE  3980               	andlw	128
  5793  0CCF  00AC               	movwf	??___flmul
  5794  0CD0  082C               	movf	??___flmul,w
  5795  0CD1  06B1               	xorwf	___flmul@sign,f
  5796  0CD2                     l2587:
  5797  0CD2  082B               	movf	___flmul@a+3,w
  5798  0CD3  00AC               	movwf	??___flmul
  5799  0CD4  072C               	addwf	??___flmul,w
  5800  0CD5  00AD               	movwf	??___flmul+1
  5801  0CD6  082D               	movf	??___flmul+1,w
  5802  0CD7  00B6               	movwf	___flmul@aexp
  5803  0CD8                     l2589:
  5804  0CD8  1FAA               	btfss	___flmul@a+2,7
  5805  0CD9  2CDB               	goto	u3671
  5806  0CDA  2CDC               	goto	u3670
  5807  0CDB                     u3671:
  5808  0CDB  2CDD               	goto	l2593
  5809  0CDC                     u3670:
  5810  0CDC                     l2591:
  5811  0CDC  1436               	bsf	___flmul@aexp,0
  5812  0CDD                     l2593:
  5813  0CDD  0836               	movf	___flmul@aexp,w
  5814  0CDE  1903               	btfsc	3,2
  5815  0CDF  2CE1               	goto	u3681
  5816  0CE0  2CE2               	goto	u3680
  5817  0CE1                     u3681:
  5818  0CE1  2CF1               	goto	l2601
  5819  0CE2                     u3680:
  5820  0CE2                     l2595:
  5821  0CE2  0A36               	incf	___flmul@aexp,w
  5822  0CE3  1D03               	btfss	3,2
  5823  0CE4  2CE6               	goto	u3691
  5824  0CE5  2CE7               	goto	u3690
  5825  0CE6                     u3691:
  5826  0CE6  2CEF               	goto	l2599
  5827  0CE7                     u3690:
  5828  0CE7                     l2597:
  5829  0CE7  3000               	movlw	0
  5830  0CE8  00AB               	movwf	___flmul@a+3
  5831  0CE9  3000               	movlw	0
  5832  0CEA  00AA               	movwf	___flmul@a+2
  5833  0CEB  3000               	movlw	0
  5834  0CEC  00A9               	movwf	___flmul@a+1
  5835  0CED  3000               	movlw	0
  5836  0CEE  00A8               	movwf	___flmul@a
  5837  0CEF                     l2599:
  5838  0CEF  17AA               	bsf	___flmul@a+2,7
  5839  0CF0  2CF9               	goto	l2603
  5840  0CF1                     l2601:
  5841  0CF1  3000               	movlw	0
  5842  0CF2  00AB               	movwf	___flmul@a+3
  5843  0CF3  3000               	movlw	0
  5844  0CF4  00AA               	movwf	___flmul@a+2
  5845  0CF5  3000               	movlw	0
  5846  0CF6  00A9               	movwf	___flmul@a+1
  5847  0CF7  3000               	movlw	0
  5848  0CF8  00A8               	movwf	___flmul@a
  5849  0CF9                     l2603:
  5850  0CF9  0836               	movf	___flmul@aexp,w
  5851  0CFA  1903               	btfsc	3,2
  5852  0CFB  2CFD               	goto	u3701
  5853  0CFC  2CFE               	goto	u3700
  5854  0CFD                     u3701:
  5855  0CFD  2D03               	goto	l2607
  5856  0CFE                     u3700:
  5857  0CFE                     l2605:
  5858  0CFE  0837               	movf	___flmul@bexp,w
  5859  0CFF  1D03               	btfss	3,2
  5860  0D00  2D02               	goto	u3711
  5861  0D01  2D03               	goto	u3710
  5862  0D02                     u3711:
  5863  0D02  2D0C               	goto	l2611
  5864  0D03                     u3710:
  5865  0D03                     l2607:
  5866  0D03  3000               	movlw	0
  5867  0D04  00A7               	movwf	?___flmul+3
  5868  0D05  3000               	movlw	0
  5869  0D06  00A6               	movwf	?___flmul+2
  5870  0D07  3000               	movlw	0
  5871  0D08  00A5               	movwf	?___flmul+1
  5872  0D09  3000               	movlw	0
  5873  0D0A  00A4               	movwf	?___flmul
  5874  0D0B  2FFF               	goto	l791
  5875  0D0C                     l2611:
  5876  0D0C  0824               	movf	___flmul@b,w
  5877  0D0D  00AC               	movwf	??___flmul
  5878  0D0E  082C               	movf	??___flmul,w
  5879  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  5880  0D10  082A               	movf	___flmul@a+2,w
  5881  0D11  160A  158A  253B  120A  158A  	fcall	__Umul8_16
  5882  0D16  0871               	movf	?__Umul8_16+1,w
  5883  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  5884  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  5885  0D19  00BD               	movwf	___flmul@temp+1
  5886  0D1A  0870               	movf	?__Umul8_16,w
  5887  0D1B  00BC               	movwf	___flmul@temp
  5888  0D1C                     l2613:
  5889  0D1C  083C               	movf	___flmul@temp,w
  5890  0D1D  00AC               	movwf	??___flmul
  5891  0D1E  01AD               	clrf	??___flmul+1
  5892  0D1F  01AE               	clrf	??___flmul+2
  5893  0D20  01AF               	clrf	??___flmul+3
  5894  0D21  082F               	movf	??___flmul+3,w
  5895  0D22  00B5               	movwf	___flmul@grs+3
  5896  0D23  082E               	movf	??___flmul+2,w
  5897  0D24  00B4               	movwf	___flmul@grs+2
  5898  0D25  082D               	movf	??___flmul+1,w
  5899  0D26  00B3               	movwf	___flmul@grs+1
  5900  0D27  082C               	movf	??___flmul,w
  5901  0D28  00B2               	movwf	___flmul@grs
  5902  0D29                     l2615:
  5903  0D29  083D               	movf	___flmul@temp+1,w
  5904  0D2A  00AC               	movwf	??___flmul
  5905  0D2B  01AD               	clrf	??___flmul+1
  5906  0D2C  01AE               	clrf	??___flmul+2
  5907  0D2D  01AF               	clrf	??___flmul+3
  5908  0D2E  082F               	movf	??___flmul+3,w
  5909  0D2F  00BB               	movwf	___flmul@prod+3
  5910  0D30  082E               	movf	??___flmul+2,w
  5911  0D31  00BA               	movwf	___flmul@prod+2
  5912  0D32  082D               	movf	??___flmul+1,w
  5913  0D33  00B9               	movwf	___flmul@prod+1
  5914  0D34  082C               	movf	??___flmul,w
  5915  0D35  00B8               	movwf	___flmul@prod
  5916  0D36  0825               	movf	___flmul@b+1,w
  5917  0D37  00AC               	movwf	??___flmul
  5918  0D38  082C               	movf	??___flmul,w
  5919  0D39  00F0               	movwf	__Umul8_16@multiplicand
  5920  0D3A  0829               	movf	___flmul@a+1,w
  5921  0D3B  160A  158A  253B  120A  158A  	fcall	__Umul8_16
  5922  0D40  0871               	movf	?__Umul8_16+1,w
  5923  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  5924  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  5925  0D43  00BD               	movwf	___flmul@temp+1
  5926  0D44  0870               	movf	?__Umul8_16,w
  5927  0D45  00BC               	movwf	___flmul@temp
  5928  0D46                     l2617:
  5929  0D46  083C               	movf	___flmul@temp,w
  5930  0D47  00AC               	movwf	??___flmul
  5931  0D48  01AD               	clrf	??___flmul+1
  5932  0D49  01AE               	clrf	??___flmul+2
  5933  0D4A  01AF               	clrf	??___flmul+3
  5934  0D4B  082C               	movf	??___flmul,w
  5935  0D4C  07B2               	addwf	___flmul@grs,f
  5936  0D4D  082D               	movf	??___flmul+1,w
  5937  0D4E  1103               	clrz
  5938  0D4F  1803               	skipnc
  5939  0D50  3E01               	addlw	1
  5940  0D51  1903               	skipnz
  5941  0D52  2D54               	goto	u3721
  5942  0D53  07B3               	addwf	___flmul@grs+1,f
  5943  0D54                     u3721:
  5944  0D54  082E               	movf	??___flmul+2,w
  5945  0D55  1103               	clrz
  5946  0D56  1803               	skipnc
  5947  0D57  3E01               	addlw	1
  5948  0D58  1903               	skipnz
  5949  0D59  2D5B               	goto	u3722
  5950  0D5A  07B4               	addwf	___flmul@grs+2,f
  5951  0D5B                     u3722:
  5952  0D5B  082F               	movf	??___flmul+3,w
  5953  0D5C  1103               	clrz
  5954  0D5D  1803               	skipnc
  5955  0D5E  3E01               	addlw	1
  5956  0D5F  1903               	skipnz
  5957  0D60  2D62               	goto	u3723
  5958  0D61  07B5               	addwf	___flmul@grs+3,f
  5959  0D62                     u3723:
  5960  0D62                     l2619:
  5961  0D62  083D               	movf	___flmul@temp+1,w
  5962  0D63  00AC               	movwf	??___flmul
  5963  0D64  01AD               	clrf	??___flmul+1
  5964  0D65  01AE               	clrf	??___flmul+2
  5965  0D66  01AF               	clrf	??___flmul+3
  5966  0D67  082C               	movf	??___flmul,w
  5967  0D68  07B8               	addwf	___flmul@prod,f
  5968  0D69  082D               	movf	??___flmul+1,w
  5969  0D6A  1103               	clrz
  5970  0D6B  1803               	skipnc
  5971  0D6C  3E01               	addlw	1
  5972  0D6D  1903               	skipnz
  5973  0D6E  2D70               	goto	u3731
  5974  0D6F  07B9               	addwf	___flmul@prod+1,f
  5975  0D70                     u3731:
  5976  0D70  082E               	movf	??___flmul+2,w
  5977  0D71  1103               	clrz
  5978  0D72  1803               	skipnc
  5979  0D73  3E01               	addlw	1
  5980  0D74  1903               	skipnz
  5981  0D75  2D77               	goto	u3732
  5982  0D76  07BA               	addwf	___flmul@prod+2,f
  5983  0D77                     u3732:
  5984  0D77  082F               	movf	??___flmul+3,w
  5985  0D78  1103               	clrz
  5986  0D79  1803               	skipnc
  5987  0D7A  3E01               	addlw	1
  5988  0D7B  1903               	skipnz
  5989  0D7C  2D7E               	goto	u3733
  5990  0D7D  07BB               	addwf	___flmul@prod+3,f
  5991  0D7E                     u3733:
  5992  0D7E  0826               	movf	___flmul@b+2,w
  5993  0D7F  00AC               	movwf	??___flmul
  5994  0D80  082C               	movf	??___flmul,w
  5995  0D81  00F0               	movwf	__Umul8_16@multiplicand
  5996  0D82  0828               	movf	___flmul@a,w
  5997  0D83  160A  158A  253B  120A  158A  	fcall	__Umul8_16
  5998  0D88  0871               	movf	?__Umul8_16+1,w
  5999  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  6000  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  6001  0D8B  00BD               	movwf	___flmul@temp+1
  6002  0D8C  0870               	movf	?__Umul8_16,w
  6003  0D8D  00BC               	movwf	___flmul@temp
  6004  0D8E                     l2621:
  6005  0D8E  083C               	movf	___flmul@temp,w
  6006  0D8F  00AC               	movwf	??___flmul
  6007  0D90  01AD               	clrf	??___flmul+1
  6008  0D91  01AE               	clrf	??___flmul+2
  6009  0D92  01AF               	clrf	??___flmul+3
  6010  0D93  082C               	movf	??___flmul,w
  6011  0D94  07B2               	addwf	___flmul@grs,f
  6012  0D95  082D               	movf	??___flmul+1,w
  6013  0D96  1103               	clrz
  6014  0D97  1803               	skipnc
  6015  0D98  3E01               	addlw	1
  6016  0D99  1903               	skipnz
  6017  0D9A  2D9C               	goto	u3741
  6018  0D9B  07B3               	addwf	___flmul@grs+1,f
  6019  0D9C                     u3741:
  6020  0D9C  082E               	movf	??___flmul+2,w
  6021  0D9D  1103               	clrz
  6022  0D9E  1803               	skipnc
  6023  0D9F  3E01               	addlw	1
  6024  0DA0  1903               	skipnz
  6025  0DA1  2DA3               	goto	u3742
  6026  0DA2  07B4               	addwf	___flmul@grs+2,f
  6027  0DA3                     u3742:
  6028  0DA3  082F               	movf	??___flmul+3,w
  6029  0DA4  1103               	clrz
  6030  0DA5  1803               	skipnc
  6031  0DA6  3E01               	addlw	1
  6032  0DA7  1903               	skipnz
  6033  0DA8  2DAA               	goto	u3743
  6034  0DA9  07B5               	addwf	___flmul@grs+3,f
  6035  0DAA                     u3743:
  6036  0DAA                     l2623:
  6037  0DAA  083D               	movf	___flmul@temp+1,w
  6038  0DAB  00AC               	movwf	??___flmul
  6039  0DAC  01AD               	clrf	??___flmul+1
  6040  0DAD  01AE               	clrf	??___flmul+2
  6041  0DAE  01AF               	clrf	??___flmul+3
  6042  0DAF  082C               	movf	??___flmul,w
  6043  0DB0  07B8               	addwf	___flmul@prod,f
  6044  0DB1  082D               	movf	??___flmul+1,w
  6045  0DB2  1103               	clrz
  6046  0DB3  1803               	skipnc
  6047  0DB4  3E01               	addlw	1
  6048  0DB5  1903               	skipnz
  6049  0DB6  2DB8               	goto	u3751
  6050  0DB7  07B9               	addwf	___flmul@prod+1,f
  6051  0DB8                     u3751:
  6052  0DB8  082E               	movf	??___flmul+2,w
  6053  0DB9  1103               	clrz
  6054  0DBA  1803               	skipnc
  6055  0DBB  3E01               	addlw	1
  6056  0DBC  1903               	skipnz
  6057  0DBD  2DBF               	goto	u3752
  6058  0DBE  07BA               	addwf	___flmul@prod+2,f
  6059  0DBF                     u3752:
  6060  0DBF  082F               	movf	??___flmul+3,w
  6061  0DC0  1103               	clrz
  6062  0DC1  1803               	skipnc
  6063  0DC2  3E01               	addlw	1
  6064  0DC3  1903               	skipnz
  6065  0DC4  2DC6               	goto	u3753
  6066  0DC5  07BB               	addwf	___flmul@prod+3,f
  6067  0DC6                     u3753:
  6068  0DC6                     l2625:
  6069  0DC6  3008               	movlw	8
  6070  0DC7  00AC               	movwf	??___flmul
  6071  0DC8                     u3765:
  6072  0DC8  1003               	clrc
  6073  0DC9  0DB2               	rlf	___flmul@grs,f
  6074  0DCA  0DB3               	rlf	___flmul@grs+1,f
  6075  0DCB  0DB4               	rlf	___flmul@grs+2,f
  6076  0DCC  0DB5               	rlf	___flmul@grs+3,f
  6077  0DCD  0BAC               	decfsz	??___flmul,f
  6078  0DCE  2DC8               	goto	u3765
  6079  0DCF                     l2627:
  6080  0DCF  0825               	movf	___flmul@b+1,w
  6081  0DD0  00AC               	movwf	??___flmul
  6082  0DD1  082C               	movf	??___flmul,w
  6083  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  6084  0DD3  0828               	movf	___flmul@a,w
  6085  0DD4  160A  158A  253B  120A  158A  	fcall	__Umul8_16
  6086  0DD9  0871               	movf	?__Umul8_16+1,w
  6087  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  6088  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  6089  0DDC  00BD               	movwf	___flmul@temp+1
  6090  0DDD  0870               	movf	?__Umul8_16,w
  6091  0DDE  00BC               	movwf	___flmul@temp
  6092  0DDF                     l2629:
  6093  0DDF  083C               	movf	___flmul@temp,w
  6094  0DE0  00AC               	movwf	??___flmul
  6095  0DE1  083D               	movf	___flmul@temp+1,w
  6096  0DE2  00AD               	movwf	??___flmul+1
  6097  0DE3  01AE               	clrf	??___flmul+2
  6098  0DE4  01AF               	clrf	??___flmul+3
  6099  0DE5  082C               	movf	??___flmul,w
  6100  0DE6  07B2               	addwf	___flmul@grs,f
  6101  0DE7  082D               	movf	??___flmul+1,w
  6102  0DE8  1103               	clrz
  6103  0DE9  1803               	skipnc
  6104  0DEA  3E01               	addlw	1
  6105  0DEB  1903               	skipnz
  6106  0DEC  2DEE               	goto	u3771
  6107  0DED  07B3               	addwf	___flmul@grs+1,f
  6108  0DEE                     u3771:
  6109  0DEE  082E               	movf	??___flmul+2,w
  6110  0DEF  1103               	clrz
  6111  0DF0  1803               	skipnc
  6112  0DF1  3E01               	addlw	1
  6113  0DF2  1903               	skipnz
  6114  0DF3  2DF5               	goto	u3772
  6115  0DF4  07B4               	addwf	___flmul@grs+2,f
  6116  0DF5                     u3772:
  6117  0DF5  082F               	movf	??___flmul+3,w
  6118  0DF6  1103               	clrz
  6119  0DF7  1803               	skipnc
  6120  0DF8  3E01               	addlw	1
  6121  0DF9  1903               	skipnz
  6122  0DFA  2DFC               	goto	u3773
  6123  0DFB  07B5               	addwf	___flmul@grs+3,f
  6124  0DFC                     u3773:
  6125  0DFC                     l2631:
  6126  0DFC  0824               	movf	___flmul@b,w
  6127  0DFD  00AC               	movwf	??___flmul
  6128  0DFE  082C               	movf	??___flmul,w
  6129  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  6130  0E00  0829               	movf	___flmul@a+1,w
  6131  0E01  160A  158A  253B  120A  158A  	fcall	__Umul8_16
  6132  0E06  0871               	movf	?__Umul8_16+1,w
  6133  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  6134  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  6135  0E09  00BD               	movwf	___flmul@temp+1
  6136  0E0A  0870               	movf	?__Umul8_16,w
  6137  0E0B  00BC               	movwf	___flmul@temp
  6138  0E0C                     l2633:
  6139  0E0C  083C               	movf	___flmul@temp,w
  6140  0E0D  00AC               	movwf	??___flmul
  6141  0E0E  083D               	movf	___flmul@temp+1,w
  6142  0E0F  00AD               	movwf	??___flmul+1
  6143  0E10  01AE               	clrf	??___flmul+2
  6144  0E11  01AF               	clrf	??___flmul+3
  6145  0E12  082C               	movf	??___flmul,w
  6146  0E13  07B2               	addwf	___flmul@grs,f
  6147  0E14  082D               	movf	??___flmul+1,w
  6148  0E15  1103               	clrz
  6149  0E16  1803               	skipnc
  6150  0E17  3E01               	addlw	1
  6151  0E18  1903               	skipnz
  6152  0E19  2E1B               	goto	u3781
  6153  0E1A  07B3               	addwf	___flmul@grs+1,f
  6154  0E1B                     u3781:
  6155  0E1B  082E               	movf	??___flmul+2,w
  6156  0E1C  1103               	clrz
  6157  0E1D  1803               	skipnc
  6158  0E1E  3E01               	addlw	1
  6159  0E1F  1903               	skipnz
  6160  0E20  2E22               	goto	u3782
  6161  0E21  07B4               	addwf	___flmul@grs+2,f
  6162  0E22                     u3782:
  6163  0E22  082F               	movf	??___flmul+3,w
  6164  0E23  1103               	clrz
  6165  0E24  1803               	skipnc
  6166  0E25  3E01               	addlw	1
  6167  0E26  1903               	skipnz
  6168  0E27  2E29               	goto	u3783
  6169  0E28  07B5               	addwf	___flmul@grs+3,f
  6170  0E29                     u3783:
  6171  0E29                     l2635:
  6172  0E29  3008               	movlw	8
  6173  0E2A  00AC               	movwf	??___flmul
  6174  0E2B                     u3795:
  6175  0E2B  1003               	clrc
  6176  0E2C  0DB2               	rlf	___flmul@grs,f
  6177  0E2D  0DB3               	rlf	___flmul@grs+1,f
  6178  0E2E  0DB4               	rlf	___flmul@grs+2,f
  6179  0E2F  0DB5               	rlf	___flmul@grs+3,f
  6180  0E30  0BAC               	decfsz	??___flmul,f
  6181  0E31  2E2B               	goto	u3795
  6182  0E32  0824               	movf	___flmul@b,w
  6183  0E33  00AC               	movwf	??___flmul
  6184  0E34  082C               	movf	??___flmul,w
  6185  0E35  00F0               	movwf	__Umul8_16@multiplicand
  6186  0E36  0828               	movf	___flmul@a,w
  6187  0E37  160A  158A  253B  120A  158A  	fcall	__Umul8_16
  6188  0E3C  0871               	movf	?__Umul8_16+1,w
  6189  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  6190  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  6191  0E3F  00BD               	movwf	___flmul@temp+1
  6192  0E40  0870               	movf	?__Umul8_16,w
  6193  0E41  00BC               	movwf	___flmul@temp
  6194  0E42                     l2637:
  6195  0E42  083C               	movf	___flmul@temp,w
  6196  0E43  00AC               	movwf	??___flmul
  6197  0E44  083D               	movf	___flmul@temp+1,w
  6198  0E45  00AD               	movwf	??___flmul+1
  6199  0E46  01AE               	clrf	??___flmul+2
  6200  0E47  01AF               	clrf	??___flmul+3
  6201  0E48  082C               	movf	??___flmul,w
  6202  0E49  07B2               	addwf	___flmul@grs,f
  6203  0E4A  082D               	movf	??___flmul+1,w
  6204  0E4B  1103               	clrz
  6205  0E4C  1803               	skipnc
  6206  0E4D  3E01               	addlw	1
  6207  0E4E  1903               	skipnz
  6208  0E4F  2E51               	goto	u3801
  6209  0E50  07B3               	addwf	___flmul@grs+1,f
  6210  0E51                     u3801:
  6211  0E51  082E               	movf	??___flmul+2,w
  6212  0E52  1103               	clrz
  6213  0E53  1803               	skipnc
  6214  0E54  3E01               	addlw	1
  6215  0E55  1903               	skipnz
  6216  0E56  2E58               	goto	u3802
  6217  0E57  07B4               	addwf	___flmul@grs+2,f
  6218  0E58                     u3802:
  6219  0E58  082F               	movf	??___flmul+3,w
  6220  0E59  1103               	clrz
  6221  0E5A  1803               	skipnc
  6222  0E5B  3E01               	addlw	1
  6223  0E5C  1903               	skipnz
  6224  0E5D  2E5F               	goto	u3803
  6225  0E5E  07B5               	addwf	___flmul@grs+3,f
  6226  0E5F                     u3803:
  6227  0E5F                     l2639:
  6228  0E5F  0825               	movf	___flmul@b+1,w
  6229  0E60  00AC               	movwf	??___flmul
  6230  0E61  082C               	movf	??___flmul,w
  6231  0E62  00F0               	movwf	__Umul8_16@multiplicand
  6232  0E63  082A               	movf	___flmul@a+2,w
  6233  0E64  160A  158A  253B  120A  158A  	fcall	__Umul8_16
  6234  0E69  0871               	movf	?__Umul8_16+1,w
  6235  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  6236  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  6237  0E6C  00BD               	movwf	___flmul@temp+1
  6238  0E6D  0870               	movf	?__Umul8_16,w
  6239  0E6E  00BC               	movwf	___flmul@temp
  6240  0E6F  083C               	movf	___flmul@temp,w
  6241  0E70  00AC               	movwf	??___flmul
  6242  0E71  083D               	movf	___flmul@temp+1,w
  6243  0E72  00AD               	movwf	??___flmul+1
  6244  0E73  01AE               	clrf	??___flmul+2
  6245  0E74  01AF               	clrf	??___flmul+3
  6246  0E75  082C               	movf	??___flmul,w
  6247  0E76  07B8               	addwf	___flmul@prod,f
  6248  0E77  082D               	movf	??___flmul+1,w
  6249  0E78  1103               	clrz
  6250  0E79  1803               	skipnc
  6251  0E7A  3E01               	addlw	1
  6252  0E7B  1903               	skipnz
  6253  0E7C  2E7E               	goto	u3811
  6254  0E7D  07B9               	addwf	___flmul@prod+1,f
  6255  0E7E                     u3811:
  6256  0E7E  082E               	movf	??___flmul+2,w
  6257  0E7F  1103               	clrz
  6258  0E80  1803               	skipnc
  6259  0E81  3E01               	addlw	1
  6260  0E82  1903               	skipnz
  6261  0E83  2E85               	goto	u3812
  6262  0E84  07BA               	addwf	___flmul@prod+2,f
  6263  0E85                     u3812:
  6264  0E85  082F               	movf	??___flmul+3,w
  6265  0E86  1103               	clrz
  6266  0E87  1803               	skipnc
  6267  0E88  3E01               	addlw	1
  6268  0E89  1903               	skipnz
  6269  0E8A  2E8C               	goto	u3813
  6270  0E8B  07BB               	addwf	___flmul@prod+3,f
  6271  0E8C                     u3813:
  6272  0E8C                     l2641:
  6273  0E8C  0826               	movf	___flmul@b+2,w
  6274  0E8D  00AC               	movwf	??___flmul
  6275  0E8E  082C               	movf	??___flmul,w
  6276  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  6277  0E90  0829               	movf	___flmul@a+1,w
  6278  0E91  160A  158A  253B  120A  158A  	fcall	__Umul8_16
  6279  0E96  0871               	movf	?__Umul8_16+1,w
  6280  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  6281  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  6282  0E99  00BD               	movwf	___flmul@temp+1
  6283  0E9A  0870               	movf	?__Umul8_16,w
  6284  0E9B  00BC               	movwf	___flmul@temp
  6285  0E9C                     l2643:
  6286  0E9C  083C               	movf	___flmul@temp,w
  6287  0E9D  00AC               	movwf	??___flmul
  6288  0E9E  083D               	movf	___flmul@temp+1,w
  6289  0E9F  00AD               	movwf	??___flmul+1
  6290  0EA0  01AE               	clrf	??___flmul+2
  6291  0EA1  01AF               	clrf	??___flmul+3
  6292  0EA2  082C               	movf	??___flmul,w
  6293  0EA3  07B8               	addwf	___flmul@prod,f
  6294  0EA4  082D               	movf	??___flmul+1,w
  6295  0EA5  1103               	clrz
  6296  0EA6  1803               	skipnc
  6297  0EA7  3E01               	addlw	1
  6298  0EA8  1903               	skipnz
  6299  0EA9  2EAB               	goto	u3821
  6300  0EAA  07B9               	addwf	___flmul@prod+1,f
  6301  0EAB                     u3821:
  6302  0EAB  082E               	movf	??___flmul+2,w
  6303  0EAC  1103               	clrz
  6304  0EAD  1803               	skipnc
  6305  0EAE  3E01               	addlw	1
  6306  0EAF  1903               	skipnz
  6307  0EB0  2EB2               	goto	u3822
  6308  0EB1  07BA               	addwf	___flmul@prod+2,f
  6309  0EB2                     u3822:
  6310  0EB2  082F               	movf	??___flmul+3,w
  6311  0EB3  1103               	clrz
  6312  0EB4  1803               	skipnc
  6313  0EB5  3E01               	addlw	1
  6314  0EB6  1903               	skipnz
  6315  0EB7  2EB9               	goto	u3823
  6316  0EB8  07BB               	addwf	___flmul@prod+3,f
  6317  0EB9                     u3823:
  6318  0EB9  0826               	movf	___flmul@b+2,w
  6319  0EBA  00AC               	movwf	??___flmul
  6320  0EBB  082C               	movf	??___flmul,w
  6321  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  6322  0EBD  082A               	movf	___flmul@a+2,w
  6323  0EBE  160A  158A  253B  120A  158A  	fcall	__Umul8_16
  6324  0EC3  0871               	movf	?__Umul8_16+1,w
  6325  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  6326  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  6327  0EC6  00BD               	movwf	___flmul@temp+1
  6328  0EC7  0870               	movf	?__Umul8_16,w
  6329  0EC8  00BC               	movwf	___flmul@temp
  6330  0EC9                     l2645:
  6331  0EC9  083C               	movf	___flmul@temp,w
  6332  0ECA  00AC               	movwf	??___flmul
  6333  0ECB  083D               	movf	___flmul@temp+1,w
  6334  0ECC  00AD               	movwf	??___flmul+1
  6335  0ECD  01AE               	clrf	??___flmul+2
  6336  0ECE  01AF               	clrf	??___flmul+3
  6337  0ECF  3008               	movlw	8
  6338  0ED0                     u3835:
  6339  0ED0  1003               	clrc
  6340  0ED1  0DAC               	rlf	??___flmul,f
  6341  0ED2  0DAD               	rlf	??___flmul+1,f
  6342  0ED3  0DAE               	rlf	??___flmul+2,f
  6343  0ED4  0DAF               	rlf	??___flmul+3,f
  6344  0ED5                     u3830:
  6345  0ED5  3EFF               	addlw	-1
  6346  0ED6  1D03               	skipz
  6347  0ED7  2ED0               	goto	u3835
  6348  0ED8  082C               	movf	??___flmul,w
  6349  0ED9  07B8               	addwf	___flmul@prod,f
  6350  0EDA  082D               	movf	??___flmul+1,w
  6351  0EDB  1103               	clrz
  6352  0EDC  1803               	skipnc
  6353  0EDD  3E01               	addlw	1
  6354  0EDE  1903               	skipnz
  6355  0EDF  2EE1               	goto	u3841
  6356  0EE0  07B9               	addwf	___flmul@prod+1,f
  6357  0EE1                     u3841:
  6358  0EE1  082E               	movf	??___flmul+2,w
  6359  0EE2  1103               	clrz
  6360  0EE3  1803               	skipnc
  6361  0EE4  3E01               	addlw	1
  6362  0EE5  1903               	skipnz
  6363  0EE6  2EE8               	goto	u3842
  6364  0EE7  07BA               	addwf	___flmul@prod+2,f
  6365  0EE8                     u3842:
  6366  0EE8  082F               	movf	??___flmul+3,w
  6367  0EE9  1103               	clrz
  6368  0EEA  1803               	skipnc
  6369  0EEB  3E01               	addlw	1
  6370  0EEC  1903               	skipnz
  6371  0EED  2EEF               	goto	u3843
  6372  0EEE  07BB               	addwf	___flmul@prod+3,f
  6373  0EEF                     u3843:
  6374  0EEF                     l2647:
  6375  0EEF  0832               	movf	___flmul@grs,w
  6376  0EF0  00AC               	movwf	??___flmul
  6377  0EF1  0833               	movf	___flmul@grs+1,w
  6378  0EF2  00AD               	movwf	??___flmul+1
  6379  0EF3  0834               	movf	___flmul@grs+2,w
  6380  0EF4  00AE               	movwf	??___flmul+2
  6381  0EF5  0835               	movf	___flmul@grs+3,w
  6382  0EF6  00AF               	movwf	??___flmul+3
  6383  0EF7  3018               	movlw	24
  6384  0EF8                     u3855:
  6385  0EF8  1003               	clrc
  6386  0EF9  0CAF               	rrf	??___flmul+3,f
  6387  0EFA  0CAE               	rrf	??___flmul+2,f
  6388  0EFB  0CAD               	rrf	??___flmul+1,f
  6389  0EFC  0CAC               	rrf	??___flmul,f
  6390  0EFD                     u3850:
  6391  0EFD  3EFF               	addlw	-1
  6392  0EFE  1D03               	skipz
  6393  0EFF  2EF8               	goto	u3855
  6394  0F00  082C               	movf	??___flmul,w
  6395  0F01  07B8               	addwf	___flmul@prod,f
  6396  0F02  082D               	movf	??___flmul+1,w
  6397  0F03  1103               	clrz
  6398  0F04  1803               	skipnc
  6399  0F05  3E01               	addlw	1
  6400  0F06  1903               	skipnz
  6401  0F07  2F09               	goto	u3861
  6402  0F08  07B9               	addwf	___flmul@prod+1,f
  6403  0F09                     u3861:
  6404  0F09  082E               	movf	??___flmul+2,w
  6405  0F0A  1103               	clrz
  6406  0F0B  1803               	skipnc
  6407  0F0C  3E01               	addlw	1
  6408  0F0D  1903               	skipnz
  6409  0F0E  2F10               	goto	u3862
  6410  0F0F  07BA               	addwf	___flmul@prod+2,f
  6411  0F10                     u3862:
  6412  0F10  082F               	movf	??___flmul+3,w
  6413  0F11  1103               	clrz
  6414  0F12  1803               	skipnc
  6415  0F13  3E01               	addlw	1
  6416  0F14  1903               	skipnz
  6417  0F15  2F17               	goto	u3863
  6418  0F16  07BB               	addwf	___flmul@prod+3,f
  6419  0F17                     u3863:
  6420  0F17                     l2649:
  6421  0F17  3008               	movlw	8
  6422  0F18  00AC               	movwf	??___flmul
  6423  0F19                     u3875:
  6424  0F19  1003               	clrc
  6425  0F1A  0DB2               	rlf	___flmul@grs,f
  6426  0F1B  0DB3               	rlf	___flmul@grs+1,f
  6427  0F1C  0DB4               	rlf	___flmul@grs+2,f
  6428  0F1D  0DB5               	rlf	___flmul@grs+3,f
  6429  0F1E  0BAC               	decfsz	??___flmul,f
  6430  0F1F  2F19               	goto	u3875
  6431  0F20                     l2651:
  6432  0F20  0837               	movf	___flmul@bexp,w
  6433  0F21  0736               	addwf	___flmul@aexp,w
  6434  0F22  00AC               	movwf	??___flmul
  6435  0F23  01AD               	clrf	??___flmul+1
  6436  0F24  0DAD               	rlf	??___flmul+1,f
  6437  0F25  082C               	movf	??___flmul,w
  6438  0F26  3E82               	addlw	130
  6439  0F27  00BC               	movwf	___flmul@temp
  6440  0F28  082D               	movf	??___flmul+1,w
  6441  0F29  1803               	skipnc
  6442  0F2A  3E01               	addlw	1
  6443  0F2B  3EFF               	addlw	255
  6444  0F2C  00BD               	movwf	___flmul@temp+1
  6445  0F2D  2F4B               	goto	l2663
  6446  0F2E                     l2653:
  6447  0F2E  3001               	movlw	1
  6448  0F2F  00AC               	movwf	??___flmul
  6449  0F30                     u3885:
  6450  0F30  1003               	clrc
  6451  0F31  0DB8               	rlf	___flmul@prod,f
  6452  0F32  0DB9               	rlf	___flmul@prod+1,f
  6453  0F33  0DBA               	rlf	___flmul@prod+2,f
  6454  0F34  0DBB               	rlf	___flmul@prod+3,f
  6455  0F35  0BAC               	decfsz	??___flmul,f
  6456  0F36  2F30               	goto	u3885
  6457  0F37                     l2655:
  6458  0F37  1FB5               	btfss	___flmul@grs+3,7
  6459  0F38  2F3A               	goto	u3891
  6460  0F39  2F3B               	goto	u3890
  6461  0F3A                     u3891:
  6462  0F3A  2F3C               	goto	l2659
  6463  0F3B                     u3890:
  6464  0F3B                     l2657:
  6465  0F3B  1438               	bsf	___flmul@prod,0
  6466  0F3C                     l2659:
  6467  0F3C  3001               	movlw	1
  6468  0F3D  00AC               	movwf	??___flmul
  6469  0F3E                     u3905:
  6470  0F3E  1003               	clrc
  6471  0F3F  0DB2               	rlf	___flmul@grs,f
  6472  0F40  0DB3               	rlf	___flmul@grs+1,f
  6473  0F41  0DB4               	rlf	___flmul@grs+2,f
  6474  0F42  0DB5               	rlf	___flmul@grs+3,f
  6475  0F43  0BAC               	decfsz	??___flmul,f
  6476  0F44  2F3E               	goto	u3905
  6477  0F45                     l2661:
  6478  0F45  30FF               	movlw	255
  6479  0F46  07BC               	addwf	___flmul@temp,f
  6480  0F47  1803               	skipnc
  6481  0F48  0ABD               	incf	___flmul@temp+1,f
  6482  0F49  30FF               	movlw	255
  6483  0F4A  07BD               	addwf	___flmul@temp+1,f
  6484  0F4B                     l2663:
  6485  0F4B  1FBA               	btfss	___flmul@prod+2,7
  6486  0F4C  2F4E               	goto	u3911
  6487  0F4D  2F4F               	goto	u3910
  6488  0F4E                     u3911:
  6489  0F4E  2F2E               	goto	l2653
  6490  0F4F                     u3910:
  6491  0F4F                     l2665:
  6492  0F4F  01B6               	clrf	___flmul@aexp
  6493  0F50                     l2667:
  6494  0F50  1FB5               	btfss	___flmul@grs+3,7
  6495  0F51  2F53               	goto	u3921
  6496  0F52  2F54               	goto	u3920
  6497  0F53                     u3921:
  6498  0F53  2F70               	goto	l2675
  6499  0F54                     u3920:
  6500  0F54                     l2669:
  6501  0F54  30FF               	movlw	255
  6502  0F55  0532               	andwf	___flmul@grs,w
  6503  0F56  00AC               	movwf	??___flmul
  6504  0F57  30FF               	movlw	255
  6505  0F58  0533               	andwf	___flmul@grs+1,w
  6506  0F59  00AD               	movwf	??___flmul+1
  6507  0F5A  30FF               	movlw	255
  6508  0F5B  0534               	andwf	___flmul@grs+2,w
  6509  0F5C  00AE               	movwf	??___flmul+2
  6510  0F5D  307F               	movlw	127
  6511  0F5E  0535               	andwf	___flmul@grs+3,w
  6512  0F5F  00AF               	movwf	??___flmul+3
  6513  0F60  082F               	movf	??___flmul+3,w
  6514  0F61  042E               	iorwf	??___flmul+2,w
  6515  0F62  042D               	iorwf	??___flmul+1,w
  6516  0F63  042C               	iorwf	??___flmul,w
  6517  0F64  1903               	skipnz
  6518  0F65  2F67               	goto	u3931
  6519  0F66  2F68               	goto	u3930
  6520  0F67                     u3931:
  6521  0F67  2F6B               	goto	l797
  6522  0F68                     u3930:
  6523  0F68                     l2671:
  6524  0F68  01B6               	clrf	___flmul@aexp
  6525  0F69  0AB6               	incf	___flmul@aexp,f
  6526  0F6A  2F70               	goto	l2675
  6527  0F6B                     l797:
  6528  0F6B  1C38               	btfss	___flmul@prod,0
  6529  0F6C  2F6E               	goto	u3941
  6530  0F6D  2F6F               	goto	u3940
  6531  0F6E                     u3941:
  6532  0F6E  2F70               	goto	l2675
  6533  0F6F                     u3940:
  6534  0F6F  2F68               	goto	l2671
  6535  0F70                     l2675:
  6536  0F70  0836               	movf	___flmul@aexp,w
  6537  0F71  1903               	btfsc	3,2
  6538  0F72  2F74               	goto	u3951
  6539  0F73  2F75               	goto	u3950
  6540  0F74                     u3951:
  6541  0F74  2FA6               	goto	l2685
  6542  0F75                     u3950:
  6543  0F75                     l2677:
  6544  0F75  3001               	movlw	1
  6545  0F76  07B8               	addwf	___flmul@prod,f
  6546  0F77  3000               	movlw	0
  6547  0F78  1803               	skipnc
  6548  0F79  3001               	movlw	1
  6549  0F7A  07B9               	addwf	___flmul@prod+1,f
  6550  0F7B  3000               	movlw	0
  6551  0F7C  1803               	skipnc
  6552  0F7D  3001               	movlw	1
  6553  0F7E  07BA               	addwf	___flmul@prod+2,f
  6554  0F7F  3000               	movlw	0
  6555  0F80  1803               	skipnc
  6556  0F81  3001               	movlw	1
  6557  0F82  07BB               	addwf	___flmul@prod+3,f
  6558  0F83                     l2679:
  6559  0F83  1C3B               	btfss	___flmul@prod+3,0
  6560  0F84  2F86               	goto	u3961
  6561  0F85  2F87               	goto	u3960
  6562  0F86                     u3961:
  6563  0F86  2FA6               	goto	l2685
  6564  0F87                     u3960:
  6565  0F87                     l2681:
  6566  0F87  0838               	movf	___flmul@prod,w
  6567  0F88  00AC               	movwf	??___flmul
  6568  0F89  0839               	movf	___flmul@prod+1,w
  6569  0F8A  00AD               	movwf	??___flmul+1
  6570  0F8B  083A               	movf	___flmul@prod+2,w
  6571  0F8C  00AE               	movwf	??___flmul+2
  6572  0F8D  083B               	movf	___flmul@prod+3,w
  6573  0F8E  00AF               	movwf	??___flmul+3
  6574  0F8F  3001               	movlw	1
  6575  0F90  00B0               	movwf	??___flmul+4
  6576  0F91                     u3975:
  6577  0F91  0D2F               	rlf	??___flmul+3,w
  6578  0F92  0CAF               	rrf	??___flmul+3,f
  6579  0F93  0CAE               	rrf	??___flmul+2,f
  6580  0F94  0CAD               	rrf	??___flmul+1,f
  6581  0F95  0CAC               	rrf	??___flmul,f
  6582  0F96                     u3970:
  6583  0F96  0BB0               	decfsz	??___flmul+4,f
  6584  0F97  2F91               	goto	u3975
  6585  0F98  082F               	movf	??___flmul+3,w
  6586  0F99  00BB               	movwf	___flmul@prod+3
  6587  0F9A  082E               	movf	??___flmul+2,w
  6588  0F9B  00BA               	movwf	___flmul@prod+2
  6589  0F9C  082D               	movf	??___flmul+1,w
  6590  0F9D  00B9               	movwf	___flmul@prod+1
  6591  0F9E  082C               	movf	??___flmul,w
  6592  0F9F  00B8               	movwf	___flmul@prod
  6593  0FA0                     l2683:
  6594  0FA0  3001               	movlw	1
  6595  0FA1  07BC               	addwf	___flmul@temp,f
  6596  0FA2  1803               	skipnc
  6597  0FA3  0ABD               	incf	___flmul@temp+1,f
  6598  0FA4  3000               	movlw	0
  6599  0FA5  07BD               	addwf	___flmul@temp+1,f
  6600  0FA6                     l2685:
  6601  0FA6  083D               	movf	___flmul@temp+1,w
  6602  0FA7  3A80               	xorlw	128
  6603  0FA8  00FF               	movwf	btemp+1
  6604  0FA9  3080               	movlw	128
  6605  0FAA  027F               	subwf	btemp+1,w
  6606  0FAB  1D03               	skipz
  6607  0FAC  2FAF               	goto	u3985
  6608  0FAD  30FF               	movlw	255
  6609  0FAE  023C               	subwf	___flmul@temp,w
  6610  0FAF                     u3985:
  6611  0FAF  1C03               	skipc
  6612  0FB0  2FB2               	goto	u3981
  6613  0FB1  2FB3               	goto	u3980
  6614  0FB2                     u3981:
  6615  0FB2  2FBE               	goto	l2689
  6616  0FB3                     u3980:
  6617  0FB3                     l2687:
  6618  0FB3  307F               	movlw	127
  6619  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  6620  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  6621  0FB6  00BB               	movwf	___flmul@prod+3
  6622  0FB7  3080               	movlw	128
  6623  0FB8  00BA               	movwf	___flmul@prod+2
  6624  0FB9  3000               	movlw	0
  6625  0FBA  00B9               	movwf	___flmul@prod+1
  6626  0FBB  3000               	movlw	0
  6627  0FBC  00B8               	movwf	___flmul@prod
  6628  0FBD  2FF3               	goto	l803
  6629  0FBE                     l2689:
  6630  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  6631  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  6632  0FC0  083D               	movf	___flmul@temp+1,w
  6633  0FC1  3A80               	xorlw	128
  6634  0FC2  00FF               	movwf	btemp+1
  6635  0FC3  3080               	movlw	128
  6636  0FC4  027F               	subwf	btemp+1,w
  6637  0FC5  1D03               	skipz
  6638  0FC6  2FC9               	goto	u3995
  6639  0FC7  3001               	movlw	1
  6640  0FC8  023C               	subwf	___flmul@temp,w
  6641  0FC9                     u3995:
  6642  0FC9  1803               	skipnc
  6643  0FCA  2FCC               	goto	u3991
  6644  0FCB  2FCD               	goto	u3990
  6645  0FCC                     u3991:
  6646  0FCC  2FD9               	goto	l2695
  6647  0FCD                     u3990:
  6648  0FCD                     l2691:
  6649  0FCD  3000               	movlw	0
  6650  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  6651  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  6652  0FD0  00BB               	movwf	___flmul@prod+3
  6653  0FD1  3000               	movlw	0
  6654  0FD2  00BA               	movwf	___flmul@prod+2
  6655  0FD3  3000               	movlw	0
  6656  0FD4  00B9               	movwf	___flmul@prod+1
  6657  0FD5  3000               	movlw	0
  6658  0FD6  00B8               	movwf	___flmul@prod
  6659  0FD7                     l2693:
  6660  0FD7  01B1               	clrf	___flmul@sign
  6661  0FD8  2FF3               	goto	l803
  6662  0FD9                     l2695:
  6663  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  6664  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  6665  0FDB  083C               	movf	___flmul@temp,w
  6666  0FDC  00AC               	movwf	??___flmul
  6667  0FDD  082C               	movf	??___flmul,w
  6668  0FDE  00B7               	movwf	___flmul@bexp
  6669  0FDF  30FF               	movlw	255
  6670  0FE0  05B8               	andwf	___flmul@prod,f
  6671  0FE1  30FF               	movlw	255
  6672  0FE2  05B9               	andwf	___flmul@prod+1,f
  6673  0FE3  307F               	movlw	127
  6674  0FE4  05BA               	andwf	___flmul@prod+2,f
  6675  0FE5  3000               	movlw	0
  6676  0FE6  05BB               	andwf	___flmul@prod+3,f
  6677  0FE7                     l2697:
  6678  0FE7  1C37               	btfss	___flmul@bexp,0
  6679  0FE8  2FEA               	goto	u4001
  6680  0FE9  2FEB               	goto	u4000
  6681  0FEA                     u4001:
  6682  0FEA  2FEC               	goto	l2701
  6683  0FEB                     u4000:
  6684  0FEB                     l2699:
  6685  0FEB  17BA               	bsf	___flmul@prod+2,7
  6686  0FEC                     l2701:
  6687  0FEC  0837               	movf	___flmul@bexp,w
  6688  0FED  00AC               	movwf	??___flmul
  6689  0FEE  1003               	clrc
  6690  0FEF  0C2C               	rrf	??___flmul,w
  6691  0FF0  00AD               	movwf	??___flmul+1
  6692  0FF1  082D               	movf	??___flmul+1,w
  6693  0FF2  00BB               	movwf	___flmul@prod+3
  6694  0FF3                     l803:
  6695  0FF3  0831               	movf	___flmul@sign,w
  6696  0FF4  00AC               	movwf	??___flmul
  6697  0FF5  082C               	movf	??___flmul,w
  6698  0FF6  04BB               	iorwf	___flmul@prod+3,f
  6699  0FF7                     l2703:
  6700  0FF7  083B               	movf	___flmul@prod+3,w
  6701  0FF8  00A7               	movwf	?___flmul+3
  6702  0FF9  083A               	movf	___flmul@prod+2,w
  6703  0FFA  00A6               	movwf	?___flmul+2
  6704  0FFB  0839               	movf	___flmul@prod+1,w
  6705  0FFC  00A5               	movwf	?___flmul+1
  6706  0FFD  0838               	movf	___flmul@prod,w
  6707  0FFE  00A4               	movwf	?___flmul
  6708  0FFF                     l791:
  6709  0FFF  0008               	return
  6710  1000                     __end_of___flmul:
  6711                           
  6712                           	psect	text10
  6713  1D3B                     __ptext10:	
  6714 ;; *************** function __Umul8_16 *****************
  6715 ;; Defined at:
  6716 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6717 ;; Parameters:    Size  Location     Type
  6718 ;;  multiplier      1    wreg     unsigned char 
  6719 ;;  multiplicand    1    0[COMMON] unsigned char 
  6720 ;; Auto vars:     Size  Location     Type
  6721 ;;  multiplier      1    8[COMMON] unsigned char 
  6722 ;;  word_mpld       2    6[COMMON] unsigned int 
  6723 ;;  product         2    4[COMMON] unsigned int 
  6724 ;; Return value:  Size  Location     Type
  6725 ;;                  2    0[COMMON] unsigned int 
  6726 ;; Registers used:
  6727 ;;		wreg, status,2, status,0
  6728 ;; Tracked objects:
  6729 ;;		On entry : 0/0
  6730 ;;		On exit  : 0/0
  6731 ;;		Unchanged: 0/0
  6732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6733 ;;      Params:         2       0       0       0       0
  6734 ;;      Locals:         5       0       0       0       0
  6735 ;;      Temps:          2       0       0       0       0
  6736 ;;      Totals:         9       0       0       0       0
  6737 ;;Total ram usage:        9 bytes
  6738 ;; Hardware stack levels used:    1
  6739 ;; This function calls:
  6740 ;;		Nothing
  6741 ;; This function is called by:
  6742 ;;		___flmul
  6743 ;; This function uses a non-reentrant model
  6744 ;;
  6745                           
  6746                           
  6747                           ;psect for function __Umul8_16
  6748  1D3B                     __Umul8_16:
  6749                           
  6750                           ;incstack = 0
  6751                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6752                           ;__Umul8_16@multiplier stored from wreg
  6753  1D3B  00F8               	movwf	__Umul8_16@multiplier
  6754  1D3C                     l2227:
  6755  1D3C  01F4               	clrf	__Umul8_16@product
  6756  1D3D  01F5               	clrf	__Umul8_16@product+1
  6757  1D3E                     l2229:
  6758  1D3E  0870               	movf	__Umul8_16@multiplicand,w
  6759  1D3F  00F2               	movwf	??__Umul8_16
  6760  1D40  01F3               	clrf	??__Umul8_16+1
  6761  1D41  0872               	movf	??__Umul8_16,w
  6762  1D42  00F6               	movwf	__Umul8_16@word_mpld
  6763  1D43  0873               	movf	??__Umul8_16+1,w
  6764  1D44  00F7               	movwf	__Umul8_16@word_mpld+1
  6765  1D45                     l2231:
  6766  1D45  1C78               	btfss	__Umul8_16@multiplier,0
  6767  1D46  2D48               	goto	u2831
  6768  1D47  2D49               	goto	u2830
  6769  1D48                     u2831:
  6770  1D48  2D4F               	goto	l810
  6771  1D49                     u2830:
  6772  1D49                     l2233:
  6773  1D49  0876               	movf	__Umul8_16@word_mpld,w
  6774  1D4A  07F4               	addwf	__Umul8_16@product,f
  6775  1D4B  1803               	skipnc
  6776  1D4C  0AF5               	incf	__Umul8_16@product+1,f
  6777  1D4D  0877               	movf	__Umul8_16@word_mpld+1,w
  6778  1D4E  07F5               	addwf	__Umul8_16@product+1,f
  6779  1D4F                     l810:
  6780  1D4F  3001               	movlw	1
  6781  1D50                     u2845:
  6782  1D50  1003               	clrc
  6783  1D51  0DF6               	rlf	__Umul8_16@word_mpld,f
  6784  1D52  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6785  1D53  3EFF               	addlw	-1
  6786  1D54  1D03               	skipz
  6787  1D55  2D50               	goto	u2845
  6788  1D56  1003               	clrc
  6789  1D57  0CF8               	rrf	__Umul8_16@multiplier,f
  6790  1D58                     l2235:
  6791  1D58  0878               	movf	__Umul8_16@multiplier,w
  6792  1D59  1D03               	btfss	3,2
  6793  1D5A  2D5C               	goto	u2851
  6794  1D5B  2D5D               	goto	u2850
  6795  1D5C                     u2851:
  6796  1D5C  2D45               	goto	l2231
  6797  1D5D                     u2850:
  6798  1D5D                     l2237:
  6799  1D5D  0875               	movf	__Umul8_16@product+1,w
  6800  1D5E  00F1               	movwf	?__Umul8_16+1
  6801  1D5F  0874               	movf	__Umul8_16@product,w
  6802  1D60  00F0               	movwf	?__Umul8_16
  6803  1D61                     l812:
  6804  1D61  0008               	return
  6805  1D62                     __end_of__Umul8_16:
  6806                           
  6807                           	psect	text11
  6808  11F2                     __ptext11:	
  6809 ;; *************** function __tdiv_to_l_ *****************
  6810 ;; Defined at:
  6811 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  6812 ;; Parameters:    Size  Location     Type
  6813 ;;  f1              4    0[COMMON] float 
  6814 ;;  f2              4    4[COMMON] float 
  6815 ;; Auto vars:     Size  Location     Type
  6816 ;;  quot            4    0[BANK0 ] unsigned long 
  6817 ;;  exp1            1    5[BANK0 ] unsigned char 
  6818 ;;  cntr            1    4[BANK0 ] unsigned char 
  6819 ;; Return value:  Size  Location     Type
  6820 ;;                  4    0[COMMON] unsigned long 
  6821 ;; Registers used:
  6822 ;;		wreg, status,2, status,0
  6823 ;; Tracked objects:
  6824 ;;		On entry : 0/0
  6825 ;;		On exit  : 0/0
  6826 ;;		Unchanged: 0/0
  6827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6828 ;;      Params:         8       0       0       0       0
  6829 ;;      Locals:         0       6       0       0       0
  6830 ;;      Temps:          4       0       0       0       0
  6831 ;;      Totals:        12       6       0       0       0
  6832 ;;Total ram usage:       18 bytes
  6833 ;; Hardware stack levels used:    1
  6834 ;; This function calls:
  6835 ;;		Nothing
  6836 ;; This function is called by:
  6837 ;;		_sprintf
  6838 ;; This function uses a non-reentrant model
  6839 ;;
  6840                           
  6841                           
  6842                           ;psect for function __tdiv_to_l_
  6843  11F2                     __tdiv_to_l_:
  6844  11F2                     l2801:	
  6845                           ;incstack = 0
  6846                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6847                           
  6848  11F2  0870               	movf	__tdiv_to_l_@f1,w
  6849  11F3  00F8               	movwf	??__tdiv_to_l_
  6850  11F4  0871               	movf	__tdiv_to_l_@f1+1,w
  6851  11F5  00F9               	movwf	??__tdiv_to_l_+1
  6852  11F6  0872               	movf	__tdiv_to_l_@f1+2,w
  6853  11F7  00FA               	movwf	??__tdiv_to_l_+2
  6854  11F8  1003               	clrc
  6855  11F9  0D79               	rlf	??__tdiv_to_l_+1,w
  6856  11FA  0D7A               	rlf	??__tdiv_to_l_+2,w
  6857  11FB  00FB               	movwf	??__tdiv_to_l_+3
  6858  11FC  087B               	movf	??__tdiv_to_l_+3,w
  6859  11FD  1283               	bcf	3,5	;RP0=0, select bank0
  6860  11FE  1303               	bcf	3,6	;RP1=0, select bank0
  6861  11FF  00A5               	movwf	__tdiv_to_l_@exp1
  6862  1200  0825               	movf	__tdiv_to_l_@exp1,w
  6863  1201  1D03               	btfss	3,2
  6864  1202  2A04               	goto	u4291
  6865  1203  2A05               	goto	u4290
  6866  1204                     u4291:
  6867  1204  2A0E               	goto	l2807
  6868  1205                     u4290:
  6869  1205                     l2803:
  6870  1205  3000               	movlw	0
  6871  1206  00F3               	movwf	?__tdiv_to_l_+3
  6872  1207  3000               	movlw	0
  6873  1208  00F2               	movwf	?__tdiv_to_l_+2
  6874  1209  3000               	movlw	0
  6875  120A  00F1               	movwf	?__tdiv_to_l_+1
  6876  120B  3000               	movlw	0
  6877  120C  00F0               	movwf	?__tdiv_to_l_
  6878  120D  2AAE               	goto	l585
  6879  120E                     l2807:
  6880  120E  0874               	movf	__tdiv_to_l_@f2,w
  6881  120F  00F8               	movwf	??__tdiv_to_l_
  6882  1210  0875               	movf	__tdiv_to_l_@f2+1,w
  6883  1211  00F9               	movwf	??__tdiv_to_l_+1
  6884  1212  0876               	movf	__tdiv_to_l_@f2+2,w
  6885  1213  00FA               	movwf	??__tdiv_to_l_+2
  6886  1214  1003               	clrc
  6887  1215  0D79               	rlf	??__tdiv_to_l_+1,w
  6888  1216  0D7A               	rlf	??__tdiv_to_l_+2,w
  6889  1217  00FB               	movwf	??__tdiv_to_l_+3
  6890  1218  087B               	movf	??__tdiv_to_l_+3,w
  6891  1219  00A4               	movwf	__tdiv_to_l_@cntr
  6892  121A  0824               	movf	__tdiv_to_l_@cntr,w
  6893  121B  1D03               	btfss	3,2
  6894  121C  2A1E               	goto	u4301
  6895  121D  2A1F               	goto	u4300
  6896  121E                     u4301:
  6897  121E  2A20               	goto	l586
  6898  121F                     u4300:
  6899  121F  2A05               	goto	l2803
  6900  1220                     l586:
  6901  1220  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6902  1221                     l2813:
  6903  1221  30FF               	movlw	255
  6904  1222  05F0               	andwf	__tdiv_to_l_@f1,f
  6905  1223  30FF               	movlw	255
  6906  1224  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6907  1225  3000               	movlw	0
  6908  1226  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6909  1227                     l2815:
  6910  1227  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6911  1228  30FF               	movlw	255
  6912  1229  05F4               	andwf	__tdiv_to_l_@f2,f
  6913  122A  30FF               	movlw	255
  6914  122B  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6915  122C  3000               	movlw	0
  6916  122D  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6917  122E  3000               	movlw	0
  6918  122F  00A3               	movwf	__tdiv_to_l_@quot+3
  6919  1230  3000               	movlw	0
  6920  1231  00A2               	movwf	__tdiv_to_l_@quot+2
  6921  1232  3000               	movlw	0
  6922  1233  00A1               	movwf	__tdiv_to_l_@quot+1
  6923  1234  3000               	movlw	0
  6924  1235  00A0               	movwf	__tdiv_to_l_@quot
  6925  1236                     l2817:
  6926  1236  307F               	movlw	127
  6927  1237  02A5               	subwf	__tdiv_to_l_@exp1,f
  6928  1238                     l2819:
  6929  1238  3098               	movlw	152
  6930  1239  0724               	addwf	__tdiv_to_l_@cntr,w
  6931  123A  00F8               	movwf	??__tdiv_to_l_
  6932  123B  0878               	movf	??__tdiv_to_l_,w
  6933  123C  02A5               	subwf	__tdiv_to_l_@exp1,f
  6934  123D  3018               	movlw	24
  6935  123E  00F8               	movwf	??__tdiv_to_l_
  6936  123F  0878               	movf	??__tdiv_to_l_,w
  6937  1240  00A4               	movwf	__tdiv_to_l_@cntr
  6938  1241                     l2821:
  6939  1241  3001               	movlw	1
  6940  1242  00F8               	movwf	??__tdiv_to_l_
  6941  1243                     u4315:
  6942  1243  1003               	clrc
  6943  1244  0DA0               	rlf	__tdiv_to_l_@quot,f
  6944  1245  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6945  1246  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6946  1247  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6947  1248  0BF8               	decfsz	??__tdiv_to_l_,f
  6948  1249  2A43               	goto	u4315
  6949  124A                     l2823:
  6950  124A  0876               	movf	__tdiv_to_l_@f2+2,w
  6951  124B  0272               	subwf	__tdiv_to_l_@f1+2,w
  6952  124C  1D03               	skipz
  6953  124D  2A54               	goto	u4325
  6954  124E  0875               	movf	__tdiv_to_l_@f2+1,w
  6955  124F  0271               	subwf	__tdiv_to_l_@f1+1,w
  6956  1250  1D03               	skipz
  6957  1251  2A54               	goto	u4325
  6958  1252  0874               	movf	__tdiv_to_l_@f2,w
  6959  1253  0270               	subwf	__tdiv_to_l_@f1,w
  6960  1254                     u4325:
  6961  1254  1C03               	skipc
  6962  1255  2A57               	goto	u4321
  6963  1256  2A58               	goto	u4320
  6964  1257                     u4321:
  6965  1257  2A63               	goto	l2829
  6966  1258                     u4320:
  6967  1258                     l2825:
  6968  1258  0874               	movf	__tdiv_to_l_@f2,w
  6969  1259  02F0               	subwf	__tdiv_to_l_@f1,f
  6970  125A  0875               	movf	__tdiv_to_l_@f2+1,w
  6971  125B  1C03               	skipc
  6972  125C  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6973  125D  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6974  125E  0876               	movf	__tdiv_to_l_@f2+2,w
  6975  125F  1C03               	skipc
  6976  1260  0A76               	incf	__tdiv_to_l_@f2+2,w
  6977  1261  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6978  1262                     l2827:
  6979  1262  1420               	bsf	__tdiv_to_l_@quot,0
  6980  1263                     l2829:
  6981  1263  3001               	movlw	1
  6982  1264                     u4335:
  6983  1264  1003               	clrc
  6984  1265  0DF0               	rlf	__tdiv_to_l_@f1,f
  6985  1266  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6986  1267  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6987  1268  3EFF               	addlw	-1
  6988  1269  1D03               	skipz
  6989  126A  2A64               	goto	u4335
  6990  126B                     l2831:
  6991  126B  3001               	movlw	1
  6992  126C  02A4               	subwf	__tdiv_to_l_@cntr,f
  6993  126D  1D03               	btfss	3,2
  6994  126E  2A70               	goto	u4341
  6995  126F  2A71               	goto	u4340
  6996  1270                     u4341:
  6997  1270  2A41               	goto	l2821
  6998  1271                     u4340:
  6999  1271                     l589:
  7000  1271  1FA5               	btfss	__tdiv_to_l_@exp1,7
  7001  1272  2A74               	goto	u4351
  7002  1273  2A75               	goto	u4350
  7003  1274                     u4351:
  7004  1274  2A8F               	goto	l2841
  7005  1275                     u4350:
  7006  1275                     l2833:
  7007  1275  0825               	movf	__tdiv_to_l_@exp1,w
  7008  1276  3A80               	xorlw	128
  7009  1277  3E97               	addlw	151
  7010  1278  1803               	skipnc
  7011  1279  2A7B               	goto	u4361
  7012  127A  2A7C               	goto	u4360
  7013  127B                     u4361:
  7014  127B  2A7D               	goto	l2839
  7015  127C                     u4360:
  7016  127C  2A05               	goto	l2803
  7017  127D                     l2839:
  7018  127D  3001               	movlw	1
  7019  127E                     u4375:
  7020  127E  1003               	clrc
  7021  127F  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  7022  1280  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  7023  1281  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  7024  1282  0CA0               	rrf	__tdiv_to_l_@quot,f
  7025  1283  3EFF               	addlw	-1
  7026  1284  1D03               	skipz
  7027  1285  2A7E               	goto	u4375
  7028  1286  3001               	movlw	1
  7029  1287  00F8               	movwf	??__tdiv_to_l_
  7030  1288  0878               	movf	??__tdiv_to_l_,w
  7031  1289  07A5               	addwf	__tdiv_to_l_@exp1,f
  7032  128A  1D03               	btfss	3,2
  7033  128B  2A8D               	goto	u4381
  7034  128C  2A8E               	goto	u4380
  7035  128D                     u4381:
  7036  128D  2A7D               	goto	l2839
  7037  128E                     u4380:
  7038  128E  2AA6               	goto	l2849
  7039  128F                     l2841:
  7040  128F  3018               	movlw	24
  7041  1290  0225               	subwf	__tdiv_to_l_@exp1,w
  7042  1291  1C03               	skipc
  7043  1292  2A94               	goto	u4391
  7044  1293  2A95               	goto	u4390
  7045  1294                     u4391:
  7046  1294  2AA1               	goto	l596
  7047  1295                     u4390:
  7048  1295  2A05               	goto	l2803
  7049  1296                     l2847:
  7050  1296  3001               	movlw	1
  7051  1297  00F8               	movwf	??__tdiv_to_l_
  7052  1298                     u4405:
  7053  1298  1003               	clrc
  7054  1299  0DA0               	rlf	__tdiv_to_l_@quot,f
  7055  129A  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  7056  129B  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  7057  129C  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  7058  129D  0BF8               	decfsz	??__tdiv_to_l_,f
  7059  129E  2A98               	goto	u4405
  7060  129F  3001               	movlw	1
  7061  12A0  02A5               	subwf	__tdiv_to_l_@exp1,f
  7062  12A1                     l596:
  7063  12A1  0825               	movf	__tdiv_to_l_@exp1,w
  7064  12A2  1D03               	btfss	3,2
  7065  12A3  2AA5               	goto	u4411
  7066  12A4  2AA6               	goto	u4410
  7067  12A5                     u4411:
  7068  12A5  2A96               	goto	l2847
  7069  12A6                     u4410:
  7070  12A6                     l2849:
  7071  12A6  0823               	movf	__tdiv_to_l_@quot+3,w
  7072  12A7  00F3               	movwf	?__tdiv_to_l_+3
  7073  12A8  0822               	movf	__tdiv_to_l_@quot+2,w
  7074  12A9  00F2               	movwf	?__tdiv_to_l_+2
  7075  12AA  0821               	movf	__tdiv_to_l_@quot+1,w
  7076  12AB  00F1               	movwf	?__tdiv_to_l_+1
  7077  12AC  0820               	movf	__tdiv_to_l_@quot,w
  7078  12AD  00F0               	movwf	?__tdiv_to_l_
  7079  12AE                     l585:
  7080  12AE  0008               	return
  7081  12AF                     __end_of__tdiv_to_l_:
  7082                           
  7083                           	psect	text12
  7084  12AF                     __ptext12:	
  7085 ;; *************** function __div_to_l_ *****************
  7086 ;; Defined at:
  7087 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;  f1              4    0[COMMON] unsigned long 
  7090 ;;  f2              4    4[COMMON] unsigned long 
  7091 ;; Auto vars:     Size  Location     Type
  7092 ;;  quot            4    0[BANK0 ] unsigned long 
  7093 ;;  exp1            1    5[BANK0 ] unsigned char 
  7094 ;;  cntr            1    4[BANK0 ] unsigned char 
  7095 ;; Return value:  Size  Location     Type
  7096 ;;                  4    0[COMMON] unsigned long 
  7097 ;; Registers used:
  7098 ;;		wreg, status,2, status,0
  7099 ;; Tracked objects:
  7100 ;;		On entry : 0/0
  7101 ;;		On exit  : 0/0
  7102 ;;		Unchanged: 0/0
  7103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7104 ;;      Params:         8       0       0       0       0
  7105 ;;      Locals:         0       6       0       0       0
  7106 ;;      Temps:          1       0       0       0       0
  7107 ;;      Totals:         9       6       0       0       0
  7108 ;;Total ram usage:       15 bytes
  7109 ;; Hardware stack levels used:    1
  7110 ;; This function calls:
  7111 ;;		Nothing
  7112 ;; This function is called by:
  7113 ;;		_sprintf
  7114 ;; This function uses a non-reentrant model
  7115 ;;
  7116                           
  7117                           
  7118                           ;psect for function __div_to_l_
  7119  12AF                     __div_to_l_:
  7120  12AF                     l2853:	
  7121                           ;incstack = 0
  7122                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  7123                           
  7124  12AF  1003               	clrc
  7125  12B0  0D72               	rlf	__div_to_l_@f1+2,w
  7126  12B1  0D73               	rlf	__div_to_l_@f1+3,w
  7127  12B2  00F8               	movwf	??__div_to_l_
  7128  12B3  0878               	movf	??__div_to_l_,w
  7129  12B4  1283               	bcf	3,5	;RP0=0, select bank0
  7130  12B5  1303               	bcf	3,6	;RP1=0, select bank0
  7131  12B6  00A5               	movwf	__div_to_l_@exp1
  7132  12B7  0825               	movf	__div_to_l_@exp1,w
  7133  12B8  1D03               	btfss	3,2
  7134  12B9  2ABB               	goto	u4421
  7135  12BA  2ABC               	goto	u4420
  7136  12BB                     u4421:
  7137  12BB  2AC5               	goto	l2859
  7138  12BC                     u4420:
  7139  12BC                     l2855:
  7140  12BC  3000               	movlw	0
  7141  12BD  00F3               	movwf	?__div_to_l_+3
  7142  12BE  3000               	movlw	0
  7143  12BF  00F2               	movwf	?__div_to_l_+2
  7144  12C0  3000               	movlw	0
  7145  12C1  00F1               	movwf	?__div_to_l_+1
  7146  12C2  3000               	movlw	0
  7147  12C3  00F0               	movwf	?__div_to_l_
  7148  12C4  2B6C               	goto	l538
  7149  12C5                     l2859:
  7150  12C5  1003               	clrc
  7151  12C6  0D76               	rlf	__div_to_l_@f2+2,w
  7152  12C7  0D77               	rlf	__div_to_l_@f2+3,w
  7153  12C8  00F8               	movwf	??__div_to_l_
  7154  12C9  0878               	movf	??__div_to_l_,w
  7155  12CA  00A4               	movwf	__div_to_l_@cntr
  7156  12CB  0824               	movf	__div_to_l_@cntr,w
  7157  12CC  1D03               	btfss	3,2
  7158  12CD  2ACF               	goto	u4431
  7159  12CE  2AD0               	goto	u4430
  7160  12CF                     u4431:
  7161  12CF  2AD1               	goto	l539
  7162  12D0                     u4430:
  7163  12D0  2ABC               	goto	l2855
  7164  12D1                     l539:
  7165  12D1  17F2               	bsf	__div_to_l_@f1+2,7
  7166  12D2                     l2865:
  7167  12D2  30FF               	movlw	255
  7168  12D3  05F0               	andwf	__div_to_l_@f1,f
  7169  12D4  30FF               	movlw	255
  7170  12D5  05F1               	andwf	__div_to_l_@f1+1,f
  7171  12D6  30FF               	movlw	255
  7172  12D7  05F2               	andwf	__div_to_l_@f1+2,f
  7173  12D8  3000               	movlw	0
  7174  12D9  05F3               	andwf	__div_to_l_@f1+3,f
  7175  12DA                     l2867:
  7176  12DA  17F6               	bsf	__div_to_l_@f2+2,7
  7177  12DB  30FF               	movlw	255
  7178  12DC  05F4               	andwf	__div_to_l_@f2,f
  7179  12DD  30FF               	movlw	255
  7180  12DE  05F5               	andwf	__div_to_l_@f2+1,f
  7181  12DF  30FF               	movlw	255
  7182  12E0  05F6               	andwf	__div_to_l_@f2+2,f
  7183  12E1  3000               	movlw	0
  7184  12E2  05F7               	andwf	__div_to_l_@f2+3,f
  7185  12E3  3000               	movlw	0
  7186  12E4  00A3               	movwf	__div_to_l_@quot+3
  7187  12E5  3000               	movlw	0
  7188  12E6  00A2               	movwf	__div_to_l_@quot+2
  7189  12E7  3000               	movlw	0
  7190  12E8  00A1               	movwf	__div_to_l_@quot+1
  7191  12E9  3000               	movlw	0
  7192  12EA  00A0               	movwf	__div_to_l_@quot
  7193  12EB                     l2869:
  7194  12EB  307F               	movlw	127
  7195  12EC  02A5               	subwf	__div_to_l_@exp1,f
  7196  12ED                     l2871:
  7197  12ED  30A0               	movlw	160
  7198  12EE  0724               	addwf	__div_to_l_@cntr,w
  7199  12EF  00F8               	movwf	??__div_to_l_
  7200  12F0  0878               	movf	??__div_to_l_,w
  7201  12F1  02A5               	subwf	__div_to_l_@exp1,f
  7202  12F2  3020               	movlw	32
  7203  12F3  00F8               	movwf	??__div_to_l_
  7204  12F4  0878               	movf	??__div_to_l_,w
  7205  12F5  00A4               	movwf	__div_to_l_@cntr
  7206  12F6                     l2873:
  7207  12F6  3001               	movlw	1
  7208  12F7  00F8               	movwf	??__div_to_l_
  7209  12F8                     u4445:
  7210  12F8  1003               	clrc
  7211  12F9  0DA0               	rlf	__div_to_l_@quot,f
  7212  12FA  0DA1               	rlf	__div_to_l_@quot+1,f
  7213  12FB  0DA2               	rlf	__div_to_l_@quot+2,f
  7214  12FC  0DA3               	rlf	__div_to_l_@quot+3,f
  7215  12FD  0BF8               	decfsz	??__div_to_l_,f
  7216  12FE  2AF8               	goto	u4445
  7217  12FF                     l2875:
  7218  12FF  0877               	movf	__div_to_l_@f2+3,w
  7219  1300  0273               	subwf	__div_to_l_@f1+3,w
  7220  1301  1D03               	skipz
  7221  1302  2B0D               	goto	u4455
  7222  1303  0876               	movf	__div_to_l_@f2+2,w
  7223  1304  0272               	subwf	__div_to_l_@f1+2,w
  7224  1305  1D03               	skipz
  7225  1306  2B0D               	goto	u4455
  7226  1307  0875               	movf	__div_to_l_@f2+1,w
  7227  1308  0271               	subwf	__div_to_l_@f1+1,w
  7228  1309  1D03               	skipz
  7229  130A  2B0D               	goto	u4455
  7230  130B  0874               	movf	__div_to_l_@f2,w
  7231  130C  0270               	subwf	__div_to_l_@f1,w
  7232  130D                     u4455:
  7233  130D  1C03               	skipc
  7234  130E  2B10               	goto	u4451
  7235  130F  2B11               	goto	u4450
  7236  1310                     u4451:
  7237  1310  2B20               	goto	l2881
  7238  1311                     u4450:
  7239  1311                     l2877:
  7240  1311  0874               	movf	__div_to_l_@f2,w
  7241  1312  02F0               	subwf	__div_to_l_@f1,f
  7242  1313  0875               	movf	__div_to_l_@f2+1,w
  7243  1314  1C03               	skipc
  7244  1315  0F75               	incfsz	__div_to_l_@f2+1,w
  7245  1316  02F1               	subwf	__div_to_l_@f1+1,f
  7246  1317  0876               	movf	__div_to_l_@f2+2,w
  7247  1318  1C03               	skipc
  7248  1319  0F76               	incfsz	__div_to_l_@f2+2,w
  7249  131A  02F2               	subwf	__div_to_l_@f1+2,f
  7250  131B  0877               	movf	__div_to_l_@f2+3,w
  7251  131C  1C03               	skipc
  7252  131D  0F77               	incfsz	__div_to_l_@f2+3,w
  7253  131E  02F3               	subwf	__div_to_l_@f1+3,f
  7254  131F                     l2879:
  7255  131F  1420               	bsf	__div_to_l_@quot,0
  7256  1320                     l2881:
  7257  1320  3001               	movlw	1
  7258  1321  00F8               	movwf	??__div_to_l_
  7259  1322                     u4465:
  7260  1322  1003               	clrc
  7261  1323  0DF0               	rlf	__div_to_l_@f1,f
  7262  1324  0DF1               	rlf	__div_to_l_@f1+1,f
  7263  1325  0DF2               	rlf	__div_to_l_@f1+2,f
  7264  1326  0DF3               	rlf	__div_to_l_@f1+3,f
  7265  1327  0BF8               	decfsz	??__div_to_l_,f
  7266  1328  2B22               	goto	u4465
  7267  1329                     l2883:
  7268  1329  3001               	movlw	1
  7269  132A  02A4               	subwf	__div_to_l_@cntr,f
  7270  132B  1D03               	btfss	3,2
  7271  132C  2B2E               	goto	u4471
  7272  132D  2B2F               	goto	u4470
  7273  132E                     u4471:
  7274  132E  2AF6               	goto	l2873
  7275  132F                     u4470:
  7276  132F                     l542:
  7277  132F  1FA5               	btfss	__div_to_l_@exp1,7
  7278  1330  2B32               	goto	u4481
  7279  1331  2B33               	goto	u4480
  7280  1332                     u4481:
  7281  1332  2B4D               	goto	l2893
  7282  1333                     u4480:
  7283  1333                     l2885:
  7284  1333  0825               	movf	__div_to_l_@exp1,w
  7285  1334  3A80               	xorlw	128
  7286  1335  3E9F               	addlw	159
  7287  1336  1803               	skipnc
  7288  1337  2B39               	goto	u4491
  7289  1338  2B3A               	goto	u4490
  7290  1339                     u4491:
  7291  1339  2B3B               	goto	l2891
  7292  133A                     u4490:
  7293  133A  2ABC               	goto	l2855
  7294  133B                     l2891:
  7295  133B  3001               	movlw	1
  7296  133C                     u4505:
  7297  133C  1003               	clrc
  7298  133D  0CA3               	rrf	__div_to_l_@quot+3,f
  7299  133E  0CA2               	rrf	__div_to_l_@quot+2,f
  7300  133F  0CA1               	rrf	__div_to_l_@quot+1,f
  7301  1340  0CA0               	rrf	__div_to_l_@quot,f
  7302  1341  3EFF               	addlw	-1
  7303  1342  1D03               	skipz
  7304  1343  2B3C               	goto	u4505
  7305  1344  3001               	movlw	1
  7306  1345  00F8               	movwf	??__div_to_l_
  7307  1346  0878               	movf	??__div_to_l_,w
  7308  1347  07A5               	addwf	__div_to_l_@exp1,f
  7309  1348  1D03               	btfss	3,2
  7310  1349  2B4B               	goto	u4511
  7311  134A  2B4C               	goto	u4510
  7312  134B                     u4511:
  7313  134B  2B3B               	goto	l2891
  7314  134C                     u4510:
  7315  134C  2B64               	goto	l2901
  7316  134D                     l2893:
  7317  134D  3020               	movlw	32
  7318  134E  0225               	subwf	__div_to_l_@exp1,w
  7319  134F  1C03               	skipc
  7320  1350  2B52               	goto	u4521
  7321  1351  2B53               	goto	u4520
  7322  1352                     u4521:
  7323  1352  2B5F               	goto	l549
  7324  1353                     u4520:
  7325  1353  2ABC               	goto	l2855
  7326  1354                     l2899:
  7327  1354  3001               	movlw	1
  7328  1355  00F8               	movwf	??__div_to_l_
  7329  1356                     u4535:
  7330  1356  1003               	clrc
  7331  1357  0DA0               	rlf	__div_to_l_@quot,f
  7332  1358  0DA1               	rlf	__div_to_l_@quot+1,f
  7333  1359  0DA2               	rlf	__div_to_l_@quot+2,f
  7334  135A  0DA3               	rlf	__div_to_l_@quot+3,f
  7335  135B  0BF8               	decfsz	??__div_to_l_,f
  7336  135C  2B56               	goto	u4535
  7337  135D  3001               	movlw	1
  7338  135E  02A5               	subwf	__div_to_l_@exp1,f
  7339  135F                     l549:
  7340  135F  0825               	movf	__div_to_l_@exp1,w
  7341  1360  1D03               	btfss	3,2
  7342  1361  2B63               	goto	u4541
  7343  1362  2B64               	goto	u4540
  7344  1363                     u4541:
  7345  1363  2B54               	goto	l2899
  7346  1364                     u4540:
  7347  1364                     l2901:
  7348  1364  0823               	movf	__div_to_l_@quot+3,w
  7349  1365  00F3               	movwf	?__div_to_l_+3
  7350  1366  0822               	movf	__div_to_l_@quot+2,w
  7351  1367  00F2               	movwf	?__div_to_l_+2
  7352  1368  0821               	movf	__div_to_l_@quot+1,w
  7353  1369  00F1               	movwf	?__div_to_l_+1
  7354  136A  0820               	movf	__div_to_l_@quot,w
  7355  136B  00F0               	movwf	?__div_to_l_
  7356  136C                     l538:
  7357  136C  0008               	return
  7358  136D                     __end_of__div_to_l_:
  7359                           
  7360                           	psect	text13
  7361  1138                     __ptext13:	
  7362 ;; *************** function ___xxtofl *****************
  7363 ;; Defined at:
  7364 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  7365 ;; Parameters:    Size  Location     Type
  7366 ;;  sign            1    wreg     unsigned char 
  7367 ;;  val             4    0[COMMON] long 
  7368 ;; Auto vars:     Size  Location     Type
  7369 ;;  sign            1    8[COMMON] unsigned char 
  7370 ;;  arg             4   10[COMMON] unsigned long 
  7371 ;;  exp             1    9[COMMON] unsigned char 
  7372 ;; Return value:  Size  Location     Type
  7373 ;;                  4    0[COMMON] unsigned char 
  7374 ;; Registers used:
  7375 ;;		wreg, status,2, status,0
  7376 ;; Tracked objects:
  7377 ;;		On entry : 0/0
  7378 ;;		On exit  : 0/0
  7379 ;;		Unchanged: 0/0
  7380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7381 ;;      Params:         4       0       0       0       0
  7382 ;;      Locals:         6       0       0       0       0
  7383 ;;      Temps:          4       0       0       0       0
  7384 ;;      Totals:        14       0       0       0       0
  7385 ;;Total ram usage:       14 bytes
  7386 ;; Hardware stack levels used:    1
  7387 ;; This function calls:
  7388 ;;		Nothing
  7389 ;; This function is called by:
  7390 ;;		_main
  7391 ;;		_sprintf
  7392 ;; This function uses a non-reentrant model
  7393 ;;
  7394                           
  7395                           
  7396                           ;psect for function ___xxtofl
  7397  1138                     ___xxtofl:
  7398                           
  7399                           ;incstack = 0
  7400                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  7401                           ;___xxtofl@sign stored from wreg
  7402  1138  00F8               	movwf	___xxtofl@sign
  7403  1139                     l3045:
  7404  1139  0878               	movf	___xxtofl@sign,w
  7405  113A  1903               	btfsc	3,2
  7406  113B  293D               	goto	u4931
  7407  113C  293E               	goto	u4930
  7408  113D                     u4931:
  7409  113D  2952               	goto	l3051
  7410  113E                     u4930:
  7411  113E                     l3047:
  7412  113E  1FF3               	btfss	___xxtofl@val+3,7
  7413  113F  2941               	goto	u4941
  7414  1140  2942               	goto	u4940
  7415  1141                     u4941:
  7416  1141  2952               	goto	l3051
  7417  1142                     u4940:
  7418  1142                     l3049:
  7419  1142  0970               	comf	___xxtofl@val,w
  7420  1143  00FA               	movwf	___xxtofl@arg
  7421  1144  0971               	comf	___xxtofl@val+1,w
  7422  1145  00FB               	movwf	___xxtofl@arg+1
  7423  1146  0972               	comf	___xxtofl@val+2,w
  7424  1147  00FC               	movwf	___xxtofl@arg+2
  7425  1148  0973               	comf	___xxtofl@val+3,w
  7426  1149  00FD               	movwf	___xxtofl@arg+3
  7427  114A  0AFA               	incf	___xxtofl@arg,f
  7428  114B  1903               	skipnz
  7429  114C  0AFB               	incf	___xxtofl@arg+1,f
  7430  114D  1903               	skipnz
  7431  114E  0AFC               	incf	___xxtofl@arg+2,f
  7432  114F  1903               	skipnz
  7433  1150  0AFD               	incf	___xxtofl@arg+3,f
  7434  1151  295A               	goto	l835
  7435  1152                     l3051:
  7436  1152  0873               	movf	___xxtofl@val+3,w
  7437  1153  00FD               	movwf	___xxtofl@arg+3
  7438  1154  0872               	movf	___xxtofl@val+2,w
  7439  1155  00FC               	movwf	___xxtofl@arg+2
  7440  1156  0871               	movf	___xxtofl@val+1,w
  7441  1157  00FB               	movwf	___xxtofl@arg+1
  7442  1158  0870               	movf	___xxtofl@val,w
  7443  1159  00FA               	movwf	___xxtofl@arg
  7444  115A                     l835:
  7445  115A  0873               	movf	___xxtofl@val+3,w
  7446  115B  0472               	iorwf	___xxtofl@val+2,w
  7447  115C  0471               	iorwf	___xxtofl@val+1,w
  7448  115D  0470               	iorwf	___xxtofl@val,w
  7449  115E  1D03               	skipz
  7450  115F  2961               	goto	u4951
  7451  1160  2962               	goto	u4950
  7452  1161                     u4951:
  7453  1161  296B               	goto	l3057
  7454  1162                     u4950:
  7455  1162                     l3053:
  7456  1162  3000               	movlw	0
  7457  1163  00F3               	movwf	?___xxtofl+3
  7458  1164  3000               	movlw	0
  7459  1165  00F2               	movwf	?___xxtofl+2
  7460  1166  3000               	movlw	0
  7461  1167  00F1               	movwf	?___xxtofl+1
  7462  1168  3000               	movlw	0
  7463  1169  00F0               	movwf	?___xxtofl
  7464  116A  29F1               	goto	l837
  7465  116B                     l3057:
  7466  116B  3096               	movlw	150
  7467  116C  00F4               	movwf	??___xxtofl
  7468  116D  0874               	movf	??___xxtofl,w
  7469  116E  00F9               	movwf	___xxtofl@exp
  7470  116F  297D               	goto	l3061
  7471  1170                     l3059:
  7472  1170  3001               	movlw	1
  7473  1171  00F4               	movwf	??___xxtofl
  7474  1172  0874               	movf	??___xxtofl,w
  7475  1173  07F9               	addwf	___xxtofl@exp,f
  7476  1174  3001               	movlw	1
  7477  1175                     u4965:
  7478  1175  1003               	clrc
  7479  1176  0CFD               	rrf	___xxtofl@arg+3,f
  7480  1177  0CFC               	rrf	___xxtofl@arg+2,f
  7481  1178  0CFB               	rrf	___xxtofl@arg+1,f
  7482  1179  0CFA               	rrf	___xxtofl@arg,f
  7483  117A  3EFF               	addlw	-1
  7484  117B  1D03               	skipz
  7485  117C  2975               	goto	u4965
  7486  117D                     l3061:
  7487  117D  30FE               	movlw	254
  7488  117E  057D               	andwf	___xxtofl@arg+3,w
  7489  117F  1D03               	btfss	3,2
  7490  1180  2982               	goto	u4971
  7491  1181  2983               	goto	u4970
  7492  1182                     u4971:
  7493  1182  2970               	goto	l3059
  7494  1183                     u4970:
  7495  1183  299F               	goto	l841
  7496  1184                     l3063:
  7497  1184  3001               	movlw	1
  7498  1185  00F4               	movwf	??___xxtofl
  7499  1186  0874               	movf	??___xxtofl,w
  7500  1187  07F9               	addwf	___xxtofl@exp,f
  7501  1188                     l3065:
  7502  1188  3001               	movlw	1
  7503  1189  07FA               	addwf	___xxtofl@arg,f
  7504  118A  3000               	movlw	0
  7505  118B  1803               	skipnc
  7506  118C  3001               	movlw	1
  7507  118D  07FB               	addwf	___xxtofl@arg+1,f
  7508  118E  3000               	movlw	0
  7509  118F  1803               	skipnc
  7510  1190  3001               	movlw	1
  7511  1191  07FC               	addwf	___xxtofl@arg+2,f
  7512  1192  3000               	movlw	0
  7513  1193  1803               	skipnc
  7514  1194  3001               	movlw	1
  7515  1195  07FD               	addwf	___xxtofl@arg+3,f
  7516  1196                     l3067:
  7517  1196  3001               	movlw	1
  7518  1197                     u4985:
  7519  1197  1003               	clrc
  7520  1198  0CFD               	rrf	___xxtofl@arg+3,f
  7521  1199  0CFC               	rrf	___xxtofl@arg+2,f
  7522  119A  0CFB               	rrf	___xxtofl@arg+1,f
  7523  119B  0CFA               	rrf	___xxtofl@arg,f
  7524  119C  3EFF               	addlw	-1
  7525  119D  1D03               	skipz
  7526  119E  2997               	goto	u4985
  7527  119F                     l841:
  7528  119F  30FF               	movlw	255
  7529  11A0  057D               	andwf	___xxtofl@arg+3,w
  7530  11A1  1D03               	btfss	3,2
  7531  11A2  29A4               	goto	u4991
  7532  11A3  29A5               	goto	u4990
  7533  11A4                     u4991:
  7534  11A4  2984               	goto	l3063
  7535  11A5                     u4990:
  7536  11A5  29B1               	goto	l3071
  7537  11A6                     l3069:
  7538  11A6  3001               	movlw	1
  7539  11A7  02F9               	subwf	___xxtofl@exp,f
  7540  11A8  3001               	movlw	1
  7541  11A9  00F4               	movwf	??___xxtofl
  7542  11AA                     u5005:
  7543  11AA  1003               	clrc
  7544  11AB  0DFA               	rlf	___xxtofl@arg,f
  7545  11AC  0DFB               	rlf	___xxtofl@arg+1,f
  7546  11AD  0DFC               	rlf	___xxtofl@arg+2,f
  7547  11AE  0DFD               	rlf	___xxtofl@arg+3,f
  7548  11AF  0BF4               	decfsz	??___xxtofl,f
  7549  11B0  29AA               	goto	u5005
  7550  11B1                     l3071:
  7551  11B1  1BFC               	btfsc	___xxtofl@arg+2,7
  7552  11B2  29B4               	goto	u5011
  7553  11B3  29B5               	goto	u5010
  7554  11B4                     u5011:
  7555  11B4  29BB               	goto	l848
  7556  11B5                     u5010:
  7557  11B5                     l3073:
  7558  11B5  3002               	movlw	2
  7559  11B6  0279               	subwf	___xxtofl@exp,w
  7560  11B7  1803               	skipnc
  7561  11B8  29BA               	goto	u5021
  7562  11B9  29BB               	goto	u5020
  7563  11BA                     u5021:
  7564  11BA  29A6               	goto	l3069
  7565  11BB                     u5020:
  7566  11BB                     l848:
  7567  11BB  1879               	btfsc	___xxtofl@exp,0
  7568  11BC  29BE               	goto	u5031
  7569  11BD  29BF               	goto	u5030
  7570  11BE                     u5031:
  7571  11BE  29C7               	goto	l849
  7572  11BF                     u5030:
  7573  11BF                     l3075:
  7574  11BF  30FF               	movlw	255
  7575  11C0  05FA               	andwf	___xxtofl@arg,f
  7576  11C1  30FF               	movlw	255
  7577  11C2  05FB               	andwf	___xxtofl@arg+1,f
  7578  11C3  307F               	movlw	127
  7579  11C4  05FC               	andwf	___xxtofl@arg+2,f
  7580  11C5  30FF               	movlw	255
  7581  11C6  05FD               	andwf	___xxtofl@arg+3,f
  7582  11C7                     l849:
  7583  11C7  1003               	clrc
  7584  11C8  0CF9               	rrf	___xxtofl@exp,f
  7585  11C9                     l3077:
  7586  11C9  0879               	movf	___xxtofl@exp,w
  7587  11CA  00F4               	movwf	??___xxtofl
  7588  11CB  01F5               	clrf	??___xxtofl+1
  7589  11CC  01F6               	clrf	??___xxtofl+2
  7590  11CD  01F7               	clrf	??___xxtofl+3
  7591  11CE  3018               	movlw	24
  7592  11CF                     u5045:
  7593  11CF  1003               	clrc
  7594  11D0  0DF4               	rlf	??___xxtofl,f
  7595  11D1  0DF5               	rlf	??___xxtofl+1,f
  7596  11D2  0DF6               	rlf	??___xxtofl+2,f
  7597  11D3  0DF7               	rlf	??___xxtofl+3,f
  7598  11D4                     u5040:
  7599  11D4  3EFF               	addlw	-1
  7600  11D5  1D03               	skipz
  7601  11D6  29CF               	goto	u5045
  7602  11D7  0874               	movf	??___xxtofl,w
  7603  11D8  04FA               	iorwf	___xxtofl@arg,f
  7604  11D9  0875               	movf	??___xxtofl+1,w
  7605  11DA  04FB               	iorwf	___xxtofl@arg+1,f
  7606  11DB  0876               	movf	??___xxtofl+2,w
  7607  11DC  04FC               	iorwf	___xxtofl@arg+2,f
  7608  11DD  0877               	movf	??___xxtofl+3,w
  7609  11DE  04FD               	iorwf	___xxtofl@arg+3,f
  7610  11DF                     l3079:
  7611  11DF  0878               	movf	___xxtofl@sign,w
  7612  11E0  1903               	btfsc	3,2
  7613  11E1  29E3               	goto	u5051
  7614  11E2  29E4               	goto	u5050
  7615  11E3                     u5051:
  7616  11E3  29E9               	goto	l3085
  7617  11E4                     u5050:
  7618  11E4                     l3081:
  7619  11E4  1FF3               	btfss	___xxtofl@val+3,7
  7620  11E5  29E7               	goto	u5061
  7621  11E6  29E8               	goto	u5060
  7622  11E7                     u5061:
  7623  11E7  29E9               	goto	l3085
  7624  11E8                     u5060:
  7625  11E8                     l3083:
  7626  11E8  17FD               	bsf	___xxtofl@arg+3,7
  7627  11E9                     l3085:
  7628  11E9  087D               	movf	___xxtofl@arg+3,w
  7629  11EA  00F3               	movwf	?___xxtofl+3
  7630  11EB  087C               	movf	___xxtofl@arg+2,w
  7631  11EC  00F2               	movwf	?___xxtofl+2
  7632  11ED  087B               	movf	___xxtofl@arg+1,w
  7633  11EE  00F1               	movwf	?___xxtofl+1
  7634  11EF  087A               	movf	___xxtofl@arg,w
  7635  11F0  00F0               	movwf	?___xxtofl
  7636  11F1                     l837:
  7637  11F1  0008               	return
  7638  11F2                     __end_of___xxtofl:
  7639                           
  7640                           	psect	text14
  7641  1D16                     __ptext14:	
  7642 ;; *************** function ___wmul *****************
  7643 ;; Defined at:
  7644 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  7645 ;; Parameters:    Size  Location     Type
  7646 ;;  multiplier      2    0[COMMON] unsigned int 
  7647 ;;  multiplicand    2    2[COMMON] unsigned int 
  7648 ;; Auto vars:     Size  Location     Type
  7649 ;;  product         2    4[COMMON] unsigned int 
  7650 ;; Return value:  Size  Location     Type
  7651 ;;                  2    0[COMMON] unsigned int 
  7652 ;; Registers used:
  7653 ;;		wreg, status,2, status,0
  7654 ;; Tracked objects:
  7655 ;;		On entry : 0/0
  7656 ;;		On exit  : 0/0
  7657 ;;		Unchanged: 0/0
  7658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7659 ;;      Params:         4       0       0       0       0
  7660 ;;      Locals:         2       0       0       0       0
  7661 ;;      Temps:          0       0       0       0       0
  7662 ;;      Totals:         6       0       0       0       0
  7663 ;;Total ram usage:        6 bytes
  7664 ;; Hardware stack levels used:    1
  7665 ;; This function calls:
  7666 ;;		Nothing
  7667 ;; This function is called by:
  7668 ;;		_sprintf
  7669 ;; This function uses a non-reentrant model
  7670 ;;
  7671                           
  7672                           
  7673                           ;psect for function ___wmul
  7674  1D16                     ___wmul:
  7675  1D16                     l2905:	
  7676                           ;incstack = 0
  7677                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  7678                           
  7679  1D16  01F4               	clrf	___wmul@product
  7680  1D17  01F5               	clrf	___wmul@product+1
  7681  1D18                     l2907:
  7682  1D18  1C70               	btfss	___wmul@multiplier,0
  7683  1D19  2D1B               	goto	u4551
  7684  1D1A  2D1C               	goto	u4550
  7685  1D1B                     u4551:
  7686  1D1B  2D22               	goto	l368
  7687  1D1C                     u4550:
  7688  1D1C                     l2909:
  7689  1D1C  0872               	movf	___wmul@multiplicand,w
  7690  1D1D  07F4               	addwf	___wmul@product,f
  7691  1D1E  1803               	skipnc
  7692  1D1F  0AF5               	incf	___wmul@product+1,f
  7693  1D20  0873               	movf	___wmul@multiplicand+1,w
  7694  1D21  07F5               	addwf	___wmul@product+1,f
  7695  1D22                     l368:
  7696  1D22  3001               	movlw	1
  7697  1D23                     u4565:
  7698  1D23  1003               	clrc
  7699  1D24  0DF2               	rlf	___wmul@multiplicand,f
  7700  1D25  0DF3               	rlf	___wmul@multiplicand+1,f
  7701  1D26  3EFF               	addlw	-1
  7702  1D27  1D03               	skipz
  7703  1D28  2D23               	goto	u4565
  7704  1D29                     l2911:
  7705  1D29  3001               	movlw	1
  7706  1D2A                     u4575:
  7707  1D2A  1003               	clrc
  7708  1D2B  0CF1               	rrf	___wmul@multiplier+1,f
  7709  1D2C  0CF0               	rrf	___wmul@multiplier,f
  7710  1D2D  3EFF               	addlw	-1
  7711  1D2E  1D03               	skipz
  7712  1D2F  2D2A               	goto	u4575
  7713  1D30                     l2913:
  7714  1D30  0870               	movf	___wmul@multiplier,w
  7715  1D31  0471               	iorwf	___wmul@multiplier+1,w
  7716  1D32  1D03               	btfss	3,2
  7717  1D33  2D35               	goto	u4581
  7718  1D34  2D36               	goto	u4580
  7719  1D35                     u4581:
  7720  1D35  2D18               	goto	l2907
  7721  1D36                     u4580:
  7722  1D36                     l2915:
  7723  1D36  0875               	movf	___wmul@product+1,w
  7724  1D37  00F1               	movwf	?___wmul+1
  7725  1D38  0874               	movf	___wmul@product,w
  7726  1D39  00F0               	movwf	?___wmul
  7727  1D3A                     l370:
  7728  1D3A  0008               	return
  7729  1D3B                     __end_of___wmul:
  7730                           
  7731                           	psect	text15
  7732  1EB1                     __ptext15:	
  7733 ;; *************** function ___llmod *****************
  7734 ;; Defined at:
  7735 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  7736 ;; Parameters:    Size  Location     Type
  7737 ;;  divisor         4    0[COMMON] unsigned long 
  7738 ;;  dividend        4    4[COMMON] unsigned long 
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;  counter         1    9[COMMON] unsigned char 
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  4    0[COMMON] unsigned long 
  7743 ;; Registers used:
  7744 ;;		wreg, status,2, status,0
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7750 ;;      Params:         8       0       0       0       0
  7751 ;;      Locals:         1       0       0       0       0
  7752 ;;      Temps:          1       0       0       0       0
  7753 ;;      Totals:        10       0       0       0       0
  7754 ;;Total ram usage:       10 bytes
  7755 ;; Hardware stack levels used:    1
  7756 ;; This function calls:
  7757 ;;		Nothing
  7758 ;; This function is called by:
  7759 ;;		_sprintf
  7760 ;; This function uses a non-reentrant model
  7761 ;;
  7762                           
  7763                           
  7764                           ;psect for function ___llmod
  7765  1EB1                     ___llmod:
  7766  1EB1                     l3019:	
  7767                           ;incstack = 0
  7768                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7769                           
  7770  1EB1  0873               	movf	___llmod@divisor+3,w
  7771  1EB2  0472               	iorwf	___llmod@divisor+2,w
  7772  1EB3  0471               	iorwf	___llmod@divisor+1,w
  7773  1EB4  0470               	iorwf	___llmod@divisor,w
  7774  1EB5  1903               	skipnz
  7775  1EB6  2EB8               	goto	u4871
  7776  1EB7  2EB9               	goto	u4870
  7777  1EB8                     u4871:
  7778  1EB8  2EFC               	goto	l3035
  7779  1EB9                     u4870:
  7780  1EB9                     l3021:
  7781  1EB9  01F9               	clrf	___llmod@counter
  7782  1EBA  0AF9               	incf	___llmod@counter,f
  7783  1EBB  2EC9               	goto	l3025
  7784  1EBC                     l3023:
  7785  1EBC  3001               	movlw	1
  7786  1EBD  00F8               	movwf	??___llmod
  7787  1EBE                     u4885:
  7788  1EBE  1003               	clrc
  7789  1EBF  0DF0               	rlf	___llmod@divisor,f
  7790  1EC0  0DF1               	rlf	___llmod@divisor+1,f
  7791  1EC1  0DF2               	rlf	___llmod@divisor+2,f
  7792  1EC2  0DF3               	rlf	___llmod@divisor+3,f
  7793  1EC3  0BF8               	decfsz	??___llmod,f
  7794  1EC4  2EBE               	goto	u4885
  7795  1EC5  3001               	movlw	1
  7796  1EC6  00F8               	movwf	??___llmod
  7797  1EC7  0878               	movf	??___llmod,w
  7798  1EC8  07F9               	addwf	___llmod@counter,f
  7799  1EC9                     l3025:
  7800  1EC9  1FF3               	btfss	___llmod@divisor+3,7
  7801  1ECA  2ECC               	goto	u4891
  7802  1ECB  2ECD               	goto	u4890
  7803  1ECC                     u4891:
  7804  1ECC  2EBC               	goto	l3023
  7805  1ECD                     u4890:
  7806  1ECD                     l3027:
  7807  1ECD  0873               	movf	___llmod@divisor+3,w
  7808  1ECE  0277               	subwf	___llmod@dividend+3,w
  7809  1ECF  1D03               	skipz
  7810  1ED0  2EDB               	goto	u4905
  7811  1ED1  0872               	movf	___llmod@divisor+2,w
  7812  1ED2  0276               	subwf	___llmod@dividend+2,w
  7813  1ED3  1D03               	skipz
  7814  1ED4  2EDB               	goto	u4905
  7815  1ED5  0871               	movf	___llmod@divisor+1,w
  7816  1ED6  0275               	subwf	___llmod@dividend+1,w
  7817  1ED7  1D03               	skipz
  7818  1ED8  2EDB               	goto	u4905
  7819  1ED9  0870               	movf	___llmod@divisor,w
  7820  1EDA  0274               	subwf	___llmod@dividend,w
  7821  1EDB                     u4905:
  7822  1EDB  1C03               	skipc
  7823  1EDC  2EDE               	goto	u4901
  7824  1EDD  2EDF               	goto	u4900
  7825  1EDE                     u4901:
  7826  1EDE  2EED               	goto	l3031
  7827  1EDF                     u4900:
  7828  1EDF                     l3029:
  7829  1EDF  0870               	movf	___llmod@divisor,w
  7830  1EE0  02F4               	subwf	___llmod@dividend,f
  7831  1EE1  0871               	movf	___llmod@divisor+1,w
  7832  1EE2  1C03               	skipc
  7833  1EE3  0F71               	incfsz	___llmod@divisor+1,w
  7834  1EE4  02F5               	subwf	___llmod@dividend+1,f
  7835  1EE5  0872               	movf	___llmod@divisor+2,w
  7836  1EE6  1C03               	skipc
  7837  1EE7  0F72               	incfsz	___llmod@divisor+2,w
  7838  1EE8  02F6               	subwf	___llmod@dividend+2,f
  7839  1EE9  0873               	movf	___llmod@divisor+3,w
  7840  1EEA  1C03               	skipc
  7841  1EEB  0F73               	incfsz	___llmod@divisor+3,w
  7842  1EEC  02F7               	subwf	___llmod@dividend+3,f
  7843  1EED                     l3031:
  7844  1EED  3001               	movlw	1
  7845  1EEE                     u4915:
  7846  1EEE  1003               	clrc
  7847  1EEF  0CF3               	rrf	___llmod@divisor+3,f
  7848  1EF0  0CF2               	rrf	___llmod@divisor+2,f
  7849  1EF1  0CF1               	rrf	___llmod@divisor+1,f
  7850  1EF2  0CF0               	rrf	___llmod@divisor,f
  7851  1EF3  3EFF               	addlw	-1
  7852  1EF4  1D03               	skipz
  7853  1EF5  2EEE               	goto	u4915
  7854  1EF6                     l3033:
  7855  1EF6  3001               	movlw	1
  7856  1EF7  02F9               	subwf	___llmod@counter,f
  7857  1EF8  1D03               	btfss	3,2
  7858  1EF9  2EFB               	goto	u4921
  7859  1EFA  2EFC               	goto	u4920
  7860  1EFB                     u4921:
  7861  1EFB  2ECD               	goto	l3027
  7862  1EFC                     u4920:
  7863  1EFC                     l3035:
  7864  1EFC  0877               	movf	___llmod@dividend+3,w
  7865  1EFD  00F3               	movwf	?___llmod+3
  7866  1EFE  0876               	movf	___llmod@dividend+2,w
  7867  1EFF  00F2               	movwf	?___llmod+2
  7868  1F00  0875               	movf	___llmod@dividend+1,w
  7869  1F01  00F1               	movwf	?___llmod+1
  7870  1F02  0874               	movf	___llmod@dividend,w
  7871  1F03  00F0               	movwf	?___llmod
  7872  1F04                     l624:
  7873  1F04  0008               	return
  7874  1F05                     __end_of___llmod:
  7875                           
  7876                           	psect	text16
  7877  0802                     __ptext16:	
  7878 ;; *************** function ___lldiv *****************
  7879 ;; Defined at:
  7880 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  7881 ;; Parameters:    Size  Location     Type
  7882 ;;  divisor         4    0[COMMON] unsigned long 
  7883 ;;  dividend        4    4[COMMON] unsigned long 
  7884 ;; Auto vars:     Size  Location     Type
  7885 ;;  quotient        4    9[COMMON] unsigned long 
  7886 ;;  counter         1   13[COMMON] unsigned char 
  7887 ;; Return value:  Size  Location     Type
  7888 ;;                  4    0[COMMON] unsigned long 
  7889 ;; Registers used:
  7890 ;;		wreg, status,2, status,0
  7891 ;; Tracked objects:
  7892 ;;		On entry : 0/0
  7893 ;;		On exit  : 0/0
  7894 ;;		Unchanged: 0/0
  7895 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7896 ;;      Params:         8       0       0       0       0
  7897 ;;      Locals:         5       0       0       0       0
  7898 ;;      Temps:          1       0       0       0       0
  7899 ;;      Totals:        14       0       0       0       0
  7900 ;;Total ram usage:       14 bytes
  7901 ;; Hardware stack levels used:    1
  7902 ;; This function calls:
  7903 ;;		Nothing
  7904 ;; This function is called by:
  7905 ;;		_sprintf
  7906 ;; This function uses a non-reentrant model
  7907 ;;
  7908                           
  7909                           
  7910                           ;psect for function ___lldiv
  7911  0802                     ___lldiv:
  7912  0802                     l2919:	
  7913                           ;incstack = 0
  7914                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7915                           
  7916  0802  3000               	movlw	0
  7917  0803  00FC               	movwf	___lldiv@quotient+3
  7918  0804  3000               	movlw	0
  7919  0805  00FB               	movwf	___lldiv@quotient+2
  7920  0806  3000               	movlw	0
  7921  0807  00FA               	movwf	___lldiv@quotient+1
  7922  0808  3000               	movlw	0
  7923  0809  00F9               	movwf	___lldiv@quotient
  7924  080A  0873               	movf	___lldiv@divisor+3,w
  7925  080B  0472               	iorwf	___lldiv@divisor+2,w
  7926  080C  0471               	iorwf	___lldiv@divisor+1,w
  7927  080D  0470               	iorwf	___lldiv@divisor,w
  7928  080E  1903               	skipnz
  7929  080F  2811               	goto	u4591
  7930  0810  2812               	goto	u4590
  7931  0811                     u4591:
  7932  0811  285F               	goto	l2939
  7933  0812                     u4590:
  7934  0812                     l2921:
  7935  0812  01FD               	clrf	___lldiv@counter
  7936  0813  0AFD               	incf	___lldiv@counter,f
  7937  0814  2822               	goto	l2925
  7938  0815                     l2923:
  7939  0815  3001               	movlw	1
  7940  0816  00F8               	movwf	??___lldiv
  7941  0817                     u4605:
  7942  0817  1003               	clrc
  7943  0818  0DF0               	rlf	___lldiv@divisor,f
  7944  0819  0DF1               	rlf	___lldiv@divisor+1,f
  7945  081A  0DF2               	rlf	___lldiv@divisor+2,f
  7946  081B  0DF3               	rlf	___lldiv@divisor+3,f
  7947  081C  0BF8               	decfsz	??___lldiv,f
  7948  081D  2817               	goto	u4605
  7949  081E  3001               	movlw	1
  7950  081F  00F8               	movwf	??___lldiv
  7951  0820  0878               	movf	??___lldiv,w
  7952  0821  07FD               	addwf	___lldiv@counter,f
  7953  0822                     l2925:
  7954  0822  1FF3               	btfss	___lldiv@divisor+3,7
  7955  0823  2825               	goto	u4611
  7956  0824  2826               	goto	u4610
  7957  0825                     u4611:
  7958  0825  2815               	goto	l2923
  7959  0826                     u4610:
  7960  0826                     l2927:
  7961  0826  3001               	movlw	1
  7962  0827  00F8               	movwf	??___lldiv
  7963  0828                     u4625:
  7964  0828  1003               	clrc
  7965  0829  0DF9               	rlf	___lldiv@quotient,f
  7966  082A  0DFA               	rlf	___lldiv@quotient+1,f
  7967  082B  0DFB               	rlf	___lldiv@quotient+2,f
  7968  082C  0DFC               	rlf	___lldiv@quotient+3,f
  7969  082D  0BF8               	decfsz	??___lldiv,f
  7970  082E  2828               	goto	u4625
  7971  082F                     l2929:
  7972  082F  0873               	movf	___lldiv@divisor+3,w
  7973  0830  0277               	subwf	___lldiv@dividend+3,w
  7974  0831  1D03               	skipz
  7975  0832  283D               	goto	u4635
  7976  0833  0872               	movf	___lldiv@divisor+2,w
  7977  0834  0276               	subwf	___lldiv@dividend+2,w
  7978  0835  1D03               	skipz
  7979  0836  283D               	goto	u4635
  7980  0837  0871               	movf	___lldiv@divisor+1,w
  7981  0838  0275               	subwf	___lldiv@dividend+1,w
  7982  0839  1D03               	skipz
  7983  083A  283D               	goto	u4635
  7984  083B  0870               	movf	___lldiv@divisor,w
  7985  083C  0274               	subwf	___lldiv@dividend,w
  7986  083D                     u4635:
  7987  083D  1C03               	skipc
  7988  083E  2840               	goto	u4631
  7989  083F  2841               	goto	u4630
  7990  0840                     u4631:
  7991  0840  2850               	goto	l2935
  7992  0841                     u4630:
  7993  0841                     l2931:
  7994  0841  0870               	movf	___lldiv@divisor,w
  7995  0842  02F4               	subwf	___lldiv@dividend,f
  7996  0843  0871               	movf	___lldiv@divisor+1,w
  7997  0844  1C03               	skipc
  7998  0845  0F71               	incfsz	___lldiv@divisor+1,w
  7999  0846  02F5               	subwf	___lldiv@dividend+1,f
  8000  0847  0872               	movf	___lldiv@divisor+2,w
  8001  0848  1C03               	skipc
  8002  0849  0F72               	incfsz	___lldiv@divisor+2,w
  8003  084A  02F6               	subwf	___lldiv@dividend+2,f
  8004  084B  0873               	movf	___lldiv@divisor+3,w
  8005  084C  1C03               	skipc
  8006  084D  0F73               	incfsz	___lldiv@divisor+3,w
  8007  084E  02F7               	subwf	___lldiv@dividend+3,f
  8008  084F                     l2933:
  8009  084F  1479               	bsf	___lldiv@quotient,0
  8010  0850                     l2935:
  8011  0850  3001               	movlw	1
  8012  0851                     u4645:
  8013  0851  1003               	clrc
  8014  0852  0CF3               	rrf	___lldiv@divisor+3,f
  8015  0853  0CF2               	rrf	___lldiv@divisor+2,f
  8016  0854  0CF1               	rrf	___lldiv@divisor+1,f
  8017  0855  0CF0               	rrf	___lldiv@divisor,f
  8018  0856  3EFF               	addlw	-1
  8019  0857  1D03               	skipz
  8020  0858  2851               	goto	u4645
  8021  0859                     l2937:
  8022  0859  3001               	movlw	1
  8023  085A  02FD               	subwf	___lldiv@counter,f
  8024  085B  1D03               	btfss	3,2
  8025  085C  285E               	goto	u4651
  8026  085D  285F               	goto	u4650
  8027  085E                     u4651:
  8028  085E  2826               	goto	l2927
  8029  085F                     u4650:
  8030  085F                     l2939:
  8031  085F  087C               	movf	___lldiv@quotient+3,w
  8032  0860  00F3               	movwf	?___lldiv+3
  8033  0861  087B               	movf	___lldiv@quotient+2,w
  8034  0862  00F2               	movwf	?___lldiv+2
  8035  0863  087A               	movf	___lldiv@quotient+1,w
  8036  0864  00F1               	movwf	?___lldiv+1
  8037  0865  0879               	movf	___lldiv@quotient,w
  8038  0866  00F0               	movwf	?___lldiv
  8039  0867                     l404:
  8040  0867  0008               	return
  8041  0868                     __end_of___lldiv:
  8042                           
  8043                           	psect	text17
  8044  10BC                     __ptext17:	
  8045 ;; *************** function ___fltol *****************
  8046 ;; Defined at:
  8047 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  8048 ;; Parameters:    Size  Location     Type
  8049 ;;  f1              4   49[BANK0 ] unsigned long 
  8050 ;; Auto vars:     Size  Location     Type
  8051 ;;  exp1            1   59[BANK0 ] unsigned char 
  8052 ;;  sign1           1   58[BANK0 ] unsigned char 
  8053 ;; Return value:  Size  Location     Type
  8054 ;;                  4   49[BANK0 ] long 
  8055 ;; Registers used:
  8056 ;;		wreg, status,2, status,0
  8057 ;; Tracked objects:
  8058 ;;		On entry : 0/0
  8059 ;;		On exit  : 0/0
  8060 ;;		Unchanged: 0/0
  8061 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8062 ;;      Params:         0       4       0       0       0
  8063 ;;      Locals:         0       2       0       0       0
  8064 ;;      Temps:          0       5       0       0       0
  8065 ;;      Totals:         0      11       0       0       0
  8066 ;;Total ram usage:       11 bytes
  8067 ;; Hardware stack levels used:    1
  8068 ;; This function calls:
  8069 ;;		Nothing
  8070 ;; This function is called by:
  8071 ;;		_sprintf
  8072 ;; This function uses a non-reentrant model
  8073 ;;
  8074                           
  8075                           
  8076                           ;psect for function ___fltol
  8077  10BC                     ___fltol:
  8078  10BC                     l2983:	
  8079                           ;incstack = 0
  8080                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  8081                           
  8082  10BC  1003               	clrc
  8083  10BD  1283               	bcf	3,5	;RP0=0, select bank0
  8084  10BE  1303               	bcf	3,6	;RP1=0, select bank0
  8085  10BF  0D53               	rlf	___fltol@f1+2,w
  8086  10C0  0D54               	rlf	___fltol@f1+3,w
  8087  10C1  00D5               	movwf	??___fltol
  8088  10C2  0855               	movf	??___fltol,w
  8089  10C3  00DB               	movwf	___fltol@exp1
  8090  10C4  085B               	movf	___fltol@exp1,w
  8091  10C5  1D03               	btfss	3,2
  8092  10C6  28C8               	goto	u4771
  8093  10C7  28C9               	goto	u4770
  8094  10C8                     u4771:
  8095  10C8  28D2               	goto	l2989
  8096  10C9                     u4770:
  8097  10C9                     l2985:
  8098  10C9  3000               	movlw	0
  8099  10CA  00D4               	movwf	?___fltol+3
  8100  10CB  3000               	movlw	0
  8101  10CC  00D3               	movwf	?___fltol+2
  8102  10CD  3000               	movlw	0
  8103  10CE  00D2               	movwf	?___fltol+1
  8104  10CF  3000               	movlw	0
  8105  10D0  00D1               	movwf	?___fltol
  8106  10D1  2937               	goto	l571
  8107  10D2                     l2989:
  8108  10D2  0851               	movf	___fltol@f1,w
  8109  10D3  00D5               	movwf	??___fltol
  8110  10D4  0852               	movf	___fltol@f1+1,w
  8111  10D5  00D6               	movwf	??___fltol+1
  8112  10D6  0853               	movf	___fltol@f1+2,w
  8113  10D7  00D7               	movwf	??___fltol+2
  8114  10D8  0854               	movf	___fltol@f1+3,w
  8115  10D9  00D8               	movwf	??___fltol+3
  8116  10DA  301F               	movlw	31
  8117  10DB                     u4785:
  8118  10DB  1003               	clrc
  8119  10DC  0CD8               	rrf	??___fltol+3,f
  8120  10DD  0CD7               	rrf	??___fltol+2,f
  8121  10DE  0CD6               	rrf	??___fltol+1,f
  8122  10DF  0CD5               	rrf	??___fltol,f
  8123  10E0                     u4780:
  8124  10E0  3EFF               	addlw	-1
  8125  10E1  1D03               	skipz
  8126  10E2  28DB               	goto	u4785
  8127  10E3  0855               	movf	??___fltol,w
  8128  10E4  00D9               	movwf	??___fltol+4
  8129  10E5  0859               	movf	??___fltol+4,w
  8130  10E6  00DA               	movwf	___fltol@sign1
  8131  10E7                     l2991:
  8132  10E7  17D3               	bsf	___fltol@f1+2,7
  8133  10E8                     l2993:
  8134  10E8  30FF               	movlw	255
  8135  10E9  05D1               	andwf	___fltol@f1,f
  8136  10EA  30FF               	movlw	255
  8137  10EB  05D2               	andwf	___fltol@f1+1,f
  8138  10EC  30FF               	movlw	255
  8139  10ED  05D3               	andwf	___fltol@f1+2,f
  8140  10EE  3000               	movlw	0
  8141  10EF  05D4               	andwf	___fltol@f1+3,f
  8142  10F0                     l2995:
  8143  10F0  3096               	movlw	150
  8144  10F1  02DB               	subwf	___fltol@exp1,f
  8145  10F2                     l2997:
  8146  10F2  1FDB               	btfss	___fltol@exp1,7
  8147  10F3  28F5               	goto	u4791
  8148  10F4  28F6               	goto	u4790
  8149  10F5                     u4791:
  8150  10F5  2910               	goto	l3007
  8151  10F6                     u4790:
  8152  10F6                     l2999:
  8153  10F6  085B               	movf	___fltol@exp1,w
  8154  10F7  3A80               	xorlw	128
  8155  10F8  3E97               	addlw	151
  8156  10F9  1803               	skipnc
  8157  10FA  28FC               	goto	u4801
  8158  10FB  28FD               	goto	u4800
  8159  10FC                     u4801:
  8160  10FC  28FE               	goto	l3005
  8161  10FD                     u4800:
  8162  10FD  28C9               	goto	l2985
  8163  10FE                     l3005:
  8164  10FE  3001               	movlw	1
  8165  10FF                     u4815:
  8166  10FF  1003               	clrc
  8167  1100  0CD4               	rrf	___fltol@f1+3,f
  8168  1101  0CD3               	rrf	___fltol@f1+2,f
  8169  1102  0CD2               	rrf	___fltol@f1+1,f
  8170  1103  0CD1               	rrf	___fltol@f1,f
  8171  1104  3EFF               	addlw	-1
  8172  1105  1D03               	skipz
  8173  1106  28FF               	goto	u4815
  8174  1107  3001               	movlw	1
  8175  1108  00D5               	movwf	??___fltol
  8176  1109  0855               	movf	??___fltol,w
  8177  110A  07DB               	addwf	___fltol@exp1,f
  8178  110B  1D03               	btfss	3,2
  8179  110C  290E               	goto	u4821
  8180  110D  290F               	goto	u4820
  8181  110E                     u4821:
  8182  110E  28FE               	goto	l3005
  8183  110F                     u4820:
  8184  110F  2927               	goto	l3015
  8185  1110                     l3007:
  8186  1110  3020               	movlw	32
  8187  1111  025B               	subwf	___fltol@exp1,w
  8188  1112  1C03               	skipc
  8189  1113  2915               	goto	u4831
  8190  1114  2916               	goto	u4830
  8191  1115                     u4831:
  8192  1115  2922               	goto	l578
  8193  1116                     u4830:
  8194  1116  28C9               	goto	l2985
  8195  1117                     l3013:
  8196  1117  3001               	movlw	1
  8197  1118  00D5               	movwf	??___fltol
  8198  1119                     u4845:
  8199  1119  1003               	clrc
  8200  111A  0DD1               	rlf	___fltol@f1,f
  8201  111B  0DD2               	rlf	___fltol@f1+1,f
  8202  111C  0DD3               	rlf	___fltol@f1+2,f
  8203  111D  0DD4               	rlf	___fltol@f1+3,f
  8204  111E  0BD5               	decfsz	??___fltol,f
  8205  111F  2919               	goto	u4845
  8206  1120  3001               	movlw	1
  8207  1121  02DB               	subwf	___fltol@exp1,f
  8208  1122                     l578:
  8209  1122  085B               	movf	___fltol@exp1,w
  8210  1123  1D03               	btfss	3,2
  8211  1124  2926               	goto	u4851
  8212  1125  2927               	goto	u4850
  8213  1126                     u4851:
  8214  1126  2917               	goto	l3013
  8215  1127                     u4850:
  8216  1127                     l3015:
  8217  1127  085A               	movf	___fltol@sign1,w
  8218  1128  1903               	btfsc	3,2
  8219  1129  292B               	goto	u4861
  8220  112A  292C               	goto	u4860
  8221  112B                     u4861:
  8222  112B  2937               	goto	l581
  8223  112C                     u4860:
  8224  112C                     l3017:
  8225  112C  09D1               	comf	___fltol@f1,f
  8226  112D  09D2               	comf	___fltol@f1+1,f
  8227  112E  09D3               	comf	___fltol@f1+2,f
  8228  112F  09D4               	comf	___fltol@f1+3,f
  8229  1130  0AD1               	incf	___fltol@f1,f
  8230  1131  1903               	skipnz
  8231  1132  0AD2               	incf	___fltol@f1+1,f
  8232  1133  1903               	skipnz
  8233  1134  0AD3               	incf	___fltol@f1+2,f
  8234  1135  1903               	skipnz
  8235  1136  0AD4               	incf	___fltol@f1+3,f
  8236  1137                     l581:
  8237  1137                     l571:
  8238  1137  0008               	return
  8239  1138                     __end_of___fltol:
  8240                           
  8241                           	psect	text18
  8242  1CF2                     __ptext18:	
  8243 ;; *************** function ___flsub *****************
  8244 ;; Defined at:
  8245 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8246 ;; Parameters:    Size  Location     Type
  8247 ;;  a               4   70[BANK0 ] long 
  8248 ;;  b               4   74[BANK0 ] long 
  8249 ;; Auto vars:     Size  Location     Type
  8250 ;;		None
  8251 ;; Return value:  Size  Location     Type
  8252 ;;                  4   70[BANK0 ] long 
  8253 ;; Registers used:
  8254 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  8255 ;; Tracked objects:
  8256 ;;		On entry : 0/0
  8257 ;;		On exit  : 0/0
  8258 ;;		Unchanged: 0/0
  8259 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8260 ;;      Params:         0       8       0       0       0
  8261 ;;      Locals:         0       0       0       0       0
  8262 ;;      Temps:          0       0       0       0       0
  8263 ;;      Totals:         0       8       0       0       0
  8264 ;;Total ram usage:        8 bytes
  8265 ;; Hardware stack levels used:    1
  8266 ;; Hardware stack levels required when called:    1
  8267 ;; This function calls:
  8268 ;;		___fladd
  8269 ;; This function is called by:
  8270 ;;		_sprintf
  8271 ;; This function uses a non-reentrant model
  8272 ;;
  8273                           
  8274                           
  8275                           ;psect for function ___flsub
  8276  1CF2                     ___flsub:
  8277  1CF2                     l3039:	
  8278                           ;incstack = 0
  8279                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  8280                           
  8281  1CF2  3080               	movlw	128
  8282  1CF3  1283               	bcf	3,5	;RP0=0, select bank0
  8283  1CF4  1303               	bcf	3,6	;RP1=0, select bank0
  8284  1CF5  06E9               	xorwf	___flsub@a+3,f
  8285  1CF6                     l3041:
  8286  1CF6  086D               	movf	___flsub@b+3,w
  8287  1CF7  00D5               	movwf	___fladd@b+3
  8288  1CF8  086C               	movf	___flsub@b+2,w
  8289  1CF9  00D4               	movwf	___fladd@b+2
  8290  1CFA  086B               	movf	___flsub@b+1,w
  8291  1CFB  00D3               	movwf	___fladd@b+1
  8292  1CFC  086A               	movf	___flsub@b,w
  8293  1CFD  00D2               	movwf	___fladd@b
  8294  1CFE  0869               	movf	___flsub@a+3,w
  8295  1CFF  00D9               	movwf	___fladd@a+3
  8296  1D00  0868               	movf	___flsub@a+2,w
  8297  1D01  00D8               	movwf	___fladd@a+2
  8298  1D02  0867               	movf	___flsub@a+1,w
  8299  1D03  00D7               	movwf	___fladd@a+1
  8300  1D04  0866               	movf	___flsub@a,w
  8301  1D05  00D6               	movwf	___fladd@a
  8302  1D06  160A  118A  2578  160A  158A  	fcall	___fladd
  8303  1D0B  1283               	bcf	3,5	;RP0=0, select bank0
  8304  1D0C  1303               	bcf	3,6	;RP1=0, select bank0
  8305  1D0D  0855               	movf	?___fladd+3,w
  8306  1D0E  00E9               	movwf	?___flsub+3
  8307  1D0F  0854               	movf	?___fladd+2,w
  8308  1D10  00E8               	movwf	?___flsub+2
  8309  1D11  0853               	movf	?___fladd+1,w
  8310  1D12  00E7               	movwf	?___flsub+1
  8311  1D13  0852               	movf	?___fladd,w
  8312  1D14  00E6               	movwf	?___flsub
  8313  1D15                     l741:
  8314  1D15  0008               	return
  8315  1D16                     __end_of___flsub:
  8316                           
  8317                           	psect	text19
  8318  1578                     __ptext19:	
  8319 ;; *************** function ___fladd *****************
  8320 ;; Defined at:
  8321 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  8322 ;; Parameters:    Size  Location     Type
  8323 ;;  b               4   50[BANK0 ] long 
  8324 ;;  a               4   54[BANK0 ] long 
  8325 ;; Auto vars:     Size  Location     Type
  8326 ;;  grs             1   69[BANK0 ] unsigned char 
  8327 ;;  bexp            1   68[BANK0 ] unsigned char 
  8328 ;;  aexp            1   67[BANK0 ] unsigned char 
  8329 ;;  signs           1   66[BANK0 ] unsigned char 
  8330 ;; Return value:  Size  Location     Type
  8331 ;;                  4   50[BANK0 ] unsigned char 
  8332 ;; Registers used:
  8333 ;;		wreg, status,2, status,0, btemp+1
  8334 ;; Tracked objects:
  8335 ;;		On entry : 0/0
  8336 ;;		On exit  : 0/0
  8337 ;;		Unchanged: 0/0
  8338 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8339 ;;      Params:         0       8       0       0       0
  8340 ;;      Locals:         0       4       0       0       0
  8341 ;;      Temps:          0       8       0       0       0
  8342 ;;      Totals:         0      20       0       0       0
  8343 ;;Total ram usage:       20 bytes
  8344 ;; Hardware stack levels used:    1
  8345 ;; This function calls:
  8346 ;;		Nothing
  8347 ;; This function is called by:
  8348 ;;		_sprintf
  8349 ;;		___flsub
  8350 ;; This function uses a non-reentrant model
  8351 ;;
  8352                           
  8353                           
  8354                           ;psect for function ___fladd
  8355  1578                     ___fladd:
  8356  1578                     l2373:	
  8357                           ;incstack = 0
  8358                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  8359                           
  8360  1578  1283               	bcf	3,5	;RP0=0, select bank0
  8361  1579  1303               	bcf	3,6	;RP1=0, select bank0
  8362  157A  0855               	movf	___fladd@b+3,w
  8363  157B  3980               	andlw	128
  8364  157C  00DA               	movwf	??___fladd
  8365  157D  085A               	movf	??___fladd,w
  8366  157E  00E2               	movwf	___fladd@signs
  8367  157F                     l2375:
  8368  157F  0855               	movf	___fladd@b+3,w
  8369  1580  00DA               	movwf	??___fladd
  8370  1581  075A               	addwf	??___fladd,w
  8371  1582  00DB               	movwf	??___fladd+1
  8372  1583  085B               	movf	??___fladd+1,w
  8373  1584  00E4               	movwf	___fladd@bexp
  8374  1585                     l2377:
  8375  1585  1FD4               	btfss	___fladd@b+2,7
  8376  1586  2D88               	goto	u3181
  8377  1587  2D89               	goto	u3180
  8378  1588                     u3181:
  8379  1588  2D8A               	goto	l2381
  8380  1589                     u3180:
  8381  1589                     l2379:
  8382  1589  1464               	bsf	___fladd@bexp,0
  8383  158A                     l2381:
  8384  158A  0864               	movf	___fladd@bexp,w
  8385  158B  1903               	btfsc	3,2
  8386  158C  2D8E               	goto	u3191
  8387  158D  2D8F               	goto	u3190
  8388  158E                     u3191:
  8389  158E  2D9F               	goto	l2391
  8390  158F                     u3190:
  8391  158F                     l2383:
  8392  158F  0A64               	incf	___fladd@bexp,w
  8393  1590  1D03               	btfss	3,2
  8394  1591  2D93               	goto	u3201
  8395  1592  2D94               	goto	u3200
  8396  1593                     u3201:
  8397  1593  2D9C               	goto	l2387
  8398  1594                     u3200:
  8399  1594                     l2385:
  8400  1594  3000               	movlw	0
  8401  1595  00D5               	movwf	___fladd@b+3
  8402  1596  3000               	movlw	0
  8403  1597  00D4               	movwf	___fladd@b+2
  8404  1598  3000               	movlw	0
  8405  1599  00D3               	movwf	___fladd@b+1
  8406  159A  3000               	movlw	0
  8407  159B  00D2               	movwf	___fladd@b
  8408  159C                     l2387:
  8409  159C  17D4               	bsf	___fladd@b+2,7
  8410  159D                     l2389:
  8411  159D  01D5               	clrf	___fladd@b+3
  8412  159E  2DA7               	goto	l2393
  8413  159F                     l2391:
  8414  159F  3000               	movlw	0
  8415  15A0  00D5               	movwf	___fladd@b+3
  8416  15A1  3000               	movlw	0
  8417  15A2  00D4               	movwf	___fladd@b+2
  8418  15A3  3000               	movlw	0
  8419  15A4  00D3               	movwf	___fladd@b+1
  8420  15A5  3000               	movlw	0
  8421  15A6  00D2               	movwf	___fladd@b
  8422  15A7                     l2393:
  8423  15A7  0859               	movf	___fladd@a+3,w
  8424  15A8  3980               	andlw	128
  8425  15A9  00DA               	movwf	??___fladd
  8426  15AA  085A               	movf	??___fladd,w
  8427  15AB  00E3               	movwf	___fladd@aexp
  8428  15AC                     l2395:
  8429  15AC  0863               	movf	___fladd@aexp,w
  8430  15AD  0662               	xorwf	___fladd@signs,w
  8431  15AE  1903               	skipnz
  8432  15AF  2DB1               	goto	u3211
  8433  15B0  2DB2               	goto	u3210
  8434  15B1                     u3211:
  8435  15B1  2DB3               	goto	l2399
  8436  15B2                     u3210:
  8437  15B2                     l2397:
  8438  15B2  1762               	bsf	___fladd@signs,6
  8439  15B3                     l2399:
  8440  15B3  0859               	movf	___fladd@a+3,w
  8441  15B4  00DA               	movwf	??___fladd
  8442  15B5  075A               	addwf	??___fladd,w
  8443  15B6  00DB               	movwf	??___fladd+1
  8444  15B7  085B               	movf	??___fladd+1,w
  8445  15B8  00E3               	movwf	___fladd@aexp
  8446  15B9                     l2401:
  8447  15B9  1FD8               	btfss	___fladd@a+2,7
  8448  15BA  2DBC               	goto	u3221
  8449  15BB  2DBD               	goto	u3220
  8450  15BC                     u3221:
  8451  15BC  2DBE               	goto	l2405
  8452  15BD                     u3220:
  8453  15BD                     l2403:
  8454  15BD  1463               	bsf	___fladd@aexp,0
  8455  15BE                     l2405:
  8456  15BE  0863               	movf	___fladd@aexp,w
  8457  15BF  1903               	btfsc	3,2
  8458  15C0  2DC2               	goto	u3231
  8459  15C1  2DC3               	goto	u3230
  8460  15C2                     u3231:
  8461  15C2  2DD3               	goto	l2415
  8462  15C3                     u3230:
  8463  15C3                     l2407:
  8464  15C3  0A63               	incf	___fladd@aexp,w
  8465  15C4  1D03               	btfss	3,2
  8466  15C5  2DC7               	goto	u3241
  8467  15C6  2DC8               	goto	u3240
  8468  15C7                     u3241:
  8469  15C7  2DD0               	goto	l2411
  8470  15C8                     u3240:
  8471  15C8                     l2409:
  8472  15C8  3000               	movlw	0
  8473  15C9  00D9               	movwf	___fladd@a+3
  8474  15CA  3000               	movlw	0
  8475  15CB  00D8               	movwf	___fladd@a+2
  8476  15CC  3000               	movlw	0
  8477  15CD  00D7               	movwf	___fladd@a+1
  8478  15CE  3000               	movlw	0
  8479  15CF  00D6               	movwf	___fladd@a
  8480  15D0                     l2411:
  8481  15D0  17D8               	bsf	___fladd@a+2,7
  8482  15D1                     l2413:
  8483  15D1  01D9               	clrf	___fladd@a+3
  8484  15D2  2DDB               	goto	l695
  8485  15D3                     l2415:
  8486  15D3  3000               	movlw	0
  8487  15D4  00D9               	movwf	___fladd@a+3
  8488  15D5  3000               	movlw	0
  8489  15D6  00D8               	movwf	___fladd@a+2
  8490  15D7  3000               	movlw	0
  8491  15D8  00D7               	movwf	___fladd@a+1
  8492  15D9  3000               	movlw	0
  8493  15DA  00D6               	movwf	___fladd@a
  8494  15DB                     l695:
  8495  15DB  0864               	movf	___fladd@bexp,w
  8496  15DC  0263               	subwf	___fladd@aexp,w
  8497  15DD  1803               	skipnc
  8498  15DE  2DE0               	goto	u3251
  8499  15DF  2DE1               	goto	u3250
  8500  15E0                     u3251:
  8501  15E0  2E25               	goto	l2451
  8502  15E1                     u3250:
  8503  15E1                     l2417:
  8504  15E1  1F62               	btfss	___fladd@signs,6
  8505  15E2  2DE4               	goto	u3261
  8506  15E3  2DE5               	goto	u3260
  8507  15E4                     u3261:
  8508  15E4  2DE9               	goto	l2421
  8509  15E5                     u3260:
  8510  15E5                     l2419:
  8511  15E5  3080               	movlw	128
  8512  15E6  00DA               	movwf	??___fladd
  8513  15E7  085A               	movf	??___fladd,w
  8514  15E8  06E2               	xorwf	___fladd@signs,f
  8515  15E9                     l2421:
  8516  15E9  0864               	movf	___fladd@bexp,w
  8517  15EA  00DA               	movwf	??___fladd
  8518  15EB  085A               	movf	??___fladd,w
  8519  15EC  00E5               	movwf	___fladd@grs
  8520  15ED                     l2423:
  8521  15ED  0863               	movf	___fladd@aexp,w
  8522  15EE  00DA               	movwf	??___fladd
  8523  15EF  085A               	movf	??___fladd,w
  8524  15F0  00E4               	movwf	___fladd@bexp
  8525  15F1                     l2425:
  8526  15F1  0865               	movf	___fladd@grs,w
  8527  15F2  00DA               	movwf	??___fladd
  8528  15F3  085A               	movf	??___fladd,w
  8529  15F4  00E3               	movwf	___fladd@aexp
  8530  15F5                     l2427:
  8531  15F5  0852               	movf	___fladd@b,w
  8532  15F6  00DA               	movwf	??___fladd
  8533  15F7  085A               	movf	??___fladd,w
  8534  15F8  00E5               	movwf	___fladd@grs
  8535  15F9                     l2429:
  8536  15F9  0856               	movf	___fladd@a,w
  8537  15FA  00DA               	movwf	??___fladd
  8538  15FB  085A               	movf	??___fladd,w
  8539  15FC  00D2               	movwf	___fladd@b
  8540  15FD                     l2431:
  8541  15FD  0865               	movf	___fladd@grs,w
  8542  15FE  00DA               	movwf	??___fladd
  8543  15FF  085A               	movf	??___fladd,w
  8544  1600  00D6               	movwf	___fladd@a
  8545  1601                     l2433:
  8546  1601  0853               	movf	___fladd@b+1,w
  8547  1602  00DA               	movwf	??___fladd
  8548  1603  085A               	movf	??___fladd,w
  8549  1604  00E5               	movwf	___fladd@grs
  8550  1605                     l2435:
  8551  1605  0857               	movf	___fladd@a+1,w
  8552  1606  00DA               	movwf	??___fladd
  8553  1607  085A               	movf	??___fladd,w
  8554  1608  00D3               	movwf	___fladd@b+1
  8555  1609                     l2437:
  8556  1609  0865               	movf	___fladd@grs,w
  8557  160A  00DA               	movwf	??___fladd
  8558  160B  085A               	movf	??___fladd,w
  8559  160C  00D7               	movwf	___fladd@a+1
  8560  160D                     l2439:
  8561  160D  0854               	movf	___fladd@b+2,w
  8562  160E  00DA               	movwf	??___fladd
  8563  160F  085A               	movf	??___fladd,w
  8564  1610  00E5               	movwf	___fladd@grs
  8565  1611                     l2441:
  8566  1611  0858               	movf	___fladd@a+2,w
  8567  1612  00DA               	movwf	??___fladd
  8568  1613  085A               	movf	??___fladd,w
  8569  1614  00D4               	movwf	___fladd@b+2
  8570  1615                     l2443:
  8571  1615  0865               	movf	___fladd@grs,w
  8572  1616  00DA               	movwf	??___fladd
  8573  1617  085A               	movf	??___fladd,w
  8574  1618  00D8               	movwf	___fladd@a+2
  8575  1619                     l2445:
  8576  1619  0855               	movf	___fladd@b+3,w
  8577  161A  00DA               	movwf	??___fladd
  8578  161B  085A               	movf	??___fladd,w
  8579  161C  00E5               	movwf	___fladd@grs
  8580  161D                     l2447:
  8581  161D  0859               	movf	___fladd@a+3,w
  8582  161E  00DA               	movwf	??___fladd
  8583  161F  085A               	movf	??___fladd,w
  8584  1620  00D5               	movwf	___fladd@b+3
  8585  1621                     l2449:
  8586  1621  0865               	movf	___fladd@grs,w
  8587  1622  00DA               	movwf	??___fladd
  8588  1623  085A               	movf	??___fladd,w
  8589  1624  00D9               	movwf	___fladd@a+3
  8590  1625                     l2451:
  8591  1625  01E5               	clrf	___fladd@grs
  8592  1626                     l2453:
  8593  1626  0863               	movf	___fladd@aexp,w
  8594  1627  00DA               	movwf	??___fladd
  8595  1628  01DB               	clrf	??___fladd+1
  8596  1629  085B               	movf	??___fladd+1,w
  8597  162A  00DD               	movwf	??___fladd+3
  8598  162B  0864               	movf	___fladd@bexp,w
  8599  162C  025A               	subwf	??___fladd,w
  8600  162D  00DC               	movwf	??___fladd+2
  8601  162E  1C03               	skipc
  8602  162F  03DD               	decf	??___fladd+3,f
  8603  1630  085D               	movf	??___fladd+3,w
  8604  1631  3A80               	xorlw	128
  8605  1632  00FF               	movwf	btemp+1
  8606  1633  3080               	movlw	128
  8607  1634  027F               	subwf	btemp+1,w
  8608  1635  1D03               	skipz
  8609  1636  2E39               	goto	u3275
  8610  1637  301A               	movlw	26
  8611  1638  025C               	subwf	??___fladd+2,w
  8612  1639                     u3275:
  8613  1639  1C03               	skipc
  8614  163A  2E3C               	goto	u3271
  8615  163B  2E3D               	goto	u3270
  8616  163C                     u3271:
  8617  163C  2E7A               	goto	l2469
  8618  163D                     u3270:
  8619  163D                     l2455:
  8620  163D  1283               	bcf	3,5	;RP0=0, select bank0
  8621  163E  1303               	bcf	3,6	;RP1=0, select bank0
  8622  163F  0855               	movf	___fladd@b+3,w
  8623  1640  0454               	iorwf	___fladd@b+2,w
  8624  1641  0453               	iorwf	___fladd@b+1,w
  8625  1642  0452               	iorwf	___fladd@b,w
  8626  1643  1D03               	skipz
  8627  1644  2E46               	goto	u3281
  8628  1645  2E48               	goto	u3280
  8629  1646                     u3281:
  8630  1646  3001               	movlw	1
  8631  1647  2E49               	goto	u3290
  8632  1648                     u3280:
  8633  1648  3000               	movlw	0
  8634  1649                     u3290:
  8635  1649  00DA               	movwf	??___fladd
  8636  164A  085A               	movf	??___fladd,w
  8637  164B  00E5               	movwf	___fladd@grs
  8638  164C  3000               	movlw	0
  8639  164D  00D5               	movwf	___fladd@b+3
  8640  164E  3000               	movlw	0
  8641  164F  00D4               	movwf	___fladd@b+2
  8642  1650  3000               	movlw	0
  8643  1651  00D3               	movwf	___fladd@b+1
  8644  1652  3000               	movlw	0
  8645  1653  00D2               	movwf	___fladd@b
  8646  1654  0863               	movf	___fladd@aexp,w
  8647  1655  00DA               	movwf	??___fladd
  8648  1656  085A               	movf	??___fladd,w
  8649  1657  00E4               	movwf	___fladd@bexp
  8650  1658  2E82               	goto	l699
  8651  1659                     l701:
  8652  1659  1C65               	btfss	___fladd@grs,0
  8653  165A  2E5C               	goto	u3301
  8654  165B  2E5D               	goto	u3300
  8655  165C                     u3301:
  8656  165C  2E66               	goto	l2459
  8657  165D                     u3300:
  8658  165D                     l2457:
  8659  165D  0865               	movf	___fladd@grs,w
  8660  165E  00DA               	movwf	??___fladd
  8661  165F  1003               	clrc
  8662  1660  0C5A               	rrf	??___fladd,w
  8663  1661  3801               	iorlw	1
  8664  1662  00DB               	movwf	??___fladd+1
  8665  1663  085B               	movf	??___fladd+1,w
  8666  1664  00E5               	movwf	___fladd@grs
  8667  1665  2E68               	goto	l2461
  8668  1666                     l2459:
  8669  1666  1003               	clrc
  8670  1667  0CE5               	rrf	___fladd@grs,f
  8671  1668                     l2461:
  8672  1668  1C52               	btfss	___fladd@b,0
  8673  1669  2E6B               	goto	u3311
  8674  166A  2E6C               	goto	u3310
  8675  166B                     u3311:
  8676  166B  2E6D               	goto	l2465
  8677  166C                     u3310:
  8678  166C                     l2463:
  8679  166C  17E5               	bsf	___fladd@grs,7
  8680  166D                     l2465:
  8681  166D  3001               	movlw	1
  8682  166E  00DA               	movwf	??___fladd
  8683  166F                     u3325:
  8684  166F  0D55               	rlf	___fladd@b+3,w
  8685  1670  0CD5               	rrf	___fladd@b+3,f
  8686  1671  0CD4               	rrf	___fladd@b+2,f
  8687  1672  0CD3               	rrf	___fladd@b+1,f
  8688  1673  0CD2               	rrf	___fladd@b,f
  8689  1674  0BDA               	decfsz	??___fladd& (0+127),f
  8690  1675  2E6F               	goto	u3325
  8691  1676                     l2467:
  8692  1676  3001               	movlw	1
  8693  1677  00DA               	movwf	??___fladd
  8694  1678  085A               	movf	??___fladd,w
  8695  1679  07E4               	addwf	___fladd@bexp,f
  8696  167A                     l2469:
  8697  167A  1283               	bcf	3,5	;RP0=0, select bank0
  8698  167B  1303               	bcf	3,6	;RP1=0, select bank0
  8699  167C  0863               	movf	___fladd@aexp,w
  8700  167D  0264               	subwf	___fladd@bexp,w
  8701  167E  1C03               	skipc
  8702  167F  2E81               	goto	u3331
  8703  1680  2E82               	goto	u3330
  8704  1681                     u3331:
  8705  1681  2E59               	goto	l701
  8706  1682                     u3330:
  8707  1682                     l699:
  8708  1682  1B62               	btfsc	___fladd@signs,6
  8709  1683  2E85               	goto	u3341
  8710  1684  2E86               	goto	u3340
  8711  1685                     u3341:
  8712  1685  2ED1               	goto	l2495
  8713  1686                     u3340:
  8714  1686                     l2471:
  8715  1686  0864               	movf	___fladd@bexp,w
  8716  1687  1D03               	btfss	3,2
  8717  1688  2E8A               	goto	u3351
  8718  1689  2E8B               	goto	u3350
  8719  168A                     u3351:
  8720  168A  2E94               	goto	l2477
  8721  168B                     u3350:
  8722  168B                     l2473:
  8723  168B  3000               	movlw	0
  8724  168C  00D5               	movwf	?___fladd+3
  8725  168D  3000               	movlw	0
  8726  168E  00D4               	movwf	?___fladd+2
  8727  168F  3000               	movlw	0
  8728  1690  00D3               	movwf	?___fladd+1
  8729  1691  3000               	movlw	0
  8730  1692  00D2               	movwf	?___fladd
  8731  1693  2FFF               	goto	l708
  8732  1694                     l2477:
  8733  1694  0856               	movf	___fladd@a,w
  8734  1695  07D2               	addwf	___fladd@b,f
  8735  1696  0857               	movf	___fladd@a+1,w
  8736  1697  1103               	clrz
  8737  1698  1803               	skipnc
  8738  1699  3E01               	addlw	1
  8739  169A  1903               	skipnz
  8740  169B  2E9D               	goto	u3361
  8741  169C  07D3               	addwf	___fladd@b+1,f
  8742  169D                     u3361:
  8743  169D  0858               	movf	___fladd@a+2,w
  8744  169E  1103               	clrz
  8745  169F  1803               	skipnc
  8746  16A0  3E01               	addlw	1
  8747  16A1  1903               	skipnz
  8748  16A2  2EA4               	goto	u3362
  8749  16A3  07D4               	addwf	___fladd@b+2,f
  8750  16A4                     u3362:
  8751  16A4  0859               	movf	___fladd@a+3,w
  8752  16A5  1103               	clrz
  8753  16A6  1803               	skipnc
  8754  16A7  3E01               	addlw	1
  8755  16A8  1903               	skipnz
  8756  16A9  2EAB               	goto	u3363
  8757  16AA  07D5               	addwf	___fladd@b+3,f
  8758  16AB                     u3363:
  8759  16AB                     l2479:
  8760  16AB  1C55               	btfss	___fladd@b+3,0
  8761  16AC  2EAE               	goto	u3371
  8762  16AD  2EAF               	goto	u3370
  8763  16AE                     u3371:
  8764  16AE  2F85               	goto	l2529
  8765  16AF                     u3370:
  8766  16AF                     l2481:
  8767  16AF  1C65               	btfss	___fladd@grs,0
  8768  16B0  2EB2               	goto	u3381
  8769  16B1  2EB3               	goto	u3380
  8770  16B2                     u3381:
  8771  16B2  2EBC               	goto	l2485
  8772  16B3                     u3380:
  8773  16B3                     l2483:
  8774  16B3  0865               	movf	___fladd@grs,w
  8775  16B4  00DA               	movwf	??___fladd
  8776  16B5  1003               	clrc
  8777  16B6  0C5A               	rrf	??___fladd,w
  8778  16B7  3801               	iorlw	1
  8779  16B8  00DB               	movwf	??___fladd+1
  8780  16B9  085B               	movf	??___fladd+1,w
  8781  16BA  00E5               	movwf	___fladd@grs
  8782  16BB  2EBE               	goto	l2487
  8783  16BC                     l2485:
  8784  16BC  1003               	clrc
  8785  16BD  0CE5               	rrf	___fladd@grs,f
  8786  16BE                     l2487:
  8787  16BE  1C52               	btfss	___fladd@b,0
  8788  16BF  2EC1               	goto	u3391
  8789  16C0  2EC2               	goto	u3390
  8790  16C1                     u3391:
  8791  16C1  2EC3               	goto	l2491
  8792  16C2                     u3390:
  8793  16C2                     l2489:
  8794  16C2  17E5               	bsf	___fladd@grs,7
  8795  16C3                     l2491:
  8796  16C3  3001               	movlw	1
  8797  16C4  00DA               	movwf	??___fladd
  8798  16C5                     u3405:
  8799  16C5  0D55               	rlf	___fladd@b+3,w
  8800  16C6  0CD5               	rrf	___fladd@b+3,f
  8801  16C7  0CD4               	rrf	___fladd@b+2,f
  8802  16C8  0CD3               	rrf	___fladd@b+1,f
  8803  16C9  0CD2               	rrf	___fladd@b,f
  8804  16CA  0BDA               	decfsz	??___fladd& (0+127),f
  8805  16CB  2EC5               	goto	u3405
  8806  16CC                     l2493:
  8807  16CC  3001               	movlw	1
  8808  16CD  00DA               	movwf	??___fladd
  8809  16CE  085A               	movf	??___fladd,w
  8810  16CF  07E4               	addwf	___fladd@bexp,f
  8811  16D0  2F85               	goto	l2529
  8812  16D1                     l2495:
  8813  16D1  0855               	movf	___fladd@b+3,w
  8814  16D2  3A80               	xorlw	128
  8815  16D3  00FF               	movwf	btemp+1
  8816  16D4  0859               	movf	___fladd@a+3,w
  8817  16D5  3A80               	xorlw	128
  8818  16D6  027F               	subwf	btemp+1,w
  8819  16D7  1D03               	skipz
  8820  16D8  2EE3               	goto	u3413
  8821  16D9  0858               	movf	___fladd@a+2,w
  8822  16DA  0254               	subwf	___fladd@b+2,w
  8823  16DB  1D03               	skipz
  8824  16DC  2EE3               	goto	u3413
  8825  16DD  0857               	movf	___fladd@a+1,w
  8826  16DE  0253               	subwf	___fladd@b+1,w
  8827  16DF  1D03               	skipz
  8828  16E0  2EE3               	goto	u3413
  8829  16E1  0856               	movf	___fladd@a,w
  8830  16E2  0252               	subwf	___fladd@b,w
  8831  16E3                     u3413:
  8832  16E3  1803               	skipnc
  8833  16E4  2EE6               	goto	u3411
  8834  16E5  2EE7               	goto	u3410
  8835  16E6                     u3411:
  8836  16E6  2F3F               	goto	l2505
  8837  16E7                     u3410:
  8838  16E7                     l2497:
  8839  16E7  30FF               	movlw	255
  8840  16E8  00DA               	movwf	??___fladd
  8841  16E9  30FF               	movlw	255
  8842  16EA  00DB               	movwf	??___fladd+1
  8843  16EB  30FF               	movlw	255
  8844  16EC  00DC               	movwf	??___fladd+2
  8845  16ED  30FF               	movlw	255
  8846  16EE  00DD               	movwf	??___fladd+3
  8847  16EF  0856               	movf	___fladd@a,w
  8848  16F0  00DE               	movwf	??___fladd+4
  8849  16F1  0857               	movf	___fladd@a+1,w
  8850  16F2  00DF               	movwf	??___fladd+5
  8851  16F3  0858               	movf	___fladd@a+2,w
  8852  16F4  00E0               	movwf	??___fladd+6
  8853  16F5  0859               	movf	___fladd@a+3,w
  8854  16F6  00E1               	movwf	??___fladd+7
  8855  16F7  0852               	movf	___fladd@b,w
  8856  16F8  02DE               	subwf	??___fladd+4,f
  8857  16F9  0853               	movf	___fladd@b+1,w
  8858  16FA  1C03               	skipc
  8859  16FB  0F53               	incfsz	___fladd@b+1,w
  8860  16FC  2EFE               	goto	u3421
  8861  16FD  2EFF               	goto	u3422
  8862  16FE                     u3421:
  8863  16FE  02DF               	subwf	??___fladd+5,f
  8864  16FF                     u3422:
  8865  16FF  0854               	movf	___fladd@b+2,w
  8866  1700  1C03               	skipc
  8867  1701  0F54               	incfsz	___fladd@b+2,w
  8868  1702  2F04               	goto	u3423
  8869  1703  2F05               	goto	u3424
  8870  1704                     u3423:
  8871  1704  02E0               	subwf	??___fladd+6,f
  8872  1705                     u3424:
  8873  1705  0855               	movf	___fladd@b+3,w
  8874  1706  1C03               	skipc
  8875  1707  0F55               	incfsz	___fladd@b+3,w
  8876  1708  2F0A               	goto	u3425
  8877  1709  2F0B               	goto	u3426
  8878  170A                     u3425:
  8879  170A  02E1               	subwf	??___fladd+7,f
  8880  170B                     u3426:
  8881  170B  085E               	movf	??___fladd+4,w
  8882  170C  07DA               	addwf	??___fladd,f
  8883  170D  085F               	movf	??___fladd+5,w
  8884  170E  1803               	skipnc
  8885  170F  0F5F               	incfsz	??___fladd+5,w
  8886  1710  2F12               	goto	u3430
  8887  1711  2F13               	goto	u3431
  8888  1712                     u3430:
  8889  1712  07DB               	addwf	??___fladd+1,f
  8890  1713                     u3431:
  8891  1713  0860               	movf	??___fladd+6,w
  8892  1714  1803               	skipnc
  8893  1715  0F60               	incfsz	??___fladd+6,w
  8894  1716  2F18               	goto	u3432
  8895  1717  2F19               	goto	u3433
  8896  1718                     u3432:
  8897  1718  07DC               	addwf	??___fladd+2,f
  8898  1719                     u3433:
  8899  1719  0861               	movf	??___fladd+7,w
  8900  171A  1803               	skipnc
  8901  171B  0A61               	incf	??___fladd+7,w
  8902  171C  07DD               	addwf	??___fladd+3,f
  8903  171D  085D               	movf	??___fladd+3,w
  8904  171E  00D5               	movwf	___fladd@b+3
  8905  171F  085C               	movf	??___fladd+2,w
  8906  1720  00D4               	movwf	___fladd@b+2
  8907  1721  085B               	movf	??___fladd+1,w
  8908  1722  00D3               	movwf	___fladd@b+1
  8909  1723  085A               	movf	??___fladd,w
  8910  1724  00D2               	movwf	___fladd@b
  8911  1725                     l2499:
  8912  1725  3080               	movlw	128
  8913  1726  00DA               	movwf	??___fladd
  8914  1727  085A               	movf	??___fladd,w
  8915  1728  06E2               	xorwf	___fladd@signs,f
  8916  1729  09E5               	comf	___fladd@grs,f
  8917  172A  0AE5               	incf	___fladd@grs,f
  8918  172B                     l2501:
  8919  172B  0865               	movf	___fladd@grs,w
  8920  172C  1D03               	btfss	3,2
  8921  172D  2F2F               	goto	u3441
  8922  172E  2F30               	goto	u3440
  8923  172F                     u3441:
  8924  172F  2F4D               	goto	l716
  8925  1730                     u3440:
  8926  1730                     l2503:
  8927  1730  3001               	movlw	1
  8928  1731  07D2               	addwf	___fladd@b,f
  8929  1732  3000               	movlw	0
  8930  1733  1803               	skipnc
  8931  1734  3001               	movlw	1
  8932  1735  07D3               	addwf	___fladd@b+1,f
  8933  1736  3000               	movlw	0
  8934  1737  1803               	skipnc
  8935  1738  3001               	movlw	1
  8936  1739  07D4               	addwf	___fladd@b+2,f
  8937  173A  3000               	movlw	0
  8938  173B  1803               	skipnc
  8939  173C  3001               	movlw	1
  8940  173D  07D5               	addwf	___fladd@b+3,f
  8941  173E  2F4D               	goto	l716
  8942  173F                     l2505:
  8943  173F  0856               	movf	___fladd@a,w
  8944  1740  02D2               	subwf	___fladd@b,f
  8945  1741  0857               	movf	___fladd@a+1,w
  8946  1742  1C03               	skipc
  8947  1743  0F57               	incfsz	___fladd@a+1,w
  8948  1744  02D3               	subwf	___fladd@b+1,f
  8949  1745  0858               	movf	___fladd@a+2,w
  8950  1746  1C03               	skipc
  8951  1747  0F58               	incfsz	___fladd@a+2,w
  8952  1748  02D4               	subwf	___fladd@b+2,f
  8953  1749  0859               	movf	___fladd@a+3,w
  8954  174A  1C03               	skipc
  8955  174B  0F59               	incfsz	___fladd@a+3,w
  8956  174C  02D5               	subwf	___fladd@b+3,f
  8957  174D                     l716:
  8958  174D  0855               	movf	___fladd@b+3,w
  8959  174E  0454               	iorwf	___fladd@b+2,w
  8960  174F  0453               	iorwf	___fladd@b+1,w
  8961  1750  0452               	iorwf	___fladd@b,w
  8962  1751  1D03               	skipz
  8963  1752  2F54               	goto	u3451
  8964  1753  2F55               	goto	u3450
  8965  1754                     u3451:
  8966  1754  2F81               	goto	l2527
  8967  1755                     u3450:
  8968  1755                     l2507:
  8969  1755  0865               	movf	___fladd@grs,w
  8970  1756  1D03               	btfss	3,2
  8971  1757  2F59               	goto	u3461
  8972  1758  2F5A               	goto	u3460
  8973  1759                     u3461:
  8974  1759  2F81               	goto	l2527
  8975  175A                     u3460:
  8976  175A                     l2509:
  8977  175A  3000               	movlw	0
  8978  175B  00D5               	movwf	?___fladd+3
  8979  175C  3000               	movlw	0
  8980  175D  00D4               	movwf	?___fladd+2
  8981  175E  3000               	movlw	0
  8982  175F  00D3               	movwf	?___fladd+1
  8983  1760  3000               	movlw	0
  8984  1761  00D2               	movwf	?___fladd
  8985  1762  2FFF               	goto	l708
  8986  1763                     l2513:
  8987  1763  3001               	movlw	1
  8988  1764  00DA               	movwf	??___fladd
  8989  1765                     u3475:
  8990  1765  1003               	clrc
  8991  1766  0DD2               	rlf	___fladd@b,f
  8992  1767  0DD3               	rlf	___fladd@b+1,f
  8993  1768  0DD4               	rlf	___fladd@b+2,f
  8994  1769  0DD5               	rlf	___fladd@b+3,f
  8995  176A  0BDA               	decfsz	??___fladd,f
  8996  176B  2F65               	goto	u3475
  8997  176C                     l2515:
  8998  176C  1FE5               	btfss	___fladd@grs,7
  8999  176D  2F6F               	goto	u3481
  9000  176E  2F70               	goto	u3480
  9001  176F                     u3481:
  9002  176F  2F71               	goto	l720
  9003  1770                     u3480:
  9004  1770                     l2517:
  9005  1770  1452               	bsf	___fladd@b,0
  9006  1771                     l720:
  9007  1771  1C65               	btfss	___fladd@grs,0
  9008  1772  2F74               	goto	u3491
  9009  1773  2F75               	goto	u3490
  9010  1774                     u3491:
  9011  1774  2F78               	goto	l2521
  9012  1775                     u3490:
  9013  1775                     l2519:
  9014  1775  1403               	setc
  9015  1776  0DE5               	rlf	___fladd@grs,f
  9016  1777  2F7A               	goto	l2523
  9017  1778                     l2521:
  9018  1778  1003               	clrc
  9019  1779  0DE5               	rlf	___fladd@grs,f
  9020  177A                     l2523:
  9021  177A  0864               	movf	___fladd@bexp,w
  9022  177B  1903               	btfsc	3,2
  9023  177C  2F7E               	goto	u3501
  9024  177D  2F7F               	goto	u3500
  9025  177E                     u3501:
  9026  177E  2F81               	goto	l2527
  9027  177F                     u3500:
  9028  177F                     l2525:
  9029  177F  3001               	movlw	1
  9030  1780  02E4               	subwf	___fladd@bexp,f
  9031  1781                     l2527:
  9032  1781  1FD4               	btfss	___fladd@b+2,7
  9033  1782  2F84               	goto	u3511
  9034  1783  2F85               	goto	u3510
  9035  1784                     u3511:
  9036  1784  2F63               	goto	l2513
  9037  1785                     u3510:
  9038  1785                     l2529:
  9039  1785  01E3               	clrf	___fladd@aexp
  9040  1786                     l2531:
  9041  1786  1FE5               	btfss	___fladd@grs,7
  9042  1787  2F89               	goto	u3521
  9043  1788  2F8A               	goto	u3520
  9044  1789                     u3521:
  9045  1789  2F98               	goto	l2539
  9046  178A                     u3520:
  9047  178A                     l2533:
  9048  178A  0865               	movf	___fladd@grs,w
  9049  178B  397F               	andlw	127
  9050  178C  1903               	btfsc	3,2
  9051  178D  2F8F               	goto	u3531
  9052  178E  2F90               	goto	u3530
  9053  178F                     u3531:
  9054  178F  2F93               	goto	l726
  9055  1790                     u3530:
  9056  1790                     l2535:
  9057  1790  01E3               	clrf	___fladd@aexp
  9058  1791  0AE3               	incf	___fladd@aexp,f
  9059  1792  2F98               	goto	l2539
  9060  1793                     l726:
  9061  1793  1C52               	btfss	___fladd@b,0
  9062  1794  2F96               	goto	u3541
  9063  1795  2F97               	goto	u3540
  9064  1796                     u3541:
  9065  1796  2F98               	goto	l2539
  9066  1797                     u3540:
  9067  1797  2F90               	goto	l2535
  9068  1798                     l2539:
  9069  1798  0863               	movf	___fladd@aexp,w
  9070  1799  1903               	btfsc	3,2
  9071  179A  2F9C               	goto	u3551
  9072  179B  2F9D               	goto	u3550
  9073  179C                     u3551:
  9074  179C  2FD1               	goto	l729
  9075  179D                     u3550:
  9076  179D                     l2541:
  9077  179D  3001               	movlw	1
  9078  179E  07D2               	addwf	___fladd@b,f
  9079  179F  3000               	movlw	0
  9080  17A0  1803               	skipnc
  9081  17A1  3001               	movlw	1
  9082  17A2  07D3               	addwf	___fladd@b+1,f
  9083  17A3  3000               	movlw	0
  9084  17A4  1803               	skipnc
  9085  17A5  3001               	movlw	1
  9086  17A6  07D4               	addwf	___fladd@b+2,f
  9087  17A7  3000               	movlw	0
  9088  17A8  1803               	skipnc
  9089  17A9  3001               	movlw	1
  9090  17AA  07D5               	addwf	___fladd@b+3,f
  9091  17AB                     l2543:
  9092  17AB  1C55               	btfss	___fladd@b+3,0
  9093  17AC  2FAE               	goto	u3561
  9094  17AD  2FAF               	goto	u3560
  9095  17AE                     u3561:
  9096  17AE  2FD1               	goto	l729
  9097  17AF                     u3560:
  9098  17AF                     l2545:
  9099  17AF  0852               	movf	___fladd@b,w
  9100  17B0  00DA               	movwf	??___fladd
  9101  17B1  0853               	movf	___fladd@b+1,w
  9102  17B2  00DB               	movwf	??___fladd+1
  9103  17B3  0854               	movf	___fladd@b+2,w
  9104  17B4  00DC               	movwf	??___fladd+2
  9105  17B5  0855               	movf	___fladd@b+3,w
  9106  17B6  00DD               	movwf	??___fladd+3
  9107  17B7  3001               	movlw	1
  9108  17B8  00DE               	movwf	??___fladd+4
  9109  17B9                     u3575:
  9110  17B9  0D5D               	rlf	??___fladd+3,w
  9111  17BA  0CDD               	rrf	??___fladd+3,f
  9112  17BB  0CDC               	rrf	??___fladd+2,f
  9113  17BC  0CDB               	rrf	??___fladd+1,f
  9114  17BD  0CDA               	rrf	??___fladd,f
  9115  17BE                     u3570:
  9116  17BE  0BDE               	decfsz	??___fladd+4,f
  9117  17BF  2FB9               	goto	u3575
  9118  17C0  085D               	movf	??___fladd+3,w
  9119  17C1  00D5               	movwf	___fladd@b+3
  9120  17C2  085C               	movf	??___fladd+2,w
  9121  17C3  00D4               	movwf	___fladd@b+2
  9122  17C4  085B               	movf	??___fladd+1,w
  9123  17C5  00D3               	movwf	___fladd@b+1
  9124  17C6  085A               	movf	??___fladd,w
  9125  17C7  00D2               	movwf	___fladd@b
  9126  17C8  0A64               	incf	___fladd@bexp,w
  9127  17C9  1903               	btfsc	3,2
  9128  17CA  2FCC               	goto	u3581
  9129  17CB  2FCD               	goto	u3580
  9130  17CC                     u3581:
  9131  17CC  2FD1               	goto	l729
  9132  17CD                     u3580:
  9133  17CD                     l2547:
  9134  17CD  3001               	movlw	1
  9135  17CE  00DA               	movwf	??___fladd
  9136  17CF  085A               	movf	??___fladd,w
  9137  17D0  07E4               	addwf	___fladd@bexp,f
  9138  17D1                     l729:
  9139  17D1  0A64               	incf	___fladd@bexp,w
  9140  17D2  1903               	btfsc	3,2
  9141  17D3  2FD5               	goto	u3591
  9142  17D4  2FD6               	goto	u3590
  9143  17D5                     u3591:
  9144  17D5  2FDB               	goto	l2551
  9145  17D6                     u3590:
  9146  17D6                     l2549:
  9147  17D6  0864               	movf	___fladd@bexp,w
  9148  17D7  1D03               	btfss	3,2
  9149  17D8  2FDA               	goto	u3601
  9150  17D9  2FDB               	goto	u3600
  9151  17DA                     u3601:
  9152  17DA  2FE9               	goto	l2557
  9153  17DB                     u3600:
  9154  17DB                     l2551:
  9155  17DB  3000               	movlw	0
  9156  17DC  00D5               	movwf	___fladd@b+3
  9157  17DD  3000               	movlw	0
  9158  17DE  00D4               	movwf	___fladd@b+2
  9159  17DF  3000               	movlw	0
  9160  17E0  00D3               	movwf	___fladd@b+1
  9161  17E1  3000               	movlw	0
  9162  17E2  00D2               	movwf	___fladd@b
  9163  17E3                     l2553:
  9164  17E3  0864               	movf	___fladd@bexp,w
  9165  17E4  1D03               	btfss	3,2
  9166  17E5  2FE7               	goto	u3611
  9167  17E6  2FE8               	goto	u3610
  9168  17E7                     u3611:
  9169  17E7  2FE9               	goto	l2557
  9170  17E8                     u3610:
  9171  17E8                     l2555:
  9172  17E8  01E2               	clrf	___fladd@signs
  9173  17E9                     l2557:
  9174  17E9  1C64               	btfss	___fladd@bexp,0
  9175  17EA  2FEC               	goto	u3621
  9176  17EB  2FED               	goto	u3620
  9177  17EC                     u3621:
  9178  17EC  2FEF               	goto	l2561
  9179  17ED                     u3620:
  9180  17ED                     l2559:
  9181  17ED  17D4               	bsf	___fladd@b+2,7
  9182  17EE  2FF3               	goto	l737
  9183  17EF                     l2561:
  9184  17EF  307F               	movlw	127
  9185  17F0  00DA               	movwf	??___fladd
  9186  17F1  085A               	movf	??___fladd,w
  9187  17F2  05D4               	andwf	___fladd@b+2,f
  9188  17F3                     l737:
  9189  17F3  0864               	movf	___fladd@bexp,w
  9190  17F4  00DA               	movwf	??___fladd
  9191  17F5  1003               	clrc
  9192  17F6  0C5A               	rrf	??___fladd,w
  9193  17F7  00DB               	movwf	??___fladd+1
  9194  17F8  085B               	movf	??___fladd+1,w
  9195  17F9  00D5               	movwf	___fladd@b+3
  9196  17FA                     l2563:
  9197  17FA  1FE2               	btfss	___fladd@signs,7
  9198  17FB  2FFD               	goto	u3631
  9199  17FC  2FFE               	goto	u3630
  9200  17FD                     u3631:
  9201  17FD  2FFF               	goto	l738
  9202  17FE                     u3630:
  9203  17FE                     l2565:
  9204  17FE  17D5               	bsf	___fladd@b+3,7
  9205  17FF                     l738:
  9206  17FF                     l708:
  9207  17FF  0008               	return
  9208  1800                     __end_of___fladd:
  9209                           
  9210                           	psect	text20
  9211  1C46                     __ptext20:	
  9212 ;; *************** function ___flneg *****************
  9213 ;; Defined at:
  9214 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  9215 ;; Parameters:    Size  Location     Type
  9216 ;;  f1              4    0[COMMON] unsigned char 
  9217 ;; Auto vars:     Size  Location     Type
  9218 ;;		None
  9219 ;; Return value:  Size  Location     Type
  9220 ;;                  4    0[COMMON] unsigned char 
  9221 ;; Registers used:
  9222 ;;		wreg
  9223 ;; Tracked objects:
  9224 ;;		On entry : 0/0
  9225 ;;		On exit  : 0/0
  9226 ;;		Unchanged: 0/0
  9227 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9228 ;;      Params:         4       0       0       0       0
  9229 ;;      Locals:         0       0       0       0       0
  9230 ;;      Temps:          0       0       0       0       0
  9231 ;;      Totals:         4       0       0       0       0
  9232 ;;Total ram usage:        4 bytes
  9233 ;; Hardware stack levels used:    1
  9234 ;; This function calls:
  9235 ;;		Nothing
  9236 ;; This function is called by:
  9237 ;;		_sprintf
  9238 ;; This function uses a non-reentrant model
  9239 ;;
  9240                           
  9241                           
  9242                           ;psect for function ___flneg
  9243  1C46                     ___flneg:
  9244  1C46                     l2975:	
  9245                           ;incstack = 0
  9246                           ; Regs used in ___flneg: [wreg]
  9247                           
  9248  1C46  0873               	movf	___flneg@f1+3,w
  9249  1C47  0472               	iorwf	___flneg@f1+2,w
  9250  1C48  0471               	iorwf	___flneg@f1+1,w
  9251  1C49  0470               	iorwf	___flneg@f1,w
  9252  1C4A  1903               	skipnz
  9253  1C4B  2C4D               	goto	u4761
  9254  1C4C  2C4E               	goto	u4760
  9255  1C4D                     u4761:
  9256  1C4D  2C50               	goto	l2979
  9257  1C4E                     u4760:
  9258  1C4E                     l2977:
  9259  1C4E  3080               	movlw	128
  9260  1C4F  06F3               	xorwf	___flneg@f1+3,f
  9261  1C50                     l2979:
  9262  1C50                     l567:
  9263  1C50  0008               	return
  9264  1C51                     __end_of___flneg:
  9265                           
  9266                           	psect	text21
  9267  1F5E                     __ptext21:	
  9268 ;; *************** function ___flge *****************
  9269 ;; Defined at:
  9270 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  9271 ;; Parameters:    Size  Location     Type
  9272 ;;  ff1             4    0[COMMON] unsigned char 
  9273 ;;  ff2             4    4[COMMON] unsigned char 
  9274 ;; Auto vars:     Size  Location     Type
  9275 ;;		None
  9276 ;; Return value:  Size  Location     Type
  9277 ;;		None               void
  9278 ;; Registers used:
  9279 ;;		wreg, status,2, status,0
  9280 ;; Tracked objects:
  9281 ;;		On entry : 0/0
  9282 ;;		On exit  : 0/0
  9283 ;;		Unchanged: 0/0
  9284 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9285 ;;      Params:         8       0       0       0       0
  9286 ;;      Locals:         0       0       0       0       0
  9287 ;;      Temps:          4       0       0       0       0
  9288 ;;      Totals:        12       0       0       0       0
  9289 ;;Total ram usage:       12 bytes
  9290 ;; Hardware stack levels used:    1
  9291 ;; This function calls:
  9292 ;;		Nothing
  9293 ;; This function is called by:
  9294 ;;		_sprintf
  9295 ;; This function uses a non-reentrant model
  9296 ;;
  9297                           
  9298                           
  9299                           ;psect for function ___flge
  9300  1F5E                     ___flge:
  9301  1F5E                     l2955:	
  9302                           ;incstack = 0
  9303                           ; Regs used in ___flge: [wreg+status,2+status,0]
  9304                           
  9305  1F5E  3000               	movlw	0
  9306  1F5F  0570               	andwf	___flge@ff1,w
  9307  1F60  00F8               	movwf	??___flge
  9308  1F61  3000               	movlw	0
  9309  1F62  0571               	andwf	___flge@ff1+1,w
  9310  1F63  00F9               	movwf	??___flge+1
  9311  1F64  3080               	movlw	128
  9312  1F65  0572               	andwf	___flge@ff1+2,w
  9313  1F66  00FA               	movwf	??___flge+2
  9314  1F67  307F               	movlw	127
  9315  1F68  0573               	andwf	___flge@ff1+3,w
  9316  1F69  00FB               	movwf	??___flge+3
  9317  1F6A  087B               	movf	??___flge+3,w
  9318  1F6B  047A               	iorwf	??___flge+2,w
  9319  1F6C  0479               	iorwf	??___flge+1,w
  9320  1F6D  0478               	iorwf	??___flge,w
  9321  1F6E  1D03               	skipz
  9322  1F6F  2F71               	goto	u4691
  9323  1F70  2F72               	goto	u4690
  9324  1F71                     u4691:
  9325  1F71  2F7A               	goto	l559
  9326  1F72                     u4690:
  9327  1F72                     l2957:
  9328  1F72  3000               	movlw	0
  9329  1F73  00F3               	movwf	___flge@ff1+3
  9330  1F74  3000               	movlw	0
  9331  1F75  00F2               	movwf	___flge@ff1+2
  9332  1F76  3000               	movlw	0
  9333  1F77  00F1               	movwf	___flge@ff1+1
  9334  1F78  3000               	movlw	0
  9335  1F79  00F0               	movwf	___flge@ff1
  9336  1F7A                     l559:
  9337  1F7A  3000               	movlw	0
  9338  1F7B  0574               	andwf	___flge@ff2,w
  9339  1F7C  00F8               	movwf	??___flge
  9340  1F7D  3000               	movlw	0
  9341  1F7E  0575               	andwf	___flge@ff2+1,w
  9342  1F7F  00F9               	movwf	??___flge+1
  9343  1F80  3080               	movlw	128
  9344  1F81  0576               	andwf	___flge@ff2+2,w
  9345  1F82  00FA               	movwf	??___flge+2
  9346  1F83  307F               	movlw	127
  9347  1F84  0577               	andwf	___flge@ff2+3,w
  9348  1F85  00FB               	movwf	??___flge+3
  9349  1F86  087B               	movf	??___flge+3,w
  9350  1F87  047A               	iorwf	??___flge+2,w
  9351  1F88  0479               	iorwf	??___flge+1,w
  9352  1F89  0478               	iorwf	??___flge,w
  9353  1F8A  1D03               	skipz
  9354  1F8B  2F8D               	goto	u4701
  9355  1F8C  2F8E               	goto	u4700
  9356  1F8D                     u4701:
  9357  1F8D  2F96               	goto	l2961
  9358  1F8E                     u4700:
  9359  1F8E                     l2959:
  9360  1F8E  3000               	movlw	0
  9361  1F8F  00F7               	movwf	___flge@ff2+3
  9362  1F90  3000               	movlw	0
  9363  1F91  00F6               	movwf	___flge@ff2+2
  9364  1F92  3000               	movlw	0
  9365  1F93  00F5               	movwf	___flge@ff2+1
  9366  1F94  3000               	movlw	0
  9367  1F95  00F4               	movwf	___flge@ff2
  9368  1F96                     l2961:
  9369  1F96  1FF3               	btfss	___flge@ff1+3,7
  9370  1F97  2F99               	goto	u4711
  9371  1F98  2F9A               	goto	u4710
  9372  1F99                     u4711:
  9373  1F99  2FBE               	goto	l2965
  9374  1F9A                     u4710:
  9375  1F9A                     l2963:
  9376  1F9A  3000               	movlw	0
  9377  1F9B  00F8               	movwf	??___flge
  9378  1F9C  3000               	movlw	0
  9379  1F9D  00F9               	movwf	??___flge+1
  9380  1F9E  3000               	movlw	0
  9381  1F9F  00FA               	movwf	??___flge+2
  9382  1FA0  3080               	movlw	128
  9383  1FA1  00FB               	movwf	??___flge+3
  9384  1FA2  0870               	movf	___flge@ff1,w
  9385  1FA3  02F8               	subwf	??___flge,f
  9386  1FA4  0871               	movf	___flge@ff1+1,w
  9387  1FA5  1C03               	skipc
  9388  1FA6  0F71               	incfsz	___flge@ff1+1,w
  9389  1FA7  2FA9               	goto	u4721
  9390  1FA8  2FAA               	goto	u4722
  9391  1FA9                     u4721:
  9392  1FA9  02F9               	subwf	??___flge+1,f
  9393  1FAA                     u4722:
  9394  1FAA  0872               	movf	___flge@ff1+2,w
  9395  1FAB  1C03               	skipc
  9396  1FAC  0F72               	incfsz	___flge@ff1+2,w
  9397  1FAD  2FAF               	goto	u4723
  9398  1FAE  2FB0               	goto	u4724
  9399  1FAF                     u4723:
  9400  1FAF  02FA               	subwf	??___flge+2,f
  9401  1FB0                     u4724:
  9402  1FB0  0873               	movf	___flge@ff1+3,w
  9403  1FB1  1C03               	skipc
  9404  1FB2  0F73               	incfsz	___flge@ff1+3,w
  9405  1FB3  2FB5               	goto	u4725
  9406  1FB4  2FB6               	goto	u4726
  9407  1FB5                     u4725:
  9408  1FB5  02FB               	subwf	??___flge+3,f
  9409  1FB6                     u4726:
  9410  1FB6  087B               	movf	??___flge+3,w
  9411  1FB7  00F3               	movwf	___flge@ff1+3
  9412  1FB8  087A               	movf	??___flge+2,w
  9413  1FB9  00F2               	movwf	___flge@ff1+2
  9414  1FBA  0879               	movf	??___flge+1,w
  9415  1FBB  00F1               	movwf	___flge@ff1+1
  9416  1FBC  0878               	movf	??___flge,w
  9417  1FBD  00F0               	movwf	___flge@ff1
  9418  1FBE                     l2965:
  9419  1FBE  1FF7               	btfss	___flge@ff2+3,7
  9420  1FBF  2FC1               	goto	u4731
  9421  1FC0  2FC2               	goto	u4730
  9422  1FC1                     u4731:
  9423  1FC1  2FE6               	goto	l562
  9424  1FC2                     u4730:
  9425  1FC2                     l2967:
  9426  1FC2  3000               	movlw	0
  9427  1FC3  00F8               	movwf	??___flge
  9428  1FC4  3000               	movlw	0
  9429  1FC5  00F9               	movwf	??___flge+1
  9430  1FC6  3000               	movlw	0
  9431  1FC7  00FA               	movwf	??___flge+2
  9432  1FC8  3080               	movlw	128
  9433  1FC9  00FB               	movwf	??___flge+3
  9434  1FCA  0874               	movf	___flge@ff2,w
  9435  1FCB  02F8               	subwf	??___flge,f
  9436  1FCC  0875               	movf	___flge@ff2+1,w
  9437  1FCD  1C03               	skipc
  9438  1FCE  0F75               	incfsz	___flge@ff2+1,w
  9439  1FCF  2FD1               	goto	u4741
  9440  1FD0  2FD2               	goto	u4742
  9441  1FD1                     u4741:
  9442  1FD1  02F9               	subwf	??___flge+1,f
  9443  1FD2                     u4742:
  9444  1FD2  0876               	movf	___flge@ff2+2,w
  9445  1FD3  1C03               	skipc
  9446  1FD4  0F76               	incfsz	___flge@ff2+2,w
  9447  1FD5  2FD7               	goto	u4743
  9448  1FD6  2FD8               	goto	u4744
  9449  1FD7                     u4743:
  9450  1FD7  02FA               	subwf	??___flge+2,f
  9451  1FD8                     u4744:
  9452  1FD8  0877               	movf	___flge@ff2+3,w
  9453  1FD9  1C03               	skipc
  9454  1FDA  0F77               	incfsz	___flge@ff2+3,w
  9455  1FDB  2FDD               	goto	u4745
  9456  1FDC  2FDE               	goto	u4746
  9457  1FDD                     u4745:
  9458  1FDD  02FB               	subwf	??___flge+3,f
  9459  1FDE                     u4746:
  9460  1FDE  087B               	movf	??___flge+3,w
  9461  1FDF  00F7               	movwf	___flge@ff2+3
  9462  1FE0  087A               	movf	??___flge+2,w
  9463  1FE1  00F6               	movwf	___flge@ff2+2
  9464  1FE2  0879               	movf	??___flge+1,w
  9465  1FE3  00F5               	movwf	___flge@ff2+1
  9466  1FE4  0878               	movf	??___flge,w
  9467  1FE5  00F4               	movwf	___flge@ff2
  9468  1FE6                     l562:
  9469  1FE6  3080               	movlw	128
  9470  1FE7  06F3               	xorwf	___flge@ff1+3,f
  9471  1FE8  3080               	movlw	128
  9472  1FE9  06F7               	xorwf	___flge@ff2+3,f
  9473  1FEA  0877               	movf	___flge@ff2+3,w
  9474  1FEB  0273               	subwf	___flge@ff1+3,w
  9475  1FEC  1D03               	skipz
  9476  1FED  2FF8               	goto	u4755
  9477  1FEE  0876               	movf	___flge@ff2+2,w
  9478  1FEF  0272               	subwf	___flge@ff1+2,w
  9479  1FF0  1D03               	skipz
  9480  1FF1  2FF8               	goto	u4755
  9481  1FF2  0875               	movf	___flge@ff2+1,w
  9482  1FF3  0271               	subwf	___flge@ff1+1,w
  9483  1FF4  1D03               	skipz
  9484  1FF5  2FF8               	goto	u4755
  9485  1FF6  0874               	movf	___flge@ff2,w
  9486  1FF7  0270               	subwf	___flge@ff1,w
  9487  1FF8                     u4755:
  9488  1FF8  1803               	skipnc
  9489  1FF9  2FFB               	goto	u4751
  9490  1FFA  2FFC               	goto	u4750
  9491  1FFB                     u4751:
  9492  1FFB  2FFE               	goto	l2971
  9493  1FFC                     u4750:
  9494  1FFC                     l2969:
  9495  1FFC  1003               	clrc
  9496  1FFD  2FFF               	goto	l563
  9497  1FFE                     l2971:
  9498  1FFE  1403               	setc
  9499  1FFF                     l563:
  9500  1FFF  0008               	return
  9501  2000                     __end_of___flge:
  9502                           
  9503                           	psect	text22
  9504  1E63                     __ptext22:	
  9505 ;; *************** function ___fleq *****************
  9506 ;; Defined at:
  9507 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  9508 ;; Parameters:    Size  Location     Type
  9509 ;;  ff1             4    0[COMMON] unsigned char 
  9510 ;;  ff2             4    4[COMMON] unsigned char 
  9511 ;; Auto vars:     Size  Location     Type
  9512 ;;		None
  9513 ;; Return value:  Size  Location     Type
  9514 ;;		None               void
  9515 ;; Registers used:
  9516 ;;		wreg, status,2, status,0
  9517 ;; Tracked objects:
  9518 ;;		On entry : 0/0
  9519 ;;		On exit  : 0/0
  9520 ;;		Unchanged: 0/0
  9521 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9522 ;;      Params:         8       0       0       0       0
  9523 ;;      Locals:         0       0       0       0       0
  9524 ;;      Temps:          4       0       0       0       0
  9525 ;;      Totals:        12       0       0       0       0
  9526 ;;Total ram usage:       12 bytes
  9527 ;; Hardware stack levels used:    1
  9528 ;; This function calls:
  9529 ;;		Nothing
  9530 ;; This function is called by:
  9531 ;;		_sprintf
  9532 ;; This function uses a non-reentrant model
  9533 ;;
  9534                           
  9535                           
  9536                           ;psect for function ___fleq
  9537  1E63                     ___fleq:
  9538  1E63                     l2943:	
  9539                           ;incstack = 0
  9540                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  9541                           
  9542  1E63  3000               	movlw	0
  9543  1E64  0570               	andwf	___fleq@ff1,w
  9544  1E65  00F8               	movwf	??___fleq
  9545  1E66  3000               	movlw	0
  9546  1E67  0571               	andwf	___fleq@ff1+1,w
  9547  1E68  00F9               	movwf	??___fleq+1
  9548  1E69  3080               	movlw	128
  9549  1E6A  0572               	andwf	___fleq@ff1+2,w
  9550  1E6B  00FA               	movwf	??___fleq+2
  9551  1E6C  307F               	movlw	127
  9552  1E6D  0573               	andwf	___fleq@ff1+3,w
  9553  1E6E  00FB               	movwf	??___fleq+3
  9554  1E6F  087B               	movf	??___fleq+3,w
  9555  1E70  047A               	iorwf	??___fleq+2,w
  9556  1E71  0479               	iorwf	??___fleq+1,w
  9557  1E72  0478               	iorwf	??___fleq,w
  9558  1E73  1D03               	skipz
  9559  1E74  2E76               	goto	u4661
  9560  1E75  2E77               	goto	u4660
  9561  1E76                     u4661:
  9562  1E76  2E7F               	goto	l554
  9563  1E77                     u4660:
  9564  1E77                     l2945:
  9565  1E77  3000               	movlw	0
  9566  1E78  00F3               	movwf	___fleq@ff1+3
  9567  1E79  3000               	movlw	0
  9568  1E7A  00F2               	movwf	___fleq@ff1+2
  9569  1E7B  3000               	movlw	0
  9570  1E7C  00F1               	movwf	___fleq@ff1+1
  9571  1E7D  3000               	movlw	0
  9572  1E7E  00F0               	movwf	___fleq@ff1
  9573  1E7F                     l554:
  9574  1E7F  3000               	movlw	0
  9575  1E80  0574               	andwf	___fleq@ff2,w
  9576  1E81  00F8               	movwf	??___fleq
  9577  1E82  3000               	movlw	0
  9578  1E83  0575               	andwf	___fleq@ff2+1,w
  9579  1E84  00F9               	movwf	??___fleq+1
  9580  1E85  3080               	movlw	128
  9581  1E86  0576               	andwf	___fleq@ff2+2,w
  9582  1E87  00FA               	movwf	??___fleq+2
  9583  1E88  307F               	movlw	127
  9584  1E89  0577               	andwf	___fleq@ff2+3,w
  9585  1E8A  00FB               	movwf	??___fleq+3
  9586  1E8B  087B               	movf	??___fleq+3,w
  9587  1E8C  047A               	iorwf	??___fleq+2,w
  9588  1E8D  0479               	iorwf	??___fleq+1,w
  9589  1E8E  0478               	iorwf	??___fleq,w
  9590  1E8F  1D03               	skipz
  9591  1E90  2E92               	goto	u4671
  9592  1E91  2E93               	goto	u4670
  9593  1E92                     u4671:
  9594  1E92  2E9B               	goto	l555
  9595  1E93                     u4670:
  9596  1E93                     l2947:
  9597  1E93  3000               	movlw	0
  9598  1E94  00F7               	movwf	___fleq@ff2+3
  9599  1E95  3000               	movlw	0
  9600  1E96  00F6               	movwf	___fleq@ff2+2
  9601  1E97  3000               	movlw	0
  9602  1E98  00F5               	movwf	___fleq@ff2+1
  9603  1E99  3000               	movlw	0
  9604  1E9A  00F4               	movwf	___fleq@ff2
  9605  1E9B                     l555:
  9606  1E9B  0877               	movf	___fleq@ff2+3,w
  9607  1E9C  0673               	xorwf	___fleq@ff1+3,w
  9608  1E9D  1D03               	skipz
  9609  1E9E  2EA9               	goto	u4685
  9610  1E9F  0876               	movf	___fleq@ff2+2,w
  9611  1EA0  0672               	xorwf	___fleq@ff1+2,w
  9612  1EA1  1D03               	skipz
  9613  1EA2  2EA9               	goto	u4685
  9614  1EA3  0875               	movf	___fleq@ff2+1,w
  9615  1EA4  0671               	xorwf	___fleq@ff1+1,w
  9616  1EA5  1D03               	skipz
  9617  1EA6  2EA9               	goto	u4685
  9618  1EA7  0874               	movf	___fleq@ff2,w
  9619  1EA8  0670               	xorwf	___fleq@ff1,w
  9620  1EA9                     u4685:
  9621  1EA9  1903               	skipnz
  9622  1EAA  2EAC               	goto	u4681
  9623  1EAB  2EAD               	goto	u4680
  9624  1EAC                     u4681:
  9625  1EAC  2EAF               	goto	l2951
  9626  1EAD                     u4680:
  9627  1EAD                     l2949:
  9628  1EAD  1003               	clrc
  9629  1EAE  2EB0               	goto	l556
  9630  1EAF                     l2951:
  9631  1EAF  1403               	setc
  9632  1EB0                     l556:
  9633  1EB0  0008               	return
  9634  1EB1                     __end_of___fleq:
  9635                           
  9636                           	psect	text23
  9637  1C3D                     __ptext23:	
  9638 ;; *************** function _spiRead *****************
  9639 ;; Defined at:
  9640 ;;		line 47 in file "SPI.c"
  9641 ;; Parameters:    Size  Location     Type
  9642 ;;		None
  9643 ;; Auto vars:     Size  Location     Type
  9644 ;;		None
  9645 ;; Return value:  Size  Location     Type
  9646 ;;                  1    wreg      unsigned char 
  9647 ;; Registers used:
  9648 ;;		wreg, status,2, status,0, pclath, cstack
  9649 ;; Tracked objects:
  9650 ;;		On entry : 0/0
  9651 ;;		On exit  : 0/0
  9652 ;;		Unchanged: 0/0
  9653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9654 ;;      Params:         0       0       0       0       0
  9655 ;;      Locals:         0       0       0       0       0
  9656 ;;      Temps:          0       0       0       0       0
  9657 ;;      Totals:         0       0       0       0       0
  9658 ;;Total ram usage:        0 bytes
  9659 ;; Hardware stack levels used:    1
  9660 ;; Hardware stack levels required when called:    1
  9661 ;; This function calls:
  9662 ;;		_spiReceiveWait
  9663 ;; This function is called by:
  9664 ;;		_main
  9665 ;; This function uses a non-reentrant model
  9666 ;;
  9667                           
  9668                           
  9669                           ;psect for function _spiRead
  9670  1C3D                     _spiRead:
  9671  1C3D                     l3405:	
  9672                           ;incstack = 0
  9673                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  9674                           
  9675                           
  9676                           ;SPI.c: 49:     spiReceiveWait();
  9677  1C3D  160A  158A  242E  160A  158A  	fcall	_spiReceiveWait
  9678  1C42                     l3407:
  9679                           
  9680                           ;SPI.c: 50:     return(SSPBUF);
  9681  1C42  1283               	bcf	3,5	;RP0=0, select bank0
  9682  1C43  1303               	bcf	3,6	;RP1=0, select bank0
  9683  1C44  0813               	movf	19,w	;volatile
  9684  1C45                     l172:
  9685  1C45  0008               	return
  9686  1C46                     __end_of_spiRead:
  9687                           
  9688                           	psect	text24
  9689  1C2E                     __ptext24:	
  9690 ;; *************** function _spiReceiveWait *****************
  9691 ;; Defined at:
  9692 ;;		line 29 in file "SPI.c"
  9693 ;; Parameters:    Size  Location     Type
  9694 ;;		None
  9695 ;; Auto vars:     Size  Location     Type
  9696 ;;		None
  9697 ;; Return value:  Size  Location     Type
  9698 ;;                  1    wreg      void 
  9699 ;; Registers used:
  9700 ;;		None
  9701 ;; Tracked objects:
  9702 ;;		On entry : 0/0
  9703 ;;		On exit  : 0/0
  9704 ;;		Unchanged: 0/0
  9705 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9706 ;;      Params:         0       0       0       0       0
  9707 ;;      Locals:         0       0       0       0       0
  9708 ;;      Temps:          0       0       0       0       0
  9709 ;;      Totals:         0       0       0       0       0
  9710 ;;Total ram usage:        0 bytes
  9711 ;; Hardware stack levels used:    1
  9712 ;; This function calls:
  9713 ;;		Nothing
  9714 ;; This function is called by:
  9715 ;;		_spiRead
  9716 ;; This function uses a non-reentrant model
  9717 ;;
  9718                           
  9719                           
  9720                           ;psect for function _spiReceiveWait
  9721  1C2E                     _spiReceiveWait:
  9722  1C2E                     l2729:	
  9723                           ;incstack = 0
  9724                           ; Regs used in _spiReceiveWait: []
  9725                           
  9726  1C2E                     l158:	
  9727                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  9728                           
  9729  1C2E  1683               	bsf	3,5	;RP0=1, select bank1
  9730  1C2F  1303               	bcf	3,6	;RP1=0, select bank1
  9731  1C30  1C14               	btfss	20,0	;volatile
  9732  1C31  2C33               	goto	u4011
  9733  1C32  2C34               	goto	u4010
  9734  1C33                     u4011:
  9735  1C33  2C2E               	goto	l158
  9736  1C34                     u4010:
  9737  1C34                     l161:
  9738  1C34  0008               	return
  9739  1C35                     __end_of_spiReceiveWait:
  9740                           
  9741                           	psect	text25
  9742  1C83                     __ptext25:	
  9743 ;; *************** function _spiInit *****************
  9744 ;; Defined at:
  9745 ;;		line 12 in file "SPI.c"
  9746 ;; Parameters:    Size  Location     Type
  9747 ;;  sType           1    wreg     enum E1264
  9748 ;;  sDataSample     1    0[COMMON] enum E1272
  9749 ;;  sClockIdle      1    1[COMMON] enum E1276
  9750 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  9751 ;; Auto vars:     Size  Location     Type
  9752 ;;  sType           1    3[COMMON] enum E1264
  9753 ;; Return value:  Size  Location     Type
  9754 ;;                  1    wreg      void 
  9755 ;; Registers used:
  9756 ;;		wreg, status,2, status,0
  9757 ;; Tracked objects:
  9758 ;;		On entry : 0/0
  9759 ;;		On exit  : 0/0
  9760 ;;		Unchanged: 0/0
  9761 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9762 ;;      Params:         3       0       0       0       0
  9763 ;;      Locals:         1       0       0       0       0
  9764 ;;      Temps:          0       0       0       0       0
  9765 ;;      Totals:         4       0       0       0       0
  9766 ;;Total ram usage:        4 bytes
  9767 ;; Hardware stack levels used:    1
  9768 ;; This function calls:
  9769 ;;		Nothing
  9770 ;; This function is called by:
  9771 ;;		_main
  9772 ;; This function uses a non-reentrant model
  9773 ;;
  9774                           
  9775                           
  9776                           ;psect for function _spiInit
  9777  1C83                     _spiInit:
  9778                           
  9779                           ;incstack = 0
  9780                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  9781                           ;spiInit@sType stored from wreg
  9782  1C83  00F3               	movwf	spiInit@sType
  9783  1C84                     l3133:
  9784                           
  9785                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  9786  1C84  1683               	bsf	3,5	;RP0=1, select bank1
  9787  1C85  1303               	bcf	3,6	;RP1=0, select bank1
  9788  1C86  1287               	bcf	7,5	;volatile
  9789                           
  9790                           ;SPI.c: 15:     if(sType & 0b00000100)
  9791  1C87  1D73               	btfss	spiInit@sType,2
  9792  1C88  2C8A               	goto	u5121
  9793  1C89  2C8B               	goto	u5120
  9794  1C8A                     u5121:
  9795  1C8A  2C8F               	goto	l3139
  9796  1C8B                     u5120:
  9797  1C8B                     l3135:
  9798                           
  9799                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  9800  1C8B  0872               	movf	spiInit@sTransmitEdge,w
  9801  1C8C  0094               	movwf	20	;volatile
  9802  1C8D                     l3137:
  9803                           
  9804                           ;SPI.c: 18:         TRISC3 = 1;
  9805  1C8D  1587               	bsf	7,3	;volatile
  9806                           
  9807                           ;SPI.c: 19:     }
  9808  1C8E  2C93               	goto	l154
  9809  1C8F                     l3139:
  9810                           
  9811                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  9812  1C8F  0870               	movf	spiInit@sDataSample,w
  9813  1C90  0472               	iorwf	spiInit@sTransmitEdge,w
  9814  1C91  0094               	movwf	20	;volatile
  9815  1C92                     l3141:
  9816                           
  9817                           ;SPI.c: 23:         TRISC3 = 0;
  9818  1C92  1187               	bcf	7,3	;volatile
  9819  1C93                     l154:	
  9820                           ;SPI.c: 24:     }
  9821                           
  9822                           
  9823                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  9824  1C93  0873               	movf	spiInit@sType,w
  9825  1C94  0471               	iorwf	spiInit@sClockIdle,w
  9826  1C95  1283               	bcf	3,5	;RP0=0, select bank0
  9827  1C96  1303               	bcf	3,6	;RP1=0, select bank0
  9828  1C97  0094               	movwf	20	;volatile
  9829  1C98                     l155:
  9830  1C98  0008               	return
  9831  1C99                     __end_of_spiInit:
  9832                           
  9833                           	psect	text26
  9834  1C70                     __ptext26:	
  9835 ;; *************** function _setup *****************
  9836 ;; Defined at:
  9837 ;;		line 62 in file "main.c"
  9838 ;; Parameters:    Size  Location     Type
  9839 ;;		None
  9840 ;; Auto vars:     Size  Location     Type
  9841 ;;		None
  9842 ;; Return value:  Size  Location     Type
  9843 ;;                  1    wreg      void 
  9844 ;; Registers used:
  9845 ;;		wreg, status,2
  9846 ;; Tracked objects:
  9847 ;;		On entry : 0/0
  9848 ;;		On exit  : 0/0
  9849 ;;		Unchanged: 0/0
  9850 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9851 ;;      Params:         0       0       0       0       0
  9852 ;;      Locals:         0       0       0       0       0
  9853 ;;      Temps:          0       0       0       0       0
  9854 ;;      Totals:         0       0       0       0       0
  9855 ;;Total ram usage:        0 bytes
  9856 ;; Hardware stack levels used:    1
  9857 ;; This function calls:
  9858 ;;		Nothing
  9859 ;; This function is called by:
  9860 ;;		_main
  9861 ;; This function uses a non-reentrant model
  9862 ;;
  9863                           
  9864                           
  9865                           ;psect for function _setup
  9866  1C70                     _setup:
  9867  1C70                     l3121:	
  9868                           ;incstack = 0
  9869                           ; Regs used in _setup: [wreg+status,2]
  9870                           
  9871                           
  9872                           ;main.c: 63:     TRISD = 0b00000000;
  9873  1C70  1683               	bsf	3,5	;RP0=1, select bank1
  9874  1C71  1303               	bcf	3,6	;RP1=0, select bank1
  9875  1C72  0188               	clrf	8	;volatile
  9876  1C73                     l3123:
  9877                           
  9878                           ;main.c: 64:     TRISC = 0b10010000;
  9879  1C73  3090               	movlw	144
  9880  1C74  0087               	movwf	7	;volatile
  9881  1C75                     l3125:
  9882                           
  9883                           ;main.c: 65:     TRISE = 0b00000000;
  9884  1C75  0189               	clrf	9	;volatile
  9885  1C76                     l3127:
  9886                           
  9887                           ;main.c: 66:     TRISB = 0b00000000;
  9888  1C76  0186               	clrf	6	;volatile
  9889  1C77                     l3129:
  9890                           
  9891                           ;main.c: 67:     ANSEL = 0b00000011;
  9892  1C77  3003               	movlw	3
  9893  1C78  1683               	bsf	3,5	;RP0=1, select bank3
  9894  1C79  1703               	bsf	3,6	;RP1=1, select bank3
  9895  1C7A  0088               	movwf	8	;volatile
  9896                           
  9897                           ;main.c: 68:     PORTC = 0;
  9898  1C7B  1283               	bcf	3,5	;RP0=0, select bank0
  9899  1C7C  1303               	bcf	3,6	;RP1=0, select bank0
  9900  1C7D  0187               	clrf	7	;volatile
  9901                           
  9902                           ;main.c: 69:     PORTD = 0;
  9903  1C7E  0188               	clrf	8	;volatile
  9904                           
  9905                           ;main.c: 70:     PORTE = 0;
  9906  1C7F  0189               	clrf	9	;volatile
  9907                           
  9908                           ;main.c: 71:     PORTB = 0;
  9909  1C80  0186               	clrf	6	;volatile
  9910  1C81                     l3131:
  9911                           
  9912                           ;main.c: 72:     PORTAbits.RA0 = 1;
  9913  1C81  1405               	bsf	5,0	;volatile
  9914  1C82                     l88:
  9915  1C82  0008               	return
  9916  1C83                     __end_of_setup:
  9917                           
  9918                           	psect	text27
  9919  1DDD                     __ptext27:	
  9920 ;; *************** function _Lcd_Write_String *****************
  9921 ;; Defined at:
  9922 ;;		line 67 in file "LCD.c"
  9923 ;; Parameters:    Size  Location     Type
  9924 ;;  a               2    3[COMMON] PTR unsigned char 
  9925 ;;		 -> s(20), STR_1(17), 
  9926 ;; Auto vars:     Size  Location     Type
  9927 ;;  i               2    8[COMMON] int 
  9928 ;; Return value:  Size  Location     Type
  9929 ;;                  1    wreg      void 
  9930 ;; Registers used:
  9931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9932 ;; Tracked objects:
  9933 ;;		On entry : 0/0
  9934 ;;		On exit  : 0/0
  9935 ;;		Unchanged: 0/0
  9936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9937 ;;      Params:         2       0       0       0       0
  9938 ;;      Locals:         2       0       0       0       0
  9939 ;;      Temps:          3       0       0       0       0
  9940 ;;      Totals:         7       0       0       0       0
  9941 ;;Total ram usage:        7 bytes
  9942 ;; Hardware stack levels used:    1
  9943 ;; Hardware stack levels required when called:    2
  9944 ;; This function calls:
  9945 ;;		_Lcd_Write_Char
  9946 ;; This function is called by:
  9947 ;;		_main
  9948 ;; This function uses a non-reentrant model
  9949 ;;
  9950                           
  9951                           
  9952                           ;psect for function _Lcd_Write_String
  9953  1DDD                     _Lcd_Write_String:
  9954  1DDD                     l3113:	
  9955                           ;incstack = 0
  9956                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9957                           
  9958                           
  9959                           ;LCD.c: 68:     int i;;LCD.c: 69:     for (i = 0; a[i] != '\0'; i++)
  9960  1DDD  01F8               	clrf	Lcd_Write_String@i
  9961  1DDE  01F9               	clrf	Lcd_Write_String@i+1
  9962  1DDF  2E02               	goto	l3119
  9963  1DE0                     l3115:
  9964                           
  9965                           ;LCD.c: 70:         Lcd_Write_Char(a[i]);
  9966  1DE0  0878               	movf	Lcd_Write_String@i,w
  9967  1DE1  0773               	addwf	Lcd_Write_String@a,w
  9968  1DE2  00F6               	movwf	??_Lcd_Write_String+1
  9969  1DE3  0874               	movf	Lcd_Write_String@a+1,w
  9970  1DE4  00F5               	movwf	??_Lcd_Write_String
  9971  1DE5  1803               	skipnc
  9972  1DE6  0AF5               	incf	??_Lcd_Write_String,f
  9973  1DE7  1FF8               	btfss	Lcd_Write_String@i,7
  9974  1DE8  2DEA               	goto	u5090
  9975  1DE9  03F5               	decf	??_Lcd_Write_String,f
  9976  1DEA                     u5090:
  9977  1DEA  0875               	movf	??_Lcd_Write_String,w
  9978  1DEB  00F7               	movwf	??_Lcd_Write_String+2
  9979  1DEC  0877               	movf	??_Lcd_Write_String+2,w
  9980  1DED  1283               	bcf	3,5	;RP0=0, select bank0
  9981  1DEE  1303               	bcf	3,6	;RP1=0, select bank0
  9982  1DEF  00FF               	movwf	btemp+1
  9983  1DF0  0876               	movf	??_Lcd_Write_String+1,w
  9984  1DF1  0084               	movwf	4
  9985  1DF2  160A  118A  2000  160A  158A  	fcall	stringtab
  9986  1DF7  160A  158A  24B3  160A  158A  	fcall	_Lcd_Write_Char
  9987  1DFC                     l3117:
  9988  1DFC  3001               	movlw	1
  9989  1DFD  07F8               	addwf	Lcd_Write_String@i,f
  9990  1DFE  1803               	skipnc
  9991  1DFF  0AF9               	incf	Lcd_Write_String@i+1,f
  9992  1E00  3000               	movlw	0
  9993  1E01  07F9               	addwf	Lcd_Write_String@i+1,f
  9994  1E02                     l3119:
  9995  1E02  0878               	movf	Lcd_Write_String@i,w
  9996  1E03  0773               	addwf	Lcd_Write_String@a,w
  9997  1E04  00F6               	movwf	??_Lcd_Write_String+1
  9998  1E05  0874               	movf	Lcd_Write_String@a+1,w
  9999  1E06  00F5               	movwf	??_Lcd_Write_String
 10000  1E07  1803               	skipnc
 10001  1E08  0AF5               	incf	??_Lcd_Write_String,f
 10002  1E09  1FF8               	btfss	Lcd_Write_String@i,7
 10003  1E0A  2E0C               	goto	u5100
 10004  1E0B  03F5               	decf	??_Lcd_Write_String,f
 10005  1E0C                     u5100:
 10006  1E0C  0875               	movf	??_Lcd_Write_String,w
 10007  1E0D  00F7               	movwf	??_Lcd_Write_String+2
 10008  1E0E  0877               	movf	??_Lcd_Write_String+2,w
 10009  1E0F  1283               	bcf	3,5	;RP0=0, select bank0
 10010  1E10  1303               	bcf	3,6	;RP1=0, select bank0
 10011  1E11  00FF               	movwf	btemp+1
 10012  1E12  0876               	movf	??_Lcd_Write_String+1,w
 10013  1E13  0084               	movwf	4
 10014  1E14  160A  118A  2000  160A  158A  	fcall	stringtab
 10015  1E19  3A00               	xorlw	0
 10016  1E1A  1D03               	skipz
 10017  1E1B  2E1D               	goto	u5111
 10018  1E1C  2E1E               	goto	u5110
 10019  1E1D                     u5111:
 10020  1E1D  2DE0               	goto	l3115
 10021  1E1E                     u5110:
 10022  1E1E                     l33:
 10023  1E1E  0008               	return
 10024  1E1F                     __end_of_Lcd_Write_String:
 10025                           
 10026                           	psect	text28
 10027  1CB3                     __ptext28:	
 10028 ;; *************** function _Lcd_Write_Char *****************
 10029 ;; Defined at:
 10030 ;;		line 58 in file "LCD.c"
 10031 ;; Parameters:    Size  Location     Type
 10032 ;;  a               1    wreg     unsigned char 
 10033 ;; Auto vars:     Size  Location     Type
 10034 ;;  a               1    2[COMMON] unsigned char 
 10035 ;; Return value:  Size  Location     Type
 10036 ;;                  1    wreg      void 
 10037 ;; Registers used:
 10038 ;;		wreg, status,2, status,0, pclath, cstack
 10039 ;; Tracked objects:
 10040 ;;		On entry : 0/0
 10041 ;;		On exit  : 0/0
 10042 ;;		Unchanged: 0/0
 10043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10044 ;;      Params:         0       0       0       0       0
 10045 ;;      Locals:         1       0       0       0       0
 10046 ;;      Temps:          1       0       0       0       0
 10047 ;;      Totals:         2       0       0       0       0
 10048 ;;Total ram usage:        2 bytes
 10049 ;; Hardware stack levels used:    1
 10050 ;; Hardware stack levels required when called:    1
 10051 ;; This function calls:
 10052 ;;		_Lcd_Port
 10053 ;; This function is called by:
 10054 ;;		_Lcd_Write_String
 10055 ;; This function uses a non-reentrant model
 10056 ;;
 10057                           
 10058                           
 10059                           ;psect for function _Lcd_Write_Char
 10060  1CB3                     _Lcd_Write_Char:
 10061                           
 10062                           ;incstack = 0
 10063                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
 10064                           ;Lcd_Write_Char@a stored from wreg
 10065  1CB3  00F2               	movwf	Lcd_Write_Char@a
 10066  1CB4                     l2717:
 10067                           
 10068                           ;LCD.c: 59:     PORTEbits.RE0 = 1;
 10069  1CB4  1283               	bcf	3,5	;RP0=0, select bank0
 10070  1CB5  1303               	bcf	3,6	;RP1=0, select bank0
 10071  1CB6  1409               	bsf	9,0	;volatile
 10072  1CB7                     l2719:
 10073                           
 10074                           ;LCD.c: 60:     Lcd_Port(a);
 10075  1CB7  0872               	movf	Lcd_Write_Char@a,w
 10076  1CB8  160A  158A  2428  160A  158A  	fcall	_Lcd_Port
 10077  1CBD                     l2721:
 10078                           
 10079                           ;LCD.c: 61:     PORTEbits.RE1 = 1;
 10080  1CBD  1283               	bcf	3,5	;RP0=0, select bank0
 10081  1CBE  1303               	bcf	3,6	;RP1=0, select bank0
 10082  1CBF  1489               	bsf	9,1	;volatile
 10083  1CC0                     l2723:
 10084                           
 10085                           ;LCD.c: 62:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10086  1CC0  301A               	movlw	26
 10087  1CC1  00F1               	movwf	??_Lcd_Write_Char
 10088  1CC2                     u5647:
 10089  1CC2  0BF1               	decfsz	??_Lcd_Write_Char,f
 10090  1CC3  2CC2               	goto	u5647
 10091  1CC4  0000               	nop
 10092  1CC5                     l2725:
 10093                           
 10094                           ;LCD.c: 63:     PORTEbits.RE1 = 0;
 10095  1CC5  1283               	bcf	3,5	;RP0=0, select bank0
 10096  1CC6  1303               	bcf	3,6	;RP1=0, select bank0
 10097  1CC7  1089               	bcf	9,1	;volatile
 10098  1CC8                     l2727:
 10099                           
 10100                           ;LCD.c: 64:     _delay((unsigned long)((40)*(8000000/4000000.0)));
 10101  1CC8  301A               	movlw	26
 10102  1CC9  00F1               	movwf	??_Lcd_Write_Char
 10103  1CCA                     u5657:
 10104  1CCA  0BF1               	decfsz	??_Lcd_Write_Char,f
 10105  1CCB  2CCA               	goto	u5657
 10106  1CCC  0000               	nop
 10107  1CCD                     l27:
 10108  1CCD  0008               	return
 10109  1CCE                     __end_of_Lcd_Write_Char:
 10110                           
 10111                           	psect	text29
 10112  1CCE                     __ptext29:	
 10113 ;; *************** function _Lcd_Set_Cursor *****************
 10114 ;; Defined at:
 10115 ;;		line 33 in file "LCD.c"
 10116 ;; Parameters:    Size  Location     Type
 10117 ;;  a               1    wreg     unsigned char 
 10118 ;;  b               1    4[COMMON] unsigned char 
 10119 ;; Auto vars:     Size  Location     Type
 10120 ;;  a               1    6[COMMON] unsigned char 
 10121 ;;  temp            1    7[COMMON] unsigned char 
 10122 ;; Return value:  Size  Location     Type
 10123 ;;                  1    wreg      void 
 10124 ;; Registers used:
 10125 ;;		wreg, status,2, status,0, pclath, cstack
 10126 ;; Tracked objects:
 10127 ;;		On entry : 0/0
 10128 ;;		On exit  : 0/0
 10129 ;;		Unchanged: 0/0
 10130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10131 ;;      Params:         1       0       0       0       0
 10132 ;;      Locals:         2       0       0       0       0
 10133 ;;      Temps:          1       0       0       0       0
 10134 ;;      Totals:         4       0       0       0       0
 10135 ;;Total ram usage:        4 bytes
 10136 ;; Hardware stack levels used:    1
 10137 ;; Hardware stack levels required when called:    2
 10138 ;; This function calls:
 10139 ;;		_Lcd_Cmd
 10140 ;; This function is called by:
 10141 ;;		_main
 10142 ;; This function uses a non-reentrant model
 10143 ;;
 10144                           
 10145                           
 10146                           ;psect for function _Lcd_Set_Cursor
 10147  1CCE                     _Lcd_Set_Cursor:
 10148                           
 10149                           ;incstack = 0
 10150                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
 10151                           ;Lcd_Set_Cursor@a stored from wreg
 10152  1CCE  00F6               	movwf	Lcd_Set_Cursor@a
 10153  1CCF                     l3091:
 10154                           
 10155                           ;LCD.c: 34:     char temp;;LCD.c: 35:     if (a == 1) {
 10156  1CCF  0376               	decf	Lcd_Set_Cursor@a,w
 10157  1CD0  1D03               	btfss	3,2
 10158  1CD1  2CD3               	goto	u5071
 10159  1CD2  2CD4               	goto	u5070
 10160  1CD3                     u5071:
 10161  1CD3  2CE0               	goto	l3097
 10162  1CD4                     u5070:
 10163  1CD4                     l3093:
 10164                           
 10165                           ;LCD.c: 36:         temp = 0x80 + b - 1;
 10166  1CD4  0874               	movf	Lcd_Set_Cursor@b,w
 10167  1CD5  3E7F               	addlw	127
 10168  1CD6  00F5               	movwf	??_Lcd_Set_Cursor
 10169  1CD7  0875               	movf	??_Lcd_Set_Cursor,w
 10170  1CD8  00F7               	movwf	Lcd_Set_Cursor@temp
 10171  1CD9                     l3095:
 10172                           
 10173                           ;LCD.c: 37:         Lcd_Cmd(temp);
 10174  1CD9  0877               	movf	Lcd_Set_Cursor@temp,w
 10175  1CDA  160A  158A  2499  160A  158A  	fcall	_Lcd_Cmd
 10176                           
 10177                           ;LCD.c: 38:     } else if (a == 2) {
 10178  1CDF  2CF1               	goto	l21
 10179  1CE0                     l3097:
 10180  1CE0  3002               	movlw	2
 10181  1CE1  0676               	xorwf	Lcd_Set_Cursor@a,w
 10182  1CE2  1D03               	btfss	3,2
 10183  1CE3  2CE5               	goto	u5081
 10184  1CE4  2CE6               	goto	u5080
 10185  1CE5                     u5081:
 10186  1CE5  2CF1               	goto	l21
 10187  1CE6                     u5080:
 10188  1CE6                     l3099:
 10189                           
 10190                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
 10191  1CE6  0874               	movf	Lcd_Set_Cursor@b,w
 10192  1CE7  3EBF               	addlw	191
 10193  1CE8  00F5               	movwf	??_Lcd_Set_Cursor
 10194  1CE9  0875               	movf	??_Lcd_Set_Cursor,w
 10195  1CEA  00F7               	movwf	Lcd_Set_Cursor@temp
 10196  1CEB                     l3101:
 10197                           
 10198                           ;LCD.c: 40:         Lcd_Cmd(temp);
 10199  1CEB  0877               	movf	Lcd_Set_Cursor@temp,w
 10200  1CEC  160A  158A  2499  160A  158A  	fcall	_Lcd_Cmd
 10201  1CF1                     l21:
 10202  1CF1  0008               	return
 10203  1CF2                     __end_of_Lcd_Set_Cursor:
 10204                           
 10205                           	psect	text30
 10206  1D9C                     __ptext30:	
 10207 ;; *************** function _Lcd_Init *****************
 10208 ;; Defined at:
 10209 ;;		line 44 in file "LCD.c"
 10210 ;; Parameters:    Size  Location     Type
 10211 ;;		None
 10212 ;; Auto vars:     Size  Location     Type
 10213 ;;		None
 10214 ;; Return value:  Size  Location     Type
 10215 ;;                  1    wreg      void 
 10216 ;; Registers used:
 10217 ;;		wreg, status,2, status,0, pclath, cstack
 10218 ;; Tracked objects:
 10219 ;;		On entry : 0/0
 10220 ;;		On exit  : 0/0
 10221 ;;		Unchanged: 0/0
 10222 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10223 ;;      Params:         0       0       0       0       0
 10224 ;;      Locals:         0       0       0       0       0
 10225 ;;      Temps:          2       0       0       0       0
 10226 ;;      Totals:         2       0       0       0       0
 10227 ;;Total ram usage:        2 bytes
 10228 ;; Hardware stack levels used:    1
 10229 ;; Hardware stack levels required when called:    2
 10230 ;; This function calls:
 10231 ;;		_Lcd_Cmd
 10232 ;;		_Lcd_Port
 10233 ;; This function is called by:
 10234 ;;		_main
 10235 ;; This function uses a non-reentrant model
 10236 ;;
 10237                           
 10238                           
 10239                           ;psect for function _Lcd_Init
 10240  1D9C                     _Lcd_Init:
 10241  1D9C                     l3103:	
 10242                           ;incstack = 0
 10243                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
 10244                           
 10245                           
 10246                           ;LCD.c: 45:     Lcd_Port(0x00);
 10247  1D9C  3000               	movlw	0
 10248  1D9D  160A  158A  2428  160A  158A  	fcall	_Lcd_Port
 10249  1DA2                     l3105:
 10250                           
 10251                           ;LCD.c: 46:     _delay((unsigned long)((20)*(8000000/4000.0)));
 10252  1DA2  3034               	movlw	52
 10253  1DA3  00F5               	movwf	??_Lcd_Init+1
 10254  1DA4  30F1               	movlw	241
 10255  1DA5  00F4               	movwf	??_Lcd_Init
 10256  1DA6                     u5667:
 10257  1DA6  0BF4               	decfsz	??_Lcd_Init,f
 10258  1DA7  2DA6               	goto	u5667
 10259  1DA8  0BF5               	decfsz	??_Lcd_Init+1,f
 10260  1DA9  2DA6               	goto	u5667
 10261  1DAA  2DAB               	nop2
 10262  1DAB                     l3107:
 10263                           
 10264                           ;LCD.c: 47:     Lcd_Cmd(0x3F);
 10265  1DAB  303F               	movlw	63
 10266  1DAC  160A  158A  2499  160A  158A  	fcall	_Lcd_Cmd
 10267                           
 10268                           ;LCD.c: 48:     _delay((unsigned long)((10)*(8000000/4000.0)));
 10269  1DB1  301A               	movlw	26
 10270  1DB2  00F5               	movwf	??_Lcd_Init+1
 10271  1DB3  30F8               	movlw	248
 10272  1DB4  00F4               	movwf	??_Lcd_Init
 10273  1DB5                     u5677:
 10274  1DB5  0BF4               	decfsz	??_Lcd_Init,f
 10275  1DB6  2DB5               	goto	u5677
 10276  1DB7  0BF5               	decfsz	??_Lcd_Init+1,f
 10277  1DB8  2DB5               	goto	u5677
 10278  1DB9  0000               	nop
 10279  1DBA                     l3109:
 10280                           
 10281                           ;LCD.c: 49:     Lcd_Cmd(0x3F);
 10282  1DBA  303F               	movlw	63
 10283  1DBB  160A  158A  2499  160A  158A  	fcall	_Lcd_Cmd
 10284  1DC0                     l3111:
 10285                           
 10286                           ;LCD.c: 50:     _delay((unsigned long)((200)*(8000000/4000000.0)));
 10287  1DC0  3085               	movlw	133
 10288  1DC1  00F4               	movwf	??_Lcd_Init
 10289  1DC2                     u5687:
 10290  1DC2  0BF4               	decfsz	??_Lcd_Init,f
 10291  1DC3  2DC2               	goto	u5687
 10292                           
 10293                           ;LCD.c: 51:     Lcd_Cmd(0x3F);
 10294  1DC4  303F               	movlw	63
 10295  1DC5  160A  158A  2499  160A  158A  	fcall	_Lcd_Cmd
 10296                           
 10297                           ;LCD.c: 53:     Lcd_Cmd(0x38);
 10298  1DCA  3038               	movlw	56
 10299  1DCB  160A  158A  2499  160A  158A  	fcall	_Lcd_Cmd
 10300                           
 10301                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
 10302  1DD0  300C               	movlw	12
 10303  1DD1  160A  158A  2499  160A  158A  	fcall	_Lcd_Cmd
 10304                           
 10305                           ;LCD.c: 55:     Lcd_Cmd(0x06);
 10306  1DD6  3006               	movlw	6
 10307  1DD7  160A  158A  2499  160A  158A  	fcall	_Lcd_Cmd
 10308  1DDC                     l24:
 10309  1DDC  0008               	return
 10310  1DDD                     __end_of_Lcd_Init:
 10311                           
 10312                           	psect	text31
 10313  1C51                     __ptext31:	
 10314 ;; *************** function _Lcd_Clear *****************
 10315 ;; Defined at:
 10316 ;;		line 28 in file "LCD.c"
 10317 ;; Parameters:    Size  Location     Type
 10318 ;;		None
 10319 ;; Auto vars:     Size  Location     Type
 10320 ;;		None
 10321 ;; Return value:  Size  Location     Type
 10322 ;;                  1    wreg      void 
 10323 ;; Registers used:
 10324 ;;		wreg, status,2, status,0, pclath, cstack
 10325 ;; Tracked objects:
 10326 ;;		On entry : 0/0
 10327 ;;		On exit  : 0/0
 10328 ;;		Unchanged: 0/0
 10329 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10330 ;;      Params:         0       0       0       0       0
 10331 ;;      Locals:         0       0       0       0       0
 10332 ;;      Temps:          0       0       0       0       0
 10333 ;;      Totals:         0       0       0       0       0
 10334 ;;Total ram usage:        0 bytes
 10335 ;; Hardware stack levels used:    1
 10336 ;; Hardware stack levels required when called:    2
 10337 ;; This function calls:
 10338 ;;		_Lcd_Cmd
 10339 ;; This function is called by:
 10340 ;;		_main
 10341 ;; This function uses a non-reentrant model
 10342 ;;
 10343                           
 10344                           
 10345                           ;psect for function _Lcd_Clear
 10346  1C51                     _Lcd_Clear:
 10347  1C51                     l3089:	
 10348                           ;incstack = 0
 10349                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
 10350                           
 10351                           
 10352                           ;LCD.c: 29:     Lcd_Cmd(0);
 10353  1C51  3000               	movlw	0
 10354  1C52  160A  158A  2499  160A  158A  	fcall	_Lcd_Cmd
 10355                           
 10356                           ;LCD.c: 30:     Lcd_Cmd(1);
 10357  1C57  3001               	movlw	1
 10358  1C58  160A  158A  2499  160A  158A  	fcall	_Lcd_Cmd
 10359  1C5D                     l15:
 10360  1C5D  0008               	return
 10361  1C5E                     __end_of_Lcd_Clear:
 10362                           
 10363                           	psect	text32
 10364  1C99                     __ptext32:	
 10365 ;; *************** function _Lcd_Cmd *****************
 10366 ;; Defined at:
 10367 ;;		line 20 in file "LCD.c"
 10368 ;; Parameters:    Size  Location     Type
 10369 ;;  a               1    wreg     unsigned char 
 10370 ;; Auto vars:     Size  Location     Type
 10371 ;;  a               1    3[COMMON] unsigned char 
 10372 ;; Return value:  Size  Location     Type
 10373 ;;                  1    wreg      void 
 10374 ;; Registers used:
 10375 ;;		wreg, status,2, status,0, pclath, cstack
 10376 ;; Tracked objects:
 10377 ;;		On entry : 0/0
 10378 ;;		On exit  : 0/0
 10379 ;;		Unchanged: 0/0
 10380 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10381 ;;      Params:         0       0       0       0       0
 10382 ;;      Locals:         1       0       0       0       0
 10383 ;;      Temps:          2       0       0       0       0
 10384 ;;      Totals:         3       0       0       0       0
 10385 ;;Total ram usage:        3 bytes
 10386 ;; Hardware stack levels used:    1
 10387 ;; Hardware stack levels required when called:    1
 10388 ;; This function calls:
 10389 ;;		_Lcd_Port
 10390 ;; This function is called by:
 10391 ;;		_Lcd_Clear
 10392 ;;		_Lcd_Set_Cursor
 10393 ;;		_Lcd_Init
 10394 ;; This function uses a non-reentrant model
 10395 ;;
 10396                           
 10397                           
 10398                           ;psect for function _Lcd_Cmd
 10399  1C99                     _Lcd_Cmd:
 10400                           
 10401                           ;incstack = 0
 10402                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
 10403                           ;Lcd_Cmd@a stored from wreg
 10404  1C99  00F3               	movwf	Lcd_Cmd@a
 10405  1C9A                     l2707:
 10406                           
 10407                           ;LCD.c: 21:     PORTEbits.RE0 = 0;
 10408  1C9A  1283               	bcf	3,5	;RP0=0, select bank0
 10409  1C9B  1303               	bcf	3,6	;RP1=0, select bank0
 10410  1C9C  1009               	bcf	9,0	;volatile
 10411  1C9D                     l2709:
 10412                           
 10413                           ;LCD.c: 22:     Lcd_Port(a);
 10414  1C9D  0873               	movf	Lcd_Cmd@a,w
 10415  1C9E  160A  158A  2428  160A  158A  	fcall	_Lcd_Port
 10416  1CA3                     l2711:
 10417                           
 10418                           ;LCD.c: 23:     PORTEbits.RE1 = 1;
 10419  1CA3  1283               	bcf	3,5	;RP0=0, select bank0
 10420  1CA4  1303               	bcf	3,6	;RP1=0, select bank0
 10421  1CA5  1489               	bsf	9,1	;volatile
 10422  1CA6                     l2713:
 10423                           
 10424                           ;LCD.c: 24:     _delay((unsigned long)((4)*(8000000/4000.0)));
 10425  1CA6  300B               	movlw	11
 10426  1CA7  00F2               	movwf	??_Lcd_Cmd+1
 10427  1CA8  3062               	movlw	98
 10428  1CA9  00F1               	movwf	??_Lcd_Cmd
 10429  1CAA                     u5697:
 10430  1CAA  0BF1               	decfsz	??_Lcd_Cmd,f
 10431  1CAB  2CAA               	goto	u5697
 10432  1CAC  0BF2               	decfsz	??_Lcd_Cmd+1,f
 10433  1CAD  2CAA               	goto	u5697
 10434  1CAE  0000               	nop
 10435  1CAF                     l2715:
 10436                           
 10437                           ;LCD.c: 25:     PORTEbits.RE1 = 0;
 10438  1CAF  1283               	bcf	3,5	;RP0=0, select bank0
 10439  1CB0  1303               	bcf	3,6	;RP1=0, select bank0
 10440  1CB1  1089               	bcf	9,1	;volatile
 10441  1CB2                     l12:
 10442  1CB2  0008               	return
 10443  1CB3                     __end_of_Lcd_Cmd:
 10444                           
 10445                           	psect	text33
 10446  1C28                     __ptext33:	
 10447 ;; *************** function _Lcd_Port *****************
 10448 ;; Defined at:
 10449 ;;		line 16 in file "LCD.c"
 10450 ;; Parameters:    Size  Location     Type
 10451 ;;  a               1    wreg     unsigned char 
 10452 ;; Auto vars:     Size  Location     Type
 10453 ;;  a               1    0[COMMON] unsigned char 
 10454 ;; Return value:  Size  Location     Type
 10455 ;;                  1    wreg      void 
 10456 ;; Registers used:
 10457 ;;		wreg
 10458 ;; Tracked objects:
 10459 ;;		On entry : 0/0
 10460 ;;		On exit  : 0/0
 10461 ;;		Unchanged: 0/0
 10462 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10463 ;;      Params:         0       0       0       0       0
 10464 ;;      Locals:         1       0       0       0       0
 10465 ;;      Temps:          0       0       0       0       0
 10466 ;;      Totals:         1       0       0       0       0
 10467 ;;Total ram usage:        1 bytes
 10468 ;; Hardware stack levels used:    1
 10469 ;; This function calls:
 10470 ;;		Nothing
 10471 ;; This function is called by:
 10472 ;;		_Lcd_Cmd
 10473 ;;		_Lcd_Init
 10474 ;;		_Lcd_Write_Char
 10475 ;; This function uses a non-reentrant model
 10476 ;;
 10477                           
 10478                           
 10479                           ;psect for function _Lcd_Port
 10480  1C28                     _Lcd_Port:
 10481                           
 10482                           ;incstack = 0
 10483                           ; Regs used in _Lcd_Port: [wreg]
 10484                           ;Lcd_Port@a stored from wreg
 10485  1C28  00F0               	movwf	Lcd_Port@a
 10486  1C29                     l2241:
 10487                           
 10488                           ;LCD.c: 17:     PORTB = a;
 10489  1C29  0870               	movf	Lcd_Port@a,w
 10490  1C2A  1283               	bcf	3,5	;RP0=0, select bank0
 10491  1C2B  1303               	bcf	3,6	;RP1=0, select bank0
 10492  1C2C  0086               	movwf	6	;volatile
 10493  1C2D                     l9:
 10494  1C2D  0008               	return
 10495  1C2E                     __end_of_Lcd_Port:
 10496  007E                     btemp	set	126	;btemp
 10497  007E                     wtemp0	set	126
 10498                           
 10499                           	psect	config
 10500                           
 10501                           ;Config register CONFIG1 @ 0x2007
 10502                           ;	Oscillator Selection bits
 10503                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
 10504                           ;	Watchdog Timer Enable bit
 10505                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
 10506                           ;	Power-up Timer Enable bit
 10507                           ;	PWRTE = OFF, PWRT disabled
 10508                           ;	RE3/MCLR pin function select bit
 10509                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
 10510                           ;	Code Protection bit
 10511                           ;	CP = OFF, Program memory code protection is disabled
 10512                           ;	Data Code Protection bit
 10513                           ;	CPD = OFF, Data memory code protection is disabled
 10514                           ;	Brown Out Reset Selection bits
 10515                           ;	BOREN = OFF, BOR disabled
 10516                           ;	Internal External Switchover bit
 10517                           ;	IESO = OFF, Internal/External Switchover mode is disabled
 10518                           ;	Fail-Safe Clock Monitor Enabled bit
 10519                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
 10520                           ;	Low Voltage Programming Enable bit
 10521                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
 10522                           ;	In-Circuit Debugger Mode bit
 10523                           ;	DEBUG = 0x1, unprogrammed default
 10524  2007                     	org	8199
 10525  2007  20D5               	dw	8405
 10526                           
 10527                           ;Config register CONFIG2 @ 0x2008
 10528                           ;	Brown-out Reset Selection bit
 10529                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
 10530                           ;	Flash Program Memory Self Write Enable bits
 10531                           ;	WRT = OFF, Write protection off
 10532  2008                     	org	8200
 10533  2008  3FFF               	dw	16383

Data Sizes:
    Strings     24
    Constant    144
    Data        1
    BSS         27
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     41      67
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_2(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(1) Largest target is 20
		 -> s(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> s(BANK1[20]), STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___flsub->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   37733
                                             37 BANK1      4     4      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___flmul
                           ___xxtofl
                              _setup
                            _spiInit
                            _spiRead
                            _sprintf
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             42    37      5   31628
                                              0 BANK1     37    32      5
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7560
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6023
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4545
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     474
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     615
                                              0 COMMON    10     2      8
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     466
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     286
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     330
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _setup
   _spiInit
   _spiRead
     _spiReceiveWait
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     29      43       7       83.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      A1      12        0.0%
ABS                  0      0      A1       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Fri Feb 19 16:37:04 2021

                        l9 1C2D                          _s 00CF                          _x 00C9  
                        pc 0002                _SSPSTATbits 0094                         l12 1CB2  
                       l21 1CF1                         l15 1C5D                         l24 1DDC  
                       l33 1E1E                         l27 1CCD                         l93 0880  
                       l88 1C82               ___awdiv@sign 0021                         fsr 0004  
      ___wmul@multiplicand 0072        __Umul8_16@word_mpld 0076                        l303 0136  
                      l161 1C34                        l154 1C93                        l155 1C98  
                      l172 1C45                        l404 0867                        l341 05BF  
                      l158 1C2E                        l334 057B                        l521 0070  
                      l281 0C9E                        l370 1D3A                        l274 1577  
                      l364 07EB                        l701 1659                        l349 0726  
                      l542 132F                        l534 1F5D                        l720 1771  
                      l624 1F04                        l368 1D22                        l554 1E7F  
                      l562 1FE6                        l538 136C                        l810 1D4F  
                      l555 1E9B                        l563 1FFF                        l571 1137  
                      l539 12D1                        l803 0FF3                        l556 1EB0  
                      l716 174D                        l708 17FF                        l812 1D61  
                      l741 1D15                        l581 1137                        l549 135F  
                      l726 1793                        l559 1F7A                        l567 1C50  
                      l737 17F3                        l729 17D1                        l841 119F  
                      l585 12AE                        l738 17FF                        l578 1122  
                      l586 1220                        l674 1E62                        l835 115A  
                      l596 12A1                        l684 1D9B                        l837 11F1  
                      l589 1271                        l695 15DB                        l791 0FFF  
                      l855 1C6F                        l848 11BB                        l849 11C7  
                      l699 1682                        l797 0F6B                        _adc 00CE  
                      fsr0 0004                        indf 0000               ___awmod@sign 0076  
             ___flmul@aexp 0036               ___flmul@bexp 0037               ___flmul@sign 0031  
             ___flmul@temp 003C               ___flmul@prod 0038               ___fltol@exp1 005B  
                     l3101 1CEB                       l3013 1117                       l3005 10FE  
                     l3021 1EB9                       l2301 1F20                       l3111 1DC0  
                     l3103 1D9C                       l3015 1127                       l3007 1110  
                     l3031 1EED                       l3023 1EBC                       l2231 1D45  
                     l2311 1F3C                       l2303 1F23                       l2241 1C29  
                     l3105 1DA2                       l3113 1DDD                       l3121 1C70  
                     l2401 15B9                       l3041 1CF6                       l3017 112C  
                     l3033 1EF6                       l3025 1EC9                       l2233 1D49  
                     l2321 1F59                       l2313 1F42                       l2305 1F2A  
                     l3201 0193                       l3107 1DAB                       l3115 1DE0  
                     l3131 1C81                       l3123 1C73                       l2411 15D0  
                     l2403 15BD                       l3027 1ECD                       l3035 1EFC  
                     l3019 1EB1                       l3051 1152                       l2235 1D58  
                     l2227 1D3C                       l2331 1E2A                       l2251 0016  
                     l2243 0008                       l2315 1F49                       l2307 1F2E  
                     l3211 01D8                       l3203 01AC                       l3109 1DBA  
                     l3117 1DFC                       l3125 1C75                       l3141 1C92  
                     l3133 1C84                       l2501 172B                       l2421 15E9  
                     l2413 15D1                       l2405 15BE                       l3029 1EDF  
                     l3061 117D                       l3053 1162                       l3045 1139  
                     l2237 1D5D                       l2229 1D3E                       l2341 1E50  
                     l2333 1E31                       l2325 1E1F                       l2261 002B  
                     l2253 001A                       l2245 000B                       l2309 1F32  
                     l2317 1F4F                       l3301 0550                       l3221 020E  
                     l3213 01DE                       l3205 01B0                       l3119 1E02  
                     l3127 1C76                       l3135 1C8B                       l2503 1730  
                     l2431 15FD                       l2423 15ED                       l2407 15C3  
                     l2415 15D3                       l3039 1CF2                       l3071 11B1  
                     l3063 1184                       l3047 113E                       l2343 1E51  
                     l2335 1E35                       l2327 1E21                       l2351 1D62  
                     l2271 004E                       l2263 002E                       l2255 001F  
                     l2247 000F                       l2319 1F54                       l3311 0596  
                     l3303 056F                       l3231 02B5                       l3223 022D  
                     l3215 01F1                       l3207 01B4                       l3151 008B  
                     l3143 0074                       l3129 1C77                       l3137 1C8D  
                     l2521 1778                       l2513 1763                       l2505 173F  
                     l2441 1611                       l2433 1601                       l2425 15F1  
                     l2417 15E1                       l2409 15C8                       l3081 11E4  
                     l3073 11B5                       l3065 1188                       l3057 116B  
                     l3049 1142                       l2601 0CF1                       l2345 1E58  
                     l2337 1E39                       l2329 1E27                       l2361 1D7A  
                     l2353 1D68                       l2281 0067                       l2273 0054  
                     l2265 0035                       l2257 0023                       l2249 0014  
                     l3321 05CD                       l3313 05A3                       l3305 0583  
                     l3241 033D                       l3225 0278                       l3217 0204  
                     l3209 01CD                       l3233 02BD                       l3161 00CB  
                     l3153 008F                       l3145 0079                       l3091 1CCF  
                     l3139 1C8F                       l2531 1786                       l2523 177A  
                     l2515 176C                       l2507 1755                       l2443 1615  
                     l2435 1605                       l2427 15F5                       l2419 15E5  
                     l2451 1625                       l3083 11E8                       l3075 11BF  
                     l3067 1196                       l3059 1170                       l2611 0D0C  
                     l2603 0CF9                       l2339 1E4A                       l2347 1E5E  
                     l2363 1D84                       l2355 1D6B                       l2283 006C  
                     l2275 0055                       l2267 0039                       l2259 0025  
                     l2291 1F0A                       l3331 068C                       l3323 05D4  
                     l3315 05B2                       l3307 058C                       l3251 039F  
                     l3243 0364                       l3235 02CC                       l3227 0291  
                     l3219 0208                       l3171 00F2                       l3163 00CF  
                     l3155 009F                       l3147 007F                       l3411 0868  
                     l3093 1CD4                       l3405 1C3D                       l2541 179D  
                     l2533 178A                       l2525 177F                       l2517 1770  
                     l2509 175A                       l2461 1668                       l2453 1626  
                     l2445 1619                       l2437 1609                       l2429 15F9  
                     l2381 158A                       l2373 1578                       l3085 11E9  
                     l3077 11C9                       l3069 11A6                       l2701 0FEC  
                     l2621 0D8E                       l2613 0D1C                       l2605 0CFE  
                     l2365 1D8A                       l2357 1D72                       l2277 005C  
                     l2269 003D                       l2293 1F0F                       l3341 0701  
                     l3333 06AB                       l3325 05D8                       l3317 05B9  
                     l3309 0590                       l3261 041A                       l3253 03BD  
                     l3245 0373                       l3237 0313                       l3229 029A  
                     l3173 00F5                       l3181 0132                       l3157 00A3  
                     l3165 00DF                       l3149 0086                       l3421 08F3  
                     l3413 0888                       l2711 1CA3                       l3095 1CD9  
                     l3407 1C42                       l2551 17DB                       l2543 17AB  
                     l2535 1790                       l2519 1775                       l2527 1781  
                     l2471 1686                       l2463 166C                       l2455 163D  
                     l2447 161D                       l2439 160D                       l2383 158F  
                     l2391 159F                       l2375 157F                       l3079 11DF  
                     l2703 0FF7                       l2631 0DFC                       l2623 0DAA  
                     l2615 0D29                       l2607 0D03                       l2367 1D91  
                     l2359 1D76                       l2279 0062                       l2295 1F11  
                     l2287 1F05                       l3351 0720                       l3343 0705  
                     l3335 06B7                       l3327 05F6                       l3319 05C8  
                     l3271 046B                       l3263 0467                       l3247 038E  
                     l3239 0322                       l3191 0160                       l3183 0134  
                     l3175 010A                       l3167 00ED                       l3159 00B8  
                     l3431 0916                       l3423 08FC                       l3415 0891  
                     l2713 1CA6                       l3089 1C51                       l3097 1CE0  
                     l2721 1CBD                       l2561 17EF                       l2553 17E3  
                     l2545 17AF                       l2481 16AF                       l2529 1785  
                     l2473 168B                       l2465 166D                       l2457 165D  
                     l2449 1621                       l2393 15A7                       l2385 1594  
                     l2377 1585                       l2801 11F2                       l2641 0E8C  
                     l2633 0E0C                       l2625 0DC6                       l2617 0D46  
                     l2369 1D97                       l2297 1F15                       l2289 1F06  
                     l3361 0758                       l3353 0731                       l3345 070B  
                     l3329 0651                       l3337 06F2                       l3281 04CD  
                     l3265 0469                       l3257 03DC                       l3249 0397  
                     l3193 0164                       l3177 011D                       l3169 00EE  
                     l3433 0920                       l3425 0906                       l3417 08D7  
                     l2715 1CAF                       l2707 1C9A                       l3099 1CE6  
                     l2723 1CC0                       l2563 17FA                       l2555 17E8  
                     l2547 17CD                       l2539 1798                       l2491 16C3  
                     l2483 16B3                       l2467 1676                       l2459 1666  
                     l2395 15AC                       l2387 159C                       l2379 1589  
                     l2803 1205                       l2651 0F20                       l2643 0E9C  
                     l2635 0E29                       l2627 0DCF                       l2619 0D62  
                     l2571 0CAC                       l2731 1370                       l2299 1F1A  
                     l3371 0785                       l3363 0764                       l3355 0738  
                     l3339 06FA                       l3283 04D9                       l3291 04EE  
                     l3275 04A2                       l3259 03E5                       l3195 0168  
                     l3347 0712                       l3187 0138                       l3179 0121  
                     l3435 092A                       l3427 0909                       l3419 08DF  
                     l2709 1C9D                       l2725 1CC5                       l2717 1CB4  
                     l2565 17FE                       l2557 17E9                       l2549 17D6  
                     l2493 16CC                       l2485 16BC                       l2477 1694  
                     l2469 167A                       l2397 15B2                       l2389 159D  
                     l2901 1364                       l2821 1241                       l2813 1221  
                     l2661 0F45                       l2653 0F2E                       l2645 0EC9  
                     l2637 0E42                       l2629 0DDF                       l2581 0CC3  
                     l2573 0CB0                       l2741 1489                       l2733 1376  
                     l3381 07AA                       l3373 0789                       l3365 076A  
                     l3357 0747                       l3349 0718                       l3293 04FB  
                     l3285 04E0                       l3277 04AC                       l3197 0176  
                     l3189 0154                       l3437 092D                       l3429 0913  
                     l2727 1CC8                       l2719 1CB7                       l2559 17ED  
                     l2487 16BE                       l2479 16AB                       l2495 16D1  
                     l2399 15B3                       l2911 1D29                       l2831 126B  
                     l2823 124A                       l2815 1227                       l2807 120E  
                     l2671 0F68                       l2655 0F37                       l2663 0F4B  
                     l2647 0EEF                       l2639 0E5F                       l2591 0CDC  
                     l2583 0CC5                       l2575 0CB1                       l2567 0C9F  
                     l2751 0947                       l3383 07B1                       l3375 0794  
                     l3367 076E                       l3359 0750                       l3295 0509  
                     l3287 04E9                       l3279 04C7                       l3199 017A  
                     l2729 1C2E                       l2497 16E7                       l2489 16C2  
                     l2921 0812                       l2913 1D30                       l2905 1D16  
                     l2833 1275                       l2841 128F                       l2825 1258  
                     l2817 1236                       l2681 0F87                       l2665 0F4F  
                     l2657 0F3B                       l2649 0F17                       l2593 0CDD  
                     l2585 0CCD                       l2577 0CB6                       l2569 0CA6  
                     l2745 1534                       l2761 0A38                       l2753 0949  
                     l3385 07B5                       l3377 07A0                       l3369 077C  
                     l3297 0510                       l3393 07D5                       l2499 1725  
                     l2931 0841                       l2923 0815                       l2915 1D36  
                     l2907 1D18                       l2827 1262                       l2819 1238  
                     l2691 0FCD                       l2683 0FA0                       l2675 0F70  
                     l2667 0F50                       l2659 0F3C                       l2595 0CE2  
                     l2587 0CD2                       l2579 0CBB                       l2739 1483  
                     l2763 0A3F                       l2755 0950                       l2771 0AF4  
                     l3387 07C1                       l3379 07A4                       l3299 0515  
                     l3395 07E7                       l2933 084F                       l2925 0822  
                     l2909 1D1C                       l2853 12AF                       l2829 1263  
                     l2693 0FD7                       l2677 0F75                       l2685 0FA6  
                     l2669 0F54                       l2597 0CE7                       l2589 0CD8  
                     l2781 0BEA                       l2773 0AFB                       l2749 0943  
                     l3389 07CD                       l3469 014C                       l2951 1EAF  
                     l2943 1E63                       l2935 0850                       l2927 0826  
                     l2919 0802                       l2871 12ED                       l2855 12BC  
                     l2847 1296                       l2839 127D                       l2695 0FD9  
                     l2687 0FB3                       l2679 0F83                       l2599 0CEF  
                     l2791 1C60                       l2767 0AC7                       l2945 1E77  
                     l2961 1F96                       l2937 0859                       l2929 082F  
                     l2881 1320                       l2873 12F6                       l2865 12D2  
                     l2849 12A6                       l2697 0FE7                       l2689 0FBE  
                     l2793 1C66                       l2785 0C72                       l2947 1E93  
                     l2971 1FFE                       l2963 1F9A                       l2955 1F5E  
                     l2939 085F                       l2891 133B                       l2883 1329  
                     l2875 12FF                       l2867 12DA                       l2859 12C5  
                     l2699 0FEB                       l2795 1C6C                       l2779 0BE3  
                     l2949 1EAD                       l2965 1FBE                       l2957 1F72  
                     l2885 1333                       l2893 134D                       l2877 1311  
                     l2869 12EB                       l2797 1C6E                       l2789 1C5F  
                     l2967 1FC2                       l2959 1F8E                       l2975 1C46  
                     l2991 10E7                       l2983 10BC                       l2879 131F  
                     l2969 1FFC                       l2977 1C4E                       l2993 10E8  
                     l2985 10C9                       l2979 1C50                       l2995 10F0  
                     l2899 1354                       l2997 10F2                       l2989 10D2  
                     l2999 10F6                       STR_1 10A0                       STR_2 10B1  
                     u3000 1F32                       u3001 1F31                       u3010 1F3C  
                     u3011 1F3B                       u3110 1E5E                       u3030 1F4F  
                     u3111 1E5D                       u3031 1F4E                       u3015 1F38  
                     u3200 1594                       u4000 0FEB                       u3120 1D68  
                     u3040 1F54                       u3201 1593                       u4001 0FEA  
                     u3105 1E52                       u3121 1D67                       u3041 1F53  
                     u3025 1F43                       u4010 1C34                       u3210 15B2  
                     u3050 1E27                       u4011 1C33                       u3211 15B1  
                     u3051 1E26                       u3300 165D                       u3220 15BD  
                     u3140 1D7A                       u4020 1376                       u4100 0947  
                     u3301 165C                       u3221 15BC                       u3141 1D79  
                     u4021 1375                       u4101 0946                       u3310 166C  
                     u3230 15C3                       u3070 1E39                       u3150 1D84  
                     u4110 0950                       u3311 166B                       u3231 15C2  
                     u3071 1E38                       u3151 1D83                       u3135 1D6C  
                     u4111 094F                       u3240 15C8                       u3241 15C7  
                     u3065 1E2B                       u3410 16E7                       u3330 1682  
                     u3250 15E1                       u5010 11B5                       u3090 1E4A  
                     u3170 1D97                       u3411 16E6                       u3331 1681  
                     u3251 15E0                       u5011 11B4                       u3091 1E49  
                     u3171 1D96                       u3155 1D80                       u4035 1393  
                     u5100 1E0C                       u3500 177F                       u3340 1686  
                     u3260 15E5                       u3180 1589                       u5020 11BB  
                     u4300 121F                       u4060 1489                       u3501 177E  
                     u3421 16FE                       u3413 16E3                       u3405 16C5  
                     u3341 1685                       u3325 166F                       u3261 15E4  
                     u3181 1588                       u5021 11BA                       u5005 11AA  
                     u4301 121E                       u3085 1E3A                       u3165 1D8B  
                     u4061 1488                       u4045 13ED                       u4205 0B1B  
                     u4125 0970                       u5110 1E1E                       u3510 1785  
                     u3430 1712                       u3422 16FF                       u3350 168B  
                     u3270 163D                       u3190 158F                       u5030 11BF  
                     u4230 0BEA                       u4150 0A3F                       u5111 1E1D  
                     u3511 1784                       u3431 1713                       u3423 1704  
                     u3351 168A                       u3271 163C                       u3191 158E  
                     u5031 11BE                       u3095 1E46                       u4055 1442  
                     u4231 0BE9                       u4215 0B57                       u4151 0A3E  
                     u4135 09AC                       u5120 1C8B                       u3600 17DB  
                     u3520 178A                       u3440 1730                       u3432 1718  
                     u3424 1705                       u3280 1648                       u5040 11D4  
                     u4320 1258                       u5200 0193                       u5121 1C8A  
                     u3601 17DA                       u3521 1789                       u3441 172F  
                     u3433 1719                       u3425 170A                       u3361 169D  
                     u3281 1646                       u4321 1257                       u4225 0BA2  
                     u4145 09F7                       u5201 0192                       u3610 17E8  
                     u3530 1790                       u3450 1755                       u3426 170B  
                     u3370 16AF                       u3362 16A4                       u3290 1649  
                     u5050 11E4                       u4410 12A6                       u5210 01CD  
                     u5130 007F                       u3611 17E7                       u3531 178F  
                     u3451 1754                       u3371 16AE                       u3363 16AB  
                     u3275 1639                       u5051 11E3                       u4411 12A5  
                     u4315 1243                       u4075 14A6                       u5211 01CC  
                     u5131 007E                       u3620 17ED                       u3540 1797  
                     u3460 175A                       u3380 16B3                       u5060 11E8  
                     u4420 12BC                       u4340 1271                       u3700 0CFE  
                     u2900 003D                       u5300 038E                       u5220 0208  
                     u5140 009F                       u3621 17EC                       u3541 1796  
                     u3461 1759                       u3381 16B2                       u5061 11E7  
                     u5045 11CF                       u4421 12BB                       u4405 1298  
                     u4341 1270                       u4325 1254                       u3701 0CFD  
                     u4085 14F3                       u2901 003C                       u4245 0BFD  
                     u4165 0A52                       u5301 038D                       u5221 0207  
                     u5141 009E                       u5070 1CD4                       u3630 17FE  
                     u3550 179D                       u3390 16C2                       u4510 134C  
                     u4430 12D0                       u4350 1275                       u2830 1D49  
                     u3710 0D03                       u4270 1C66                       u4190 0AFB  
                     u5230 0291                       u5150 00DF                       u5071 1CD3  
                     u3631 17FD                       u3551 179C                       u3391 16C1  
                     u4511 134B                       u4431 12CF                       u4351 1274  
                     u4335 1264                       u2831 1D48                       u3711 0D02  
                     u4095 153F                       u4271 1C65                       u4255 0C39  
                     u4191 0AFA                       u4175 0A8E                       u5231 0290  
                     u5151 00DE                       u5080 1CE6                       u3560 17AF  
                     u3480 1770                       u4520 1353                       u4360 127C  
                     u3640 0CB0                       u4280 1C6C                       u2920 004E  
                     u5400 05A3                       u5320 04A1                       u5240 02B5  
                     u5160 00ED                       u5081 1CE5                       u3561 17AE  
                     u3481 176F                       u4521 1352                       u4505 133C  
                     u4361 127B                       u3801 0E51                       u3721 0D54  
                     u3641 0CAF                       u4281 1C6B                       u2921 004D  
                     u4265 0C75                       u4185 0ACA                       u5401 05A2  
                     u5321 04A0                       u5241 02B4                       u5161 00EC  
                     u5090 1DEA                       u3570 17BE                       u3490 1775  
                     u4610 0826                       u4450 1311                       u4290 1205  
                     u2850 1D5D                       u3802 0E58                       u3722 0D5B  
                     u3650 0CB6                       u5410 05B2                       u5330 04AC  
                     u5250 02CC                       u5170 0131                       u3491 1774  
                     u3475 1765                       u4611 0825                       u4451 1310  
                     u4291 1204                       u2851 1D5C                       u3811 0E7E  
                     u3803 0E5F                       u3731 0D70                       u3723 0D62  
                     u3651 0CB5                       u2915 003E                       u5411 05B1  
                     u5331 04AB                       u5315 046E                       u5251 02CB  
                     u5171 0130                       u4700 1F8E                       u3580 17CD  
                     u4540 1364                       u4380 128E                       u3812 0E85  
                     u3732 0D77                       u3660 0CBB                       u2940 0062  
                     u2860 000F                       u5500 0747                       u5420 05CD  
                     u5340 04C7                       u5260 0322                       u5180 0160  
                     u4701 1F8D                       u3581 17CC                       u4605 0817  
                     u4541 1363                       u4445 12F8                       u4381 128D  
                     u2845 1D50                       u3821 0EAB                       u3813 0E8C  
                     u3741 0D9C                       u3733 0D7E                       u3661 0CBA  
                     u2941 0061                       u2925 004A                       u2861 000E  
                     u5501 0746                       u5421 05CC                       u5405 059F  
                     u5341 04C6                       u5325 049D                       u5261 0321  
                     u5181 015F                       u4710 1F9A                       u3590 17D6  
                     u4630 0841                       u4550 1D1C                       u4470 132F  
                     u4390 1295                       u3910 0F4F                       u3830 0ED5  
                     u3822 0EB2                       u3742 0DA3                       u3670 0CDC  
                     u2950 0067                       u2870 001A                       u5510 0758  
                     u5350 04D9                       u5270 033D                       u5190 0164  
                     u4711 1F99                       u3591 17D5                       u3575 17B9  
                     u4631 0840                       u4551 1D1B                       u4535 1356  
                     u4471 132E                       u4455 130D                       u4391 1294  
                     u4375 127E                       u3911 0F4E                       u3823 0EB9  
                     u3751 0DB8                       u3743 0DAA                       u3671 0CDB  
                     u2951 0066                       u2935 0056                       u2871 0019  
                     u5511 0757                       u5415 05AE                       u5351 04D8  
                     u5271 033C                       u5255 02C8                       u5191 0163  
                     u4800 10FD                       u4480 1333                       u3920 0F54  
                     u3752 0DBF                       u3680 0CE2                       u2880 002B  
                     u2960 1F0A                       u5520 0764                       u5360 04FB  
                     u5280 0364                       u4721 1FA9                       u4801 10FC  
                     u4625 0828                       u4481 1332                       u4465 1322  
                     u3921 0F53                       u3905 0F3E                       u3841 0EE1  
                     u3753 0DC6                       u3681 0CE1                       u2881 002A  
                     u2961 1F09                       u5521 0763                       u5505 0743  
                     u5361 04FA                       u5281 0363                       u5265 031E  
                     u4730 1FC2                       u4722 1FAA                       u4650 085F  
                     u4490 133A                       u3930 0F68                       u3850 0EFD  
                     u3842 0EE8                       u3690 0CE7                       u2970 1F15  
                     u5530 076E                       u5450 06F9                       u5370 0509  
                     u5290 0373                       u4731 1FC1                       u4723 1FAF  
                     u4651 085E                       u4635 083D                       u4491 1339  
                     u3931 0F67                       u3843 0EEF                       u3835 0ED0  
                     u3771 0DEE                       u3691 0CE6                       u2971 1F14  
                     u5531 076D                       u5451 06F8                       u5435 0654  
                     u5371 0508                       u5291 0372                       u4660 1E77  
                     u4724 1FB0                       u4820 110F                       u4900 1EDF  
                     u4580 1D36                       u3940 0F6F                       u3772 0DF5  
                     u2980 1F20                       u5540 077C                       u5460 0711  
                     u4661 1E76                       u4741 1FD1                       u4725 1FB5  
                     u4821 110E                       u4645 0851                       u4901 1EDE  
                     u4581 1D35                       u4565 1D23                       u3941 0F6E  
                     u3861 0F09                       u3781 0E1B                       u3773 0DFC  
                     u3765 0DC8                       u2981 1F1F                       u5541 077B  
                     u5461 0710                       u5445 06BA                       u5365 04F7  
                     u4670 1E93                       u4750 1FFC                       u4742 1FD2  
                     u4726 1FB6                       u4830 1116                       u4590 0812  
                     u3950 0F75                       u3862 0F10                       u3782 0E22  
                     u5550 0794                       u5470 0718                       u5390 0582  
                     u4671 1E92                       u4751 1FFB                       u4743 1FD7  
                     u4831 1115                       u4815 10FF                       u4591 0811  
                     u4575 1D2A                       u3951 0F74                       u3863 0F17  
                     u3855 0EF8                       u3783 0E29                       u2895 002F  
                     u5551 0793                       u5471 0717                       u5391 0581  
                     u5295 036F                       u5607 0902                       u4680 1EAD  
                     u4744 1FD8                       u4760 1C4E                       u4920 1EFC  
                     u3960 0F87                       u5560 07AA                       u5480 0720  
                     u4681 1EAC                       u4745 1FDD                       u4761 1C4D  
                     u4921 1EFB                       u4905 1EDB                       u3961 0F86  
                     u5561 07A9                       u5545 0778                       u5481 071F  
                     u5385 0518                       u5617 090F                       u4746 1FDE  
                     u4690 1F72                       u4850 1127                       u4770 10C9  
                     u4930 113E                       u3970 0F96                       u3890 0F3B  
                     u5570 07C1                       u5490 0731                       u4755 1FF8  
                     u4691 1F71                       u4851 1126                       u4771 10C8  
                     u4915 1EEE                       u4931 113D                       u3891 0F3A  
                     u3875 0F19                       u3795 0E2B                       u2995 1F24  
                     u5571 07C0                       u5555 0790                       u5491 0730  
                     u5627 0926                       u4860 112C                       u4780 10E0  
                     u4940 1142                       u3980 0FB3                       u5580 07CD  
                     u4685 1EA9                       u4861 112B                       u4845 1119  
                     u4941 1141                       u3981 0FB2                       u3885 0F30  
                     u5581 07CC                       u5637 0935                       u4790 10F6  
                     u4870 1EB9                       u4950 1162                       u3990 0FCD  
                     u5590 07E7                       u5647 1CC2                       u4791 10F5  
                     u4871 1EB8                       u4951 1161                       u3991 0FCC  
                     u3975 0F91                       u5591 07E6                       u5495 072D  
                     u5657 1CCA                       u4785 10DB                       u3985 0FAF  
                     u4890 1ECD                       u4970 1183                       u5667 1DA6  
                     u4891 1ECC                       u4971 1182                       u3995 0FC9  
                     u5677 1DB5                       u4885 1EBE                       u4965 1175  
                     u4990 11A5                       u5687 1DC2                       u4991 11A4  
                     u5697 1CAA                       u4985 1197                       _TRMT 04C1  
        ?_Lcd_Write_String 0073                       _main 0868                       btemp 007E  
                     start 0000         ??_Lcd_Write_String 0075               _sprintf$1210 00AA  
          __end_of_Lcd_Cmd 1CB3              ___fltol@sign1 005A            __end_of___fladd 1800  
                    ?_main 0070            __end_of___awdiv 0071            __end_of___flneg 1C51  
          __end_of___awmod 1F5E            __end_of___flmul 1000            __end_of___flsub 1D16  
          __end_of___fltol 1138                      _ANSEL 0188            __end_of___lldiv 0868  
          ___awdiv@divisor 0077            __end_of___llmod 1F05            __end_of___lwdiv 1E63  
          __end_of___lwmod 1D9C            ___awdiv@counter 0020                      _SPBRG 0099  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _PORTE 0009    __size_of_Lcd_Set_Cursor 0024                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _TRISE 0089  
                    _TXREG 0019            __end_of_dpowers 10A0                      _scale 0940  
          __end_of_isdigit 1C70                      _setup 1C70                      pclath 000A  
          __end_of_spiInit 1C99            __end_of_spiRead 1C46                      status 0003  
                    wtemp0 007E            __end_of_sprintf 07EC           __end_of_Lcd_Init 1DDD  
         __end_of_Lcd_Port 1C2E            __initialization 07EC               __end_of_main 0940  
                   ??_main 00C5         __size_of_Lcd_Clear 000D       __size_of__tdiv_to_l_ 00BD  
         ___llmod@dividend 0074                     ?_scale 003E           ___awdiv@dividend 0079  
                   ?_setup 0070                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 001B  
                   _TRISC3 043B                     _TRISC5 043D                     _SSPBUF 0013  
                   _SSPCON 0014           __end_of___xxtofl 11F2           __end_of__powers_ 1044  
                   ___flge 1F5E                     ___fleq 1E63                  ??___fladd 005A  
                   ___wmul 1D16                  ??___awdiv 007B                  ??___flneg 0074  
                ??___awmod 0074                  ??___flmul 002C                  ??___flsub 007E  
                ??___fltol 0055                  ??___lldiv 0078                  ??___llmod 0078  
                ??___lwdiv 007A                  ??___lwmod 0074                     _fround 136D  
         ___awdiv@quotient 0022            ___awmod@divisor 0070            ___awmod@counter 0075  
                ??_isdigit 0070         __size_of__Umul8_16 0027                  ??_spiInit 0073  
                ??_spiRead 0070                  ??_sprintf 00A5            Lcd_Set_Cursor@a 0076  
          Lcd_Set_Cursor@b 0074                 ___flge@ff1 0070                 ___flge@ff2 0074  
             ___xxtofl@arg 007A               ___xxtofl@exp 0079               ___xxtofl@val 0070  
               ___fleq@ff1 0070                 ___fleq@ff2 0074    __end_of__initialization 07FC  
               ___flneg@f1 0070          __end_of_Lcd_Clear 1C5E                 ___fltol@f1 0051  
           __pcstackCOMMON 0070               __pidataBANK0 0007              __end_of_scale 0C9F  
            __end_of_setup 1C83             _Lcd_Set_Cursor 1CCE                 __div_to_l_ 12AF  
               _banderaADC 006F                  ?_Lcd_Init 0070                  ?_Lcd_Port 0070  
          __div_to_l_@exp1 0025            __div_to_l_@cntr 0024                    ??_scale 0042  
          __div_to_l_@quot 0020               sprintf@width 00B5                    ??_setup 0070  
               __pbssBANK0 006E                 __pbssBANK1 00C9              __div_to_l_@f1 0070  
            __div_to_l_@f2 0074          __end_of__Umul8_16 1D62                 __pmaintext 0868  
                  ?___flge 0070                    ?___fleq 0070                    ?___wmul 0070  
  __size_of_spiReceiveWait 0007                    ?_fround 003E  __size_of_Lcd_Write_String 0042  
   __end_of_Lcd_Set_Cursor 1CF2                  ?___xxtofl 0070                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                    _SSPSTAT 0094                 __stringtab 1000  
           _Lcd_Write_Char 1CB3                    _Lcd_Cmd 1C99          __end_of__npowers_ 1078  
               _scale$1209 004C            __size_of___flge 00A2            __size_of___fleq 004E  
                  ___fladd 1578                    ___awdiv 0008                    ___flneg 1C46  
                  ___awmod 1F05                    ___flmul 0C9F                    ___flsub 1CF2  
                  ___fltol 10BC                    ___lldiv 0802            __size_of___wmul 0025  
                  ___llmod 1EB1                    ___lwdiv 1E1F                    ___lwmod 1D62  
          __size_of_fround 020B            ?_Lcd_Set_Cursor 0074                    __ptext1 0071  
                  __ptext2 0940                    __ptext3 1F05                    __ptext4 0008  
                  __ptext5 1C5E                    __ptext6 136D                    __ptext7 1D62  
                  __ptext8 1E1F                    __ptext9 0C9F                ?__div_to_l_ 0070  
                  _dpowers 1078                    _isdigit 1C5E                    _mensaje 006E  
               ??___xxtofl 0074           ___awmod@dividend 0072                    _spiInit 1C83  
                  _spiRead 1C3D                    _sprintf 0071                    clrloop0 1C36  
   __end_of_Lcd_Write_Char 1CCE       end_of_initialization 07FC            ___lldiv@divisor 0070  
          ___lldiv@counter 007D                  _RCSTAbits 0018                  Lcd_Port@a 0070  
           __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074              ??__tdiv_to_l_ 0078  
                _PORTAbits 0005                  _PORTCbits 0007                  _PORTEbits 0009  
              ___fladd@grs 0065              ___xxtofl@sign 0078            ?_Lcd_Write_Char 0070  
        Lcd_Write_String@a 0073          Lcd_Write_String@i 0078                ___flmul@grs 0032  
                _TXSTAbits 0098        __size_of__div_to_l_ 00BE                  _Lcd_Clear 1C51  
           _spiReceiveWait 1C2E             __end_of___flge 2000             __end_of___fleq 1EB1  
           __end_of___wmul 1D3B           _Lcd_Write_String 1DDD                _BAUDCTLbits 0187  
           __end_of_fround 1578        start_initialization 07EC        __end_of__tdiv_to_l_ 12AF  
        __size_of_Lcd_Init 0041          __size_of_Lcd_Port 0006            ___llmod@divisor 0070  
          ___llmod@counter 0079     __end_of_spiReceiveWait 1C35                 ?_Lcd_Clear 0070  
                 ??___flge 0078                   ??___fleq 0078                   ??___wmul 0074  
                __Umul8_16 1D3B                __pdataBANK0 006F            Lcd_Write_Char@a 0072  
                 ??_fround 0042              sprintf@tmpval 00B7                  ___fladd@a 0056  
                ___fladd@b 0052                 fround@prec 0051                  ___flmul@a 0028  
                ___flmul@b 0024                  ___flsub@a 0066                  ___flsub@b 006A  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00BA               _isdigit$1008 0070                   ?_Lcd_Cmd 0070  
              sprintf@flag 00B3                sprintf@eexp 00BB                sprintf@fval 00BD  
              sprintf@prec 00C2           ___lwdiv@dividend 0078            ?_spiReceiveWait 0070  
         ??_Lcd_Set_Cursor 0075                   ?___fladd 0052                   ?___awdiv 0077  
                 ?___flneg 0070                   ?___awmod 0070                   ?___flmul 0024  
                 ?___flsub 0066                   ?___fltol 0051                   ?___lldiv 0070  
                 ?___llmod 0070                  __npowers_ 1044                 ?__Umul8_16 0070  
                 ?___lwdiv 0076                   ?___lwmod 0070                  __pstrings 1000  
              __tdiv_to_l_ 11F2               ??__div_to_l_ 0078                   ?_isdigit 0070  
                 ?_spiInit 0070                   ?_spiRead 0070           ___lwdiv@quotient 007B  
                 ?_sprintf 00A0             __size_of_scale 035F             __size_of_setup 0013  
     spiInit@sTransmitEdge 0072             ___wmul@product 0074                  clear_ram0 1C35  
                 _PIE1bits 008C         spiInit@sDataSample 0070                   Lcd_Cmd@a 0073  
       __end_of__div_to_l_ 136D                ??_Lcd_Clear 0074                __stringbase 100F  
        ___wmul@multiplier 0070           ??_Lcd_Write_Char 0071                   _Lcd_Init 1D9C  
                 _Lcd_Port 1C28   __end_of_Lcd_Write_String 1E1F           __size_of_Lcd_Cmd 001A  
              ??__Umul8_16 0072           __size_of___fladd 0288           __size_of___awdiv 0069  
         __size_of___flneg 000B           __size_of___awmod 0059           __size_of___flmul 0361  
         __size_of___flsub 0024           __size_of___fltol 007C           __size_of___lldiv 0066  
         __size_of___llmod 0054           __size_of___lwdiv 0044           __size_of___lwmod 003A  
              _fround$1207 004D                _fround$1208 0049         __end_of__stringtab 1010  
               sprintf@val 00AF                   ___xxtofl 1138           __size_of_isdigit 0012  
          ___lwdiv@divisor 0076            ___lwdiv@counter 007D                   __ptext10 1D3B  
                 __ptext11 11F2                   __ptext20 1C46                   __ptext12 12AF  
                 __ptext21 1F5E                   __ptext13 1138                   __ptext30 1D9C  
                 __ptext22 1E63                   __ptext14 1D16                   __ptext31 1C51  
                 __ptext23 1C3D                   __ptext15 1EB1                   __ptext32 1C99  
                 __ptext24 1C2E                   __ptext16 0802                   __ptext33 1C28  
                 __ptext25 1C83                   __ptext17 10BC                   __ptext26 1C70  
                 __ptext18 1CF2                   __ptext27 1DDD                   __ptext19 1578  
                 __ptext28 1CB3                   __ptext29 1CCE           __size_of_spiInit 0016  
         __size_of_spiRead 0009                   __powers_ 1010                   _esclavo1 00CD  
         __size_of_sprintf 077B              __size_of_main 00D8               spiInit@sType 0073  
        spiInit@sClockIdle 0071                 _INTCONbits 000B                   isdigit@c 0071  
                 scale@scl 0050                  sprintf@ap 00AE           __tdiv_to_l_@exp1 0025  
         __tdiv_to_l_@cntr 0024                  sprintf@sp 00C1           __tdiv_to_l_@quot 0020  
         ___lwmod@dividend 0072           ___lldiv@dividend 0074           ??_spiReceiveWait 0070  
                stringcode 100A         Lcd_Set_Cursor@temp 0077               ?__tdiv_to_l_ 0070  
   __Umul8_16@multiplicand 0070                   sprintf@c 00C4                   sprintf@f 00A0  
         ___lldiv@quotient 0079            ___lwmod@divisor 0070            ___lwmod@counter 0075  
                 stringdir 100A                   stringtab 1000              ___fladd@signs 0062  
             ___fladd@aexp 0063               ___fladd@bexp 0064       __Umul8_16@multiplier 0078  
        __Umul8_16@product 0074  
