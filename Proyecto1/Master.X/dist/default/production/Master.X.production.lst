

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Wed Feb 17 23:23:00 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    24                           	dabs	1,0x7E,2
    25  0000                     
    26                           ; Version 2.20
    27                           ; Generated 12/02/2020 GMT
    28                           ; 
    29                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    30                           ; All rights reserved.
    31                           ; 
    32                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    33                           ; 
    34                           ; Redistribution and use in source and binary forms, with or without modification, are
    35                           ; permitted provided that the following conditions are met:
    36                           ; 
    37                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    38                           ;        conditions and the following disclaimer.
    39                           ; 
    40                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    41                           ;        of conditions and the following disclaimer in the documentation and/or other
    42                           ;        materials provided with the distribution.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F887 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  008F                     	;# 
   105  0090                     	;# 
   106  0091                     	;# 
   107  0092                     	;# 
   108  0093                     	;# 
   109  0093                     	;# 
   110  0093                     	;# 
   111  0094                     	;# 
   112  0095                     	;# 
   113  0096                     	;# 
   114  0097                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009A                     	;# 
   118  009B                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  0105                     	;# 
   124  0107                     	;# 
   125  0108                     	;# 
   126  0109                     	;# 
   127  010C                     	;# 
   128  010C                     	;# 
   129  010D                     	;# 
   130  010E                     	;# 
   131  010F                     	;# 
   132  0185                     	;# 
   133  0187                     	;# 
   134  0188                     	;# 
   135  0189                     	;# 
   136  018C                     	;# 
   137  018D                     	;# 
   138  0000                     	;# 
   139  0001                     	;# 
   140  0002                     	;# 
   141  0003                     	;# 
   142  0004                     	;# 
   143  0005                     	;# 
   144  0006                     	;# 
   145  0007                     	;# 
   146  0008                     	;# 
   147  0009                     	;# 
   148  000A                     	;# 
   149  000B                     	;# 
   150  000C                     	;# 
   151  000D                     	;# 
   152  000E                     	;# 
   153  000E                     	;# 
   154  000F                     	;# 
   155  0010                     	;# 
   156  0011                     	;# 
   157  0012                     	;# 
   158  0013                     	;# 
   159  0014                     	;# 
   160  0015                     	;# 
   161  0015                     	;# 
   162  0016                     	;# 
   163  0017                     	;# 
   164  0018                     	;# 
   165  0019                     	;# 
   166  001A                     	;# 
   167  001B                     	;# 
   168  001B                     	;# 
   169  001C                     	;# 
   170  001D                     	;# 
   171  001E                     	;# 
   172  001F                     	;# 
   173  0081                     	;# 
   174  0085                     	;# 
   175  0086                     	;# 
   176  0087                     	;# 
   177  0088                     	;# 
   178  0089                     	;# 
   179  008C                     	;# 
   180  008D                     	;# 
   181  008E                     	;# 
   182  008F                     	;# 
   183  0090                     	;# 
   184  0091                     	;# 
   185  0092                     	;# 
   186  0093                     	;# 
   187  0093                     	;# 
   188  0093                     	;# 
   189  0094                     	;# 
   190  0095                     	;# 
   191  0096                     	;# 
   192  0097                     	;# 
   193  0098                     	;# 
   194  0099                     	;# 
   195  009A                     	;# 
   196  009B                     	;# 
   197  009C                     	;# 
   198  009D                     	;# 
   199  009E                     	;# 
   200  009F                     	;# 
   201  0105                     	;# 
   202  0107                     	;# 
   203  0108                     	;# 
   204  0109                     	;# 
   205  010C                     	;# 
   206  010C                     	;# 
   207  010D                     	;# 
   208  010E                     	;# 
   209  010F                     	;# 
   210  0185                     	;# 
   211  0187                     	;# 
   212  0188                     	;# 
   213  0189                     	;# 
   214  018C                     	;# 
   215  018D                     	;# 
   216  0000                     	;# 
   217  0001                     	;# 
   218  0002                     	;# 
   219  0003                     	;# 
   220  0004                     	;# 
   221  0005                     	;# 
   222  0006                     	;# 
   223  0007                     	;# 
   224  0008                     	;# 
   225  0009                     	;# 
   226  000A                     	;# 
   227  000B                     	;# 
   228  000C                     	;# 
   229  000D                     	;# 
   230  000E                     	;# 
   231  000E                     	;# 
   232  000F                     	;# 
   233  0010                     	;# 
   234  0011                     	;# 
   235  0012                     	;# 
   236  0013                     	;# 
   237  0014                     	;# 
   238  0015                     	;# 
   239  0015                     	;# 
   240  0016                     	;# 
   241  0017                     	;# 
   242  0018                     	;# 
   243  0019                     	;# 
   244  001A                     	;# 
   245  001B                     	;# 
   246  001B                     	;# 
   247  001C                     	;# 
   248  001D                     	;# 
   249  001E                     	;# 
   250  001F                     	;# 
   251  0081                     	;# 
   252  0085                     	;# 
   253  0086                     	;# 
   254  0087                     	;# 
   255  0088                     	;# 
   256  0089                     	;# 
   257  008C                     	;# 
   258  008D                     	;# 
   259  008E                     	;# 
   260  008F                     	;# 
   261  0090                     	;# 
   262  0091                     	;# 
   263  0092                     	;# 
   264  0093                     	;# 
   265  0093                     	;# 
   266  0093                     	;# 
   267  0094                     	;# 
   268  0095                     	;# 
   269  0096                     	;# 
   270  0097                     	;# 
   271  0098                     	;# 
   272  0099                     	;# 
   273  009A                     	;# 
   274  009B                     	;# 
   275  009C                     	;# 
   276  009D                     	;# 
   277  009E                     	;# 
   278  009F                     	;# 
   279  0105                     	;# 
   280  0107                     	;# 
   281  0108                     	;# 
   282  0109                     	;# 
   283  010C                     	;# 
   284  010C                     	;# 
   285  010D                     	;# 
   286  010E                     	;# 
   287  010F                     	;# 
   288  0185                     	;# 
   289  0187                     	;# 
   290  0188                     	;# 
   291  0189                     	;# 
   292  018C                     	;# 
   293  018D                     	;# 
   294  0000                     	;# 
   295  0001                     	;# 
   296  0002                     	;# 
   297  0003                     	;# 
   298  0004                     	;# 
   299  0005                     	;# 
   300  0006                     	;# 
   301  0007                     	;# 
   302  0008                     	;# 
   303  0009                     	;# 
   304  000A                     	;# 
   305  000B                     	;# 
   306  000C                     	;# 
   307  000D                     	;# 
   308  000E                     	;# 
   309  000E                     	;# 
   310  000F                     	;# 
   311  0010                     	;# 
   312  0011                     	;# 
   313  0012                     	;# 
   314  0013                     	;# 
   315  0014                     	;# 
   316  0015                     	;# 
   317  0015                     	;# 
   318  0016                     	;# 
   319  0017                     	;# 
   320  0018                     	;# 
   321  0019                     	;# 
   322  001A                     	;# 
   323  001B                     	;# 
   324  001B                     	;# 
   325  001C                     	;# 
   326  001D                     	;# 
   327  001E                     	;# 
   328  001F                     	;# 
   329  0081                     	;# 
   330  0085                     	;# 
   331  0086                     	;# 
   332  0087                     	;# 
   333  0088                     	;# 
   334  0089                     	;# 
   335  008C                     	;# 
   336  008D                     	;# 
   337  008E                     	;# 
   338  008F                     	;# 
   339  0090                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0093                     	;# 
   344  0093                     	;# 
   345  0094                     	;# 
   346  0095                     	;# 
   347  0096                     	;# 
   348  0097                     	;# 
   349  0098                     	;# 
   350  0099                     	;# 
   351  009A                     	;# 
   352  009B                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  0105                     	;# 
   358  0107                     	;# 
   359  0108                     	;# 
   360  0109                     	;# 
   361  010C                     	;# 
   362  010C                     	;# 
   363  010D                     	;# 
   364  010E                     	;# 
   365  010F                     	;# 
   366  0185                     	;# 
   367  0187                     	;# 
   368  0188                     	;# 
   369  0189                     	;# 
   370  018C                     	;# 
   371  018D                     	;# 
   372                           
   373                           	psect	idataCOMMON
   374  06AC                     __pidataCOMMON:
   375                           
   376                           ;initializer for _banderaADC
   377  06AC  3401               	retlw	1
   378  0019                     _TXREG	set	25
   379  000B                     _INTCONbits	set	11
   380  0018                     _RCSTAbits	set	24
   381  0008                     _PORTD	set	8
   382  0008                     _PORTDbits	set	8
   383  0006                     _PORTB	set	6
   384  0099                     _SPBRG	set	153
   385  008C                     _PIE1bits	set	140
   386  0098                     _TXSTAbits	set	152
   387  0087                     _TRISC	set	135
   388  0088                     _TRISD	set	136
   389  0086                     _TRISB	set	134
   390  04C1                     _TRMT	set	1217
   391  0187                     _BAUDCTLbits	set	391
   392  0188                     _ANSEL	set	392
   393                           
   394                           	psect	strings
   395  0003                     __pstrings:
   396  0003                     stringtab:
   397  0003                     __stringtab:
   398  0003                     stringcode:	
   399                           ;	String table - string pointers are 1 byte each
   400                           
   401  0003                     stringdir:
   402  0003  3000               	movlw	high stringdir
   403  0004  008A               	movwf	10
   404  0005  0804               	movf	4,w
   405  0006  0A84               	incf	4,f
   406  0007  0782               	addwf	2,f
   407  0008                     __stringbase:
   408  0008  3400               	retlw	0
   409  0009                     __end_of__stringtab:
   410  0009                     STR_1:
   411  0009  3453               	retlw	83	;'S'
   412  000A  3431               	retlw	49	;'1'
   413  000B  343A               	retlw	58	;':'
   414  000C  3420               	retlw	32	;' '
   415  000D  3420               	retlw	32	;' '
   416  000E  3420               	retlw	32	;' '
   417  000F  3453               	retlw	83	;'S'
   418  0010  3432               	retlw	50	;'2'
   419  0011  343A               	retlw	58	;':'
   420  0012  3420               	retlw	32	;' '
   421  0013  3420               	retlw	32	;' '
   422  0014  3420               	retlw	32	;' '
   423  0015  3420               	retlw	32	;' '
   424  0016  3453               	retlw	83	;'S'
   425  0017  3433               	retlw	51	;'3'
   426  0018  343A               	retlw	58	;':'
   427  0019  3400               	retlw	0
   428                           
   429                           	psect	cinit
   430  07EB                     start_initialization:	
   431                           ; #config settings
   432                           
   433  07EB                     __initialization:
   434                           
   435                           ; Initialize objects allocated to COMMON
   436  07EB  120A  118A  26AC  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   437  07F0  00FA               	movwf	__pdataCOMMON& (0+127)
   438                           
   439                           ; Clear objects allocated to BANK0
   440  07F1  1383               	bcf	3,7	;select IRP bank0
   441  07F2  3020               	movlw	low __pbssBANK0
   442  07F3  0084               	movwf	4
   443  07F4  3034               	movlw	low (__pbssBANK0+20)
   444  07F5  120A  118A  26B3  120A  118A  	fcall	clear_ram0
   445                           
   446                           ; Clear objects allocated to COMMON
   447  07FA  01F8               	clrf	__pbssCOMMON& (0+127)
   448  07FB  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   449  07FC                     end_of_initialization:	
   450                           ;End of C runtime variable initialization code
   451                           
   452  07FC                     __end_of__initialization:
   453  07FC  0183               	clrf	3
   454  07FD  120A  118A  2F79   	ljmp	_main	;jump to C main() function
   455                           
   456                           	psect	bssCOMMON
   457  0078                     __pbssCOMMON:
   458  0078                     _mensaje:
   459  0078                     	ds	1
   460  0079                     _adc:
   461  0079                     	ds	1
   462                           
   463                           	psect	dataCOMMON
   464  007A                     __pdataCOMMON:
   465  007A                     _banderaADC:
   466  007A                     	ds	1
   467                           
   468                           	psect	bssBANK0
   469  0020                     __pbssBANK0:
   470  0020                     _s:
   471  0020                     	ds	20
   472                           
   473                           	psect	clrtext
   474  06B3                     clear_ram0:	
   475                           ;	Called with FSR containing the base address, and
   476                           ;	W with the last address+1
   477                           
   478  06B3  0064               	clrwdt	;clear the watchdog before getting into this loop
   479  06B4                     clrloop0:
   480  06B4  0180               	clrf	0	;clear RAM location pointed to by FSR
   481  06B5  0A84               	incf	4,f	;increment pointer
   482  06B6  0604               	xorwf	4,w	;XOR with final address
   483  06B7  1903               	btfsc	3,2	;have we reached the end yet?
   484  06B8  3400               	retlw	0	;all done for this memory range, return
   485  06B9  0604               	xorwf	4,w	;XOR again to restore value
   486  06BA  2EB4               	goto	clrloop0	;do the next byte
   487                           
   488                           	psect	cstackCOMMON
   489  0070                     __pcstackCOMMON:
   490  0070                     ?_INIT_UART:
   491  0070                     ??_INIT_UART:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_read:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ??_read:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_Lcd_Port:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ??_Lcd_Port:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_Lcd_Cmd:	
   507                           ; 1 bytes @ 0x0
   508                           
   509  0070                     ?_Lcd_Clear:	
   510                           ; 1 bytes @ 0x0
   511                           
   512  0070                     ?_Lcd_Init:	
   513                           ; 1 bytes @ 0x0
   514                           
   515  0070                     ?_Lcd_Write_Char:	
   516                           ; 1 bytes @ 0x0
   517                           
   518  0070                     ?_Lcd_Write_String:	
   519                           ; 1 bytes @ 0x0
   520                           
   521  0070                     ?_setup:	
   522                           ; 1 bytes @ 0x0
   523                           
   524  0070                     ??_setup:	
   525                           ; 1 bytes @ 0x0
   526                           
   527  0070                     ?_main:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     Lcd_Port@a:	
   531                           ; 1 bytes @ 0x0
   532                           
   533                           
   534                           ; 1 bytes @ 0x0
   535  0070                     	ds	1
   536  0071                     ??_Lcd_Cmd:
   537  0071                     ??_Lcd_Write_Char:	
   538                           ; 1 bytes @ 0x1
   539                           
   540                           
   541                           ; 1 bytes @ 0x1
   542  0071                     	ds	2
   543  0073                     Lcd_Cmd@a:
   544  0073                     Lcd_Write_Char@y:	
   545                           ; 1 bytes @ 0x3
   546                           
   547                           
   548                           ; 1 bytes @ 0x3
   549  0073                     	ds	1
   550  0074                     ??_Lcd_Clear:
   551  0074                     ?_Lcd_Set_Cursor:	
   552                           ; 1 bytes @ 0x4
   553                           
   554  0074                     ??_Lcd_Init:	
   555                           ; 1 bytes @ 0x4
   556                           
   557  0074                     Lcd_Set_Cursor@b:	
   558                           ; 1 bytes @ 0x4
   559                           
   560  0074                     Lcd_Write_Char@a:	
   561                           ; 1 bytes @ 0x4
   562                           
   563                           
   564                           ; 1 bytes @ 0x4
   565  0074                     	ds	1
   566  0075                     ??_Lcd_Set_Cursor:
   567  0075                     ??_Lcd_Write_String:	
   568                           ; 1 bytes @ 0x5
   569                           
   570  0075                     Lcd_Write_String@i:	
   571                           ; 1 bytes @ 0x5
   572                           
   573                           
   574                           ; 2 bytes @ 0x5
   575  0075                     	ds	1
   576  0076                     Lcd_Set_Cursor@a:
   577                           
   578                           ; 1 bytes @ 0x6
   579  0076                     	ds	1
   580  0077                     Lcd_Set_Cursor@temp:
   581  0077                     Lcd_Write_String@a:	
   582                           ; 1 bytes @ 0x7
   583                           
   584                           
   585                           ; 1 bytes @ 0x7
   586  0077                     	ds	1
   587  0078                     ??_main:
   588                           
   589                           	psect	maintext
   590  0779                     __pmaintext:	
   591                           ; 1 bytes @ 0x8
   592 ;;
   593 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   594 ;;
   595 ;; *************** function _main *****************
   596 ;; Defined at:
   597 ;;		line 61 in file "main.c"
   598 ;; Parameters:    Size  Location     Type
   599 ;;		None
   600 ;; Auto vars:     Size  Location     Type
   601 ;;  a               2    0        unsigned int 
   602 ;; Return value:  Size  Location     Type
   603 ;;                  1    wreg      void 
   604 ;; Registers used:
   605 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   606 ;; Tracked objects:
   607 ;;		On entry : B00/0
   608 ;;		On exit  : 0/0
   609 ;;		Unchanged: 0/0
   610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   611 ;;      Params:         0       0       0       0       0
   612 ;;      Locals:         0       0       0       0       0
   613 ;;      Temps:          0       0       0       0       0
   614 ;;      Totals:         0       0       0       0       0
   615 ;;Total ram usage:        0 bytes
   616 ;; Hardware stack levels required when called:    3
   617 ;; This function calls:
   618 ;;		_INIT_UART
   619 ;;		_Lcd_Clear
   620 ;;		_Lcd_Init
   621 ;;		_Lcd_Set_Cursor
   622 ;;		_Lcd_Write_String
   623 ;;		_read
   624 ;;		_setup
   625 ;; This function is called by:
   626 ;;		Startup code after reset
   627 ;; This function uses a non-reentrant model
   628 ;;
   629                           
   630                           
   631                           ;psect for function _main
   632  0779                     _main:
   633  0779                     l846:	
   634                           ;incstack = 0
   635                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   636                           
   637                           
   638                           ;main.c: 66:     unsigned int a;;main.c: 67:     setup();
   639  0779  120A  118A  26D3  120A  118A  	fcall	_setup
   640                           
   641                           ;main.c: 68:     INIT_UART();
   642  077E  120A  118A  26E0  120A  118A  	fcall	_INIT_UART
   643  0783                     l848:
   644                           
   645                           ;main.c: 69:     read();
   646  0783  120A  118A  26BB  120A  118A  	fcall	_read
   647  0788                     l850:
   648                           
   649                           ;main.c: 70:     Lcd_Init();
   650  0788  120A  118A  27A4  120A  118A  	fcall	_Lcd_Init
   651  078D                     l852:
   652                           
   653                           ;main.c: 71:     Lcd_Clear();
   654  078D  120A  118A  26C6  120A  118A  	fcall	_Lcd_Clear
   655  0792                     l854:
   656                           
   657                           ;main.c: 76:         Lcd_Set_Cursor(1, 1);
   658  0792  01F4               	clrf	Lcd_Set_Cursor@b
   659  0793  0AF4               	incf	Lcd_Set_Cursor@b,f
   660  0794  3001               	movlw	1
   661  0795  120A  118A  2730  120A  118A  	fcall	_Lcd_Set_Cursor
   662  079A                     l856:
   663                           
   664                           ;main.c: 77:         Lcd_Write_String("S1:   S2:    S3:");
   665  079A  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   666  079B  120A  118A  2754  120A  118A  	fcall	_Lcd_Write_String
   667  07A0  2F92               	goto	l854
   668  07A1  120A  118A  2800   	ljmp	start
   669  07A4                     __end_of_main:
   670                           
   671                           	psect	text1
   672  06D3                     __ptext1:	
   673 ;; *************** function _setup *****************
   674 ;; Defined at:
   675 ;;		line 50 in file "main.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;		None
   678 ;; Auto vars:     Size  Location     Type
   679 ;;		None
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, status,2
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   689 ;;      Params:         0       0       0       0       0
   690 ;;      Locals:         0       0       0       0       0
   691 ;;      Temps:          0       0       0       0       0
   692 ;;      Totals:         0       0       0       0       0
   693 ;;Total ram usage:        0 bytes
   694 ;; Hardware stack levels used:    1
   695 ;; This function calls:
   696 ;;		Nothing
   697 ;; This function is called by:
   698 ;;		_main
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           
   703                           ;psect for function _setup
   704  06D3                     _setup:
   705  06D3                     l772:	
   706                           ;incstack = 0
   707                           ; Regs used in _setup: [wreg+status,2]
   708                           
   709                           
   710                           ;main.c: 51:     ANSEL = 0b00000011;
   711  06D3  3003               	movlw	3
   712  06D4  1683               	bsf	3,5	;RP0=1, select bank3
   713  06D5  1703               	bsf	3,6	;RP1=1, select bank3
   714  06D6  0088               	movwf	8	;volatile
   715  06D7                     l774:
   716                           
   717                           ;main.c: 53:     TRISB = 0b00000000;
   718  06D7  1683               	bsf	3,5	;RP0=1, select bank1
   719  06D8  1303               	bcf	3,6	;RP1=0, select bank1
   720  06D9  0186               	clrf	6	;volatile
   721  06DA                     l776:
   722                           
   723                           ;main.c: 54:     TRISD = 0b00000000;
   724  06DA  0188               	clrf	8	;volatile
   725  06DB                     l778:
   726                           
   727                           ;main.c: 56:     PORTB = 0;
   728  06DB  1283               	bcf	3,5	;RP0=0, select bank0
   729  06DC  1303               	bcf	3,6	;RP1=0, select bank0
   730  06DD  0186               	clrf	6	;volatile
   731  06DE                     l780:
   732                           
   733                           ;main.c: 57:     PORTD = 0;
   734  06DE  0188               	clrf	8	;volatile
   735  06DF                     l72:
   736  06DF  0008               	return
   737  06E0                     __end_of_setup:
   738                           
   739                           	psect	text2
   740  06BB                     __ptext2:	
   741 ;; *************** function _read *****************
   742 ;; Defined at:
   743 ;;		line 41 in file "UART.c"
   744 ;; Parameters:    Size  Location     Type
   745 ;;		None
   746 ;; Auto vars:     Size  Location     Type
   747 ;;		None
   748 ;; Return value:  Size  Location     Type
   749 ;;                  1    wreg      void 
   750 ;; Registers used:
   751 ;;		None
   752 ;; Tracked objects:
   753 ;;		On entry : 0/0
   754 ;;		On exit  : 0/0
   755 ;;		Unchanged: 0/0
   756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   757 ;;      Params:         0       0       0       0       0
   758 ;;      Locals:         0       0       0       0       0
   759 ;;      Temps:          0       0       0       0       0
   760 ;;      Totals:         0       0       0       0       0
   761 ;;Total ram usage:        0 bytes
   762 ;; Hardware stack levels used:    1
   763 ;; This function calls:
   764 ;;		Nothing
   765 ;; This function is called by:
   766 ;;		_main
   767 ;; This function uses a non-reentrant model
   768 ;;
   769                           
   770                           
   771                           ;psect for function _read
   772  06BB                     _read:
   773  06BB                     l798:	
   774                           ;incstack = 0
   775                           ; Regs used in _read: []
   776                           
   777                           
   778                           ;UART.c: 42:     RCSTAbits.CREN = 1;
   779  06BB  1283               	bcf	3,5	;RP0=0, select bank0
   780  06BC  1303               	bcf	3,6	;RP1=0, select bank0
   781  06BD  1618               	bsf	24,4	;volatile
   782                           
   783                           ;UART.c: 43:     RCSTAbits.FERR = 0;
   784  06BE  1118               	bcf	24,2	;volatile
   785                           
   786                           ;UART.c: 44:     PIE1bits.RCIE = 1;
   787  06BF  1683               	bsf	3,5	;RP0=1, select bank1
   788  06C0  1303               	bcf	3,6	;RP1=0, select bank1
   789  06C1  168C               	bsf	12,5	;volatile
   790                           
   791                           ;UART.c: 45:     RCSTAbits.OERR = 0;
   792  06C2  1283               	bcf	3,5	;RP0=0, select bank0
   793  06C3  1303               	bcf	3,6	;RP1=0, select bank0
   794  06C4  1098               	bcf	24,1	;volatile
   795  06C5                     l122:
   796  06C5  0008               	return
   797  06C6                     __end_of_read:
   798                           
   799                           	psect	text3
   800  0754                     __ptext3:	
   801 ;; *************** function _Lcd_Write_String *****************
   802 ;; Defined at:
   803 ;;		line 110 in file "LCD.c"
   804 ;; Parameters:    Size  Location     Type
   805 ;;  a               1    wreg     PTR unsigned char 
   806 ;;		 -> STR_1(17), 
   807 ;; Auto vars:     Size  Location     Type
   808 ;;  a               1    7[COMMON] PTR unsigned char 
   809 ;;		 -> STR_1(17), 
   810 ;;  i               2    5[COMMON] int 
   811 ;; Return value:  Size  Location     Type
   812 ;;                  1    wreg      void 
   813 ;; Registers used:
   814 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   820 ;;      Params:         0       0       0       0       0
   821 ;;      Locals:         3       0       0       0       0
   822 ;;      Temps:          0       0       0       0       0
   823 ;;      Totals:         3       0       0       0       0
   824 ;;Total ram usage:        3 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; Hardware stack levels required when called:    2
   827 ;; This function calls:
   828 ;;		_Lcd_Write_Char
   829 ;; This function is called by:
   830 ;;		_main
   831 ;; This function uses a non-reentrant model
   832 ;;
   833                           
   834                           
   835                           ;psect for function _Lcd_Write_String
   836  0754                     _Lcd_Write_String:
   837                           
   838                           ;incstack = 0
   839                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   840                           ;Lcd_Write_String@a stored from wreg
   841  0754  00F7               	movwf	Lcd_Write_String@a
   842  0755                     l838:
   843                           
   844                           ;LCD.c: 110: void Lcd_Write_String(char *a);LCD.c: 111: {;LCD.c: 112:  int i;;LCD.c: 113
      +                          :  for(i=0;a[i]!='\0';i++)
   845  0755  01F5               	clrf	Lcd_Write_String@i
   846  0756  01F6               	clrf	Lcd_Write_String@i+1
   847  0757  2F6B               	goto	l844
   848  0758                     l840:
   849                           
   850                           ;LCD.c: 114:     Lcd_Write_Char(a[i]);
   851  0758  0875               	movf	Lcd_Write_String@i,w
   852  0759  0777               	addwf	Lcd_Write_String@a,w
   853  075A  0084               	movwf	4
   854  075B  120A  118A  2003  120A  118A  	fcall	stringdir
   855  0760  120A  118A  2710  120A  118A  	fcall	_Lcd_Write_Char
   856  0765                     l842:
   857  0765  3001               	movlw	1
   858  0766  07F5               	addwf	Lcd_Write_String@i,f
   859  0767  1803               	skipnc
   860  0768  0AF6               	incf	Lcd_Write_String@i+1,f
   861  0769  3000               	movlw	0
   862  076A  07F6               	addwf	Lcd_Write_String@i+1,f
   863  076B                     l844:
   864  076B  0875               	movf	Lcd_Write_String@i,w
   865  076C  0777               	addwf	Lcd_Write_String@a,w
   866  076D  0084               	movwf	4
   867  076E  120A  118A  2003  120A  118A  	fcall	stringdir
   868  0773  3A00               	xorlw	0
   869  0774  1D03               	skipz
   870  0775  2F77               	goto	u111
   871  0776  2F78               	goto	u110
   872  0777                     u111:
   873  0777  2F58               	goto	l840
   874  0778                     u110:
   875  0778                     l33:
   876  0778  0008               	return
   877  0779                     __end_of_Lcd_Write_String:
   878                           
   879                           	psect	text4
   880  0710                     __ptext4:	
   881 ;; *************** function _Lcd_Write_Char *****************
   882 ;; Defined at:
   883 ;;		line 94 in file "LCD.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;  a               1    wreg     unsigned char 
   886 ;; Auto vars:     Size  Location     Type
   887 ;;  a               1    4[COMMON] unsigned char 
   888 ;;  y               1    3[COMMON] unsigned char 
   889 ;;  temp            1    0        unsigned char 
   890 ;; Return value:  Size  Location     Type
   891 ;;                  1    wreg      void 
   892 ;; Registers used:
   893 ;;		wreg, status,2, status,0, pclath, cstack
   894 ;; Tracked objects:
   895 ;;		On entry : 0/0
   896 ;;		On exit  : 0/0
   897 ;;		Unchanged: 0/0
   898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   899 ;;      Params:         0       0       0       0       0
   900 ;;      Locals:         3       0       0       0       0
   901 ;;      Temps:          1       0       0       0       0
   902 ;;      Totals:         4       0       0       0       0
   903 ;;Total ram usage:        4 bytes
   904 ;; Hardware stack levels used:    1
   905 ;; Hardware stack levels required when called:    1
   906 ;; This function calls:
   907 ;;		_Lcd_Port
   908 ;; This function is called by:
   909 ;;		_Lcd_Write_String
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           
   913                           
   914                           ;psect for function _Lcd_Write_Char
   915  0710                     _Lcd_Write_Char:
   916                           
   917                           ;incstack = 0
   918                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
   919                           ;Lcd_Write_Char@a stored from wreg
   920  0710  00F4               	movwf	Lcd_Write_Char@a
   921  0711                     l726:
   922                           
   923                           ;LCD.c: 98:    y = a&0xF0;
   924  0711  0874               	movf	Lcd_Write_Char@a,w
   925  0712  39F0               	andlw	240
   926  0713  00F1               	movwf	??_Lcd_Write_Char
   927  0714  0871               	movf	??_Lcd_Write_Char,w
   928  0715  00F3               	movwf	Lcd_Write_Char@y
   929  0716                     l728:
   930                           
   931                           ;LCD.c: 99:    PORTDbits.RD2 = 1;
   932  0716  1283               	bcf	3,5	;RP0=0, select bank0
   933  0717  1303               	bcf	3,6	;RP1=0, select bank0
   934  0718  1508               	bsf	8,2	;volatile
   935  0719                     l730:
   936                           
   937                           ;LCD.c: 100:    Lcd_Port(a);
   938  0719  0874               	movf	Lcd_Write_Char@a,w
   939  071A  120A  118A  26AD  120A  118A  	fcall	_Lcd_Port
   940  071F                     l732:
   941                           
   942                           ;LCD.c: 101:    PORTDbits.RD3 = 1;
   943  071F  1283               	bcf	3,5	;RP0=0, select bank0
   944  0720  1303               	bcf	3,6	;RP1=0, select bank0
   945  0721  1588               	bsf	8,3	;volatile
   946  0722                     l734:
   947                           
   948                           ;LCD.c: 102:    _delay((unsigned long)((40)*(8000000/4000000.0)));
   949  0722  301A               	movlw	26
   950  0723  00F1               	movwf	??_Lcd_Write_Char
   951  0724                     u127:
   952  0724  0BF1               	decfsz	??_Lcd_Write_Char,f
   953  0725  2F24               	goto	u127
   954  0726  0000               	nop
   955  0727                     l736:
   956                           
   957                           ;LCD.c: 103:    PORTDbits.RD3 = 0;
   958  0727  1283               	bcf	3,5	;RP0=0, select bank0
   959  0728  1303               	bcf	3,6	;RP1=0, select bank0
   960  0729  1188               	bcf	8,3	;volatile
   961  072A                     l738:
   962                           
   963                           ;LCD.c: 106:    _delay((unsigned long)((40)*(8000000/4000000.0)));
   964  072A  301A               	movlw	26
   965  072B  00F1               	movwf	??_Lcd_Write_Char
   966  072C                     u137:
   967  072C  0BF1               	decfsz	??_Lcd_Write_Char,f
   968  072D  2F2C               	goto	u137
   969  072E  0000               	nop
   970  072F                     l27:
   971  072F  0008               	return
   972  0730                     __end_of_Lcd_Write_Char:
   973                           
   974                           	psect	text5
   975  0730                     __ptext5:	
   976 ;; *************** function _Lcd_Set_Cursor *****************
   977 ;; Defined at:
   978 ;;		line 45 in file "LCD.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;  a               1    wreg     unsigned char 
   981 ;;  b               1    4[COMMON] unsigned char 
   982 ;; Auto vars:     Size  Location     Type
   983 ;;  a               1    6[COMMON] unsigned char 
   984 ;;  temp            1    7[COMMON] unsigned char 
   985 ;;  y               1    0        unsigned char 
   986 ;;  z               1    0        unsigned char 
   987 ;; Return value:  Size  Location     Type
   988 ;;                  1    wreg      void 
   989 ;; Registers used:
   990 ;;		wreg, status,2, status,0, pclath, cstack
   991 ;; Tracked objects:
   992 ;;		On entry : 0/0
   993 ;;		On exit  : 0/0
   994 ;;		Unchanged: 0/0
   995 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   996 ;;      Params:         1       0       0       0       0
   997 ;;      Locals:         2       0       0       0       0
   998 ;;      Temps:          1       0       0       0       0
   999 ;;      Totals:         4       0       0       0       0
  1000 ;;Total ram usage:        4 bytes
  1001 ;; Hardware stack levels used:    1
  1002 ;; Hardware stack levels required when called:    2
  1003 ;; This function calls:
  1004 ;;		_Lcd_Cmd
  1005 ;; This function is called by:
  1006 ;;		_main
  1007 ;; This function uses a non-reentrant model
  1008 ;;
  1009                           
  1010                           
  1011                           ;psect for function _Lcd_Set_Cursor
  1012  0730                     _Lcd_Set_Cursor:
  1013                           
  1014                           ;incstack = 0
  1015                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1016                           ;Lcd_Set_Cursor@a stored from wreg
  1017  0730  00F6               	movwf	Lcd_Set_Cursor@a
  1018  0731                     l826:
  1019                           
  1020                           ;LCD.c: 45: void Lcd_Set_Cursor(char a, char b);LCD.c: 46: {;LCD.c: 47:  char temp,z,y;;
      +                          LCD.c: 48:  if(a == 1)
  1021  0731  0376               	decf	Lcd_Set_Cursor@a,w
  1022  0732  1D03               	btfss	3,2
  1023  0733  2F35               	goto	u91
  1024  0734  2F36               	goto	u90
  1025  0735                     u91:
  1026  0735  2F42               	goto	l832
  1027  0736                     u90:
  1028  0736                     l828:
  1029                           
  1030                           ;LCD.c: 49:  {;LCD.c: 50:    temp = 0x80 + b - 1;
  1031  0736  0874               	movf	Lcd_Set_Cursor@b,w
  1032  0737  3E7F               	addlw	127
  1033  0738  00F5               	movwf	??_Lcd_Set_Cursor
  1034  0739  0875               	movf	??_Lcd_Set_Cursor,w
  1035  073A  00F7               	movwf	Lcd_Set_Cursor@temp
  1036  073B                     l830:
  1037                           
  1038                           ;LCD.c: 55:       Lcd_Cmd(temp);
  1039  073B  0877               	movf	Lcd_Set_Cursor@temp,w
  1040  073C  120A  118A  26F6  120A  118A  	fcall	_Lcd_Cmd
  1041                           
  1042                           ;LCD.c: 56:  }
  1043  0741  2F53               	goto	l21
  1044  0742                     l832:
  1045  0742  3002               	movlw	2
  1046  0743  0676               	xorwf	Lcd_Set_Cursor@a,w
  1047  0744  1D03               	btfss	3,2
  1048  0745  2F47               	goto	u101
  1049  0746  2F48               	goto	u100
  1050  0747                     u101:
  1051  0747  2F53               	goto	l21
  1052  0748                     u100:
  1053  0748                     l834:
  1054                           
  1055                           ;LCD.c: 58:  {;LCD.c: 59:   temp = 0xC0 + b - 1;
  1056  0748  0874               	movf	Lcd_Set_Cursor@b,w
  1057  0749  3EBF               	addlw	191
  1058  074A  00F5               	movwf	??_Lcd_Set_Cursor
  1059  074B  0875               	movf	??_Lcd_Set_Cursor,w
  1060  074C  00F7               	movwf	Lcd_Set_Cursor@temp
  1061  074D                     l836:
  1062                           
  1063                           ;LCD.c: 64:         Lcd_Cmd(temp);
  1064  074D  0877               	movf	Lcd_Set_Cursor@temp,w
  1065  074E  120A  118A  26F6  120A  118A  	fcall	_Lcd_Cmd
  1066  0753                     l21:
  1067  0753  0008               	return
  1068  0754                     __end_of_Lcd_Set_Cursor:
  1069                           
  1070                           	psect	text6
  1071  07A4                     __ptext6:	
  1072 ;; *************** function _Lcd_Init *****************
  1073 ;; Defined at:
  1074 ;;		line 68 in file "LCD.c"
  1075 ;; Parameters:    Size  Location     Type
  1076 ;;		None
  1077 ;; Auto vars:     Size  Location     Type
  1078 ;;		None
  1079 ;; Return value:  Size  Location     Type
  1080 ;;                  1    wreg      void 
  1081 ;; Registers used:
  1082 ;;		wreg, status,2, status,0, pclath, cstack
  1083 ;; Tracked objects:
  1084 ;;		On entry : 0/0
  1085 ;;		On exit  : 0/0
  1086 ;;		Unchanged: 0/0
  1087 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1088 ;;      Params:         0       0       0       0       0
  1089 ;;      Locals:         0       0       0       0       0
  1090 ;;      Temps:          2       0       0       0       0
  1091 ;;      Totals:         2       0       0       0       0
  1092 ;;Total ram usage:        2 bytes
  1093 ;; Hardware stack levels used:    1
  1094 ;; Hardware stack levels required when called:    2
  1095 ;; This function calls:
  1096 ;;		_Lcd_Cmd
  1097 ;;		_Lcd_Port
  1098 ;; This function is called by:
  1099 ;;		_main
  1100 ;; This function uses a non-reentrant model
  1101 ;;
  1102                           
  1103                           
  1104                           ;psect for function _Lcd_Init
  1105  07A4                     _Lcd_Init:
  1106  07A4                     l754:	
  1107                           ;incstack = 0
  1108                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  1109                           
  1110                           
  1111                           ;LCD.c: 70:   Lcd_Port(0x00);
  1112  07A4  3000               	movlw	0
  1113  07A5  120A  118A  26AD  120A  118A  	fcall	_Lcd_Port
  1114  07AA                     l756:
  1115                           
  1116                           ;LCD.c: 71:    _delay((unsigned long)((20)*(8000000/4000.0)));
  1117  07AA  3034               	movlw	52
  1118  07AB  00F5               	movwf	??_Lcd_Init+1
  1119  07AC  30F1               	movlw	241
  1120  07AD  00F4               	movwf	??_Lcd_Init
  1121  07AE                     u147:
  1122  07AE  0BF4               	decfsz	??_Lcd_Init,f
  1123  07AF  2FAE               	goto	u147
  1124  07B0  0BF5               	decfsz	??_Lcd_Init+1,f
  1125  07B1  2FAE               	goto	u147
  1126  07B2  2FB3               	nop2
  1127  07B3                     l758:
  1128                           
  1129                           ;LCD.c: 72:   Lcd_Cmd(0x3F);
  1130  07B3  303F               	movlw	63
  1131  07B4  120A  118A  26F6  120A  118A  	fcall	_Lcd_Cmd
  1132                           
  1133                           ;LCD.c: 73:  _delay((unsigned long)((10)*(8000000/4000.0)));
  1134  07B9  301A               	movlw	26
  1135  07BA  00F5               	movwf	??_Lcd_Init+1
  1136  07BB  30F8               	movlw	248
  1137  07BC  00F4               	movwf	??_Lcd_Init
  1138  07BD                     u157:
  1139  07BD  0BF4               	decfsz	??_Lcd_Init,f
  1140  07BE  2FBD               	goto	u157
  1141  07BF  0BF5               	decfsz	??_Lcd_Init+1,f
  1142  07C0  2FBD               	goto	u157
  1143  07C1  0000               	nop
  1144  07C2                     l760:
  1145                           
  1146                           ;LCD.c: 74:   Lcd_Cmd(0x3F);
  1147  07C2  303F               	movlw	63
  1148  07C3  120A  118A  26F6  120A  118A  	fcall	_Lcd_Cmd
  1149  07C8                     l762:
  1150                           
  1151                           ;LCD.c: 75:  _delay((unsigned long)((200)*(8000000/4000000.0)));
  1152  07C8  3085               	movlw	133
  1153  07C9  00F4               	movwf	??_Lcd_Init
  1154  07CA                     u167:
  1155  07CA  0BF4               	decfsz	??_Lcd_Init,f
  1156  07CB  2FCA               	goto	u167
  1157                           
  1158                           ;LCD.c: 76:   Lcd_Cmd(0x3F);
  1159  07CC  303F               	movlw	63
  1160  07CD  120A  118A  26F6  120A  118A  	fcall	_Lcd_Cmd
  1161                           
  1162                           ;LCD.c: 78:   Lcd_Cmd (0x32);
  1163  07D2  3032               	movlw	50
  1164  07D3  120A  118A  26F6  120A  118A  	fcall	_Lcd_Cmd
  1165                           
  1166                           ;LCD.c: 79:   Lcd_Cmd (0x38);
  1167  07D8  3038               	movlw	56
  1168  07D9  120A  118A  26F6  120A  118A  	fcall	_Lcd_Cmd
  1169                           
  1170                           ;LCD.c: 80:   Lcd_Cmd (0x0C);
  1171  07DE  300C               	movlw	12
  1172  07DF  120A  118A  26F6  120A  118A  	fcall	_Lcd_Cmd
  1173                           
  1174                           ;LCD.c: 81:   Lcd_Cmd (0x06);
  1175  07E4  3006               	movlw	6
  1176  07E5  120A  118A  26F6  120A  118A  	fcall	_Lcd_Cmd
  1177  07EA                     l24:
  1178  07EA  0008               	return
  1179  07EB                     __end_of_Lcd_Init:
  1180                           
  1181                           	psect	text7
  1182  06C6                     __ptext7:	
  1183 ;; *************** function _Lcd_Clear *****************
  1184 ;; Defined at:
  1185 ;;		line 39 in file "LCD.c"
  1186 ;; Parameters:    Size  Location     Type
  1187 ;;		None
  1188 ;; Auto vars:     Size  Location     Type
  1189 ;;		None
  1190 ;; Return value:  Size  Location     Type
  1191 ;;                  1    wreg      void 
  1192 ;; Registers used:
  1193 ;;		wreg, status,2, status,0, pclath, cstack
  1194 ;; Tracked objects:
  1195 ;;		On entry : 0/0
  1196 ;;		On exit  : 0/0
  1197 ;;		Unchanged: 0/0
  1198 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1199 ;;      Params:         0       0       0       0       0
  1200 ;;      Locals:         0       0       0       0       0
  1201 ;;      Temps:          0       0       0       0       0
  1202 ;;      Totals:         0       0       0       0       0
  1203 ;;Total ram usage:        0 bytes
  1204 ;; Hardware stack levels used:    1
  1205 ;; Hardware stack levels required when called:    2
  1206 ;; This function calls:
  1207 ;;		_Lcd_Cmd
  1208 ;; This function is called by:
  1209 ;;		_main
  1210 ;; This function uses a non-reentrant model
  1211 ;;
  1212                           
  1213                           
  1214                           ;psect for function _Lcd_Clear
  1215  06C6                     _Lcd_Clear:
  1216  06C6                     l740:	
  1217                           ;incstack = 0
  1218                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  1219                           
  1220                           
  1221                           ;LCD.c: 41:  Lcd_Cmd(0);
  1222  06C6  3000               	movlw	0
  1223  06C7  120A  118A  26F6  120A  118A  	fcall	_Lcd_Cmd
  1224                           
  1225                           ;LCD.c: 42:  Lcd_Cmd(1);
  1226  06CC  3001               	movlw	1
  1227  06CD  120A  118A  26F6  120A  118A  	fcall	_Lcd_Cmd
  1228  06D2                     l15:
  1229  06D2  0008               	return
  1230  06D3                     __end_of_Lcd_Clear:
  1231                           
  1232                           	psect	text8
  1233  06F6                     __ptext8:	
  1234 ;; *************** function _Lcd_Cmd *****************
  1235 ;; Defined at:
  1236 ;;		line 30 in file "LCD.c"
  1237 ;; Parameters:    Size  Location     Type
  1238 ;;  a               1    wreg     unsigned char 
  1239 ;; Auto vars:     Size  Location     Type
  1240 ;;  a               1    3[COMMON] unsigned char 
  1241 ;; Return value:  Size  Location     Type
  1242 ;;                  1    wreg      void 
  1243 ;; Registers used:
  1244 ;;		wreg, status,2, status,0, pclath, cstack
  1245 ;; Tracked objects:
  1246 ;;		On entry : 0/0
  1247 ;;		On exit  : 0/0
  1248 ;;		Unchanged: 0/0
  1249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1250 ;;      Params:         0       0       0       0       0
  1251 ;;      Locals:         1       0       0       0       0
  1252 ;;      Temps:          2       0       0       0       0
  1253 ;;      Totals:         3       0       0       0       0
  1254 ;;Total ram usage:        3 bytes
  1255 ;; Hardware stack levels used:    1
  1256 ;; Hardware stack levels required when called:    1
  1257 ;; This function calls:
  1258 ;;		_Lcd_Port
  1259 ;; This function is called by:
  1260 ;;		_Lcd_Clear
  1261 ;;		_Lcd_Set_Cursor
  1262 ;;		_Lcd_Init
  1263 ;;		_Lcd_Shift_Right
  1264 ;;		_Lcd_Shift_Left
  1265 ;; This function uses a non-reentrant model
  1266 ;;
  1267                           
  1268                           
  1269                           ;psect for function _Lcd_Cmd
  1270  06F6                     _Lcd_Cmd:
  1271                           
  1272                           ;incstack = 0
  1273                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  1274                           ;Lcd_Cmd@a stored from wreg
  1275  06F6  00F3               	movwf	Lcd_Cmd@a
  1276  06F7                     l716:
  1277                           
  1278                           ;LCD.c: 30: void Lcd_Cmd(char a);LCD.c: 31: {;LCD.c: 32:  PORTDbits.RD2 = 0;
  1279  06F7  1283               	bcf	3,5	;RP0=0, select bank0
  1280  06F8  1303               	bcf	3,6	;RP1=0, select bank0
  1281  06F9  1108               	bcf	8,2	;volatile
  1282  06FA                     l718:
  1283                           
  1284                           ;LCD.c: 33:  Lcd_Port(a);
  1285  06FA  0873               	movf	Lcd_Cmd@a,w
  1286  06FB  120A  118A  26AD  120A  118A  	fcall	_Lcd_Port
  1287  0700                     l720:
  1288                           
  1289                           ;LCD.c: 34:  PORTDbits.RD3 = 1;
  1290  0700  1283               	bcf	3,5	;RP0=0, select bank0
  1291  0701  1303               	bcf	3,6	;RP1=0, select bank0
  1292  0702  1588               	bsf	8,3	;volatile
  1293  0703                     l722:
  1294                           
  1295                           ;LCD.c: 35:         _delay((unsigned long)((4)*(8000000/4000.0)));
  1296  0703  300B               	movlw	11
  1297  0704  00F2               	movwf	??_Lcd_Cmd+1
  1298  0705  3062               	movlw	98
  1299  0706  00F1               	movwf	??_Lcd_Cmd
  1300  0707                     u177:
  1301  0707  0BF1               	decfsz	??_Lcd_Cmd,f
  1302  0708  2F07               	goto	u177
  1303  0709  0BF2               	decfsz	??_Lcd_Cmd+1,f
  1304  070A  2F07               	goto	u177
  1305  070B  0000               	nop
  1306  070C                     l724:
  1307                           
  1308                           ;LCD.c: 36:         PORTDbits.RD3 = 0;
  1309  070C  1283               	bcf	3,5	;RP0=0, select bank0
  1310  070D  1303               	bcf	3,6	;RP1=0, select bank0
  1311  070E  1188               	bcf	8,3	;volatile
  1312  070F                     l12:
  1313  070F  0008               	return
  1314  0710                     __end_of_Lcd_Cmd:
  1315                           
  1316                           	psect	text9
  1317  06AD                     __ptext9:	
  1318 ;; *************** function _Lcd_Port *****************
  1319 ;; Defined at:
  1320 ;;		line 23 in file "LCD.c"
  1321 ;; Parameters:    Size  Location     Type
  1322 ;;  a               1    wreg     unsigned char 
  1323 ;; Auto vars:     Size  Location     Type
  1324 ;;  a               1    0[COMMON] unsigned char 
  1325 ;; Return value:  Size  Location     Type
  1326 ;;                  1    wreg      void 
  1327 ;; Registers used:
  1328 ;;		wreg
  1329 ;; Tracked objects:
  1330 ;;		On entry : 0/0
  1331 ;;		On exit  : 0/0
  1332 ;;		Unchanged: 0/0
  1333 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1334 ;;      Params:         0       0       0       0       0
  1335 ;;      Locals:         1       0       0       0       0
  1336 ;;      Temps:          0       0       0       0       0
  1337 ;;      Totals:         1       0       0       0       0
  1338 ;;Total ram usage:        1 bytes
  1339 ;; Hardware stack levels used:    1
  1340 ;; This function calls:
  1341 ;;		Nothing
  1342 ;; This function is called by:
  1343 ;;		_Lcd_Cmd
  1344 ;;		_Lcd_Init
  1345 ;;		_Lcd_Write_Char
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           
  1350                           ;psect for function _Lcd_Port
  1351  06AD                     _Lcd_Port:
  1352                           
  1353                           ;incstack = 0
  1354                           ; Regs used in _Lcd_Port: [wreg]
  1355                           ;Lcd_Port@a stored from wreg
  1356  06AD  00F0               	movwf	Lcd_Port@a
  1357  06AE                     l714:
  1358                           
  1359                           ;LCD.c: 23: void Lcd_Port(char a);LCD.c: 24: {;LCD.c: 26:     PORTB = a;
  1360  06AE  0870               	movf	Lcd_Port@a,w
  1361  06AF  1283               	bcf	3,5	;RP0=0, select bank0
  1362  06B0  1303               	bcf	3,6	;RP1=0, select bank0
  1363  06B1  0086               	movwf	6	;volatile
  1364  06B2                     l9:
  1365  06B2  0008               	return
  1366  06B3                     __end_of_Lcd_Port:
  1367                           
  1368                           	psect	text10
  1369  06E0                     __ptext10:	
  1370 ;; *************** function _INIT_UART *****************
  1371 ;; Defined at:
  1372 ;;		line 10 in file "UART.c"
  1373 ;; Parameters:    Size  Location     Type
  1374 ;;		None
  1375 ;; Auto vars:     Size  Location     Type
  1376 ;;		None
  1377 ;; Return value:  Size  Location     Type
  1378 ;;                  1    wreg      void 
  1379 ;; Registers used:
  1380 ;;		wreg
  1381 ;; Tracked objects:
  1382 ;;		On entry : 0/0
  1383 ;;		On exit  : 0/0
  1384 ;;		Unchanged: 0/0
  1385 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1386 ;;      Params:         0       0       0       0       0
  1387 ;;      Locals:         0       0       0       0       0
  1388 ;;      Temps:          0       0       0       0       0
  1389 ;;      Totals:         0       0       0       0       0
  1390 ;;Total ram usage:        0 bytes
  1391 ;; Hardware stack levels used:    1
  1392 ;; This function calls:
  1393 ;;		Nothing
  1394 ;; This function is called by:
  1395 ;;		_main
  1396 ;; This function uses a non-reentrant model
  1397 ;;
  1398                           
  1399                           
  1400                           ;psect for function _INIT_UART
  1401  06E0                     _INIT_UART:
  1402  06E0                     l782:	
  1403                           ;incstack = 0
  1404                           ; Regs used in _INIT_UART: [wreg]
  1405                           
  1406                           
  1407                           ;UART.c: 11:     TRISC = 0b10000000;
  1408  06E0  3080               	movlw	128
  1409  06E1  1683               	bsf	3,5	;RP0=1, select bank1
  1410  06E2  1303               	bcf	3,6	;RP1=0, select bank1
  1411  06E3  0087               	movwf	7	;volatile
  1412  06E4                     l784:
  1413                           
  1414                           ;UART.c: 12:     TXSTAbits.SYNC = 0;
  1415  06E4  1218               	bcf	24,4	;volatile
  1416  06E5                     l786:
  1417                           
  1418                           ;UART.c: 13:     RCSTAbits.SPEN = 1;
  1419  06E5  1283               	bcf	3,5	;RP0=0, select bank0
  1420  06E6  1303               	bcf	3,6	;RP1=0, select bank0
  1421  06E7  1798               	bsf	24,7	;volatile
  1422  06E8                     l788:
  1423                           
  1424                           ;UART.c: 14:     PIE1bits.RCIE = 1;
  1425  06E8  1683               	bsf	3,5	;RP0=1, select bank1
  1426  06E9  1303               	bcf	3,6	;RP1=0, select bank1
  1427  06EA  168C               	bsf	12,5	;volatile
  1428  06EB                     l790:
  1429                           
  1430                           ;UART.c: 15:     INTCONbits.GIE = 1;
  1431  06EB  178B               	bsf	11,7	;volatile
  1432  06EC                     l792:
  1433                           
  1434                           ;UART.c: 16:     TXSTAbits.BRGH = 0;
  1435  06EC  1118               	bcf	24,2	;volatile
  1436  06ED                     l794:
  1437                           
  1438                           ;UART.c: 17:     BAUDCTLbits.BRG16 = 1;
  1439  06ED  1683               	bsf	3,5	;RP0=1, select bank3
  1440  06EE  1703               	bsf	3,6	;RP1=1, select bank3
  1441  06EF  1587               	bsf	7,3	;volatile
  1442  06F0                     l796:
  1443                           
  1444                           ;UART.c: 18:     TXSTAbits.TXEN = 1;
  1445  06F0  1683               	bsf	3,5	;RP0=1, select bank1
  1446  06F1  1303               	bcf	3,6	;RP1=0, select bank1
  1447  06F2  1698               	bsf	24,5	;volatile
  1448                           
  1449                           ;UART.c: 19:     SPBRG = 25;
  1450  06F3  3019               	movlw	25
  1451  06F4  0099               	movwf	25	;volatile
  1452  06F5                     l101:
  1453  06F5  0008               	return
  1454  06F6                     __end_of_INIT_UART:
  1455  007E                     btemp	set	126	;btemp
  1456  007E                     wtemp0	set	126
  1457                           
  1458                           	psect	config
  1459                           
  1460                           ;Config register CONFIG1 @ 0x2007
  1461                           ;	Oscillator Selection bits
  1462                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1463                           ;	Watchdog Timer Enable bit
  1464                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1465                           ;	Power-up Timer Enable bit
  1466                           ;	PWRTE = OFF, PWRT disabled
  1467                           ;	RE3/MCLR pin function select bit
  1468                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1469                           ;	Code Protection bit
  1470                           ;	CP = OFF, Program memory code protection is disabled
  1471                           ;	Data Code Protection bit
  1472                           ;	CPD = OFF, Data memory code protection is disabled
  1473                           ;	Brown Out Reset Selection bits
  1474                           ;	BOREN = OFF, BOR disabled
  1475                           ;	Internal External Switchover bit
  1476                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1477                           ;	Fail-Safe Clock Monitor Enabled bit
  1478                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1479                           ;	Low Voltage Programming Enable bit
  1480                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1481                           ;	In-Circuit Debugger Mode bit
  1482                           ;	DEBUG = 0x1, unprogrammed default
  1483  2007                     	org	8199
  1484  2007  20D5               	dw	8405
  1485                           
  1486                           ;Config register CONFIG2 @ 0x2008
  1487                           ;	Brown-out Reset Selection bit
  1488                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1489                           ;	Flash Program Memory Self Write Enable bits
  1490                           ;	WRT = OFF, Write protection off
  1491  2008                     	org	8200
  1492  2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        1
    BSS         22
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8      11
    BANK0            80      0      20
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->_Lcd_Set_Cursor
    _main->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     498
                          _INIT_UART
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                               _read
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     3     3      0     183
                                              5 COMMON     3     3      0
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       4     4      0      60
                                              1 COMMON     4     4      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       6     5      1     240
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      45
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      30
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      30
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _INIT_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INIT_UART
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _read
   _setup

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      14       5       25.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      8       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1F      12        0.0%
ABS                  0      0      1F       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Wed Feb 17 23:23:00 2021

                        l9 06B2                          _s 0020                          pc 0002  
                       l12 070F                         l21 0753                         l15 06D2  
                       l24 07EA                         l33 0778                         l27 072F  
                       l72 06DF                         u90 0736                         u91 0735  
                       fsr 0004                        l101 06F5                        l122 06C5  
                      l720 0700                        l714 06AE                        l722 0703  
                      l730 0719                        l724 070C                        l716 06F7  
                      l740 06C6                        l732 071F                        l718 06FA  
                      l830 073B                        l734 0722                        l726 0711  
                      l760 07C2                        l832 0742                        l736 0727  
                      l728 0716                        l840 0758                        l762 07C8  
                      l754 07A4                        l834 0748                        l826 0731  
                      l738 072A                        l842 0765                        l850 0788  
                      l756 07AA                        l836 074D                        l828 0736  
                      l844 076B                        l780 06DE                        l772 06D3  
                      l852 078D                        l790 06EB                        l782 06E0  
                      l758 07B3                        l838 0755                        l774 06D7  
                      l854 0792                        l846 0779                        l792 06EC  
                      l784 06E4                        l776 06DA                        l856 079A  
                      l848 0783                        l794 06ED                        l786 06E5  
                      l778 06DB                        l796 06F0                        l788 06E8  
                      l798 06BB                        u100 0748                        u101 0747  
                      u110 0778                        u111 0777                        u127 0724  
                      u137 072C                        u147 07AE                        u157 07BD  
                      u167 07CA                        u177 0707                        _adc 0079  
                      fsr0 0004                        indf 0000                       STR_1 0009  
                     _TRMT 04C1          ?_Lcd_Write_String 0070                       _main 0779  
                     _read 06BB                       btemp 007E                       start 0000  
       ??_Lcd_Write_String 0075            __end_of_Lcd_Cmd 0710         __size_of_INIT_UART 0016  
                    ?_main 0070                      ?_read 0070                      _ANSEL 0188  
                    _SPBRG 0099                      _PORTB 0006                      _PORTD 0008  
  __size_of_Lcd_Set_Cursor 0024                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TXREG 0019                      _setup 06D3  
                    pclath 000A                      status 0003                      wtemp0 007E  
         __end_of_Lcd_Init 07EB           __end_of_Lcd_Port 06B3            __initialization 07EB  
             __end_of_main 07A4               __end_of_read 06C6                     ??_main 0078  
                   ??_read 0070         __size_of_Lcd_Clear 000D          __end_of_INIT_UART 06F6  
                   ?_setup 0070                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 0020  
             __pdataCOMMON 007A            Lcd_Set_Cursor@a 0076            Lcd_Set_Cursor@b 0074  
  __end_of__initialization 07FC          __end_of_Lcd_Clear 06D3             __pcstackCOMMON 0070  
            __end_of_setup 06E0             _Lcd_Set_Cursor 0730                 _banderaADC 007A  
                ?_Lcd_Init 0070                  ?_Lcd_Port 0070                    ??_setup 0070  
               __pbssBANK0 0020                 __pmaintext 0779  __size_of_Lcd_Write_String 0025  
   __end_of_Lcd_Set_Cursor 0754                 ??_Lcd_Init 0074                 ??_Lcd_Port 0070  
               __stringtab 0003             _Lcd_Write_Char 0710                    _Lcd_Cmd 06F6  
          ?_Lcd_Set_Cursor 0074                    __ptext1 06D3                    __ptext2 06BB  
                  __ptext3 0754                    __ptext4 0710                    __ptext5 0730  
                  __ptext6 07A4                    __ptext7 06C6                    __ptext8 06F6  
                  __ptext9 06AD                    _mensaje 0078                    clrloop0 06B4  
   __end_of_Lcd_Write_Char 0730       end_of_initialization 07FC                  _INIT_UART 06E0  
                _RCSTAbits 0018                  Lcd_Port@a 0070                  _PORTDbits 0008  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0077          Lcd_Write_String@i 0075  
               ?_INIT_UART 0070                  _TXSTAbits 0098                  _Lcd_Clear 06C6  
         _Lcd_Write_String 0754              __pidataCOMMON 06AC                _BAUDCTLbits 0187  
      start_initialization 07EB          __size_of_Lcd_Init 0047          __size_of_Lcd_Port 0006  
               ?_Lcd_Clear 0070            Lcd_Write_Char@a 0074            Lcd_Write_Char@y 0073  
              __pbssCOMMON 0078                  ___latbits 0002                ??_INIT_UART 0070  
                 ?_Lcd_Cmd 0070           ??_Lcd_Set_Cursor 0075                  __pstrings 0003  
           __size_of_setup 000D                  clear_ram0 06B3                   _PIE1bits 008C  
                 Lcd_Cmd@a 0073                ??_Lcd_Clear 0074                __stringbase 0008  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 07A4                   _Lcd_Port 06AD  
 __end_of_Lcd_Write_String 0779           __size_of_Lcd_Cmd 001A         __end_of__stringtab 0009  
                 __ptext10 06E0              __size_of_main 002B              __size_of_read 000B  
               _INTCONbits 000B                  stringcode 0003         Lcd_Set_Cursor@temp 0077  
                 stringdir 0003                   stringtab 0003  
