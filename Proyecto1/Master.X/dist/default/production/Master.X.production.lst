

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 20 20:59:07 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	strings,global,class=STRING,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,noexec
    10                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,noexec
    11                           	psect	clrtext,global,class=CODE,delta=2
    12                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,noexec
    13                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    15                           	psect	maintext,global,class=CODE,split=1,delta=2
    16                           	psect	text1,local,class=CODE,merge=1,delta=2
    17                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text5,local,class=CODE,merge=1,delta=2,group=2
    21                           	psect	text6,local,class=CODE,merge=1,delta=2,group=3
    22                           	psect	text7,local,class=CODE,merge=1,delta=2,group=1
    23                           	psect	text8,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text9,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2,group=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    36                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    37                           	psect	text22,local,class=CODE,merge=1,delta=2,group=2
    38                           	psect	text23,local,class=CODE,merge=1,delta=2,group=2
    39                           	psect	text24,local,class=CODE,merge=1,delta=2
    40                           	psect	text25,local,class=CODE,merge=1,delta=2
    41                           	psect	text26,local,class=CODE,merge=1,delta=2
    42                           	psect	text27,local,class=CODE,merge=1,delta=2
    43                           	psect	text28,local,class=CODE,merge=1,delta=2
    44                           	psect	text29,local,class=CODE,merge=1,delta=2
    45                           	psect	text30,local,class=CODE,merge=1,delta=2
    46                           	psect	text31,local,class=CODE,merge=1,delta=2
    47                           	psect	text32,local,class=CODE,merge=1,delta=2
    48                           	psect	text33,local,class=CODE,merge=1,delta=2
    49                           	psect	text34,local,class=CODE,merge=1,delta=2
    50                           	psect	text35,local,class=CODE,merge=1,delta=2
    51                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    52                           	psect	text2_split_1,local,class=CODE,merge=1,delta=2
    53                           	dabs	1,0x7E,2
    54  0000                     
    55                           ; Version 2.20
    56                           ; Generated 12/02/2020 GMT
    57                           ; 
    58                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    59                           ; All rights reserved.
    60                           ; 
    61                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    62                           ; 
    63                           ; Redistribution and use in source and binary forms, with or without modification, are
    64                           ; permitted provided that the following conditions are met:
    65                           ; 
    66                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    67                           ;        conditions and the following disclaimer.
    68                           ; 
    69                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    70                           ;        of conditions and the following disclaimer in the documentation and/or other
    71                           ;        materials provided with the distribution.
    72                           ; 
    73                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    74                           ;        software without specific prior written permission.
    75                           ; 
    76                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    77                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    78                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    79                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    80                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    81                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    82                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    83                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    84                           ; 
    85                           ; 
    86                           ; Code-generator required, PIC16F887 Definitions
    87                           ; 
    88                           ; SFR Addresses
    89  0000                     	;# 
    90  0001                     	;# 
    91  0002                     	;# 
    92  0003                     	;# 
    93  0004                     	;# 
    94  0005                     	;# 
    95  0006                     	;# 
    96  0007                     	;# 
    97  0008                     	;# 
    98  0009                     	;# 
    99  000A                     	;# 
   100  000B                     	;# 
   101  000C                     	;# 
   102  000D                     	;# 
   103  000E                     	;# 
   104  000E                     	;# 
   105  000F                     	;# 
   106  0010                     	;# 
   107  0011                     	;# 
   108  0012                     	;# 
   109  0013                     	;# 
   110  0014                     	;# 
   111  0015                     	;# 
   112  0015                     	;# 
   113  0016                     	;# 
   114  0017                     	;# 
   115  0018                     	;# 
   116  0019                     	;# 
   117  001A                     	;# 
   118  001B                     	;# 
   119  001B                     	;# 
   120  001C                     	;# 
   121  001D                     	;# 
   122  001E                     	;# 
   123  001F                     	;# 
   124  0081                     	;# 
   125  0085                     	;# 
   126  0086                     	;# 
   127  0087                     	;# 
   128  0088                     	;# 
   129  0089                     	;# 
   130  008C                     	;# 
   131  008D                     	;# 
   132  008E                     	;# 
   133  008F                     	;# 
   134  0090                     	;# 
   135  0091                     	;# 
   136  0092                     	;# 
   137  0093                     	;# 
   138  0093                     	;# 
   139  0093                     	;# 
   140  0094                     	;# 
   141  0095                     	;# 
   142  0096                     	;# 
   143  0097                     	;# 
   144  0098                     	;# 
   145  0099                     	;# 
   146  009A                     	;# 
   147  009B                     	;# 
   148  009C                     	;# 
   149  009D                     	;# 
   150  009E                     	;# 
   151  009F                     	;# 
   152  0105                     	;# 
   153  0107                     	;# 
   154  0108                     	;# 
   155  0109                     	;# 
   156  010C                     	;# 
   157  010C                     	;# 
   158  010D                     	;# 
   159  010E                     	;# 
   160  010F                     	;# 
   161  0185                     	;# 
   162  0187                     	;# 
   163  0188                     	;# 
   164  0189                     	;# 
   165  018C                     	;# 
   166  018D                     	;# 
   167  0000                     	;# 
   168  0001                     	;# 
   169  0002                     	;# 
   170  0003                     	;# 
   171  0004                     	;# 
   172  0005                     	;# 
   173  0006                     	;# 
   174  0007                     	;# 
   175  0008                     	;# 
   176  0009                     	;# 
   177  000A                     	;# 
   178  000B                     	;# 
   179  000C                     	;# 
   180  000D                     	;# 
   181  000E                     	;# 
   182  000E                     	;# 
   183  000F                     	;# 
   184  0010                     	;# 
   185  0011                     	;# 
   186  0012                     	;# 
   187  0013                     	;# 
   188  0014                     	;# 
   189  0015                     	;# 
   190  0015                     	;# 
   191  0016                     	;# 
   192  0017                     	;# 
   193  0018                     	;# 
   194  0019                     	;# 
   195  001A                     	;# 
   196  001B                     	;# 
   197  001B                     	;# 
   198  001C                     	;# 
   199  001D                     	;# 
   200  001E                     	;# 
   201  001F                     	;# 
   202  0081                     	;# 
   203  0085                     	;# 
   204  0086                     	;# 
   205  0087                     	;# 
   206  0088                     	;# 
   207  0089                     	;# 
   208  008C                     	;# 
   209  008D                     	;# 
   210  008E                     	;# 
   211  008F                     	;# 
   212  0090                     	;# 
   213  0091                     	;# 
   214  0092                     	;# 
   215  0093                     	;# 
   216  0093                     	;# 
   217  0093                     	;# 
   218  0094                     	;# 
   219  0095                     	;# 
   220  0096                     	;# 
   221  0097                     	;# 
   222  0098                     	;# 
   223  0099                     	;# 
   224  009A                     	;# 
   225  009B                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  0105                     	;# 
   231  0107                     	;# 
   232  0108                     	;# 
   233  0109                     	;# 
   234  010C                     	;# 
   235  010C                     	;# 
   236  010D                     	;# 
   237  010E                     	;# 
   238  010F                     	;# 
   239  0185                     	;# 
   240  0187                     	;# 
   241  0188                     	;# 
   242  0189                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  008F                     	;# 
   290  0090                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0093                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0095                     	;# 
   298  0096                     	;# 
   299  0097                     	;# 
   300  0098                     	;# 
   301  0099                     	;# 
   302  009A                     	;# 
   303  009B                     	;# 
   304  009C                     	;# 
   305  009D                     	;# 
   306  009E                     	;# 
   307  009F                     	;# 
   308  0105                     	;# 
   309  0107                     	;# 
   310  0108                     	;# 
   311  0109                     	;# 
   312  010C                     	;# 
   313  010C                     	;# 
   314  010D                     	;# 
   315  010E                     	;# 
   316  010F                     	;# 
   317  0185                     	;# 
   318  0187                     	;# 
   319  0188                     	;# 
   320  0189                     	;# 
   321  018C                     	;# 
   322  018D                     	;# 
   323  0000                     	;# 
   324  0001                     	;# 
   325  0002                     	;# 
   326  0003                     	;# 
   327  0004                     	;# 
   328  0005                     	;# 
   329  0006                     	;# 
   330  0007                     	;# 
   331  0008                     	;# 
   332  0009                     	;# 
   333  000A                     	;# 
   334  000B                     	;# 
   335  000C                     	;# 
   336  000D                     	;# 
   337  000E                     	;# 
   338  000E                     	;# 
   339  000F                     	;# 
   340  0010                     	;# 
   341  0011                     	;# 
   342  0012                     	;# 
   343  0013                     	;# 
   344  0014                     	;# 
   345  0015                     	;# 
   346  0015                     	;# 
   347  0016                     	;# 
   348  0017                     	;# 
   349  0018                     	;# 
   350  0019                     	;# 
   351  001A                     	;# 
   352  001B                     	;# 
   353  001B                     	;# 
   354  001C                     	;# 
   355  001D                     	;# 
   356  001E                     	;# 
   357  001F                     	;# 
   358  0081                     	;# 
   359  0085                     	;# 
   360  0086                     	;# 
   361  0087                     	;# 
   362  0088                     	;# 
   363  0089                     	;# 
   364  008C                     	;# 
   365  008D                     	;# 
   366  008E                     	;# 
   367  008F                     	;# 
   368  0090                     	;# 
   369  0091                     	;# 
   370  0092                     	;# 
   371  0093                     	;# 
   372  0093                     	;# 
   373  0093                     	;# 
   374  0094                     	;# 
   375  0095                     	;# 
   376  0096                     	;# 
   377  0097                     	;# 
   378  0098                     	;# 
   379  0099                     	;# 
   380  009A                     	;# 
   381  009B                     	;# 
   382  009C                     	;# 
   383  009D                     	;# 
   384  009E                     	;# 
   385  009F                     	;# 
   386  0105                     	;# 
   387  0107                     	;# 
   388  0108                     	;# 
   389  0109                     	;# 
   390  010C                     	;# 
   391  010C                     	;# 
   392  010D                     	;# 
   393  010E                     	;# 
   394  010F                     	;# 
   395  0185                     	;# 
   396  0187                     	;# 
   397  0188                     	;# 
   398  0189                     	;# 
   399  018C                     	;# 
   400  018D                     	;# 
   401  0000                     	;# 
   402  0001                     	;# 
   403  0002                     	;# 
   404  0003                     	;# 
   405  0004                     	;# 
   406  0005                     	;# 
   407  0006                     	;# 
   408  0007                     	;# 
   409  0008                     	;# 
   410  0009                     	;# 
   411  000A                     	;# 
   412  000B                     	;# 
   413  000C                     	;# 
   414  000D                     	;# 
   415  000E                     	;# 
   416  000E                     	;# 
   417  000F                     	;# 
   418  0010                     	;# 
   419  0011                     	;# 
   420  0012                     	;# 
   421  0013                     	;# 
   422  0014                     	;# 
   423  0015                     	;# 
   424  0015                     	;# 
   425  0016                     	;# 
   426  0017                     	;# 
   427  0018                     	;# 
   428  0019                     	;# 
   429  001A                     	;# 
   430  001B                     	;# 
   431  001B                     	;# 
   432  001C                     	;# 
   433  001D                     	;# 
   434  001E                     	;# 
   435  001F                     	;# 
   436  0081                     	;# 
   437  0085                     	;# 
   438  0086                     	;# 
   439  0087                     	;# 
   440  0088                     	;# 
   441  0089                     	;# 
   442  008C                     	;# 
   443  008D                     	;# 
   444  008E                     	;# 
   445  008F                     	;# 
   446  0090                     	;# 
   447  0091                     	;# 
   448  0092                     	;# 
   449  0093                     	;# 
   450  0093                     	;# 
   451  0093                     	;# 
   452  0094                     	;# 
   453  0095                     	;# 
   454  0096                     	;# 
   455  0097                     	;# 
   456  0098                     	;# 
   457  0099                     	;# 
   458  009A                     	;# 
   459  009B                     	;# 
   460  009C                     	;# 
   461  009D                     	;# 
   462  009E                     	;# 
   463  009F                     	;# 
   464  0105                     	;# 
   465  0107                     	;# 
   466  0108                     	;# 
   467  0109                     	;# 
   468  010C                     	;# 
   469  010C                     	;# 
   470  010D                     	;# 
   471  010E                     	;# 
   472  010F                     	;# 
   473  0185                     	;# 
   474  0187                     	;# 
   475  0188                     	;# 
   476  0189                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479                           
   480                           	psect	idataBANK0
   481  00D4                     __pidataBANK0:
   482                           
   483                           ;initializer for _banderaADC
   484  00D4  3401               	retlw	1
   485                           
   486                           	psect	strings
   487  0003                     __pstrings:
   488  0003                     stringtab:
   489  0003                     __stringtab:
   490                           
   491                           ;	String table - string pointers are 1 byte each
   492  0003  1BFF               	btfsc	btemp+1,7
   493  0004  280D               	ljmp	stringcode
   494  0005  1383               	bcf	3,7
   495  0006  187F               	btfsc	btemp+1,0
   496  0007  1783               	bsf	3,7
   497  0008  0800               	movf	0,w
   498  0009  0A84               	incf	4,f
   499  000A  1903               	skipnz
   500  000B  0AFF               	incf	btemp+1,f
   501  000C  0008               	return
   502  000D                     stringcode:
   503  000D                     stringdir:
   504  000D  3000               	movlw	high stringdir
   505  000E  008A               	movwf	10
   506  000F  0804               	movf	4,w
   507  0010  0A84               	incf	4,f
   508  0011  0782               	addwf	2,f
   509  0012                     __stringbase:
   510  0012  3400               	retlw	0
   511  0013                     __end_of__stringtab:
   512  0013                     __powers_:
   513  0013  3400               	retlw	0
   514  0014  3400               	retlw	0
   515  0015  3480               	retlw	128
   516  0016  343F               	retlw	63
   517  0017  3400               	retlw	0
   518  0018  3400               	retlw	0
   519  0019  3420               	retlw	32
   520  001A  3441               	retlw	65
   521  001B  3400               	retlw	0
   522  001C  3400               	retlw	0
   523  001D  34C8               	retlw	200
   524  001E  3442               	retlw	66
   525  001F  3400               	retlw	0
   526  0020  3400               	retlw	0
   527  0021  347A               	retlw	122
   528  0022  3444               	retlw	68
   529  0023  3400               	retlw	0
   530  0024  3440               	retlw	64
   531  0025  341C               	retlw	28
   532  0026  3446               	retlw	70
   533  0027  3400               	retlw	0
   534  0028  3450               	retlw	80
   535  0029  34C3               	retlw	195
   536  002A  3447               	retlw	71
   537  002B  3400               	retlw	0
   538  002C  3424               	retlw	36
   539  002D  3474               	retlw	116
   540  002E  3449               	retlw	73
   541  002F  3480               	retlw	128
   542  0030  3496               	retlw	150
   543  0031  3418               	retlw	24
   544  0032  344B               	retlw	75
   545  0033  3420               	retlw	32
   546  0034  34BC               	retlw	188
   547  0035  34BE               	retlw	190
   548  0036  344C               	retlw	76
   549  0037  3428               	retlw	40
   550  0038  346B               	retlw	107
   551  0039  346E               	retlw	110
   552  003A  344E               	retlw	78
   553  003B  34F9               	retlw	249
   554  003C  3402               	retlw	2
   555  003D  3415               	retlw	21
   556  003E  3450               	retlw	80
   557  003F  34EC               	retlw	236
   558  0040  3478               	retlw	120
   559  0041  34AD               	retlw	173
   560  0042  3460               	retlw	96
   561  0043  34CA               	retlw	202
   562  0044  34F2               	retlw	242
   563  0045  3449               	retlw	73
   564  0046  3471               	retlw	113
   565  0047                     __end_of__powers_:
   566  0047                     __npowers_:
   567  0047  3400               	retlw	0
   568  0048  3400               	retlw	0
   569  0049  3480               	retlw	128
   570  004A  343F               	retlw	63
   571  004B  34CD               	retlw	205
   572  004C  34CC               	retlw	204
   573  004D  34CC               	retlw	204
   574  004E  343D               	retlw	61
   575  004F  340A               	retlw	10
   576  0050  34D7               	retlw	215
   577  0051  3423               	retlw	35
   578  0052  343C               	retlw	60
   579  0053  346F               	retlw	111
   580  0054  3412               	retlw	18
   581  0055  3483               	retlw	131
   582  0056  343A               	retlw	58
   583  0057  3417               	retlw	23
   584  0058  34B7               	retlw	183
   585  0059  34D1               	retlw	209
   586  005A  3438               	retlw	56
   587  005B  34AC               	retlw	172
   588  005C  34C5               	retlw	197
   589  005D  3427               	retlw	39
   590  005E  3437               	retlw	55
   591  005F  34BD               	retlw	189
   592  0060  3437               	retlw	55
   593  0061  3486               	retlw	134
   594  0062  3435               	retlw	53
   595  0063  3495               	retlw	149
   596  0064  34BF               	retlw	191
   597  0065  34D6               	retlw	214
   598  0066  3433               	retlw	51
   599  0067  3477               	retlw	119
   600  0068  34CC               	retlw	204
   601  0069  342B               	retlw	43
   602  006A  3432               	retlw	50
   603  006B  345F               	retlw	95
   604  006C  3470               	retlw	112
   605  006D  3489               	retlw	137
   606  006E  3430               	retlw	48
   607  006F  34FF               	retlw	255
   608  0070  34E6               	retlw	230
   609  0071  34DB               	retlw	219
   610  0072  342E               	retlw	46
   611  0073  3408               	retlw	8
   612  0074  34E5               	retlw	229
   613  0075  343C               	retlw	60
   614  0076  341E               	retlw	30
   615  0077  3460               	retlw	96
   616  0078  3442               	retlw	66
   617  0079  34A2               	retlw	162
   618  007A  340D               	retlw	13
   619  007B                     __end_of__npowers_:
   620  007B                     _dpowers:
   621  007B  3401               	retlw	1
   622  007C  3400               	retlw	0
   623  007D  3400               	retlw	0
   624  007E  3400               	retlw	0
   625  007F  340A               	retlw	10
   626  0080  3400               	retlw	0
   627  0081  3400               	retlw	0
   628  0082  3400               	retlw	0
   629  0083  3464               	retlw	100
   630  0084  3400               	retlw	0
   631  0085  3400               	retlw	0
   632  0086  3400               	retlw	0
   633  0087  34E8               	retlw	232
   634  0088  3403               	retlw	3
   635  0089  3400               	retlw	0
   636  008A  3400               	retlw	0
   637  008B  3410               	retlw	16
   638  008C  3427               	retlw	39
   639  008D  3400               	retlw	0
   640  008E  3400               	retlw	0
   641  008F  34A0               	retlw	160
   642  0090  3486               	retlw	134
   643  0091  3401               	retlw	1
   644  0092  3400               	retlw	0
   645  0093  3440               	retlw	64
   646  0094  3442               	retlw	66
   647  0095  340F               	retlw	15
   648  0096  3400               	retlw	0
   649  0097  3480               	retlw	128
   650  0098  3496               	retlw	150
   651  0099  3498               	retlw	152
   652  009A  3400               	retlw	0
   653  009B  3400               	retlw	0
   654  009C  34E1               	retlw	225
   655  009D  34F5               	retlw	245
   656  009E  3405               	retlw	5
   657  009F  3400               	retlw	0
   658  00A0  34CA               	retlw	202
   659  00A1  349A               	retlw	154
   660  00A2  343B               	retlw	59
   661  00A3                     __end_of_dpowers:
   662  0014                     _SSPCON	set	20
   663  0019                     _TXREG	set	25
   664  000B                     _INTCONbits	set	11
   665  0018                     _RCSTAbits	set	24
   666  0013                     _SSPBUF	set	19
   667  0007                     _PORTCbits	set	7
   668  0005                     _PORTAbits	set	5
   669  0009                     _PORTE	set	9
   670  0008                     _PORTD	set	8
   671  0007                     _PORTC	set	7
   672  0009                     _PORTEbits	set	9
   673  0006                     _PORTB	set	6
   674  0094                     _SSPSTATbits	set	148
   675  0094                     _SSPSTAT	set	148
   676  0099                     _SPBRG	set	153
   677  008C                     _PIE1bits	set	140
   678  0098                     _TXSTAbits	set	152
   679  0087                     _TRISCbits	set	135
   680  0086                     _TRISB	set	134
   681  0089                     _TRISE	set	137
   682  0087                     _TRISC	set	135
   683  0088                     _TRISD	set	136
   684  043B                     _TRISC3	set	1083
   685  043D                     _TRISC5	set	1085
   686  04C1                     _TRMT	set	1217
   687  0187                     _BAUDCTLbits	set	391
   688  0188                     _ANSEL	set	392
   689  00A3                     STR_1:
   690  00A3  3453               	retlw	83	;'S'
   691  00A4  3431               	retlw	49	;'1'
   692  00A5  343A               	retlw	58	;':'
   693  00A6  3420               	retlw	32	;' '
   694  00A7  3420               	retlw	32	;' '
   695  00A8  3420               	retlw	32	;' '
   696  00A9  3453               	retlw	83	;'S'
   697  00AA  3432               	retlw	50	;'2'
   698  00AB  343A               	retlw	58	;':'
   699  00AC  3420               	retlw	32	;' '
   700  00AD  3420               	retlw	32	;' '
   701  00AE  3420               	retlw	32	;' '
   702  00AF  3420               	retlw	32	;' '
   703  00B0  3453               	retlw	83	;'S'
   704  00B1  3433               	retlw	51	;'3'
   705  00B2  343A               	retlw	58	;':'
   706  00B3  3420               	retlw	32	;' '
   707  00B4  340A               	retlw	10
   708  00B5  3400               	retlw	0
   709  00B6                     STR_7:
   710  00B6  3425               	retlw	37	;'%'
   711  00B7  3433               	retlw	51	;'3'
   712  00B8  342E               	retlw	46	;'.'
   713  00B9  3430               	retlw	48	;'0'
   714  00BA  3466               	retlw	102	;'f'
   715  00BB  3443               	retlw	67	;'C'
   716  00BC  3400               	retlw	0
   717  00BD                     STR_5:
   718  00BD  3425               	retlw	37	;'%'
   719  00BE  3433               	retlw	51	;'3'
   720  00BF  342E               	retlw	46	;'.'
   721  00C0  3432               	retlw	50	;'2'
   722  00C1  3466               	retlw	102	;'f'
   723  00C2  3456               	retlw	86	;'V'
   724  00C3  3400               	retlw	0
   725  00C4                     STR_2:
   726  00C4  3453               	retlw	83	;'S'
   727  00C5  3431               	retlw	49	;'1'
   728  00C6  343A               	retlw	58	;':'
   729  00C7  3400               	retlw	0
   730  00C8                     STR_3:
   731  00C8  3453               	retlw	83	;'S'
   732  00C9  3432               	retlw	50	;'2'
   733  00CA  343A               	retlw	58	;':'
   734  00CB  3400               	retlw	0
   735  00CC                     STR_4:
   736  00CC  3453               	retlw	83	;'S'
   737  00CD  3433               	retlw	51	;'3'
   738  00CE  343A               	retlw	58	;':'
   739  00CF  3400               	retlw	0
   740  00D0                     STR_6:
   741  00D0  3425               	retlw	37	;'%'
   742  00D1  3464               	retlw	100	;'d'
   743  00D2  3400               	retlw	0
   744                           
   745                           	psect	cinit
   746  07E3                     start_initialization:	
   747                           ; #config settings
   748                           
   749  07E3                     __initialization:
   750                           
   751                           ; Initialize objects allocated to BANK0
   752  07E3  120A  118A  20D4  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   753  07E8  00EF               	movwf	__pdataBANK0& (0+127)
   754                           
   755                           ; Clear objects allocated to BANK3
   756  07E9  1783               	bsf	3,7	;select IRP bank2
   757  07EA  3090               	movlw	low __pbssBANK3
   758  07EB  0084               	movwf	4
   759  07EC  30B8               	movlw	low (__pbssBANK3+40)
   760  07ED  160A  158A  209B  120A  118A  	fcall	clear_ram0
   761                           
   762                           ; Clear objects allocated to BANK1
   763  07F2  1383               	bcf	3,7	;select IRP bank0
   764  07F3  30CA               	movlw	low __pbssBANK1
   765  07F4  0084               	movwf	4
   766  07F5  30EF               	movlw	low (__pbssBANK1+37)
   767  07F6  160A  158A  209B  120A  118A  	fcall	clear_ram0
   768                           
   769                           ; Clear objects allocated to BANK0
   770  07FB  01EE               	clrf	__pbssBANK0& (0+127)
   771  07FC                     end_of_initialization:	
   772                           ;End of C runtime variable initialization code
   773                           
   774  07FC                     __end_of__initialization:
   775  07FC  0183               	clrf	3
   776  07FD  160A  118A  2857   	ljmp	_main	;jump to C main() function
   777                           
   778                           	psect	bssBANK0
   779  006E                     __pbssBANK0:
   780  006E                     _mensaje:
   781  006E                     	ds	1
   782                           
   783                           	psect	dataBANK0
   784  006F                     __pdataBANK0:
   785  006F                     _banderaADC:
   786  006F                     	ds	1
   787                           
   788                           	psect	bssBANK1
   789  00CA                     __pbssBANK1:
   790  00CA                     _n:
   791  00CA                     	ds	4
   792  00CE                     _p:
   793  00CE                     	ds	4
   794  00D2                     _x:
   795  00D2                     	ds	4
   796  00D6                     _CC:
   797  00D6                     	ds	1
   798  00D7                     _esclavo1:
   799  00D7                     	ds	1
   800  00D8                     _adc:
   801  00D8                     	ds	1
   802  00D9                     _s:
   803  00D9                     	ds	20
   804  00ED                     _count:
   805  00ED                     	ds	1
   806  00EE                     _lmm:
   807  00EE                     	ds	1
   808                           
   809                           	psect	bssBANK3
   810  0190                     __pbssBANK3:
   811  0190                     _c:
   812  0190                     	ds	20
   813  01A4                     _l:
   814  01A4                     	ds	20
   815                           
   816                           	psect	clrtext
   817  189B                     clear_ram0:	
   818                           ;	Called with FSR containing the base address, and
   819                           ;	W with the last address+1
   820                           
   821  189B  0064               	clrwdt	;clear the watchdog before getting into this loop
   822  189C                     clrloop0:
   823  189C  0180               	clrf	0	;clear RAM location pointed to by FSR
   824  189D  0A84               	incf	4,f	;increment pointer
   825  189E  0604               	xorwf	4,w	;XOR with final address
   826  189F  1903               	btfsc	3,2	;have we reached the end yet?
   827  18A0  3400               	retlw	0	;all done for this memory range, return
   828  18A1  0604               	xorwf	4,w	;XOR again to restore value
   829  18A2  289C               	goto	clrloop0	;do the next byte
   830                           
   831                           	psect	cstackBANK1
   832  00A0                     __pcstackBANK1:
   833  00A0                     ?_sprintf:
   834  00A0                     sprintf@sp:	
   835                           ; 2 bytes @ 0x0
   836                           
   837                           
   838                           ; 2 bytes @ 0x0
   839  00A0                     	ds	2
   840  00A2                     sprintf@f:
   841                           
   842                           ; 1 bytes @ 0x2
   843  00A2                     	ds	5
   844  00A7                     ??_sprintf:
   845                           
   846                           ; 1 bytes @ 0x7
   847  00A7                     	ds	5
   848  00AC                     _sprintf$1254:
   849                           
   850                           ; 4 bytes @ 0xC
   851  00AC                     	ds	4
   852  00B0                     sprintf@ap:
   853                           
   854                           ; 1 bytes @ 0x10
   855  00B0                     	ds	1
   856  00B1                     sprintf@flag:
   857                           
   858                           ; 2 bytes @ 0x11
   859  00B1                     	ds	2
   860  00B3                     sprintf@width:
   861                           
   862                           ; 2 bytes @ 0x13
   863  00B3                     	ds	2
   864  00B5                     sprintf@tmpval:
   865                           
   866                           ; 4 bytes @ 0x15
   867  00B5                     	ds	4
   868  00B9                     sprintf@val:
   869                           
   870                           ; 4 bytes @ 0x19
   871  00B9                     	ds	4
   872  00BD                     sprintf@eexp:
   873                           
   874                           ; 2 bytes @ 0x1D
   875  00BD                     	ds	2
   876  00BF                     sprintf@fval:
   877                           
   878                           ; 4 bytes @ 0x1F
   879  00BF                     	ds	4
   880  00C3                     sprintf@prec:
   881                           
   882                           ; 2 bytes @ 0x23
   883  00C3                     	ds	2
   884  00C5                     sprintf@c:
   885                           
   886                           ; 1 bytes @ 0x25
   887  00C5                     	ds	1
   888  00C6                     ??_main:
   889                           
   890                           ; 1 bytes @ 0x26
   891  00C6                     	ds	4
   892                           
   893                           	psect	cstackCOMMON
   894  0070                     __pcstackCOMMON:
   895  0070                     ?_isdigit:
   896  0070                     ?___fleq:	
   897                           ; 1 bit 
   898                           
   899  0070                     ?___flge:	
   900                           ; 1 bit 
   901                           
   902  0070                     ?_spiInit:	
   903                           ; 1 bit 
   904                           
   905  0070                     ?_INIT_UART:	
   906                           ; 1 bytes @ 0x0
   907                           
   908  0070                     ??_INIT_UART:	
   909                           ; 1 bytes @ 0x0
   910                           
   911  0070                     ?_write:	
   912                           ; 1 bytes @ 0x0
   913                           
   914  0070                     ?_spiRead:	
   915                           ; 1 bytes @ 0x0
   916                           
   917  0070                     ??_spiRead:	
   918                           ; 1 bytes @ 0x0
   919                           
   920  0070                     ??_isdigit:	
   921                           ; 1 bytes @ 0x0
   922                           
   923  0070                     ?_Lcd_Port:	
   924                           ; 1 bytes @ 0x0
   925                           
   926  0070                     ??_Lcd_Port:	
   927                           ; 1 bytes @ 0x0
   928                           
   929  0070                     ?_Lcd_Cmd:	
   930                           ; 1 bytes @ 0x0
   931                           
   932  0070                     ?_Lcd_Clear:	
   933                           ; 1 bytes @ 0x0
   934                           
   935  0070                     ?_Lcd_Init:	
   936                           ; 1 bytes @ 0x0
   937                           
   938  0070                     ?_Lcd_Write_Char:	
   939                           ; 1 bytes @ 0x0
   940                           
   941  0070                     ?_setup:	
   942                           ; 1 bytes @ 0x0
   943                           
   944  0070                     ??_setup:	
   945                           ; 1 bytes @ 0x0
   946                           
   947  0070                     ?_main:	
   948                           ; 1 bytes @ 0x0
   949                           
   950  0070                     ?_spiReceiveWait:	
   951                           ; 1 bytes @ 0x0
   952                           
   953  0070                     ??_spiReceiveWait:	
   954                           ; 1 bytes @ 0x0
   955                           
   956  0070                     ?__Umul8_16:	
   957                           ; 1 bytes @ 0x0
   958                           
   959  0070                     ?___wmul:	
   960                           ; 2 bytes @ 0x0
   961                           
   962  0070                     ?___awmod:	
   963                           ; 2 bytes @ 0x0
   964                           
   965  0070                     ?___lwmod:	
   966                           ; 2 bytes @ 0x0
   967                           
   968  0070                     ?__tdiv_to_l_:	
   969                           ; 2 bytes @ 0x0
   970                           
   971  0070                     ?__div_to_l_:	
   972                           ; 4 bytes @ 0x0
   973                           
   974  0070                     ?___lldiv:	
   975                           ; 4 bytes @ 0x0
   976                           
   977  0070                     ?___flneg:	
   978                           ; 4 bytes @ 0x0
   979                           
   980  0070                     ?___xxtofl:	
   981                           ; 4 bytes @ 0x0
   982                           
   983  0070                     Lcd_Port@a:	
   984                           ; 4 bytes @ 0x0
   985                           
   986  0070                     spiInit@sDataSample:	
   987                           ; 1 bytes @ 0x0
   988                           
   989  0070                     __Umul8_16@multiplicand:	
   990                           ; 1 bytes @ 0x0
   991                           
   992  0070                     _isdigit$1058:	
   993                           ; 1 bytes @ 0x0
   994                           
   995  0070                     write@entrada:	
   996                           ; 1 bytes @ 0x0
   997                           
   998  0070                     ___wmul@multiplier:	
   999                           ; 2 bytes @ 0x0
  1000                           
  1001  0070                     ___awmod@divisor:	
  1002                           ; 2 bytes @ 0x0
  1003                           
  1004  0070                     ___lwmod@divisor:	
  1005                           ; 2 bytes @ 0x0
  1006                           
  1007  0070                     ___lldiv@divisor:	
  1008                           ; 2 bytes @ 0x0
  1009                           
  1010  0070                     __div_to_l_@f1:	
  1011                           ; 4 bytes @ 0x0
  1012                           
  1013  0070                     ___fleq@ff1:	
  1014                           ; 4 bytes @ 0x0
  1015                           
  1016  0070                     ___flge@ff1:	
  1017                           ; 4 bytes @ 0x0
  1018                           
  1019  0070                     ___flneg@f1:	
  1020                           ; 4 bytes @ 0x0
  1021                           
  1022  0070                     __tdiv_to_l_@f1:	
  1023                           ; 4 bytes @ 0x0
  1024                           
  1025  0070                     ___xxtofl@val:	
  1026                           ; 4 bytes @ 0x0
  1027                           
  1028                           
  1029                           ; 4 bytes @ 0x0
  1030  0070                     	ds	1
  1031  0071                     ??_Lcd_Cmd:
  1032  0071                     ??_Lcd_Write_Char:	
  1033                           ; 1 bytes @ 0x1
  1034                           
  1035  0071                     spiInit@sClockIdle:	
  1036                           ; 1 bytes @ 0x1
  1037                           
  1038  0071                     isdigit@c:	
  1039                           ; 1 bytes @ 0x1
  1040                           
  1041                           
  1042                           ; 1 bytes @ 0x1
  1043  0071                     	ds	1
  1044  0072                     ??_write:
  1045  0072                     ??__Umul8_16:	
  1046                           ; 1 bytes @ 0x2
  1047                           
  1048  0072                     Lcd_Write_Char@a:	
  1049                           ; 1 bytes @ 0x2
  1050                           
  1051  0072                     spiInit@sTransmitEdge:	
  1052                           ; 1 bytes @ 0x2
  1053                           
  1054  0072                     ___wmul@multiplicand:	
  1055                           ; 1 bytes @ 0x2
  1056                           
  1057  0072                     ___awmod@dividend:	
  1058                           ; 2 bytes @ 0x2
  1059                           
  1060  0072                     ___lwmod@dividend:	
  1061                           ; 2 bytes @ 0x2
  1062                           
  1063                           
  1064                           ; 2 bytes @ 0x2
  1065  0072                     	ds	1
  1066  0073                     ??_spiInit:
  1067  0073                     ?_Lcd_Write_String:	
  1068                           ; 1 bytes @ 0x3
  1069                           
  1070  0073                     Lcd_Cmd@a:	
  1071                           ; 1 bytes @ 0x3
  1072                           
  1073  0073                     spiInit@sType:	
  1074                           ; 1 bytes @ 0x3
  1075                           
  1076  0073                     Lcd_Write_String@a:	
  1077                           ; 1 bytes @ 0x3
  1078                           
  1079                           
  1080                           ; 2 bytes @ 0x3
  1081  0073                     	ds	1
  1082  0074                     ??_Lcd_Clear:
  1083  0074                     ?_Lcd_Set_Cursor:	
  1084                           ; 1 bytes @ 0x4
  1085                           
  1086  0074                     ??_Lcd_Init:	
  1087                           ; 1 bytes @ 0x4
  1088                           
  1089  0074                     ??___wmul:	
  1090                           ; 1 bytes @ 0x4
  1091                           
  1092  0074                     ??___awmod:	
  1093                           ; 1 bytes @ 0x4
  1094                           
  1095  0074                     ??___flneg:	
  1096                           ; 1 bytes @ 0x4
  1097                           
  1098  0074                     ??___lwmod:	
  1099                           ; 1 bytes @ 0x4
  1100                           
  1101  0074                     ??___xxtofl:	
  1102                           ; 1 bytes @ 0x4
  1103                           
  1104  0074                     Lcd_Set_Cursor@b:	
  1105                           ; 1 bytes @ 0x4
  1106                           
  1107  0074                     ___wmul@product:	
  1108                           ; 1 bytes @ 0x4
  1109                           
  1110  0074                     __Umul8_16@product:	
  1111                           ; 2 bytes @ 0x4
  1112                           
  1113  0074                     ___lldiv@dividend:	
  1114                           ; 2 bytes @ 0x4
  1115                           
  1116  0074                     __div_to_l_@f2:	
  1117                           ; 4 bytes @ 0x4
  1118                           
  1119  0074                     ___fleq@ff2:	
  1120                           ; 4 bytes @ 0x4
  1121                           
  1122  0074                     ___flge@ff2:	
  1123                           ; 4 bytes @ 0x4
  1124                           
  1125  0074                     __tdiv_to_l_@f2:	
  1126                           ; 4 bytes @ 0x4
  1127                           
  1128                           
  1129                           ; 4 bytes @ 0x4
  1130  0074                     	ds	1
  1131  0075                     ??_Lcd_Set_Cursor:
  1132  0075                     ??_Lcd_Write_String:	
  1133                           ; 1 bytes @ 0x5
  1134                           
  1135  0075                     ___awmod@counter:	
  1136                           ; 1 bytes @ 0x5
  1137                           
  1138  0075                     ___lwmod@counter:	
  1139                           ; 1 bytes @ 0x5
  1140                           
  1141                           
  1142                           ; 1 bytes @ 0x5
  1143  0075                     	ds	1
  1144  0076                     ?___lwdiv:
  1145  0076                     Lcd_Set_Cursor@a:	
  1146                           ; 2 bytes @ 0x6
  1147                           
  1148  0076                     ___awmod@sign:	
  1149                           ; 1 bytes @ 0x6
  1150                           
  1151  0076                     ___lwdiv@divisor:	
  1152                           ; 1 bytes @ 0x6
  1153                           
  1154  0076                     __Umul8_16@word_mpld:	
  1155                           ; 2 bytes @ 0x6
  1156                           
  1157                           
  1158                           ; 2 bytes @ 0x6
  1159  0076                     	ds	1
  1160  0077                     ?___awdiv:
  1161  0077                     Lcd_Set_Cursor@temp:	
  1162                           ; 2 bytes @ 0x7
  1163                           
  1164  0077                     ___awdiv@divisor:	
  1165                           ; 1 bytes @ 0x7
  1166                           
  1167                           
  1168                           ; 2 bytes @ 0x7
  1169  0077                     	ds	1
  1170  0078                     ??__tdiv_to_l_:
  1171  0078                     ??__div_to_l_:	
  1172                           ; 1 bytes @ 0x8
  1173                           
  1174  0078                     ??___lldiv:	
  1175                           ; 1 bytes @ 0x8
  1176                           
  1177  0078                     ??___fleq:	
  1178                           ; 1 bytes @ 0x8
  1179                           
  1180  0078                     ??___flge:	
  1181                           ; 1 bytes @ 0x8
  1182                           
  1183  0078                     __Umul8_16@multiplier:	
  1184                           ; 1 bytes @ 0x8
  1185                           
  1186  0078                     ___xxtofl@sign:	
  1187                           ; 1 bytes @ 0x8
  1188                           
  1189  0078                     Lcd_Write_String@i:	
  1190                           ; 1 bytes @ 0x8
  1191                           
  1192  0078                     ___lwdiv@dividend:	
  1193                           ; 2 bytes @ 0x8
  1194                           
  1195                           
  1196                           ; 2 bytes @ 0x8
  1197  0078                     	ds	1
  1198  0079                     ___xxtofl@exp:
  1199  0079                     ___awdiv@dividend:	
  1200                           ; 1 bytes @ 0x9
  1201                           
  1202  0079                     ___lldiv@quotient:	
  1203                           ; 2 bytes @ 0x9
  1204                           
  1205                           
  1206                           ; 4 bytes @ 0x9
  1207  0079                     	ds	1
  1208  007A                     ??___lwdiv:
  1209  007A                     ___xxtofl@arg:	
  1210                           ; 1 bytes @ 0xA
  1211                           
  1212                           
  1213                           ; 4 bytes @ 0xA
  1214  007A                     	ds	1
  1215  007B                     ??___awdiv:
  1216  007B                     ___lwdiv@quotient:	
  1217                           ; 1 bytes @ 0xB
  1218                           
  1219                           
  1220                           ; 2 bytes @ 0xB
  1221  007B                     	ds	2
  1222  007D                     ___lldiv@counter:
  1223  007D                     ___lwdiv@counter:	
  1224                           ; 1 bytes @ 0xD
  1225                           
  1226                           
  1227                           ; 1 bytes @ 0xD
  1228  007D                     	ds	1
  1229  007E                     ??___flsub:
  1230                           
  1231                           	psect	cstackBANK0
  1232  0020                     __pcstackBANK0:	
  1233                           ; 1 bytes @ 0xE
  1234                           
  1235  0020                     ?___llmod:
  1236  0020                     ___awdiv@counter:	
  1237                           ; 4 bytes @ 0x0
  1238                           
  1239  0020                     __div_to_l_@quot:	
  1240                           ; 1 bytes @ 0x0
  1241                           
  1242  0020                     __tdiv_to_l_@quot:	
  1243                           ; 4 bytes @ 0x0
  1244                           
  1245  0020                     ___llmod@divisor:	
  1246                           ; 4 bytes @ 0x0
  1247                           
  1248                           
  1249                           ; 4 bytes @ 0x0
  1250  0020                     	ds	1
  1251  0021                     ___awdiv@sign:
  1252                           
  1253                           ; 1 bytes @ 0x1
  1254  0021                     	ds	1
  1255  0022                     ___awdiv@quotient:
  1256                           
  1257                           ; 2 bytes @ 0x2
  1258  0022                     	ds	2
  1259  0024                     ?___flmul:
  1260  0024                     __div_to_l_@cntr:	
  1261                           ; 4 bytes @ 0x4
  1262                           
  1263  0024                     __tdiv_to_l_@cntr:	
  1264                           ; 1 bytes @ 0x4
  1265                           
  1266  0024                     ___llmod@dividend:	
  1267                           ; 1 bytes @ 0x4
  1268                           
  1269  0024                     ___flmul@b:	
  1270                           ; 4 bytes @ 0x4
  1271                           
  1272                           
  1273                           ; 4 bytes @ 0x4
  1274  0024                     	ds	1
  1275  0025                     __div_to_l_@exp1:
  1276  0025                     __tdiv_to_l_@exp1:	
  1277                           ; 1 bytes @ 0x5
  1278                           
  1279                           
  1280                           ; 1 bytes @ 0x5
  1281  0025                     	ds	3
  1282  0028                     ??___llmod:
  1283  0028                     ___flmul@a:	
  1284                           ; 1 bytes @ 0x8
  1285                           
  1286                           
  1287                           ; 4 bytes @ 0x8
  1288  0028                     	ds	1
  1289  0029                     ___llmod@counter:
  1290                           
  1291                           ; 1 bytes @ 0x9
  1292  0029                     	ds	3
  1293  002C                     ??___flmul:
  1294                           
  1295                           ; 1 bytes @ 0xC
  1296  002C                     	ds	5
  1297  0031                     ___flmul@sign:
  1298                           
  1299                           ; 1 bytes @ 0x11
  1300  0031                     	ds	1
  1301  0032                     ___flmul@grs:
  1302                           
  1303                           ; 4 bytes @ 0x12
  1304  0032                     	ds	4
  1305  0036                     ___flmul@aexp:
  1306                           
  1307                           ; 1 bytes @ 0x16
  1308  0036                     	ds	1
  1309  0037                     ___flmul@bexp:
  1310                           
  1311                           ; 1 bytes @ 0x17
  1312  0037                     	ds	1
  1313  0038                     ___flmul@prod:
  1314                           
  1315                           ; 4 bytes @ 0x18
  1316  0038                     	ds	4
  1317  003C                     ___flmul@temp:
  1318                           
  1319                           ; 2 bytes @ 0x1C
  1320  003C                     	ds	2
  1321  003E                     ?_fround:
  1322  003E                     ?_scale:	
  1323                           ; 4 bytes @ 0x1E
  1324                           
  1325                           
  1326                           ; 4 bytes @ 0x1E
  1327  003E                     	ds	4
  1328  0042                     ??_fround:
  1329  0042                     ??_scale:	
  1330                           ; 1 bytes @ 0x22
  1331                           
  1332                           
  1333                           ; 1 bytes @ 0x22
  1334  0042                     	ds	7
  1335  0049                     _fround$1252:
  1336                           
  1337                           ; 4 bytes @ 0x29
  1338  0049                     	ds	3
  1339  004C                     _scale$1253:
  1340                           
  1341                           ; 4 bytes @ 0x2C
  1342  004C                     	ds	1
  1343  004D                     _fround$1251:
  1344                           
  1345                           ; 4 bytes @ 0x2D
  1346  004D                     	ds	3
  1347  0050                     scale@scl:
  1348                           
  1349                           ; 1 bytes @ 0x30
  1350  0050                     	ds	1
  1351  0051                     ?___fltol:
  1352  0051                     fround@prec:	
  1353                           ; 4 bytes @ 0x31
  1354                           
  1355  0051                     ___fltol@f1:	
  1356                           ; 1 bytes @ 0x31
  1357                           
  1358                           
  1359                           ; 4 bytes @ 0x31
  1360  0051                     	ds	1
  1361  0052                     ?___fladd:
  1362  0052                     ___fladd@b:	
  1363                           ; 4 bytes @ 0x32
  1364                           
  1365                           
  1366                           ; 4 bytes @ 0x32
  1367  0052                     	ds	3
  1368  0055                     ??___fltol:
  1369                           
  1370                           ; 1 bytes @ 0x35
  1371  0055                     	ds	1
  1372  0056                     ___fladd@a:
  1373                           
  1374                           ; 4 bytes @ 0x36
  1375  0056                     	ds	4
  1376  005A                     ??___fladd:
  1377  005A                     ___fltol@sign1:	
  1378                           ; 1 bytes @ 0x3A
  1379                           
  1380                           
  1381                           ; 1 bytes @ 0x3A
  1382  005A                     	ds	1
  1383  005B                     ___fltol@exp1:
  1384                           
  1385                           ; 1 bytes @ 0x3B
  1386  005B                     	ds	7
  1387  0062                     ___fladd@signs:
  1388                           
  1389                           ; 1 bytes @ 0x42
  1390  0062                     	ds	1
  1391  0063                     ___fladd@aexp:
  1392                           
  1393                           ; 1 bytes @ 0x43
  1394  0063                     	ds	1
  1395  0064                     ___fladd@bexp:
  1396                           
  1397                           ; 1 bytes @ 0x44
  1398  0064                     	ds	1
  1399  0065                     ___fladd@grs:
  1400                           
  1401                           ; 1 bytes @ 0x45
  1402  0065                     	ds	1
  1403  0066                     ?___flsub:
  1404  0066                     ___flsub@a:	
  1405                           ; 4 bytes @ 0x46
  1406                           
  1407                           
  1408                           ; 4 bytes @ 0x46
  1409  0066                     	ds	4
  1410  006A                     ___flsub@b:
  1411                           
  1412                           ; 4 bytes @ 0x4A
  1413  006A                     	ds	4
  1414                           
  1415                           	psect	maintext
  1416  1057                     __pmaintext:	
  1417 ;;
  1418 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  1419 ;;
  1420 ;; *************** function _main *****************
  1421 ;; Defined at:
  1422 ;;		line 102 in file "main.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;		None
  1425 ;; Auto vars:     Size  Location     Type
  1426 ;;		None
  1427 ;; Return value:  Size  Location     Type
  1428 ;;                  1    wreg      void 
  1429 ;; Registers used:
  1430 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1431 ;; Tracked objects:
  1432 ;;		On entry : B00/0
  1433 ;;		On exit  : 0/0
  1434 ;;		Unchanged: 0/0
  1435 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1436 ;;      Params:         0       0       0       0       0
  1437 ;;      Locals:         0       0       0       0       0
  1438 ;;      Temps:          0       0       4       0       0
  1439 ;;      Totals:         0       0       4       0       0
  1440 ;;Total ram usage:        4 bytes
  1441 ;; Hardware stack levels required when called:    4
  1442 ;; This function calls:
  1443 ;;		_INIT_UART
  1444 ;;		_Lcd_Clear
  1445 ;;		_Lcd_Init
  1446 ;;		_Lcd_Set_Cursor
  1447 ;;		_Lcd_Write_String
  1448 ;;		___flmul
  1449 ;;		___xxtofl
  1450 ;;		_setup
  1451 ;;		_spiInit
  1452 ;;		_spiRead
  1453 ;;		_sprintf
  1454 ;;		_write
  1455 ;; This function is called by:
  1456 ;;		Startup code after reset
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function _main
  1462  1057                     _main:
  1463  1057                     l3570:	
  1464                           ;incstack = 0
  1465                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1466                           
  1467                           
  1468                           ;main.c: 104:     setup();
  1469  1057  160A  158A  20D6  160A  118A  	fcall	_setup
  1470                           
  1471                           ;main.c: 105:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LO
      +                          W, SPI_IDLE_2_ACTIVE);
  1472  105C  01F0               	clrf	spiInit@sDataSample
  1473  105D  01F1               	clrf	spiInit@sClockIdle
  1474  105E  01F2               	clrf	spiInit@sTransmitEdge
  1475  105F  3020               	movlw	32
  1476  1060  160A  158A  20FF  160A  118A  	fcall	_spiInit
  1477                           
  1478                           ;main.c: 106:     INIT_UART();
  1479  1065  160A  158A  20EA  160A  118A  	fcall	_INIT_UART
  1480                           
  1481                           ;main.c: 108:     Lcd_Init();
  1482  106A  160A  158A  21F1  160A  118A  	fcall	_Lcd_Init
  1483                           
  1484                           ;main.c: 109:     Lcd_Clear();
  1485  106F  160A  158A  20B7  160A  118A  	fcall	_Lcd_Clear
  1486  1074                     l111:	
  1487                           ;main.c: 112:     while (1) {
  1488                           
  1489                           
  1490                           ;main.c: 116:         Lcd_Set_Cursor(1, 1);
  1491  1074  01F4               	clrf	Lcd_Set_Cursor@b
  1492  1075  0AF4               	incf	Lcd_Set_Cursor@b,f
  1493  1076  3001               	movlw	1
  1494  1077  160A  158A  214A  160A  118A  	fcall	_Lcd_Set_Cursor
  1495  107C                     l3572:
  1496                           
  1497                           ;main.c: 117:         Lcd_Write_String("S1:   S2:    S3: \n");
  1498  107C  3091               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1499  107D  00F3               	movwf	Lcd_Write_String@a
  1500  107E  3080               	movlw	128
  1501  107F  00F4               	movwf	Lcd_Write_String@a+1
  1502  1080  160A  158A  2232  160A  118A  	fcall	_Lcd_Write_String
  1503  1085                     l3574:
  1504                           
  1505                           ;main.c: 118:         write("S1:");
  1506  1085  30B2               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1507  1086  00F0               	movwf	write@entrada
  1508  1087  3080               	movlw	128
  1509  1088  00F1               	movwf	write@entrada+1
  1510  1089  160A  158A  242E  160A  118A  	fcall	_write
  1511  108E                     l3576:
  1512                           
  1513                           ;main.c: 119:         write(s);
  1514  108E  30D9               	movlw	(low (_s| 0))& (0+255)
  1515  108F  00F0               	movwf	write@entrada
  1516  1090  3000               	movlw	0
  1517  1091  00F1               	movwf	write@entrada+1
  1518  1092  160A  158A  242E  160A  118A  	fcall	_write
  1519  1097                     l3578:
  1520                           
  1521                           ;main.c: 120:         write("S2:");
  1522  1097  30B6               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1523  1098  00F0               	movwf	write@entrada
  1524  1099  3080               	movlw	128
  1525  109A  00F1               	movwf	write@entrada+1
  1526  109B  160A  158A  242E  160A  118A  	fcall	_write
  1527  10A0                     l3580:
  1528                           
  1529                           ;main.c: 121:         write(c);
  1530  10A0  3090               	movlw	(low (_c| (0+256)))& (0+255)
  1531  10A1  00F0               	movwf	write@entrada
  1532  10A2  3001               	movlw	1
  1533  10A3  00F1               	movwf	write@entrada+1
  1534  10A4  160A  158A  242E  160A  118A  	fcall	_write
  1535  10A9                     l3582:
  1536                           
  1537                           ;main.c: 122:         write("S3:");
  1538  10A9  30BA               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1539  10AA  00F0               	movwf	write@entrada
  1540  10AB  3080               	movlw	128
  1541  10AC  00F1               	movwf	write@entrada+1
  1542  10AD  160A  158A  242E  160A  118A  	fcall	_write
  1543  10B2                     l3584:
  1544                           
  1545                           ;main.c: 123:         write(l);
  1546  10B2  30A4               	movlw	(low (_l| (0+256)))& (0+255)
  1547  10B3  00F0               	movwf	write@entrada
  1548  10B4  3001               	movlw	1
  1549  10B5  00F1               	movwf	write@entrada+1
  1550  10B6  160A  158A  242E  160A  118A  	fcall	_write
  1551  10BB                     l3586:
  1552                           
  1553                           ;main.c: 124:         write(0xA);
  1554  10BB  300A               	movlw	10
  1555  10BC  00F0               	movwf	write@entrada
  1556  10BD  3000               	movlw	0
  1557  10BE  00F1               	movwf	write@entrada+1
  1558  10BF  160A  158A  242E  160A  118A  	fcall	_write
  1559  10C4                     l3588:
  1560                           
  1561                           ;main.c: 125:         x = adc * 0.0195;
  1562  10C4  303C               	movlw	60
  1563  10C5  1283               	bcf	3,5	;RP0=0, select bank0
  1564  10C6  1303               	bcf	3,6	;RP1=0, select bank0
  1565  10C7  00A7               	movwf	___flmul@b+3
  1566  10C8  309F               	movlw	159
  1567  10C9  00A6               	movwf	___flmul@b+2
  1568  10CA  30BE               	movlw	190
  1569  10CB  00A5               	movwf	___flmul@b+1
  1570  10CC  3077               	movlw	119
  1571  10CD  00A4               	movwf	___flmul@b
  1572  10CE  1683               	bsf	3,5	;RP0=1, select bank1
  1573  10CF  1303               	bcf	3,6	;RP1=0, select bank1
  1574  10D0  0858               	movf	_adc^(0+128),w
  1575  10D1  00C6               	movwf	??_main^(0+128)
  1576  10D2  01C7               	clrf	(??_main^(0+128)+1)
  1577  10D3  01C8               	clrf	(??_main^(0+128)+2)
  1578  10D4  01C9               	clrf	(??_main^(0+128)+3)
  1579  10D5  0849               	movf	(??_main+3)^(0+128),w
  1580  10D6  00F3               	movwf	___xxtofl@val+3
  1581  10D7  0848               	movf	(??_main+2)^(0+128),w
  1582  10D8  00F2               	movwf	___xxtofl@val+2
  1583  10D9  0847               	movf	(??_main+1)^(0+128),w
  1584  10DA  00F1               	movwf	___xxtofl@val+1
  1585  10DB  0846               	movf	??_main^(0+128),w
  1586  10DC  00F0               	movwf	___xxtofl@val
  1587  10DD  3001               	movlw	1
  1588  10DE  160A  158A  253B  160A  118A  	fcall	___xxtofl
  1589  10E3  0873               	movf	?___xxtofl+3,w
  1590  10E4  1283               	bcf	3,5	;RP0=0, select bank0
  1591  10E5  1303               	bcf	3,6	;RP1=0, select bank0
  1592  10E6  00AB               	movwf	___flmul@a+3
  1593  10E7  0872               	movf	?___xxtofl+2,w
  1594  10E8  00AA               	movwf	___flmul@a+2
  1595  10E9  0871               	movf	?___xxtofl+1,w
  1596  10EA  00A9               	movwf	___flmul@a+1
  1597  10EB  0870               	movf	?___xxtofl,w
  1598  10EC  00A8               	movwf	___flmul@a
  1599  10ED  120A  158A  249F  160A  118A  	fcall	___flmul
  1600  10F2  1283               	bcf	3,5	;RP0=0, select bank0
  1601  10F3  1303               	bcf	3,6	;RP1=0, select bank0
  1602  10F4  0827               	movf	?___flmul+3,w
  1603  10F5  1683               	bsf	3,5	;RP0=1, select bank1
  1604  10F6  1303               	bcf	3,6	;RP1=0, select bank1
  1605  10F7  00D5               	movwf	(_x+3)^(0+128)
  1606  10F8  1283               	bcf	3,5	;RP0=0, select bank0
  1607  10F9  1303               	bcf	3,6	;RP1=0, select bank0
  1608  10FA  0826               	movf	?___flmul+2,w
  1609  10FB  1683               	bsf	3,5	;RP0=1, select bank1
  1610  10FC  1303               	bcf	3,6	;RP1=0, select bank1
  1611  10FD  00D4               	movwf	(_x+2)^(0+128)
  1612  10FE  1283               	bcf	3,5	;RP0=0, select bank0
  1613  10FF  1303               	bcf	3,6	;RP1=0, select bank0
  1614  1100  0825               	movf	?___flmul+1,w
  1615  1101  1683               	bsf	3,5	;RP0=1, select bank1
  1616  1102  1303               	bcf	3,6	;RP1=0, select bank1
  1617  1103  00D3               	movwf	(_x+1)^(0+128)
  1618  1104  1283               	bcf	3,5	;RP0=0, select bank0
  1619  1105  1303               	bcf	3,6	;RP1=0, select bank0
  1620  1106  0824               	movf	?___flmul,w
  1621  1107  1683               	bsf	3,5	;RP0=1, select bank1
  1622  1108  1303               	bcf	3,6	;RP1=0, select bank1
  1623  1109  00D2               	movwf	_x^(0+128)
  1624  110A                     l3590:
  1625                           
  1626                           ;main.c: 126:         Lcd_Set_Cursor(2, 1);
  1627  110A  01F4               	clrf	Lcd_Set_Cursor@b
  1628  110B  0AF4               	incf	Lcd_Set_Cursor@b,f
  1629  110C  3002               	movlw	2
  1630  110D  160A  158A  214A  160A  118A  	fcall	_Lcd_Set_Cursor
  1631  1112                     l3592:
  1632                           
  1633                           ;main.c: 127:         sprintf(s, "%3.2fV", x);
  1634  1112  30D9               	movlw	(low (_s| 0))& (0+255)
  1635  1113  1683               	bsf	3,5	;RP0=1, select bank1
  1636  1114  1303               	bcf	3,6	;RP1=0, select bank1
  1637  1115  00A0               	movwf	sprintf@sp^(0+128)
  1638  1116  3000               	movlw	0
  1639  1117  00A1               	movwf	(sprintf@sp+1)^(0+128)
  1640  1118  30AB               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1641  1119  00C6               	movwf	??_main^(0+128)
  1642  111A  0846               	movf	??_main^(0+128),w
  1643  111B  00A2               	movwf	sprintf@f^(0+128)
  1644  111C  0855               	movf	(_x+3)^(0+128),w
  1645  111D  00A6               	movwf	((?_sprintf+3)^(0+128)+3)
  1646  111E  0854               	movf	(_x+2)^(0+128),w
  1647  111F  00A5               	movwf	((?_sprintf+2)^(0+128)+3)
  1648  1120  0853               	movf	(_x+1)^(0+128),w
  1649  1121  00A4               	movwf	((?_sprintf+1)^(0+128)+3)
  1650  1122  0852               	movf	_x^(0+128),w
  1651  1123  00A3               	movwf	(?_sprintf^(0+128)+3)
  1652  1124  160A  118A  253B  160A  118A  	fcall	_sprintf
  1653  1129                     l3594:
  1654                           
  1655                           ;main.c: 128:         Lcd_Write_String(s);
  1656  1129  30D9               	movlw	(low (_s| 0))& (0+255)
  1657  112A  00F3               	movwf	Lcd_Write_String@a
  1658  112B  3000               	movlw	0
  1659  112C  00F4               	movwf	Lcd_Write_String@a+1
  1660  112D  160A  158A  2232  160A  118A  	fcall	_Lcd_Write_String
  1661  1132                     l3596:
  1662                           
  1663                           ;main.c: 135:         n = 1 * count;
  1664  1132  1683               	bsf	3,5	;RP0=1, select bank1
  1665  1133  1303               	bcf	3,6	;RP1=0, select bank1
  1666  1134  086D               	movf	_count^(0+128),w
  1667  1135  00C6               	movwf	??_main^(0+128)
  1668  1136  01C7               	clrf	(??_main^(0+128)+1)
  1669  1137  01C8               	clrf	(??_main^(0+128)+2)
  1670  1138  01C9               	clrf	(??_main^(0+128)+3)
  1671  1139  0849               	movf	(??_main+3)^(0+128),w
  1672  113A  00F3               	movwf	___xxtofl@val+3
  1673  113B  0848               	movf	(??_main+2)^(0+128),w
  1674  113C  00F2               	movwf	___xxtofl@val+2
  1675  113D  0847               	movf	(??_main+1)^(0+128),w
  1676  113E  00F1               	movwf	___xxtofl@val+1
  1677  113F  0846               	movf	??_main^(0+128),w
  1678  1140  00F0               	movwf	___xxtofl@val
  1679  1141  3001               	movlw	1
  1680  1142  160A  158A  253B  160A  118A  	fcall	___xxtofl
  1681  1147  0873               	movf	?___xxtofl+3,w
  1682  1148  1683               	bsf	3,5	;RP0=1, select bank1
  1683  1149  1303               	bcf	3,6	;RP1=0, select bank1
  1684  114A  00CD               	movwf	(_n+3)^(0+128)
  1685  114B  0872               	movf	?___xxtofl+2,w
  1686  114C  00CC               	movwf	(_n+2)^(0+128)
  1687  114D  0871               	movf	?___xxtofl+1,w
  1688  114E  00CB               	movwf	(_n+1)^(0+128)
  1689  114F  0870               	movf	?___xxtofl,w
  1690  1150  00CA               	movwf	_n^(0+128)
  1691  1151                     l3598:
  1692                           
  1693                           ;main.c: 136:         Lcd_Set_Cursor(2, 8);
  1694  1151  3008               	movlw	8
  1695  1152  00C6               	movwf	??_main^(0+128)
  1696  1153  0846               	movf	??_main^(0+128),w
  1697  1154  00F4               	movwf	Lcd_Set_Cursor@b
  1698  1155  3002               	movlw	2
  1699  1156  160A  158A  214A  160A  118A  	fcall	_Lcd_Set_Cursor
  1700  115B                     l3600:
  1701                           
  1702                           ;main.c: 137:         sprintf(c, "%d", count);
  1703  115B  3090               	movlw	(low (_c| (0+256)))& (0+255)
  1704  115C  1683               	bsf	3,5	;RP0=1, select bank1
  1705  115D  1303               	bcf	3,6	;RP1=0, select bank1
  1706  115E  00A0               	movwf	sprintf@sp^(0+128)
  1707  115F  3001               	movlw	1
  1708  1160  00A1               	movwf	(sprintf@sp+1)^(0+128)
  1709  1161  30BE               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1710  1162  00C6               	movwf	??_main^(0+128)
  1711  1163  0846               	movf	??_main^(0+128),w
  1712  1164  00A2               	movwf	sprintf@f^(0+128)
  1713  1165  086D               	movf	_count^(0+128),w
  1714  1166  00C7               	movwf	(??_main+1)^(0+128)
  1715  1167  01C8               	clrf	((??_main+1)^(0+128)+1)
  1716  1168  0847               	movf	(??_main+1)^(0+128),w
  1717  1169  00A3               	movwf	(?_sprintf^(0+128)+3)
  1718  116A  0848               	movf	(??_main+2)^(0+128),w
  1719  116B  00A4               	movwf	((?_sprintf+1)^(0+128)+3)
  1720  116C  160A  118A  253B  160A  118A  	fcall	_sprintf
  1721  1171                     l3602:
  1722                           
  1723                           ;main.c: 138:         Lcd_Write_String(c);
  1724  1171  3090               	movlw	(low (_c| (0+256)))& (0+255)
  1725  1172  00F3               	movwf	Lcd_Write_String@a
  1726  1173  3001               	movlw	1
  1727  1174  00F4               	movwf	Lcd_Write_String@a+1
  1728  1175  160A  158A  2232  160A  118A  	fcall	_Lcd_Write_String
  1729                           
  1730                           ;main.c: 142:         p = 1.95 * lmm;
  1731  117A  303F               	movlw	63
  1732  117B  1283               	bcf	3,5	;RP0=0, select bank0
  1733  117C  1303               	bcf	3,6	;RP1=0, select bank0
  1734  117D  00A7               	movwf	___flmul@b+3
  1735  117E  30F9               	movlw	249
  1736  117F  00A6               	movwf	___flmul@b+2
  1737  1180  3099               	movlw	153
  1738  1181  00A5               	movwf	___flmul@b+1
  1739  1182  309A               	movlw	154
  1740  1183  00A4               	movwf	___flmul@b
  1741  1184  1683               	bsf	3,5	;RP0=1, select bank1
  1742  1185  1303               	bcf	3,6	;RP1=0, select bank1
  1743  1186  086E               	movf	_lmm^(0+128),w
  1744  1187  00C6               	movwf	??_main^(0+128)
  1745  1188  01C7               	clrf	(??_main^(0+128)+1)
  1746  1189  01C8               	clrf	(??_main^(0+128)+2)
  1747  118A  01C9               	clrf	(??_main^(0+128)+3)
  1748  118B  0849               	movf	(??_main+3)^(0+128),w
  1749  118C  00F3               	movwf	___xxtofl@val+3
  1750  118D  0848               	movf	(??_main+2)^(0+128),w
  1751  118E  00F2               	movwf	___xxtofl@val+2
  1752  118F  0847               	movf	(??_main+1)^(0+128),w
  1753  1190  00F1               	movwf	___xxtofl@val+1
  1754  1191  0846               	movf	??_main^(0+128),w
  1755  1192  00F0               	movwf	___xxtofl@val
  1756  1193  3001               	movlw	1
  1757  1194  160A  158A  253B  160A  118A  	fcall	___xxtofl
  1758  1199  0873               	movf	?___xxtofl+3,w
  1759  119A  1283               	bcf	3,5	;RP0=0, select bank0
  1760  119B  1303               	bcf	3,6	;RP1=0, select bank0
  1761  119C  00AB               	movwf	___flmul@a+3
  1762  119D  0872               	movf	?___xxtofl+2,w
  1763  119E  00AA               	movwf	___flmul@a+2
  1764  119F  0871               	movf	?___xxtofl+1,w
  1765  11A0  00A9               	movwf	___flmul@a+1
  1766  11A1  0870               	movf	?___xxtofl,w
  1767  11A2  00A8               	movwf	___flmul@a
  1768  11A3  120A  158A  249F  160A  118A  	fcall	___flmul
  1769  11A8  1283               	bcf	3,5	;RP0=0, select bank0
  1770  11A9  1303               	bcf	3,6	;RP1=0, select bank0
  1771  11AA  0827               	movf	?___flmul+3,w
  1772  11AB  1683               	bsf	3,5	;RP0=1, select bank1
  1773  11AC  1303               	bcf	3,6	;RP1=0, select bank1
  1774  11AD  00D1               	movwf	(_p+3)^(0+128)
  1775  11AE  1283               	bcf	3,5	;RP0=0, select bank0
  1776  11AF  1303               	bcf	3,6	;RP1=0, select bank0
  1777  11B0  0826               	movf	?___flmul+2,w
  1778  11B1  1683               	bsf	3,5	;RP0=1, select bank1
  1779  11B2  1303               	bcf	3,6	;RP1=0, select bank1
  1780  11B3  00D0               	movwf	(_p+2)^(0+128)
  1781  11B4  1283               	bcf	3,5	;RP0=0, select bank0
  1782  11B5  1303               	bcf	3,6	;RP1=0, select bank0
  1783  11B6  0825               	movf	?___flmul+1,w
  1784  11B7  1683               	bsf	3,5	;RP0=1, select bank1
  1785  11B8  1303               	bcf	3,6	;RP1=0, select bank1
  1786  11B9  00CF               	movwf	(_p+1)^(0+128)
  1787  11BA  1283               	bcf	3,5	;RP0=0, select bank0
  1788  11BB  1303               	bcf	3,6	;RP1=0, select bank0
  1789  11BC  0824               	movf	?___flmul,w
  1790  11BD  1683               	bsf	3,5	;RP0=1, select bank1
  1791  11BE  1303               	bcf	3,6	;RP1=0, select bank1
  1792  11BF  00CE               	movwf	_p^(0+128)
  1793  11C0                     l3604:
  1794                           
  1795                           ;main.c: 144:         Lcd_Set_Cursor(2, 13);
  1796  11C0  300D               	movlw	13
  1797  11C1  00C6               	movwf	??_main^(0+128)
  1798  11C2  0846               	movf	??_main^(0+128),w
  1799  11C3  00F4               	movwf	Lcd_Set_Cursor@b
  1800  11C4  3002               	movlw	2
  1801  11C5  160A  158A  214A  160A  118A  	fcall	_Lcd_Set_Cursor
  1802  11CA                     l3606:
  1803                           
  1804                           ;main.c: 145:         sprintf(l, "%3.0fC", p);
  1805  11CA  30A4               	movlw	(low (_l| (0+256)))& (0+255)
  1806  11CB  1683               	bsf	3,5	;RP0=1, select bank1
  1807  11CC  1303               	bcf	3,6	;RP1=0, select bank1
  1808  11CD  00A0               	movwf	sprintf@sp^(0+128)
  1809  11CE  3001               	movlw	1
  1810  11CF  00A1               	movwf	(sprintf@sp+1)^(0+128)
  1811  11D0  30A4               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
  1812  11D1  00C6               	movwf	??_main^(0+128)
  1813  11D2  0846               	movf	??_main^(0+128),w
  1814  11D3  00A2               	movwf	sprintf@f^(0+128)
  1815  11D4  0851               	movf	(_p+3)^(0+128),w
  1816  11D5  00A6               	movwf	((?_sprintf+3)^(0+128)+3)
  1817  11D6  0850               	movf	(_p+2)^(0+128),w
  1818  11D7  00A5               	movwf	((?_sprintf+2)^(0+128)+3)
  1819  11D8  084F               	movf	(_p+1)^(0+128),w
  1820  11D9  00A4               	movwf	((?_sprintf+1)^(0+128)+3)
  1821  11DA  084E               	movf	_p^(0+128),w
  1822  11DB  00A3               	movwf	(?_sprintf^(0+128)+3)
  1823  11DC  160A  118A  253B  160A  118A  	fcall	_sprintf
  1824  11E1                     l3608:
  1825                           
  1826                           ;main.c: 146:         Lcd_Write_String(l);
  1827  11E1  30A4               	movlw	(low (_l| (0+256)))& (0+255)
  1828  11E2  00F3               	movwf	Lcd_Write_String@a
  1829  11E3  3001               	movlw	1
  1830  11E4  00F4               	movwf	Lcd_Write_String@a+1
  1831  11E5  160A  158A  2232  160A  118A  	fcall	_Lcd_Write_String
  1832  11EA                     l3610:
  1833                           
  1834                           ;main.c: 154:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1835  11EA  3003               	movlw	3
  1836  11EB  1683               	bsf	3,5	;RP0=1, select bank1
  1837  11EC  1303               	bcf	3,6	;RP1=0, select bank1
  1838  11ED  00C7               	movwf	(??_main^(0+128)+1)
  1839  11EE  3097               	movlw	151
  1840  11EF  00C6               	movwf	??_main^(0+128)
  1841  11F0                     u5777:
  1842  11F0  0BC6               	decfsz	??_main^(0+128),f
  1843  11F1  29F0               	goto	u5777
  1844  11F2  0BC7               	decfsz	(??_main^(0+128)+1),f
  1845  11F3  29F0               	goto	u5777
  1846  11F4                     l3612:
  1847                           
  1848                           ;main.c: 155:         PORTCbits.RC0 = 0;
  1849  11F4  1283               	bcf	3,5	;RP0=0, select bank0
  1850  11F5  1303               	bcf	3,6	;RP1=0, select bank0
  1851  11F6  1007               	bcf	7,0	;volatile
  1852  11F7                     l3614:
  1853                           
  1854                           ;main.c: 156:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1855  11F7  3003               	movlw	3
  1856  11F8  1683               	bsf	3,5	;RP0=1, select bank1
  1857  11F9  1303               	bcf	3,6	;RP1=0, select bank1
  1858  11FA  00C7               	movwf	(??_main^(0+128)+1)
  1859  11FB  3097               	movlw	151
  1860  11FC  00C6               	movwf	??_main^(0+128)
  1861  11FD                     u5787:
  1862  11FD  0BC6               	decfsz	??_main^(0+128),f
  1863  11FE  29FD               	goto	u5787
  1864  11FF  0BC7               	decfsz	(??_main^(0+128)+1),f
  1865  1200  29FD               	goto	u5787
  1866  1201                     l3616:
  1867                           
  1868                           ;main.c: 157:         SSPBUF = 0;
  1869  1201  1283               	bcf	3,5	;RP0=0, select bank0
  1870  1202  1303               	bcf	3,6	;RP1=0, select bank0
  1871  1203  0193               	clrf	19	;volatile
  1872  1204                     l3618:
  1873                           
  1874                           ;main.c: 158:         adc = spiRead();
  1875  1204  160A  158A  20A3  160A  118A  	fcall	_spiRead
  1876  1209  1683               	bsf	3,5	;RP0=1, select bank1
  1877  120A  1303               	bcf	3,6	;RP1=0, select bank1
  1878  120B  00C6               	movwf	??_main^(0+128)
  1879  120C  0846               	movf	??_main^(0+128),w
  1880  120D  00D8               	movwf	_adc^(0+128)
  1881  120E                     l3620:
  1882                           
  1883                           ;main.c: 159:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1884  120E  3003               	movlw	3
  1885  120F  1683               	bsf	3,5	;RP0=1, select bank1
  1886  1210  1303               	bcf	3,6	;RP1=0, select bank1
  1887  1211  00C7               	movwf	(??_main^(0+128)+1)
  1888  1212  3097               	movlw	151
  1889  1213  00C6               	movwf	??_main^(0+128)
  1890  1214                     u5797:
  1891  1214  0BC6               	decfsz	??_main^(0+128),f
  1892  1215  2A14               	goto	u5797
  1893  1216  0BC7               	decfsz	(??_main^(0+128)+1),f
  1894  1217  2A14               	goto	u5797
  1895  1218                     l3622:
  1896                           
  1897                           ;main.c: 160:         PORTCbits.RC0 = 1;
  1898  1218  1283               	bcf	3,5	;RP0=0, select bank0
  1899  1219  1303               	bcf	3,6	;RP1=0, select bank0
  1900  121A  1407               	bsf	7,0	;volatile
  1901  121B                     l3624:
  1902                           
  1903                           ;main.c: 161:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1904  121B  3003               	movlw	3
  1905  121C  1683               	bsf	3,5	;RP0=1, select bank1
  1906  121D  1303               	bcf	3,6	;RP1=0, select bank1
  1907  121E  00C8               	movwf	(??_main^(0+128)+2)
  1908  121F  3008               	movlw	8
  1909  1220  00C7               	movwf	(??_main^(0+128)+1)
  1910  1221  3076               	movlw	118
  1911  1222  00C6               	movwf	??_main^(0+128)
  1912  1223                     u5807:
  1913  1223  0BC6               	decfsz	??_main^(0+128),f
  1914  1224  2A23               	goto	u5807
  1915  1225  0BC7               	decfsz	(??_main^(0+128)+1),f
  1916  1226  2A23               	goto	u5807
  1917  1227  0BC8               	decfsz	(??_main^(0+128)+2),f
  1918  1228  2A23               	goto	u5807
  1919  1229  0000               	nop
  1920  122A                     l3626:
  1921                           
  1922                           ;main.c: 164:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1923  122A  301A               	movlw	26
  1924  122B  1683               	bsf	3,5	;RP0=1, select bank1
  1925  122C  1303               	bcf	3,6	;RP1=0, select bank1
  1926  122D  00C7               	movwf	(??_main^(0+128)+1)
  1927  122E  30F7               	movlw	247
  1928  122F  00C6               	movwf	??_main^(0+128)
  1929  1230                     u5817:
  1930  1230  0BC6               	decfsz	??_main^(0+128),f
  1931  1231  2A30               	goto	u5817
  1932  1232  0BC7               	decfsz	(??_main^(0+128)+1),f
  1933  1233  2A30               	goto	u5817
  1934  1234  2A35               	nop2
  1935  1235                     l3628:
  1936                           
  1937                           ;main.c: 165:         PORTCbits.RC1 = 0;
  1938  1235  1283               	bcf	3,5	;RP0=0, select bank0
  1939  1236  1303               	bcf	3,6	;RP1=0, select bank0
  1940  1237  1087               	bcf	7,1	;volatile
  1941  1238                     l3630:
  1942                           
  1943                           ;main.c: 166:         _delay((unsigned long)((10)*(8000000/4000.0)));
  1944  1238  301A               	movlw	26
  1945  1239  1683               	bsf	3,5	;RP0=1, select bank1
  1946  123A  1303               	bcf	3,6	;RP1=0, select bank1
  1947  123B  00C7               	movwf	(??_main^(0+128)+1)
  1948  123C  30F7               	movlw	247
  1949  123D  00C6               	movwf	??_main^(0+128)
  1950  123E                     u5827:
  1951  123E  0BC6               	decfsz	??_main^(0+128),f
  1952  123F  2A3E               	goto	u5827
  1953  1240  0BC7               	decfsz	(??_main^(0+128)+1),f
  1954  1241  2A3E               	goto	u5827
  1955  1242  2A43               	nop2
  1956  1243                     l3632:
  1957                           
  1958                           ;main.c: 167:         SSPBUF = PORTD;
  1959  1243  1283               	bcf	3,5	;RP0=0, select bank0
  1960  1244  1303               	bcf	3,6	;RP1=0, select bank0
  1961  1245  0808               	movf	8,w	;volatile
  1962  1246  0093               	movwf	19	;volatile
  1963  1247                     l3634:
  1964                           
  1965                           ;main.c: 168:         count = spiRead();
  1966  1247  160A  158A  20A3  160A  118A  	fcall	_spiRead
  1967  124C  1683               	bsf	3,5	;RP0=1, select bank1
  1968  124D  1303               	bcf	3,6	;RP1=0, select bank1
  1969  124E  00C6               	movwf	??_main^(0+128)
  1970  124F  0846               	movf	??_main^(0+128),w
  1971  1250  00ED               	movwf	_count^(0+128)
  1972  1251                     l3636:
  1973                           
  1974                           ;main.c: 169:         _delay((unsigned long)((1)*(8000000/4000.0)));
  1975  1251  3003               	movlw	3
  1976  1252  1683               	bsf	3,5	;RP0=1, select bank1
  1977  1253  1303               	bcf	3,6	;RP1=0, select bank1
  1978  1254  00C7               	movwf	(??_main^(0+128)+1)
  1979  1255  3097               	movlw	151
  1980  1256  00C6               	movwf	??_main^(0+128)
  1981  1257                     u5837:
  1982  1257  0BC6               	decfsz	??_main^(0+128),f
  1983  1258  2A57               	goto	u5837
  1984  1259  0BC7               	decfsz	(??_main^(0+128)+1),f
  1985  125A  2A57               	goto	u5837
  1986  125B                     l3638:
  1987                           
  1988                           ;main.c: 170:         PORTCbits.RC1 = 1;
  1989  125B  1283               	bcf	3,5	;RP0=0, select bank0
  1990  125C  1303               	bcf	3,6	;RP1=0, select bank0
  1991  125D  1487               	bsf	7,1	;volatile
  1992  125E                     l3640:
  1993                           
  1994                           ;main.c: 171:         _delay((unsigned long)((200)*(8000000/4000.0)));
  1995  125E  3003               	movlw	3
  1996  125F  1683               	bsf	3,5	;RP0=1, select bank1
  1997  1260  1303               	bcf	3,6	;RP1=0, select bank1
  1998  1261  00C8               	movwf	(??_main^(0+128)+2)
  1999  1262  3008               	movlw	8
  2000  1263  00C7               	movwf	(??_main^(0+128)+1)
  2001  1264  3076               	movlw	118
  2002  1265  00C6               	movwf	??_main^(0+128)
  2003  1266                     u5847:
  2004  1266  0BC6               	decfsz	??_main^(0+128),f
  2005  1267  2A66               	goto	u5847
  2006  1268  0BC7               	decfsz	(??_main^(0+128)+1),f
  2007  1269  2A66               	goto	u5847
  2008  126A  0BC8               	decfsz	(??_main^(0+128)+2),f
  2009  126B  2A66               	goto	u5847
  2010  126C  0000               	nop
  2011  126D                     l3642:
  2012                           
  2013                           ;main.c: 174:         _delay((unsigned long)((10)*(8000000/4000.0)));
  2014  126D  301A               	movlw	26
  2015  126E  1683               	bsf	3,5	;RP0=1, select bank1
  2016  126F  1303               	bcf	3,6	;RP1=0, select bank1
  2017  1270  00C7               	movwf	(??_main^(0+128)+1)
  2018  1271  30F7               	movlw	247
  2019  1272  00C6               	movwf	??_main^(0+128)
  2020  1273                     u5857:
  2021  1273  0BC6               	decfsz	??_main^(0+128),f
  2022  1274  2A73               	goto	u5857
  2023  1275  0BC7               	decfsz	(??_main^(0+128)+1),f
  2024  1276  2A73               	goto	u5857
  2025  1277  2A78               	nop2
  2026  1278                     l3644:
  2027                           
  2028                           ;main.c: 175:         PORTCbits.RC2 = 0;
  2029  1278  1283               	bcf	3,5	;RP0=0, select bank0
  2030  1279  1303               	bcf	3,6	;RP1=0, select bank0
  2031  127A  1107               	bcf	7,2	;volatile
  2032  127B                     l3646:
  2033                           
  2034                           ;main.c: 176:         _delay((unsigned long)((10)*(8000000/4000.0)));
  2035  127B  301A               	movlw	26
  2036  127C  1683               	bsf	3,5	;RP0=1, select bank1
  2037  127D  1303               	bcf	3,6	;RP1=0, select bank1
  2038  127E  00C7               	movwf	(??_main^(0+128)+1)
  2039  127F  30F7               	movlw	247
  2040  1280  00C6               	movwf	??_main^(0+128)
  2041  1281                     u5867:
  2042  1281  0BC6               	decfsz	??_main^(0+128),f
  2043  1282  2A81               	goto	u5867
  2044  1283  0BC7               	decfsz	(??_main^(0+128)+1),f
  2045  1284  2A81               	goto	u5867
  2046  1285  2A86               	nop2
  2047  1286                     l3648:
  2048                           
  2049                           ;main.c: 177:         SSPBUF = 0;
  2050  1286  1283               	bcf	3,5	;RP0=0, select bank0
  2051  1287  1303               	bcf	3,6	;RP1=0, select bank0
  2052  1288  0193               	clrf	19	;volatile
  2053  1289                     l3650:
  2054                           
  2055                           ;main.c: 178:         lmm = spiRead();
  2056  1289  160A  158A  20A3  160A  118A  	fcall	_spiRead
  2057  128E  1683               	bsf	3,5	;RP0=1, select bank1
  2058  128F  1303               	bcf	3,6	;RP1=0, select bank1
  2059  1290  00C6               	movwf	??_main^(0+128)
  2060  1291  0846               	movf	??_main^(0+128),w
  2061  1292  00EE               	movwf	_lmm^(0+128)
  2062  1293                     l3652:
  2063                           
  2064                           ;main.c: 179:         _delay((unsigned long)((1)*(8000000/4000.0)));
  2065  1293  3003               	movlw	3
  2066  1294  1683               	bsf	3,5	;RP0=1, select bank1
  2067  1295  1303               	bcf	3,6	;RP1=0, select bank1
  2068  1296  00C7               	movwf	(??_main^(0+128)+1)
  2069  1297  3097               	movlw	151
  2070  1298  00C6               	movwf	??_main^(0+128)
  2071  1299                     u5877:
  2072  1299  0BC6               	decfsz	??_main^(0+128),f
  2073  129A  2A99               	goto	u5877
  2074  129B  0BC7               	decfsz	(??_main^(0+128)+1),f
  2075  129C  2A99               	goto	u5877
  2076  129D                     l3654:
  2077                           
  2078                           ;main.c: 180:         PORTCbits.RC2 = 1;
  2079  129D  1283               	bcf	3,5	;RP0=0, select bank0
  2080  129E  1303               	bcf	3,6	;RP1=0, select bank0
  2081  129F  1507               	bsf	7,2	;volatile
  2082  12A0                     l3656:
  2083                           
  2084                           ;main.c: 181:         _delay((unsigned long)((200)*(8000000/4000.0)));
  2085  12A0  3003               	movlw	3
  2086  12A1  1683               	bsf	3,5	;RP0=1, select bank1
  2087  12A2  1303               	bcf	3,6	;RP1=0, select bank1
  2088  12A3  00C8               	movwf	(??_main^(0+128)+2)
  2089  12A4  3008               	movlw	8
  2090  12A5  00C7               	movwf	(??_main^(0+128)+1)
  2091  12A6  3076               	movlw	118
  2092  12A7  00C6               	movwf	??_main^(0+128)
  2093  12A8                     u5887:
  2094  12A8  0BC6               	decfsz	??_main^(0+128),f
  2095  12A9  2AA8               	goto	u5887
  2096  12AA  0BC7               	decfsz	(??_main^(0+128)+1),f
  2097  12AB  2AA8               	goto	u5887
  2098  12AC  0BC8               	decfsz	(??_main^(0+128)+2),f
  2099  12AD  2AA8               	goto	u5887
  2100  12AE  0000               	nop
  2101  12AF  2874               	goto	l111
  2102  12B0  120A  118A  2800   	ljmp	start
  2103  12B3                     __end_of_main:
  2104                           
  2105                           	psect	text1
  2106  1C2E                     __ptext1:	
  2107 ;; *************** function _write *****************
  2108 ;; Defined at:
  2109 ;;		line 24 in file "UART.c"
  2110 ;; Parameters:    Size  Location     Type
  2111 ;;  entrada         2    0[COMMON] PTR unsigned char 
  2112 ;;		 -> RAM(512), l(20), STR_4(4), c(20), 
  2113 ;;		 -> STR_3(4), s(20), STR_2(4), 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;		None
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      void 
  2118 ;; Registers used:
  2119 ;;		wreg, fsr0l, fsr0h, btemp+1, pclath
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2125 ;;      Params:         2       0       0       0       0
  2126 ;;      Locals:         0       0       0       0       0
  2127 ;;      Temps:          2       0       0       0       0
  2128 ;;      Totals:         4       0       0       0       0
  2129 ;;Total ram usage:        4 bytes
  2130 ;; Hardware stack levels used:    2
  2131 ;; This function calls:
  2132 ;;		Nothing
  2133 ;; This function is called by:
  2134 ;;		_main
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function _write
  2140  1C2E                     _write:
  2141  1C2E                     l3258:	
  2142                           ;incstack = 0
  2143                           ; Regs used in _write: [wreg-fsr0h+btemp+1+pclath]
  2144                           
  2145                           
  2146                           ;UART.c: 25:     TXREG = entrada[0];
  2147  1C2E  0871               	movf	write@entrada+1,w
  2148  1C2F  1283               	bcf	3,5	;RP0=0, select bank0
  2149  1C30  1303               	bcf	3,6	;RP1=0, select bank0
  2150  1C31  00FF               	movwf	btemp+1
  2151  1C32  0870               	movf	write@entrada,w
  2152  1C33  0084               	movwf	4
  2153  1C34  120A  118A  2003  160A  158A  	fcall	stringtab
  2154  1C39  0099               	movwf	25	;volatile
  2155  1C3A                     l138:	
  2156                           ;UART.c: 27:     }
  2157                           
  2158                           
  2159                           ;UART.c: 26:     while (TRMT == 0) {
  2160  1C3A  1683               	bsf	3,5	;RP0=1, select bank1
  2161  1C3B  1303               	bcf	3,6	;RP1=0, select bank1
  2162  1C3C  1C98               	btfss	24,1	;volatile
  2163  1C3D  2C3F               	goto	u5191
  2164  1C3E  2C40               	goto	u5190
  2165  1C3F                     u5191:
  2166  1C3F  2C3A               	goto	l138
  2167  1C40                     u5190:
  2168  1C40                     l3260:
  2169                           
  2170                           ;UART.c: 28:     TXREG = entrada[1];
  2171  1C40  3001               	movlw	1
  2172  1C41  00F2               	movwf	??_write
  2173  1C42  3000               	movlw	0
  2174  1C43  00F3               	movwf	??_write+1
  2175  1C44  0872               	movf	??_write,w
  2176  1C45  0770               	addwf	write@entrada,w
  2177  1C46  0084               	movwf	4
  2178  1C47  0873               	movf	??_write+1,w
  2179  1C48  1803               	skipnc
  2180  1C49  0A73               	incf	??_write+1,w
  2181  1C4A  0771               	addwf	write@entrada+1,w
  2182  1C4B  1283               	bcf	3,5	;RP0=0, select bank0
  2183  1C4C  1303               	bcf	3,6	;RP1=0, select bank0
  2184  1C4D  00FF               	movwf	btemp+1
  2185  1C4E  120A  118A  2003  160A  158A  	fcall	stringtab
  2186  1C53  0099               	movwf	25	;volatile
  2187  1C54                     l141:	
  2188                           ;UART.c: 30:     }
  2189                           
  2190                           
  2191                           ;UART.c: 29:     while (TRMT == 0) {
  2192  1C54  1683               	bsf	3,5	;RP0=1, select bank1
  2193  1C55  1303               	bcf	3,6	;RP1=0, select bank1
  2194  1C56  1C98               	btfss	24,1	;volatile
  2195  1C57  2C59               	goto	u5201
  2196  1C58  2C5A               	goto	u5200
  2197  1C59                     u5201:
  2198  1C59  2C54               	goto	l141
  2199  1C5A                     u5200:
  2200  1C5A                     l3262:
  2201                           
  2202                           ;UART.c: 31:     TXREG = entrada[2];
  2203  1C5A  3002               	movlw	2
  2204  1C5B  00F2               	movwf	??_write
  2205  1C5C  3000               	movlw	0
  2206  1C5D  00F3               	movwf	??_write+1
  2207  1C5E  0872               	movf	??_write,w
  2208  1C5F  0770               	addwf	write@entrada,w
  2209  1C60  0084               	movwf	4
  2210  1C61  0873               	movf	??_write+1,w
  2211  1C62  1803               	skipnc
  2212  1C63  0A73               	incf	??_write+1,w
  2213  1C64  0771               	addwf	write@entrada+1,w
  2214  1C65  1283               	bcf	3,5	;RP0=0, select bank0
  2215  1C66  1303               	bcf	3,6	;RP1=0, select bank0
  2216  1C67  00FF               	movwf	btemp+1
  2217  1C68  120A  118A  2003  160A  158A  	fcall	stringtab
  2218  1C6D  0099               	movwf	25	;volatile
  2219  1C6E                     l144:	
  2220                           ;UART.c: 33:     }
  2221                           
  2222                           
  2223                           ;UART.c: 32:     while (TRMT == 0) {
  2224  1C6E  1683               	bsf	3,5	;RP0=1, select bank1
  2225  1C6F  1303               	bcf	3,6	;RP1=0, select bank1
  2226  1C70  1C98               	btfss	24,1	;volatile
  2227  1C71  2C73               	goto	u5211
  2228  1C72  2C74               	goto	u5210
  2229  1C73                     u5211:
  2230  1C73  2C6E               	goto	l144
  2231  1C74                     u5210:
  2232  1C74                     l3264:
  2233                           
  2234                           ;UART.c: 34:     TXREG = entrada[3];
  2235  1C74  3003               	movlw	3
  2236  1C75  00F2               	movwf	??_write
  2237  1C76  3000               	movlw	0
  2238  1C77  00F3               	movwf	??_write+1
  2239  1C78  0872               	movf	??_write,w
  2240  1C79  0770               	addwf	write@entrada,w
  2241  1C7A  0084               	movwf	4
  2242  1C7B  0873               	movf	??_write+1,w
  2243  1C7C  1803               	skipnc
  2244  1C7D  0A73               	incf	??_write+1,w
  2245  1C7E  0771               	addwf	write@entrada+1,w
  2246  1C7F  1283               	bcf	3,5	;RP0=0, select bank0
  2247  1C80  1303               	bcf	3,6	;RP1=0, select bank0
  2248  1C81  00FF               	movwf	btemp+1
  2249  1C82  120A  118A  2003  160A  158A  	fcall	stringtab
  2250  1C87  0099               	movwf	25	;volatile
  2251  1C88                     l147:	
  2252                           ;UART.c: 36:     }
  2253                           
  2254                           
  2255                           ;UART.c: 35:     while (TRMT == 0) {
  2256  1C88  1683               	bsf	3,5	;RP0=1, select bank1
  2257  1C89  1303               	bcf	3,6	;RP1=0, select bank1
  2258  1C8A  1C98               	btfss	24,1	;volatile
  2259  1C8B  2C8D               	goto	u5221
  2260  1C8C  2C8E               	goto	u5220
  2261  1C8D                     u5221:
  2262  1C8D  2C88               	goto	l147
  2263  1C8E                     u5220:
  2264  1C8E                     l3266:
  2265                           
  2266                           ;UART.c: 37:     TXREG = 0x20;
  2267  1C8E  3020               	movlw	32
  2268  1C8F  1283               	bcf	3,5	;RP0=0, select bank0
  2269  1C90  1303               	bcf	3,6	;RP1=0, select bank0
  2270  1C91  0099               	movwf	25	;volatile
  2271  1C92                     l150:	
  2272                           ;UART.c: 39:     }
  2273                           
  2274                           
  2275                           ;UART.c: 38:     while (TRMT == 0) {
  2276  1C92  1683               	bsf	3,5	;RP0=1, select bank1
  2277  1C93  1303               	bcf	3,6	;RP1=0, select bank1
  2278  1C94  1C98               	btfss	24,1	;volatile
  2279  1C95  2C97               	goto	u5231
  2280  1C96  2C98               	goto	u5230
  2281  1C97                     u5231:
  2282  1C97  2C92               	goto	l150
  2283  1C98                     u5230:
  2284  1C98                     l153:
  2285  1C98  0008               	return
  2286  1C99                     __end_of_write:
  2287                           
  2288                           	psect	text2
  2289  153B                     __ptext2:	
  2290 ;; *************** function _sprintf *****************
  2291 ;; Defined at:
  2292 ;;		line 505 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  2293 ;; Parameters:    Size  Location     Type
  2294 ;;  sp              2    0[BANK1 ] PTR unsigned char 
  2295 ;;		 -> l(20), c(20), s(20), 
  2296 ;;  f               1    2[BANK1 ] PTR const unsigned char 
  2297 ;;		 -> STR_7(7), STR_6(3), STR_5(7), 
  2298 ;; Auto vars:     Size  Location     Type
  2299 ;;  fval            4   31[BANK1 ] PTR const unsigned char 
  2300 ;;  val             4   25[BANK1 ] unsigned long 
  2301 ;;  tmpval          4   21[BANK1 ] struct .
  2302 ;;  prec            2   35[BANK1 ] int 
  2303 ;;  eexp            2   29[BANK1 ] int 
  2304 ;;  width           2   19[BANK1 ] int 
  2305 ;;  flag            2   17[BANK1 ] unsigned short 
  2306 ;;  cp              2    0        PTR const unsigned char 
  2307 ;;  len             2    0        unsigned int 
  2308 ;;  c               1   37[BANK1 ] unsigned char 
  2309 ;;  ap              1   16[BANK1 ] PTR void [1]
  2310 ;;		 -> ?_sprintf(2), 
  2311 ;;  d               1    0        unsigned char 
  2312 ;; Return value:  Size  Location     Type
  2313 ;;                  2    0[BANK1 ] int 
  2314 ;; Registers used:
  2315 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  2316 ;; Tracked objects:
  2317 ;;		On entry : 0/0
  2318 ;;		On exit  : 0/0
  2319 ;;		Unchanged: 0/0
  2320 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2321 ;;      Params:         0       0       7       0       0
  2322 ;;      Locals:         0       0      26       0       0
  2323 ;;      Temps:          0       0       5       0       0
  2324 ;;      Totals:         0       0      38       0       0
  2325 ;;Total ram usage:       38 bytes
  2326 ;; Hardware stack levels used:    1
  2327 ;; Hardware stack levels required when called:    3
  2328 ;; This function calls:
  2329 ;;		___awdiv
  2330 ;;		___fladd
  2331 ;;		___fleq
  2332 ;;		___flge
  2333 ;;		___flmul
  2334 ;;		___flneg
  2335 ;;		___flsub
  2336 ;;		___fltol
  2337 ;;		___lldiv
  2338 ;;		___llmod
  2339 ;;		___wmul
  2340 ;;		___xxtofl
  2341 ;;		__div_to_l_
  2342 ;;		__tdiv_to_l_
  2343 ;;		_fround
  2344 ;;		_isdigit
  2345 ;;		_scale
  2346 ;; This function is called by:
  2347 ;;		_main
  2348 ;; This function uses a non-reentrant model
  2349 ;;
  2350                           
  2351                           
  2352                           ;psect for function _sprintf
  2353  153B                     _sprintf:
  2354  153B                     l3268:	
  2355                           ;incstack = 0
  2356                           ; Regs used in _sprintf: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  2357                           
  2358                           
  2359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 505: sprintf(char
      +                           * sp, const char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\
      +                          doprnt.c: 506: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          07:  va_list ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 5
      +                          12:  char c;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 514: 
      +                           int width;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 517:  
      +                          int prec;
  2360  153B  30A3               	movlw	(low ((?_sprintf| 0+3)))& (0+255)
  2361  153C  1683               	bsf	3,5	;RP0=1, select bank1
  2362  153D  1303               	bcf	3,6	;RP1=0, select bank1
  2363  153E  00A7               	movwf	??_sprintf^(0+128)
  2364  153F  0827               	movf	??_sprintf^(0+128),w
  2365  1540  00B0               	movwf	sprintf@ap^(0+128)
  2366  1541                     L1:
  2367                           
  2368                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
  2369  1541  120A  118A  2FC8   	goto	l3554
  2370  1544                     l3270:
  2371                           
  2372                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 555:   if(c != '%
      +                          ')
  2373  1544  3025               	movlw	37
  2374  1545  0645               	xorwf	sprintf@c^(0+128),w
  2375  1546  1903               	btfsc	3,2
  2376  1547  2D49               	goto	u5241
  2377  1548  2D4A               	goto	u5240
  2378  1549                     u5241:
  2379  1549  2D5A               	goto	l3276
  2380  154A                     u5240:
  2381  154A                     l3272:
  2382                           
  2383                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    ((*sp++ = (c)));
  2384  154A  0845               	movf	sprintf@c^(0+128),w
  2385  154B  00A7               	movwf	??_sprintf^(0+128)
  2386  154C  0820               	movf	sprintf@sp^(0+128),w
  2387  154D  0084               	movwf	4
  2388  154E  1783               	bsf	3,7
  2389  154F  1C21               	btfss	(sprintf@sp+1)^(0+128),0
  2390  1550  1383               	bcf	3,7
  2391  1551  0827               	movf	??_sprintf^(0+128),w
  2392  1552  0080               	movwf	0
  2393  1553                     l3274:
  2394  1553  3001               	movlw	1
  2395  1554  07A0               	addwf	sprintf@sp^(0+128),f
  2396  1555  1803               	skipnc
  2397  1556  0AA1               	incf	(sprintf@sp+1)^(0+128),f
  2398  1557  3000               	movlw	0
  2399  1558  07A1               	addwf	(sprintf@sp+1)^(0+128),f
  2400                           
  2401                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
  2402  1559  2D41               	goto	L1
  2403  155A                     l3276:
  2404                           
  2405                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 563:   width = 0;
  2406  155A  01B3               	clrf	sprintf@width^(0+128)
  2407  155B  01B4               	clrf	(sprintf@width+1)^(0+128)
  2408                           
  2409                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 565:   flag = 0;
  2410  155C  01B1               	clrf	sprintf@flag^(0+128)
  2411  155D  01B2               	clrf	(sprintf@flag+1)^(0+128)
  2412  155E                     l3278:
  2413                           
  2414                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 614:   if(isdigit
      +                          ((unsigned)*f)) {
  2415  155E  0822               	movf	sprintf@f^(0+128),w
  2416  155F  0084               	movwf	4
  2417  1560  120A  118A  200D  160A  118A  	fcall	stringdir
  2418  1565  160A  158A  20C4  160A  118A  	fcall	_isdigit
  2419  156A  1C03               	btfss	3,0
  2420  156B  2D6D               	goto	u5251
  2421  156C  2D6E               	goto	u5250
  2422  156D                     u5251:
  2423  156D  2DAE               	goto	l3290
  2424  156E                     u5250:
  2425  156E                     l3280:
  2426                           
  2427                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 615:    width = 0
      +                          ;
  2428  156E  1683               	bsf	3,5	;RP0=1, select bank1
  2429  156F  1303               	bcf	3,6	;RP1=0, select bank1
  2430  1570  01B3               	clrf	sprintf@width^(0+128)
  2431  1571  01B4               	clrf	(sprintf@width+1)^(0+128)
  2432  1572                     l3282:
  2433                           
  2434                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 617:     width *=
      +                           10;
  2435  1572  300A               	movlw	10
  2436  1573  00F0               	movwf	___wmul@multiplier
  2437  1574  3000               	movlw	0
  2438  1575  00F1               	movwf	___wmul@multiplier+1
  2439  1576  1683               	bsf	3,5	;RP0=1, select bank1
  2440  1577  1303               	bcf	3,6	;RP1=0, select bank1
  2441  1578  0834               	movf	(sprintf@width+1)^(0+128),w
  2442  1579  00F3               	movwf	___wmul@multiplicand+1
  2443  157A  0833               	movf	sprintf@width^(0+128),w
  2444  157B  00F2               	movwf	___wmul@multiplicand
  2445  157C  160A  158A  2192  160A  118A  	fcall	___wmul
  2446  1581  0871               	movf	?___wmul+1,w
  2447  1582  1683               	bsf	3,5	;RP0=1, select bank1
  2448  1583  1303               	bcf	3,6	;RP1=0, select bank1
  2449  1584  00B4               	movwf	(sprintf@width+1)^(0+128)
  2450  1585  0870               	movf	?___wmul,w
  2451  1586  00B3               	movwf	sprintf@width^(0+128)
  2452  1587                     l3284:
  2453                           
  2454                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 618:        width
      +                           += *f++ - '0';
  2455  1587  0822               	movf	sprintf@f^(0+128),w
  2456  1588  0084               	movwf	4
  2457  1589  120A  118A  200D  160A  118A  	fcall	stringdir
  2458  158E  3ED0               	addlw	208
  2459  158F  00A7               	movwf	??_sprintf^(0+128)
  2460  1590  30FF               	movlw	255
  2461  1591  1803               	skipnc
  2462  1592  3000               	movlw	0
  2463  1593  00A8               	movwf	(??_sprintf^(0+128)+1)
  2464  1594  0827               	movf	??_sprintf^(0+128),w
  2465  1595  07B3               	addwf	sprintf@width^(0+128),f
  2466  1596  1803               	skipnc
  2467  1597  0AB4               	incf	(sprintf@width+1)^(0+128),f
  2468  1598  0828               	movf	(??_sprintf+1)^(0+128),w
  2469  1599  07B4               	addwf	(sprintf@width+1)^(0+128),f
  2470  159A                     l3286:
  2471  159A  3001               	movlw	1
  2472  159B  00A7               	movwf	??_sprintf^(0+128)
  2473  159C  0827               	movf	??_sprintf^(0+128),w
  2474  159D  07A2               	addwf	sprintf@f^(0+128),f
  2475  159E                     l3288:
  2476                           
  2477                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 619:    } while(i
      +                          sdigit((unsigned)*f));
  2478  159E  0822               	movf	sprintf@f^(0+128),w
  2479  159F  0084               	movwf	4
  2480  15A0  120A  118A  200D  160A  118A  	fcall	stringdir
  2481  15A5  160A  158A  20C4  160A  118A  	fcall	_isdigit
  2482  15AA  1803               	btfsc	3,0
  2483  15AB  2DAD               	goto	u5261
  2484  15AC  2DAE               	goto	u5260
  2485  15AD                     u5261:
  2486  15AD  2D72               	goto	l3282
  2487  15AE                     u5260:
  2488  15AE                     l3290:
  2489                           
  2490                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 628:   if(*f == '
      +                          .') {
  2491  15AE  1683               	bsf	3,5	;RP0=1, select bank1
  2492  15AF  1303               	bcf	3,6	;RP1=0, select bank1
  2493  15B0  0822               	movf	sprintf@f^(0+128),w
  2494  15B1  0084               	movwf	4
  2495  15B2  120A  118A  200D  160A  118A  	fcall	stringdir
  2496  15B7  3A2E               	xorlw	46
  2497  15B8  1D03               	skipz
  2498  15B9  2DBB               	goto	u5271
  2499  15BA  2DBC               	goto	u5270
  2500  15BB                     u5271:
  2501  15BB  2E01               	goto	l3306
  2502  15BC                     u5270:
  2503  15BC                     l3292:
  2504                           
  2505                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 629:    flag |= 0
      +                          x4000;
  2506  15BC  1732               	bsf	(sprintf@flag^(0+128)+1),6
  2507  15BD                     l3294:
  2508                           
  2509                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 630:    f++;
  2510  15BD  3001               	movlw	1
  2511  15BE  00A7               	movwf	??_sprintf^(0+128)
  2512  15BF  0827               	movf	??_sprintf^(0+128),w
  2513  15C0  07A2               	addwf	sprintf@f^(0+128),f
  2514  15C1                     l3296:
  2515                           
  2516                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 644:    {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 645:     prec = 0;
  2517  15C1  01C3               	clrf	sprintf@prec^(0+128)
  2518  15C2  01C4               	clrf	(sprintf@prec+1)^(0+128)
  2519                           
  2520                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2521  15C3  2DF0               	goto	l3304
  2522  15C4                     l3298:
  2523                           
  2524                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 647:      prec *=
      +                           10;
  2525  15C4  300A               	movlw	10
  2526  15C5  00F0               	movwf	___wmul@multiplier
  2527  15C6  3000               	movlw	0
  2528  15C7  00F1               	movwf	___wmul@multiplier+1
  2529  15C8  1683               	bsf	3,5	;RP0=1, select bank1
  2530  15C9  1303               	bcf	3,6	;RP1=0, select bank1
  2531  15CA  0844               	movf	(sprintf@prec+1)^(0+128),w
  2532  15CB  00F3               	movwf	___wmul@multiplicand+1
  2533  15CC  0843               	movf	sprintf@prec^(0+128),w
  2534  15CD  00F2               	movwf	___wmul@multiplicand
  2535  15CE  160A  158A  2192  160A  118A  	fcall	___wmul
  2536  15D3  0871               	movf	?___wmul+1,w
  2537  15D4  1683               	bsf	3,5	;RP0=1, select bank1
  2538  15D5  1303               	bcf	3,6	;RP1=0, select bank1
  2539  15D6  00C4               	movwf	(sprintf@prec+1)^(0+128)
  2540  15D7  0870               	movf	?___wmul,w
  2541  15D8  00C3               	movwf	sprintf@prec^(0+128)
  2542  15D9                     l3300:
  2543                           
  2544                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 648:         prec
      +                           += *f++ - '0';
  2545  15D9  0822               	movf	sprintf@f^(0+128),w
  2546  15DA  0084               	movwf	4
  2547  15DB  120A  118A  200D  160A  118A  	fcall	stringdir
  2548  15E0  3ED0               	addlw	208
  2549  15E1  00A7               	movwf	??_sprintf^(0+128)
  2550  15E2  30FF               	movlw	255
  2551  15E3  1803               	skipnc
  2552  15E4  3000               	movlw	0
  2553  15E5  00A8               	movwf	(??_sprintf^(0+128)+1)
  2554  15E6  0827               	movf	??_sprintf^(0+128),w
  2555  15E7  07C3               	addwf	sprintf@prec^(0+128),f
  2556  15E8  1803               	skipnc
  2557  15E9  0AC4               	incf	(sprintf@prec+1)^(0+128),f
  2558  15EA  0828               	movf	(??_sprintf+1)^(0+128),w
  2559  15EB  07C4               	addwf	(sprintf@prec+1)^(0+128),f
  2560  15EC                     l3302:
  2561  15EC  3001               	movlw	1
  2562  15ED  00A7               	movwf	??_sprintf^(0+128)
  2563  15EE  0827               	movf	??_sprintf^(0+128),w
  2564  15EF  07A2               	addwf	sprintf@f^(0+128),f
  2565  15F0                     l3304:
  2566                           
  2567                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 646:     while(is
      +                          digit((unsigned)*f)) {
  2568  15F0  0822               	movf	sprintf@f^(0+128),w
  2569  15F1  0084               	movwf	4
  2570  15F2  120A  118A  200D  160A  118A  	fcall	stringdir
  2571  15F7  160A  158A  20C4  160A  118A  	fcall	_isdigit
  2572  15FC  1803               	btfsc	3,0
  2573  15FD  2DFF               	goto	u5281
  2574  15FE  2E00               	goto	u5280
  2575  15FF                     u5281:
  2576  15FF  2DC4               	goto	l3298
  2577  1600                     u5280:
  2578  1600  2E07               	goto	l3312
  2579  1601                     l3306:
  2580                           
  2581                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 652:    prec = 0;
  2582  1601  01C3               	clrf	sprintf@prec^(0+128)
  2583  1602  01C4               	clrf	(sprintf@prec+1)^(0+128)
  2584  1603                     l3308:
  2585                           
  2586                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 654:    flag |= 0
      +                          x1000;
  2587  1603  1632               	bsf	(sprintf@flag^(0+128)+1),4
  2588  1604  2E07               	goto	l3312
  2589  1605                     l321:	
  2590                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 688:   case 'f':
  2591                           
  2592                           
  2593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 689:    flag |= 0
      +                          x400;
  2594  1605  1532               	bsf	(sprintf@flag^(0+128)+1),2
  2595                           
  2596                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 690:    break;
  2597  1606  2E29               	goto	l3314
  2598  1607                     l3312:
  2599  1607  3001               	movlw	1
  2600  1608  1683               	bsf	3,5	;RP0=1, select bank1
  2601  1609  1303               	bcf	3,6	;RP1=0, select bank1
  2602  160A  07A2               	addwf	sprintf@f^(0+128),f
  2603  160B  30FF               	movlw	-1
  2604  160C  0722               	addwf	sprintf@f^(0+128),w
  2605  160D  0084               	movwf	4
  2606  160E  120A  118A  200D  160A  118A  	fcall	stringdir
  2607  1613  00C5               	movwf	sprintf@c^(0+128)
  2608  1614  00A7               	movwf	??_sprintf^(0+128)
  2609  1615  01A8               	clrf	(??_sprintf^(0+128)+1)
  2610                           
  2611                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2612                           ; Switch size 1, requested type "simple"
  2613                           ; Number of cases is 1, Range of values is 0 to 0
  2614                           ; switch strategies available:
  2615                           ; Name         Instructions Cycles
  2616                           ; simple_byte            4     3 (average)
  2617                           ; direct_byte           11     8 (fixed)
  2618                           ; jumptable            260     6 (fixed)
  2619                           ;	Chosen strategy is simple_byte
  2620  1616  0828               	movf	(??_sprintf+1)^(0+128),w
  2621  1617  3A00               	xorlw	0	; case 0
  2622  1618  1903               	skipnz
  2623  1619  2E1B               	goto	l3678
  2624  161A  2D41               	goto	L1
  2625  161B                     l3678:
  2626                           
  2627                           ; Switch size 1, requested type "simple"
  2628                           ; Number of cases is 4, Range of values is 0 to 105
  2629                           ; switch strategies available:
  2630                           ; Name         Instructions Cycles
  2631                           ; simple_byte           13     7 (average)
  2632                           ; jumptable            260     6 (fixed)
  2633                           ;	Chosen strategy is simple_byte
  2634  161B  0827               	movf	??_sprintf^(0+128),w
  2635  161C  3A00               	xorlw	0	; case 0
  2636  161D  1903               	skipnz
  2637  161E  2FFD               	goto	L3
  2638  161F  3A64               	xorlw	100	; case 100
  2639  1620  1903               	skipnz
  2640  1621  2E29               	goto	l3314
  2641  1622  3A02               	xorlw	2	; case 102
  2642  1623  1903               	skipnz
  2643  1624  2E05               	goto	l321
  2644  1625  3A0F               	xorlw	15	; case 105
  2645  1626  1903               	skipnz
  2646  1627  2E29               	goto	l3314
  2647  1628  2D41               	goto	L1
  2648  1629                     l3314:
  2649                           
  2650                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 851:   if(flag & 
      +                          (0x700)) {
  2651  1629  3000               	movlw	0
  2652  162A  0531               	andwf	sprintf@flag^(0+128),w
  2653  162B  00A7               	movwf	??_sprintf^(0+128)
  2654  162C  3007               	movlw	7
  2655  162D  0532               	andwf	(sprintf@flag+1)^(0+128),w
  2656  162E  00A8               	movwf	(??_sprintf+1)^(0+128)
  2657  162F  0827               	movf	??_sprintf^(0+128),w
  2658  1630  0428               	iorwf	(??_sprintf^(0+128)+1),w
  2659  1631  1903               	btfsc	3,2
  2660  1632  2E34               	goto	u5291
  2661  1633  2E37               	goto	u5290
  2662  1634                     u5291:
  2663  1634  120A  118A  2E21   	goto	l3476
  2664  1637                     u5290:
  2665  1637                     l3316:
  2666                           
  2667                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 853:    if(flag &
      +                           0x1000)
  2668  1637  1E32               	btfss	(sprintf@flag+1)^(0+128),4
  2669  1638  2E3A               	goto	u5301
  2670  1639  2E3B               	goto	u5300
  2671  163A                     u5301:
  2672  163A  2E3F               	goto	l3320
  2673  163B                     u5300:
  2674  163B                     l3318:
  2675                           
  2676                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 855:     prec = 6
      +                          ;
  2677  163B  3006               	movlw	6
  2678  163C  00C3               	movwf	sprintf@prec^(0+128)
  2679  163D  3000               	movlw	0
  2680  163E  00C4               	movwf	(sprintf@prec^(0+128)+1)
  2681  163F                     l3320:
  2682                           
  2683                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 856:    fval = (*
      +                          (double *)__va_arg((*(double **)ap), (double)0));
  2684  163F  0830               	movf	sprintf@ap^(0+128),w
  2685  1640  0084               	movwf	4
  2686  1641  1383               	bcf	3,7	;select IRP bank0
  2687  1642  0800               	movf	0,w
  2688  1643  00BF               	movwf	sprintf@fval^(0+128)
  2689  1644  0A84               	incf	4,f
  2690  1645  0800               	movf	0,w
  2691  1646  00C0               	movwf	(sprintf@fval+1)^(0+128)
  2692  1647  0A84               	incf	4,f
  2693  1648  0800               	movf	0,w
  2694  1649  00C1               	movwf	(sprintf@fval+2)^(0+128)
  2695  164A  0A84               	incf	4,f
  2696  164B  0800               	movf	0,w
  2697  164C  00C2               	movwf	(sprintf@fval+3)^(0+128)
  2698  164D                     l3322:
  2699  164D  3004               	movlw	4
  2700  164E  00A7               	movwf	??_sprintf^(0+128)
  2701  164F  0827               	movf	??_sprintf^(0+128),w
  2702  1650  07B0               	addwf	sprintf@ap^(0+128),f
  2703  1651                     l3324:
  2704                           
  2705                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 857:    if(fval <
      +                           0.0) {
  2706  1651  0842               	movf	(sprintf@fval+3)^(0+128),w
  2707  1652  00F3               	movwf	___flge@ff1+3
  2708  1653  0841               	movf	(sprintf@fval+2)^(0+128),w
  2709  1654  00F2               	movwf	___flge@ff1+2
  2710  1655  0840               	movf	(sprintf@fval+1)^(0+128),w
  2711  1656  00F1               	movwf	___flge@ff1+1
  2712  1657  083F               	movf	sprintf@fval^(0+128),w
  2713  1658  00F0               	movwf	___flge@ff1
  2714  1659  3000               	movlw	0
  2715  165A  00F7               	movwf	___flge@ff2+3
  2716  165B  3000               	movlw	0
  2717  165C  00F6               	movwf	___flge@ff2+2
  2718  165D  3000               	movlw	0
  2719  165E  00F5               	movwf	___flge@ff2+1
  2720  165F  3000               	movlw	0
  2721  1660  00F4               	movwf	___flge@ff2
  2722  1661  160A  158A  2499  160A  118A  	fcall	___flge
  2723  1666  1803               	btfsc	3,0
  2724  1667  2E69               	goto	u5311
  2725  1668  2E6A               	goto	u5310
  2726  1669                     u5311:
  2727  1669  2E87               	goto	l3330
  2728  166A                     u5310:
  2729  166A                     l3326:
  2730                           
  2731                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 858:     fval = -
      +                          fval;
  2732  166A  1683               	bsf	3,5	;RP0=1, select bank1
  2733  166B  1303               	bcf	3,6	;RP1=0, select bank1
  2734  166C  0842               	movf	(sprintf@fval+3)^(0+128),w
  2735  166D  00F3               	movwf	___flneg@f1+3
  2736  166E  0841               	movf	(sprintf@fval+2)^(0+128),w
  2737  166F  00F2               	movwf	___flneg@f1+2
  2738  1670  0840               	movf	(sprintf@fval+1)^(0+128),w
  2739  1671  00F1               	movwf	___flneg@f1+1
  2740  1672  083F               	movf	sprintf@fval^(0+128),w
  2741  1673  00F0               	movwf	___flneg@f1
  2742  1674  160A  158A  20AC  160A  118A  	fcall	___flneg
  2743  1679  0873               	movf	?___flneg+3,w
  2744  167A  1683               	bsf	3,5	;RP0=1, select bank1
  2745  167B  1303               	bcf	3,6	;RP1=0, select bank1
  2746  167C  00C2               	movwf	(sprintf@fval+3)^(0+128)
  2747  167D  0872               	movf	?___flneg+2,w
  2748  167E  00C1               	movwf	(sprintf@fval+2)^(0+128)
  2749  167F  0871               	movf	?___flneg+1,w
  2750  1680  00C0               	movwf	(sprintf@fval+1)^(0+128)
  2751  1681  0870               	movf	?___flneg,w
  2752  1682  00BF               	movwf	sprintf@fval^(0+128)
  2753  1683                     l3328:
  2754                           
  2755                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 859:     flag |= 
      +                          0x03;
  2756  1683  3003               	movlw	3
  2757  1684  04B1               	iorwf	sprintf@flag^(0+128),f
  2758  1685  3000               	movlw	0
  2759  1686  04B2               	iorwf	(sprintf@flag+1)^(0+128),f
  2760  1687                     l3330:
  2761                           
  2762                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 861:    eexp = 0;
  2763  1687  1683               	bsf	3,5	;RP0=1, select bank1
  2764  1688  1303               	bcf	3,6	;RP1=0, select bank1
  2765  1689  01BD               	clrf	sprintf@eexp^(0+128)
  2766  168A  01BE               	clrf	(sprintf@eexp+1)^(0+128)
  2767  168B                     l3332:
  2768                           
  2769                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 862:    if( fval!
      +                          =0) {
  2770  168B  0842               	movf	(sprintf@fval+3)^(0+128),w
  2771  168C  00F3               	movwf	___fleq@ff1+3
  2772  168D  0841               	movf	(sprintf@fval+2)^(0+128),w
  2773  168E  00F2               	movwf	___fleq@ff1+2
  2774  168F  0840               	movf	(sprintf@fval+1)^(0+128),w
  2775  1690  00F1               	movwf	___fleq@ff1+1
  2776  1691  083F               	movf	sprintf@fval^(0+128),w
  2777  1692  00F0               	movwf	___fleq@ff1
  2778  1693  3000               	movlw	0
  2779  1694  00F7               	movwf	___fleq@ff2+3
  2780  1695  3000               	movlw	0
  2781  1696  00F6               	movwf	___fleq@ff2+2
  2782  1697  3000               	movlw	0
  2783  1698  00F5               	movwf	___fleq@ff2+1
  2784  1699  3000               	movlw	0
  2785  169A  00F4               	movwf	___fleq@ff2
  2786  169B  160A  158A  22B8  160A  118A  	fcall	___fleq
  2787  16A0  1803               	btfsc	3,0
  2788  16A1  2EA3               	goto	u5321
  2789  16A2  2EA4               	goto	u5320
  2790  16A3                     u5321:
  2791  16A3  2F94               	goto	l3358
  2792  16A4                     u5320:
  2793  16A4                     l3334:
  2794                           
  2795                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 863:     (void)(*
      +                          (&eexp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) - 126);
  2796  16A4  1003               	clrc
  2797  16A5  1683               	bsf	3,5	;RP0=1, select bank1
  2798  16A6  1303               	bcf	3,6	;RP1=0, select bank1
  2799  16A7  0D41               	rlf	(sprintf@fval+2)^(0+128),w
  2800  16A8  0D42               	rlf	(sprintf@fval+3)^(0+128),w
  2801  16A9  3E82               	addlw	130
  2802  16AA  00BD               	movwf	sprintf@eexp^(0+128)
  2803  16AB  30FF               	movlw	255
  2804  16AC  1803               	skipnc
  2805  16AD  3000               	movlw	0
  2806  16AE  00BE               	movwf	(sprintf@eexp^(0+128)+1)
  2807  16AF                     l3336:
  2808                           
  2809                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 864:     eexp--;
  2810  16AF  30FF               	movlw	255
  2811  16B0  07BD               	addwf	sprintf@eexp^(0+128),f
  2812  16B1  1803               	skipnc
  2813  16B2  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2814  16B3  30FF               	movlw	255
  2815  16B4  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2816  16B5                     l3338:
  2817                           
  2818                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 865:     eexp *= 
      +                          3;
  2819  16B5  3003               	movlw	3
  2820  16B6  00F0               	movwf	___wmul@multiplier
  2821  16B7  3000               	movlw	0
  2822  16B8  00F1               	movwf	___wmul@multiplier+1
  2823  16B9  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2824  16BA  00F3               	movwf	___wmul@multiplicand+1
  2825  16BB  083D               	movf	sprintf@eexp^(0+128),w
  2826  16BC  00F2               	movwf	___wmul@multiplicand
  2827  16BD  160A  158A  2192  160A  118A  	fcall	___wmul
  2828  16C2  0871               	movf	?___wmul+1,w
  2829  16C3  1683               	bsf	3,5	;RP0=1, select bank1
  2830  16C4  1303               	bcf	3,6	;RP1=0, select bank1
  2831  16C5  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  2832  16C6  0870               	movf	?___wmul,w
  2833  16C7  00BD               	movwf	sprintf@eexp^(0+128)
  2834  16C8                     l3340:
  2835                           
  2836                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 866:     eexp /= 
      +                          10;
  2837  16C8  300A               	movlw	10
  2838  16C9  00F7               	movwf	___awdiv@divisor
  2839  16CA  3000               	movlw	0
  2840  16CB  00F8               	movwf	___awdiv@divisor+1
  2841  16CC  083E               	movf	(sprintf@eexp+1)^(0+128),w
  2842  16CD  00FA               	movwf	___awdiv@dividend+1
  2843  16CE  083D               	movf	sprintf@eexp^(0+128),w
  2844  16CF  00F9               	movwf	___awdiv@dividend
  2845  16D0  160A  158A  23C5  160A  118A  	fcall	___awdiv
  2846  16D5  0878               	movf	?___awdiv+1,w
  2847  16D6  1683               	bsf	3,5	;RP0=1, select bank1
  2848  16D7  1303               	bcf	3,6	;RP1=0, select bank1
  2849  16D8  00BE               	movwf	(sprintf@eexp+1)^(0+128)
  2850  16D9  0877               	movf	?___awdiv,w
  2851  16DA  00BD               	movwf	sprintf@eexp^(0+128)
  2852  16DB                     l3342:
  2853                           
  2854                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 867:     if(eexp 
      +                          < 0)
  2855  16DB  1FBE               	btfss	(sprintf@eexp+1)^(0+128),7
  2856  16DC  2EDE               	goto	u5331
  2857  16DD  2EDF               	goto	u5330
  2858  16DE                     u5331:
  2859  16DE  2EE5               	goto	l3346
  2860  16DF                     u5330:
  2861  16DF                     l3344:
  2862                           
  2863                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 868:      eexp--;
  2864  16DF  30FF               	movlw	255
  2865  16E0  07BD               	addwf	sprintf@eexp^(0+128),f
  2866  16E1  1803               	skipnc
  2867  16E2  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  2868  16E3  30FF               	movlw	255
  2869  16E4  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  2870  16E5                     l3346:
  2871                           
  2872                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 872:     tmpval.i
      +                          nteg = scale(-eexp);
  2873  16E5  033D               	decf	sprintf@eexp^(0+128),w
  2874  16E6  3AFF               	xorlw	255
  2875  16E7  120A  158A  2140  160A  118A  	fcall	_scale
  2876  16EC  1283               	bcf	3,5	;RP0=0, select bank0
  2877  16ED  1303               	bcf	3,6	;RP1=0, select bank0
  2878  16EE  0841               	movf	?_scale+3,w
  2879  16EF  1683               	bsf	3,5	;RP0=1, select bank1
  2880  16F0  1303               	bcf	3,6	;RP1=0, select bank1
  2881  16F1  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  2882  16F2  1283               	bcf	3,5	;RP0=0, select bank0
  2883  16F3  1303               	bcf	3,6	;RP1=0, select bank0
  2884  16F4  0840               	movf	?_scale+2,w
  2885  16F5  1683               	bsf	3,5	;RP0=1, select bank1
  2886  16F6  1303               	bcf	3,6	;RP1=0, select bank1
  2887  16F7  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  2888  16F8  1283               	bcf	3,5	;RP0=0, select bank0
  2889  16F9  1303               	bcf	3,6	;RP1=0, select bank0
  2890  16FA  083F               	movf	?_scale+1,w
  2891  16FB  1683               	bsf	3,5	;RP0=1, select bank1
  2892  16FC  1303               	bcf	3,6	;RP1=0, select bank1
  2893  16FD  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  2894  16FE  1283               	bcf	3,5	;RP0=0, select bank0
  2895  16FF  1303               	bcf	3,6	;RP1=0, select bank0
  2896  1700  083E               	movf	?_scale,w
  2897  1701  1683               	bsf	3,5	;RP0=1, select bank1
  2898  1702  1303               	bcf	3,6	;RP1=0, select bank1
  2899  1703  00B5               	movwf	sprintf@tmpval^(0+128)
  2900  1704                     l3348:
  2901                           
  2902                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 873:     tmpval.i
      +                          nteg *= fval;
  2903  1704  0842               	movf	(sprintf@fval+3)^(0+128),w
  2904  1705  1283               	bcf	3,5	;RP0=0, select bank0
  2905  1706  1303               	bcf	3,6	;RP1=0, select bank0
  2906  1707  00A7               	movwf	___flmul@b+3
  2907  1708  1683               	bsf	3,5	;RP0=1, select bank1
  2908  1709  1303               	bcf	3,6	;RP1=0, select bank1
  2909  170A  0841               	movf	(sprintf@fval+2)^(0+128),w
  2910  170B  1283               	bcf	3,5	;RP0=0, select bank0
  2911  170C  1303               	bcf	3,6	;RP1=0, select bank0
  2912  170D  00A6               	movwf	___flmul@b+2
  2913  170E  1683               	bsf	3,5	;RP0=1, select bank1
  2914  170F  1303               	bcf	3,6	;RP1=0, select bank1
  2915  1710  0840               	movf	(sprintf@fval+1)^(0+128),w
  2916  1711  1283               	bcf	3,5	;RP0=0, select bank0
  2917  1712  1303               	bcf	3,6	;RP1=0, select bank0
  2918  1713  00A5               	movwf	___flmul@b+1
  2919  1714  1683               	bsf	3,5	;RP0=1, select bank1
  2920  1715  1303               	bcf	3,6	;RP1=0, select bank1
  2921  1716  083F               	movf	sprintf@fval^(0+128),w
  2922  1717  1283               	bcf	3,5	;RP0=0, select bank0
  2923  1718  1303               	bcf	3,6	;RP1=0, select bank0
  2924  1719  00A4               	movwf	___flmul@b
  2925  171A  1683               	bsf	3,5	;RP0=1, select bank1
  2926  171B  1303               	bcf	3,6	;RP1=0, select bank1
  2927  171C  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  2928  171D  1283               	bcf	3,5	;RP0=0, select bank0
  2929  171E  1303               	bcf	3,6	;RP1=0, select bank0
  2930  171F  00AB               	movwf	___flmul@a+3
  2931  1720  1683               	bsf	3,5	;RP0=1, select bank1
  2932  1721  1303               	bcf	3,6	;RP1=0, select bank1
  2933  1722  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  2934  1723  1283               	bcf	3,5	;RP0=0, select bank0
  2935  1724  1303               	bcf	3,6	;RP1=0, select bank0
  2936  1725  00AA               	movwf	___flmul@a+2
  2937  1726  1683               	bsf	3,5	;RP0=1, select bank1
  2938  1727  1303               	bcf	3,6	;RP1=0, select bank1
  2939  1728  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  2940  1729  1283               	bcf	3,5	;RP0=0, select bank0
  2941  172A  1303               	bcf	3,6	;RP1=0, select bank0
  2942  172B  00A9               	movwf	___flmul@a+1
  2943  172C  1683               	bsf	3,5	;RP0=1, select bank1
  2944  172D  1303               	bcf	3,6	;RP1=0, select bank1
  2945  172E  0835               	movf	sprintf@tmpval^(0+128),w
  2946  172F  1283               	bcf	3,5	;RP0=0, select bank0
  2947  1730  1303               	bcf	3,6	;RP1=0, select bank0
  2948  1731  00A8               	movwf	___flmul@a
  2949  1732  120A  158A  249F  160A  118A  	fcall	___flmul
  2950  1737  1283               	bcf	3,5	;RP0=0, select bank0
  2951  1738  1303               	bcf	3,6	;RP1=0, select bank0
  2952  1739  0827               	movf	?___flmul+3,w
  2953  173A  1683               	bsf	3,5	;RP0=1, select bank1
  2954  173B  1303               	bcf	3,6	;RP1=0, select bank1
  2955  173C  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
  2956  173D  1283               	bcf	3,5	;RP0=0, select bank0
  2957  173E  1303               	bcf	3,6	;RP1=0, select bank0
  2958  173F  0826               	movf	?___flmul+2,w
  2959  1740  1683               	bsf	3,5	;RP0=1, select bank1
  2960  1741  1303               	bcf	3,6	;RP1=0, select bank1
  2961  1742  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
  2962  1743  1283               	bcf	3,5	;RP0=0, select bank0
  2963  1744  1303               	bcf	3,6	;RP1=0, select bank0
  2964  1745  0825               	movf	?___flmul+1,w
  2965  1746  1683               	bsf	3,5	;RP0=1, select bank1
  2966  1747  1303               	bcf	3,6	;RP1=0, select bank1
  2967  1748  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
  2968  1749  1283               	bcf	3,5	;RP0=0, select bank0
  2969  174A  1303               	bcf	3,6	;RP1=0, select bank0
  2970  174B  0824               	movf	?___flmul,w
  2971  174C  1683               	bsf	3,5	;RP0=1, select bank1
  2972  174D  1303               	bcf	3,6	;RP1=0, select bank1
  2973  174E  00B5               	movwf	sprintf@tmpval^(0+128)
  2974  174F                     l3350:
  2975                           
  2976                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 874:     if(tmpva
      +                          l.integ < 1.0)
  2977  174F  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  2978  1750  00F3               	movwf	___flge@ff1+3
  2979  1751  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  2980  1752  00F2               	movwf	___flge@ff1+2
  2981  1753  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  2982  1754  00F1               	movwf	___flge@ff1+1
  2983  1755  0835               	movf	sprintf@tmpval^(0+128),w
  2984  1756  00F0               	movwf	___flge@ff1
  2985  1757  303F               	movlw	63
  2986  1758  00F7               	movwf	___flge@ff2+3
  2987  1759  3080               	movlw	128
  2988  175A  00F6               	movwf	___flge@ff2+2
  2989  175B  3000               	movlw	0
  2990  175C  00F5               	movwf	___flge@ff2+1
  2991  175D  3000               	movlw	0
  2992  175E  00F4               	movwf	___flge@ff2
  2993  175F  160A  158A  2499  160A  118A  	fcall	___flge
  2994  1764  1803               	btfsc	3,0
  2995  1765  2F67               	goto	u5341
  2996  1766  2F68               	goto	u5340
  2997  1767                     u5341:
  2998  1767  2F71               	goto	l3354
  2999  1768                     u5340:
  3000  1768                     l3352:
  3001                           
  3002                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 875:      eexp--;
  3003  1768  30FF               	movlw	255
  3004  1769  1683               	bsf	3,5	;RP0=1, select bank1
  3005  176A  1303               	bcf	3,6	;RP1=0, select bank1
  3006  176B  07BD               	addwf	sprintf@eexp^(0+128),f
  3007  176C  1803               	skipnc
  3008  176D  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  3009  176E  30FF               	movlw	255
  3010  176F  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  3011  1770  2F94               	goto	l3358
  3012  1771                     l3354:
  3013  1771  1683               	bsf	3,5	;RP0=1, select bank1
  3014  1772  1303               	bcf	3,6	;RP1=0, select bank1
  3015  1773  0838               	movf	(sprintf@tmpval+3)^(0+128),w
  3016  1774  00F3               	movwf	___flge@ff1+3
  3017  1775  0837               	movf	(sprintf@tmpval+2)^(0+128),w
  3018  1776  00F2               	movwf	___flge@ff1+2
  3019  1777  0836               	movf	(sprintf@tmpval+1)^(0+128),w
  3020  1778  00F1               	movwf	___flge@ff1+1
  3021  1779  0835               	movf	sprintf@tmpval^(0+128),w
  3022  177A  00F0               	movwf	___flge@ff1
  3023  177B  3041               	movlw	65
  3024  177C  00F7               	movwf	___flge@ff2+3
  3025  177D  3020               	movlw	32
  3026  177E  00F6               	movwf	___flge@ff2+2
  3027  177F  3000               	movlw	0
  3028  1780  00F5               	movwf	___flge@ff2+1
  3029  1781  3000               	movlw	0
  3030  1782  00F4               	movwf	___flge@ff2
  3031  1783  160A  158A  2499  160A  118A  	fcall	___flge
  3032  1788  1C03               	btfss	3,0
  3033  1789  2F8B               	goto	u5351
  3034  178A  2F8C               	goto	u5350
  3035  178B                     u5351:
  3036  178B  2F94               	goto	l3358
  3037  178C                     u5350:
  3038  178C                     l3356:
  3039                           
  3040                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 877:      eexp++;
  3041  178C  3001               	movlw	1
  3042  178D  1683               	bsf	3,5	;RP0=1, select bank1
  3043  178E  1303               	bcf	3,6	;RP1=0, select bank1
  3044  178F  07BD               	addwf	sprintf@eexp^(0+128),f
  3045  1790  1803               	skipnc
  3046  1791  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
  3047  1792  3000               	movlw	0
  3048  1793  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
  3049  1794                     l3358:
  3050                           
  3051                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1138:      if(pre
      +                          c <= 12)
  3052  1794  1683               	bsf	3,5	;RP0=1, select bank1
  3053  1795  1303               	bcf	3,6	;RP1=0, select bank1
  3054  1796  0844               	movf	(sprintf@prec+1)^(0+128),w
  3055  1797  3A80               	xorlw	128
  3056  1798  00FF               	movwf	btemp+1
  3057  1799  3080               	movlw	128
  3058  179A  027F               	subwf	btemp+1,w
  3059  179B  1D03               	skipz
  3060  179C  2F9F               	goto	u5365
  3061  179D  300D               	movlw	13
  3062  179E  0243               	subwf	sprintf@prec^(0+128),w
  3063  179F                     u5365:
  3064  179F  1803               	skipnc
  3065  17A0  2FA2               	goto	u5361
  3066  17A1  2FA3               	goto	u5360
  3067  17A2                     u5361:
  3068  17A2  2FEA               	goto	l3362
  3069  17A3                     u5360:
  3070  17A3                     l3360:
  3071                           
  3072                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1139:       fval 
      +                          += fround((unsigned int)prec);
  3073  17A3  1683               	bsf	3,5	;RP0=1, select bank1
  3074  17A4  1303               	bcf	3,6	;RP1=0, select bank1
  3075  17A5  0843               	movf	sprintf@prec^(0+128),w
  3076  17A6  160A  158A  25F5  160A  118A  	fcall	_fround
  3077  17AB  1283               	bcf	3,5	;RP0=0, select bank0
  3078  17AC  1303               	bcf	3,6	;RP1=0, select bank0
  3079  17AD  0841               	movf	?_fround+3,w
  3080  17AE  00D5               	movwf	___fladd@b+3
  3081  17AF  0840               	movf	?_fround+2,w
  3082  17B0  00D4               	movwf	___fladd@b+2
  3083  17B1  083F               	movf	?_fround+1,w
  3084  17B2  00D3               	movwf	___fladd@b+1
  3085  17B3  083E               	movf	?_fround,w
  3086  17B4  00D2               	movwf	___fladd@b
  3087  17B5  1683               	bsf	3,5	;RP0=1, select bank1
  3088  17B6  1303               	bcf	3,6	;RP1=0, select bank1
  3089  17B7  0842               	movf	(sprintf@fval+3)^(0+128),w
  3090  17B8  1283               	bcf	3,5	;RP0=0, select bank0
  3091  17B9  1303               	bcf	3,6	;RP1=0, select bank0
  3092  17BA  00D9               	movwf	___fladd@a+3
  3093  17BB  1683               	bsf	3,5	;RP0=1, select bank1
  3094  17BC  1303               	bcf	3,6	;RP1=0, select bank1
  3095  17BD  0841               	movf	(sprintf@fval+2)^(0+128),w
  3096  17BE  1283               	bcf	3,5	;RP0=0, select bank0
  3097  17BF  1303               	bcf	3,6	;RP1=0, select bank0
  3098  17C0  00D8               	movwf	___fladd@a+2
  3099  17C1  1683               	bsf	3,5	;RP0=1, select bank1
  3100  17C2  1303               	bcf	3,6	;RP1=0, select bank1
  3101  17C3  0840               	movf	(sprintf@fval+1)^(0+128),w
  3102  17C4  1283               	bcf	3,5	;RP0=0, select bank0
  3103  17C5  1303               	bcf	3,6	;RP1=0, select bank0
  3104  17C6  00D7               	movwf	___fladd@a+1
  3105  17C7  1683               	bsf	3,5	;RP0=1, select bank1
  3106  17C8  1303               	bcf	3,6	;RP1=0, select bank1
  3107  17C9  083F               	movf	sprintf@fval^(0+128),w
  3108  17CA  1283               	bcf	3,5	;RP0=0, select bank0
  3109  17CB  1303               	bcf	3,6	;RP1=0, select bank0
  3110  17CC  00D6               	movwf	___fladd@a
  3111  17CD  160A  118A  22B3  160A  118A  	fcall	___fladd
  3112  17D2  1283               	bcf	3,5	;RP0=0, select bank0
  3113  17D3  1303               	bcf	3,6	;RP1=0, select bank0
  3114  17D4  0855               	movf	?___fladd+3,w
  3115  17D5  1683               	bsf	3,5	;RP0=1, select bank1
  3116  17D6  1303               	bcf	3,6	;RP1=0, select bank1
  3117  17D7  00C2               	movwf	(sprintf@fval+3)^(0+128)
  3118  17D8  1283               	bcf	3,5	;RP0=0, select bank0
  3119  17D9  1303               	bcf	3,6	;RP1=0, select bank0
  3120  17DA  0854               	movf	?___fladd+2,w
  3121  17DB  1683               	bsf	3,5	;RP0=1, select bank1
  3122  17DC  1303               	bcf	3,6	;RP1=0, select bank1
  3123  17DD  00C1               	movwf	(sprintf@fval+2)^(0+128)
  3124  17DE  1283               	bcf	3,5	;RP0=0, select bank0
  3125  17DF  1303               	bcf	3,6	;RP1=0, select bank0
  3126  17E0  0853               	movf	?___fladd+1,w
  3127  17E1  1683               	bsf	3,5	;RP0=1, select bank1
  3128  17E2  1303               	bcf	3,6	;RP1=0, select bank1
  3129  17E3  00C0               	movwf	(sprintf@fval+1)^(0+128)
  3130  17E4  1283               	bcf	3,5	;RP0=0, select bank0
  3131  17E5  1303               	bcf	3,6	;RP1=0, select bank0
  3132  17E6  0852               	movf	?___fladd,w
  3133  17E7  1683               	bsf	3,5	;RP0=1, select bank1
  3134  17E8  1303               	bcf	3,6	;RP1=0, select bank1
  3135  17E9  00BF               	movwf	sprintf@fval^(0+128)
  3136  17EA                     l3362:
  3137                           
  3138                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1142:     if((eex
      +                          p > 9)||(fval != 0 && (unsigned long)fval == 0 && eexp > 1)) {
  3139  17EA  1683               	bsf	3,5	;RP0=1, select bank1
  3140  17EB  1303               	bcf	3,6	;RP1=0, select bank1
  3141  17EC  083E               	movf	(sprintf@eexp+1)^(0+128),w
  3142  17ED  3A80               	xorlw	128
  3143  17EE  00FF               	movwf	btemp+1
  3144  17EF  3080               	movlw	128
  3145  17F0  027F               	subwf	btemp+1,w
  3146  17F1  1D03               	skipz
  3147  17F2  2FF5               	goto	u5375
  3148  17F3  300A               	movlw	10
  3149  17F4  023D               	subwf	sprintf@eexp^(0+128),w
  3150  17F5                     u5375:
  3151  17F5  1803               	skipnc
  3152  17F6  2FFA               	goto	u5371
  3153  17F7  120A  118A  29BA   	goto	u5370
  3154  17FA                     u5371:
  3155  17FA  120A  118A  2A0B   	goto	l3370
  3156  17FD                     L3:
  3157  17FD                     L2:
  3158  17FD  120A  118A  2FDC   	ljmp	l3556
  3159                           
  3160                           	psect	text3
  3161  0940                     __ptext3:	
  3162 ;; *************** function _scale *****************
  3163 ;; Defined at:
  3164 ;;		line 433 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  3165 ;; Parameters:    Size  Location     Type
  3166 ;;  scl             1    wreg     char 
  3167 ;; Auto vars:     Size  Location     Type
  3168 ;;  scl             1   48[BANK0 ] char 
  3169 ;; Return value:  Size  Location     Type
  3170 ;;                  4   30[BANK0 ] char 
  3171 ;; Registers used:
  3172 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3173 ;; Tracked objects:
  3174 ;;		On entry : 0/0
  3175 ;;		On exit  : 0/0
  3176 ;;		Unchanged: 0/0
  3177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3178 ;;      Params:         0       4       0       0       0
  3179 ;;      Locals:         0       5       0       0       0
  3180 ;;      Temps:          0      10       0       0       0
  3181 ;;      Totals:         0      19       0       0       0
  3182 ;;Total ram usage:       19 bytes
  3183 ;; Hardware stack levels used:    1
  3184 ;; Hardware stack levels required when called:    2
  3185 ;; This function calls:
  3186 ;;		___awdiv
  3187 ;;		___awmod
  3188 ;;		___flmul
  3189 ;; This function is called by:
  3190 ;;		_sprintf
  3191 ;; This function uses a non-reentrant model
  3192 ;;
  3193                           
  3194                           
  3195                           ;psect for function _scale
  3196  0940                     _scale:
  3197                           
  3198                           ;incstack = 0
  3199                           ; Regs used in _scale: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3200                           ;scale@scl stored from wreg
  3201  0940  1283               	bcf	3,5	;RP0=0, select bank0
  3202  0941  1303               	bcf	3,6	;RP1=0, select bank0
  3203  0942  00D0               	movwf	scale@scl
  3204  0943                     l2858:
  3205                           
  3206                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 433: scale(signed
      +                           char scl);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 434: {;
      +                          C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 436:  if(scl < 0) 
      +                          {
  3207  0943  1FD0               	btfss	scale@scl,7
  3208  0944  2946               	goto	u4161
  3209  0945  2947               	goto	u4160
  3210  0946                     u4161:
  3211  0946  2AF4               	goto	l2880
  3212  0947                     u4160:
  3213  0947                     l2860:
  3214                           
  3215                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 437:   scl = -scl
      +                          ;
  3216  0947  09D0               	comf	scale@scl,f
  3217  0948  0AD0               	incf	scale@scl,f
  3218  0949                     l2862:
  3219                           
  3220                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 438:   if(scl>=11
      +                          0)
  3221  0949  0850               	movf	scale@scl,w
  3222  094A  3A80               	xorlw	128
  3223  094B  3E12               	addlw	-238
  3224  094C  1C03               	skipc
  3225  094D  294F               	goto	u4171
  3226  094E  2950               	goto	u4170
  3227  094F                     u4171:
  3228  094F  2A38               	goto	l2870
  3229  0950                     u4170:
  3230  0950                     l2864:
  3231                           
  3232                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3233  0950  300A               	movlw	10
  3234  0951  00F7               	movwf	___awdiv@divisor
  3235  0952  3000               	movlw	0
  3236  0953  00F8               	movwf	___awdiv@divisor+1
  3237  0954  0850               	movf	scale@scl,w
  3238  0955  00F2               	movwf	___awmod@dividend
  3239  0956  01F3               	clrf	___awmod@dividend+1
  3240  0957  1BF2               	btfsc	___awmod@dividend,7
  3241  0958  03F3               	decf	___awmod@dividend+1,f
  3242  0959  3064               	movlw	100
  3243  095A  00F0               	movwf	___awmod@divisor
  3244  095B  3000               	movlw	0
  3245  095C  00F1               	movwf	___awmod@divisor+1
  3246  095D  160A  158A  2306  120A  158A  	fcall	___awmod
  3247  0962  0871               	movf	?___awmod+1,w
  3248  0963  00FA               	movwf	___awdiv@dividend+1
  3249  0964  0870               	movf	?___awmod,w
  3250  0965  00F9               	movwf	___awdiv@dividend
  3251  0966  160A  158A  23C5  120A  158A  	fcall	___awdiv
  3252  096B  0877               	movf	?___awdiv,w
  3253  096C  1283               	bcf	3,5	;RP0=0, select bank0
  3254  096D  1303               	bcf	3,6	;RP1=0, select bank0
  3255  096E  00C2               	movwf	??_scale
  3256  096F  3001               	movlw	1
  3257  0970                     u4185:
  3258  0970  1003               	clrc
  3259  0971  0DC2               	rlf	??_scale,f
  3260  0972  3EFF               	addlw	-1
  3261  0973  1D03               	skipz
  3262  0974  2970               	goto	u4185
  3263  0975  1003               	clrc
  3264  0976  0D42               	rlf	??_scale,w
  3265  0977  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3266  0978  0084               	movwf	4
  3267  0979  120A  118A  200D  120A  158A  	fcall	stringdir
  3268  097E  00C3               	movwf	??_scale+1
  3269  097F  120A  118A  200D  120A  158A  	fcall	stringdir
  3270  0984  00C4               	movwf	??_scale+2
  3271  0985  120A  118A  200D  120A  158A  	fcall	stringdir
  3272  098A  00C5               	movwf	??_scale+3
  3273  098B  120A  118A  200D  120A  158A  	fcall	stringdir
  3274  0990  00C6               	movwf	??_scale+4
  3275  0991  0846               	movf	??_scale+4,w
  3276  0992  00A7               	movwf	___flmul@b+3
  3277  0993  0845               	movf	??_scale+3,w
  3278  0994  00A6               	movwf	___flmul@b+2
  3279  0995  0844               	movf	??_scale+2,w
  3280  0996  00A5               	movwf	___flmul@b+1
  3281  0997  0843               	movf	??_scale+1,w
  3282  0998  00A4               	movwf	___flmul@b
  3283  0999  3064               	movlw	100
  3284  099A  00F7               	movwf	___awdiv@divisor
  3285  099B  3000               	movlw	0
  3286  099C  00F8               	movwf	___awdiv@divisor+1
  3287  099D  0850               	movf	scale@scl,w
  3288  099E  00F9               	movwf	___awdiv@dividend
  3289  099F  01FA               	clrf	___awdiv@dividend+1
  3290  09A0  1BF9               	btfsc	___awdiv@dividend,7
  3291  09A1  03FA               	decf	___awdiv@dividend+1,f
  3292  09A2  160A  158A  23C5  120A  158A  	fcall	___awdiv
  3293  09A7  0877               	movf	?___awdiv,w
  3294  09A8  1283               	bcf	3,5	;RP0=0, select bank0
  3295  09A9  1303               	bcf	3,6	;RP1=0, select bank0
  3296  09AA  00C7               	movwf	??_scale+5
  3297  09AB  3001               	movlw	1
  3298  09AC                     u4195:
  3299  09AC  1003               	clrc
  3300  09AD  0DC7               	rlf	??_scale+5,f
  3301  09AE  3EFF               	addlw	-1
  3302  09AF  1D03               	skipz
  3303  09B0  29AC               	goto	u4195
  3304  09B1  1003               	clrc
  3305  09B2  0D47               	rlf	??_scale+5,w
  3306  09B3  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  3307  09B4  0084               	movwf	4
  3308  09B5  120A  118A  200D  120A  158A  	fcall	stringdir
  3309  09BA  00C8               	movwf	??_scale+6
  3310  09BB  120A  118A  200D  120A  158A  	fcall	stringdir
  3311  09C0  00C9               	movwf	??_scale+7
  3312  09C1  120A  118A  200D  120A  158A  	fcall	stringdir
  3313  09C6  00CA               	movwf	??_scale+8
  3314  09C7  120A  118A  200D  120A  158A  	fcall	stringdir
  3315  09CC  00CB               	movwf	??_scale+9
  3316  09CD  084B               	movf	??_scale+9,w
  3317  09CE  00AB               	movwf	___flmul@a+3
  3318  09CF  084A               	movf	??_scale+8,w
  3319  09D0  00AA               	movwf	___flmul@a+2
  3320  09D1  0849               	movf	??_scale+7,w
  3321  09D2  00A9               	movwf	___flmul@a+1
  3322  09D3  0848               	movf	??_scale+6,w
  3323  09D4  00A8               	movwf	___flmul@a
  3324  09D5  120A  158A  249F  120A  158A  	fcall	___flmul
  3325  09DA  1283               	bcf	3,5	;RP0=0, select bank0
  3326  09DB  1303               	bcf	3,6	;RP1=0, select bank0
  3327  09DC  0827               	movf	?___flmul+3,w
  3328  09DD  00CF               	movwf	_scale$1253+3
  3329  09DE  0826               	movf	?___flmul+2,w
  3330  09DF  00CE               	movwf	_scale$1253+2
  3331  09E0  0825               	movf	?___flmul+1,w
  3332  09E1  00CD               	movwf	_scale$1253+1
  3333  09E2  0824               	movf	?___flmul,w
  3334  09E3  00CC               	movwf	_scale$1253
  3335                           
  3336                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 439:    return _n
      +                          powers_[(unsigned char)(scl/100+18)] * _npowers_[(unsigned char)((scl%100)/10+9)] * _npo
      +                          wers_[(unsigned char)(scl%10)];
  3337  09E4  300A               	movlw	10
  3338  09E5  00F0               	movwf	___awmod@divisor
  3339  09E6  3000               	movlw	0
  3340  09E7  00F1               	movwf	___awmod@divisor+1
  3341  09E8  0850               	movf	scale@scl,w
  3342  09E9  00F2               	movwf	___awmod@dividend
  3343  09EA  01F3               	clrf	___awmod@dividend+1
  3344  09EB  1BF2               	btfsc	___awmod@dividend,7
  3345  09EC  03F3               	decf	___awmod@dividend+1,f
  3346  09ED  160A  158A  2306  120A  158A  	fcall	___awmod
  3347  09F2  0870               	movf	?___awmod,w
  3348  09F3  1283               	bcf	3,5	;RP0=0, select bank0
  3349  09F4  1303               	bcf	3,6	;RP1=0, select bank0
  3350  09F5  00C2               	movwf	??_scale
  3351  09F6  3001               	movlw	1
  3352  09F7                     u4205:
  3353  09F7  1003               	clrc
  3354  09F8  0DC2               	rlf	??_scale,f
  3355  09F9  3EFF               	addlw	-1
  3356  09FA  1D03               	skipz
  3357  09FB  29F7               	goto	u4205
  3358  09FC  1003               	clrc
  3359  09FD  0D42               	rlf	??_scale,w
  3360  09FE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3361  09FF  0084               	movwf	4
  3362  0A00  120A  118A  200D  120A  158A  	fcall	stringdir
  3363  0A05  00C3               	movwf	??_scale+1
  3364  0A06  120A  118A  200D  120A  158A  	fcall	stringdir
  3365  0A0B  00C4               	movwf	??_scale+2
  3366  0A0C  120A  118A  200D  120A  158A  	fcall	stringdir
  3367  0A11  00C5               	movwf	??_scale+3
  3368  0A12  120A  118A  200D  120A  158A  	fcall	stringdir
  3369  0A17  00C6               	movwf	??_scale+4
  3370  0A18  0846               	movf	??_scale+4,w
  3371  0A19  00A7               	movwf	___flmul@b+3
  3372  0A1A  0845               	movf	??_scale+3,w
  3373  0A1B  00A6               	movwf	___flmul@b+2
  3374  0A1C  0844               	movf	??_scale+2,w
  3375  0A1D  00A5               	movwf	___flmul@b+1
  3376  0A1E  0843               	movf	??_scale+1,w
  3377  0A1F  00A4               	movwf	___flmul@b
  3378  0A20  084F               	movf	_scale$1253+3,w
  3379  0A21  00AB               	movwf	___flmul@a+3
  3380  0A22  084E               	movf	_scale$1253+2,w
  3381  0A23  00AA               	movwf	___flmul@a+2
  3382  0A24  084D               	movf	_scale$1253+1,w
  3383  0A25  00A9               	movwf	___flmul@a+1
  3384  0A26  084C               	movf	_scale$1253,w
  3385  0A27  00A8               	movwf	___flmul@a
  3386  0A28  120A  158A  249F  120A  158A  	fcall	___flmul
  3387  0A2D  1283               	bcf	3,5	;RP0=0, select bank0
  3388  0A2E  1303               	bcf	3,6	;RP1=0, select bank0
  3389  0A2F  0827               	movf	?___flmul+3,w
  3390  0A30  00C1               	movwf	?_scale+3
  3391  0A31  0826               	movf	?___flmul+2,w
  3392  0A32  00C0               	movwf	?_scale+2
  3393  0A33  0825               	movf	?___flmul+1,w
  3394  0A34  00BF               	movwf	?_scale+1
  3395  0A35  0824               	movf	?___flmul,w
  3396  0A36  00BE               	movwf	?_scale
  3397  0A37  2C9E               	goto	l299
  3398  0A38                     l2870:
  3399  0A38  0850               	movf	scale@scl,w
  3400  0A39  3A80               	xorlw	128
  3401  0A3A  3E75               	addlw	-139
  3402  0A3B  1C03               	skipc
  3403  0A3C  2A3E               	goto	u4211
  3404  0A3D  2A3F               	goto	u4210
  3405  0A3E                     u4211:
  3406  0A3E  2AC7               	goto	l2876
  3407  0A3F                     u4210:
  3408  0A3F                     l2872:
  3409                           
  3410                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 441:    return _n
      +                          powers_[(unsigned char)(scl/10+9)] * _npowers_[(unsigned char)(scl%10)];
  3411  0A3F  300A               	movlw	10
  3412  0A40  00F0               	movwf	___awmod@divisor
  3413  0A41  3000               	movlw	0
  3414  0A42  00F1               	movwf	___awmod@divisor+1
  3415  0A43  0850               	movf	scale@scl,w
  3416  0A44  00F2               	movwf	___awmod@dividend
  3417  0A45  01F3               	clrf	___awmod@dividend+1
  3418  0A46  1BF2               	btfsc	___awmod@dividend,7
  3419  0A47  03F3               	decf	___awmod@dividend+1,f
  3420  0A48  160A  158A  2306  120A  158A  	fcall	___awmod
  3421  0A4D  0870               	movf	?___awmod,w
  3422  0A4E  1283               	bcf	3,5	;RP0=0, select bank0
  3423  0A4F  1303               	bcf	3,6	;RP1=0, select bank0
  3424  0A50  00C2               	movwf	??_scale
  3425  0A51  3001               	movlw	1
  3426  0A52                     u4225:
  3427  0A52  1003               	clrc
  3428  0A53  0DC2               	rlf	??_scale,f
  3429  0A54  3EFF               	addlw	-1
  3430  0A55  1D03               	skipz
  3431  0A56  2A52               	goto	u4225
  3432  0A57  1003               	clrc
  3433  0A58  0D42               	rlf	??_scale,w
  3434  0A59  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3435  0A5A  0084               	movwf	4
  3436  0A5B  120A  118A  200D  120A  158A  	fcall	stringdir
  3437  0A60  00C3               	movwf	??_scale+1
  3438  0A61  120A  118A  200D  120A  158A  	fcall	stringdir
  3439  0A66  00C4               	movwf	??_scale+2
  3440  0A67  120A  118A  200D  120A  158A  	fcall	stringdir
  3441  0A6C  00C5               	movwf	??_scale+3
  3442  0A6D  120A  118A  200D  120A  158A  	fcall	stringdir
  3443  0A72  00C6               	movwf	??_scale+4
  3444  0A73  0846               	movf	??_scale+4,w
  3445  0A74  00A7               	movwf	___flmul@b+3
  3446  0A75  0845               	movf	??_scale+3,w
  3447  0A76  00A6               	movwf	___flmul@b+2
  3448  0A77  0844               	movf	??_scale+2,w
  3449  0A78  00A5               	movwf	___flmul@b+1
  3450  0A79  0843               	movf	??_scale+1,w
  3451  0A7A  00A4               	movwf	___flmul@b
  3452  0A7B  300A               	movlw	10
  3453  0A7C  00F7               	movwf	___awdiv@divisor
  3454  0A7D  3000               	movlw	0
  3455  0A7E  00F8               	movwf	___awdiv@divisor+1
  3456  0A7F  0850               	movf	scale@scl,w
  3457  0A80  00F9               	movwf	___awdiv@dividend
  3458  0A81  01FA               	clrf	___awdiv@dividend+1
  3459  0A82  1BF9               	btfsc	___awdiv@dividend,7
  3460  0A83  03FA               	decf	___awdiv@dividend+1,f
  3461  0A84  160A  158A  23C5  120A  158A  	fcall	___awdiv
  3462  0A89  0877               	movf	?___awdiv,w
  3463  0A8A  1283               	bcf	3,5	;RP0=0, select bank0
  3464  0A8B  1303               	bcf	3,6	;RP1=0, select bank0
  3465  0A8C  00C7               	movwf	??_scale+5
  3466  0A8D  3001               	movlw	1
  3467  0A8E                     u4235:
  3468  0A8E  1003               	clrc
  3469  0A8F  0DC7               	rlf	??_scale+5,f
  3470  0A90  3EFF               	addlw	-1
  3471  0A91  1D03               	skipz
  3472  0A92  2A8E               	goto	u4235
  3473  0A93  1003               	clrc
  3474  0A94  0D47               	rlf	??_scale+5,w
  3475  0A95  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  3476  0A96  0084               	movwf	4
  3477  0A97  120A  118A  200D  120A  158A  	fcall	stringdir
  3478  0A9C  00C8               	movwf	??_scale+6
  3479  0A9D  120A  118A  200D  120A  158A  	fcall	stringdir
  3480  0AA2  00C9               	movwf	??_scale+7
  3481  0AA3  120A  118A  200D  120A  158A  	fcall	stringdir
  3482  0AA8  00CA               	movwf	??_scale+8
  3483  0AA9  120A  118A  200D  120A  158A  	fcall	stringdir
  3484  0AAE  00CB               	movwf	??_scale+9
  3485  0AAF  084B               	movf	??_scale+9,w
  3486  0AB0  00AB               	movwf	___flmul@a+3
  3487  0AB1  084A               	movf	??_scale+8,w
  3488  0AB2  00AA               	movwf	___flmul@a+2
  3489  0AB3  0849               	movf	??_scale+7,w
  3490  0AB4  00A9               	movwf	___flmul@a+1
  3491  0AB5  0848               	movf	??_scale+6,w
  3492  0AB6  00A8               	movwf	___flmul@a
  3493  0AB7  120A  158A  249F  120A  158A  	fcall	___flmul
  3494  0ABC  1283               	bcf	3,5	;RP0=0, select bank0
  3495  0ABD  1303               	bcf	3,6	;RP1=0, select bank0
  3496  0ABE  0827               	movf	?___flmul+3,w
  3497  0ABF  00C1               	movwf	?_scale+3
  3498  0AC0  0826               	movf	?___flmul+2,w
  3499  0AC1  00C0               	movwf	?_scale+2
  3500  0AC2  0825               	movf	?___flmul+1,w
  3501  0AC3  00BF               	movwf	?_scale+1
  3502  0AC4  0824               	movf	?___flmul,w
  3503  0AC5  00BE               	movwf	?_scale
  3504  0AC6  2C9E               	goto	l299
  3505  0AC7                     l2876:
  3506                           
  3507                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 442:   return _np
      +                          owers_[(unsigned char)scl];
  3508  0AC7  0850               	movf	scale@scl,w
  3509  0AC8  00C2               	movwf	??_scale
  3510  0AC9  3001               	movlw	1
  3511  0ACA                     u4245:
  3512  0ACA  1003               	clrc
  3513  0ACB  0DC2               	rlf	??_scale,f
  3514  0ACC  3EFF               	addlw	-1
  3515  0ACD  1D03               	skipz
  3516  0ACE  2ACA               	goto	u4245
  3517  0ACF  1003               	clrc
  3518  0AD0  0D42               	rlf	??_scale,w
  3519  0AD1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  3520  0AD2  0084               	movwf	4
  3521  0AD3  120A  118A  200D  120A  158A  	fcall	stringdir
  3522  0AD8  00C3               	movwf	??_scale+1
  3523  0AD9  120A  118A  200D  120A  158A  	fcall	stringdir
  3524  0ADE  00C4               	movwf	??_scale+2
  3525  0ADF  120A  118A  200D  120A  158A  	fcall	stringdir
  3526  0AE4  00C5               	movwf	??_scale+3
  3527  0AE5  120A  118A  200D  120A  158A  	fcall	stringdir
  3528  0AEA  00C6               	movwf	??_scale+4
  3529  0AEB  0846               	movf	??_scale+4,w
  3530  0AEC  00C1               	movwf	?_scale+3
  3531  0AED  0845               	movf	??_scale+3,w
  3532  0AEE  00C0               	movwf	?_scale+2
  3533  0AEF  0844               	movf	??_scale+2,w
  3534  0AF0  00BF               	movwf	?_scale+1
  3535  0AF1  0843               	movf	??_scale+1,w
  3536  0AF2  00BE               	movwf	?_scale
  3537  0AF3  2C9E               	goto	l299
  3538  0AF4                     l2880:
  3539                           
  3540                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 444:  if(scl>=110
      +                          )
  3541  0AF4  0850               	movf	scale@scl,w
  3542  0AF5  3A80               	xorlw	128
  3543  0AF6  3E12               	addlw	-238
  3544  0AF7  1C03               	skipc
  3545  0AF8  2AFA               	goto	u4251
  3546  0AF9  2AFB               	goto	u4250
  3547  0AFA                     u4251:
  3548  0AFA  2BE3               	goto	l2888
  3549  0AFB                     u4250:
  3550  0AFB                     l2882:
  3551                           
  3552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3553  0AFB  300A               	movlw	10
  3554  0AFC  00F7               	movwf	___awdiv@divisor
  3555  0AFD  3000               	movlw	0
  3556  0AFE  00F8               	movwf	___awdiv@divisor+1
  3557  0AFF  0850               	movf	scale@scl,w
  3558  0B00  00F2               	movwf	___awmod@dividend
  3559  0B01  01F3               	clrf	___awmod@dividend+1
  3560  0B02  1BF2               	btfsc	___awmod@dividend,7
  3561  0B03  03F3               	decf	___awmod@dividend+1,f
  3562  0B04  3064               	movlw	100
  3563  0B05  00F0               	movwf	___awmod@divisor
  3564  0B06  3000               	movlw	0
  3565  0B07  00F1               	movwf	___awmod@divisor+1
  3566  0B08  160A  158A  2306  120A  158A  	fcall	___awmod
  3567  0B0D  0871               	movf	?___awmod+1,w
  3568  0B0E  00FA               	movwf	___awdiv@dividend+1
  3569  0B0F  0870               	movf	?___awmod,w
  3570  0B10  00F9               	movwf	___awdiv@dividend
  3571  0B11  160A  158A  23C5  120A  158A  	fcall	___awdiv
  3572  0B16  0877               	movf	?___awdiv,w
  3573  0B17  1283               	bcf	3,5	;RP0=0, select bank0
  3574  0B18  1303               	bcf	3,6	;RP1=0, select bank0
  3575  0B19  00C2               	movwf	??_scale
  3576  0B1A  3001               	movlw	1
  3577  0B1B                     u4265:
  3578  0B1B  1003               	clrc
  3579  0B1C  0DC2               	rlf	??_scale,f
  3580  0B1D  3EFF               	addlw	-1
  3581  0B1E  1D03               	skipz
  3582  0B1F  2B1B               	goto	u4265
  3583  0B20  1003               	clrc
  3584  0B21  0D42               	rlf	??_scale,w
  3585  0B22  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3586  0B23  0084               	movwf	4
  3587  0B24  120A  118A  200D  120A  158A  	fcall	stringdir
  3588  0B29  00C3               	movwf	??_scale+1
  3589  0B2A  120A  118A  200D  120A  158A  	fcall	stringdir
  3590  0B2F  00C4               	movwf	??_scale+2
  3591  0B30  120A  118A  200D  120A  158A  	fcall	stringdir
  3592  0B35  00C5               	movwf	??_scale+3
  3593  0B36  120A  118A  200D  120A  158A  	fcall	stringdir
  3594  0B3B  00C6               	movwf	??_scale+4
  3595  0B3C  0846               	movf	??_scale+4,w
  3596  0B3D  00A7               	movwf	___flmul@b+3
  3597  0B3E  0845               	movf	??_scale+3,w
  3598  0B3F  00A6               	movwf	___flmul@b+2
  3599  0B40  0844               	movf	??_scale+2,w
  3600  0B41  00A5               	movwf	___flmul@b+1
  3601  0B42  0843               	movf	??_scale+1,w
  3602  0B43  00A4               	movwf	___flmul@b
  3603  0B44  3064               	movlw	100
  3604  0B45  00F7               	movwf	___awdiv@divisor
  3605  0B46  3000               	movlw	0
  3606  0B47  00F8               	movwf	___awdiv@divisor+1
  3607  0B48  0850               	movf	scale@scl,w
  3608  0B49  00F9               	movwf	___awdiv@dividend
  3609  0B4A  01FA               	clrf	___awdiv@dividend+1
  3610  0B4B  1BF9               	btfsc	___awdiv@dividend,7
  3611  0B4C  03FA               	decf	___awdiv@dividend+1,f
  3612  0B4D  160A  158A  23C5  120A  158A  	fcall	___awdiv
  3613  0B52  0877               	movf	?___awdiv,w
  3614  0B53  1283               	bcf	3,5	;RP0=0, select bank0
  3615  0B54  1303               	bcf	3,6	;RP1=0, select bank0
  3616  0B55  00C7               	movwf	??_scale+5
  3617  0B56  3001               	movlw	1
  3618  0B57                     u4275:
  3619  0B57  1003               	clrc
  3620  0B58  0DC7               	rlf	??_scale+5,f
  3621  0B59  3EFF               	addlw	-1
  3622  0B5A  1D03               	skipz
  3623  0B5B  2B57               	goto	u4275
  3624  0B5C  1003               	clrc
  3625  0B5D  0D47               	rlf	??_scale+5,w
  3626  0B5E  3E49               	addlw	low (((__powers_-__stringbase)| (0+32768)+72))
  3627  0B5F  0084               	movwf	4
  3628  0B60  120A  118A  200D  120A  158A  	fcall	stringdir
  3629  0B65  00C8               	movwf	??_scale+6
  3630  0B66  120A  118A  200D  120A  158A  	fcall	stringdir
  3631  0B6B  00C9               	movwf	??_scale+7
  3632  0B6C  120A  118A  200D  120A  158A  	fcall	stringdir
  3633  0B71  00CA               	movwf	??_scale+8
  3634  0B72  120A  118A  200D  120A  158A  	fcall	stringdir
  3635  0B77  00CB               	movwf	??_scale+9
  3636  0B78  084B               	movf	??_scale+9,w
  3637  0B79  00AB               	movwf	___flmul@a+3
  3638  0B7A  084A               	movf	??_scale+8,w
  3639  0B7B  00AA               	movwf	___flmul@a+2
  3640  0B7C  0849               	movf	??_scale+7,w
  3641  0B7D  00A9               	movwf	___flmul@a+1
  3642  0B7E  0848               	movf	??_scale+6,w
  3643  0B7F  00A8               	movwf	___flmul@a
  3644  0B80  120A  158A  249F  120A  158A  	fcall	___flmul
  3645  0B85  1283               	bcf	3,5	;RP0=0, select bank0
  3646  0B86  1303               	bcf	3,6	;RP1=0, select bank0
  3647  0B87  0827               	movf	?___flmul+3,w
  3648  0B88  00CF               	movwf	_scale$1253+3
  3649  0B89  0826               	movf	?___flmul+2,w
  3650  0B8A  00CE               	movwf	_scale$1253+2
  3651  0B8B  0825               	movf	?___flmul+1,w
  3652  0B8C  00CD               	movwf	_scale$1253+1
  3653  0B8D  0824               	movf	?___flmul,w
  3654  0B8E  00CC               	movwf	_scale$1253
  3655                           
  3656                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 445:   return _po
      +                          wers_[(unsigned char)(scl/100+18)] * _powers_[(unsigned char)((scl%100)/10+9)] * _powers
      +                          _[(unsigned char)(scl%10)];
  3657  0B8F  300A               	movlw	10
  3658  0B90  00F0               	movwf	___awmod@divisor
  3659  0B91  3000               	movlw	0
  3660  0B92  00F1               	movwf	___awmod@divisor+1
  3661  0B93  0850               	movf	scale@scl,w
  3662  0B94  00F2               	movwf	___awmod@dividend
  3663  0B95  01F3               	clrf	___awmod@dividend+1
  3664  0B96  1BF2               	btfsc	___awmod@dividend,7
  3665  0B97  03F3               	decf	___awmod@dividend+1,f
  3666  0B98  160A  158A  2306  120A  158A  	fcall	___awmod
  3667  0B9D  0870               	movf	?___awmod,w
  3668  0B9E  1283               	bcf	3,5	;RP0=0, select bank0
  3669  0B9F  1303               	bcf	3,6	;RP1=0, select bank0
  3670  0BA0  00C2               	movwf	??_scale
  3671  0BA1  3001               	movlw	1
  3672  0BA2                     u4285:
  3673  0BA2  1003               	clrc
  3674  0BA3  0DC2               	rlf	??_scale,f
  3675  0BA4  3EFF               	addlw	-1
  3676  0BA5  1D03               	skipz
  3677  0BA6  2BA2               	goto	u4285
  3678  0BA7  1003               	clrc
  3679  0BA8  0D42               	rlf	??_scale,w
  3680  0BA9  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3681  0BAA  0084               	movwf	4
  3682  0BAB  120A  118A  200D  120A  158A  	fcall	stringdir
  3683  0BB0  00C3               	movwf	??_scale+1
  3684  0BB1  120A  118A  200D  120A  158A  	fcall	stringdir
  3685  0BB6  00C4               	movwf	??_scale+2
  3686  0BB7  120A  118A  200D  120A  158A  	fcall	stringdir
  3687  0BBC  00C5               	movwf	??_scale+3
  3688  0BBD  120A  118A  200D  120A  158A  	fcall	stringdir
  3689  0BC2  00C6               	movwf	??_scale+4
  3690  0BC3  0846               	movf	??_scale+4,w
  3691  0BC4  00A7               	movwf	___flmul@b+3
  3692  0BC5  0845               	movf	??_scale+3,w
  3693  0BC6  00A6               	movwf	___flmul@b+2
  3694  0BC7  0844               	movf	??_scale+2,w
  3695  0BC8  00A5               	movwf	___flmul@b+1
  3696  0BC9  0843               	movf	??_scale+1,w
  3697  0BCA  00A4               	movwf	___flmul@b
  3698  0BCB  084F               	movf	_scale$1253+3,w
  3699  0BCC  00AB               	movwf	___flmul@a+3
  3700  0BCD  084E               	movf	_scale$1253+2,w
  3701  0BCE  00AA               	movwf	___flmul@a+2
  3702  0BCF  084D               	movf	_scale$1253+1,w
  3703  0BD0  00A9               	movwf	___flmul@a+1
  3704  0BD1  084C               	movf	_scale$1253,w
  3705  0BD2  00A8               	movwf	___flmul@a
  3706  0BD3  120A  158A  249F  120A  158A  	fcall	___flmul
  3707  0BD8  1283               	bcf	3,5	;RP0=0, select bank0
  3708  0BD9  1303               	bcf	3,6	;RP1=0, select bank0
  3709  0BDA  0827               	movf	?___flmul+3,w
  3710  0BDB  00C1               	movwf	?_scale+3
  3711  0BDC  0826               	movf	?___flmul+2,w
  3712  0BDD  00C0               	movwf	?_scale+2
  3713  0BDE  0825               	movf	?___flmul+1,w
  3714  0BDF  00BF               	movwf	?_scale+1
  3715  0BE0  0824               	movf	?___flmul,w
  3716  0BE1  00BE               	movwf	?_scale
  3717  0BE2  2C9E               	goto	l299
  3718  0BE3                     l2888:
  3719  0BE3  0850               	movf	scale@scl,w
  3720  0BE4  3A80               	xorlw	128
  3721  0BE5  3E75               	addlw	-139
  3722  0BE6  1C03               	skipc
  3723  0BE7  2BE9               	goto	u4291
  3724  0BE8  2BEA               	goto	u4290
  3725  0BE9                     u4291:
  3726  0BE9  2C72               	goto	l2894
  3727  0BEA                     u4290:
  3728  0BEA                     l2890:
  3729                           
  3730                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 447:   return _po
      +                          wers_[(unsigned char)(scl/10+9)] * _powers_[(unsigned char)(scl%10)];
  3731  0BEA  300A               	movlw	10
  3732  0BEB  00F0               	movwf	___awmod@divisor
  3733  0BEC  3000               	movlw	0
  3734  0BED  00F1               	movwf	___awmod@divisor+1
  3735  0BEE  0850               	movf	scale@scl,w
  3736  0BEF  00F2               	movwf	___awmod@dividend
  3737  0BF0  01F3               	clrf	___awmod@dividend+1
  3738  0BF1  1BF2               	btfsc	___awmod@dividend,7
  3739  0BF2  03F3               	decf	___awmod@dividend+1,f
  3740  0BF3  160A  158A  2306  120A  158A  	fcall	___awmod
  3741  0BF8  0870               	movf	?___awmod,w
  3742  0BF9  1283               	bcf	3,5	;RP0=0, select bank0
  3743  0BFA  1303               	bcf	3,6	;RP1=0, select bank0
  3744  0BFB  00C2               	movwf	??_scale
  3745  0BFC  3001               	movlw	1
  3746  0BFD                     u4305:
  3747  0BFD  1003               	clrc
  3748  0BFE  0DC2               	rlf	??_scale,f
  3749  0BFF  3EFF               	addlw	-1
  3750  0C00  1D03               	skipz
  3751  0C01  2BFD               	goto	u4305
  3752  0C02  1003               	clrc
  3753  0C03  0D42               	rlf	??_scale,w
  3754  0C04  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3755  0C05  0084               	movwf	4
  3756  0C06  120A  118A  200D  120A  158A  	fcall	stringdir
  3757  0C0B  00C3               	movwf	??_scale+1
  3758  0C0C  120A  118A  200D  120A  158A  	fcall	stringdir
  3759  0C11  00C4               	movwf	??_scale+2
  3760  0C12  120A  118A  200D  120A  158A  	fcall	stringdir
  3761  0C17  00C5               	movwf	??_scale+3
  3762  0C18  120A  118A  200D  120A  158A  	fcall	stringdir
  3763  0C1D  00C6               	movwf	??_scale+4
  3764  0C1E  0846               	movf	??_scale+4,w
  3765  0C1F  00A7               	movwf	___flmul@b+3
  3766  0C20  0845               	movf	??_scale+3,w
  3767  0C21  00A6               	movwf	___flmul@b+2
  3768  0C22  0844               	movf	??_scale+2,w
  3769  0C23  00A5               	movwf	___flmul@b+1
  3770  0C24  0843               	movf	??_scale+1,w
  3771  0C25  00A4               	movwf	___flmul@b
  3772  0C26  300A               	movlw	10
  3773  0C27  00F7               	movwf	___awdiv@divisor
  3774  0C28  3000               	movlw	0
  3775  0C29  00F8               	movwf	___awdiv@divisor+1
  3776  0C2A  0850               	movf	scale@scl,w
  3777  0C2B  00F9               	movwf	___awdiv@dividend
  3778  0C2C  01FA               	clrf	___awdiv@dividend+1
  3779  0C2D  1BF9               	btfsc	___awdiv@dividend,7
  3780  0C2E  03FA               	decf	___awdiv@dividend+1,f
  3781  0C2F  160A  158A  23C5  120A  158A  	fcall	___awdiv
  3782  0C34  0877               	movf	?___awdiv,w
  3783  0C35  1283               	bcf	3,5	;RP0=0, select bank0
  3784  0C36  1303               	bcf	3,6	;RP1=0, select bank0
  3785  0C37  00C7               	movwf	??_scale+5
  3786  0C38  3001               	movlw	1
  3787  0C39                     u4315:
  3788  0C39  1003               	clrc
  3789  0C3A  0DC7               	rlf	??_scale+5,f
  3790  0C3B  3EFF               	addlw	-1
  3791  0C3C  1D03               	skipz
  3792  0C3D  2C39               	goto	u4315
  3793  0C3E  1003               	clrc
  3794  0C3F  0D47               	rlf	??_scale+5,w
  3795  0C40  3E25               	addlw	low (((__powers_-__stringbase)| (0+32768)+36))
  3796  0C41  0084               	movwf	4
  3797  0C42  120A  118A  200D  120A  158A  	fcall	stringdir
  3798  0C47  00C8               	movwf	??_scale+6
  3799  0C48  120A  118A  200D  120A  158A  	fcall	stringdir
  3800  0C4D  00C9               	movwf	??_scale+7
  3801  0C4E  120A  118A  200D  120A  158A  	fcall	stringdir
  3802  0C53  00CA               	movwf	??_scale+8
  3803  0C54  120A  118A  200D  120A  158A  	fcall	stringdir
  3804  0C59  00CB               	movwf	??_scale+9
  3805  0C5A  084B               	movf	??_scale+9,w
  3806  0C5B  00AB               	movwf	___flmul@a+3
  3807  0C5C  084A               	movf	??_scale+8,w
  3808  0C5D  00AA               	movwf	___flmul@a+2
  3809  0C5E  0849               	movf	??_scale+7,w
  3810  0C5F  00A9               	movwf	___flmul@a+1
  3811  0C60  0848               	movf	??_scale+6,w
  3812  0C61  00A8               	movwf	___flmul@a
  3813  0C62  120A  158A  249F  120A  158A  	fcall	___flmul
  3814  0C67  1283               	bcf	3,5	;RP0=0, select bank0
  3815  0C68  1303               	bcf	3,6	;RP1=0, select bank0
  3816  0C69  0827               	movf	?___flmul+3,w
  3817  0C6A  00C1               	movwf	?_scale+3
  3818  0C6B  0826               	movf	?___flmul+2,w
  3819  0C6C  00C0               	movwf	?_scale+2
  3820  0C6D  0825               	movf	?___flmul+1,w
  3821  0C6E  00BF               	movwf	?_scale+1
  3822  0C6F  0824               	movf	?___flmul,w
  3823  0C70  00BE               	movwf	?_scale
  3824  0C71  2C9E               	goto	l299
  3825  0C72                     l2894:
  3826                           
  3827                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 448:  return _pow
      +                          ers_[(unsigned char)scl];
  3828  0C72  0850               	movf	scale@scl,w
  3829  0C73  00C2               	movwf	??_scale
  3830  0C74  3001               	movlw	1
  3831  0C75                     u4325:
  3832  0C75  1003               	clrc
  3833  0C76  0DC2               	rlf	??_scale,f
  3834  0C77  3EFF               	addlw	-1
  3835  0C78  1D03               	skipz
  3836  0C79  2C75               	goto	u4325
  3837  0C7A  1003               	clrc
  3838  0C7B  0D42               	rlf	??_scale,w
  3839  0C7C  3E01               	addlw	low ((__powers_-__stringbase)| (0+32768))
  3840  0C7D  0084               	movwf	4
  3841  0C7E  120A  118A  200D  120A  158A  	fcall	stringdir
  3842  0C83  00C3               	movwf	??_scale+1
  3843  0C84  120A  118A  200D  120A  158A  	fcall	stringdir
  3844  0C89  00C4               	movwf	??_scale+2
  3845  0C8A  120A  118A  200D  120A  158A  	fcall	stringdir
  3846  0C8F  00C5               	movwf	??_scale+3
  3847  0C90  120A  118A  200D  120A  158A  	fcall	stringdir
  3848  0C95  00C6               	movwf	??_scale+4
  3849  0C96  0846               	movf	??_scale+4,w
  3850  0C97  00C1               	movwf	?_scale+3
  3851  0C98  0845               	movf	??_scale+3,w
  3852  0C99  00C0               	movwf	?_scale+2
  3853  0C9A  0844               	movf	??_scale+2,w
  3854  0C9B  00BF               	movwf	?_scale+1
  3855  0C9C  0843               	movf	??_scale+1,w
  3856  0C9D  00BE               	movwf	?_scale
  3857  0C9E                     l299:
  3858  0C9E  0008               	return
  3859  0C9F                     __end_of_scale:
  3860                           
  3861                           	psect	text4
  3862  1B06                     __ptext4:	
  3863 ;; *************** function ___awmod *****************
  3864 ;; Defined at:
  3865 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
  3866 ;; Parameters:    Size  Location     Type
  3867 ;;  divisor         2    0[COMMON] int 
  3868 ;;  dividend        2    2[COMMON] int 
  3869 ;; Auto vars:     Size  Location     Type
  3870 ;;  sign            1    6[COMMON] unsigned char 
  3871 ;;  counter         1    5[COMMON] unsigned char 
  3872 ;; Return value:  Size  Location     Type
  3873 ;;                  2    0[COMMON] int 
  3874 ;; Registers used:
  3875 ;;		wreg, status,2, status,0
  3876 ;; Tracked objects:
  3877 ;;		On entry : 0/0
  3878 ;;		On exit  : 0/0
  3879 ;;		Unchanged: 0/0
  3880 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3881 ;;      Params:         4       0       0       0       0
  3882 ;;      Locals:         2       0       0       0       0
  3883 ;;      Temps:          1       0       0       0       0
  3884 ;;      Totals:         7       0       0       0       0
  3885 ;;Total ram usage:        7 bytes
  3886 ;; Hardware stack levels used:    1
  3887 ;; This function calls:
  3888 ;;		Nothing
  3889 ;; This function is called by:
  3890 ;;		_scale
  3891 ;; This function uses a non-reentrant model
  3892 ;;
  3893                           
  3894                           
  3895                           ;psect for function ___awmod
  3896  1B06                     ___awmod:
  3897  1B06                     l2396:	
  3898                           ;incstack = 0
  3899                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  3900                           
  3901  1B06  01F6               	clrf	___awmod@sign
  3902  1B07                     l2398:
  3903  1B07  1FF3               	btfss	___awmod@dividend+1,7
  3904  1B08  2B0A               	goto	u3021
  3905  1B09  2B0B               	goto	u3020
  3906  1B0A                     u3021:
  3907  1B0A  2B12               	goto	l2404
  3908  1B0B                     u3020:
  3909  1B0B                     l2400:
  3910  1B0B  09F2               	comf	___awmod@dividend,f
  3911  1B0C  09F3               	comf	___awmod@dividend+1,f
  3912  1B0D  0AF2               	incf	___awmod@dividend,f
  3913  1B0E  1903               	skipnz
  3914  1B0F  0AF3               	incf	___awmod@dividend+1,f
  3915  1B10                     l2402:
  3916  1B10  01F6               	clrf	___awmod@sign
  3917  1B11  0AF6               	incf	___awmod@sign,f
  3918  1B12                     l2404:
  3919  1B12  1FF1               	btfss	___awmod@divisor+1,7
  3920  1B13  2B15               	goto	u3031
  3921  1B14  2B16               	goto	u3030
  3922  1B15                     u3031:
  3923  1B15  2B1B               	goto	l2408
  3924  1B16                     u3030:
  3925  1B16                     l2406:
  3926  1B16  09F0               	comf	___awmod@divisor,f
  3927  1B17  09F1               	comf	___awmod@divisor+1,f
  3928  1B18  0AF0               	incf	___awmod@divisor,f
  3929  1B19  1903               	skipnz
  3930  1B1A  0AF1               	incf	___awmod@divisor+1,f
  3931  1B1B                     l2408:
  3932  1B1B  0870               	movf	___awmod@divisor,w
  3933  1B1C  0471               	iorwf	___awmod@divisor+1,w
  3934  1B1D  1903               	btfsc	3,2
  3935  1B1E  2B20               	goto	u3041
  3936  1B1F  2B21               	goto	u3040
  3937  1B20                     u3041:
  3938  1B20  2B50               	goto	l2426
  3939  1B21                     u3040:
  3940  1B21                     l2410:
  3941  1B21  01F5               	clrf	___awmod@counter
  3942  1B22  0AF5               	incf	___awmod@counter,f
  3943  1B23  2B2F               	goto	l2416
  3944  1B24                     l2412:
  3945  1B24  3001               	movlw	1
  3946  1B25                     u3055:
  3947  1B25  1003               	clrc
  3948  1B26  0DF0               	rlf	___awmod@divisor,f
  3949  1B27  0DF1               	rlf	___awmod@divisor+1,f
  3950  1B28  3EFF               	addlw	-1
  3951  1B29  1D03               	skipz
  3952  1B2A  2B25               	goto	u3055
  3953  1B2B                     l2414:
  3954  1B2B  3001               	movlw	1
  3955  1B2C  00F4               	movwf	??___awmod
  3956  1B2D  0874               	movf	??___awmod,w
  3957  1B2E  07F5               	addwf	___awmod@counter,f
  3958  1B2F                     l2416:
  3959  1B2F  1FF1               	btfss	___awmod@divisor+1,7
  3960  1B30  2B32               	goto	u3061
  3961  1B31  2B33               	goto	u3060
  3962  1B32                     u3061:
  3963  1B32  2B24               	goto	l2412
  3964  1B33                     u3060:
  3965  1B33                     l2418:
  3966  1B33  0871               	movf	___awmod@divisor+1,w
  3967  1B34  0273               	subwf	___awmod@dividend+1,w
  3968  1B35  1D03               	skipz
  3969  1B36  2B39               	goto	u3075
  3970  1B37  0870               	movf	___awmod@divisor,w
  3971  1B38  0272               	subwf	___awmod@dividend,w
  3972  1B39                     u3075:
  3973  1B39  1C03               	skipc
  3974  1B3A  2B3C               	goto	u3071
  3975  1B3B  2B3D               	goto	u3070
  3976  1B3C                     u3071:
  3977  1B3C  2B43               	goto	l2422
  3978  1B3D                     u3070:
  3979  1B3D                     l2420:
  3980  1B3D  0870               	movf	___awmod@divisor,w
  3981  1B3E  02F2               	subwf	___awmod@dividend,f
  3982  1B3F  0871               	movf	___awmod@divisor+1,w
  3983  1B40  1C03               	skipc
  3984  1B41  03F3               	decf	___awmod@dividend+1,f
  3985  1B42  02F3               	subwf	___awmod@dividend+1,f
  3986  1B43                     l2422:
  3987  1B43  3001               	movlw	1
  3988  1B44                     u3085:
  3989  1B44  1003               	clrc
  3990  1B45  0CF1               	rrf	___awmod@divisor+1,f
  3991  1B46  0CF0               	rrf	___awmod@divisor,f
  3992  1B47  3EFF               	addlw	-1
  3993  1B48  1D03               	skipz
  3994  1B49  2B44               	goto	u3085
  3995  1B4A                     l2424:
  3996  1B4A  3001               	movlw	1
  3997  1B4B  02F5               	subwf	___awmod@counter,f
  3998  1B4C  1D03               	btfss	3,2
  3999  1B4D  2B4F               	goto	u3091
  4000  1B4E  2B50               	goto	u3090
  4001  1B4F                     u3091:
  4002  1B4F  2B33               	goto	l2418
  4003  1B50                     u3090:
  4004  1B50                     l2426:
  4005  1B50  0876               	movf	___awmod@sign,w
  4006  1B51  1903               	btfsc	3,2
  4007  1B52  2B54               	goto	u3101
  4008  1B53  2B55               	goto	u3100
  4009  1B54                     u3101:
  4010  1B54  2B5A               	goto	l2430
  4011  1B55                     u3100:
  4012  1B55                     l2428:
  4013  1B55  09F2               	comf	___awmod@dividend,f
  4014  1B56  09F3               	comf	___awmod@dividend+1,f
  4015  1B57  0AF2               	incf	___awmod@dividend,f
  4016  1B58  1903               	skipnz
  4017  1B59  0AF3               	incf	___awmod@dividend+1,f
  4018  1B5A                     l2430:
  4019  1B5A  0873               	movf	___awmod@dividend+1,w
  4020  1B5B  00F1               	movwf	?___awmod+1
  4021  1B5C  0872               	movf	___awmod@dividend,w
  4022  1B5D  00F0               	movwf	?___awmod
  4023  1B5E                     l561:
  4024  1B5E  0008               	return
  4025  1B5F                     __end_of___awmod:
  4026                           
  4027                           	psect	text5
  4028  1BC5                     __ptext5:	
  4029 ;; *************** function ___awdiv *****************
  4030 ;; Defined at:
  4031 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
  4032 ;; Parameters:    Size  Location     Type
  4033 ;;  divisor         2    7[COMMON] int 
  4034 ;;  dividend        2    9[COMMON] int 
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;  quotient        2    2[BANK0 ] int 
  4037 ;;  sign            1    1[BANK0 ] unsigned char 
  4038 ;;  counter         1    0[BANK0 ] unsigned char 
  4039 ;; Return value:  Size  Location     Type
  4040 ;;                  2    7[COMMON] int 
  4041 ;; Registers used:
  4042 ;;		wreg, status,2, status,0
  4043 ;; Tracked objects:
  4044 ;;		On entry : 0/0
  4045 ;;		On exit  : 0/0
  4046 ;;		Unchanged: 0/0
  4047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4048 ;;      Params:         4       0       0       0       0
  4049 ;;      Locals:         0       4       0       0       0
  4050 ;;      Temps:          1       0       0       0       0
  4051 ;;      Totals:         5       4       0       0       0
  4052 ;;Total ram usage:        9 bytes
  4053 ;; Hardware stack levels used:    1
  4054 ;; This function calls:
  4055 ;;		Nothing
  4056 ;; This function is called by:
  4057 ;;		_scale
  4058 ;;		_sprintf
  4059 ;; This function uses a non-reentrant model
  4060 ;;
  4061                           
  4062                           
  4063                           ;psect for function ___awdiv
  4064  1BC5                     ___awdiv:
  4065  1BC5                     l2352:	
  4066                           ;incstack = 0
  4067                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  4068                           
  4069  1BC5  1283               	bcf	3,5	;RP0=0, select bank0
  4070  1BC6  1303               	bcf	3,6	;RP1=0, select bank0
  4071  1BC7  01A1               	clrf	___awdiv@sign
  4072  1BC8                     l2354:
  4073  1BC8  1FF8               	btfss	___awdiv@divisor+1,7
  4074  1BC9  2BCB               	goto	u2921
  4075  1BCA  2BCC               	goto	u2920
  4076  1BCB                     u2921:
  4077  1BCB  2BD3               	goto	l2360
  4078  1BCC                     u2920:
  4079  1BCC                     l2356:
  4080  1BCC  09F7               	comf	___awdiv@divisor,f
  4081  1BCD  09F8               	comf	___awdiv@divisor+1,f
  4082  1BCE  0AF7               	incf	___awdiv@divisor,f
  4083  1BCF  1903               	skipnz
  4084  1BD0  0AF8               	incf	___awdiv@divisor+1,f
  4085  1BD1                     l2358:
  4086  1BD1  01A1               	clrf	___awdiv@sign
  4087  1BD2  0AA1               	incf	___awdiv@sign,f
  4088  1BD3                     l2360:
  4089  1BD3  1FFA               	btfss	___awdiv@dividend+1,7
  4090  1BD4  2BD6               	goto	u2931
  4091  1BD5  2BD7               	goto	u2930
  4092  1BD6                     u2931:
  4093  1BD6  2BE0               	goto	l2366
  4094  1BD7                     u2930:
  4095  1BD7                     l2362:
  4096  1BD7  09F9               	comf	___awdiv@dividend,f
  4097  1BD8  09FA               	comf	___awdiv@dividend+1,f
  4098  1BD9  0AF9               	incf	___awdiv@dividend,f
  4099  1BDA  1903               	skipnz
  4100  1BDB  0AFA               	incf	___awdiv@dividend+1,f
  4101  1BDC                     l2364:
  4102  1BDC  3001               	movlw	1
  4103  1BDD  00FB               	movwf	??___awdiv
  4104  1BDE  087B               	movf	??___awdiv,w
  4105  1BDF  06A1               	xorwf	___awdiv@sign,f
  4106  1BE0                     l2366:
  4107  1BE0  01A2               	clrf	___awdiv@quotient
  4108  1BE1  01A3               	clrf	___awdiv@quotient+1
  4109  1BE2                     l2368:
  4110  1BE2  0877               	movf	___awdiv@divisor,w
  4111  1BE3  0478               	iorwf	___awdiv@divisor+1,w
  4112  1BE4  1903               	btfsc	3,2
  4113  1BE5  2BE7               	goto	u2941
  4114  1BE6  2BE8               	goto	u2940
  4115  1BE7                     u2941:
  4116  1BE7  2C1F               	goto	l2388
  4117  1BE8                     u2940:
  4118  1BE8                     l2370:
  4119  1BE8  01A0               	clrf	___awdiv@counter
  4120  1BE9  0AA0               	incf	___awdiv@counter,f
  4121  1BEA  2BF6               	goto	l2376
  4122  1BEB                     l2372:
  4123  1BEB  3001               	movlw	1
  4124  1BEC                     u2955:
  4125  1BEC  1003               	clrc
  4126  1BED  0DF7               	rlf	___awdiv@divisor,f
  4127  1BEE  0DF8               	rlf	___awdiv@divisor+1,f
  4128  1BEF  3EFF               	addlw	-1
  4129  1BF0  1D03               	skipz
  4130  1BF1  2BEC               	goto	u2955
  4131  1BF2                     l2374:
  4132  1BF2  3001               	movlw	1
  4133  1BF3  00FB               	movwf	??___awdiv
  4134  1BF4  087B               	movf	??___awdiv,w
  4135  1BF5  07A0               	addwf	___awdiv@counter,f
  4136  1BF6                     l2376:
  4137  1BF6  1FF8               	btfss	___awdiv@divisor+1,7
  4138  1BF7  2BF9               	goto	u2961
  4139  1BF8  2BFA               	goto	u2960
  4140  1BF9                     u2961:
  4141  1BF9  2BEB               	goto	l2372
  4142  1BFA                     u2960:
  4143  1BFA                     l2378:
  4144  1BFA  3001               	movlw	1
  4145  1BFB                     u2975:
  4146  1BFB  1003               	clrc
  4147  1BFC  0DA2               	rlf	___awdiv@quotient,f
  4148  1BFD  0DA3               	rlf	___awdiv@quotient+1,f
  4149  1BFE  3EFF               	addlw	-1
  4150  1BFF  1D03               	skipz
  4151  1C00  2BFB               	goto	u2975
  4152  1C01  0878               	movf	___awdiv@divisor+1,w
  4153  1C02  027A               	subwf	___awdiv@dividend+1,w
  4154  1C03  1D03               	skipz
  4155  1C04  2C07               	goto	u2985
  4156  1C05  0877               	movf	___awdiv@divisor,w
  4157  1C06  0279               	subwf	___awdiv@dividend,w
  4158  1C07                     u2985:
  4159  1C07  1C03               	skipc
  4160  1C08  2C0A               	goto	u2981
  4161  1C09  2C0B               	goto	u2980
  4162  1C0A                     u2981:
  4163  1C0A  2C12               	goto	l2384
  4164  1C0B                     u2980:
  4165  1C0B                     l2380:
  4166  1C0B  0877               	movf	___awdiv@divisor,w
  4167  1C0C  02F9               	subwf	___awdiv@dividend,f
  4168  1C0D  0878               	movf	___awdiv@divisor+1,w
  4169  1C0E  1C03               	skipc
  4170  1C0F  03FA               	decf	___awdiv@dividend+1,f
  4171  1C10  02FA               	subwf	___awdiv@dividend+1,f
  4172  1C11                     l2382:
  4173  1C11  1422               	bsf	___awdiv@quotient,0
  4174  1C12                     l2384:
  4175  1C12  3001               	movlw	1
  4176  1C13                     u2995:
  4177  1C13  1003               	clrc
  4178  1C14  0CF8               	rrf	___awdiv@divisor+1,f
  4179  1C15  0CF7               	rrf	___awdiv@divisor,f
  4180  1C16  3EFF               	addlw	-1
  4181  1C17  1D03               	skipz
  4182  1C18  2C13               	goto	u2995
  4183  1C19                     l2386:
  4184  1C19  3001               	movlw	1
  4185  1C1A  02A0               	subwf	___awdiv@counter,f
  4186  1C1B  1D03               	btfss	3,2
  4187  1C1C  2C1E               	goto	u3001
  4188  1C1D  2C1F               	goto	u3000
  4189  1C1E                     u3001:
  4190  1C1E  2BFA               	goto	l2378
  4191  1C1F                     u3000:
  4192  1C1F                     l2388:
  4193  1C1F  0821               	movf	___awdiv@sign,w
  4194  1C20  1903               	btfsc	3,2
  4195  1C21  2C23               	goto	u3011
  4196  1C22  2C24               	goto	u3010
  4197  1C23                     u3011:
  4198  1C23  2C29               	goto	l2392
  4199  1C24                     u3010:
  4200  1C24                     l2390:
  4201  1C24  09A2               	comf	___awdiv@quotient,f
  4202  1C25  09A3               	comf	___awdiv@quotient+1,f
  4203  1C26  0AA2               	incf	___awdiv@quotient,f
  4204  1C27  1903               	skipnz
  4205  1C28  0AA3               	incf	___awdiv@quotient+1,f
  4206  1C29                     l2392:
  4207  1C29  0823               	movf	___awdiv@quotient+1,w
  4208  1C2A  00F8               	movwf	?___awdiv+1
  4209  1C2B  0822               	movf	___awdiv@quotient,w
  4210  1C2C  00F7               	movwf	?___awdiv
  4211  1C2D                     l548:
  4212  1C2D  0008               	return
  4213  1C2E                     __end_of___awdiv:
  4214                           
  4215                           	psect	text6
  4216  18C4                     __ptext6:	
  4217 ;; *************** function _isdigit *****************
  4218 ;; Defined at:
  4219 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\isdigit.c"
  4220 ;; Parameters:    Size  Location     Type
  4221 ;;  c               1    wreg     unsigned char 
  4222 ;; Auto vars:     Size  Location     Type
  4223 ;;  c               1    1[COMMON] unsigned char 
  4224 ;; Return value:  Size  Location     Type
  4225 ;;		None               void
  4226 ;; Registers used:
  4227 ;;		wreg, status,2, status,0
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4233 ;;      Params:         0       0       0       0       0
  4234 ;;      Locals:         2       0       0       0       0
  4235 ;;      Temps:          0       0       0       0       0
  4236 ;;      Totals:         2       0       0       0       0
  4237 ;;Total ram usage:        2 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; This function calls:
  4240 ;;		Nothing
  4241 ;; This function is called by:
  4242 ;;		_sprintf
  4243 ;; This function uses a non-reentrant model
  4244 ;;
  4245                           
  4246                           
  4247                           ;psect for function _isdigit
  4248  18C4                     _isdigit:
  4249                           
  4250                           ;incstack = 0
  4251                           ; Regs used in _isdigit: [wreg+status,2+status,0]
  4252                           ;isdigit@c stored from wreg
  4253  18C4  00F1               	movwf	isdigit@c
  4254  18C5                     l2898:
  4255  18C5  01F0               	clrf	_isdigit$1058
  4256  18C6                     l2900:
  4257  18C6  303A               	movlw	58
  4258  18C7  0271               	subwf	isdigit@c,w
  4259  18C8  1803               	skipnc
  4260  18C9  28CB               	goto	u4331
  4261  18CA  28CC               	goto	u4330
  4262  18CB                     u4331:
  4263  18CB  28D4               	goto	l2906
  4264  18CC                     u4330:
  4265  18CC                     l2902:
  4266  18CC  3030               	movlw	48
  4267  18CD  0271               	subwf	isdigit@c,w
  4268  18CE  1C03               	skipc
  4269  18CF  28D1               	goto	u4341
  4270  18D0  28D2               	goto	u4340
  4271  18D1                     u4341:
  4272  18D1  28D4               	goto	l2906
  4273  18D2                     u4340:
  4274  18D2                     l2904:
  4275  18D2  01F0               	clrf	_isdigit$1058
  4276  18D3  0AF0               	incf	_isdigit$1058,f
  4277  18D4                     l2906:
  4278  18D4  0C70               	rrf	_isdigit$1058,w
  4279  18D5                     l882:
  4280  18D5  0008               	return
  4281  18D6                     __end_of_isdigit:
  4282                           
  4283                           	psect	text7
  4284  1DF5                     __ptext7:	
  4285 ;; *************** function _fround *****************
  4286 ;; Defined at:
  4287 ;;		line 417 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
  4288 ;; Parameters:    Size  Location     Type
  4289 ;;  prec            1    wreg     unsigned char 
  4290 ;; Auto vars:     Size  Location     Type
  4291 ;;  prec            1   49[BANK0 ] unsigned char 
  4292 ;; Return value:  Size  Location     Type
  4293 ;;                  4   30[BANK0 ] unsigned char 
  4294 ;; Registers used:
  4295 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  4296 ;; Tracked objects:
  4297 ;;		On entry : 0/0
  4298 ;;		On exit  : 0/0
  4299 ;;		Unchanged: 0/0
  4300 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4301 ;;      Params:         0       4       0       0       0
  4302 ;;      Locals:         0       9       0       0       0
  4303 ;;      Temps:          0       7       0       0       0
  4304 ;;      Totals:         0      20       0       0       0
  4305 ;;Total ram usage:       20 bytes
  4306 ;; Hardware stack levels used:    1
  4307 ;; Hardware stack levels required when called:    2
  4308 ;; This function calls:
  4309 ;;		___flmul
  4310 ;;		___lwdiv
  4311 ;;		___lwmod
  4312 ;; This function is called by:
  4313 ;;		_sprintf
  4314 ;; This function uses a non-reentrant model
  4315 ;;
  4316                           
  4317                           
  4318                           ;psect for function _fround
  4319  1DF5                     _fround:
  4320                           
  4321                           ;incstack = 0
  4322                           ; Regs used in _fround: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  4323                           ;fround@prec stored from wreg
  4324  1DF5  1283               	bcf	3,5	;RP0=0, select bank0
  4325  1DF6  1303               	bcf	3,6	;RP1=0, select bank0
  4326  1DF7  00D1               	movwf	fround@prec
  4327  1DF8                     l2840:
  4328                           
  4329                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 417: fround(unsig
      +                          ned char prec);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 418
      +                          : {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 421:  if(prec>
      +                          =110)
  4330  1DF8  306E               	movlw	110
  4331  1DF9  0251               	subwf	fround@prec,w
  4332  1DFA  1C03               	skipc
  4333  1DFB  2DFD               	goto	u4081
  4334  1DFC  2DFE               	goto	u4080
  4335  1DFD                     u4081:
  4336  1DFD  2F0B               	goto	l2848
  4337  1DFE                     u4080:
  4338  1DFE                     l2842:
  4339                           
  4340                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4341  1DFE  303F               	movlw	63
  4342  1DFF  00A7               	movwf	___flmul@b+3
  4343  1E00  3000               	movlw	0
  4344  1E01  00A6               	movwf	___flmul@b+2
  4345  1E02  3000               	movlw	0
  4346  1E03  00A5               	movwf	___flmul@b+1
  4347  1E04  3000               	movlw	0
  4348  1E05  00A4               	movwf	___flmul@b
  4349  1E06  3064               	movlw	100
  4350  1E07  00F6               	movwf	___lwdiv@divisor
  4351  1E08  3000               	movlw	0
  4352  1E09  00F7               	movwf	___lwdiv@divisor+1
  4353  1E0A  0851               	movf	fround@prec,w
  4354  1E0B  00C2               	movwf	??_fround
  4355  1E0C  01C3               	clrf	??_fround+1
  4356  1E0D  0842               	movf	??_fround,w
  4357  1E0E  00F8               	movwf	___lwdiv@dividend
  4358  1E0F  0843               	movf	??_fround+1,w
  4359  1E10  00F9               	movwf	___lwdiv@dividend+1
  4360  1E11  160A  158A  2274  160A  158A  	fcall	___lwdiv
  4361  1E16  0876               	movf	?___lwdiv,w
  4362  1E17  1283               	bcf	3,5	;RP0=0, select bank0
  4363  1E18  1303               	bcf	3,6	;RP1=0, select bank0
  4364  1E19  00C4               	movwf	??_fround+2
  4365  1E1A  3001               	movlw	1
  4366  1E1B                     u4095:
  4367  1E1B  1003               	clrc
  4368  1E1C  0DC4               	rlf	??_fround+2,f
  4369  1E1D  3EFF               	addlw	-1
  4370  1E1E  1D03               	skipz
  4371  1E1F  2E1B               	goto	u4095
  4372  1E20  1003               	clrc
  4373  1E21  0D44               	rlf	??_fround+2,w
  4374  1E22  3E7D               	addlw	low (((__npowers_-__stringbase)| (0+32768)+72))
  4375  1E23  0084               	movwf	4
  4376  1E24  120A  118A  200D  160A  158A  	fcall	stringdir
  4377  1E29  00C5               	movwf	??_fround+3
  4378  1E2A  120A  118A  200D  160A  158A  	fcall	stringdir
  4379  1E2F  00C6               	movwf	??_fround+4
  4380  1E30  120A  118A  200D  160A  158A  	fcall	stringdir
  4381  1E35  00C7               	movwf	??_fround+5
  4382  1E36  120A  118A  200D  160A  158A  	fcall	stringdir
  4383  1E3B  00C8               	movwf	??_fround+6
  4384  1E3C  0848               	movf	??_fround+6,w
  4385  1E3D  00AB               	movwf	___flmul@a+3
  4386  1E3E  0847               	movf	??_fround+5,w
  4387  1E3F  00AA               	movwf	___flmul@a+2
  4388  1E40  0846               	movf	??_fround+4,w
  4389  1E41  00A9               	movwf	___flmul@a+1
  4390  1E42  0845               	movf	??_fround+3,w
  4391  1E43  00A8               	movwf	___flmul@a
  4392  1E44  120A  158A  249F  160A  158A  	fcall	___flmul
  4393  1E49  1283               	bcf	3,5	;RP0=0, select bank0
  4394  1E4A  1303               	bcf	3,6	;RP1=0, select bank0
  4395  1E4B  0827               	movf	?___flmul+3,w
  4396  1E4C  00D0               	movwf	_fround$1251+3
  4397  1E4D  0826               	movf	?___flmul+2,w
  4398  1E4E  00CF               	movwf	_fround$1251+2
  4399  1E4F  0825               	movf	?___flmul+1,w
  4400  1E50  00CE               	movwf	_fround$1251+1
  4401  1E51  0824               	movf	?___flmul,w
  4402  1E52  00CD               	movwf	_fround$1251
  4403                           
  4404                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4405  1E53  300A               	movlw	10
  4406  1E54  00F6               	movwf	___lwdiv@divisor
  4407  1E55  3000               	movlw	0
  4408  1E56  00F7               	movwf	___lwdiv@divisor+1
  4409  1E57  0851               	movf	fround@prec,w
  4410  1E58  00C2               	movwf	??_fround
  4411  1E59  01C3               	clrf	??_fround+1
  4412  1E5A  0842               	movf	??_fround,w
  4413  1E5B  00F2               	movwf	___lwmod@dividend
  4414  1E5C  0843               	movf	??_fround+1,w
  4415  1E5D  00F3               	movwf	___lwmod@dividend+1
  4416  1E5E  3064               	movlw	100
  4417  1E5F  00F0               	movwf	___lwmod@divisor
  4418  1E60  3000               	movlw	0
  4419  1E61  00F1               	movwf	___lwmod@divisor+1
  4420  1E62  160A  158A  21B7  160A  158A  	fcall	___lwmod
  4421  1E67  0871               	movf	?___lwmod+1,w
  4422  1E68  00F9               	movwf	___lwdiv@dividend+1
  4423  1E69  0870               	movf	?___lwmod,w
  4424  1E6A  00F8               	movwf	___lwdiv@dividend
  4425  1E6B  160A  158A  2274  160A  158A  	fcall	___lwdiv
  4426  1E70  0876               	movf	?___lwdiv,w
  4427  1E71  1283               	bcf	3,5	;RP0=0, select bank0
  4428  1E72  1303               	bcf	3,6	;RP1=0, select bank0
  4429  1E73  00C4               	movwf	??_fround+2
  4430  1E74  3001               	movlw	1
  4431  1E75                     u4105:
  4432  1E75  1003               	clrc
  4433  1E76  0DC4               	rlf	??_fround+2,f
  4434  1E77  3EFF               	addlw	-1
  4435  1E78  1D03               	skipz
  4436  1E79  2E75               	goto	u4105
  4437  1E7A  1003               	clrc
  4438  1E7B  0D44               	rlf	??_fround+2,w
  4439  1E7C  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4440  1E7D  0084               	movwf	4
  4441  1E7E  120A  118A  200D  160A  158A  	fcall	stringdir
  4442  1E83  00C5               	movwf	??_fround+3
  4443  1E84  120A  118A  200D  160A  158A  	fcall	stringdir
  4444  1E89  00C6               	movwf	??_fround+4
  4445  1E8A  120A  118A  200D  160A  158A  	fcall	stringdir
  4446  1E8F  00C7               	movwf	??_fround+5
  4447  1E90  120A  118A  200D  160A  158A  	fcall	stringdir
  4448  1E95  00C8               	movwf	??_fround+6
  4449  1E96  0848               	movf	??_fround+6,w
  4450  1E97  00A7               	movwf	___flmul@b+3
  4451  1E98  0847               	movf	??_fround+5,w
  4452  1E99  00A6               	movwf	___flmul@b+2
  4453  1E9A  0846               	movf	??_fround+4,w
  4454  1E9B  00A5               	movwf	___flmul@b+1
  4455  1E9C  0845               	movf	??_fround+3,w
  4456  1E9D  00A4               	movwf	___flmul@b
  4457  1E9E  0850               	movf	_fround$1251+3,w
  4458  1E9F  00AB               	movwf	___flmul@a+3
  4459  1EA0  084F               	movf	_fround$1251+2,w
  4460  1EA1  00AA               	movwf	___flmul@a+2
  4461  1EA2  084E               	movf	_fround$1251+1,w
  4462  1EA3  00A9               	movwf	___flmul@a+1
  4463  1EA4  084D               	movf	_fround$1251,w
  4464  1EA5  00A8               	movwf	___flmul@a
  4465  1EA6  120A  158A  249F  160A  158A  	fcall	___flmul
  4466  1EAB  1283               	bcf	3,5	;RP0=0, select bank0
  4467  1EAC  1303               	bcf	3,6	;RP1=0, select bank0
  4468  1EAD  0827               	movf	?___flmul+3,w
  4469  1EAE  00CC               	movwf	_fround$1252+3
  4470  1EAF  0826               	movf	?___flmul+2,w
  4471  1EB0  00CB               	movwf	_fround$1252+2
  4472  1EB1  0825               	movf	?___flmul+1,w
  4473  1EB2  00CA               	movwf	_fround$1252+1
  4474  1EB3  0824               	movf	?___flmul,w
  4475  1EB4  00C9               	movwf	_fround$1252
  4476                           
  4477                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 422:   return 0.5
      +                           * _npowers_[prec/100U+18U] * _npowers_[(prec%100U)/10U+9U] * _npowers_[prec%10U];
  4478  1EB5  300A               	movlw	10
  4479  1EB6  00F0               	movwf	___lwmod@divisor
  4480  1EB7  3000               	movlw	0
  4481  1EB8  00F1               	movwf	___lwmod@divisor+1
  4482  1EB9  0851               	movf	fround@prec,w
  4483  1EBA  00C2               	movwf	??_fround
  4484  1EBB  01C3               	clrf	??_fround+1
  4485  1EBC  0842               	movf	??_fround,w
  4486  1EBD  00F2               	movwf	___lwmod@dividend
  4487  1EBE  0843               	movf	??_fround+1,w
  4488  1EBF  00F3               	movwf	___lwmod@dividend+1
  4489  1EC0  160A  158A  21B7  160A  158A  	fcall	___lwmod
  4490  1EC5  0870               	movf	?___lwmod,w
  4491  1EC6  1283               	bcf	3,5	;RP0=0, select bank0
  4492  1EC7  1303               	bcf	3,6	;RP1=0, select bank0
  4493  1EC8  00C4               	movwf	??_fround+2
  4494  1EC9  3001               	movlw	1
  4495  1ECA                     u4115:
  4496  1ECA  1003               	clrc
  4497  1ECB  0DC4               	rlf	??_fround+2,f
  4498  1ECC  3EFF               	addlw	-1
  4499  1ECD  1D03               	skipz
  4500  1ECE  2ECA               	goto	u4115
  4501  1ECF  1003               	clrc
  4502  1ED0  0D44               	rlf	??_fround+2,w
  4503  1ED1  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4504  1ED2  0084               	movwf	4
  4505  1ED3  120A  118A  200D  160A  158A  	fcall	stringdir
  4506  1ED8  00C5               	movwf	??_fround+3
  4507  1ED9  120A  118A  200D  160A  158A  	fcall	stringdir
  4508  1EDE  00C6               	movwf	??_fround+4
  4509  1EDF  120A  118A  200D  160A  158A  	fcall	stringdir
  4510  1EE4  00C7               	movwf	??_fround+5
  4511  1EE5  120A  118A  200D  160A  158A  	fcall	stringdir
  4512  1EEA  00C8               	movwf	??_fround+6
  4513  1EEB  0848               	movf	??_fround+6,w
  4514  1EEC  00A7               	movwf	___flmul@b+3
  4515  1EED  0847               	movf	??_fround+5,w
  4516  1EEE  00A6               	movwf	___flmul@b+2
  4517  1EEF  0846               	movf	??_fround+4,w
  4518  1EF0  00A5               	movwf	___flmul@b+1
  4519  1EF1  0845               	movf	??_fround+3,w
  4520  1EF2  00A4               	movwf	___flmul@b
  4521  1EF3  084C               	movf	_fround$1252+3,w
  4522  1EF4  00AB               	movwf	___flmul@a+3
  4523  1EF5  084B               	movf	_fround$1252+2,w
  4524  1EF6  00AA               	movwf	___flmul@a+2
  4525  1EF7  084A               	movf	_fround$1252+1,w
  4526  1EF8  00A9               	movwf	___flmul@a+1
  4527  1EF9  0849               	movf	_fround$1252,w
  4528  1EFA  00A8               	movwf	___flmul@a
  4529  1EFB  120A  158A  249F  160A  158A  	fcall	___flmul
  4530  1F00  1283               	bcf	3,5	;RP0=0, select bank0
  4531  1F01  1303               	bcf	3,6	;RP1=0, select bank0
  4532  1F02  0827               	movf	?___flmul+3,w
  4533  1F03  00C1               	movwf	?_fround+3
  4534  1F04  0826               	movf	?___flmul+2,w
  4535  1F05  00C0               	movwf	?_fround+2
  4536  1F06  0825               	movf	?___flmul+1,w
  4537  1F07  00BF               	movwf	?_fround+1
  4538  1F08  0824               	movf	?___flmul,w
  4539  1F09  00BE               	movwf	?_fround
  4540  1F0A  2FFF               	goto	l292
  4541  1F0B                     l2848:
  4542  1F0B  300B               	movlw	11
  4543  1F0C  0251               	subwf	fround@prec,w
  4544  1F0D  1C03               	skipc
  4545  1F0E  2F10               	goto	u4121
  4546  1F0F  2F11               	goto	u4120
  4547  1F10                     u4121:
  4548  1F10  2FBC               	goto	l2854
  4549  1F11                     u4120:
  4550  1F11                     l2850:
  4551                           
  4552                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4553  1F11  303F               	movlw	63
  4554  1F12  00A7               	movwf	___flmul@b+3
  4555  1F13  3000               	movlw	0
  4556  1F14  00A6               	movwf	___flmul@b+2
  4557  1F15  3000               	movlw	0
  4558  1F16  00A5               	movwf	___flmul@b+1
  4559  1F17  3000               	movlw	0
  4560  1F18  00A4               	movwf	___flmul@b
  4561  1F19  300A               	movlw	10
  4562  1F1A  00F6               	movwf	___lwdiv@divisor
  4563  1F1B  3000               	movlw	0
  4564  1F1C  00F7               	movwf	___lwdiv@divisor+1
  4565  1F1D  0851               	movf	fround@prec,w
  4566  1F1E  00C2               	movwf	??_fround
  4567  1F1F  01C3               	clrf	??_fround+1
  4568  1F20  0842               	movf	??_fround,w
  4569  1F21  00F8               	movwf	___lwdiv@dividend
  4570  1F22  0843               	movf	??_fround+1,w
  4571  1F23  00F9               	movwf	___lwdiv@dividend+1
  4572  1F24  160A  158A  2274  160A  158A  	fcall	___lwdiv
  4573  1F29  0876               	movf	?___lwdiv,w
  4574  1F2A  1283               	bcf	3,5	;RP0=0, select bank0
  4575  1F2B  1303               	bcf	3,6	;RP1=0, select bank0
  4576  1F2C  00C4               	movwf	??_fround+2
  4577  1F2D  3001               	movlw	1
  4578  1F2E                     u4135:
  4579  1F2E  1003               	clrc
  4580  1F2F  0DC4               	rlf	??_fround+2,f
  4581  1F30  3EFF               	addlw	-1
  4582  1F31  1D03               	skipz
  4583  1F32  2F2E               	goto	u4135
  4584  1F33  1003               	clrc
  4585  1F34  0D44               	rlf	??_fround+2,w
  4586  1F35  3E59               	addlw	low (((__npowers_-__stringbase)| (0+32768)+36))
  4587  1F36  0084               	movwf	4
  4588  1F37  120A  118A  200D  160A  158A  	fcall	stringdir
  4589  1F3C  00C5               	movwf	??_fround+3
  4590  1F3D  120A  118A  200D  160A  158A  	fcall	stringdir
  4591  1F42  00C6               	movwf	??_fround+4
  4592  1F43  120A  118A  200D  160A  158A  	fcall	stringdir
  4593  1F48  00C7               	movwf	??_fround+5
  4594  1F49  120A  118A  200D  160A  158A  	fcall	stringdir
  4595  1F4E  00C8               	movwf	??_fround+6
  4596  1F4F  0848               	movf	??_fround+6,w
  4597  1F50  00AB               	movwf	___flmul@a+3
  4598  1F51  0847               	movf	??_fround+5,w
  4599  1F52  00AA               	movwf	___flmul@a+2
  4600  1F53  0846               	movf	??_fround+4,w
  4601  1F54  00A9               	movwf	___flmul@a+1
  4602  1F55  0845               	movf	??_fround+3,w
  4603  1F56  00A8               	movwf	___flmul@a
  4604  1F57  120A  158A  249F  160A  158A  	fcall	___flmul
  4605  1F5C  1283               	bcf	3,5	;RP0=0, select bank0
  4606  1F5D  1303               	bcf	3,6	;RP1=0, select bank0
  4607  1F5E  0827               	movf	?___flmul+3,w
  4608  1F5F  00D0               	movwf	_fround$1251+3
  4609  1F60  0826               	movf	?___flmul+2,w
  4610  1F61  00CF               	movwf	_fround$1251+2
  4611  1F62  0825               	movf	?___flmul+1,w
  4612  1F63  00CE               	movwf	_fround$1251+1
  4613  1F64  0824               	movf	?___flmul,w
  4614  1F65  00CD               	movwf	_fround$1251
  4615                           
  4616                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 424:   return 0.5
      +                           * _npowers_[prec/10U+9U] * _npowers_[prec%10U];
  4617  1F66  300A               	movlw	10
  4618  1F67  00F0               	movwf	___lwmod@divisor
  4619  1F68  3000               	movlw	0
  4620  1F69  00F1               	movwf	___lwmod@divisor+1
  4621  1F6A  0851               	movf	fround@prec,w
  4622  1F6B  00C2               	movwf	??_fround
  4623  1F6C  01C3               	clrf	??_fround+1
  4624  1F6D  0842               	movf	??_fround,w
  4625  1F6E  00F2               	movwf	___lwmod@dividend
  4626  1F6F  0843               	movf	??_fround+1,w
  4627  1F70  00F3               	movwf	___lwmod@dividend+1
  4628  1F71  160A  158A  21B7  160A  158A  	fcall	___lwmod
  4629  1F76  0870               	movf	?___lwmod,w
  4630  1F77  1283               	bcf	3,5	;RP0=0, select bank0
  4631  1F78  1303               	bcf	3,6	;RP1=0, select bank0
  4632  1F79  00C4               	movwf	??_fround+2
  4633  1F7A  3001               	movlw	1
  4634  1F7B                     u4145:
  4635  1F7B  1003               	clrc
  4636  1F7C  0DC4               	rlf	??_fround+2,f
  4637  1F7D  3EFF               	addlw	-1
  4638  1F7E  1D03               	skipz
  4639  1F7F  2F7B               	goto	u4145
  4640  1F80  1003               	clrc
  4641  1F81  0D44               	rlf	??_fround+2,w
  4642  1F82  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4643  1F83  0084               	movwf	4
  4644  1F84  120A  118A  200D  160A  158A  	fcall	stringdir
  4645  1F89  00C5               	movwf	??_fround+3
  4646  1F8A  120A  118A  200D  160A  158A  	fcall	stringdir
  4647  1F8F  00C6               	movwf	??_fround+4
  4648  1F90  120A  118A  200D  160A  158A  	fcall	stringdir
  4649  1F95  00C7               	movwf	??_fround+5
  4650  1F96  120A  118A  200D  160A  158A  	fcall	stringdir
  4651  1F9B  00C8               	movwf	??_fround+6
  4652  1F9C  0848               	movf	??_fround+6,w
  4653  1F9D  00A7               	movwf	___flmul@b+3
  4654  1F9E  0847               	movf	??_fround+5,w
  4655  1F9F  00A6               	movwf	___flmul@b+2
  4656  1FA0  0846               	movf	??_fround+4,w
  4657  1FA1  00A5               	movwf	___flmul@b+1
  4658  1FA2  0845               	movf	??_fround+3,w
  4659  1FA3  00A4               	movwf	___flmul@b
  4660  1FA4  0850               	movf	_fround$1251+3,w
  4661  1FA5  00AB               	movwf	___flmul@a+3
  4662  1FA6  084F               	movf	_fround$1251+2,w
  4663  1FA7  00AA               	movwf	___flmul@a+2
  4664  1FA8  084E               	movf	_fround$1251+1,w
  4665  1FA9  00A9               	movwf	___flmul@a+1
  4666  1FAA  084D               	movf	_fround$1251,w
  4667  1FAB  00A8               	movwf	___flmul@a
  4668  1FAC  120A  158A  249F  160A  158A  	fcall	___flmul
  4669  1FB1  1283               	bcf	3,5	;RP0=0, select bank0
  4670  1FB2  1303               	bcf	3,6	;RP1=0, select bank0
  4671  1FB3  0827               	movf	?___flmul+3,w
  4672  1FB4  00C1               	movwf	?_fround+3
  4673  1FB5  0826               	movf	?___flmul+2,w
  4674  1FB6  00C0               	movwf	?_fround+2
  4675  1FB7  0825               	movf	?___flmul+1,w
  4676  1FB8  00BF               	movwf	?_fround+1
  4677  1FB9  0824               	movf	?___flmul,w
  4678  1FBA  00BE               	movwf	?_fround
  4679  1FBB  2FFF               	goto	l292
  4680  1FBC                     l2854:
  4681                           
  4682                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 425:  return 0.5 
      +                          * _npowers_[prec];
  4683  1FBC  303F               	movlw	63
  4684  1FBD  00A7               	movwf	___flmul@b+3
  4685  1FBE  3000               	movlw	0
  4686  1FBF  00A6               	movwf	___flmul@b+2
  4687  1FC0  3000               	movlw	0
  4688  1FC1  00A5               	movwf	___flmul@b+1
  4689  1FC2  3000               	movlw	0
  4690  1FC3  00A4               	movwf	___flmul@b
  4691  1FC4  0851               	movf	fround@prec,w
  4692  1FC5  00C2               	movwf	??_fround
  4693  1FC6  3001               	movlw	1
  4694  1FC7                     u4155:
  4695  1FC7  1003               	clrc
  4696  1FC8  0DC2               	rlf	??_fround,f
  4697  1FC9  3EFF               	addlw	-1
  4698  1FCA  1D03               	skipz
  4699  1FCB  2FC7               	goto	u4155
  4700  1FCC  1003               	clrc
  4701  1FCD  0D42               	rlf	??_fround,w
  4702  1FCE  3E35               	addlw	low ((__npowers_-__stringbase)| (0+32768))
  4703  1FCF  0084               	movwf	4
  4704  1FD0  120A  118A  200D  160A  158A  	fcall	stringdir
  4705  1FD5  00C3               	movwf	??_fround+1
  4706  1FD6  120A  118A  200D  160A  158A  	fcall	stringdir
  4707  1FDB  00C4               	movwf	??_fround+2
  4708  1FDC  120A  118A  200D  160A  158A  	fcall	stringdir
  4709  1FE1  00C5               	movwf	??_fround+3
  4710  1FE2  120A  118A  200D  160A  158A  	fcall	stringdir
  4711  1FE7  00C6               	movwf	??_fround+4
  4712  1FE8  0846               	movf	??_fround+4,w
  4713  1FE9  00AB               	movwf	___flmul@a+3
  4714  1FEA  0845               	movf	??_fround+3,w
  4715  1FEB  00AA               	movwf	___flmul@a+2
  4716  1FEC  0844               	movf	??_fround+2,w
  4717  1FED  00A9               	movwf	___flmul@a+1
  4718  1FEE  0843               	movf	??_fround+1,w
  4719  1FEF  00A8               	movwf	___flmul@a
  4720  1FF0  120A  158A  249F  160A  158A  	fcall	___flmul
  4721  1FF5  1283               	bcf	3,5	;RP0=0, select bank0
  4722  1FF6  1303               	bcf	3,6	;RP1=0, select bank0
  4723  1FF7  0827               	movf	?___flmul+3,w
  4724  1FF8  00C1               	movwf	?_fround+3
  4725  1FF9  0826               	movf	?___flmul+2,w
  4726  1FFA  00C0               	movwf	?_fround+2
  4727  1FFB  0825               	movf	?___flmul+1,w
  4728  1FFC  00BF               	movwf	?_fround+1
  4729  1FFD  0824               	movf	?___flmul,w
  4730  1FFE  00BE               	movwf	?_fround
  4731  1FFF                     l292:
  4732  1FFF  0008               	return
  4733  2000                     __end_of_fround:
  4734                           
  4735                           	psect	text8
  4736  19B7                     __ptext8:	
  4737 ;; *************** function ___lwmod *****************
  4738 ;; Defined at:
  4739 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwmod.c"
  4740 ;; Parameters:    Size  Location     Type
  4741 ;;  divisor         2    0[COMMON] unsigned int 
  4742 ;;  dividend        2    2[COMMON] unsigned int 
  4743 ;; Auto vars:     Size  Location     Type
  4744 ;;  counter         1    5[COMMON] unsigned char 
  4745 ;; Return value:  Size  Location     Type
  4746 ;;                  2    0[COMMON] unsigned int 
  4747 ;; Registers used:
  4748 ;;		wreg, status,2, status,0
  4749 ;; Tracked objects:
  4750 ;;		On entry : 0/0
  4751 ;;		On exit  : 0/0
  4752 ;;		Unchanged: 0/0
  4753 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4754 ;;      Params:         4       0       0       0       0
  4755 ;;      Locals:         1       0       0       0       0
  4756 ;;      Temps:          1       0       0       0       0
  4757 ;;      Totals:         6       0       0       0       0
  4758 ;;Total ram usage:        6 bytes
  4759 ;; Hardware stack levels used:    1
  4760 ;; This function calls:
  4761 ;;		Nothing
  4762 ;; This function is called by:
  4763 ;;		_fround
  4764 ;; This function uses a non-reentrant model
  4765 ;;
  4766                           
  4767                           
  4768                           ;psect for function ___lwmod
  4769  19B7                     ___lwmod:
  4770  19B7                     l2460:	
  4771                           ;incstack = 0
  4772                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  4773                           
  4774  19B7  0870               	movf	___lwmod@divisor,w
  4775  19B8  0471               	iorwf	___lwmod@divisor+1,w
  4776  19B9  1903               	btfsc	3,2
  4777  19BA  29BC               	goto	u3181
  4778  19BB  29BD               	goto	u3180
  4779  19BC                     u3181:
  4780  19BC  29EC               	goto	l2478
  4781  19BD                     u3180:
  4782  19BD                     l2462:
  4783  19BD  01F5               	clrf	___lwmod@counter
  4784  19BE  0AF5               	incf	___lwmod@counter,f
  4785  19BF  29CB               	goto	l2468
  4786  19C0                     l2464:
  4787  19C0  3001               	movlw	1
  4788  19C1                     u3195:
  4789  19C1  1003               	clrc
  4790  19C2  0DF0               	rlf	___lwmod@divisor,f
  4791  19C3  0DF1               	rlf	___lwmod@divisor+1,f
  4792  19C4  3EFF               	addlw	-1
  4793  19C5  1D03               	skipz
  4794  19C6  29C1               	goto	u3195
  4795  19C7                     l2466:
  4796  19C7  3001               	movlw	1
  4797  19C8  00F4               	movwf	??___lwmod
  4798  19C9  0874               	movf	??___lwmod,w
  4799  19CA  07F5               	addwf	___lwmod@counter,f
  4800  19CB                     l2468:
  4801  19CB  1FF1               	btfss	___lwmod@divisor+1,7
  4802  19CC  29CE               	goto	u3201
  4803  19CD  29CF               	goto	u3200
  4804  19CE                     u3201:
  4805  19CE  29C0               	goto	l2464
  4806  19CF                     u3200:
  4807  19CF                     l2470:
  4808  19CF  0871               	movf	___lwmod@divisor+1,w
  4809  19D0  0273               	subwf	___lwmod@dividend+1,w
  4810  19D1  1D03               	skipz
  4811  19D2  29D5               	goto	u3215
  4812  19D3  0870               	movf	___lwmod@divisor,w
  4813  19D4  0272               	subwf	___lwmod@dividend,w
  4814  19D5                     u3215:
  4815  19D5  1C03               	skipc
  4816  19D6  29D8               	goto	u3211
  4817  19D7  29D9               	goto	u3210
  4818  19D8                     u3211:
  4819  19D8  29DF               	goto	l2474
  4820  19D9                     u3210:
  4821  19D9                     l2472:
  4822  19D9  0870               	movf	___lwmod@divisor,w
  4823  19DA  02F2               	subwf	___lwmod@dividend,f
  4824  19DB  0871               	movf	___lwmod@divisor+1,w
  4825  19DC  1C03               	skipc
  4826  19DD  03F3               	decf	___lwmod@dividend+1,f
  4827  19DE  02F3               	subwf	___lwmod@dividend+1,f
  4828  19DF                     l2474:
  4829  19DF  3001               	movlw	1
  4830  19E0                     u3225:
  4831  19E0  1003               	clrc
  4832  19E1  0CF1               	rrf	___lwmod@divisor+1,f
  4833  19E2  0CF0               	rrf	___lwmod@divisor,f
  4834  19E3  3EFF               	addlw	-1
  4835  19E4  1D03               	skipz
  4836  19E5  29E0               	goto	u3225
  4837  19E6                     l2476:
  4838  19E6  3001               	movlw	1
  4839  19E7  02F5               	subwf	___lwmod@counter,f
  4840  19E8  1D03               	btfss	3,2
  4841  19E9  29EB               	goto	u3231
  4842  19EA  29EC               	goto	u3230
  4843  19EB                     u3231:
  4844  19EB  29CF               	goto	l2470
  4845  19EC                     u3230:
  4846  19EC                     l2478:
  4847  19EC  0873               	movf	___lwmod@dividend+1,w
  4848  19ED  00F1               	movwf	?___lwmod+1
  4849  19EE  0872               	movf	___lwmod@dividend,w
  4850  19EF  00F0               	movwf	?___lwmod
  4851  19F0                     l711:
  4852  19F0  0008               	return
  4853  19F1                     __end_of___lwmod:
  4854                           
  4855                           	psect	text9
  4856  1A74                     __ptext9:	
  4857 ;; *************** function ___lwdiv *****************
  4858 ;; Defined at:
  4859 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\lwdiv.c"
  4860 ;; Parameters:    Size  Location     Type
  4861 ;;  divisor         2    6[COMMON] unsigned int 
  4862 ;;  dividend        2    8[COMMON] unsigned int 
  4863 ;; Auto vars:     Size  Location     Type
  4864 ;;  quotient        2   11[COMMON] unsigned int 
  4865 ;;  counter         1   13[COMMON] unsigned char 
  4866 ;; Return value:  Size  Location     Type
  4867 ;;                  2    6[COMMON] unsigned int 
  4868 ;; Registers used:
  4869 ;;		wreg, status,2, status,0
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4875 ;;      Params:         4       0       0       0       0
  4876 ;;      Locals:         3       0       0       0       0
  4877 ;;      Temps:          1       0       0       0       0
  4878 ;;      Totals:         8       0       0       0       0
  4879 ;;Total ram usage:        8 bytes
  4880 ;; Hardware stack levels used:    1
  4881 ;; This function calls:
  4882 ;;		Nothing
  4883 ;; This function is called by:
  4884 ;;		_fround
  4885 ;; This function uses a non-reentrant model
  4886 ;;
  4887                           
  4888                           
  4889                           ;psect for function ___lwdiv
  4890  1A74                     ___lwdiv:
  4891  1A74                     l2434:	
  4892                           ;incstack = 0
  4893                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  4894                           
  4895  1A74  01FB               	clrf	___lwdiv@quotient
  4896  1A75  01FC               	clrf	___lwdiv@quotient+1
  4897  1A76                     l2436:
  4898  1A76  0876               	movf	___lwdiv@divisor,w
  4899  1A77  0477               	iorwf	___lwdiv@divisor+1,w
  4900  1A78  1903               	btfsc	3,2
  4901  1A79  2A7B               	goto	u3111
  4902  1A7A  2A7C               	goto	u3110
  4903  1A7B                     u3111:
  4904  1A7B  2AB3               	goto	l2456
  4905  1A7C                     u3110:
  4906  1A7C                     l2438:
  4907  1A7C  01FD               	clrf	___lwdiv@counter
  4908  1A7D  0AFD               	incf	___lwdiv@counter,f
  4909  1A7E  2A8A               	goto	l2444
  4910  1A7F                     l2440:
  4911  1A7F  3001               	movlw	1
  4912  1A80                     u3125:
  4913  1A80  1003               	clrc
  4914  1A81  0DF6               	rlf	___lwdiv@divisor,f
  4915  1A82  0DF7               	rlf	___lwdiv@divisor+1,f
  4916  1A83  3EFF               	addlw	-1
  4917  1A84  1D03               	skipz
  4918  1A85  2A80               	goto	u3125
  4919  1A86                     l2442:
  4920  1A86  3001               	movlw	1
  4921  1A87  00FA               	movwf	??___lwdiv
  4922  1A88  087A               	movf	??___lwdiv,w
  4923  1A89  07FD               	addwf	___lwdiv@counter,f
  4924  1A8A                     l2444:
  4925  1A8A  1FF7               	btfss	___lwdiv@divisor+1,7
  4926  1A8B  2A8D               	goto	u3131
  4927  1A8C  2A8E               	goto	u3130
  4928  1A8D                     u3131:
  4929  1A8D  2A7F               	goto	l2440
  4930  1A8E                     u3130:
  4931  1A8E                     l2446:
  4932  1A8E  3001               	movlw	1
  4933  1A8F                     u3145:
  4934  1A8F  1003               	clrc
  4935  1A90  0DFB               	rlf	___lwdiv@quotient,f
  4936  1A91  0DFC               	rlf	___lwdiv@quotient+1,f
  4937  1A92  3EFF               	addlw	-1
  4938  1A93  1D03               	skipz
  4939  1A94  2A8F               	goto	u3145
  4940  1A95  0877               	movf	___lwdiv@divisor+1,w
  4941  1A96  0279               	subwf	___lwdiv@dividend+1,w
  4942  1A97  1D03               	skipz
  4943  1A98  2A9B               	goto	u3155
  4944  1A99  0876               	movf	___lwdiv@divisor,w
  4945  1A9A  0278               	subwf	___lwdiv@dividend,w
  4946  1A9B                     u3155:
  4947  1A9B  1C03               	skipc
  4948  1A9C  2A9E               	goto	u3151
  4949  1A9D  2A9F               	goto	u3150
  4950  1A9E                     u3151:
  4951  1A9E  2AA6               	goto	l2452
  4952  1A9F                     u3150:
  4953  1A9F                     l2448:
  4954  1A9F  0876               	movf	___lwdiv@divisor,w
  4955  1AA0  02F8               	subwf	___lwdiv@dividend,f
  4956  1AA1  0877               	movf	___lwdiv@divisor+1,w
  4957  1AA2  1C03               	skipc
  4958  1AA3  03F9               	decf	___lwdiv@dividend+1,f
  4959  1AA4  02F9               	subwf	___lwdiv@dividend+1,f
  4960  1AA5                     l2450:
  4961  1AA5  147B               	bsf	___lwdiv@quotient,0
  4962  1AA6                     l2452:
  4963  1AA6  3001               	movlw	1
  4964  1AA7                     u3165:
  4965  1AA7  1003               	clrc
  4966  1AA8  0CF7               	rrf	___lwdiv@divisor+1,f
  4967  1AA9  0CF6               	rrf	___lwdiv@divisor,f
  4968  1AAA  3EFF               	addlw	-1
  4969  1AAB  1D03               	skipz
  4970  1AAC  2AA7               	goto	u3165
  4971  1AAD                     l2454:
  4972  1AAD  3001               	movlw	1
  4973  1AAE  02FD               	subwf	___lwdiv@counter,f
  4974  1AAF  1D03               	btfss	3,2
  4975  1AB0  2AB2               	goto	u3171
  4976  1AB1  2AB3               	goto	u3170
  4977  1AB2                     u3171:
  4978  1AB2  2A8E               	goto	l2446
  4979  1AB3                     u3170:
  4980  1AB3                     l2456:
  4981  1AB3  087C               	movf	___lwdiv@quotient+1,w
  4982  1AB4  00F7               	movwf	?___lwdiv+1
  4983  1AB5  087B               	movf	___lwdiv@quotient,w
  4984  1AB6  00F6               	movwf	?___lwdiv
  4985  1AB7                     l701:
  4986  1AB7  0008               	return
  4987  1AB8                     __end_of___lwdiv:
  4988                           
  4989                           	psect	text10
  4990  0C9F                     __ptext10:	
  4991 ;; *************** function ___flmul *****************
  4992 ;; Defined at:
  4993 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcmul.c"
  4994 ;; Parameters:    Size  Location     Type
  4995 ;;  b               4    4[BANK0 ] unsigned int 
  4996 ;;  a               4    8[BANK0 ] unsigned int 
  4997 ;; Auto vars:     Size  Location     Type
  4998 ;;  prod            4   24[BANK0 ] struct .
  4999 ;;  grs             4   18[BANK0 ] unsigned long 
  5000 ;;  temp            2   28[BANK0 ] struct .
  5001 ;;  bexp            1   23[BANK0 ] unsigned char 
  5002 ;;  aexp            1   22[BANK0 ] unsigned char 
  5003 ;;  sign            1   17[BANK0 ] unsigned char 
  5004 ;; Return value:  Size  Location     Type
  5005 ;;                  4    4[BANK0 ] unsigned char 
  5006 ;; Registers used:
  5007 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  5008 ;; Tracked objects:
  5009 ;;		On entry : 0/0
  5010 ;;		On exit  : 0/0
  5011 ;;		Unchanged: 0/0
  5012 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5013 ;;      Params:         0       8       0       0       0
  5014 ;;      Locals:         0      13       0       0       0
  5015 ;;      Temps:          0       5       0       0       0
  5016 ;;      Totals:         0      26       0       0       0
  5017 ;;Total ram usage:       26 bytes
  5018 ;; Hardware stack levels used:    1
  5019 ;; Hardware stack levels required when called:    1
  5020 ;; This function calls:
  5021 ;;		__Umul8_16
  5022 ;; This function is called by:
  5023 ;;		_main
  5024 ;;		_fround
  5025 ;;		_scale
  5026 ;;		_sprintf
  5027 ;; This function uses a non-reentrant model
  5028 ;;
  5029                           
  5030                           
  5031                           ;psect for function ___flmul
  5032  0C9F                     ___flmul:
  5033  0C9F                     l2676:	
  5034                           ;incstack = 0
  5035                           ; Regs used in ___flmul: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  5036                           
  5037  0C9F  1283               	bcf	3,5	;RP0=0, select bank0
  5038  0CA0  1303               	bcf	3,6	;RP1=0, select bank0
  5039  0CA1  0827               	movf	___flmul@b+3,w
  5040  0CA2  3980               	andlw	128
  5041  0CA3  00AC               	movwf	??___flmul
  5042  0CA4  082C               	movf	??___flmul,w
  5043  0CA5  00B1               	movwf	___flmul@sign
  5044  0CA6                     l2678:
  5045  0CA6  0827               	movf	___flmul@b+3,w
  5046  0CA7  00AC               	movwf	??___flmul
  5047  0CA8  072C               	addwf	??___flmul,w
  5048  0CA9  00AD               	movwf	??___flmul+1
  5049  0CAA  082D               	movf	??___flmul+1,w
  5050  0CAB  00B7               	movwf	___flmul@bexp
  5051  0CAC                     l2680:
  5052  0CAC  1FA6               	btfss	___flmul@b+2,7
  5053  0CAD  2CAF               	goto	u3701
  5054  0CAE  2CB0               	goto	u3700
  5055  0CAF                     u3701:
  5056  0CAF  2CB1               	goto	l2684
  5057  0CB0                     u3700:
  5058  0CB0                     l2682:
  5059  0CB0  1437               	bsf	___flmul@bexp,0
  5060  0CB1                     l2684:
  5061  0CB1  0837               	movf	___flmul@bexp,w
  5062  0CB2  1903               	btfsc	3,2
  5063  0CB3  2CB5               	goto	u3711
  5064  0CB4  2CB6               	goto	u3710
  5065  0CB5                     u3711:
  5066  0CB5  2CC5               	goto	l2692
  5067  0CB6                     u3710:
  5068  0CB6                     l2686:
  5069  0CB6  0A37               	incf	___flmul@bexp,w
  5070  0CB7  1D03               	btfss	3,2
  5071  0CB8  2CBA               	goto	u3721
  5072  0CB9  2CBB               	goto	u3720
  5073  0CBA                     u3721:
  5074  0CBA  2CC3               	goto	l2690
  5075  0CBB                     u3720:
  5076  0CBB                     l2688:
  5077  0CBB  3000               	movlw	0
  5078  0CBC  00A7               	movwf	___flmul@b+3
  5079  0CBD  3000               	movlw	0
  5080  0CBE  00A6               	movwf	___flmul@b+2
  5081  0CBF  3000               	movlw	0
  5082  0CC0  00A5               	movwf	___flmul@b+1
  5083  0CC1  3000               	movlw	0
  5084  0CC2  00A4               	movwf	___flmul@b
  5085  0CC3                     l2690:
  5086  0CC3  17A6               	bsf	___flmul@b+2,7
  5087  0CC4  2CCD               	goto	l2694
  5088  0CC5                     l2692:
  5089  0CC5  3000               	movlw	0
  5090  0CC6  00A7               	movwf	___flmul@b+3
  5091  0CC7  3000               	movlw	0
  5092  0CC8  00A6               	movwf	___flmul@b+2
  5093  0CC9  3000               	movlw	0
  5094  0CCA  00A5               	movwf	___flmul@b+1
  5095  0CCB  3000               	movlw	0
  5096  0CCC  00A4               	movwf	___flmul@b
  5097  0CCD                     l2694:
  5098  0CCD  082B               	movf	___flmul@a+3,w
  5099  0CCE  3980               	andlw	128
  5100  0CCF  00AC               	movwf	??___flmul
  5101  0CD0  082C               	movf	??___flmul,w
  5102  0CD1  06B1               	xorwf	___flmul@sign,f
  5103  0CD2                     l2696:
  5104  0CD2  082B               	movf	___flmul@a+3,w
  5105  0CD3  00AC               	movwf	??___flmul
  5106  0CD4  072C               	addwf	??___flmul,w
  5107  0CD5  00AD               	movwf	??___flmul+1
  5108  0CD6  082D               	movf	??___flmul+1,w
  5109  0CD7  00B6               	movwf	___flmul@aexp
  5110  0CD8                     l2698:
  5111  0CD8  1FAA               	btfss	___flmul@a+2,7
  5112  0CD9  2CDB               	goto	u3731
  5113  0CDA  2CDC               	goto	u3730
  5114  0CDB                     u3731:
  5115  0CDB  2CDD               	goto	l2702
  5116  0CDC                     u3730:
  5117  0CDC                     l2700:
  5118  0CDC  1436               	bsf	___flmul@aexp,0
  5119  0CDD                     l2702:
  5120  0CDD  0836               	movf	___flmul@aexp,w
  5121  0CDE  1903               	btfsc	3,2
  5122  0CDF  2CE1               	goto	u3741
  5123  0CE0  2CE2               	goto	u3740
  5124  0CE1                     u3741:
  5125  0CE1  2CF1               	goto	l2710
  5126  0CE2                     u3740:
  5127  0CE2                     l2704:
  5128  0CE2  0A36               	incf	___flmul@aexp,w
  5129  0CE3  1D03               	btfss	3,2
  5130  0CE4  2CE6               	goto	u3751
  5131  0CE5  2CE7               	goto	u3750
  5132  0CE6                     u3751:
  5133  0CE6  2CEF               	goto	l2708
  5134  0CE7                     u3750:
  5135  0CE7                     l2706:
  5136  0CE7  3000               	movlw	0
  5137  0CE8  00AB               	movwf	___flmul@a+3
  5138  0CE9  3000               	movlw	0
  5139  0CEA  00AA               	movwf	___flmul@a+2
  5140  0CEB  3000               	movlw	0
  5141  0CEC  00A9               	movwf	___flmul@a+1
  5142  0CED  3000               	movlw	0
  5143  0CEE  00A8               	movwf	___flmul@a
  5144  0CEF                     l2708:
  5145  0CEF  17AA               	bsf	___flmul@a+2,7
  5146  0CF0  2CF9               	goto	l2712
  5147  0CF1                     l2710:
  5148  0CF1  3000               	movlw	0
  5149  0CF2  00AB               	movwf	___flmul@a+3
  5150  0CF3  3000               	movlw	0
  5151  0CF4  00AA               	movwf	___flmul@a+2
  5152  0CF5  3000               	movlw	0
  5153  0CF6  00A9               	movwf	___flmul@a+1
  5154  0CF7  3000               	movlw	0
  5155  0CF8  00A8               	movwf	___flmul@a
  5156  0CF9                     l2712:
  5157  0CF9  0836               	movf	___flmul@aexp,w
  5158  0CFA  1903               	btfsc	3,2
  5159  0CFB  2CFD               	goto	u3761
  5160  0CFC  2CFE               	goto	u3760
  5161  0CFD                     u3761:
  5162  0CFD  2D03               	goto	l2716
  5163  0CFE                     u3760:
  5164  0CFE                     l2714:
  5165  0CFE  0837               	movf	___flmul@bexp,w
  5166  0CFF  1D03               	btfss	3,2
  5167  0D00  2D02               	goto	u3771
  5168  0D01  2D03               	goto	u3770
  5169  0D02                     u3771:
  5170  0D02  2D0C               	goto	l2720
  5171  0D03                     u3770:
  5172  0D03                     l2716:
  5173  0D03  3000               	movlw	0
  5174  0D04  00A7               	movwf	?___flmul+3
  5175  0D05  3000               	movlw	0
  5176  0D06  00A6               	movwf	?___flmul+2
  5177  0D07  3000               	movlw	0
  5178  0D08  00A5               	movwf	?___flmul+1
  5179  0D09  3000               	movlw	0
  5180  0D0A  00A4               	movwf	?___flmul
  5181  0D0B  2FFF               	goto	l818
  5182  0D0C                     l2720:
  5183  0D0C  0824               	movf	___flmul@b,w
  5184  0D0D  00AC               	movwf	??___flmul
  5185  0D0E  082C               	movf	??___flmul,w
  5186  0D0F  00F0               	movwf	__Umul8_16@multiplicand
  5187  0D10  082A               	movf	___flmul@a+2,w
  5188  0D11  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5189  0D16  0871               	movf	?__Umul8_16+1,w
  5190  0D17  1283               	bcf	3,5	;RP0=0, select bank0
  5191  0D18  1303               	bcf	3,6	;RP1=0, select bank0
  5192  0D19  00BD               	movwf	___flmul@temp+1
  5193  0D1A  0870               	movf	?__Umul8_16,w
  5194  0D1B  00BC               	movwf	___flmul@temp
  5195  0D1C                     l2722:
  5196  0D1C  083C               	movf	___flmul@temp,w
  5197  0D1D  00AC               	movwf	??___flmul
  5198  0D1E  01AD               	clrf	??___flmul+1
  5199  0D1F  01AE               	clrf	??___flmul+2
  5200  0D20  01AF               	clrf	??___flmul+3
  5201  0D21  082F               	movf	??___flmul+3,w
  5202  0D22  00B5               	movwf	___flmul@grs+3
  5203  0D23  082E               	movf	??___flmul+2,w
  5204  0D24  00B4               	movwf	___flmul@grs+2
  5205  0D25  082D               	movf	??___flmul+1,w
  5206  0D26  00B3               	movwf	___flmul@grs+1
  5207  0D27  082C               	movf	??___flmul,w
  5208  0D28  00B2               	movwf	___flmul@grs
  5209  0D29                     l2724:
  5210  0D29  083D               	movf	___flmul@temp+1,w
  5211  0D2A  00AC               	movwf	??___flmul
  5212  0D2B  01AD               	clrf	??___flmul+1
  5213  0D2C  01AE               	clrf	??___flmul+2
  5214  0D2D  01AF               	clrf	??___flmul+3
  5215  0D2E  082F               	movf	??___flmul+3,w
  5216  0D2F  00BB               	movwf	___flmul@prod+3
  5217  0D30  082E               	movf	??___flmul+2,w
  5218  0D31  00BA               	movwf	___flmul@prod+2
  5219  0D32  082D               	movf	??___flmul+1,w
  5220  0D33  00B9               	movwf	___flmul@prod+1
  5221  0D34  082C               	movf	??___flmul,w
  5222  0D35  00B8               	movwf	___flmul@prod
  5223  0D36  0825               	movf	___flmul@b+1,w
  5224  0D37  00AC               	movwf	??___flmul
  5225  0D38  082C               	movf	??___flmul,w
  5226  0D39  00F0               	movwf	__Umul8_16@multiplicand
  5227  0D3A  0829               	movf	___flmul@a+1,w
  5228  0D3B  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5229  0D40  0871               	movf	?__Umul8_16+1,w
  5230  0D41  1283               	bcf	3,5	;RP0=0, select bank0
  5231  0D42  1303               	bcf	3,6	;RP1=0, select bank0
  5232  0D43  00BD               	movwf	___flmul@temp+1
  5233  0D44  0870               	movf	?__Umul8_16,w
  5234  0D45  00BC               	movwf	___flmul@temp
  5235  0D46                     l2726:
  5236  0D46  083C               	movf	___flmul@temp,w
  5237  0D47  00AC               	movwf	??___flmul
  5238  0D48  01AD               	clrf	??___flmul+1
  5239  0D49  01AE               	clrf	??___flmul+2
  5240  0D4A  01AF               	clrf	??___flmul+3
  5241  0D4B  082C               	movf	??___flmul,w
  5242  0D4C  07B2               	addwf	___flmul@grs,f
  5243  0D4D  082D               	movf	??___flmul+1,w
  5244  0D4E  1103               	clrz
  5245  0D4F  1803               	skipnc
  5246  0D50  3E01               	addlw	1
  5247  0D51  1903               	skipnz
  5248  0D52  2D54               	goto	u3781
  5249  0D53  07B3               	addwf	___flmul@grs+1,f
  5250  0D54                     u3781:
  5251  0D54  082E               	movf	??___flmul+2,w
  5252  0D55  1103               	clrz
  5253  0D56  1803               	skipnc
  5254  0D57  3E01               	addlw	1
  5255  0D58  1903               	skipnz
  5256  0D59  2D5B               	goto	u3782
  5257  0D5A  07B4               	addwf	___flmul@grs+2,f
  5258  0D5B                     u3782:
  5259  0D5B  082F               	movf	??___flmul+3,w
  5260  0D5C  1103               	clrz
  5261  0D5D  1803               	skipnc
  5262  0D5E  3E01               	addlw	1
  5263  0D5F  1903               	skipnz
  5264  0D60  2D62               	goto	u3783
  5265  0D61  07B5               	addwf	___flmul@grs+3,f
  5266  0D62                     u3783:
  5267  0D62                     l2728:
  5268  0D62  083D               	movf	___flmul@temp+1,w
  5269  0D63  00AC               	movwf	??___flmul
  5270  0D64  01AD               	clrf	??___flmul+1
  5271  0D65  01AE               	clrf	??___flmul+2
  5272  0D66  01AF               	clrf	??___flmul+3
  5273  0D67  082C               	movf	??___flmul,w
  5274  0D68  07B8               	addwf	___flmul@prod,f
  5275  0D69  082D               	movf	??___flmul+1,w
  5276  0D6A  1103               	clrz
  5277  0D6B  1803               	skipnc
  5278  0D6C  3E01               	addlw	1
  5279  0D6D  1903               	skipnz
  5280  0D6E  2D70               	goto	u3791
  5281  0D6F  07B9               	addwf	___flmul@prod+1,f
  5282  0D70                     u3791:
  5283  0D70  082E               	movf	??___flmul+2,w
  5284  0D71  1103               	clrz
  5285  0D72  1803               	skipnc
  5286  0D73  3E01               	addlw	1
  5287  0D74  1903               	skipnz
  5288  0D75  2D77               	goto	u3792
  5289  0D76  07BA               	addwf	___flmul@prod+2,f
  5290  0D77                     u3792:
  5291  0D77  082F               	movf	??___flmul+3,w
  5292  0D78  1103               	clrz
  5293  0D79  1803               	skipnc
  5294  0D7A  3E01               	addlw	1
  5295  0D7B  1903               	skipnz
  5296  0D7C  2D7E               	goto	u3793
  5297  0D7D  07BB               	addwf	___flmul@prod+3,f
  5298  0D7E                     u3793:
  5299  0D7E  0826               	movf	___flmul@b+2,w
  5300  0D7F  00AC               	movwf	??___flmul
  5301  0D80  082C               	movf	??___flmul,w
  5302  0D81  00F0               	movwf	__Umul8_16@multiplicand
  5303  0D82  0828               	movf	___flmul@a,w
  5304  0D83  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5305  0D88  0871               	movf	?__Umul8_16+1,w
  5306  0D89  1283               	bcf	3,5	;RP0=0, select bank0
  5307  0D8A  1303               	bcf	3,6	;RP1=0, select bank0
  5308  0D8B  00BD               	movwf	___flmul@temp+1
  5309  0D8C  0870               	movf	?__Umul8_16,w
  5310  0D8D  00BC               	movwf	___flmul@temp
  5311  0D8E                     l2730:
  5312  0D8E  083C               	movf	___flmul@temp,w
  5313  0D8F  00AC               	movwf	??___flmul
  5314  0D90  01AD               	clrf	??___flmul+1
  5315  0D91  01AE               	clrf	??___flmul+2
  5316  0D92  01AF               	clrf	??___flmul+3
  5317  0D93  082C               	movf	??___flmul,w
  5318  0D94  07B2               	addwf	___flmul@grs,f
  5319  0D95  082D               	movf	??___flmul+1,w
  5320  0D96  1103               	clrz
  5321  0D97  1803               	skipnc
  5322  0D98  3E01               	addlw	1
  5323  0D99  1903               	skipnz
  5324  0D9A  2D9C               	goto	u3801
  5325  0D9B  07B3               	addwf	___flmul@grs+1,f
  5326  0D9C                     u3801:
  5327  0D9C  082E               	movf	??___flmul+2,w
  5328  0D9D  1103               	clrz
  5329  0D9E  1803               	skipnc
  5330  0D9F  3E01               	addlw	1
  5331  0DA0  1903               	skipnz
  5332  0DA1  2DA3               	goto	u3802
  5333  0DA2  07B4               	addwf	___flmul@grs+2,f
  5334  0DA3                     u3802:
  5335  0DA3  082F               	movf	??___flmul+3,w
  5336  0DA4  1103               	clrz
  5337  0DA5  1803               	skipnc
  5338  0DA6  3E01               	addlw	1
  5339  0DA7  1903               	skipnz
  5340  0DA8  2DAA               	goto	u3803
  5341  0DA9  07B5               	addwf	___flmul@grs+3,f
  5342  0DAA                     u3803:
  5343  0DAA                     l2732:
  5344  0DAA  083D               	movf	___flmul@temp+1,w
  5345  0DAB  00AC               	movwf	??___flmul
  5346  0DAC  01AD               	clrf	??___flmul+1
  5347  0DAD  01AE               	clrf	??___flmul+2
  5348  0DAE  01AF               	clrf	??___flmul+3
  5349  0DAF  082C               	movf	??___flmul,w
  5350  0DB0  07B8               	addwf	___flmul@prod,f
  5351  0DB1  082D               	movf	??___flmul+1,w
  5352  0DB2  1103               	clrz
  5353  0DB3  1803               	skipnc
  5354  0DB4  3E01               	addlw	1
  5355  0DB5  1903               	skipnz
  5356  0DB6  2DB8               	goto	u3811
  5357  0DB7  07B9               	addwf	___flmul@prod+1,f
  5358  0DB8                     u3811:
  5359  0DB8  082E               	movf	??___flmul+2,w
  5360  0DB9  1103               	clrz
  5361  0DBA  1803               	skipnc
  5362  0DBB  3E01               	addlw	1
  5363  0DBC  1903               	skipnz
  5364  0DBD  2DBF               	goto	u3812
  5365  0DBE  07BA               	addwf	___flmul@prod+2,f
  5366  0DBF                     u3812:
  5367  0DBF  082F               	movf	??___flmul+3,w
  5368  0DC0  1103               	clrz
  5369  0DC1  1803               	skipnc
  5370  0DC2  3E01               	addlw	1
  5371  0DC3  1903               	skipnz
  5372  0DC4  2DC6               	goto	u3813
  5373  0DC5  07BB               	addwf	___flmul@prod+3,f
  5374  0DC6                     u3813:
  5375  0DC6                     l2734:
  5376  0DC6  3008               	movlw	8
  5377  0DC7  00AC               	movwf	??___flmul
  5378  0DC8                     u3825:
  5379  0DC8  1003               	clrc
  5380  0DC9  0DB2               	rlf	___flmul@grs,f
  5381  0DCA  0DB3               	rlf	___flmul@grs+1,f
  5382  0DCB  0DB4               	rlf	___flmul@grs+2,f
  5383  0DCC  0DB5               	rlf	___flmul@grs+3,f
  5384  0DCD  0BAC               	decfsz	??___flmul,f
  5385  0DCE  2DC8               	goto	u3825
  5386  0DCF                     l2736:
  5387  0DCF  0825               	movf	___flmul@b+1,w
  5388  0DD0  00AC               	movwf	??___flmul
  5389  0DD1  082C               	movf	??___flmul,w
  5390  0DD2  00F0               	movwf	__Umul8_16@multiplicand
  5391  0DD3  0828               	movf	___flmul@a,w
  5392  0DD4  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5393  0DD9  0871               	movf	?__Umul8_16+1,w
  5394  0DDA  1283               	bcf	3,5	;RP0=0, select bank0
  5395  0DDB  1303               	bcf	3,6	;RP1=0, select bank0
  5396  0DDC  00BD               	movwf	___flmul@temp+1
  5397  0DDD  0870               	movf	?__Umul8_16,w
  5398  0DDE  00BC               	movwf	___flmul@temp
  5399  0DDF                     l2738:
  5400  0DDF  083C               	movf	___flmul@temp,w
  5401  0DE0  00AC               	movwf	??___flmul
  5402  0DE1  083D               	movf	___flmul@temp+1,w
  5403  0DE2  00AD               	movwf	??___flmul+1
  5404  0DE3  01AE               	clrf	??___flmul+2
  5405  0DE4  01AF               	clrf	??___flmul+3
  5406  0DE5  082C               	movf	??___flmul,w
  5407  0DE6  07B2               	addwf	___flmul@grs,f
  5408  0DE7  082D               	movf	??___flmul+1,w
  5409  0DE8  1103               	clrz
  5410  0DE9  1803               	skipnc
  5411  0DEA  3E01               	addlw	1
  5412  0DEB  1903               	skipnz
  5413  0DEC  2DEE               	goto	u3831
  5414  0DED  07B3               	addwf	___flmul@grs+1,f
  5415  0DEE                     u3831:
  5416  0DEE  082E               	movf	??___flmul+2,w
  5417  0DEF  1103               	clrz
  5418  0DF0  1803               	skipnc
  5419  0DF1  3E01               	addlw	1
  5420  0DF2  1903               	skipnz
  5421  0DF3  2DF5               	goto	u3832
  5422  0DF4  07B4               	addwf	___flmul@grs+2,f
  5423  0DF5                     u3832:
  5424  0DF5  082F               	movf	??___flmul+3,w
  5425  0DF6  1103               	clrz
  5426  0DF7  1803               	skipnc
  5427  0DF8  3E01               	addlw	1
  5428  0DF9  1903               	skipnz
  5429  0DFA  2DFC               	goto	u3833
  5430  0DFB  07B5               	addwf	___flmul@grs+3,f
  5431  0DFC                     u3833:
  5432  0DFC                     l2740:
  5433  0DFC  0824               	movf	___flmul@b,w
  5434  0DFD  00AC               	movwf	??___flmul
  5435  0DFE  082C               	movf	??___flmul,w
  5436  0DFF  00F0               	movwf	__Umul8_16@multiplicand
  5437  0E00  0829               	movf	___flmul@a+1,w
  5438  0E01  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5439  0E06  0871               	movf	?__Umul8_16+1,w
  5440  0E07  1283               	bcf	3,5	;RP0=0, select bank0
  5441  0E08  1303               	bcf	3,6	;RP1=0, select bank0
  5442  0E09  00BD               	movwf	___flmul@temp+1
  5443  0E0A  0870               	movf	?__Umul8_16,w
  5444  0E0B  00BC               	movwf	___flmul@temp
  5445  0E0C                     l2742:
  5446  0E0C  083C               	movf	___flmul@temp,w
  5447  0E0D  00AC               	movwf	??___flmul
  5448  0E0E  083D               	movf	___flmul@temp+1,w
  5449  0E0F  00AD               	movwf	??___flmul+1
  5450  0E10  01AE               	clrf	??___flmul+2
  5451  0E11  01AF               	clrf	??___flmul+3
  5452  0E12  082C               	movf	??___flmul,w
  5453  0E13  07B2               	addwf	___flmul@grs,f
  5454  0E14  082D               	movf	??___flmul+1,w
  5455  0E15  1103               	clrz
  5456  0E16  1803               	skipnc
  5457  0E17  3E01               	addlw	1
  5458  0E18  1903               	skipnz
  5459  0E19  2E1B               	goto	u3841
  5460  0E1A  07B3               	addwf	___flmul@grs+1,f
  5461  0E1B                     u3841:
  5462  0E1B  082E               	movf	??___flmul+2,w
  5463  0E1C  1103               	clrz
  5464  0E1D  1803               	skipnc
  5465  0E1E  3E01               	addlw	1
  5466  0E1F  1903               	skipnz
  5467  0E20  2E22               	goto	u3842
  5468  0E21  07B4               	addwf	___flmul@grs+2,f
  5469  0E22                     u3842:
  5470  0E22  082F               	movf	??___flmul+3,w
  5471  0E23  1103               	clrz
  5472  0E24  1803               	skipnc
  5473  0E25  3E01               	addlw	1
  5474  0E26  1903               	skipnz
  5475  0E27  2E29               	goto	u3843
  5476  0E28  07B5               	addwf	___flmul@grs+3,f
  5477  0E29                     u3843:
  5478  0E29                     l2744:
  5479  0E29  3008               	movlw	8
  5480  0E2A  00AC               	movwf	??___flmul
  5481  0E2B                     u3855:
  5482  0E2B  1003               	clrc
  5483  0E2C  0DB2               	rlf	___flmul@grs,f
  5484  0E2D  0DB3               	rlf	___flmul@grs+1,f
  5485  0E2E  0DB4               	rlf	___flmul@grs+2,f
  5486  0E2F  0DB5               	rlf	___flmul@grs+3,f
  5487  0E30  0BAC               	decfsz	??___flmul,f
  5488  0E31  2E2B               	goto	u3855
  5489  0E32  0824               	movf	___flmul@b,w
  5490  0E33  00AC               	movwf	??___flmul
  5491  0E34  082C               	movf	??___flmul,w
  5492  0E35  00F0               	movwf	__Umul8_16@multiplicand
  5493  0E36  0828               	movf	___flmul@a,w
  5494  0E37  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5495  0E3C  0871               	movf	?__Umul8_16+1,w
  5496  0E3D  1283               	bcf	3,5	;RP0=0, select bank0
  5497  0E3E  1303               	bcf	3,6	;RP1=0, select bank0
  5498  0E3F  00BD               	movwf	___flmul@temp+1
  5499  0E40  0870               	movf	?__Umul8_16,w
  5500  0E41  00BC               	movwf	___flmul@temp
  5501  0E42                     l2746:
  5502  0E42  083C               	movf	___flmul@temp,w
  5503  0E43  00AC               	movwf	??___flmul
  5504  0E44  083D               	movf	___flmul@temp+1,w
  5505  0E45  00AD               	movwf	??___flmul+1
  5506  0E46  01AE               	clrf	??___flmul+2
  5507  0E47  01AF               	clrf	??___flmul+3
  5508  0E48  082C               	movf	??___flmul,w
  5509  0E49  07B2               	addwf	___flmul@grs,f
  5510  0E4A  082D               	movf	??___flmul+1,w
  5511  0E4B  1103               	clrz
  5512  0E4C  1803               	skipnc
  5513  0E4D  3E01               	addlw	1
  5514  0E4E  1903               	skipnz
  5515  0E4F  2E51               	goto	u3861
  5516  0E50  07B3               	addwf	___flmul@grs+1,f
  5517  0E51                     u3861:
  5518  0E51  082E               	movf	??___flmul+2,w
  5519  0E52  1103               	clrz
  5520  0E53  1803               	skipnc
  5521  0E54  3E01               	addlw	1
  5522  0E55  1903               	skipnz
  5523  0E56  2E58               	goto	u3862
  5524  0E57  07B4               	addwf	___flmul@grs+2,f
  5525  0E58                     u3862:
  5526  0E58  082F               	movf	??___flmul+3,w
  5527  0E59  1103               	clrz
  5528  0E5A  1803               	skipnc
  5529  0E5B  3E01               	addlw	1
  5530  0E5C  1903               	skipnz
  5531  0E5D  2E5F               	goto	u3863
  5532  0E5E  07B5               	addwf	___flmul@grs+3,f
  5533  0E5F                     u3863:
  5534  0E5F                     l2748:
  5535  0E5F  0825               	movf	___flmul@b+1,w
  5536  0E60  00AC               	movwf	??___flmul
  5537  0E61  082C               	movf	??___flmul,w
  5538  0E62  00F0               	movwf	__Umul8_16@multiplicand
  5539  0E63  082A               	movf	___flmul@a+2,w
  5540  0E64  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5541  0E69  0871               	movf	?__Umul8_16+1,w
  5542  0E6A  1283               	bcf	3,5	;RP0=0, select bank0
  5543  0E6B  1303               	bcf	3,6	;RP1=0, select bank0
  5544  0E6C  00BD               	movwf	___flmul@temp+1
  5545  0E6D  0870               	movf	?__Umul8_16,w
  5546  0E6E  00BC               	movwf	___flmul@temp
  5547  0E6F  083C               	movf	___flmul@temp,w
  5548  0E70  00AC               	movwf	??___flmul
  5549  0E71  083D               	movf	___flmul@temp+1,w
  5550  0E72  00AD               	movwf	??___flmul+1
  5551  0E73  01AE               	clrf	??___flmul+2
  5552  0E74  01AF               	clrf	??___flmul+3
  5553  0E75  082C               	movf	??___flmul,w
  5554  0E76  07B8               	addwf	___flmul@prod,f
  5555  0E77  082D               	movf	??___flmul+1,w
  5556  0E78  1103               	clrz
  5557  0E79  1803               	skipnc
  5558  0E7A  3E01               	addlw	1
  5559  0E7B  1903               	skipnz
  5560  0E7C  2E7E               	goto	u3871
  5561  0E7D  07B9               	addwf	___flmul@prod+1,f
  5562  0E7E                     u3871:
  5563  0E7E  082E               	movf	??___flmul+2,w
  5564  0E7F  1103               	clrz
  5565  0E80  1803               	skipnc
  5566  0E81  3E01               	addlw	1
  5567  0E82  1903               	skipnz
  5568  0E83  2E85               	goto	u3872
  5569  0E84  07BA               	addwf	___flmul@prod+2,f
  5570  0E85                     u3872:
  5571  0E85  082F               	movf	??___flmul+3,w
  5572  0E86  1103               	clrz
  5573  0E87  1803               	skipnc
  5574  0E88  3E01               	addlw	1
  5575  0E89  1903               	skipnz
  5576  0E8A  2E8C               	goto	u3873
  5577  0E8B  07BB               	addwf	___flmul@prod+3,f
  5578  0E8C                     u3873:
  5579  0E8C                     l2750:
  5580  0E8C  0826               	movf	___flmul@b+2,w
  5581  0E8D  00AC               	movwf	??___flmul
  5582  0E8E  082C               	movf	??___flmul,w
  5583  0E8F  00F0               	movwf	__Umul8_16@multiplicand
  5584  0E90  0829               	movf	___flmul@a+1,w
  5585  0E91  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5586  0E96  0871               	movf	?__Umul8_16+1,w
  5587  0E97  1283               	bcf	3,5	;RP0=0, select bank0
  5588  0E98  1303               	bcf	3,6	;RP1=0, select bank0
  5589  0E99  00BD               	movwf	___flmul@temp+1
  5590  0E9A  0870               	movf	?__Umul8_16,w
  5591  0E9B  00BC               	movwf	___flmul@temp
  5592  0E9C                     l2752:
  5593  0E9C  083C               	movf	___flmul@temp,w
  5594  0E9D  00AC               	movwf	??___flmul
  5595  0E9E  083D               	movf	___flmul@temp+1,w
  5596  0E9F  00AD               	movwf	??___flmul+1
  5597  0EA0  01AE               	clrf	??___flmul+2
  5598  0EA1  01AF               	clrf	??___flmul+3
  5599  0EA2  082C               	movf	??___flmul,w
  5600  0EA3  07B8               	addwf	___flmul@prod,f
  5601  0EA4  082D               	movf	??___flmul+1,w
  5602  0EA5  1103               	clrz
  5603  0EA6  1803               	skipnc
  5604  0EA7  3E01               	addlw	1
  5605  0EA8  1903               	skipnz
  5606  0EA9  2EAB               	goto	u3881
  5607  0EAA  07B9               	addwf	___flmul@prod+1,f
  5608  0EAB                     u3881:
  5609  0EAB  082E               	movf	??___flmul+2,w
  5610  0EAC  1103               	clrz
  5611  0EAD  1803               	skipnc
  5612  0EAE  3E01               	addlw	1
  5613  0EAF  1903               	skipnz
  5614  0EB0  2EB2               	goto	u3882
  5615  0EB1  07BA               	addwf	___flmul@prod+2,f
  5616  0EB2                     u3882:
  5617  0EB2  082F               	movf	??___flmul+3,w
  5618  0EB3  1103               	clrz
  5619  0EB4  1803               	skipnc
  5620  0EB5  3E01               	addlw	1
  5621  0EB6  1903               	skipnz
  5622  0EB7  2EB9               	goto	u3883
  5623  0EB8  07BB               	addwf	___flmul@prod+3,f
  5624  0EB9                     u3883:
  5625  0EB9  0826               	movf	___flmul@b+2,w
  5626  0EBA  00AC               	movwf	??___flmul
  5627  0EBB  082C               	movf	??___flmul,w
  5628  0EBC  00F0               	movwf	__Umul8_16@multiplicand
  5629  0EBD  082A               	movf	___flmul@a+2,w
  5630  0EBE  120A  118A  20D5  120A  158A  	fcall	__Umul8_16
  5631  0EC3  0871               	movf	?__Umul8_16+1,w
  5632  0EC4  1283               	bcf	3,5	;RP0=0, select bank0
  5633  0EC5  1303               	bcf	3,6	;RP1=0, select bank0
  5634  0EC6  00BD               	movwf	___flmul@temp+1
  5635  0EC7  0870               	movf	?__Umul8_16,w
  5636  0EC8  00BC               	movwf	___flmul@temp
  5637  0EC9                     l2754:
  5638  0EC9  083C               	movf	___flmul@temp,w
  5639  0ECA  00AC               	movwf	??___flmul
  5640  0ECB  083D               	movf	___flmul@temp+1,w
  5641  0ECC  00AD               	movwf	??___flmul+1
  5642  0ECD  01AE               	clrf	??___flmul+2
  5643  0ECE  01AF               	clrf	??___flmul+3
  5644  0ECF  3008               	movlw	8
  5645  0ED0                     u3895:
  5646  0ED0  1003               	clrc
  5647  0ED1  0DAC               	rlf	??___flmul,f
  5648  0ED2  0DAD               	rlf	??___flmul+1,f
  5649  0ED3  0DAE               	rlf	??___flmul+2,f
  5650  0ED4  0DAF               	rlf	??___flmul+3,f
  5651  0ED5                     u3890:
  5652  0ED5  3EFF               	addlw	-1
  5653  0ED6  1D03               	skipz
  5654  0ED7  2ED0               	goto	u3895
  5655  0ED8  082C               	movf	??___flmul,w
  5656  0ED9  07B8               	addwf	___flmul@prod,f
  5657  0EDA  082D               	movf	??___flmul+1,w
  5658  0EDB  1103               	clrz
  5659  0EDC  1803               	skipnc
  5660  0EDD  3E01               	addlw	1
  5661  0EDE  1903               	skipnz
  5662  0EDF  2EE1               	goto	u3901
  5663  0EE0  07B9               	addwf	___flmul@prod+1,f
  5664  0EE1                     u3901:
  5665  0EE1  082E               	movf	??___flmul+2,w
  5666  0EE2  1103               	clrz
  5667  0EE3  1803               	skipnc
  5668  0EE4  3E01               	addlw	1
  5669  0EE5  1903               	skipnz
  5670  0EE6  2EE8               	goto	u3902
  5671  0EE7  07BA               	addwf	___flmul@prod+2,f
  5672  0EE8                     u3902:
  5673  0EE8  082F               	movf	??___flmul+3,w
  5674  0EE9  1103               	clrz
  5675  0EEA  1803               	skipnc
  5676  0EEB  3E01               	addlw	1
  5677  0EEC  1903               	skipnz
  5678  0EED  2EEF               	goto	u3903
  5679  0EEE  07BB               	addwf	___flmul@prod+3,f
  5680  0EEF                     u3903:
  5681  0EEF                     l2756:
  5682  0EEF  0832               	movf	___flmul@grs,w
  5683  0EF0  00AC               	movwf	??___flmul
  5684  0EF1  0833               	movf	___flmul@grs+1,w
  5685  0EF2  00AD               	movwf	??___flmul+1
  5686  0EF3  0834               	movf	___flmul@grs+2,w
  5687  0EF4  00AE               	movwf	??___flmul+2
  5688  0EF5  0835               	movf	___flmul@grs+3,w
  5689  0EF6  00AF               	movwf	??___flmul+3
  5690  0EF7  3018               	movlw	24
  5691  0EF8                     u3915:
  5692  0EF8  1003               	clrc
  5693  0EF9  0CAF               	rrf	??___flmul+3,f
  5694  0EFA  0CAE               	rrf	??___flmul+2,f
  5695  0EFB  0CAD               	rrf	??___flmul+1,f
  5696  0EFC  0CAC               	rrf	??___flmul,f
  5697  0EFD                     u3910:
  5698  0EFD  3EFF               	addlw	-1
  5699  0EFE  1D03               	skipz
  5700  0EFF  2EF8               	goto	u3915
  5701  0F00  082C               	movf	??___flmul,w
  5702  0F01  07B8               	addwf	___flmul@prod,f
  5703  0F02  082D               	movf	??___flmul+1,w
  5704  0F03  1103               	clrz
  5705  0F04  1803               	skipnc
  5706  0F05  3E01               	addlw	1
  5707  0F06  1903               	skipnz
  5708  0F07  2F09               	goto	u3921
  5709  0F08  07B9               	addwf	___flmul@prod+1,f
  5710  0F09                     u3921:
  5711  0F09  082E               	movf	??___flmul+2,w
  5712  0F0A  1103               	clrz
  5713  0F0B  1803               	skipnc
  5714  0F0C  3E01               	addlw	1
  5715  0F0D  1903               	skipnz
  5716  0F0E  2F10               	goto	u3922
  5717  0F0F  07BA               	addwf	___flmul@prod+2,f
  5718  0F10                     u3922:
  5719  0F10  082F               	movf	??___flmul+3,w
  5720  0F11  1103               	clrz
  5721  0F12  1803               	skipnc
  5722  0F13  3E01               	addlw	1
  5723  0F14  1903               	skipnz
  5724  0F15  2F17               	goto	u3923
  5725  0F16  07BB               	addwf	___flmul@prod+3,f
  5726  0F17                     u3923:
  5727  0F17                     l2758:
  5728  0F17  3008               	movlw	8
  5729  0F18  00AC               	movwf	??___flmul
  5730  0F19                     u3935:
  5731  0F19  1003               	clrc
  5732  0F1A  0DB2               	rlf	___flmul@grs,f
  5733  0F1B  0DB3               	rlf	___flmul@grs+1,f
  5734  0F1C  0DB4               	rlf	___flmul@grs+2,f
  5735  0F1D  0DB5               	rlf	___flmul@grs+3,f
  5736  0F1E  0BAC               	decfsz	??___flmul,f
  5737  0F1F  2F19               	goto	u3935
  5738  0F20                     l2760:
  5739  0F20  0837               	movf	___flmul@bexp,w
  5740  0F21  0736               	addwf	___flmul@aexp,w
  5741  0F22  00AC               	movwf	??___flmul
  5742  0F23  01AD               	clrf	??___flmul+1
  5743  0F24  0DAD               	rlf	??___flmul+1,f
  5744  0F25  082C               	movf	??___flmul,w
  5745  0F26  3E82               	addlw	130
  5746  0F27  00BC               	movwf	___flmul@temp
  5747  0F28  082D               	movf	??___flmul+1,w
  5748  0F29  1803               	skipnc
  5749  0F2A  3E01               	addlw	1
  5750  0F2B  3EFF               	addlw	255
  5751  0F2C  00BD               	movwf	___flmul@temp+1
  5752  0F2D  2F4B               	goto	l2772
  5753  0F2E                     l2762:
  5754  0F2E  3001               	movlw	1
  5755  0F2F  00AC               	movwf	??___flmul
  5756  0F30                     u3945:
  5757  0F30  1003               	clrc
  5758  0F31  0DB8               	rlf	___flmul@prod,f
  5759  0F32  0DB9               	rlf	___flmul@prod+1,f
  5760  0F33  0DBA               	rlf	___flmul@prod+2,f
  5761  0F34  0DBB               	rlf	___flmul@prod+3,f
  5762  0F35  0BAC               	decfsz	??___flmul,f
  5763  0F36  2F30               	goto	u3945
  5764  0F37                     l2764:
  5765  0F37  1FB5               	btfss	___flmul@grs+3,7
  5766  0F38  2F3A               	goto	u3951
  5767  0F39  2F3B               	goto	u3950
  5768  0F3A                     u3951:
  5769  0F3A  2F3C               	goto	l2768
  5770  0F3B                     u3950:
  5771  0F3B                     l2766:
  5772  0F3B  1438               	bsf	___flmul@prod,0
  5773  0F3C                     l2768:
  5774  0F3C  3001               	movlw	1
  5775  0F3D  00AC               	movwf	??___flmul
  5776  0F3E                     u3965:
  5777  0F3E  1003               	clrc
  5778  0F3F  0DB2               	rlf	___flmul@grs,f
  5779  0F40  0DB3               	rlf	___flmul@grs+1,f
  5780  0F41  0DB4               	rlf	___flmul@grs+2,f
  5781  0F42  0DB5               	rlf	___flmul@grs+3,f
  5782  0F43  0BAC               	decfsz	??___flmul,f
  5783  0F44  2F3E               	goto	u3965
  5784  0F45                     l2770:
  5785  0F45  30FF               	movlw	255
  5786  0F46  07BC               	addwf	___flmul@temp,f
  5787  0F47  1803               	skipnc
  5788  0F48  0ABD               	incf	___flmul@temp+1,f
  5789  0F49  30FF               	movlw	255
  5790  0F4A  07BD               	addwf	___flmul@temp+1,f
  5791  0F4B                     l2772:
  5792  0F4B  1FBA               	btfss	___flmul@prod+2,7
  5793  0F4C  2F4E               	goto	u3971
  5794  0F4D  2F4F               	goto	u3970
  5795  0F4E                     u3971:
  5796  0F4E  2F2E               	goto	l2762
  5797  0F4F                     u3970:
  5798  0F4F                     l2774:
  5799  0F4F  01B6               	clrf	___flmul@aexp
  5800  0F50                     l2776:
  5801  0F50  1FB5               	btfss	___flmul@grs+3,7
  5802  0F51  2F53               	goto	u3981
  5803  0F52  2F54               	goto	u3980
  5804  0F53                     u3981:
  5805  0F53  2F70               	goto	l2784
  5806  0F54                     u3980:
  5807  0F54                     l2778:
  5808  0F54  30FF               	movlw	255
  5809  0F55  0532               	andwf	___flmul@grs,w
  5810  0F56  00AC               	movwf	??___flmul
  5811  0F57  30FF               	movlw	255
  5812  0F58  0533               	andwf	___flmul@grs+1,w
  5813  0F59  00AD               	movwf	??___flmul+1
  5814  0F5A  30FF               	movlw	255
  5815  0F5B  0534               	andwf	___flmul@grs+2,w
  5816  0F5C  00AE               	movwf	??___flmul+2
  5817  0F5D  307F               	movlw	127
  5818  0F5E  0535               	andwf	___flmul@grs+3,w
  5819  0F5F  00AF               	movwf	??___flmul+3
  5820  0F60  082F               	movf	??___flmul+3,w
  5821  0F61  042E               	iorwf	??___flmul+2,w
  5822  0F62  042D               	iorwf	??___flmul+1,w
  5823  0F63  042C               	iorwf	??___flmul,w
  5824  0F64  1903               	skipnz
  5825  0F65  2F67               	goto	u3991
  5826  0F66  2F68               	goto	u3990
  5827  0F67                     u3991:
  5828  0F67  2F6B               	goto	l824
  5829  0F68                     u3990:
  5830  0F68                     l2780:
  5831  0F68  01B6               	clrf	___flmul@aexp
  5832  0F69  0AB6               	incf	___flmul@aexp,f
  5833  0F6A  2F70               	goto	l2784
  5834  0F6B                     l824:
  5835  0F6B  1C38               	btfss	___flmul@prod,0
  5836  0F6C  2F6E               	goto	u4001
  5837  0F6D  2F6F               	goto	u4000
  5838  0F6E                     u4001:
  5839  0F6E  2F70               	goto	l2784
  5840  0F6F                     u4000:
  5841  0F6F  2F68               	goto	l2780
  5842  0F70                     l2784:
  5843  0F70  0836               	movf	___flmul@aexp,w
  5844  0F71  1903               	btfsc	3,2
  5845  0F72  2F74               	goto	u4011
  5846  0F73  2F75               	goto	u4010
  5847  0F74                     u4011:
  5848  0F74  2FA6               	goto	l2794
  5849  0F75                     u4010:
  5850  0F75                     l2786:
  5851  0F75  3001               	movlw	1
  5852  0F76  07B8               	addwf	___flmul@prod,f
  5853  0F77  3000               	movlw	0
  5854  0F78  1803               	skipnc
  5855  0F79  3001               	movlw	1
  5856  0F7A  07B9               	addwf	___flmul@prod+1,f
  5857  0F7B  3000               	movlw	0
  5858  0F7C  1803               	skipnc
  5859  0F7D  3001               	movlw	1
  5860  0F7E  07BA               	addwf	___flmul@prod+2,f
  5861  0F7F  3000               	movlw	0
  5862  0F80  1803               	skipnc
  5863  0F81  3001               	movlw	1
  5864  0F82  07BB               	addwf	___flmul@prod+3,f
  5865  0F83                     l2788:
  5866  0F83  1C3B               	btfss	___flmul@prod+3,0
  5867  0F84  2F86               	goto	u4021
  5868  0F85  2F87               	goto	u4020
  5869  0F86                     u4021:
  5870  0F86  2FA6               	goto	l2794
  5871  0F87                     u4020:
  5872  0F87                     l2790:
  5873  0F87  0838               	movf	___flmul@prod,w
  5874  0F88  00AC               	movwf	??___flmul
  5875  0F89  0839               	movf	___flmul@prod+1,w
  5876  0F8A  00AD               	movwf	??___flmul+1
  5877  0F8B  083A               	movf	___flmul@prod+2,w
  5878  0F8C  00AE               	movwf	??___flmul+2
  5879  0F8D  083B               	movf	___flmul@prod+3,w
  5880  0F8E  00AF               	movwf	??___flmul+3
  5881  0F8F  3001               	movlw	1
  5882  0F90  00B0               	movwf	??___flmul+4
  5883  0F91                     u4035:
  5884  0F91  0D2F               	rlf	??___flmul+3,w
  5885  0F92  0CAF               	rrf	??___flmul+3,f
  5886  0F93  0CAE               	rrf	??___flmul+2,f
  5887  0F94  0CAD               	rrf	??___flmul+1,f
  5888  0F95  0CAC               	rrf	??___flmul,f
  5889  0F96                     u4030:
  5890  0F96  0BB0               	decfsz	??___flmul+4,f
  5891  0F97  2F91               	goto	u4035
  5892  0F98  082F               	movf	??___flmul+3,w
  5893  0F99  00BB               	movwf	___flmul@prod+3
  5894  0F9A  082E               	movf	??___flmul+2,w
  5895  0F9B  00BA               	movwf	___flmul@prod+2
  5896  0F9C  082D               	movf	??___flmul+1,w
  5897  0F9D  00B9               	movwf	___flmul@prod+1
  5898  0F9E  082C               	movf	??___flmul,w
  5899  0F9F  00B8               	movwf	___flmul@prod
  5900  0FA0                     l2792:
  5901  0FA0  3001               	movlw	1
  5902  0FA1  07BC               	addwf	___flmul@temp,f
  5903  0FA2  1803               	skipnc
  5904  0FA3  0ABD               	incf	___flmul@temp+1,f
  5905  0FA4  3000               	movlw	0
  5906  0FA5  07BD               	addwf	___flmul@temp+1,f
  5907  0FA6                     l2794:
  5908  0FA6  083D               	movf	___flmul@temp+1,w
  5909  0FA7  3A80               	xorlw	128
  5910  0FA8  00FF               	movwf	btemp+1
  5911  0FA9  3080               	movlw	128
  5912  0FAA  027F               	subwf	btemp+1,w
  5913  0FAB  1D03               	skipz
  5914  0FAC  2FAF               	goto	u4045
  5915  0FAD  30FF               	movlw	255
  5916  0FAE  023C               	subwf	___flmul@temp,w
  5917  0FAF                     u4045:
  5918  0FAF  1C03               	skipc
  5919  0FB0  2FB2               	goto	u4041
  5920  0FB1  2FB3               	goto	u4040
  5921  0FB2                     u4041:
  5922  0FB2  2FBE               	goto	l2798
  5923  0FB3                     u4040:
  5924  0FB3                     l2796:
  5925  0FB3  307F               	movlw	127
  5926  0FB4  1283               	bcf	3,5	;RP0=0, select bank0
  5927  0FB5  1303               	bcf	3,6	;RP1=0, select bank0
  5928  0FB6  00BB               	movwf	___flmul@prod+3
  5929  0FB7  3080               	movlw	128
  5930  0FB8  00BA               	movwf	___flmul@prod+2
  5931  0FB9  3000               	movlw	0
  5932  0FBA  00B9               	movwf	___flmul@prod+1
  5933  0FBB  3000               	movlw	0
  5934  0FBC  00B8               	movwf	___flmul@prod
  5935  0FBD  2FF3               	goto	l830
  5936  0FBE                     l2798:
  5937  0FBE  1283               	bcf	3,5	;RP0=0, select bank0
  5938  0FBF  1303               	bcf	3,6	;RP1=0, select bank0
  5939  0FC0  083D               	movf	___flmul@temp+1,w
  5940  0FC1  3A80               	xorlw	128
  5941  0FC2  00FF               	movwf	btemp+1
  5942  0FC3  3080               	movlw	128
  5943  0FC4  027F               	subwf	btemp+1,w
  5944  0FC5  1D03               	skipz
  5945  0FC6  2FC9               	goto	u4055
  5946  0FC7  3001               	movlw	1
  5947  0FC8  023C               	subwf	___flmul@temp,w
  5948  0FC9                     u4055:
  5949  0FC9  1803               	skipnc
  5950  0FCA  2FCC               	goto	u4051
  5951  0FCB  2FCD               	goto	u4050
  5952  0FCC                     u4051:
  5953  0FCC  2FD9               	goto	l2804
  5954  0FCD                     u4050:
  5955  0FCD                     l2800:
  5956  0FCD  3000               	movlw	0
  5957  0FCE  1283               	bcf	3,5	;RP0=0, select bank0
  5958  0FCF  1303               	bcf	3,6	;RP1=0, select bank0
  5959  0FD0  00BB               	movwf	___flmul@prod+3
  5960  0FD1  3000               	movlw	0
  5961  0FD2  00BA               	movwf	___flmul@prod+2
  5962  0FD3  3000               	movlw	0
  5963  0FD4  00B9               	movwf	___flmul@prod+1
  5964  0FD5  3000               	movlw	0
  5965  0FD6  00B8               	movwf	___flmul@prod
  5966  0FD7                     l2802:
  5967  0FD7  01B1               	clrf	___flmul@sign
  5968  0FD8  2FF3               	goto	l830
  5969  0FD9                     l2804:
  5970  0FD9  1283               	bcf	3,5	;RP0=0, select bank0
  5971  0FDA  1303               	bcf	3,6	;RP1=0, select bank0
  5972  0FDB  083C               	movf	___flmul@temp,w
  5973  0FDC  00AC               	movwf	??___flmul
  5974  0FDD  082C               	movf	??___flmul,w
  5975  0FDE  00B7               	movwf	___flmul@bexp
  5976  0FDF  30FF               	movlw	255
  5977  0FE0  05B8               	andwf	___flmul@prod,f
  5978  0FE1  30FF               	movlw	255
  5979  0FE2  05B9               	andwf	___flmul@prod+1,f
  5980  0FE3  307F               	movlw	127
  5981  0FE4  05BA               	andwf	___flmul@prod+2,f
  5982  0FE5  3000               	movlw	0
  5983  0FE6  05BB               	andwf	___flmul@prod+3,f
  5984  0FE7                     l2806:
  5985  0FE7  1C37               	btfss	___flmul@bexp,0
  5986  0FE8  2FEA               	goto	u4061
  5987  0FE9  2FEB               	goto	u4060
  5988  0FEA                     u4061:
  5989  0FEA  2FEC               	goto	l2810
  5990  0FEB                     u4060:
  5991  0FEB                     l2808:
  5992  0FEB  17BA               	bsf	___flmul@prod+2,7
  5993  0FEC                     l2810:
  5994  0FEC  0837               	movf	___flmul@bexp,w
  5995  0FED  00AC               	movwf	??___flmul
  5996  0FEE  1003               	clrc
  5997  0FEF  0C2C               	rrf	??___flmul,w
  5998  0FF0  00AD               	movwf	??___flmul+1
  5999  0FF1  082D               	movf	??___flmul+1,w
  6000  0FF2  00BB               	movwf	___flmul@prod+3
  6001  0FF3                     l830:
  6002  0FF3  0831               	movf	___flmul@sign,w
  6003  0FF4  00AC               	movwf	??___flmul
  6004  0FF5  082C               	movf	??___flmul,w
  6005  0FF6  04BB               	iorwf	___flmul@prod+3,f
  6006  0FF7                     l2812:
  6007  0FF7  083B               	movf	___flmul@prod+3,w
  6008  0FF8  00A7               	movwf	?___flmul+3
  6009  0FF9  083A               	movf	___flmul@prod+2,w
  6010  0FFA  00A6               	movwf	?___flmul+2
  6011  0FFB  0839               	movf	___flmul@prod+1,w
  6012  0FFC  00A5               	movwf	?___flmul+1
  6013  0FFD  0838               	movf	___flmul@prod,w
  6014  0FFE  00A4               	movwf	?___flmul
  6015  0FFF                     l818:
  6016  0FFF  0008               	return
  6017  1000                     __end_of___flmul:
  6018                           
  6019                           	psect	text11
  6020  00D5                     __ptext11:	
  6021 ;; *************** function __Umul8_16 *****************
  6022 ;; Defined at:
  6023 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul8_16.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;  multiplier      1    wreg     unsigned char 
  6026 ;;  multiplicand    1    0[COMMON] unsigned char 
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;  multiplier      1    8[COMMON] unsigned char 
  6029 ;;  word_mpld       2    6[COMMON] unsigned int 
  6030 ;;  product         2    4[COMMON] unsigned int 
  6031 ;; Return value:  Size  Location     Type
  6032 ;;                  2    0[COMMON] unsigned int 
  6033 ;; Registers used:
  6034 ;;		wreg, status,2, status,0
  6035 ;; Tracked objects:
  6036 ;;		On entry : 0/0
  6037 ;;		On exit  : 0/0
  6038 ;;		Unchanged: 0/0
  6039 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6040 ;;      Params:         2       0       0       0       0
  6041 ;;      Locals:         5       0       0       0       0
  6042 ;;      Temps:          2       0       0       0       0
  6043 ;;      Totals:         9       0       0       0       0
  6044 ;;Total ram usage:        9 bytes
  6045 ;; Hardware stack levels used:    1
  6046 ;; This function calls:
  6047 ;;		Nothing
  6048 ;; This function is called by:
  6049 ;;		___flmul
  6050 ;; This function uses a non-reentrant model
  6051 ;;
  6052                           
  6053                           
  6054                           ;psect for function __Umul8_16
  6055  00D5                     __Umul8_16:
  6056                           
  6057                           ;incstack = 0
  6058                           ; Regs used in __Umul8_16: [wreg+status,2+status,0]
  6059                           ;__Umul8_16@multiplier stored from wreg
  6060  00D5  00F8               	movwf	__Umul8_16@multiplier
  6061  00D6                     l2336:
  6062  00D6  01F4               	clrf	__Umul8_16@product
  6063  00D7  01F5               	clrf	__Umul8_16@product+1
  6064  00D8                     l2338:
  6065  00D8  0870               	movf	__Umul8_16@multiplicand,w
  6066  00D9  00F2               	movwf	??__Umul8_16
  6067  00DA  01F3               	clrf	??__Umul8_16+1
  6068  00DB  0872               	movf	??__Umul8_16,w
  6069  00DC  00F6               	movwf	__Umul8_16@word_mpld
  6070  00DD  0873               	movf	??__Umul8_16+1,w
  6071  00DE  00F7               	movwf	__Umul8_16@word_mpld+1
  6072  00DF                     l2340:
  6073  00DF  1C78               	btfss	__Umul8_16@multiplier,0
  6074  00E0  28E2               	goto	u2891
  6075  00E1  28E3               	goto	u2890
  6076  00E2                     u2891:
  6077  00E2  28E9               	goto	l837
  6078  00E3                     u2890:
  6079  00E3                     l2342:
  6080  00E3  0876               	movf	__Umul8_16@word_mpld,w
  6081  00E4  07F4               	addwf	__Umul8_16@product,f
  6082  00E5  1803               	skipnc
  6083  00E6  0AF5               	incf	__Umul8_16@product+1,f
  6084  00E7  0877               	movf	__Umul8_16@word_mpld+1,w
  6085  00E8  07F5               	addwf	__Umul8_16@product+1,f
  6086  00E9                     l837:
  6087  00E9  3001               	movlw	1
  6088  00EA                     u2905:
  6089  00EA  1003               	clrc
  6090  00EB  0DF6               	rlf	__Umul8_16@word_mpld,f
  6091  00EC  0DF7               	rlf	__Umul8_16@word_mpld+1,f
  6092  00ED  3EFF               	addlw	-1
  6093  00EE  1D03               	skipz
  6094  00EF  28EA               	goto	u2905
  6095  00F0  1003               	clrc
  6096  00F1  0CF8               	rrf	__Umul8_16@multiplier,f
  6097  00F2                     l2344:
  6098  00F2  0878               	movf	__Umul8_16@multiplier,w
  6099  00F3  1D03               	btfss	3,2
  6100  00F4  28F6               	goto	u2911
  6101  00F5  28F7               	goto	u2910
  6102  00F6                     u2911:
  6103  00F6  28DF               	goto	l2340
  6104  00F7                     u2910:
  6105  00F7                     l2346:
  6106  00F7  0875               	movf	__Umul8_16@product+1,w
  6107  00F8  00F1               	movwf	?__Umul8_16+1
  6108  00F9  0874               	movf	__Umul8_16@product,w
  6109  00FA  00F0               	movwf	?__Umul8_16
  6110  00FB                     l839:
  6111  00FB  0008               	return
  6112  00FC                     __end_of__Umul8_16:
  6113                           
  6114                           	psect	text12
  6115  0883                     __ptext12:	
  6116 ;; *************** function __tdiv_to_l_ *****************
  6117 ;; Defined at:
  6118 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\ftdivl.c"
  6119 ;; Parameters:    Size  Location     Type
  6120 ;;  f1              4    0[COMMON] float 
  6121 ;;  f2              4    4[COMMON] float 
  6122 ;; Auto vars:     Size  Location     Type
  6123 ;;  quot            4    0[BANK0 ] unsigned long 
  6124 ;;  exp1            1    5[BANK0 ] unsigned char 
  6125 ;;  cntr            1    4[BANK0 ] unsigned char 
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  4    0[COMMON] unsigned long 
  6128 ;; Registers used:
  6129 ;;		wreg, status,2, status,0
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6135 ;;      Params:         8       0       0       0       0
  6136 ;;      Locals:         0       6       0       0       0
  6137 ;;      Temps:          4       0       0       0       0
  6138 ;;      Totals:        12       6       0       0       0
  6139 ;;Total ram usage:       18 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; This function calls:
  6142 ;;		Nothing
  6143 ;; This function is called by:
  6144 ;;		_sprintf
  6145 ;; This function uses a non-reentrant model
  6146 ;;
  6147                           
  6148                           
  6149                           ;psect for function __tdiv_to_l_
  6150  0883                     __tdiv_to_l_:
  6151  0883                     l2910:	
  6152                           ;incstack = 0
  6153                           ; Regs used in __tdiv_to_l_: [wreg+status,2+status,0]
  6154                           
  6155  0883  0870               	movf	__tdiv_to_l_@f1,w
  6156  0884  00F8               	movwf	??__tdiv_to_l_
  6157  0885  0871               	movf	__tdiv_to_l_@f1+1,w
  6158  0886  00F9               	movwf	??__tdiv_to_l_+1
  6159  0887  0872               	movf	__tdiv_to_l_@f1+2,w
  6160  0888  00FA               	movwf	??__tdiv_to_l_+2
  6161  0889  1003               	clrc
  6162  088A  0D79               	rlf	??__tdiv_to_l_+1,w
  6163  088B  0D7A               	rlf	??__tdiv_to_l_+2,w
  6164  088C  00FB               	movwf	??__tdiv_to_l_+3
  6165  088D  087B               	movf	??__tdiv_to_l_+3,w
  6166  088E  1283               	bcf	3,5	;RP0=0, select bank0
  6167  088F  1303               	bcf	3,6	;RP1=0, select bank0
  6168  0890  00A5               	movwf	__tdiv_to_l_@exp1
  6169  0891  0825               	movf	__tdiv_to_l_@exp1,w
  6170  0892  1D03               	btfss	3,2
  6171  0893  2895               	goto	u4351
  6172  0894  2896               	goto	u4350
  6173  0895                     u4351:
  6174  0895  289F               	goto	l2916
  6175  0896                     u4350:
  6176  0896                     l2912:
  6177  0896  3000               	movlw	0
  6178  0897  00F3               	movwf	?__tdiv_to_l_+3
  6179  0898  3000               	movlw	0
  6180  0899  00F2               	movwf	?__tdiv_to_l_+2
  6181  089A  3000               	movlw	0
  6182  089B  00F1               	movwf	?__tdiv_to_l_+1
  6183  089C  3000               	movlw	0
  6184  089D  00F0               	movwf	?__tdiv_to_l_
  6185  089E  293F               	goto	l612
  6186  089F                     l2916:
  6187  089F  0874               	movf	__tdiv_to_l_@f2,w
  6188  08A0  00F8               	movwf	??__tdiv_to_l_
  6189  08A1  0875               	movf	__tdiv_to_l_@f2+1,w
  6190  08A2  00F9               	movwf	??__tdiv_to_l_+1
  6191  08A3  0876               	movf	__tdiv_to_l_@f2+2,w
  6192  08A4  00FA               	movwf	??__tdiv_to_l_+2
  6193  08A5  1003               	clrc
  6194  08A6  0D79               	rlf	??__tdiv_to_l_+1,w
  6195  08A7  0D7A               	rlf	??__tdiv_to_l_+2,w
  6196  08A8  00FB               	movwf	??__tdiv_to_l_+3
  6197  08A9  087B               	movf	??__tdiv_to_l_+3,w
  6198  08AA  00A4               	movwf	__tdiv_to_l_@cntr
  6199  08AB  0824               	movf	__tdiv_to_l_@cntr,w
  6200  08AC  1D03               	btfss	3,2
  6201  08AD  28AF               	goto	u4361
  6202  08AE  28B0               	goto	u4360
  6203  08AF                     u4361:
  6204  08AF  28B1               	goto	l613
  6205  08B0                     u4360:
  6206  08B0  2896               	goto	l2912
  6207  08B1                     l613:
  6208  08B1  17F1               	bsf	__tdiv_to_l_@f1+1,7
  6209  08B2                     l2922:
  6210  08B2  30FF               	movlw	255
  6211  08B3  05F0               	andwf	__tdiv_to_l_@f1,f
  6212  08B4  30FF               	movlw	255
  6213  08B5  05F1               	andwf	__tdiv_to_l_@f1+1,f
  6214  08B6  3000               	movlw	0
  6215  08B7  05F2               	andwf	__tdiv_to_l_@f1+2,f
  6216  08B8                     l2924:
  6217  08B8  17F5               	bsf	__tdiv_to_l_@f2+1,7
  6218  08B9  30FF               	movlw	255
  6219  08BA  05F4               	andwf	__tdiv_to_l_@f2,f
  6220  08BB  30FF               	movlw	255
  6221  08BC  05F5               	andwf	__tdiv_to_l_@f2+1,f
  6222  08BD  3000               	movlw	0
  6223  08BE  05F6               	andwf	__tdiv_to_l_@f2+2,f
  6224  08BF  3000               	movlw	0
  6225  08C0  00A3               	movwf	__tdiv_to_l_@quot+3
  6226  08C1  3000               	movlw	0
  6227  08C2  00A2               	movwf	__tdiv_to_l_@quot+2
  6228  08C3  3000               	movlw	0
  6229  08C4  00A1               	movwf	__tdiv_to_l_@quot+1
  6230  08C5  3000               	movlw	0
  6231  08C6  00A0               	movwf	__tdiv_to_l_@quot
  6232  08C7                     l2926:
  6233  08C7  307F               	movlw	127
  6234  08C8  02A5               	subwf	__tdiv_to_l_@exp1,f
  6235  08C9                     l2928:
  6236  08C9  3098               	movlw	152
  6237  08CA  0724               	addwf	__tdiv_to_l_@cntr,w
  6238  08CB  00F8               	movwf	??__tdiv_to_l_
  6239  08CC  0878               	movf	??__tdiv_to_l_,w
  6240  08CD  02A5               	subwf	__tdiv_to_l_@exp1,f
  6241  08CE  3018               	movlw	24
  6242  08CF  00F8               	movwf	??__tdiv_to_l_
  6243  08D0  0878               	movf	??__tdiv_to_l_,w
  6244  08D1  00A4               	movwf	__tdiv_to_l_@cntr
  6245  08D2                     l2930:
  6246  08D2  3001               	movlw	1
  6247  08D3  00F8               	movwf	??__tdiv_to_l_
  6248  08D4                     u4375:
  6249  08D4  1003               	clrc
  6250  08D5  0DA0               	rlf	__tdiv_to_l_@quot,f
  6251  08D6  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6252  08D7  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6253  08D8  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6254  08D9  0BF8               	decfsz	??__tdiv_to_l_,f
  6255  08DA  28D4               	goto	u4375
  6256  08DB                     l2932:
  6257  08DB  0876               	movf	__tdiv_to_l_@f2+2,w
  6258  08DC  0272               	subwf	__tdiv_to_l_@f1+2,w
  6259  08DD  1D03               	skipz
  6260  08DE  28E5               	goto	u4385
  6261  08DF  0875               	movf	__tdiv_to_l_@f2+1,w
  6262  08E0  0271               	subwf	__tdiv_to_l_@f1+1,w
  6263  08E1  1D03               	skipz
  6264  08E2  28E5               	goto	u4385
  6265  08E3  0874               	movf	__tdiv_to_l_@f2,w
  6266  08E4  0270               	subwf	__tdiv_to_l_@f1,w
  6267  08E5                     u4385:
  6268  08E5  1C03               	skipc
  6269  08E6  28E8               	goto	u4381
  6270  08E7  28E9               	goto	u4380
  6271  08E8                     u4381:
  6272  08E8  28F4               	goto	l2938
  6273  08E9                     u4380:
  6274  08E9                     l2934:
  6275  08E9  0874               	movf	__tdiv_to_l_@f2,w
  6276  08EA  02F0               	subwf	__tdiv_to_l_@f1,f
  6277  08EB  0875               	movf	__tdiv_to_l_@f2+1,w
  6278  08EC  1C03               	skipc
  6279  08ED  0F75               	incfsz	__tdiv_to_l_@f2+1,w
  6280  08EE  02F1               	subwf	__tdiv_to_l_@f1+1,f
  6281  08EF  0876               	movf	__tdiv_to_l_@f2+2,w
  6282  08F0  1C03               	skipc
  6283  08F1  0A76               	incf	__tdiv_to_l_@f2+2,w
  6284  08F2  02F2               	subwf	__tdiv_to_l_@f1+2,f
  6285  08F3                     l2936:
  6286  08F3  1420               	bsf	__tdiv_to_l_@quot,0
  6287  08F4                     l2938:
  6288  08F4  3001               	movlw	1
  6289  08F5                     u4395:
  6290  08F5  1003               	clrc
  6291  08F6  0DF0               	rlf	__tdiv_to_l_@f1,f
  6292  08F7  0DF1               	rlf	__tdiv_to_l_@f1+1,f
  6293  08F8  0DF2               	rlf	__tdiv_to_l_@f1+2,f
  6294  08F9  3EFF               	addlw	-1
  6295  08FA  1D03               	skipz
  6296  08FB  28F5               	goto	u4395
  6297  08FC                     l2940:
  6298  08FC  3001               	movlw	1
  6299  08FD  02A4               	subwf	__tdiv_to_l_@cntr,f
  6300  08FE  1D03               	btfss	3,2
  6301  08FF  2901               	goto	u4401
  6302  0900  2902               	goto	u4400
  6303  0901                     u4401:
  6304  0901  28D2               	goto	l2930
  6305  0902                     u4400:
  6306  0902                     l616:
  6307  0902  1FA5               	btfss	__tdiv_to_l_@exp1,7
  6308  0903  2905               	goto	u4411
  6309  0904  2906               	goto	u4410
  6310  0905                     u4411:
  6311  0905  2920               	goto	l2950
  6312  0906                     u4410:
  6313  0906                     l2942:
  6314  0906  0825               	movf	__tdiv_to_l_@exp1,w
  6315  0907  3A80               	xorlw	128
  6316  0908  3E97               	addlw	151
  6317  0909  1803               	skipnc
  6318  090A  290C               	goto	u4421
  6319  090B  290D               	goto	u4420
  6320  090C                     u4421:
  6321  090C  290E               	goto	l2948
  6322  090D                     u4420:
  6323  090D  2896               	goto	l2912
  6324  090E                     l2948:
  6325  090E  3001               	movlw	1
  6326  090F                     u4435:
  6327  090F  1003               	clrc
  6328  0910  0CA3               	rrf	__tdiv_to_l_@quot+3,f
  6329  0911  0CA2               	rrf	__tdiv_to_l_@quot+2,f
  6330  0912  0CA1               	rrf	__tdiv_to_l_@quot+1,f
  6331  0913  0CA0               	rrf	__tdiv_to_l_@quot,f
  6332  0914  3EFF               	addlw	-1
  6333  0915  1D03               	skipz
  6334  0916  290F               	goto	u4435
  6335  0917  3001               	movlw	1
  6336  0918  00F8               	movwf	??__tdiv_to_l_
  6337  0919  0878               	movf	??__tdiv_to_l_,w
  6338  091A  07A5               	addwf	__tdiv_to_l_@exp1,f
  6339  091B  1D03               	btfss	3,2
  6340  091C  291E               	goto	u4441
  6341  091D  291F               	goto	u4440
  6342  091E                     u4441:
  6343  091E  290E               	goto	l2948
  6344  091F                     u4440:
  6345  091F  2937               	goto	l2958
  6346  0920                     l2950:
  6347  0920  3018               	movlw	24
  6348  0921  0225               	subwf	__tdiv_to_l_@exp1,w
  6349  0922  1C03               	skipc
  6350  0923  2925               	goto	u4451
  6351  0924  2926               	goto	u4450
  6352  0925                     u4451:
  6353  0925  2932               	goto	l623
  6354  0926                     u4450:
  6355  0926  2896               	goto	l2912
  6356  0927                     l2956:
  6357  0927  3001               	movlw	1
  6358  0928  00F8               	movwf	??__tdiv_to_l_
  6359  0929                     u4465:
  6360  0929  1003               	clrc
  6361  092A  0DA0               	rlf	__tdiv_to_l_@quot,f
  6362  092B  0DA1               	rlf	__tdiv_to_l_@quot+1,f
  6363  092C  0DA2               	rlf	__tdiv_to_l_@quot+2,f
  6364  092D  0DA3               	rlf	__tdiv_to_l_@quot+3,f
  6365  092E  0BF8               	decfsz	??__tdiv_to_l_,f
  6366  092F  2929               	goto	u4465
  6367  0930  3001               	movlw	1
  6368  0931  02A5               	subwf	__tdiv_to_l_@exp1,f
  6369  0932                     l623:
  6370  0932  0825               	movf	__tdiv_to_l_@exp1,w
  6371  0933  1D03               	btfss	3,2
  6372  0934  2936               	goto	u4471
  6373  0935  2937               	goto	u4470
  6374  0936                     u4471:
  6375  0936  2927               	goto	l2956
  6376  0937                     u4470:
  6377  0937                     l2958:
  6378  0937  0823               	movf	__tdiv_to_l_@quot+3,w
  6379  0938  00F3               	movwf	?__tdiv_to_l_+3
  6380  0939  0822               	movf	__tdiv_to_l_@quot+2,w
  6381  093A  00F2               	movwf	?__tdiv_to_l_+2
  6382  093B  0821               	movf	__tdiv_to_l_@quot+1,w
  6383  093C  00F1               	movwf	?__tdiv_to_l_+1
  6384  093D  0820               	movf	__tdiv_to_l_@quot,w
  6385  093E  00F0               	movwf	?__tdiv_to_l_
  6386  093F                     l612:
  6387  093F  0008               	return
  6388  0940                     __end_of__tdiv_to_l_:
  6389                           
  6390                           	psect	text13
  6391  00FC                     __ptext13:	
  6392 ;; *************** function __div_to_l_ *****************
  6393 ;; Defined at:
  6394 ;;		line 60 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fldivl.c"
  6395 ;; Parameters:    Size  Location     Type
  6396 ;;  f1              4    0[COMMON] unsigned long 
  6397 ;;  f2              4    4[COMMON] unsigned long 
  6398 ;; Auto vars:     Size  Location     Type
  6399 ;;  quot            4    0[BANK0 ] unsigned long 
  6400 ;;  exp1            1    5[BANK0 ] unsigned char 
  6401 ;;  cntr            1    4[BANK0 ] unsigned char 
  6402 ;; Return value:  Size  Location     Type
  6403 ;;                  4    0[COMMON] unsigned long 
  6404 ;; Registers used:
  6405 ;;		wreg, status,2, status,0
  6406 ;; Tracked objects:
  6407 ;;		On entry : 0/0
  6408 ;;		On exit  : 0/0
  6409 ;;		Unchanged: 0/0
  6410 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6411 ;;      Params:         8       0       0       0       0
  6412 ;;      Locals:         0       6       0       0       0
  6413 ;;      Temps:          1       0       0       0       0
  6414 ;;      Totals:         9       6       0       0       0
  6415 ;;Total ram usage:       15 bytes
  6416 ;; Hardware stack levels used:    1
  6417 ;; This function calls:
  6418 ;;		Nothing
  6419 ;; This function is called by:
  6420 ;;		_sprintf
  6421 ;; This function uses a non-reentrant model
  6422 ;;
  6423                           
  6424                           
  6425                           ;psect for function __div_to_l_
  6426  00FC                     __div_to_l_:
  6427  00FC                     l2962:	
  6428                           ;incstack = 0
  6429                           ; Regs used in __div_to_l_: [wreg+status,2+status,0]
  6430                           
  6431  00FC  1003               	clrc
  6432  00FD  0D72               	rlf	__div_to_l_@f1+2,w
  6433  00FE  0D73               	rlf	__div_to_l_@f1+3,w
  6434  00FF  00F8               	movwf	??__div_to_l_
  6435  0100  0878               	movf	??__div_to_l_,w
  6436  0101  1283               	bcf	3,5	;RP0=0, select bank0
  6437  0102  1303               	bcf	3,6	;RP1=0, select bank0
  6438  0103  00A5               	movwf	__div_to_l_@exp1
  6439  0104  0825               	movf	__div_to_l_@exp1,w
  6440  0105  1D03               	btfss	3,2
  6441  0106  2908               	goto	u4481
  6442  0107  2909               	goto	u4480
  6443  0108                     u4481:
  6444  0108  2912               	goto	l2968
  6445  0109                     u4480:
  6446  0109                     l2964:
  6447  0109  3000               	movlw	0
  6448  010A  00F3               	movwf	?__div_to_l_+3
  6449  010B  3000               	movlw	0
  6450  010C  00F2               	movwf	?__div_to_l_+2
  6451  010D  3000               	movlw	0
  6452  010E  00F1               	movwf	?__div_to_l_+1
  6453  010F  3000               	movlw	0
  6454  0110  00F0               	movwf	?__div_to_l_
  6455  0111  29B9               	goto	l565
  6456  0112                     l2968:
  6457  0112  1003               	clrc
  6458  0113  0D76               	rlf	__div_to_l_@f2+2,w
  6459  0114  0D77               	rlf	__div_to_l_@f2+3,w
  6460  0115  00F8               	movwf	??__div_to_l_
  6461  0116  0878               	movf	??__div_to_l_,w
  6462  0117  00A4               	movwf	__div_to_l_@cntr
  6463  0118  0824               	movf	__div_to_l_@cntr,w
  6464  0119  1D03               	btfss	3,2
  6465  011A  291C               	goto	u4491
  6466  011B  291D               	goto	u4490
  6467  011C                     u4491:
  6468  011C  291E               	goto	l566
  6469  011D                     u4490:
  6470  011D  2909               	goto	l2964
  6471  011E                     l566:
  6472  011E  17F2               	bsf	__div_to_l_@f1+2,7
  6473  011F                     l2974:
  6474  011F  30FF               	movlw	255
  6475  0120  05F0               	andwf	__div_to_l_@f1,f
  6476  0121  30FF               	movlw	255
  6477  0122  05F1               	andwf	__div_to_l_@f1+1,f
  6478  0123  30FF               	movlw	255
  6479  0124  05F2               	andwf	__div_to_l_@f1+2,f
  6480  0125  3000               	movlw	0
  6481  0126  05F3               	andwf	__div_to_l_@f1+3,f
  6482  0127                     l2976:
  6483  0127  17F6               	bsf	__div_to_l_@f2+2,7
  6484  0128  30FF               	movlw	255
  6485  0129  05F4               	andwf	__div_to_l_@f2,f
  6486  012A  30FF               	movlw	255
  6487  012B  05F5               	andwf	__div_to_l_@f2+1,f
  6488  012C  30FF               	movlw	255
  6489  012D  05F6               	andwf	__div_to_l_@f2+2,f
  6490  012E  3000               	movlw	0
  6491  012F  05F7               	andwf	__div_to_l_@f2+3,f
  6492  0130  3000               	movlw	0
  6493  0131  00A3               	movwf	__div_to_l_@quot+3
  6494  0132  3000               	movlw	0
  6495  0133  00A2               	movwf	__div_to_l_@quot+2
  6496  0134  3000               	movlw	0
  6497  0135  00A1               	movwf	__div_to_l_@quot+1
  6498  0136  3000               	movlw	0
  6499  0137  00A0               	movwf	__div_to_l_@quot
  6500  0138                     l2978:
  6501  0138  307F               	movlw	127
  6502  0139  02A5               	subwf	__div_to_l_@exp1,f
  6503  013A                     l2980:
  6504  013A  30A0               	movlw	160
  6505  013B  0724               	addwf	__div_to_l_@cntr,w
  6506  013C  00F8               	movwf	??__div_to_l_
  6507  013D  0878               	movf	??__div_to_l_,w
  6508  013E  02A5               	subwf	__div_to_l_@exp1,f
  6509  013F  3020               	movlw	32
  6510  0140  00F8               	movwf	??__div_to_l_
  6511  0141  0878               	movf	??__div_to_l_,w
  6512  0142  00A4               	movwf	__div_to_l_@cntr
  6513  0143                     l2982:
  6514  0143  3001               	movlw	1
  6515  0144  00F8               	movwf	??__div_to_l_
  6516  0145                     u4505:
  6517  0145  1003               	clrc
  6518  0146  0DA0               	rlf	__div_to_l_@quot,f
  6519  0147  0DA1               	rlf	__div_to_l_@quot+1,f
  6520  0148  0DA2               	rlf	__div_to_l_@quot+2,f
  6521  0149  0DA3               	rlf	__div_to_l_@quot+3,f
  6522  014A  0BF8               	decfsz	??__div_to_l_,f
  6523  014B  2945               	goto	u4505
  6524  014C                     l2984:
  6525  014C  0877               	movf	__div_to_l_@f2+3,w
  6526  014D  0273               	subwf	__div_to_l_@f1+3,w
  6527  014E  1D03               	skipz
  6528  014F  295A               	goto	u4515
  6529  0150  0876               	movf	__div_to_l_@f2+2,w
  6530  0151  0272               	subwf	__div_to_l_@f1+2,w
  6531  0152  1D03               	skipz
  6532  0153  295A               	goto	u4515
  6533  0154  0875               	movf	__div_to_l_@f2+1,w
  6534  0155  0271               	subwf	__div_to_l_@f1+1,w
  6535  0156  1D03               	skipz
  6536  0157  295A               	goto	u4515
  6537  0158  0874               	movf	__div_to_l_@f2,w
  6538  0159  0270               	subwf	__div_to_l_@f1,w
  6539  015A                     u4515:
  6540  015A  1C03               	skipc
  6541  015B  295D               	goto	u4511
  6542  015C  295E               	goto	u4510
  6543  015D                     u4511:
  6544  015D  296D               	goto	l2990
  6545  015E                     u4510:
  6546  015E                     l2986:
  6547  015E  0874               	movf	__div_to_l_@f2,w
  6548  015F  02F0               	subwf	__div_to_l_@f1,f
  6549  0160  0875               	movf	__div_to_l_@f2+1,w
  6550  0161  1C03               	skipc
  6551  0162  0F75               	incfsz	__div_to_l_@f2+1,w
  6552  0163  02F1               	subwf	__div_to_l_@f1+1,f
  6553  0164  0876               	movf	__div_to_l_@f2+2,w
  6554  0165  1C03               	skipc
  6555  0166  0F76               	incfsz	__div_to_l_@f2+2,w
  6556  0167  02F2               	subwf	__div_to_l_@f1+2,f
  6557  0168  0877               	movf	__div_to_l_@f2+3,w
  6558  0169  1C03               	skipc
  6559  016A  0F77               	incfsz	__div_to_l_@f2+3,w
  6560  016B  02F3               	subwf	__div_to_l_@f1+3,f
  6561  016C                     l2988:
  6562  016C  1420               	bsf	__div_to_l_@quot,0
  6563  016D                     l2990:
  6564  016D  3001               	movlw	1
  6565  016E  00F8               	movwf	??__div_to_l_
  6566  016F                     u4525:
  6567  016F  1003               	clrc
  6568  0170  0DF0               	rlf	__div_to_l_@f1,f
  6569  0171  0DF1               	rlf	__div_to_l_@f1+1,f
  6570  0172  0DF2               	rlf	__div_to_l_@f1+2,f
  6571  0173  0DF3               	rlf	__div_to_l_@f1+3,f
  6572  0174  0BF8               	decfsz	??__div_to_l_,f
  6573  0175  296F               	goto	u4525
  6574  0176                     l2992:
  6575  0176  3001               	movlw	1
  6576  0177  02A4               	subwf	__div_to_l_@cntr,f
  6577  0178  1D03               	btfss	3,2
  6578  0179  297B               	goto	u4531
  6579  017A  297C               	goto	u4530
  6580  017B                     u4531:
  6581  017B  2943               	goto	l2982
  6582  017C                     u4530:
  6583  017C                     l569:
  6584  017C  1FA5               	btfss	__div_to_l_@exp1,7
  6585  017D  297F               	goto	u4541
  6586  017E  2980               	goto	u4540
  6587  017F                     u4541:
  6588  017F  299A               	goto	l3002
  6589  0180                     u4540:
  6590  0180                     l2994:
  6591  0180  0825               	movf	__div_to_l_@exp1,w
  6592  0181  3A80               	xorlw	128
  6593  0182  3E9F               	addlw	159
  6594  0183  1803               	skipnc
  6595  0184  2986               	goto	u4551
  6596  0185  2987               	goto	u4550
  6597  0186                     u4551:
  6598  0186  2988               	goto	l3000
  6599  0187                     u4550:
  6600  0187  2909               	goto	l2964
  6601  0188                     l3000:
  6602  0188  3001               	movlw	1
  6603  0189                     u4565:
  6604  0189  1003               	clrc
  6605  018A  0CA3               	rrf	__div_to_l_@quot+3,f
  6606  018B  0CA2               	rrf	__div_to_l_@quot+2,f
  6607  018C  0CA1               	rrf	__div_to_l_@quot+1,f
  6608  018D  0CA0               	rrf	__div_to_l_@quot,f
  6609  018E  3EFF               	addlw	-1
  6610  018F  1D03               	skipz
  6611  0190  2989               	goto	u4565
  6612  0191  3001               	movlw	1
  6613  0192  00F8               	movwf	??__div_to_l_
  6614  0193  0878               	movf	??__div_to_l_,w
  6615  0194  07A5               	addwf	__div_to_l_@exp1,f
  6616  0195  1D03               	btfss	3,2
  6617  0196  2998               	goto	u4571
  6618  0197  2999               	goto	u4570
  6619  0198                     u4571:
  6620  0198  2988               	goto	l3000
  6621  0199                     u4570:
  6622  0199  29B1               	goto	l3010
  6623  019A                     l3002:
  6624  019A  3020               	movlw	32
  6625  019B  0225               	subwf	__div_to_l_@exp1,w
  6626  019C  1C03               	skipc
  6627  019D  299F               	goto	u4581
  6628  019E  29A0               	goto	u4580
  6629  019F                     u4581:
  6630  019F  29AC               	goto	l576
  6631  01A0                     u4580:
  6632  01A0  2909               	goto	l2964
  6633  01A1                     l3008:
  6634  01A1  3001               	movlw	1
  6635  01A2  00F8               	movwf	??__div_to_l_
  6636  01A3                     u4595:
  6637  01A3  1003               	clrc
  6638  01A4  0DA0               	rlf	__div_to_l_@quot,f
  6639  01A5  0DA1               	rlf	__div_to_l_@quot+1,f
  6640  01A6  0DA2               	rlf	__div_to_l_@quot+2,f
  6641  01A7  0DA3               	rlf	__div_to_l_@quot+3,f
  6642  01A8  0BF8               	decfsz	??__div_to_l_,f
  6643  01A9  29A3               	goto	u4595
  6644  01AA  3001               	movlw	1
  6645  01AB  02A5               	subwf	__div_to_l_@exp1,f
  6646  01AC                     l576:
  6647  01AC  0825               	movf	__div_to_l_@exp1,w
  6648  01AD  1D03               	btfss	3,2
  6649  01AE  29B0               	goto	u4601
  6650  01AF  29B1               	goto	u4600
  6651  01B0                     u4601:
  6652  01B0  29A1               	goto	l3008
  6653  01B1                     u4600:
  6654  01B1                     l3010:
  6655  01B1  0823               	movf	__div_to_l_@quot+3,w
  6656  01B2  00F3               	movwf	?__div_to_l_+3
  6657  01B3  0822               	movf	__div_to_l_@quot+2,w
  6658  01B4  00F2               	movwf	?__div_to_l_+2
  6659  01B5  0821               	movf	__div_to_l_@quot+1,w
  6660  01B6  00F1               	movwf	?__div_to_l_+1
  6661  01B7  0820               	movf	__div_to_l_@quot,w
  6662  01B8  00F0               	movwf	?__div_to_l_
  6663  01B9                     l565:
  6664  01B9  0008               	return
  6665  01BA                     __end_of__div_to_l_:
  6666                           
  6667                           	psect	text14
  6668  1D3B                     __ptext14:	
  6669 ;; *************** function ___xxtofl *****************
  6670 ;; Defined at:
  6671 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\xxtofl.c"
  6672 ;; Parameters:    Size  Location     Type
  6673 ;;  sign            1    wreg     unsigned char 
  6674 ;;  val             4    0[COMMON] long 
  6675 ;; Auto vars:     Size  Location     Type
  6676 ;;  sign            1    8[COMMON] unsigned char 
  6677 ;;  arg             4   10[COMMON] unsigned long 
  6678 ;;  exp             1    9[COMMON] unsigned char 
  6679 ;; Return value:  Size  Location     Type
  6680 ;;                  4    0[COMMON] unsigned char 
  6681 ;; Registers used:
  6682 ;;		wreg, status,2, status,0
  6683 ;; Tracked objects:
  6684 ;;		On entry : 0/0
  6685 ;;		On exit  : 0/0
  6686 ;;		Unchanged: 0/0
  6687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6688 ;;      Params:         4       0       0       0       0
  6689 ;;      Locals:         6       0       0       0       0
  6690 ;;      Temps:          4       0       0       0       0
  6691 ;;      Totals:        14       0       0       0       0
  6692 ;;Total ram usage:       14 bytes
  6693 ;; Hardware stack levels used:    1
  6694 ;; This function calls:
  6695 ;;		Nothing
  6696 ;; This function is called by:
  6697 ;;		_main
  6698 ;;		_sprintf
  6699 ;; This function uses a non-reentrant model
  6700 ;;
  6701                           
  6702                           
  6703                           ;psect for function ___xxtofl
  6704  1D3B                     ___xxtofl:
  6705                           
  6706                           ;incstack = 0
  6707                           ; Regs used in ___xxtofl: [wreg+status,2+status,0]
  6708                           ;___xxtofl@sign stored from wreg
  6709  1D3B  00F8               	movwf	___xxtofl@sign
  6710  1D3C                     l3154:
  6711  1D3C  0878               	movf	___xxtofl@sign,w
  6712  1D3D  1903               	btfsc	3,2
  6713  1D3E  2D40               	goto	u4991
  6714  1D3F  2D41               	goto	u4990
  6715  1D40                     u4991:
  6716  1D40  2D55               	goto	l3160
  6717  1D41                     u4990:
  6718  1D41                     l3156:
  6719  1D41  1FF3               	btfss	___xxtofl@val+3,7
  6720  1D42  2D44               	goto	u5001
  6721  1D43  2D45               	goto	u5000
  6722  1D44                     u5001:
  6723  1D44  2D55               	goto	l3160
  6724  1D45                     u5000:
  6725  1D45                     l3158:
  6726  1D45  0970               	comf	___xxtofl@val,w
  6727  1D46  00FA               	movwf	___xxtofl@arg
  6728  1D47  0971               	comf	___xxtofl@val+1,w
  6729  1D48  00FB               	movwf	___xxtofl@arg+1
  6730  1D49  0972               	comf	___xxtofl@val+2,w
  6731  1D4A  00FC               	movwf	___xxtofl@arg+2
  6732  1D4B  0973               	comf	___xxtofl@val+3,w
  6733  1D4C  00FD               	movwf	___xxtofl@arg+3
  6734  1D4D  0AFA               	incf	___xxtofl@arg,f
  6735  1D4E  1903               	skipnz
  6736  1D4F  0AFB               	incf	___xxtofl@arg+1,f
  6737  1D50  1903               	skipnz
  6738  1D51  0AFC               	incf	___xxtofl@arg+2,f
  6739  1D52  1903               	skipnz
  6740  1D53  0AFD               	incf	___xxtofl@arg+3,f
  6741  1D54  2D5D               	goto	l862
  6742  1D55                     l3160:
  6743  1D55  0873               	movf	___xxtofl@val+3,w
  6744  1D56  00FD               	movwf	___xxtofl@arg+3
  6745  1D57  0872               	movf	___xxtofl@val+2,w
  6746  1D58  00FC               	movwf	___xxtofl@arg+2
  6747  1D59  0871               	movf	___xxtofl@val+1,w
  6748  1D5A  00FB               	movwf	___xxtofl@arg+1
  6749  1D5B  0870               	movf	___xxtofl@val,w
  6750  1D5C  00FA               	movwf	___xxtofl@arg
  6751  1D5D                     l862:
  6752  1D5D  0873               	movf	___xxtofl@val+3,w
  6753  1D5E  0472               	iorwf	___xxtofl@val+2,w
  6754  1D5F  0471               	iorwf	___xxtofl@val+1,w
  6755  1D60  0470               	iorwf	___xxtofl@val,w
  6756  1D61  1D03               	skipz
  6757  1D62  2D64               	goto	u5011
  6758  1D63  2D65               	goto	u5010
  6759  1D64                     u5011:
  6760  1D64  2D6E               	goto	l3166
  6761  1D65                     u5010:
  6762  1D65                     l3162:
  6763  1D65  3000               	movlw	0
  6764  1D66  00F3               	movwf	?___xxtofl+3
  6765  1D67  3000               	movlw	0
  6766  1D68  00F2               	movwf	?___xxtofl+2
  6767  1D69  3000               	movlw	0
  6768  1D6A  00F1               	movwf	?___xxtofl+1
  6769  1D6B  3000               	movlw	0
  6770  1D6C  00F0               	movwf	?___xxtofl
  6771  1D6D  2DF4               	goto	l864
  6772  1D6E                     l3166:
  6773  1D6E  3096               	movlw	150
  6774  1D6F  00F4               	movwf	??___xxtofl
  6775  1D70  0874               	movf	??___xxtofl,w
  6776  1D71  00F9               	movwf	___xxtofl@exp
  6777  1D72  2D80               	goto	l3170
  6778  1D73                     l3168:
  6779  1D73  3001               	movlw	1
  6780  1D74  00F4               	movwf	??___xxtofl
  6781  1D75  0874               	movf	??___xxtofl,w
  6782  1D76  07F9               	addwf	___xxtofl@exp,f
  6783  1D77  3001               	movlw	1
  6784  1D78                     u5025:
  6785  1D78  1003               	clrc
  6786  1D79  0CFD               	rrf	___xxtofl@arg+3,f
  6787  1D7A  0CFC               	rrf	___xxtofl@arg+2,f
  6788  1D7B  0CFB               	rrf	___xxtofl@arg+1,f
  6789  1D7C  0CFA               	rrf	___xxtofl@arg,f
  6790  1D7D  3EFF               	addlw	-1
  6791  1D7E  1D03               	skipz
  6792  1D7F  2D78               	goto	u5025
  6793  1D80                     l3170:
  6794  1D80  30FE               	movlw	254
  6795  1D81  057D               	andwf	___xxtofl@arg+3,w
  6796  1D82  1D03               	btfss	3,2
  6797  1D83  2D85               	goto	u5031
  6798  1D84  2D86               	goto	u5030
  6799  1D85                     u5031:
  6800  1D85  2D73               	goto	l3168
  6801  1D86                     u5030:
  6802  1D86  2DA2               	goto	l868
  6803  1D87                     l3172:
  6804  1D87  3001               	movlw	1
  6805  1D88  00F4               	movwf	??___xxtofl
  6806  1D89  0874               	movf	??___xxtofl,w
  6807  1D8A  07F9               	addwf	___xxtofl@exp,f
  6808  1D8B                     l3174:
  6809  1D8B  3001               	movlw	1
  6810  1D8C  07FA               	addwf	___xxtofl@arg,f
  6811  1D8D  3000               	movlw	0
  6812  1D8E  1803               	skipnc
  6813  1D8F  3001               	movlw	1
  6814  1D90  07FB               	addwf	___xxtofl@arg+1,f
  6815  1D91  3000               	movlw	0
  6816  1D92  1803               	skipnc
  6817  1D93  3001               	movlw	1
  6818  1D94  07FC               	addwf	___xxtofl@arg+2,f
  6819  1D95  3000               	movlw	0
  6820  1D96  1803               	skipnc
  6821  1D97  3001               	movlw	1
  6822  1D98  07FD               	addwf	___xxtofl@arg+3,f
  6823  1D99                     l3176:
  6824  1D99  3001               	movlw	1
  6825  1D9A                     u5045:
  6826  1D9A  1003               	clrc
  6827  1D9B  0CFD               	rrf	___xxtofl@arg+3,f
  6828  1D9C  0CFC               	rrf	___xxtofl@arg+2,f
  6829  1D9D  0CFB               	rrf	___xxtofl@arg+1,f
  6830  1D9E  0CFA               	rrf	___xxtofl@arg,f
  6831  1D9F  3EFF               	addlw	-1
  6832  1DA0  1D03               	skipz
  6833  1DA1  2D9A               	goto	u5045
  6834  1DA2                     l868:
  6835  1DA2  30FF               	movlw	255
  6836  1DA3  057D               	andwf	___xxtofl@arg+3,w
  6837  1DA4  1D03               	btfss	3,2
  6838  1DA5  2DA7               	goto	u5051
  6839  1DA6  2DA8               	goto	u5050
  6840  1DA7                     u5051:
  6841  1DA7  2D87               	goto	l3172
  6842  1DA8                     u5050:
  6843  1DA8  2DB4               	goto	l3180
  6844  1DA9                     l3178:
  6845  1DA9  3001               	movlw	1
  6846  1DAA  02F9               	subwf	___xxtofl@exp,f
  6847  1DAB  3001               	movlw	1
  6848  1DAC  00F4               	movwf	??___xxtofl
  6849  1DAD                     u5065:
  6850  1DAD  1003               	clrc
  6851  1DAE  0DFA               	rlf	___xxtofl@arg,f
  6852  1DAF  0DFB               	rlf	___xxtofl@arg+1,f
  6853  1DB0  0DFC               	rlf	___xxtofl@arg+2,f
  6854  1DB1  0DFD               	rlf	___xxtofl@arg+3,f
  6855  1DB2  0BF4               	decfsz	??___xxtofl,f
  6856  1DB3  2DAD               	goto	u5065
  6857  1DB4                     l3180:
  6858  1DB4  1BFC               	btfsc	___xxtofl@arg+2,7
  6859  1DB5  2DB7               	goto	u5071
  6860  1DB6  2DB8               	goto	u5070
  6861  1DB7                     u5071:
  6862  1DB7  2DBE               	goto	l875
  6863  1DB8                     u5070:
  6864  1DB8                     l3182:
  6865  1DB8  3002               	movlw	2
  6866  1DB9  0279               	subwf	___xxtofl@exp,w
  6867  1DBA  1803               	skipnc
  6868  1DBB  2DBD               	goto	u5081
  6869  1DBC  2DBE               	goto	u5080
  6870  1DBD                     u5081:
  6871  1DBD  2DA9               	goto	l3178
  6872  1DBE                     u5080:
  6873  1DBE                     l875:
  6874  1DBE  1879               	btfsc	___xxtofl@exp,0
  6875  1DBF  2DC1               	goto	u5091
  6876  1DC0  2DC2               	goto	u5090
  6877  1DC1                     u5091:
  6878  1DC1  2DCA               	goto	l876
  6879  1DC2                     u5090:
  6880  1DC2                     l3184:
  6881  1DC2  30FF               	movlw	255
  6882  1DC3  05FA               	andwf	___xxtofl@arg,f
  6883  1DC4  30FF               	movlw	255
  6884  1DC5  05FB               	andwf	___xxtofl@arg+1,f
  6885  1DC6  307F               	movlw	127
  6886  1DC7  05FC               	andwf	___xxtofl@arg+2,f
  6887  1DC8  30FF               	movlw	255
  6888  1DC9  05FD               	andwf	___xxtofl@arg+3,f
  6889  1DCA                     l876:
  6890  1DCA  1003               	clrc
  6891  1DCB  0CF9               	rrf	___xxtofl@exp,f
  6892  1DCC                     l3186:
  6893  1DCC  0879               	movf	___xxtofl@exp,w
  6894  1DCD  00F4               	movwf	??___xxtofl
  6895  1DCE  01F5               	clrf	??___xxtofl+1
  6896  1DCF  01F6               	clrf	??___xxtofl+2
  6897  1DD0  01F7               	clrf	??___xxtofl+3
  6898  1DD1  3018               	movlw	24
  6899  1DD2                     u5105:
  6900  1DD2  1003               	clrc
  6901  1DD3  0DF4               	rlf	??___xxtofl,f
  6902  1DD4  0DF5               	rlf	??___xxtofl+1,f
  6903  1DD5  0DF6               	rlf	??___xxtofl+2,f
  6904  1DD6  0DF7               	rlf	??___xxtofl+3,f
  6905  1DD7                     u5100:
  6906  1DD7  3EFF               	addlw	-1
  6907  1DD8  1D03               	skipz
  6908  1DD9  2DD2               	goto	u5105
  6909  1DDA  0874               	movf	??___xxtofl,w
  6910  1DDB  04FA               	iorwf	___xxtofl@arg,f
  6911  1DDC  0875               	movf	??___xxtofl+1,w
  6912  1DDD  04FB               	iorwf	___xxtofl@arg+1,f
  6913  1DDE  0876               	movf	??___xxtofl+2,w
  6914  1DDF  04FC               	iorwf	___xxtofl@arg+2,f
  6915  1DE0  0877               	movf	??___xxtofl+3,w
  6916  1DE1  04FD               	iorwf	___xxtofl@arg+3,f
  6917  1DE2                     l3188:
  6918  1DE2  0878               	movf	___xxtofl@sign,w
  6919  1DE3  1903               	btfsc	3,2
  6920  1DE4  2DE6               	goto	u5111
  6921  1DE5  2DE7               	goto	u5110
  6922  1DE6                     u5111:
  6923  1DE6  2DEC               	goto	l3194
  6924  1DE7                     u5110:
  6925  1DE7                     l3190:
  6926  1DE7  1FF3               	btfss	___xxtofl@val+3,7
  6927  1DE8  2DEA               	goto	u5121
  6928  1DE9  2DEB               	goto	u5120
  6929  1DEA                     u5121:
  6930  1DEA  2DEC               	goto	l3194
  6931  1DEB                     u5120:
  6932  1DEB                     l3192:
  6933  1DEB  17FD               	bsf	___xxtofl@arg+3,7
  6934  1DEC                     l3194:
  6935  1DEC  087D               	movf	___xxtofl@arg+3,w
  6936  1DED  00F3               	movwf	?___xxtofl+3
  6937  1DEE  087C               	movf	___xxtofl@arg+2,w
  6938  1DEF  00F2               	movwf	?___xxtofl+2
  6939  1DF0  087B               	movf	___xxtofl@arg+1,w
  6940  1DF1  00F1               	movwf	?___xxtofl+1
  6941  1DF2  087A               	movf	___xxtofl@arg,w
  6942  1DF3  00F0               	movwf	?___xxtofl
  6943  1DF4                     l864:
  6944  1DF4  0008               	return
  6945  1DF5                     __end_of___xxtofl:
  6946                           
  6947                           	psect	text15
  6948  1992                     __ptext15:	
  6949 ;; *************** function ___wmul *****************
  6950 ;; Defined at:
  6951 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\Umul16.c"
  6952 ;; Parameters:    Size  Location     Type
  6953 ;;  multiplier      2    0[COMMON] unsigned int 
  6954 ;;  multiplicand    2    2[COMMON] unsigned int 
  6955 ;; Auto vars:     Size  Location     Type
  6956 ;;  product         2    4[COMMON] unsigned int 
  6957 ;; Return value:  Size  Location     Type
  6958 ;;                  2    0[COMMON] unsigned int 
  6959 ;; Registers used:
  6960 ;;		wreg, status,2, status,0
  6961 ;; Tracked objects:
  6962 ;;		On entry : 0/0
  6963 ;;		On exit  : 0/0
  6964 ;;		Unchanged: 0/0
  6965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6966 ;;      Params:         4       0       0       0       0
  6967 ;;      Locals:         2       0       0       0       0
  6968 ;;      Temps:          0       0       0       0       0
  6969 ;;      Totals:         6       0       0       0       0
  6970 ;;Total ram usage:        6 bytes
  6971 ;; Hardware stack levels used:    1
  6972 ;; This function calls:
  6973 ;;		Nothing
  6974 ;; This function is called by:
  6975 ;;		_sprintf
  6976 ;; This function uses a non-reentrant model
  6977 ;;
  6978                           
  6979                           
  6980                           ;psect for function ___wmul
  6981  1992                     ___wmul:
  6982  1992                     l3014:	
  6983                           ;incstack = 0
  6984                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  6985                           
  6986  1992  01F4               	clrf	___wmul@product
  6987  1993  01F5               	clrf	___wmul@product+1
  6988  1994                     l3016:
  6989  1994  1C70               	btfss	___wmul@multiplier,0
  6990  1995  2997               	goto	u4611
  6991  1996  2998               	goto	u4610
  6992  1997                     u4611:
  6993  1997  299E               	goto	l395
  6994  1998                     u4610:
  6995  1998                     l3018:
  6996  1998  0872               	movf	___wmul@multiplicand,w
  6997  1999  07F4               	addwf	___wmul@product,f
  6998  199A  1803               	skipnc
  6999  199B  0AF5               	incf	___wmul@product+1,f
  7000  199C  0873               	movf	___wmul@multiplicand+1,w
  7001  199D  07F5               	addwf	___wmul@product+1,f
  7002  199E                     l395:
  7003  199E  3001               	movlw	1
  7004  199F                     u4625:
  7005  199F  1003               	clrc
  7006  19A0  0DF2               	rlf	___wmul@multiplicand,f
  7007  19A1  0DF3               	rlf	___wmul@multiplicand+1,f
  7008  19A2  3EFF               	addlw	-1
  7009  19A3  1D03               	skipz
  7010  19A4  299F               	goto	u4625
  7011  19A5                     l3020:
  7012  19A5  3001               	movlw	1
  7013  19A6                     u4635:
  7014  19A6  1003               	clrc
  7015  19A7  0CF1               	rrf	___wmul@multiplier+1,f
  7016  19A8  0CF0               	rrf	___wmul@multiplier,f
  7017  19A9  3EFF               	addlw	-1
  7018  19AA  1D03               	skipz
  7019  19AB  29A6               	goto	u4635
  7020  19AC                     l3022:
  7021  19AC  0870               	movf	___wmul@multiplier,w
  7022  19AD  0471               	iorwf	___wmul@multiplier+1,w
  7023  19AE  1D03               	btfss	3,2
  7024  19AF  29B1               	goto	u4641
  7025  19B0  29B2               	goto	u4640
  7026  19B1                     u4641:
  7027  19B1  2994               	goto	l3016
  7028  19B2                     u4640:
  7029  19B2                     l3024:
  7030  19B2  0875               	movf	___wmul@product+1,w
  7031  19B3  00F1               	movwf	?___wmul+1
  7032  19B4  0874               	movf	___wmul@product,w
  7033  19B5  00F0               	movwf	?___wmul
  7034  19B6                     l397:
  7035  19B6  0008               	return
  7036  19B7                     __end_of___wmul:
  7037                           
  7038                           	psect	text16
  7039  1001                     __ptext16:	
  7040 ;; *************** function ___llmod *****************
  7041 ;; Defined at:
  7042 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\llmod.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;  divisor         4    0[BANK0 ] unsigned long 
  7045 ;;  dividend        4    4[BANK0 ] unsigned long 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;  counter         1    9[BANK0 ] unsigned char 
  7048 ;; Return value:  Size  Location     Type
  7049 ;;                  4    0[BANK0 ] unsigned long 
  7050 ;; Registers used:
  7051 ;;		wreg, status,2, status,0
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7057 ;;      Params:         0       8       0       0       0
  7058 ;;      Locals:         0       1       0       0       0
  7059 ;;      Temps:          0       1       0       0       0
  7060 ;;      Totals:         0      10       0       0       0
  7061 ;;Total ram usage:       10 bytes
  7062 ;; Hardware stack levels used:    1
  7063 ;; This function calls:
  7064 ;;		Nothing
  7065 ;; This function is called by:
  7066 ;;		_sprintf
  7067 ;; This function uses a non-reentrant model
  7068 ;;
  7069                           
  7070                           
  7071                           ;psect for function ___llmod
  7072  1001                     ___llmod:
  7073  1001                     l3128:	
  7074                           ;incstack = 0
  7075                           ; Regs used in ___llmod: [wreg+status,2+status,0]
  7076                           
  7077  1001  1283               	bcf	3,5	;RP0=0, select bank0
  7078  1002  1303               	bcf	3,6	;RP1=0, select bank0
  7079  1003  0823               	movf	___llmod@divisor+3,w
  7080  1004  0422               	iorwf	___llmod@divisor+2,w
  7081  1005  0421               	iorwf	___llmod@divisor+1,w
  7082  1006  0420               	iorwf	___llmod@divisor,w
  7083  1007  1903               	skipnz
  7084  1008  280A               	goto	u4931
  7085  1009  280B               	goto	u4930
  7086  100A                     u4931:
  7087  100A  284E               	goto	l3144
  7088  100B                     u4930:
  7089  100B                     l3130:
  7090  100B  01A9               	clrf	___llmod@counter
  7091  100C  0AA9               	incf	___llmod@counter,f
  7092  100D  281B               	goto	l3134
  7093  100E                     l3132:
  7094  100E  3001               	movlw	1
  7095  100F  00A8               	movwf	??___llmod
  7096  1010                     u4945:
  7097  1010  1003               	clrc
  7098  1011  0DA0               	rlf	___llmod@divisor,f
  7099  1012  0DA1               	rlf	___llmod@divisor+1,f
  7100  1013  0DA2               	rlf	___llmod@divisor+2,f
  7101  1014  0DA3               	rlf	___llmod@divisor+3,f
  7102  1015  0BA8               	decfsz	??___llmod,f
  7103  1016  2810               	goto	u4945
  7104  1017  3001               	movlw	1
  7105  1018  00A8               	movwf	??___llmod
  7106  1019  0828               	movf	??___llmod,w
  7107  101A  07A9               	addwf	___llmod@counter,f
  7108  101B                     l3134:
  7109  101B  1FA3               	btfss	___llmod@divisor+3,7
  7110  101C  281E               	goto	u4951
  7111  101D  281F               	goto	u4950
  7112  101E                     u4951:
  7113  101E  280E               	goto	l3132
  7114  101F                     u4950:
  7115  101F                     l3136:
  7116  101F  0823               	movf	___llmod@divisor+3,w
  7117  1020  0227               	subwf	___llmod@dividend+3,w
  7118  1021  1D03               	skipz
  7119  1022  282D               	goto	u4965
  7120  1023  0822               	movf	___llmod@divisor+2,w
  7121  1024  0226               	subwf	___llmod@dividend+2,w
  7122  1025  1D03               	skipz
  7123  1026  282D               	goto	u4965
  7124  1027  0821               	movf	___llmod@divisor+1,w
  7125  1028  0225               	subwf	___llmod@dividend+1,w
  7126  1029  1D03               	skipz
  7127  102A  282D               	goto	u4965
  7128  102B  0820               	movf	___llmod@divisor,w
  7129  102C  0224               	subwf	___llmod@dividend,w
  7130  102D                     u4965:
  7131  102D  1C03               	skipc
  7132  102E  2830               	goto	u4961
  7133  102F  2831               	goto	u4960
  7134  1030                     u4961:
  7135  1030  283F               	goto	l3140
  7136  1031                     u4960:
  7137  1031                     l3138:
  7138  1031  0820               	movf	___llmod@divisor,w
  7139  1032  02A4               	subwf	___llmod@dividend,f
  7140  1033  0821               	movf	___llmod@divisor+1,w
  7141  1034  1C03               	skipc
  7142  1035  0F21               	incfsz	___llmod@divisor+1,w
  7143  1036  02A5               	subwf	___llmod@dividend+1,f
  7144  1037  0822               	movf	___llmod@divisor+2,w
  7145  1038  1C03               	skipc
  7146  1039  0F22               	incfsz	___llmod@divisor+2,w
  7147  103A  02A6               	subwf	___llmod@dividend+2,f
  7148  103B  0823               	movf	___llmod@divisor+3,w
  7149  103C  1C03               	skipc
  7150  103D  0F23               	incfsz	___llmod@divisor+3,w
  7151  103E  02A7               	subwf	___llmod@dividend+3,f
  7152  103F                     l3140:
  7153  103F  3001               	movlw	1
  7154  1040                     u4975:
  7155  1040  1003               	clrc
  7156  1041  0CA3               	rrf	___llmod@divisor+3,f
  7157  1042  0CA2               	rrf	___llmod@divisor+2,f
  7158  1043  0CA1               	rrf	___llmod@divisor+1,f
  7159  1044  0CA0               	rrf	___llmod@divisor,f
  7160  1045  3EFF               	addlw	-1
  7161  1046  1D03               	skipz
  7162  1047  2840               	goto	u4975
  7163  1048                     l3142:
  7164  1048  3001               	movlw	1
  7165  1049  02A9               	subwf	___llmod@counter,f
  7166  104A  1D03               	btfss	3,2
  7167  104B  284D               	goto	u4981
  7168  104C  284E               	goto	u4980
  7169  104D                     u4981:
  7170  104D  281F               	goto	l3136
  7171  104E                     u4980:
  7172  104E                     l3144:
  7173  104E  0827               	movf	___llmod@dividend+3,w
  7174  104F  00A3               	movwf	?___llmod+3
  7175  1050  0826               	movf	___llmod@dividend+2,w
  7176  1051  00A2               	movwf	?___llmod+2
  7177  1052  0825               	movf	___llmod@dividend+1,w
  7178  1053  00A1               	movwf	?___llmod+1
  7179  1054  0824               	movf	___llmod@dividend,w
  7180  1055  00A0               	movwf	?___llmod
  7181  1056                     l651:
  7182  1056  0008               	return
  7183  1057                     __end_of___llmod:
  7184                           
  7185                           	psect	text17
  7186  1B5F                     __ptext17:	
  7187 ;; *************** function ___lldiv *****************
  7188 ;; Defined at:
  7189 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\__lldiv.c"
  7190 ;; Parameters:    Size  Location     Type
  7191 ;;  divisor         4    0[COMMON] unsigned long 
  7192 ;;  dividend        4    4[COMMON] unsigned long 
  7193 ;; Auto vars:     Size  Location     Type
  7194 ;;  quotient        4    9[COMMON] unsigned long 
  7195 ;;  counter         1   13[COMMON] unsigned char 
  7196 ;; Return value:  Size  Location     Type
  7197 ;;                  4    0[COMMON] unsigned long 
  7198 ;; Registers used:
  7199 ;;		wreg, status,2, status,0
  7200 ;; Tracked objects:
  7201 ;;		On entry : 0/0
  7202 ;;		On exit  : 0/0
  7203 ;;		Unchanged: 0/0
  7204 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7205 ;;      Params:         8       0       0       0       0
  7206 ;;      Locals:         5       0       0       0       0
  7207 ;;      Temps:          1       0       0       0       0
  7208 ;;      Totals:        14       0       0       0       0
  7209 ;;Total ram usage:       14 bytes
  7210 ;; Hardware stack levels used:    1
  7211 ;; This function calls:
  7212 ;;		Nothing
  7213 ;; This function is called by:
  7214 ;;		_sprintf
  7215 ;; This function uses a non-reentrant model
  7216 ;;
  7217                           
  7218                           
  7219                           ;psect for function ___lldiv
  7220  1B5F                     ___lldiv:
  7221  1B5F                     l3028:	
  7222                           ;incstack = 0
  7223                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  7224                           
  7225  1B5F  3000               	movlw	0
  7226  1B60  00FC               	movwf	___lldiv@quotient+3
  7227  1B61  3000               	movlw	0
  7228  1B62  00FB               	movwf	___lldiv@quotient+2
  7229  1B63  3000               	movlw	0
  7230  1B64  00FA               	movwf	___lldiv@quotient+1
  7231  1B65  3000               	movlw	0
  7232  1B66  00F9               	movwf	___lldiv@quotient
  7233  1B67  0873               	movf	___lldiv@divisor+3,w
  7234  1B68  0472               	iorwf	___lldiv@divisor+2,w
  7235  1B69  0471               	iorwf	___lldiv@divisor+1,w
  7236  1B6A  0470               	iorwf	___lldiv@divisor,w
  7237  1B6B  1903               	skipnz
  7238  1B6C  2B6E               	goto	u4651
  7239  1B6D  2B6F               	goto	u4650
  7240  1B6E                     u4651:
  7241  1B6E  2BBC               	goto	l3048
  7242  1B6F                     u4650:
  7243  1B6F                     l3030:
  7244  1B6F  01FD               	clrf	___lldiv@counter
  7245  1B70  0AFD               	incf	___lldiv@counter,f
  7246  1B71  2B7F               	goto	l3034
  7247  1B72                     l3032:
  7248  1B72  3001               	movlw	1
  7249  1B73  00F8               	movwf	??___lldiv
  7250  1B74                     u4665:
  7251  1B74  1003               	clrc
  7252  1B75  0DF0               	rlf	___lldiv@divisor,f
  7253  1B76  0DF1               	rlf	___lldiv@divisor+1,f
  7254  1B77  0DF2               	rlf	___lldiv@divisor+2,f
  7255  1B78  0DF3               	rlf	___lldiv@divisor+3,f
  7256  1B79  0BF8               	decfsz	??___lldiv,f
  7257  1B7A  2B74               	goto	u4665
  7258  1B7B  3001               	movlw	1
  7259  1B7C  00F8               	movwf	??___lldiv
  7260  1B7D  0878               	movf	??___lldiv,w
  7261  1B7E  07FD               	addwf	___lldiv@counter,f
  7262  1B7F                     l3034:
  7263  1B7F  1FF3               	btfss	___lldiv@divisor+3,7
  7264  1B80  2B82               	goto	u4671
  7265  1B81  2B83               	goto	u4670
  7266  1B82                     u4671:
  7267  1B82  2B72               	goto	l3032
  7268  1B83                     u4670:
  7269  1B83                     l3036:
  7270  1B83  3001               	movlw	1
  7271  1B84  00F8               	movwf	??___lldiv
  7272  1B85                     u4685:
  7273  1B85  1003               	clrc
  7274  1B86  0DF9               	rlf	___lldiv@quotient,f
  7275  1B87  0DFA               	rlf	___lldiv@quotient+1,f
  7276  1B88  0DFB               	rlf	___lldiv@quotient+2,f
  7277  1B89  0DFC               	rlf	___lldiv@quotient+3,f
  7278  1B8A  0BF8               	decfsz	??___lldiv,f
  7279  1B8B  2B85               	goto	u4685
  7280  1B8C                     l3038:
  7281  1B8C  0873               	movf	___lldiv@divisor+3,w
  7282  1B8D  0277               	subwf	___lldiv@dividend+3,w
  7283  1B8E  1D03               	skipz
  7284  1B8F  2B9A               	goto	u4695
  7285  1B90  0872               	movf	___lldiv@divisor+2,w
  7286  1B91  0276               	subwf	___lldiv@dividend+2,w
  7287  1B92  1D03               	skipz
  7288  1B93  2B9A               	goto	u4695
  7289  1B94  0871               	movf	___lldiv@divisor+1,w
  7290  1B95  0275               	subwf	___lldiv@dividend+1,w
  7291  1B96  1D03               	skipz
  7292  1B97  2B9A               	goto	u4695
  7293  1B98  0870               	movf	___lldiv@divisor,w
  7294  1B99  0274               	subwf	___lldiv@dividend,w
  7295  1B9A                     u4695:
  7296  1B9A  1C03               	skipc
  7297  1B9B  2B9D               	goto	u4691
  7298  1B9C  2B9E               	goto	u4690
  7299  1B9D                     u4691:
  7300  1B9D  2BAD               	goto	l3044
  7301  1B9E                     u4690:
  7302  1B9E                     l3040:
  7303  1B9E  0870               	movf	___lldiv@divisor,w
  7304  1B9F  02F4               	subwf	___lldiv@dividend,f
  7305  1BA0  0871               	movf	___lldiv@divisor+1,w
  7306  1BA1  1C03               	skipc
  7307  1BA2  0F71               	incfsz	___lldiv@divisor+1,w
  7308  1BA3  02F5               	subwf	___lldiv@dividend+1,f
  7309  1BA4  0872               	movf	___lldiv@divisor+2,w
  7310  1BA5  1C03               	skipc
  7311  1BA6  0F72               	incfsz	___lldiv@divisor+2,w
  7312  1BA7  02F6               	subwf	___lldiv@dividend+2,f
  7313  1BA8  0873               	movf	___lldiv@divisor+3,w
  7314  1BA9  1C03               	skipc
  7315  1BAA  0F73               	incfsz	___lldiv@divisor+3,w
  7316  1BAB  02F7               	subwf	___lldiv@dividend+3,f
  7317  1BAC                     l3042:
  7318  1BAC  1479               	bsf	___lldiv@quotient,0
  7319  1BAD                     l3044:
  7320  1BAD  3001               	movlw	1
  7321  1BAE                     u4705:
  7322  1BAE  1003               	clrc
  7323  1BAF  0CF3               	rrf	___lldiv@divisor+3,f
  7324  1BB0  0CF2               	rrf	___lldiv@divisor+2,f
  7325  1BB1  0CF1               	rrf	___lldiv@divisor+1,f
  7326  1BB2  0CF0               	rrf	___lldiv@divisor,f
  7327  1BB3  3EFF               	addlw	-1
  7328  1BB4  1D03               	skipz
  7329  1BB5  2BAE               	goto	u4705
  7330  1BB6                     l3046:
  7331  1BB6  3001               	movlw	1
  7332  1BB7  02FD               	subwf	___lldiv@counter,f
  7333  1BB8  1D03               	btfss	3,2
  7334  1BB9  2BBB               	goto	u4711
  7335  1BBA  2BBC               	goto	u4710
  7336  1BBB                     u4711:
  7337  1BBB  2B83               	goto	l3036
  7338  1BBC                     u4710:
  7339  1BBC                     l3048:
  7340  1BBC  087C               	movf	___lldiv@quotient+3,w
  7341  1BBD  00F3               	movwf	?___lldiv+3
  7342  1BBE  087B               	movf	___lldiv@quotient+2,w
  7343  1BBF  00F2               	movwf	?___lldiv+2
  7344  1BC0  087A               	movf	___lldiv@quotient+1,w
  7345  1BC1  00F1               	movwf	?___lldiv+1
  7346  1BC2  0879               	movf	___lldiv@quotient,w
  7347  1BC3  00F0               	movwf	?___lldiv
  7348  1BC4                     l431:
  7349  1BC4  0008               	return
  7350  1BC5                     __end_of___lldiv:
  7351                           
  7352                           	psect	text18
  7353  0807                     __ptext18:	
  7354 ;; *************** function ___fltol *****************
  7355 ;; Defined at:
  7356 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fltol.c"
  7357 ;; Parameters:    Size  Location     Type
  7358 ;;  f1              4   49[BANK0 ] unsigned long 
  7359 ;; Auto vars:     Size  Location     Type
  7360 ;;  exp1            1   59[BANK0 ] unsigned char 
  7361 ;;  sign1           1   58[BANK0 ] unsigned char 
  7362 ;; Return value:  Size  Location     Type
  7363 ;;                  4   49[BANK0 ] long 
  7364 ;; Registers used:
  7365 ;;		wreg, status,2, status,0
  7366 ;; Tracked objects:
  7367 ;;		On entry : 0/0
  7368 ;;		On exit  : 0/0
  7369 ;;		Unchanged: 0/0
  7370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7371 ;;      Params:         0       4       0       0       0
  7372 ;;      Locals:         0       2       0       0       0
  7373 ;;      Temps:          0       5       0       0       0
  7374 ;;      Totals:         0      11       0       0       0
  7375 ;;Total ram usage:       11 bytes
  7376 ;; Hardware stack levels used:    1
  7377 ;; This function calls:
  7378 ;;		Nothing
  7379 ;; This function is called by:
  7380 ;;		_sprintf
  7381 ;; This function uses a non-reentrant model
  7382 ;;
  7383                           
  7384                           
  7385                           ;psect for function ___fltol
  7386  0807                     ___fltol:
  7387  0807                     l3092:	
  7388                           ;incstack = 0
  7389                           ; Regs used in ___fltol: [wreg+status,2+status,0]
  7390                           
  7391  0807  1003               	clrc
  7392  0808  1283               	bcf	3,5	;RP0=0, select bank0
  7393  0809  1303               	bcf	3,6	;RP1=0, select bank0
  7394  080A  0D53               	rlf	___fltol@f1+2,w
  7395  080B  0D54               	rlf	___fltol@f1+3,w
  7396  080C  00D5               	movwf	??___fltol
  7397  080D  0855               	movf	??___fltol,w
  7398  080E  00DB               	movwf	___fltol@exp1
  7399  080F  085B               	movf	___fltol@exp1,w
  7400  0810  1D03               	btfss	3,2
  7401  0811  2813               	goto	u4831
  7402  0812  2814               	goto	u4830
  7403  0813                     u4831:
  7404  0813  281D               	goto	l3098
  7405  0814                     u4830:
  7406  0814                     l3094:
  7407  0814  3000               	movlw	0
  7408  0815  00D4               	movwf	?___fltol+3
  7409  0816  3000               	movlw	0
  7410  0817  00D3               	movwf	?___fltol+2
  7411  0818  3000               	movlw	0
  7412  0819  00D2               	movwf	?___fltol+1
  7413  081A  3000               	movlw	0
  7414  081B  00D1               	movwf	?___fltol
  7415  081C  2882               	goto	l598
  7416  081D                     l3098:
  7417  081D  0851               	movf	___fltol@f1,w
  7418  081E  00D5               	movwf	??___fltol
  7419  081F  0852               	movf	___fltol@f1+1,w
  7420  0820  00D6               	movwf	??___fltol+1
  7421  0821  0853               	movf	___fltol@f1+2,w
  7422  0822  00D7               	movwf	??___fltol+2
  7423  0823  0854               	movf	___fltol@f1+3,w
  7424  0824  00D8               	movwf	??___fltol+3
  7425  0825  301F               	movlw	31
  7426  0826                     u4845:
  7427  0826  1003               	clrc
  7428  0827  0CD8               	rrf	??___fltol+3,f
  7429  0828  0CD7               	rrf	??___fltol+2,f
  7430  0829  0CD6               	rrf	??___fltol+1,f
  7431  082A  0CD5               	rrf	??___fltol,f
  7432  082B                     u4840:
  7433  082B  3EFF               	addlw	-1
  7434  082C  1D03               	skipz
  7435  082D  2826               	goto	u4845
  7436  082E  0855               	movf	??___fltol,w
  7437  082F  00D9               	movwf	??___fltol+4
  7438  0830  0859               	movf	??___fltol+4,w
  7439  0831  00DA               	movwf	___fltol@sign1
  7440  0832                     l3100:
  7441  0832  17D3               	bsf	___fltol@f1+2,7
  7442  0833                     l3102:
  7443  0833  30FF               	movlw	255
  7444  0834  05D1               	andwf	___fltol@f1,f
  7445  0835  30FF               	movlw	255
  7446  0836  05D2               	andwf	___fltol@f1+1,f
  7447  0837  30FF               	movlw	255
  7448  0838  05D3               	andwf	___fltol@f1+2,f
  7449  0839  3000               	movlw	0
  7450  083A  05D4               	andwf	___fltol@f1+3,f
  7451  083B                     l3104:
  7452  083B  3096               	movlw	150
  7453  083C  02DB               	subwf	___fltol@exp1,f
  7454  083D                     l3106:
  7455  083D  1FDB               	btfss	___fltol@exp1,7
  7456  083E  2840               	goto	u4851
  7457  083F  2841               	goto	u4850
  7458  0840                     u4851:
  7459  0840  285B               	goto	l3116
  7460  0841                     u4850:
  7461  0841                     l3108:
  7462  0841  085B               	movf	___fltol@exp1,w
  7463  0842  3A80               	xorlw	128
  7464  0843  3E97               	addlw	151
  7465  0844  1803               	skipnc
  7466  0845  2847               	goto	u4861
  7467  0846  2848               	goto	u4860
  7468  0847                     u4861:
  7469  0847  2849               	goto	l3114
  7470  0848                     u4860:
  7471  0848  2814               	goto	l3094
  7472  0849                     l3114:
  7473  0849  3001               	movlw	1
  7474  084A                     u4875:
  7475  084A  1003               	clrc
  7476  084B  0CD4               	rrf	___fltol@f1+3,f
  7477  084C  0CD3               	rrf	___fltol@f1+2,f
  7478  084D  0CD2               	rrf	___fltol@f1+1,f
  7479  084E  0CD1               	rrf	___fltol@f1,f
  7480  084F  3EFF               	addlw	-1
  7481  0850  1D03               	skipz
  7482  0851  284A               	goto	u4875
  7483  0852  3001               	movlw	1
  7484  0853  00D5               	movwf	??___fltol
  7485  0854  0855               	movf	??___fltol,w
  7486  0855  07DB               	addwf	___fltol@exp1,f
  7487  0856  1D03               	btfss	3,2
  7488  0857  2859               	goto	u4881
  7489  0858  285A               	goto	u4880
  7490  0859                     u4881:
  7491  0859  2849               	goto	l3114
  7492  085A                     u4880:
  7493  085A  2872               	goto	l3124
  7494  085B                     l3116:
  7495  085B  3020               	movlw	32
  7496  085C  025B               	subwf	___fltol@exp1,w
  7497  085D  1C03               	skipc
  7498  085E  2860               	goto	u4891
  7499  085F  2861               	goto	u4890
  7500  0860                     u4891:
  7501  0860  286D               	goto	l605
  7502  0861                     u4890:
  7503  0861  2814               	goto	l3094
  7504  0862                     l3122:
  7505  0862  3001               	movlw	1
  7506  0863  00D5               	movwf	??___fltol
  7507  0864                     u4905:
  7508  0864  1003               	clrc
  7509  0865  0DD1               	rlf	___fltol@f1,f
  7510  0866  0DD2               	rlf	___fltol@f1+1,f
  7511  0867  0DD3               	rlf	___fltol@f1+2,f
  7512  0868  0DD4               	rlf	___fltol@f1+3,f
  7513  0869  0BD5               	decfsz	??___fltol,f
  7514  086A  2864               	goto	u4905
  7515  086B  3001               	movlw	1
  7516  086C  02DB               	subwf	___fltol@exp1,f
  7517  086D                     l605:
  7518  086D  085B               	movf	___fltol@exp1,w
  7519  086E  1D03               	btfss	3,2
  7520  086F  2871               	goto	u4911
  7521  0870  2872               	goto	u4910
  7522  0871                     u4911:
  7523  0871  2862               	goto	l3122
  7524  0872                     u4910:
  7525  0872                     l3124:
  7526  0872  085A               	movf	___fltol@sign1,w
  7527  0873  1903               	btfsc	3,2
  7528  0874  2876               	goto	u4921
  7529  0875  2877               	goto	u4920
  7530  0876                     u4921:
  7531  0876  2882               	goto	l608
  7532  0877                     u4920:
  7533  0877                     l3126:
  7534  0877  09D1               	comf	___fltol@f1,f
  7535  0878  09D2               	comf	___fltol@f1+1,f
  7536  0879  09D3               	comf	___fltol@f1+2,f
  7537  087A  09D4               	comf	___fltol@f1+3,f
  7538  087B  0AD1               	incf	___fltol@f1,f
  7539  087C  1903               	skipnz
  7540  087D  0AD2               	incf	___fltol@f1+1,f
  7541  087E  1903               	skipnz
  7542  087F  0AD3               	incf	___fltol@f1+2,f
  7543  0880  1903               	skipnz
  7544  0881  0AD4               	incf	___fltol@f1+3,f
  7545  0882                     l608:
  7546  0882                     l598:
  7547  0882  0008               	return
  7548  0883                     __end_of___fltol:
  7549                           
  7550                           	psect	text19
  7551  196E                     __ptext19:	
  7552 ;; *************** function ___flsub *****************
  7553 ;; Defined at:
  7554 ;;		line 242 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7555 ;; Parameters:    Size  Location     Type
  7556 ;;  a               4   70[BANK0 ] long 
  7557 ;;  b               4   74[BANK0 ] long 
  7558 ;; Auto vars:     Size  Location     Type
  7559 ;;		None
  7560 ;; Return value:  Size  Location     Type
  7561 ;;                  4   70[BANK0 ] long 
  7562 ;; Registers used:
  7563 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  7564 ;; Tracked objects:
  7565 ;;		On entry : 0/0
  7566 ;;		On exit  : 0/0
  7567 ;;		Unchanged: 0/0
  7568 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7569 ;;      Params:         0       8       0       0       0
  7570 ;;      Locals:         0       0       0       0       0
  7571 ;;      Temps:          0       0       0       0       0
  7572 ;;      Totals:         0       8       0       0       0
  7573 ;;Total ram usage:        8 bytes
  7574 ;; Hardware stack levels used:    1
  7575 ;; Hardware stack levels required when called:    1
  7576 ;; This function calls:
  7577 ;;		___fladd
  7578 ;; This function is called by:
  7579 ;;		_sprintf
  7580 ;; This function uses a non-reentrant model
  7581 ;;
  7582                           
  7583                           
  7584                           ;psect for function ___flsub
  7585  196E                     ___flsub:
  7586  196E                     l3148:	
  7587                           ;incstack = 0
  7588                           ; Regs used in ___flsub: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  7589                           
  7590  196E  3080               	movlw	128
  7591  196F  1283               	bcf	3,5	;RP0=0, select bank0
  7592  1970  1303               	bcf	3,6	;RP1=0, select bank0
  7593  1971  06E9               	xorwf	___flsub@a+3,f
  7594  1972                     l3150:
  7595  1972  086D               	movf	___flsub@b+3,w
  7596  1973  00D5               	movwf	___fladd@b+3
  7597  1974  086C               	movf	___flsub@b+2,w
  7598  1975  00D4               	movwf	___fladd@b+2
  7599  1976  086B               	movf	___flsub@b+1,w
  7600  1977  00D3               	movwf	___fladd@b+1
  7601  1978  086A               	movf	___flsub@b,w
  7602  1979  00D2               	movwf	___fladd@b
  7603  197A  0869               	movf	___flsub@a+3,w
  7604  197B  00D9               	movwf	___fladd@a+3
  7605  197C  0868               	movf	___flsub@a+2,w
  7606  197D  00D8               	movwf	___fladd@a+2
  7607  197E  0867               	movf	___flsub@a+1,w
  7608  197F  00D7               	movwf	___fladd@a+1
  7609  1980  0866               	movf	___flsub@a,w
  7610  1981  00D6               	movwf	___fladd@a
  7611  1982  160A  118A  22B3  160A  158A  	fcall	___fladd
  7612  1987  1283               	bcf	3,5	;RP0=0, select bank0
  7613  1988  1303               	bcf	3,6	;RP1=0, select bank0
  7614  1989  0855               	movf	?___fladd+3,w
  7615  198A  00E9               	movwf	?___flsub+3
  7616  198B  0854               	movf	?___fladd+2,w
  7617  198C  00E8               	movwf	?___flsub+2
  7618  198D  0853               	movf	?___fladd+1,w
  7619  198E  00E7               	movwf	?___flsub+1
  7620  198F  0852               	movf	?___fladd,w
  7621  1990  00E6               	movwf	?___flsub
  7622  1991                     l768:
  7623  1991  0008               	return
  7624  1992                     __end_of___flsub:
  7625                           
  7626                           	psect	text20
  7627  12B3                     __ptext20:	
  7628 ;; *************** function ___fladd *****************
  7629 ;; Defined at:
  7630 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\sprcadd.c"
  7631 ;; Parameters:    Size  Location     Type
  7632 ;;  b               4   50[BANK0 ] long 
  7633 ;;  a               4   54[BANK0 ] long 
  7634 ;; Auto vars:     Size  Location     Type
  7635 ;;  grs             1   69[BANK0 ] unsigned char 
  7636 ;;  bexp            1   68[BANK0 ] unsigned char 
  7637 ;;  aexp            1   67[BANK0 ] unsigned char 
  7638 ;;  signs           1   66[BANK0 ] unsigned char 
  7639 ;; Return value:  Size  Location     Type
  7640 ;;                  4   50[BANK0 ] unsigned char 
  7641 ;; Registers used:
  7642 ;;		wreg, status,2, status,0, btemp+1
  7643 ;; Tracked objects:
  7644 ;;		On entry : 0/0
  7645 ;;		On exit  : 0/0
  7646 ;;		Unchanged: 0/0
  7647 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7648 ;;      Params:         0       8       0       0       0
  7649 ;;      Locals:         0       4       0       0       0
  7650 ;;      Temps:          0       8       0       0       0
  7651 ;;      Totals:         0      20       0       0       0
  7652 ;;Total ram usage:       20 bytes
  7653 ;; Hardware stack levels used:    1
  7654 ;; This function calls:
  7655 ;;		Nothing
  7656 ;; This function is called by:
  7657 ;;		_sprintf
  7658 ;;		___flsub
  7659 ;; This function uses a non-reentrant model
  7660 ;;
  7661                           
  7662                           
  7663                           ;psect for function ___fladd
  7664  12B3                     ___fladd:
  7665  12B3                     l2482:	
  7666                           ;incstack = 0
  7667                           ; Regs used in ___fladd: [wreg+status,2+status,0+btemp+1]
  7668                           
  7669  12B3  1283               	bcf	3,5	;RP0=0, select bank0
  7670  12B4  1303               	bcf	3,6	;RP1=0, select bank0
  7671  12B5  0855               	movf	___fladd@b+3,w
  7672  12B6  3980               	andlw	128
  7673  12B7  00DA               	movwf	??___fladd
  7674  12B8  085A               	movf	??___fladd,w
  7675  12B9  00E2               	movwf	___fladd@signs
  7676  12BA                     l2484:
  7677  12BA  0855               	movf	___fladd@b+3,w
  7678  12BB  00DA               	movwf	??___fladd
  7679  12BC  075A               	addwf	??___fladd,w
  7680  12BD  00DB               	movwf	??___fladd+1
  7681  12BE  085B               	movf	??___fladd+1,w
  7682  12BF  00E4               	movwf	___fladd@bexp
  7683  12C0                     l2486:
  7684  12C0  1FD4               	btfss	___fladd@b+2,7
  7685  12C1  2AC3               	goto	u3241
  7686  12C2  2AC4               	goto	u3240
  7687  12C3                     u3241:
  7688  12C3  2AC5               	goto	l2490
  7689  12C4                     u3240:
  7690  12C4                     l2488:
  7691  12C4  1464               	bsf	___fladd@bexp,0
  7692  12C5                     l2490:
  7693  12C5  0864               	movf	___fladd@bexp,w
  7694  12C6  1903               	btfsc	3,2
  7695  12C7  2AC9               	goto	u3251
  7696  12C8  2ACA               	goto	u3250
  7697  12C9                     u3251:
  7698  12C9  2ADA               	goto	l2500
  7699  12CA                     u3250:
  7700  12CA                     l2492:
  7701  12CA  0A64               	incf	___fladd@bexp,w
  7702  12CB  1D03               	btfss	3,2
  7703  12CC  2ACE               	goto	u3261
  7704  12CD  2ACF               	goto	u3260
  7705  12CE                     u3261:
  7706  12CE  2AD7               	goto	l2496
  7707  12CF                     u3260:
  7708  12CF                     l2494:
  7709  12CF  3000               	movlw	0
  7710  12D0  00D5               	movwf	___fladd@b+3
  7711  12D1  3000               	movlw	0
  7712  12D2  00D4               	movwf	___fladd@b+2
  7713  12D3  3000               	movlw	0
  7714  12D4  00D3               	movwf	___fladd@b+1
  7715  12D5  3000               	movlw	0
  7716  12D6  00D2               	movwf	___fladd@b
  7717  12D7                     l2496:
  7718  12D7  17D4               	bsf	___fladd@b+2,7
  7719  12D8                     l2498:
  7720  12D8  01D5               	clrf	___fladd@b+3
  7721  12D9  2AE2               	goto	l2502
  7722  12DA                     l2500:
  7723  12DA  3000               	movlw	0
  7724  12DB  00D5               	movwf	___fladd@b+3
  7725  12DC  3000               	movlw	0
  7726  12DD  00D4               	movwf	___fladd@b+2
  7727  12DE  3000               	movlw	0
  7728  12DF  00D3               	movwf	___fladd@b+1
  7729  12E0  3000               	movlw	0
  7730  12E1  00D2               	movwf	___fladd@b
  7731  12E2                     l2502:
  7732  12E2  0859               	movf	___fladd@a+3,w
  7733  12E3  3980               	andlw	128
  7734  12E4  00DA               	movwf	??___fladd
  7735  12E5  085A               	movf	??___fladd,w
  7736  12E6  00E3               	movwf	___fladd@aexp
  7737  12E7                     l2504:
  7738  12E7  0863               	movf	___fladd@aexp,w
  7739  12E8  0662               	xorwf	___fladd@signs,w
  7740  12E9  1903               	skipnz
  7741  12EA  2AEC               	goto	u3271
  7742  12EB  2AED               	goto	u3270
  7743  12EC                     u3271:
  7744  12EC  2AEE               	goto	l2508
  7745  12ED                     u3270:
  7746  12ED                     l2506:
  7747  12ED  1762               	bsf	___fladd@signs,6
  7748  12EE                     l2508:
  7749  12EE  0859               	movf	___fladd@a+3,w
  7750  12EF  00DA               	movwf	??___fladd
  7751  12F0  075A               	addwf	??___fladd,w
  7752  12F1  00DB               	movwf	??___fladd+1
  7753  12F2  085B               	movf	??___fladd+1,w
  7754  12F3  00E3               	movwf	___fladd@aexp
  7755  12F4                     l2510:
  7756  12F4  1FD8               	btfss	___fladd@a+2,7
  7757  12F5  2AF7               	goto	u3281
  7758  12F6  2AF8               	goto	u3280
  7759  12F7                     u3281:
  7760  12F7  2AF9               	goto	l2514
  7761  12F8                     u3280:
  7762  12F8                     l2512:
  7763  12F8  1463               	bsf	___fladd@aexp,0
  7764  12F9                     l2514:
  7765  12F9  0863               	movf	___fladd@aexp,w
  7766  12FA  1903               	btfsc	3,2
  7767  12FB  2AFD               	goto	u3291
  7768  12FC  2AFE               	goto	u3290
  7769  12FD                     u3291:
  7770  12FD  2B0E               	goto	l2524
  7771  12FE                     u3290:
  7772  12FE                     l2516:
  7773  12FE  0A63               	incf	___fladd@aexp,w
  7774  12FF  1D03               	btfss	3,2
  7775  1300  2B02               	goto	u3301
  7776  1301  2B03               	goto	u3300
  7777  1302                     u3301:
  7778  1302  2B0B               	goto	l2520
  7779  1303                     u3300:
  7780  1303                     l2518:
  7781  1303  3000               	movlw	0
  7782  1304  00D9               	movwf	___fladd@a+3
  7783  1305  3000               	movlw	0
  7784  1306  00D8               	movwf	___fladd@a+2
  7785  1307  3000               	movlw	0
  7786  1308  00D7               	movwf	___fladd@a+1
  7787  1309  3000               	movlw	0
  7788  130A  00D6               	movwf	___fladd@a
  7789  130B                     l2520:
  7790  130B  17D8               	bsf	___fladd@a+2,7
  7791  130C                     l2522:
  7792  130C  01D9               	clrf	___fladd@a+3
  7793  130D  2B16               	goto	l722
  7794  130E                     l2524:
  7795  130E  3000               	movlw	0
  7796  130F  00D9               	movwf	___fladd@a+3
  7797  1310  3000               	movlw	0
  7798  1311  00D8               	movwf	___fladd@a+2
  7799  1312  3000               	movlw	0
  7800  1313  00D7               	movwf	___fladd@a+1
  7801  1314  3000               	movlw	0
  7802  1315  00D6               	movwf	___fladd@a
  7803  1316                     l722:
  7804  1316  0864               	movf	___fladd@bexp,w
  7805  1317  0263               	subwf	___fladd@aexp,w
  7806  1318  1803               	skipnc
  7807  1319  2B1B               	goto	u3311
  7808  131A  2B1C               	goto	u3310
  7809  131B                     u3311:
  7810  131B  2B60               	goto	l2560
  7811  131C                     u3310:
  7812  131C                     l2526:
  7813  131C  1F62               	btfss	___fladd@signs,6
  7814  131D  2B1F               	goto	u3321
  7815  131E  2B20               	goto	u3320
  7816  131F                     u3321:
  7817  131F  2B24               	goto	l2530
  7818  1320                     u3320:
  7819  1320                     l2528:
  7820  1320  3080               	movlw	128
  7821  1321  00DA               	movwf	??___fladd
  7822  1322  085A               	movf	??___fladd,w
  7823  1323  06E2               	xorwf	___fladd@signs,f
  7824  1324                     l2530:
  7825  1324  0864               	movf	___fladd@bexp,w
  7826  1325  00DA               	movwf	??___fladd
  7827  1326  085A               	movf	??___fladd,w
  7828  1327  00E5               	movwf	___fladd@grs
  7829  1328                     l2532:
  7830  1328  0863               	movf	___fladd@aexp,w
  7831  1329  00DA               	movwf	??___fladd
  7832  132A  085A               	movf	??___fladd,w
  7833  132B  00E4               	movwf	___fladd@bexp
  7834  132C                     l2534:
  7835  132C  0865               	movf	___fladd@grs,w
  7836  132D  00DA               	movwf	??___fladd
  7837  132E  085A               	movf	??___fladd,w
  7838  132F  00E3               	movwf	___fladd@aexp
  7839  1330                     l2536:
  7840  1330  0852               	movf	___fladd@b,w
  7841  1331  00DA               	movwf	??___fladd
  7842  1332  085A               	movf	??___fladd,w
  7843  1333  00E5               	movwf	___fladd@grs
  7844  1334                     l2538:
  7845  1334  0856               	movf	___fladd@a,w
  7846  1335  00DA               	movwf	??___fladd
  7847  1336  085A               	movf	??___fladd,w
  7848  1337  00D2               	movwf	___fladd@b
  7849  1338                     l2540:
  7850  1338  0865               	movf	___fladd@grs,w
  7851  1339  00DA               	movwf	??___fladd
  7852  133A  085A               	movf	??___fladd,w
  7853  133B  00D6               	movwf	___fladd@a
  7854  133C                     l2542:
  7855  133C  0853               	movf	___fladd@b+1,w
  7856  133D  00DA               	movwf	??___fladd
  7857  133E  085A               	movf	??___fladd,w
  7858  133F  00E5               	movwf	___fladd@grs
  7859  1340                     l2544:
  7860  1340  0857               	movf	___fladd@a+1,w
  7861  1341  00DA               	movwf	??___fladd
  7862  1342  085A               	movf	??___fladd,w
  7863  1343  00D3               	movwf	___fladd@b+1
  7864  1344                     l2546:
  7865  1344  0865               	movf	___fladd@grs,w
  7866  1345  00DA               	movwf	??___fladd
  7867  1346  085A               	movf	??___fladd,w
  7868  1347  00D7               	movwf	___fladd@a+1
  7869  1348                     l2548:
  7870  1348  0854               	movf	___fladd@b+2,w
  7871  1349  00DA               	movwf	??___fladd
  7872  134A  085A               	movf	??___fladd,w
  7873  134B  00E5               	movwf	___fladd@grs
  7874  134C                     l2550:
  7875  134C  0858               	movf	___fladd@a+2,w
  7876  134D  00DA               	movwf	??___fladd
  7877  134E  085A               	movf	??___fladd,w
  7878  134F  00D4               	movwf	___fladd@b+2
  7879  1350                     l2552:
  7880  1350  0865               	movf	___fladd@grs,w
  7881  1351  00DA               	movwf	??___fladd
  7882  1352  085A               	movf	??___fladd,w
  7883  1353  00D8               	movwf	___fladd@a+2
  7884  1354                     l2554:
  7885  1354  0855               	movf	___fladd@b+3,w
  7886  1355  00DA               	movwf	??___fladd
  7887  1356  085A               	movf	??___fladd,w
  7888  1357  00E5               	movwf	___fladd@grs
  7889  1358                     l2556:
  7890  1358  0859               	movf	___fladd@a+3,w
  7891  1359  00DA               	movwf	??___fladd
  7892  135A  085A               	movf	??___fladd,w
  7893  135B  00D5               	movwf	___fladd@b+3
  7894  135C                     l2558:
  7895  135C  0865               	movf	___fladd@grs,w
  7896  135D  00DA               	movwf	??___fladd
  7897  135E  085A               	movf	??___fladd,w
  7898  135F  00D9               	movwf	___fladd@a+3
  7899  1360                     l2560:
  7900  1360  01E5               	clrf	___fladd@grs
  7901  1361                     l2562:
  7902  1361  0863               	movf	___fladd@aexp,w
  7903  1362  00DA               	movwf	??___fladd
  7904  1363  01DB               	clrf	??___fladd+1
  7905  1364  085B               	movf	??___fladd+1,w
  7906  1365  00DD               	movwf	??___fladd+3
  7907  1366  0864               	movf	___fladd@bexp,w
  7908  1367  025A               	subwf	??___fladd,w
  7909  1368  00DC               	movwf	??___fladd+2
  7910  1369  1C03               	skipc
  7911  136A  03DD               	decf	??___fladd+3,f
  7912  136B  085D               	movf	??___fladd+3,w
  7913  136C  3A80               	xorlw	128
  7914  136D  00FF               	movwf	btemp+1
  7915  136E  3080               	movlw	128
  7916  136F  027F               	subwf	btemp+1,w
  7917  1370  1D03               	skipz
  7918  1371  2B74               	goto	u3335
  7919  1372  301A               	movlw	26
  7920  1373  025C               	subwf	??___fladd+2,w
  7921  1374                     u3335:
  7922  1374  1C03               	skipc
  7923  1375  2B77               	goto	u3331
  7924  1376  2B78               	goto	u3330
  7925  1377                     u3331:
  7926  1377  2BB5               	goto	l2578
  7927  1378                     u3330:
  7928  1378                     l2564:
  7929  1378  1283               	bcf	3,5	;RP0=0, select bank0
  7930  1379  1303               	bcf	3,6	;RP1=0, select bank0
  7931  137A  0855               	movf	___fladd@b+3,w
  7932  137B  0454               	iorwf	___fladd@b+2,w
  7933  137C  0453               	iorwf	___fladd@b+1,w
  7934  137D  0452               	iorwf	___fladd@b,w
  7935  137E  1D03               	skipz
  7936  137F  2B81               	goto	u3341
  7937  1380  2B83               	goto	u3340
  7938  1381                     u3341:
  7939  1381  3001               	movlw	1
  7940  1382  2B84               	goto	u3350
  7941  1383                     u3340:
  7942  1383  3000               	movlw	0
  7943  1384                     u3350:
  7944  1384  00DA               	movwf	??___fladd
  7945  1385  085A               	movf	??___fladd,w
  7946  1386  00E5               	movwf	___fladd@grs
  7947  1387  3000               	movlw	0
  7948  1388  00D5               	movwf	___fladd@b+3
  7949  1389  3000               	movlw	0
  7950  138A  00D4               	movwf	___fladd@b+2
  7951  138B  3000               	movlw	0
  7952  138C  00D3               	movwf	___fladd@b+1
  7953  138D  3000               	movlw	0
  7954  138E  00D2               	movwf	___fladd@b
  7955  138F  0863               	movf	___fladd@aexp,w
  7956  1390  00DA               	movwf	??___fladd
  7957  1391  085A               	movf	??___fladd,w
  7958  1392  00E4               	movwf	___fladd@bexp
  7959  1393  2BBD               	goto	l726
  7960  1394                     l728:
  7961  1394  1C65               	btfss	___fladd@grs,0
  7962  1395  2B97               	goto	u3361
  7963  1396  2B98               	goto	u3360
  7964  1397                     u3361:
  7965  1397  2BA1               	goto	l2568
  7966  1398                     u3360:
  7967  1398                     l2566:
  7968  1398  0865               	movf	___fladd@grs,w
  7969  1399  00DA               	movwf	??___fladd
  7970  139A  1003               	clrc
  7971  139B  0C5A               	rrf	??___fladd,w
  7972  139C  3801               	iorlw	1
  7973  139D  00DB               	movwf	??___fladd+1
  7974  139E  085B               	movf	??___fladd+1,w
  7975  139F  00E5               	movwf	___fladd@grs
  7976  13A0  2BA3               	goto	l2570
  7977  13A1                     l2568:
  7978  13A1  1003               	clrc
  7979  13A2  0CE5               	rrf	___fladd@grs,f
  7980  13A3                     l2570:
  7981  13A3  1C52               	btfss	___fladd@b,0
  7982  13A4  2BA6               	goto	u3371
  7983  13A5  2BA7               	goto	u3370
  7984  13A6                     u3371:
  7985  13A6  2BA8               	goto	l2574
  7986  13A7                     u3370:
  7987  13A7                     l2572:
  7988  13A7  17E5               	bsf	___fladd@grs,7
  7989  13A8                     l2574:
  7990  13A8  3001               	movlw	1
  7991  13A9  00DA               	movwf	??___fladd
  7992  13AA                     u3385:
  7993  13AA  0D55               	rlf	___fladd@b+3,w
  7994  13AB  0CD5               	rrf	___fladd@b+3,f
  7995  13AC  0CD4               	rrf	___fladd@b+2,f
  7996  13AD  0CD3               	rrf	___fladd@b+1,f
  7997  13AE  0CD2               	rrf	___fladd@b,f
  7998  13AF  0BDA               	decfsz	??___fladd& (0+127),f
  7999  13B0  2BAA               	goto	u3385
  8000  13B1                     l2576:
  8001  13B1  3001               	movlw	1
  8002  13B2  00DA               	movwf	??___fladd
  8003  13B3  085A               	movf	??___fladd,w
  8004  13B4  07E4               	addwf	___fladd@bexp,f
  8005  13B5                     l2578:
  8006  13B5  1283               	bcf	3,5	;RP0=0, select bank0
  8007  13B6  1303               	bcf	3,6	;RP1=0, select bank0
  8008  13B7  0863               	movf	___fladd@aexp,w
  8009  13B8  0264               	subwf	___fladd@bexp,w
  8010  13B9  1C03               	skipc
  8011  13BA  2BBC               	goto	u3391
  8012  13BB  2BBD               	goto	u3390
  8013  13BC                     u3391:
  8014  13BC  2B94               	goto	l728
  8015  13BD                     u3390:
  8016  13BD                     l726:
  8017  13BD  1B62               	btfsc	___fladd@signs,6
  8018  13BE  2BC0               	goto	u3401
  8019  13BF  2BC1               	goto	u3400
  8020  13C0                     u3401:
  8021  13C0  2C0C               	goto	l2604
  8022  13C1                     u3400:
  8023  13C1                     l2580:
  8024  13C1  0864               	movf	___fladd@bexp,w
  8025  13C2  1D03               	btfss	3,2
  8026  13C3  2BC5               	goto	u3411
  8027  13C4  2BC6               	goto	u3410
  8028  13C5                     u3411:
  8029  13C5  2BCF               	goto	l2586
  8030  13C6                     u3410:
  8031  13C6                     l2582:
  8032  13C6  3000               	movlw	0
  8033  13C7  00D5               	movwf	?___fladd+3
  8034  13C8  3000               	movlw	0
  8035  13C9  00D4               	movwf	?___fladd+2
  8036  13CA  3000               	movlw	0
  8037  13CB  00D3               	movwf	?___fladd+1
  8038  13CC  3000               	movlw	0
  8039  13CD  00D2               	movwf	?___fladd
  8040  13CE  2D3A               	goto	l735
  8041  13CF                     l2586:
  8042  13CF  0856               	movf	___fladd@a,w
  8043  13D0  07D2               	addwf	___fladd@b,f
  8044  13D1  0857               	movf	___fladd@a+1,w
  8045  13D2  1103               	clrz
  8046  13D3  1803               	skipnc
  8047  13D4  3E01               	addlw	1
  8048  13D5  1903               	skipnz
  8049  13D6  2BD8               	goto	u3421
  8050  13D7  07D3               	addwf	___fladd@b+1,f
  8051  13D8                     u3421:
  8052  13D8  0858               	movf	___fladd@a+2,w
  8053  13D9  1103               	clrz
  8054  13DA  1803               	skipnc
  8055  13DB  3E01               	addlw	1
  8056  13DC  1903               	skipnz
  8057  13DD  2BDF               	goto	u3422
  8058  13DE  07D4               	addwf	___fladd@b+2,f
  8059  13DF                     u3422:
  8060  13DF  0859               	movf	___fladd@a+3,w
  8061  13E0  1103               	clrz
  8062  13E1  1803               	skipnc
  8063  13E2  3E01               	addlw	1
  8064  13E3  1903               	skipnz
  8065  13E4  2BE6               	goto	u3423
  8066  13E5  07D5               	addwf	___fladd@b+3,f
  8067  13E6                     u3423:
  8068  13E6                     l2588:
  8069  13E6  1C55               	btfss	___fladd@b+3,0
  8070  13E7  2BE9               	goto	u3431
  8071  13E8  2BEA               	goto	u3430
  8072  13E9                     u3431:
  8073  13E9  2CC0               	goto	l2638
  8074  13EA                     u3430:
  8075  13EA                     l2590:
  8076  13EA  1C65               	btfss	___fladd@grs,0
  8077  13EB  2BED               	goto	u3441
  8078  13EC  2BEE               	goto	u3440
  8079  13ED                     u3441:
  8080  13ED  2BF7               	goto	l2594
  8081  13EE                     u3440:
  8082  13EE                     l2592:
  8083  13EE  0865               	movf	___fladd@grs,w
  8084  13EF  00DA               	movwf	??___fladd
  8085  13F0  1003               	clrc
  8086  13F1  0C5A               	rrf	??___fladd,w
  8087  13F2  3801               	iorlw	1
  8088  13F3  00DB               	movwf	??___fladd+1
  8089  13F4  085B               	movf	??___fladd+1,w
  8090  13F5  00E5               	movwf	___fladd@grs
  8091  13F6  2BF9               	goto	l2596
  8092  13F7                     l2594:
  8093  13F7  1003               	clrc
  8094  13F8  0CE5               	rrf	___fladd@grs,f
  8095  13F9                     l2596:
  8096  13F9  1C52               	btfss	___fladd@b,0
  8097  13FA  2BFC               	goto	u3451
  8098  13FB  2BFD               	goto	u3450
  8099  13FC                     u3451:
  8100  13FC  2BFE               	goto	l2600
  8101  13FD                     u3450:
  8102  13FD                     l2598:
  8103  13FD  17E5               	bsf	___fladd@grs,7
  8104  13FE                     l2600:
  8105  13FE  3001               	movlw	1
  8106  13FF  00DA               	movwf	??___fladd
  8107  1400                     u3465:
  8108  1400  0D55               	rlf	___fladd@b+3,w
  8109  1401  0CD5               	rrf	___fladd@b+3,f
  8110  1402  0CD4               	rrf	___fladd@b+2,f
  8111  1403  0CD3               	rrf	___fladd@b+1,f
  8112  1404  0CD2               	rrf	___fladd@b,f
  8113  1405  0BDA               	decfsz	??___fladd& (0+127),f
  8114  1406  2C00               	goto	u3465
  8115  1407                     l2602:
  8116  1407  3001               	movlw	1
  8117  1408  00DA               	movwf	??___fladd
  8118  1409  085A               	movf	??___fladd,w
  8119  140A  07E4               	addwf	___fladd@bexp,f
  8120  140B  2CC0               	goto	l2638
  8121  140C                     l2604:
  8122  140C  0855               	movf	___fladd@b+3,w
  8123  140D  3A80               	xorlw	128
  8124  140E  00FF               	movwf	btemp+1
  8125  140F  0859               	movf	___fladd@a+3,w
  8126  1410  3A80               	xorlw	128
  8127  1411  027F               	subwf	btemp+1,w
  8128  1412  1D03               	skipz
  8129  1413  2C1E               	goto	u3473
  8130  1414  0858               	movf	___fladd@a+2,w
  8131  1415  0254               	subwf	___fladd@b+2,w
  8132  1416  1D03               	skipz
  8133  1417  2C1E               	goto	u3473
  8134  1418  0857               	movf	___fladd@a+1,w
  8135  1419  0253               	subwf	___fladd@b+1,w
  8136  141A  1D03               	skipz
  8137  141B  2C1E               	goto	u3473
  8138  141C  0856               	movf	___fladd@a,w
  8139  141D  0252               	subwf	___fladd@b,w
  8140  141E                     u3473:
  8141  141E  1803               	skipnc
  8142  141F  2C21               	goto	u3471
  8143  1420  2C22               	goto	u3470
  8144  1421                     u3471:
  8145  1421  2C7A               	goto	l2614
  8146  1422                     u3470:
  8147  1422                     l2606:
  8148  1422  30FF               	movlw	255
  8149  1423  00DA               	movwf	??___fladd
  8150  1424  30FF               	movlw	255
  8151  1425  00DB               	movwf	??___fladd+1
  8152  1426  30FF               	movlw	255
  8153  1427  00DC               	movwf	??___fladd+2
  8154  1428  30FF               	movlw	255
  8155  1429  00DD               	movwf	??___fladd+3
  8156  142A  0856               	movf	___fladd@a,w
  8157  142B  00DE               	movwf	??___fladd+4
  8158  142C  0857               	movf	___fladd@a+1,w
  8159  142D  00DF               	movwf	??___fladd+5
  8160  142E  0858               	movf	___fladd@a+2,w
  8161  142F  00E0               	movwf	??___fladd+6
  8162  1430  0859               	movf	___fladd@a+3,w
  8163  1431  00E1               	movwf	??___fladd+7
  8164  1432  0852               	movf	___fladd@b,w
  8165  1433  02DE               	subwf	??___fladd+4,f
  8166  1434  0853               	movf	___fladd@b+1,w
  8167  1435  1C03               	skipc
  8168  1436  0F53               	incfsz	___fladd@b+1,w
  8169  1437  2C39               	goto	u3481
  8170  1438  2C3A               	goto	u3482
  8171  1439                     u3481:
  8172  1439  02DF               	subwf	??___fladd+5,f
  8173  143A                     u3482:
  8174  143A  0854               	movf	___fladd@b+2,w
  8175  143B  1C03               	skipc
  8176  143C  0F54               	incfsz	___fladd@b+2,w
  8177  143D  2C3F               	goto	u3483
  8178  143E  2C40               	goto	u3484
  8179  143F                     u3483:
  8180  143F  02E0               	subwf	??___fladd+6,f
  8181  1440                     u3484:
  8182  1440  0855               	movf	___fladd@b+3,w
  8183  1441  1C03               	skipc
  8184  1442  0F55               	incfsz	___fladd@b+3,w
  8185  1443  2C45               	goto	u3485
  8186  1444  2C46               	goto	u3486
  8187  1445                     u3485:
  8188  1445  02E1               	subwf	??___fladd+7,f
  8189  1446                     u3486:
  8190  1446  085E               	movf	??___fladd+4,w
  8191  1447  07DA               	addwf	??___fladd,f
  8192  1448  085F               	movf	??___fladd+5,w
  8193  1449  1803               	skipnc
  8194  144A  0F5F               	incfsz	??___fladd+5,w
  8195  144B  2C4D               	goto	u3490
  8196  144C  2C4E               	goto	u3491
  8197  144D                     u3490:
  8198  144D  07DB               	addwf	??___fladd+1,f
  8199  144E                     u3491:
  8200  144E  0860               	movf	??___fladd+6,w
  8201  144F  1803               	skipnc
  8202  1450  0F60               	incfsz	??___fladd+6,w
  8203  1451  2C53               	goto	u3492
  8204  1452  2C54               	goto	u3493
  8205  1453                     u3492:
  8206  1453  07DC               	addwf	??___fladd+2,f
  8207  1454                     u3493:
  8208  1454  0861               	movf	??___fladd+7,w
  8209  1455  1803               	skipnc
  8210  1456  0A61               	incf	??___fladd+7,w
  8211  1457  07DD               	addwf	??___fladd+3,f
  8212  1458  085D               	movf	??___fladd+3,w
  8213  1459  00D5               	movwf	___fladd@b+3
  8214  145A  085C               	movf	??___fladd+2,w
  8215  145B  00D4               	movwf	___fladd@b+2
  8216  145C  085B               	movf	??___fladd+1,w
  8217  145D  00D3               	movwf	___fladd@b+1
  8218  145E  085A               	movf	??___fladd,w
  8219  145F  00D2               	movwf	___fladd@b
  8220  1460                     l2608:
  8221  1460  3080               	movlw	128
  8222  1461  00DA               	movwf	??___fladd
  8223  1462  085A               	movf	??___fladd,w
  8224  1463  06E2               	xorwf	___fladd@signs,f
  8225  1464  09E5               	comf	___fladd@grs,f
  8226  1465  0AE5               	incf	___fladd@grs,f
  8227  1466                     l2610:
  8228  1466  0865               	movf	___fladd@grs,w
  8229  1467  1D03               	btfss	3,2
  8230  1468  2C6A               	goto	u3501
  8231  1469  2C6B               	goto	u3500
  8232  146A                     u3501:
  8233  146A  2C88               	goto	l743
  8234  146B                     u3500:
  8235  146B                     l2612:
  8236  146B  3001               	movlw	1
  8237  146C  07D2               	addwf	___fladd@b,f
  8238  146D  3000               	movlw	0
  8239  146E  1803               	skipnc
  8240  146F  3001               	movlw	1
  8241  1470  07D3               	addwf	___fladd@b+1,f
  8242  1471  3000               	movlw	0
  8243  1472  1803               	skipnc
  8244  1473  3001               	movlw	1
  8245  1474  07D4               	addwf	___fladd@b+2,f
  8246  1475  3000               	movlw	0
  8247  1476  1803               	skipnc
  8248  1477  3001               	movlw	1
  8249  1478  07D5               	addwf	___fladd@b+3,f
  8250  1479  2C88               	goto	l743
  8251  147A                     l2614:
  8252  147A  0856               	movf	___fladd@a,w
  8253  147B  02D2               	subwf	___fladd@b,f
  8254  147C  0857               	movf	___fladd@a+1,w
  8255  147D  1C03               	skipc
  8256  147E  0F57               	incfsz	___fladd@a+1,w
  8257  147F  02D3               	subwf	___fladd@b+1,f
  8258  1480  0858               	movf	___fladd@a+2,w
  8259  1481  1C03               	skipc
  8260  1482  0F58               	incfsz	___fladd@a+2,w
  8261  1483  02D4               	subwf	___fladd@b+2,f
  8262  1484  0859               	movf	___fladd@a+3,w
  8263  1485  1C03               	skipc
  8264  1486  0F59               	incfsz	___fladd@a+3,w
  8265  1487  02D5               	subwf	___fladd@b+3,f
  8266  1488                     l743:
  8267  1488  0855               	movf	___fladd@b+3,w
  8268  1489  0454               	iorwf	___fladd@b+2,w
  8269  148A  0453               	iorwf	___fladd@b+1,w
  8270  148B  0452               	iorwf	___fladd@b,w
  8271  148C  1D03               	skipz
  8272  148D  2C8F               	goto	u3511
  8273  148E  2C90               	goto	u3510
  8274  148F                     u3511:
  8275  148F  2CBC               	goto	l2636
  8276  1490                     u3510:
  8277  1490                     l2616:
  8278  1490  0865               	movf	___fladd@grs,w
  8279  1491  1D03               	btfss	3,2
  8280  1492  2C94               	goto	u3521
  8281  1493  2C95               	goto	u3520
  8282  1494                     u3521:
  8283  1494  2CBC               	goto	l2636
  8284  1495                     u3520:
  8285  1495                     l2618:
  8286  1495  3000               	movlw	0
  8287  1496  00D5               	movwf	?___fladd+3
  8288  1497  3000               	movlw	0
  8289  1498  00D4               	movwf	?___fladd+2
  8290  1499  3000               	movlw	0
  8291  149A  00D3               	movwf	?___fladd+1
  8292  149B  3000               	movlw	0
  8293  149C  00D2               	movwf	?___fladd
  8294  149D  2D3A               	goto	l735
  8295  149E                     l2622:
  8296  149E  3001               	movlw	1
  8297  149F  00DA               	movwf	??___fladd
  8298  14A0                     u3535:
  8299  14A0  1003               	clrc
  8300  14A1  0DD2               	rlf	___fladd@b,f
  8301  14A2  0DD3               	rlf	___fladd@b+1,f
  8302  14A3  0DD4               	rlf	___fladd@b+2,f
  8303  14A4  0DD5               	rlf	___fladd@b+3,f
  8304  14A5  0BDA               	decfsz	??___fladd,f
  8305  14A6  2CA0               	goto	u3535
  8306  14A7                     l2624:
  8307  14A7  1FE5               	btfss	___fladd@grs,7
  8308  14A8  2CAA               	goto	u3541
  8309  14A9  2CAB               	goto	u3540
  8310  14AA                     u3541:
  8311  14AA  2CAC               	goto	l747
  8312  14AB                     u3540:
  8313  14AB                     l2626:
  8314  14AB  1452               	bsf	___fladd@b,0
  8315  14AC                     l747:
  8316  14AC  1C65               	btfss	___fladd@grs,0
  8317  14AD  2CAF               	goto	u3551
  8318  14AE  2CB0               	goto	u3550
  8319  14AF                     u3551:
  8320  14AF  2CB3               	goto	l2630
  8321  14B0                     u3550:
  8322  14B0                     l2628:
  8323  14B0  1403               	setc
  8324  14B1  0DE5               	rlf	___fladd@grs,f
  8325  14B2  2CB5               	goto	l2632
  8326  14B3                     l2630:
  8327  14B3  1003               	clrc
  8328  14B4  0DE5               	rlf	___fladd@grs,f
  8329  14B5                     l2632:
  8330  14B5  0864               	movf	___fladd@bexp,w
  8331  14B6  1903               	btfsc	3,2
  8332  14B7  2CB9               	goto	u3561
  8333  14B8  2CBA               	goto	u3560
  8334  14B9                     u3561:
  8335  14B9  2CBC               	goto	l2636
  8336  14BA                     u3560:
  8337  14BA                     l2634:
  8338  14BA  3001               	movlw	1
  8339  14BB  02E4               	subwf	___fladd@bexp,f
  8340  14BC                     l2636:
  8341  14BC  1FD4               	btfss	___fladd@b+2,7
  8342  14BD  2CBF               	goto	u3571
  8343  14BE  2CC0               	goto	u3570
  8344  14BF                     u3571:
  8345  14BF  2C9E               	goto	l2622
  8346  14C0                     u3570:
  8347  14C0                     l2638:
  8348  14C0  01E3               	clrf	___fladd@aexp
  8349  14C1                     l2640:
  8350  14C1  1FE5               	btfss	___fladd@grs,7
  8351  14C2  2CC4               	goto	u3581
  8352  14C3  2CC5               	goto	u3580
  8353  14C4                     u3581:
  8354  14C4  2CD3               	goto	l2648
  8355  14C5                     u3580:
  8356  14C5                     l2642:
  8357  14C5  0865               	movf	___fladd@grs,w
  8358  14C6  397F               	andlw	127
  8359  14C7  1903               	btfsc	3,2
  8360  14C8  2CCA               	goto	u3591
  8361  14C9  2CCB               	goto	u3590
  8362  14CA                     u3591:
  8363  14CA  2CCE               	goto	l753
  8364  14CB                     u3590:
  8365  14CB                     l2644:
  8366  14CB  01E3               	clrf	___fladd@aexp
  8367  14CC  0AE3               	incf	___fladd@aexp,f
  8368  14CD  2CD3               	goto	l2648
  8369  14CE                     l753:
  8370  14CE  1C52               	btfss	___fladd@b,0
  8371  14CF  2CD1               	goto	u3601
  8372  14D0  2CD2               	goto	u3600
  8373  14D1                     u3601:
  8374  14D1  2CD3               	goto	l2648
  8375  14D2                     u3600:
  8376  14D2  2CCB               	goto	l2644
  8377  14D3                     l2648:
  8378  14D3  0863               	movf	___fladd@aexp,w
  8379  14D4  1903               	btfsc	3,2
  8380  14D5  2CD7               	goto	u3611
  8381  14D6  2CD8               	goto	u3610
  8382  14D7                     u3611:
  8383  14D7  2D0C               	goto	l756
  8384  14D8                     u3610:
  8385  14D8                     l2650:
  8386  14D8  3001               	movlw	1
  8387  14D9  07D2               	addwf	___fladd@b,f
  8388  14DA  3000               	movlw	0
  8389  14DB  1803               	skipnc
  8390  14DC  3001               	movlw	1
  8391  14DD  07D3               	addwf	___fladd@b+1,f
  8392  14DE  3000               	movlw	0
  8393  14DF  1803               	skipnc
  8394  14E0  3001               	movlw	1
  8395  14E1  07D4               	addwf	___fladd@b+2,f
  8396  14E2  3000               	movlw	0
  8397  14E3  1803               	skipnc
  8398  14E4  3001               	movlw	1
  8399  14E5  07D5               	addwf	___fladd@b+3,f
  8400  14E6                     l2652:
  8401  14E6  1C55               	btfss	___fladd@b+3,0
  8402  14E7  2CE9               	goto	u3621
  8403  14E8  2CEA               	goto	u3620
  8404  14E9                     u3621:
  8405  14E9  2D0C               	goto	l756
  8406  14EA                     u3620:
  8407  14EA                     l2654:
  8408  14EA  0852               	movf	___fladd@b,w
  8409  14EB  00DA               	movwf	??___fladd
  8410  14EC  0853               	movf	___fladd@b+1,w
  8411  14ED  00DB               	movwf	??___fladd+1
  8412  14EE  0854               	movf	___fladd@b+2,w
  8413  14EF  00DC               	movwf	??___fladd+2
  8414  14F0  0855               	movf	___fladd@b+3,w
  8415  14F1  00DD               	movwf	??___fladd+3
  8416  14F2  3001               	movlw	1
  8417  14F3  00DE               	movwf	??___fladd+4
  8418  14F4                     u3635:
  8419  14F4  0D5D               	rlf	??___fladd+3,w
  8420  14F5  0CDD               	rrf	??___fladd+3,f
  8421  14F6  0CDC               	rrf	??___fladd+2,f
  8422  14F7  0CDB               	rrf	??___fladd+1,f
  8423  14F8  0CDA               	rrf	??___fladd,f
  8424  14F9                     u3630:
  8425  14F9  0BDE               	decfsz	??___fladd+4,f
  8426  14FA  2CF4               	goto	u3635
  8427  14FB  085D               	movf	??___fladd+3,w
  8428  14FC  00D5               	movwf	___fladd@b+3
  8429  14FD  085C               	movf	??___fladd+2,w
  8430  14FE  00D4               	movwf	___fladd@b+2
  8431  14FF  085B               	movf	??___fladd+1,w
  8432  1500  00D3               	movwf	___fladd@b+1
  8433  1501  085A               	movf	??___fladd,w
  8434  1502  00D2               	movwf	___fladd@b
  8435  1503  0A64               	incf	___fladd@bexp,w
  8436  1504  1903               	btfsc	3,2
  8437  1505  2D07               	goto	u3641
  8438  1506  2D08               	goto	u3640
  8439  1507                     u3641:
  8440  1507  2D0C               	goto	l756
  8441  1508                     u3640:
  8442  1508                     l2656:
  8443  1508  3001               	movlw	1
  8444  1509  00DA               	movwf	??___fladd
  8445  150A  085A               	movf	??___fladd,w
  8446  150B  07E4               	addwf	___fladd@bexp,f
  8447  150C                     l756:
  8448  150C  0A64               	incf	___fladd@bexp,w
  8449  150D  1903               	btfsc	3,2
  8450  150E  2D10               	goto	u3651
  8451  150F  2D11               	goto	u3650
  8452  1510                     u3651:
  8453  1510  2D16               	goto	l2660
  8454  1511                     u3650:
  8455  1511                     l2658:
  8456  1511  0864               	movf	___fladd@bexp,w
  8457  1512  1D03               	btfss	3,2
  8458  1513  2D15               	goto	u3661
  8459  1514  2D16               	goto	u3660
  8460  1515                     u3661:
  8461  1515  2D24               	goto	l2666
  8462  1516                     u3660:
  8463  1516                     l2660:
  8464  1516  3000               	movlw	0
  8465  1517  00D5               	movwf	___fladd@b+3
  8466  1518  3000               	movlw	0
  8467  1519  00D4               	movwf	___fladd@b+2
  8468  151A  3000               	movlw	0
  8469  151B  00D3               	movwf	___fladd@b+1
  8470  151C  3000               	movlw	0
  8471  151D  00D2               	movwf	___fladd@b
  8472  151E                     l2662:
  8473  151E  0864               	movf	___fladd@bexp,w
  8474  151F  1D03               	btfss	3,2
  8475  1520  2D22               	goto	u3671
  8476  1521  2D23               	goto	u3670
  8477  1522                     u3671:
  8478  1522  2D24               	goto	l2666
  8479  1523                     u3670:
  8480  1523                     l2664:
  8481  1523  01E2               	clrf	___fladd@signs
  8482  1524                     l2666:
  8483  1524  1C64               	btfss	___fladd@bexp,0
  8484  1525  2D27               	goto	u3681
  8485  1526  2D28               	goto	u3680
  8486  1527                     u3681:
  8487  1527  2D2A               	goto	l2670
  8488  1528                     u3680:
  8489  1528                     l2668:
  8490  1528  17D4               	bsf	___fladd@b+2,7
  8491  1529  2D2E               	goto	l764
  8492  152A                     l2670:
  8493  152A  307F               	movlw	127
  8494  152B  00DA               	movwf	??___fladd
  8495  152C  085A               	movf	??___fladd,w
  8496  152D  05D4               	andwf	___fladd@b+2,f
  8497  152E                     l764:
  8498  152E  0864               	movf	___fladd@bexp,w
  8499  152F  00DA               	movwf	??___fladd
  8500  1530  1003               	clrc
  8501  1531  0C5A               	rrf	??___fladd,w
  8502  1532  00DB               	movwf	??___fladd+1
  8503  1533  085B               	movf	??___fladd+1,w
  8504  1534  00D5               	movwf	___fladd@b+3
  8505  1535                     l2672:
  8506  1535  1FE2               	btfss	___fladd@signs,7
  8507  1536  2D38               	goto	u3691
  8508  1537  2D39               	goto	u3690
  8509  1538                     u3691:
  8510  1538  2D3A               	goto	l765
  8511  1539                     u3690:
  8512  1539                     l2674:
  8513  1539  17D5               	bsf	___fladd@b+3,7
  8514  153A                     l765:
  8515  153A                     l735:
  8516  153A  0008               	return
  8517  153B                     __end_of___fladd:
  8518                           
  8519                           	psect	text21
  8520  18AC                     __ptext21:	
  8521 ;; *************** function ___flneg *****************
  8522 ;; Defined at:
  8523 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flneg.c"
  8524 ;; Parameters:    Size  Location     Type
  8525 ;;  f1              4    0[COMMON] unsigned char 
  8526 ;; Auto vars:     Size  Location     Type
  8527 ;;		None
  8528 ;; Return value:  Size  Location     Type
  8529 ;;                  4    0[COMMON] unsigned char 
  8530 ;; Registers used:
  8531 ;;		wreg
  8532 ;; Tracked objects:
  8533 ;;		On entry : 0/0
  8534 ;;		On exit  : 0/0
  8535 ;;		Unchanged: 0/0
  8536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8537 ;;      Params:         4       0       0       0       0
  8538 ;;      Locals:         0       0       0       0       0
  8539 ;;      Temps:          0       0       0       0       0
  8540 ;;      Totals:         4       0       0       0       0
  8541 ;;Total ram usage:        4 bytes
  8542 ;; Hardware stack levels used:    1
  8543 ;; This function calls:
  8544 ;;		Nothing
  8545 ;; This function is called by:
  8546 ;;		_sprintf
  8547 ;; This function uses a non-reentrant model
  8548 ;;
  8549                           
  8550                           
  8551                           ;psect for function ___flneg
  8552  18AC                     ___flneg:
  8553  18AC                     l3084:	
  8554                           ;incstack = 0
  8555                           ; Regs used in ___flneg: [wreg]
  8556                           
  8557  18AC  0873               	movf	___flneg@f1+3,w
  8558  18AD  0472               	iorwf	___flneg@f1+2,w
  8559  18AE  0471               	iorwf	___flneg@f1+1,w
  8560  18AF  0470               	iorwf	___flneg@f1,w
  8561  18B0  1903               	skipnz
  8562  18B1  28B3               	goto	u4821
  8563  18B2  28B4               	goto	u4820
  8564  18B3                     u4821:
  8565  18B3  28B6               	goto	l3088
  8566  18B4                     u4820:
  8567  18B4                     l3086:
  8568  18B4  3080               	movlw	128
  8569  18B5  06F3               	xorwf	___flneg@f1+3,f
  8570  18B6                     l3088:
  8571  18B6                     l594:
  8572  18B6  0008               	return
  8573  18B7                     __end_of___flneg:
  8574                           
  8575                           	psect	text22
  8576  1C99                     __ptext22:	
  8577 ;; *************** function ___flge *****************
  8578 ;; Defined at:
  8579 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\flge.c"
  8580 ;; Parameters:    Size  Location     Type
  8581 ;;  ff1             4    0[COMMON] unsigned char 
  8582 ;;  ff2             4    4[COMMON] unsigned char 
  8583 ;; Auto vars:     Size  Location     Type
  8584 ;;		None
  8585 ;; Return value:  Size  Location     Type
  8586 ;;		None               void
  8587 ;; Registers used:
  8588 ;;		wreg, status,2, status,0
  8589 ;; Tracked objects:
  8590 ;;		On entry : 0/0
  8591 ;;		On exit  : 0/0
  8592 ;;		Unchanged: 0/0
  8593 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8594 ;;      Params:         8       0       0       0       0
  8595 ;;      Locals:         0       0       0       0       0
  8596 ;;      Temps:          4       0       0       0       0
  8597 ;;      Totals:        12       0       0       0       0
  8598 ;;Total ram usage:       12 bytes
  8599 ;; Hardware stack levels used:    1
  8600 ;; This function calls:
  8601 ;;		Nothing
  8602 ;; This function is called by:
  8603 ;;		_sprintf
  8604 ;; This function uses a non-reentrant model
  8605 ;;
  8606                           
  8607                           
  8608                           ;psect for function ___flge
  8609  1C99                     ___flge:
  8610  1C99                     l3064:	
  8611                           ;incstack = 0
  8612                           ; Regs used in ___flge: [wreg+status,2+status,0]
  8613                           
  8614  1C99  3000               	movlw	0
  8615  1C9A  0570               	andwf	___flge@ff1,w
  8616  1C9B  00F8               	movwf	??___flge
  8617  1C9C  3000               	movlw	0
  8618  1C9D  0571               	andwf	___flge@ff1+1,w
  8619  1C9E  00F9               	movwf	??___flge+1
  8620  1C9F  3080               	movlw	128
  8621  1CA0  0572               	andwf	___flge@ff1+2,w
  8622  1CA1  00FA               	movwf	??___flge+2
  8623  1CA2  307F               	movlw	127
  8624  1CA3  0573               	andwf	___flge@ff1+3,w
  8625  1CA4  00FB               	movwf	??___flge+3
  8626  1CA5  087B               	movf	??___flge+3,w
  8627  1CA6  047A               	iorwf	??___flge+2,w
  8628  1CA7  0479               	iorwf	??___flge+1,w
  8629  1CA8  0478               	iorwf	??___flge,w
  8630  1CA9  1D03               	skipz
  8631  1CAA  2CAC               	goto	u4751
  8632  1CAB  2CAD               	goto	u4750
  8633  1CAC                     u4751:
  8634  1CAC  2CB5               	goto	l586
  8635  1CAD                     u4750:
  8636  1CAD                     l3066:
  8637  1CAD  3000               	movlw	0
  8638  1CAE  00F3               	movwf	___flge@ff1+3
  8639  1CAF  3000               	movlw	0
  8640  1CB0  00F2               	movwf	___flge@ff1+2
  8641  1CB1  3000               	movlw	0
  8642  1CB2  00F1               	movwf	___flge@ff1+1
  8643  1CB3  3000               	movlw	0
  8644  1CB4  00F0               	movwf	___flge@ff1
  8645  1CB5                     l586:
  8646  1CB5  3000               	movlw	0
  8647  1CB6  0574               	andwf	___flge@ff2,w
  8648  1CB7  00F8               	movwf	??___flge
  8649  1CB8  3000               	movlw	0
  8650  1CB9  0575               	andwf	___flge@ff2+1,w
  8651  1CBA  00F9               	movwf	??___flge+1
  8652  1CBB  3080               	movlw	128
  8653  1CBC  0576               	andwf	___flge@ff2+2,w
  8654  1CBD  00FA               	movwf	??___flge+2
  8655  1CBE  307F               	movlw	127
  8656  1CBF  0577               	andwf	___flge@ff2+3,w
  8657  1CC0  00FB               	movwf	??___flge+3
  8658  1CC1  087B               	movf	??___flge+3,w
  8659  1CC2  047A               	iorwf	??___flge+2,w
  8660  1CC3  0479               	iorwf	??___flge+1,w
  8661  1CC4  0478               	iorwf	??___flge,w
  8662  1CC5  1D03               	skipz
  8663  1CC6  2CC8               	goto	u4761
  8664  1CC7  2CC9               	goto	u4760
  8665  1CC8                     u4761:
  8666  1CC8  2CD1               	goto	l3070
  8667  1CC9                     u4760:
  8668  1CC9                     l3068:
  8669  1CC9  3000               	movlw	0
  8670  1CCA  00F7               	movwf	___flge@ff2+3
  8671  1CCB  3000               	movlw	0
  8672  1CCC  00F6               	movwf	___flge@ff2+2
  8673  1CCD  3000               	movlw	0
  8674  1CCE  00F5               	movwf	___flge@ff2+1
  8675  1CCF  3000               	movlw	0
  8676  1CD0  00F4               	movwf	___flge@ff2
  8677  1CD1                     l3070:
  8678  1CD1  1FF3               	btfss	___flge@ff1+3,7
  8679  1CD2  2CD4               	goto	u4771
  8680  1CD3  2CD5               	goto	u4770
  8681  1CD4                     u4771:
  8682  1CD4  2CF9               	goto	l3074
  8683  1CD5                     u4770:
  8684  1CD5                     l3072:
  8685  1CD5  3000               	movlw	0
  8686  1CD6  00F8               	movwf	??___flge
  8687  1CD7  3000               	movlw	0
  8688  1CD8  00F9               	movwf	??___flge+1
  8689  1CD9  3000               	movlw	0
  8690  1CDA  00FA               	movwf	??___flge+2
  8691  1CDB  3080               	movlw	128
  8692  1CDC  00FB               	movwf	??___flge+3
  8693  1CDD  0870               	movf	___flge@ff1,w
  8694  1CDE  02F8               	subwf	??___flge,f
  8695  1CDF  0871               	movf	___flge@ff1+1,w
  8696  1CE0  1C03               	skipc
  8697  1CE1  0F71               	incfsz	___flge@ff1+1,w
  8698  1CE2  2CE4               	goto	u4781
  8699  1CE3  2CE5               	goto	u4782
  8700  1CE4                     u4781:
  8701  1CE4  02F9               	subwf	??___flge+1,f
  8702  1CE5                     u4782:
  8703  1CE5  0872               	movf	___flge@ff1+2,w
  8704  1CE6  1C03               	skipc
  8705  1CE7  0F72               	incfsz	___flge@ff1+2,w
  8706  1CE8  2CEA               	goto	u4783
  8707  1CE9  2CEB               	goto	u4784
  8708  1CEA                     u4783:
  8709  1CEA  02FA               	subwf	??___flge+2,f
  8710  1CEB                     u4784:
  8711  1CEB  0873               	movf	___flge@ff1+3,w
  8712  1CEC  1C03               	skipc
  8713  1CED  0F73               	incfsz	___flge@ff1+3,w
  8714  1CEE  2CF0               	goto	u4785
  8715  1CEF  2CF1               	goto	u4786
  8716  1CF0                     u4785:
  8717  1CF0  02FB               	subwf	??___flge+3,f
  8718  1CF1                     u4786:
  8719  1CF1  087B               	movf	??___flge+3,w
  8720  1CF2  00F3               	movwf	___flge@ff1+3
  8721  1CF3  087A               	movf	??___flge+2,w
  8722  1CF4  00F2               	movwf	___flge@ff1+2
  8723  1CF5  0879               	movf	??___flge+1,w
  8724  1CF6  00F1               	movwf	___flge@ff1+1
  8725  1CF7  0878               	movf	??___flge,w
  8726  1CF8  00F0               	movwf	___flge@ff1
  8727  1CF9                     l3074:
  8728  1CF9  1FF7               	btfss	___flge@ff2+3,7
  8729  1CFA  2CFC               	goto	u4791
  8730  1CFB  2CFD               	goto	u4790
  8731  1CFC                     u4791:
  8732  1CFC  2D21               	goto	l589
  8733  1CFD                     u4790:
  8734  1CFD                     l3076:
  8735  1CFD  3000               	movlw	0
  8736  1CFE  00F8               	movwf	??___flge
  8737  1CFF  3000               	movlw	0
  8738  1D00  00F9               	movwf	??___flge+1
  8739  1D01  3000               	movlw	0
  8740  1D02  00FA               	movwf	??___flge+2
  8741  1D03  3080               	movlw	128
  8742  1D04  00FB               	movwf	??___flge+3
  8743  1D05  0874               	movf	___flge@ff2,w
  8744  1D06  02F8               	subwf	??___flge,f
  8745  1D07  0875               	movf	___flge@ff2+1,w
  8746  1D08  1C03               	skipc
  8747  1D09  0F75               	incfsz	___flge@ff2+1,w
  8748  1D0A  2D0C               	goto	u4801
  8749  1D0B  2D0D               	goto	u4802
  8750  1D0C                     u4801:
  8751  1D0C  02F9               	subwf	??___flge+1,f
  8752  1D0D                     u4802:
  8753  1D0D  0876               	movf	___flge@ff2+2,w
  8754  1D0E  1C03               	skipc
  8755  1D0F  0F76               	incfsz	___flge@ff2+2,w
  8756  1D10  2D12               	goto	u4803
  8757  1D11  2D13               	goto	u4804
  8758  1D12                     u4803:
  8759  1D12  02FA               	subwf	??___flge+2,f
  8760  1D13                     u4804:
  8761  1D13  0877               	movf	___flge@ff2+3,w
  8762  1D14  1C03               	skipc
  8763  1D15  0F77               	incfsz	___flge@ff2+3,w
  8764  1D16  2D18               	goto	u4805
  8765  1D17  2D19               	goto	u4806
  8766  1D18                     u4805:
  8767  1D18  02FB               	subwf	??___flge+3,f
  8768  1D19                     u4806:
  8769  1D19  087B               	movf	??___flge+3,w
  8770  1D1A  00F7               	movwf	___flge@ff2+3
  8771  1D1B  087A               	movf	??___flge+2,w
  8772  1D1C  00F6               	movwf	___flge@ff2+2
  8773  1D1D  0879               	movf	??___flge+1,w
  8774  1D1E  00F5               	movwf	___flge@ff2+1
  8775  1D1F  0878               	movf	??___flge,w
  8776  1D20  00F4               	movwf	___flge@ff2
  8777  1D21                     l589:
  8778  1D21  3080               	movlw	128
  8779  1D22  06F3               	xorwf	___flge@ff1+3,f
  8780  1D23  3080               	movlw	128
  8781  1D24  06F7               	xorwf	___flge@ff2+3,f
  8782  1D25  0877               	movf	___flge@ff2+3,w
  8783  1D26  0273               	subwf	___flge@ff1+3,w
  8784  1D27  1D03               	skipz
  8785  1D28  2D33               	goto	u4815
  8786  1D29  0876               	movf	___flge@ff2+2,w
  8787  1D2A  0272               	subwf	___flge@ff1+2,w
  8788  1D2B  1D03               	skipz
  8789  1D2C  2D33               	goto	u4815
  8790  1D2D  0875               	movf	___flge@ff2+1,w
  8791  1D2E  0271               	subwf	___flge@ff1+1,w
  8792  1D2F  1D03               	skipz
  8793  1D30  2D33               	goto	u4815
  8794  1D31  0874               	movf	___flge@ff2,w
  8795  1D32  0270               	subwf	___flge@ff1,w
  8796  1D33                     u4815:
  8797  1D33  1803               	skipnc
  8798  1D34  2D36               	goto	u4811
  8799  1D35  2D37               	goto	u4810
  8800  1D36                     u4811:
  8801  1D36  2D39               	goto	l3080
  8802  1D37                     u4810:
  8803  1D37                     l3078:
  8804  1D37  1003               	clrc
  8805  1D38  2D3A               	goto	l590
  8806  1D39                     l3080:
  8807  1D39  1403               	setc
  8808  1D3A                     l590:
  8809  1D3A  0008               	return
  8810  1D3B                     __end_of___flge:
  8811                           
  8812                           	psect	text23
  8813  1AB8                     __ptext23:	
  8814 ;; *************** function ___fleq *****************
  8815 ;; Defined at:
  8816 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\fleq.c"
  8817 ;; Parameters:    Size  Location     Type
  8818 ;;  ff1             4    0[COMMON] unsigned char 
  8819 ;;  ff2             4    4[COMMON] unsigned char 
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;		None
  8822 ;; Return value:  Size  Location     Type
  8823 ;;		None               void
  8824 ;; Registers used:
  8825 ;;		wreg, status,2, status,0
  8826 ;; Tracked objects:
  8827 ;;		On entry : 0/0
  8828 ;;		On exit  : 0/0
  8829 ;;		Unchanged: 0/0
  8830 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8831 ;;      Params:         8       0       0       0       0
  8832 ;;      Locals:         0       0       0       0       0
  8833 ;;      Temps:          4       0       0       0       0
  8834 ;;      Totals:        12       0       0       0       0
  8835 ;;Total ram usage:       12 bytes
  8836 ;; Hardware stack levels used:    1
  8837 ;; This function calls:
  8838 ;;		Nothing
  8839 ;; This function is called by:
  8840 ;;		_sprintf
  8841 ;; This function uses a non-reentrant model
  8842 ;;
  8843                           
  8844                           
  8845                           ;psect for function ___fleq
  8846  1AB8                     ___fleq:
  8847  1AB8                     l3052:	
  8848                           ;incstack = 0
  8849                           ; Regs used in ___fleq: [wreg+status,2+status,0]
  8850                           
  8851  1AB8  3000               	movlw	0
  8852  1AB9  0570               	andwf	___fleq@ff1,w
  8853  1ABA  00F8               	movwf	??___fleq
  8854  1ABB  3000               	movlw	0
  8855  1ABC  0571               	andwf	___fleq@ff1+1,w
  8856  1ABD  00F9               	movwf	??___fleq+1
  8857  1ABE  3080               	movlw	128
  8858  1ABF  0572               	andwf	___fleq@ff1+2,w
  8859  1AC0  00FA               	movwf	??___fleq+2
  8860  1AC1  307F               	movlw	127
  8861  1AC2  0573               	andwf	___fleq@ff1+3,w
  8862  1AC3  00FB               	movwf	??___fleq+3
  8863  1AC4  087B               	movf	??___fleq+3,w
  8864  1AC5  047A               	iorwf	??___fleq+2,w
  8865  1AC6  0479               	iorwf	??___fleq+1,w
  8866  1AC7  0478               	iorwf	??___fleq,w
  8867  1AC8  1D03               	skipz
  8868  1AC9  2ACB               	goto	u4721
  8869  1ACA  2ACC               	goto	u4720
  8870  1ACB                     u4721:
  8871  1ACB  2AD4               	goto	l581
  8872  1ACC                     u4720:
  8873  1ACC                     l3054:
  8874  1ACC  3000               	movlw	0
  8875  1ACD  00F3               	movwf	___fleq@ff1+3
  8876  1ACE  3000               	movlw	0
  8877  1ACF  00F2               	movwf	___fleq@ff1+2
  8878  1AD0  3000               	movlw	0
  8879  1AD1  00F1               	movwf	___fleq@ff1+1
  8880  1AD2  3000               	movlw	0
  8881  1AD3  00F0               	movwf	___fleq@ff1
  8882  1AD4                     l581:
  8883  1AD4  3000               	movlw	0
  8884  1AD5  0574               	andwf	___fleq@ff2,w
  8885  1AD6  00F8               	movwf	??___fleq
  8886  1AD7  3000               	movlw	0
  8887  1AD8  0575               	andwf	___fleq@ff2+1,w
  8888  1AD9  00F9               	movwf	??___fleq+1
  8889  1ADA  3080               	movlw	128
  8890  1ADB  0576               	andwf	___fleq@ff2+2,w
  8891  1ADC  00FA               	movwf	??___fleq+2
  8892  1ADD  307F               	movlw	127
  8893  1ADE  0577               	andwf	___fleq@ff2+3,w
  8894  1ADF  00FB               	movwf	??___fleq+3
  8895  1AE0  087B               	movf	??___fleq+3,w
  8896  1AE1  047A               	iorwf	??___fleq+2,w
  8897  1AE2  0479               	iorwf	??___fleq+1,w
  8898  1AE3  0478               	iorwf	??___fleq,w
  8899  1AE4  1D03               	skipz
  8900  1AE5  2AE7               	goto	u4731
  8901  1AE6  2AE8               	goto	u4730
  8902  1AE7                     u4731:
  8903  1AE7  2AF0               	goto	l582
  8904  1AE8                     u4730:
  8905  1AE8                     l3056:
  8906  1AE8  3000               	movlw	0
  8907  1AE9  00F7               	movwf	___fleq@ff2+3
  8908  1AEA  3000               	movlw	0
  8909  1AEB  00F6               	movwf	___fleq@ff2+2
  8910  1AEC  3000               	movlw	0
  8911  1AED  00F5               	movwf	___fleq@ff2+1
  8912  1AEE  3000               	movlw	0
  8913  1AEF  00F4               	movwf	___fleq@ff2
  8914  1AF0                     l582:
  8915  1AF0  0877               	movf	___fleq@ff2+3,w
  8916  1AF1  0673               	xorwf	___fleq@ff1+3,w
  8917  1AF2  1D03               	skipz
  8918  1AF3  2AFE               	goto	u4745
  8919  1AF4  0876               	movf	___fleq@ff2+2,w
  8920  1AF5  0672               	xorwf	___fleq@ff1+2,w
  8921  1AF6  1D03               	skipz
  8922  1AF7  2AFE               	goto	u4745
  8923  1AF8  0875               	movf	___fleq@ff2+1,w
  8924  1AF9  0671               	xorwf	___fleq@ff1+1,w
  8925  1AFA  1D03               	skipz
  8926  1AFB  2AFE               	goto	u4745
  8927  1AFC  0874               	movf	___fleq@ff2,w
  8928  1AFD  0670               	xorwf	___fleq@ff1,w
  8929  1AFE                     u4745:
  8930  1AFE  1903               	skipnz
  8931  1AFF  2B01               	goto	u4741
  8932  1B00  2B02               	goto	u4740
  8933  1B01                     u4741:
  8934  1B01  2B04               	goto	l3060
  8935  1B02                     u4740:
  8936  1B02                     l3058:
  8937  1B02  1003               	clrc
  8938  1B03  2B05               	goto	l583
  8939  1B04                     l3060:
  8940  1B04  1403               	setc
  8941  1B05                     l583:
  8942  1B05  0008               	return
  8943  1B06                     __end_of___fleq:
  8944                           
  8945                           	psect	text24
  8946  18A3                     __ptext24:	
  8947 ;; *************** function _spiRead *****************
  8948 ;; Defined at:
  8949 ;;		line 47 in file "SPI.c"
  8950 ;; Parameters:    Size  Location     Type
  8951 ;;		None
  8952 ;; Auto vars:     Size  Location     Type
  8953 ;;		None
  8954 ;; Return value:  Size  Location     Type
  8955 ;;                  1    wreg      unsigned char 
  8956 ;; Registers used:
  8957 ;;		wreg, status,2, status,0, pclath, cstack
  8958 ;; Tracked objects:
  8959 ;;		On entry : 0/0
  8960 ;;		On exit  : 0/0
  8961 ;;		Unchanged: 0/0
  8962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8963 ;;      Params:         0       0       0       0       0
  8964 ;;      Locals:         0       0       0       0       0
  8965 ;;      Temps:          0       0       0       0       0
  8966 ;;      Totals:         0       0       0       0       0
  8967 ;;Total ram usage:        0 bytes
  8968 ;; Hardware stack levels used:    1
  8969 ;; Hardware stack levels required when called:    1
  8970 ;; This function calls:
  8971 ;;		_spiReceiveWait
  8972 ;; This function is called by:
  8973 ;;		_main
  8974 ;; This function uses a non-reentrant model
  8975 ;;
  8976                           
  8977                           
  8978                           ;psect for function _spiRead
  8979  18A3                     _spiRead:
  8980  18A3                     l3564:	
  8981                           ;incstack = 0
  8982                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  8983                           
  8984                           
  8985                           ;SPI.c: 49:     spiReceiveWait();
  8986  18A3  120A  158A  2000  160A  158A  	fcall	_spiReceiveWait
  8987  18A8                     l3566:
  8988                           
  8989                           ;SPI.c: 50:     return(SSPBUF);
  8990  18A8  1283               	bcf	3,5	;RP0=0, select bank0
  8991  18A9  1303               	bcf	3,6	;RP1=0, select bank0
  8992  18AA  0813               	movf	19,w	;volatile
  8993  18AB                     l190:
  8994  18AB  0008               	return
  8995  18AC                     __end_of_spiRead:
  8996                           
  8997                           	psect	text25
  8998  0800                     __ptext25:	
  8999 ;; *************** function _spiReceiveWait *****************
  9000 ;; Defined at:
  9001 ;;		line 29 in file "SPI.c"
  9002 ;; Parameters:    Size  Location     Type
  9003 ;;		None
  9004 ;; Auto vars:     Size  Location     Type
  9005 ;;		None
  9006 ;; Return value:  Size  Location     Type
  9007 ;;                  1    wreg      void 
  9008 ;; Registers used:
  9009 ;;		None
  9010 ;; Tracked objects:
  9011 ;;		On entry : 0/0
  9012 ;;		On exit  : 0/0
  9013 ;;		Unchanged: 0/0
  9014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9015 ;;      Params:         0       0       0       0       0
  9016 ;;      Locals:         0       0       0       0       0
  9017 ;;      Temps:          0       0       0       0       0
  9018 ;;      Totals:         0       0       0       0       0
  9019 ;;Total ram usage:        0 bytes
  9020 ;; Hardware stack levels used:    1
  9021 ;; This function calls:
  9022 ;;		Nothing
  9023 ;; This function is called by:
  9024 ;;		_spiRead
  9025 ;; This function uses a non-reentrant model
  9026 ;;
  9027                           
  9028                           
  9029                           ;psect for function _spiReceiveWait
  9030  0800                     _spiReceiveWait:
  9031  0800                     l2838:	
  9032                           ;incstack = 0
  9033                           ; Regs used in _spiReceiveWait: []
  9034                           
  9035  0800                     l176:	
  9036                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  9037                           
  9038  0800  1683               	bsf	3,5	;RP0=1, select bank1
  9039  0801  1303               	bcf	3,6	;RP1=0, select bank1
  9040  0802  1C14               	btfss	20,0	;volatile
  9041  0803  2805               	goto	u4071
  9042  0804  2806               	goto	u4070
  9043  0805                     u4071:
  9044  0805  2800               	goto	l176
  9045  0806                     u4070:
  9046  0806                     l179:
  9047  0806  0008               	return
  9048  0807                     __end_of_spiReceiveWait:
  9049                           
  9050                           	psect	text26
  9051  18FF                     __ptext26:	
  9052 ;; *************** function _spiInit *****************
  9053 ;; Defined at:
  9054 ;;		line 12 in file "SPI.c"
  9055 ;; Parameters:    Size  Location     Type
  9056 ;;  sType           1    wreg     enum E1264
  9057 ;;  sDataSample     1    0[COMMON] enum E1272
  9058 ;;  sClockIdle      1    1[COMMON] enum E1276
  9059 ;;  sTransmitEdg    1    2[COMMON] enum E1280
  9060 ;; Auto vars:     Size  Location     Type
  9061 ;;  sType           1    3[COMMON] enum E1264
  9062 ;; Return value:  Size  Location     Type
  9063 ;;                  1    wreg      void 
  9064 ;; Registers used:
  9065 ;;		wreg, status,2, status,0
  9066 ;; Tracked objects:
  9067 ;;		On entry : 0/0
  9068 ;;		On exit  : 0/0
  9069 ;;		Unchanged: 0/0
  9070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9071 ;;      Params:         3       0       0       0       0
  9072 ;;      Locals:         1       0       0       0       0
  9073 ;;      Temps:          0       0       0       0       0
  9074 ;;      Totals:         4       0       0       0       0
  9075 ;;Total ram usage:        4 bytes
  9076 ;; Hardware stack levels used:    1
  9077 ;; This function calls:
  9078 ;;		Nothing
  9079 ;; This function is called by:
  9080 ;;		_main
  9081 ;; This function uses a non-reentrant model
  9082 ;;
  9083                           
  9084                           
  9085                           ;psect for function _spiInit
  9086  18FF                     _spiInit:
  9087                           
  9088                           ;incstack = 0
  9089                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  9090                           ;spiInit@sType stored from wreg
  9091  18FF  00F3               	movwf	spiInit@sType
  9092  1900                     l3244:
  9093                           
  9094                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
  9095  1900  1683               	bsf	3,5	;RP0=1, select bank1
  9096  1901  1303               	bcf	3,6	;RP1=0, select bank1
  9097  1902  1287               	bcf	7,5	;volatile
  9098                           
  9099                           ;SPI.c: 15:     if(sType & 0b00000100)
  9100  1903  1D73               	btfss	spiInit@sType,2
  9101  1904  2906               	goto	u5181
  9102  1905  2907               	goto	u5180
  9103  1906                     u5181:
  9104  1906  290B               	goto	l3250
  9105  1907                     u5180:
  9106  1907                     l3246:
  9107                           
  9108                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
  9109  1907  0872               	movf	spiInit@sTransmitEdge,w
  9110  1908  0094               	movwf	20	;volatile
  9111  1909                     l3248:
  9112                           
  9113                           ;SPI.c: 18:         TRISC3 = 1;
  9114  1909  1587               	bsf	7,3	;volatile
  9115                           
  9116                           ;SPI.c: 19:     }
  9117  190A  290F               	goto	l172
  9118  190B                     l3250:
  9119                           
  9120                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
  9121  190B  0870               	movf	spiInit@sDataSample,w
  9122  190C  0472               	iorwf	spiInit@sTransmitEdge,w
  9123  190D  0094               	movwf	20	;volatile
  9124  190E                     l3252:
  9125                           
  9126                           ;SPI.c: 23:         TRISC3 = 0;
  9127  190E  1187               	bcf	7,3	;volatile
  9128  190F                     l172:	
  9129                           ;SPI.c: 24:     }
  9130                           
  9131                           
  9132                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
  9133  190F  0873               	movf	spiInit@sType,w
  9134  1910  0471               	iorwf	spiInit@sClockIdle,w
  9135  1911  1283               	bcf	3,5	;RP0=0, select bank0
  9136  1912  1303               	bcf	3,6	;RP1=0, select bank0
  9137  1913  0094               	movwf	20	;volatile
  9138  1914                     l173:
  9139  1914  0008               	return
  9140  1915                     __end_of_spiInit:
  9141                           
  9142                           	psect	text27
  9143  18D6                     __ptext27:	
  9144 ;; *************** function _setup *****************
  9145 ;; Defined at:
  9146 ;;		line 72 in file "main.c"
  9147 ;; Parameters:    Size  Location     Type
  9148 ;;		None
  9149 ;; Auto vars:     Size  Location     Type
  9150 ;;		None
  9151 ;; Return value:  Size  Location     Type
  9152 ;;                  1    wreg      void 
  9153 ;; Registers used:
  9154 ;;		wreg, status,2
  9155 ;; Tracked objects:
  9156 ;;		On entry : 0/0
  9157 ;;		On exit  : 0/0
  9158 ;;		Unchanged: 0/0
  9159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9160 ;;      Params:         0       0       0       0       0
  9161 ;;      Locals:         0       0       0       0       0
  9162 ;;      Temps:          0       0       0       0       0
  9163 ;;      Totals:         0       0       0       0       0
  9164 ;;Total ram usage:        0 bytes
  9165 ;; Hardware stack levels used:    1
  9166 ;; This function calls:
  9167 ;;		Nothing
  9168 ;; This function is called by:
  9169 ;;		_main
  9170 ;; This function uses a non-reentrant model
  9171 ;;
  9172                           
  9173                           
  9174                           ;psect for function _setup
  9175  18D6                     _setup:
  9176  18D6                     l3230:	
  9177                           ;incstack = 0
  9178                           ; Regs used in _setup: [wreg+status,2]
  9179                           
  9180                           
  9181                           ;main.c: 73:     TRISD = 0b00000000;
  9182  18D6  1683               	bsf	3,5	;RP0=1, select bank1
  9183  18D7  1303               	bcf	3,6	;RP1=0, select bank1
  9184  18D8  0188               	clrf	8	;volatile
  9185  18D9                     l3232:
  9186                           
  9187                           ;main.c: 74:     TRISC = 0b10010000;
  9188  18D9  3090               	movlw	144
  9189  18DA  0087               	movwf	7	;volatile
  9190  18DB                     l3234:
  9191                           
  9192                           ;main.c: 75:     TRISE = 0b00000000;
  9193  18DB  0189               	clrf	9	;volatile
  9194  18DC                     l3236:
  9195                           
  9196                           ;main.c: 76:     TRISB = 0b00000000;
  9197  18DC  0186               	clrf	6	;volatile
  9198  18DD                     l3238:
  9199                           
  9200                           ;main.c: 77:     ANSEL = 0b00000011;
  9201  18DD  3003               	movlw	3
  9202  18DE  1683               	bsf	3,5	;RP0=1, select bank3
  9203  18DF  1703               	bsf	3,6	;RP1=1, select bank3
  9204  18E0  0088               	movwf	8	;volatile
  9205                           
  9206                           ;main.c: 78:     PORTC = 0;
  9207  18E1  1283               	bcf	3,5	;RP0=0, select bank0
  9208  18E2  1303               	bcf	3,6	;RP1=0, select bank0
  9209  18E3  0187               	clrf	7	;volatile
  9210                           
  9211                           ;main.c: 79:     PORTD = 0;
  9212  18E4  0188               	clrf	8	;volatile
  9213                           
  9214                           ;main.c: 80:     PORTE = 0;
  9215  18E5  0189               	clrf	9	;volatile
  9216                           
  9217                           ;main.c: 81:     PORTB = 0;
  9218  18E6  0186               	clrf	6	;volatile
  9219  18E7                     l3240:
  9220                           
  9221                           ;main.c: 82:     PORTAbits.RA0 = 1;
  9222  18E7  1405               	bsf	5,0	;volatile
  9223  18E8                     l3242:
  9224                           
  9225                           ;main.c: 83:     PORTAbits.RA1 = 1;
  9226  18E8  1485               	bsf	5,1	;volatile
  9227  18E9                     l106:
  9228  18E9  0008               	return
  9229  18EA                     __end_of_setup:
  9230                           
  9231                           	psect	text28
  9232  1A32                     __ptext28:	
  9233 ;; *************** function _Lcd_Write_String *****************
  9234 ;; Defined at:
  9235 ;;		line 67 in file "LCD.c"
  9236 ;; Parameters:    Size  Location     Type
  9237 ;;  a               2    3[COMMON] PTR unsigned char 
  9238 ;;		 -> l(20), c(20), s(20), STR_1(19), 
  9239 ;; Auto vars:     Size  Location     Type
  9240 ;;  i               2    8[COMMON] int 
  9241 ;; Return value:  Size  Location     Type
  9242 ;;                  1    wreg      void 
  9243 ;; Registers used:
  9244 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  9245 ;; Tracked objects:
  9246 ;;		On entry : 0/0
  9247 ;;		On exit  : 0/0
  9248 ;;		Unchanged: 0/0
  9249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9250 ;;      Params:         2       0       0       0       0
  9251 ;;      Locals:         2       0       0       0       0
  9252 ;;      Temps:          3       0       0       0       0
  9253 ;;      Totals:         7       0       0       0       0
  9254 ;;Total ram usage:        7 bytes
  9255 ;; Hardware stack levels used:    1
  9256 ;; Hardware stack levels required when called:    2
  9257 ;; This function calls:
  9258 ;;		_Lcd_Write_Char
  9259 ;; This function is called by:
  9260 ;;		_main
  9261 ;; This function uses a non-reentrant model
  9262 ;;
  9263                           
  9264                           
  9265                           ;psect for function _Lcd_Write_String
  9266  1A32                     _Lcd_Write_String:
  9267  1A32                     l3222:	
  9268                           ;incstack = 0
  9269                           ; Regs used in _Lcd_Write_String: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  9270                           
  9271                           
  9272                           ;LCD.c: 68:     int i;;LCD.c: 69:     for (i = 0; a[i] != '\0'; i++)
  9273  1A32  01F8               	clrf	Lcd_Write_String@i
  9274  1A33  01F9               	clrf	Lcd_Write_String@i+1
  9275  1A34  2A57               	goto	l3228
  9276  1A35                     l3224:
  9277                           
  9278                           ;LCD.c: 70:         Lcd_Write_Char(a[i]);
  9279  1A35  0878               	movf	Lcd_Write_String@i,w
  9280  1A36  0773               	addwf	Lcd_Write_String@a,w
  9281  1A37  00F6               	movwf	??_Lcd_Write_String+1
  9282  1A38  0874               	movf	Lcd_Write_String@a+1,w
  9283  1A39  00F5               	movwf	??_Lcd_Write_String
  9284  1A3A  1803               	skipnc
  9285  1A3B  0AF5               	incf	??_Lcd_Write_String,f
  9286  1A3C  1FF8               	btfss	Lcd_Write_String@i,7
  9287  1A3D  2A3F               	goto	u5150
  9288  1A3E  03F5               	decf	??_Lcd_Write_String,f
  9289  1A3F                     u5150:
  9290  1A3F  0875               	movf	??_Lcd_Write_String,w
  9291  1A40  00F7               	movwf	??_Lcd_Write_String+2
  9292  1A41  0877               	movf	??_Lcd_Write_String+2,w
  9293  1A42  1283               	bcf	3,5	;RP0=0, select bank0
  9294  1A43  1303               	bcf	3,6	;RP1=0, select bank0
  9295  1A44  00FF               	movwf	btemp+1
  9296  1A45  0876               	movf	??_Lcd_Write_String+1,w
  9297  1A46  0084               	movwf	4
  9298  1A47  120A  118A  2003  160A  158A  	fcall	stringtab
  9299  1A4C  160A  158A  212F  160A  158A  	fcall	_Lcd_Write_Char
  9300  1A51                     l3226:
  9301  1A51  3001               	movlw	1
  9302  1A52  07F8               	addwf	Lcd_Write_String@i,f
  9303  1A53  1803               	skipnc
  9304  1A54  0AF9               	incf	Lcd_Write_String@i+1,f
  9305  1A55  3000               	movlw	0
  9306  1A56  07F9               	addwf	Lcd_Write_String@i+1,f
  9307  1A57                     l3228:
  9308  1A57  0878               	movf	Lcd_Write_String@i,w
  9309  1A58  0773               	addwf	Lcd_Write_String@a,w
  9310  1A59  00F6               	movwf	??_Lcd_Write_String+1
  9311  1A5A  0874               	movf	Lcd_Write_String@a+1,w
  9312  1A5B  00F5               	movwf	??_Lcd_Write_String
  9313  1A5C  1803               	skipnc
  9314  1A5D  0AF5               	incf	??_Lcd_Write_String,f
  9315  1A5E  1FF8               	btfss	Lcd_Write_String@i,7
  9316  1A5F  2A61               	goto	u5160
  9317  1A60  03F5               	decf	??_Lcd_Write_String,f
  9318  1A61                     u5160:
  9319  1A61  0875               	movf	??_Lcd_Write_String,w
  9320  1A62  00F7               	movwf	??_Lcd_Write_String+2
  9321  1A63  0877               	movf	??_Lcd_Write_String+2,w
  9322  1A64  1283               	bcf	3,5	;RP0=0, select bank0
  9323  1A65  1303               	bcf	3,6	;RP1=0, select bank0
  9324  1A66  00FF               	movwf	btemp+1
  9325  1A67  0876               	movf	??_Lcd_Write_String+1,w
  9326  1A68  0084               	movwf	4
  9327  1A69  120A  118A  2003  160A  158A  	fcall	stringtab
  9328  1A6E  3A00               	xorlw	0
  9329  1A6F  1D03               	skipz
  9330  1A70  2A72               	goto	u5171
  9331  1A71  2A73               	goto	u5170
  9332  1A72                     u5171:
  9333  1A72  2A35               	goto	l3224
  9334  1A73                     u5170:
  9335  1A73                     l33:
  9336  1A73  0008               	return
  9337  1A74                     __end_of_Lcd_Write_String:
  9338                           
  9339                           	psect	text29
  9340  192F                     __ptext29:	
  9341 ;; *************** function _Lcd_Write_Char *****************
  9342 ;; Defined at:
  9343 ;;		line 58 in file "LCD.c"
  9344 ;; Parameters:    Size  Location     Type
  9345 ;;  a               1    wreg     unsigned char 
  9346 ;; Auto vars:     Size  Location     Type
  9347 ;;  a               1    2[COMMON] unsigned char 
  9348 ;; Return value:  Size  Location     Type
  9349 ;;                  1    wreg      void 
  9350 ;; Registers used:
  9351 ;;		wreg, status,2, status,0, pclath, cstack
  9352 ;; Tracked objects:
  9353 ;;		On entry : 0/0
  9354 ;;		On exit  : 0/0
  9355 ;;		Unchanged: 0/0
  9356 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9357 ;;      Params:         0       0       0       0       0
  9358 ;;      Locals:         1       0       0       0       0
  9359 ;;      Temps:          1       0       0       0       0
  9360 ;;      Totals:         2       0       0       0       0
  9361 ;;Total ram usage:        2 bytes
  9362 ;; Hardware stack levels used:    1
  9363 ;; Hardware stack levels required when called:    1
  9364 ;; This function calls:
  9365 ;;		_Lcd_Port
  9366 ;; This function is called by:
  9367 ;;		_Lcd_Write_String
  9368 ;; This function uses a non-reentrant model
  9369 ;;
  9370                           
  9371                           
  9372                           ;psect for function _Lcd_Write_Char
  9373  192F                     _Lcd_Write_Char:
  9374                           
  9375                           ;incstack = 0
  9376                           ; Regs used in _Lcd_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  9377                           ;Lcd_Write_Char@a stored from wreg
  9378  192F  00F2               	movwf	Lcd_Write_Char@a
  9379  1930                     l2826:
  9380                           
  9381                           ;LCD.c: 59:     PORTEbits.RE0 = 1;
  9382  1930  1283               	bcf	3,5	;RP0=0, select bank0
  9383  1931  1303               	bcf	3,6	;RP1=0, select bank0
  9384  1932  1409               	bsf	9,0	;volatile
  9385  1933                     l2828:
  9386                           
  9387                           ;LCD.c: 60:     Lcd_Port(a);
  9388  1933  0872               	movf	Lcd_Write_Char@a,w
  9389  1934  160A  158A  2095  160A  158A  	fcall	_Lcd_Port
  9390  1939                     l2830:
  9391                           
  9392                           ;LCD.c: 61:     PORTEbits.RE1 = 1;
  9393  1939  1283               	bcf	3,5	;RP0=0, select bank0
  9394  193A  1303               	bcf	3,6	;RP1=0, select bank0
  9395  193B  1489               	bsf	9,1	;volatile
  9396  193C                     l2832:
  9397                           
  9398                           ;LCD.c: 62:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9399  193C  301A               	movlw	26
  9400  193D  00F1               	movwf	??_Lcd_Write_Char
  9401  193E                     u5897:
  9402  193E  0BF1               	decfsz	??_Lcd_Write_Char,f
  9403  193F  293E               	goto	u5897
  9404  1940  0000               	nop
  9405  1941                     l2834:
  9406                           
  9407                           ;LCD.c: 63:     PORTEbits.RE1 = 0;
  9408  1941  1283               	bcf	3,5	;RP0=0, select bank0
  9409  1942  1303               	bcf	3,6	;RP1=0, select bank0
  9410  1943  1089               	bcf	9,1	;volatile
  9411  1944                     l2836:
  9412                           
  9413                           ;LCD.c: 64:     _delay((unsigned long)((40)*(8000000/4000000.0)));
  9414  1944  301A               	movlw	26
  9415  1945  00F1               	movwf	??_Lcd_Write_Char
  9416  1946                     u5907:
  9417  1946  0BF1               	decfsz	??_Lcd_Write_Char,f
  9418  1947  2946               	goto	u5907
  9419  1948  0000               	nop
  9420  1949                     l27:
  9421  1949  0008               	return
  9422  194A                     __end_of_Lcd_Write_Char:
  9423                           
  9424                           	psect	text30
  9425  194A                     __ptext30:	
  9426 ;; *************** function _Lcd_Set_Cursor *****************
  9427 ;; Defined at:
  9428 ;;		line 33 in file "LCD.c"
  9429 ;; Parameters:    Size  Location     Type
  9430 ;;  a               1    wreg     unsigned char 
  9431 ;;  b               1    4[COMMON] unsigned char 
  9432 ;; Auto vars:     Size  Location     Type
  9433 ;;  a               1    6[COMMON] unsigned char 
  9434 ;;  temp            1    7[COMMON] unsigned char 
  9435 ;; Return value:  Size  Location     Type
  9436 ;;                  1    wreg      void 
  9437 ;; Registers used:
  9438 ;;		wreg, status,2, status,0, pclath, cstack
  9439 ;; Tracked objects:
  9440 ;;		On entry : 0/0
  9441 ;;		On exit  : 0/0
  9442 ;;		Unchanged: 0/0
  9443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9444 ;;      Params:         1       0       0       0       0
  9445 ;;      Locals:         2       0       0       0       0
  9446 ;;      Temps:          1       0       0       0       0
  9447 ;;      Totals:         4       0       0       0       0
  9448 ;;Total ram usage:        4 bytes
  9449 ;; Hardware stack levels used:    1
  9450 ;; Hardware stack levels required when called:    2
  9451 ;; This function calls:
  9452 ;;		_Lcd_Cmd
  9453 ;; This function is called by:
  9454 ;;		_main
  9455 ;; This function uses a non-reentrant model
  9456 ;;
  9457                           
  9458                           
  9459                           ;psect for function _Lcd_Set_Cursor
  9460  194A                     _Lcd_Set_Cursor:
  9461                           
  9462                           ;incstack = 0
  9463                           ; Regs used in _Lcd_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  9464                           ;Lcd_Set_Cursor@a stored from wreg
  9465  194A  00F6               	movwf	Lcd_Set_Cursor@a
  9466  194B                     l3200:
  9467                           
  9468                           ;LCD.c: 34:     char temp;;LCD.c: 35:     if (a == 1) {
  9469  194B  0376               	decf	Lcd_Set_Cursor@a,w
  9470  194C  1D03               	btfss	3,2
  9471  194D  294F               	goto	u5131
  9472  194E  2950               	goto	u5130
  9473  194F                     u5131:
  9474  194F  295C               	goto	l3206
  9475  1950                     u5130:
  9476  1950                     l3202:
  9477                           
  9478                           ;LCD.c: 36:         temp = 0x80 + b - 1;
  9479  1950  0874               	movf	Lcd_Set_Cursor@b,w
  9480  1951  3E7F               	addlw	127
  9481  1952  00F5               	movwf	??_Lcd_Set_Cursor
  9482  1953  0875               	movf	??_Lcd_Set_Cursor,w
  9483  1954  00F7               	movwf	Lcd_Set_Cursor@temp
  9484  1955                     l3204:
  9485                           
  9486                           ;LCD.c: 37:         Lcd_Cmd(temp);
  9487  1955  0877               	movf	Lcd_Set_Cursor@temp,w
  9488  1956  160A  158A  2115  160A  158A  	fcall	_Lcd_Cmd
  9489                           
  9490                           ;LCD.c: 38:     } else if (a == 2) {
  9491  195B  296D               	goto	l21
  9492  195C                     l3206:
  9493  195C  3002               	movlw	2
  9494  195D  0676               	xorwf	Lcd_Set_Cursor@a,w
  9495  195E  1D03               	btfss	3,2
  9496  195F  2961               	goto	u5141
  9497  1960  2962               	goto	u5140
  9498  1961                     u5141:
  9499  1961  296D               	goto	l21
  9500  1962                     u5140:
  9501  1962                     l3208:
  9502                           
  9503                           ;LCD.c: 39:         temp = 0xC0 + b - 1;
  9504  1962  0874               	movf	Lcd_Set_Cursor@b,w
  9505  1963  3EBF               	addlw	191
  9506  1964  00F5               	movwf	??_Lcd_Set_Cursor
  9507  1965  0875               	movf	??_Lcd_Set_Cursor,w
  9508  1966  00F7               	movwf	Lcd_Set_Cursor@temp
  9509  1967                     l3210:
  9510                           
  9511                           ;LCD.c: 40:         Lcd_Cmd(temp);
  9512  1967  0877               	movf	Lcd_Set_Cursor@temp,w
  9513  1968  160A  158A  2115  160A  158A  	fcall	_Lcd_Cmd
  9514  196D                     l21:
  9515  196D  0008               	return
  9516  196E                     __end_of_Lcd_Set_Cursor:
  9517                           
  9518                           	psect	text31
  9519  19F1                     __ptext31:	
  9520 ;; *************** function _Lcd_Init *****************
  9521 ;; Defined at:
  9522 ;;		line 44 in file "LCD.c"
  9523 ;; Parameters:    Size  Location     Type
  9524 ;;		None
  9525 ;; Auto vars:     Size  Location     Type
  9526 ;;		None
  9527 ;; Return value:  Size  Location     Type
  9528 ;;                  1    wreg      void 
  9529 ;; Registers used:
  9530 ;;		wreg, status,2, status,0, pclath, cstack
  9531 ;; Tracked objects:
  9532 ;;		On entry : 0/0
  9533 ;;		On exit  : 0/0
  9534 ;;		Unchanged: 0/0
  9535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9536 ;;      Params:         0       0       0       0       0
  9537 ;;      Locals:         0       0       0       0       0
  9538 ;;      Temps:          2       0       0       0       0
  9539 ;;      Totals:         2       0       0       0       0
  9540 ;;Total ram usage:        2 bytes
  9541 ;; Hardware stack levels used:    1
  9542 ;; Hardware stack levels required when called:    2
  9543 ;; This function calls:
  9544 ;;		_Lcd_Cmd
  9545 ;;		_Lcd_Port
  9546 ;; This function is called by:
  9547 ;;		_main
  9548 ;; This function uses a non-reentrant model
  9549 ;;
  9550                           
  9551                           
  9552                           ;psect for function _Lcd_Init
  9553  19F1                     _Lcd_Init:
  9554  19F1                     l3212:	
  9555                           ;incstack = 0
  9556                           ; Regs used in _Lcd_Init: [wreg+status,2+status,0+pclath+cstack]
  9557                           
  9558                           
  9559                           ;LCD.c: 45:     Lcd_Port(0x00);
  9560  19F1  3000               	movlw	0
  9561  19F2  160A  158A  2095  160A  158A  	fcall	_Lcd_Port
  9562  19F7                     l3214:
  9563                           
  9564                           ;LCD.c: 46:     _delay((unsigned long)((20)*(8000000/4000.0)));
  9565  19F7  3034               	movlw	52
  9566  19F8  00F5               	movwf	??_Lcd_Init+1
  9567  19F9  30F1               	movlw	241
  9568  19FA  00F4               	movwf	??_Lcd_Init
  9569  19FB                     u5917:
  9570  19FB  0BF4               	decfsz	??_Lcd_Init,f
  9571  19FC  29FB               	goto	u5917
  9572  19FD  0BF5               	decfsz	??_Lcd_Init+1,f
  9573  19FE  29FB               	goto	u5917
  9574  19FF  2A00               	nop2
  9575  1A00                     l3216:
  9576                           
  9577                           ;LCD.c: 47:     Lcd_Cmd(0x3F);
  9578  1A00  303F               	movlw	63
  9579  1A01  160A  158A  2115  160A  158A  	fcall	_Lcd_Cmd
  9580                           
  9581                           ;LCD.c: 48:     _delay((unsigned long)((10)*(8000000/4000.0)));
  9582  1A06  301A               	movlw	26
  9583  1A07  00F5               	movwf	??_Lcd_Init+1
  9584  1A08  30F8               	movlw	248
  9585  1A09  00F4               	movwf	??_Lcd_Init
  9586  1A0A                     u5927:
  9587  1A0A  0BF4               	decfsz	??_Lcd_Init,f
  9588  1A0B  2A0A               	goto	u5927
  9589  1A0C  0BF5               	decfsz	??_Lcd_Init+1,f
  9590  1A0D  2A0A               	goto	u5927
  9591  1A0E  0000               	nop
  9592  1A0F                     l3218:
  9593                           
  9594                           ;LCD.c: 49:     Lcd_Cmd(0x3F);
  9595  1A0F  303F               	movlw	63
  9596  1A10  160A  158A  2115  160A  158A  	fcall	_Lcd_Cmd
  9597  1A15                     l3220:
  9598                           
  9599                           ;LCD.c: 50:     _delay((unsigned long)((200)*(8000000/4000000.0)));
  9600  1A15  3085               	movlw	133
  9601  1A16  00F4               	movwf	??_Lcd_Init
  9602  1A17                     u5937:
  9603  1A17  0BF4               	decfsz	??_Lcd_Init,f
  9604  1A18  2A17               	goto	u5937
  9605                           
  9606                           ;LCD.c: 51:     Lcd_Cmd(0x3F);
  9607  1A19  303F               	movlw	63
  9608  1A1A  160A  158A  2115  160A  158A  	fcall	_Lcd_Cmd
  9609                           
  9610                           ;LCD.c: 53:     Lcd_Cmd(0x38);
  9611  1A1F  3038               	movlw	56
  9612  1A20  160A  158A  2115  160A  158A  	fcall	_Lcd_Cmd
  9613                           
  9614                           ;LCD.c: 54:     Lcd_Cmd(0x0C);
  9615  1A25  300C               	movlw	12
  9616  1A26  160A  158A  2115  160A  158A  	fcall	_Lcd_Cmd
  9617                           
  9618                           ;LCD.c: 55:     Lcd_Cmd(0x06);
  9619  1A2B  3006               	movlw	6
  9620  1A2C  160A  158A  2115  160A  158A  	fcall	_Lcd_Cmd
  9621  1A31                     l24:
  9622  1A31  0008               	return
  9623  1A32                     __end_of_Lcd_Init:
  9624                           
  9625                           	psect	text32
  9626  18B7                     __ptext32:	
  9627 ;; *************** function _Lcd_Clear *****************
  9628 ;; Defined at:
  9629 ;;		line 28 in file "LCD.c"
  9630 ;; Parameters:    Size  Location     Type
  9631 ;;		None
  9632 ;; Auto vars:     Size  Location     Type
  9633 ;;		None
  9634 ;; Return value:  Size  Location     Type
  9635 ;;                  1    wreg      void 
  9636 ;; Registers used:
  9637 ;;		wreg, status,2, status,0, pclath, cstack
  9638 ;; Tracked objects:
  9639 ;;		On entry : 0/0
  9640 ;;		On exit  : 0/0
  9641 ;;		Unchanged: 0/0
  9642 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9643 ;;      Params:         0       0       0       0       0
  9644 ;;      Locals:         0       0       0       0       0
  9645 ;;      Temps:          0       0       0       0       0
  9646 ;;      Totals:         0       0       0       0       0
  9647 ;;Total ram usage:        0 bytes
  9648 ;; Hardware stack levels used:    1
  9649 ;; Hardware stack levels required when called:    2
  9650 ;; This function calls:
  9651 ;;		_Lcd_Cmd
  9652 ;; This function is called by:
  9653 ;;		_main
  9654 ;; This function uses a non-reentrant model
  9655 ;;
  9656                           
  9657                           
  9658                           ;psect for function _Lcd_Clear
  9659  18B7                     _Lcd_Clear:
  9660  18B7                     l3198:	
  9661                           ;incstack = 0
  9662                           ; Regs used in _Lcd_Clear: [wreg+status,2+status,0+pclath+cstack]
  9663                           
  9664                           
  9665                           ;LCD.c: 29:     Lcd_Cmd(0);
  9666  18B7  3000               	movlw	0
  9667  18B8  160A  158A  2115  160A  158A  	fcall	_Lcd_Cmd
  9668                           
  9669                           ;LCD.c: 30:     Lcd_Cmd(1);
  9670  18BD  3001               	movlw	1
  9671  18BE  160A  158A  2115  160A  158A  	fcall	_Lcd_Cmd
  9672  18C3                     l15:
  9673  18C3  0008               	return
  9674  18C4                     __end_of_Lcd_Clear:
  9675                           
  9676                           	psect	text33
  9677  1915                     __ptext33:	
  9678 ;; *************** function _Lcd_Cmd *****************
  9679 ;; Defined at:
  9680 ;;		line 20 in file "LCD.c"
  9681 ;; Parameters:    Size  Location     Type
  9682 ;;  a               1    wreg     unsigned char 
  9683 ;; Auto vars:     Size  Location     Type
  9684 ;;  a               1    3[COMMON] unsigned char 
  9685 ;; Return value:  Size  Location     Type
  9686 ;;                  1    wreg      void 
  9687 ;; Registers used:
  9688 ;;		wreg, status,2, status,0, pclath, cstack
  9689 ;; Tracked objects:
  9690 ;;		On entry : 0/0
  9691 ;;		On exit  : 0/0
  9692 ;;		Unchanged: 0/0
  9693 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9694 ;;      Params:         0       0       0       0       0
  9695 ;;      Locals:         1       0       0       0       0
  9696 ;;      Temps:          2       0       0       0       0
  9697 ;;      Totals:         3       0       0       0       0
  9698 ;;Total ram usage:        3 bytes
  9699 ;; Hardware stack levels used:    1
  9700 ;; Hardware stack levels required when called:    1
  9701 ;; This function calls:
  9702 ;;		_Lcd_Port
  9703 ;; This function is called by:
  9704 ;;		_Lcd_Clear
  9705 ;;		_Lcd_Set_Cursor
  9706 ;;		_Lcd_Init
  9707 ;; This function uses a non-reentrant model
  9708 ;;
  9709                           
  9710                           
  9711                           ;psect for function _Lcd_Cmd
  9712  1915                     _Lcd_Cmd:
  9713                           
  9714                           ;incstack = 0
  9715                           ; Regs used in _Lcd_Cmd: [wreg+status,2+status,0+pclath+cstack]
  9716                           ;Lcd_Cmd@a stored from wreg
  9717  1915  00F3               	movwf	Lcd_Cmd@a
  9718  1916                     l2816:
  9719                           
  9720                           ;LCD.c: 21:     PORTEbits.RE0 = 0;
  9721  1916  1283               	bcf	3,5	;RP0=0, select bank0
  9722  1917  1303               	bcf	3,6	;RP1=0, select bank0
  9723  1918  1009               	bcf	9,0	;volatile
  9724  1919                     l2818:
  9725                           
  9726                           ;LCD.c: 22:     Lcd_Port(a);
  9727  1919  0873               	movf	Lcd_Cmd@a,w
  9728  191A  160A  158A  2095  160A  158A  	fcall	_Lcd_Port
  9729  191F                     l2820:
  9730                           
  9731                           ;LCD.c: 23:     PORTEbits.RE1 = 1;
  9732  191F  1283               	bcf	3,5	;RP0=0, select bank0
  9733  1920  1303               	bcf	3,6	;RP1=0, select bank0
  9734  1921  1489               	bsf	9,1	;volatile
  9735  1922                     l2822:
  9736                           
  9737                           ;LCD.c: 24:     _delay((unsigned long)((4)*(8000000/4000.0)));
  9738  1922  300B               	movlw	11
  9739  1923  00F2               	movwf	??_Lcd_Cmd+1
  9740  1924  3062               	movlw	98
  9741  1925  00F1               	movwf	??_Lcd_Cmd
  9742  1926                     u5947:
  9743  1926  0BF1               	decfsz	??_Lcd_Cmd,f
  9744  1927  2926               	goto	u5947
  9745  1928  0BF2               	decfsz	??_Lcd_Cmd+1,f
  9746  1929  2926               	goto	u5947
  9747  192A  0000               	nop
  9748  192B                     l2824:
  9749                           
  9750                           ;LCD.c: 25:     PORTEbits.RE1 = 0;
  9751  192B  1283               	bcf	3,5	;RP0=0, select bank0
  9752  192C  1303               	bcf	3,6	;RP1=0, select bank0
  9753  192D  1089               	bcf	9,1	;volatile
  9754  192E                     l12:
  9755  192E  0008               	return
  9756  192F                     __end_of_Lcd_Cmd:
  9757                           
  9758                           	psect	text34
  9759  1895                     __ptext34:	
  9760 ;; *************** function _Lcd_Port *****************
  9761 ;; Defined at:
  9762 ;;		line 16 in file "LCD.c"
  9763 ;; Parameters:    Size  Location     Type
  9764 ;;  a               1    wreg     unsigned char 
  9765 ;; Auto vars:     Size  Location     Type
  9766 ;;  a               1    0[COMMON] unsigned char 
  9767 ;; Return value:  Size  Location     Type
  9768 ;;                  1    wreg      void 
  9769 ;; Registers used:
  9770 ;;		wreg
  9771 ;; Tracked objects:
  9772 ;;		On entry : 0/0
  9773 ;;		On exit  : 0/0
  9774 ;;		Unchanged: 0/0
  9775 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9776 ;;      Params:         0       0       0       0       0
  9777 ;;      Locals:         1       0       0       0       0
  9778 ;;      Temps:          0       0       0       0       0
  9779 ;;      Totals:         1       0       0       0       0
  9780 ;;Total ram usage:        1 bytes
  9781 ;; Hardware stack levels used:    1
  9782 ;; This function calls:
  9783 ;;		Nothing
  9784 ;; This function is called by:
  9785 ;;		_Lcd_Cmd
  9786 ;;		_Lcd_Init
  9787 ;;		_Lcd_Write_Char
  9788 ;; This function uses a non-reentrant model
  9789 ;;
  9790                           
  9791                           
  9792                           ;psect for function _Lcd_Port
  9793  1895                     _Lcd_Port:
  9794                           
  9795                           ;incstack = 0
  9796                           ; Regs used in _Lcd_Port: [wreg]
  9797                           ;Lcd_Port@a stored from wreg
  9798  1895  00F0               	movwf	Lcd_Port@a
  9799  1896                     l2350:
  9800                           
  9801                           ;LCD.c: 17:     PORTB = a;
  9802  1896  0870               	movf	Lcd_Port@a,w
  9803  1897  1283               	bcf	3,5	;RP0=0, select bank0
  9804  1898  1303               	bcf	3,6	;RP1=0, select bank0
  9805  1899  0086               	movwf	6	;volatile
  9806  189A                     l9:
  9807  189A  0008               	return
  9808  189B                     __end_of_Lcd_Port:
  9809                           
  9810                           	psect	text35
  9811  18EA                     __ptext35:	
  9812 ;; *************** function _INIT_UART *****************
  9813 ;; Defined at:
  9814 ;;		line 10 in file "UART.c"
  9815 ;; Parameters:    Size  Location     Type
  9816 ;;		None
  9817 ;; Auto vars:     Size  Location     Type
  9818 ;;		None
  9819 ;; Return value:  Size  Location     Type
  9820 ;;                  1    wreg      void 
  9821 ;; Registers used:
  9822 ;;		wreg
  9823 ;; Tracked objects:
  9824 ;;		On entry : 0/0
  9825 ;;		On exit  : 0/0
  9826 ;;		Unchanged: 0/0
  9827 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9828 ;;      Params:         0       0       0       0       0
  9829 ;;      Locals:         0       0       0       0       0
  9830 ;;      Temps:          0       0       0       0       0
  9831 ;;      Totals:         0       0       0       0       0
  9832 ;;Total ram usage:        0 bytes
  9833 ;; Hardware stack levels used:    1
  9834 ;; This function calls:
  9835 ;;		Nothing
  9836 ;; This function is called by:
  9837 ;;		_main
  9838 ;; This function uses a non-reentrant model
  9839 ;;
  9840                           
  9841                           
  9842                           ;psect for function _INIT_UART
  9843  18EA                     _INIT_UART:
  9844  18EA                     l3254:	
  9845                           ;incstack = 0
  9846                           ; Regs used in _INIT_UART: [wreg]
  9847                           
  9848                           
  9849                           ;UART.c: 11:     TRISCbits.TRISC7=1 ;
  9850  18EA  1683               	bsf	3,5	;RP0=1, select bank1
  9851  18EB  1303               	bcf	3,6	;RP1=0, select bank1
  9852  18EC  1787               	bsf	7,7	;volatile
  9853                           
  9854                           ;UART.c: 12:     TXSTAbits.SYNC = 0;
  9855  18ED  1218               	bcf	24,4	;volatile
  9856                           
  9857                           ;UART.c: 13:     RCSTAbits.SPEN = 1;
  9858  18EE  1283               	bcf	3,5	;RP0=0, select bank0
  9859  18EF  1303               	bcf	3,6	;RP1=0, select bank0
  9860  18F0  1798               	bsf	24,7	;volatile
  9861                           
  9862                           ;UART.c: 14:     PIE1bits.RCIE = 1;
  9863  18F1  1683               	bsf	3,5	;RP0=1, select bank1
  9864  18F2  1303               	bcf	3,6	;RP1=0, select bank1
  9865  18F3  168C               	bsf	12,5	;volatile
  9866                           
  9867                           ;UART.c: 15:     INTCONbits.GIE = 1;
  9868  18F4  178B               	bsf	11,7	;volatile
  9869                           
  9870                           ;UART.c: 16:     TXSTAbits.BRGH = 0;
  9871  18F5  1118               	bcf	24,2	;volatile
  9872                           
  9873                           ;UART.c: 17:     BAUDCTLbits.BRG16 = 1;
  9874  18F6  1683               	bsf	3,5	;RP0=1, select bank3
  9875  18F7  1703               	bsf	3,6	;RP1=1, select bank3
  9876  18F8  1587               	bsf	7,3	;volatile
  9877                           
  9878                           ;UART.c: 18:     TXSTAbits.TXEN = 1;
  9879  18F9  1683               	bsf	3,5	;RP0=1, select bank1
  9880  18FA  1303               	bcf	3,6	;RP1=0, select bank1
  9881  18FB  1698               	bsf	24,5	;volatile
  9882  18FC                     l3256:
  9883                           
  9884                           ;UART.c: 19:     SPBRG = 25;
  9885  18FC  3019               	movlw	25
  9886  18FD  0099               	movwf	25	;volatile
  9887  18FE                     l135:
  9888  18FE  0008               	return
  9889  18FF                     __end_of_INIT_UART:
  9890  007E                     btemp	set	126	;btemp
  9891  007E                     wtemp0	set	126
  9892                           
  9893                           	psect	config
  9894                           
  9895                           ;Config register CONFIG1 @ 0x2007
  9896                           ;	Oscillator Selection bits
  9897                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  9898                           ;	Watchdog Timer Enable bit
  9899                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  9900                           ;	Power-up Timer Enable bit
  9901                           ;	PWRTE = OFF, PWRT disabled
  9902                           ;	RE3/MCLR pin function select bit
  9903                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  9904                           ;	Code Protection bit
  9905                           ;	CP = OFF, Program memory code protection is disabled
  9906                           ;	Data Code Protection bit
  9907                           ;	CPD = OFF, Data memory code protection is disabled
  9908                           ;	Brown Out Reset Selection bits
  9909                           ;	BOREN = OFF, BOR disabled
  9910                           ;	Internal External Switchover bit
  9911                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  9912                           ;	Fail-Safe Clock Monitor Enabled bit
  9913                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  9914                           ;	Low Voltage Programming Enable bit
  9915                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  9916                           ;	In-Circuit Debugger Mode bit
  9917                           ;	DEBUG = 0x1, unprogrammed default
  9918  2007                     	org	8199
  9919  2007  20D5               	dw	8405
  9920                           
  9921                           ;Config register CONFIG2 @ 0x2008
  9922                           ;	Brown-out Reset Selection bit
  9923                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  9924                           ;	Flash Program Memory Self Write Enable bits
  9925                           ;	WRT = OFF, Write protection off
  9926  2008                     	org	8200
  9927  2008  3FFF               	dw	16383
  9928                           
  9929                           	psect	text2_split_1
  9930  01BA                     u5370:
  9931  01BA                     l3364:
  9932  01BA  1683               	bsf	3,5	;RP0=1, select bank1
  9933  01BB  1303               	bcf	3,6	;RP1=0, select bank1
  9934  01BC  0842               	movf	(sprintf@fval+3)^(0+128),w
  9935  01BD  00F3               	movwf	___fleq@ff1+3
  9936  01BE  0841               	movf	(sprintf@fval+2)^(0+128),w
  9937  01BF  00F2               	movwf	___fleq@ff1+2
  9938  01C0  0840               	movf	(sprintf@fval+1)^(0+128),w
  9939  01C1  00F1               	movwf	___fleq@ff1+1
  9940  01C2  083F               	movf	sprintf@fval^(0+128),w
  9941  01C3  00F0               	movwf	___fleq@ff1
  9942  01C4  3000               	movlw	0
  9943  01C5  00F7               	movwf	___fleq@ff2+3
  9944  01C6  3000               	movlw	0
  9945  01C7  00F6               	movwf	___fleq@ff2+2
  9946  01C8  3000               	movlw	0
  9947  01C9  00F5               	movwf	___fleq@ff2+1
  9948  01CA  3000               	movlw	0
  9949  01CB  00F4               	movwf	___fleq@ff2
  9950  01CC  160A  158A  22B8  120A  118A  	fcall	___fleq
  9951  01D1  1803               	btfsc	3,0
  9952  01D2  29D4               	goto	u5381
  9953  01D3  29D5               	goto	u5380
  9954  01D4                     u5381:
  9955  01D4  2A7D               	goto	l3384
  9956  01D5                     u5380:
  9957  01D5                     l3366:
  9958  01D5  1683               	bsf	3,5	;RP0=1, select bank1
  9959  01D6  1303               	bcf	3,6	;RP1=0, select bank1
  9960  01D7  0842               	movf	(sprintf@fval+3)^(0+128),w
  9961  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  9962  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  9963  01DA  00D4               	movwf	___fltol@f1+3
  9964  01DB  1683               	bsf	3,5	;RP0=1, select bank1
  9965  01DC  1303               	bcf	3,6	;RP1=0, select bank1
  9966  01DD  0841               	movf	(sprintf@fval+2)^(0+128),w
  9967  01DE  1283               	bcf	3,5	;RP0=0, select bank0
  9968  01DF  1303               	bcf	3,6	;RP1=0, select bank0
  9969  01E0  00D3               	movwf	___fltol@f1+2
  9970  01E1  1683               	bsf	3,5	;RP0=1, select bank1
  9971  01E2  1303               	bcf	3,6	;RP1=0, select bank1
  9972  01E3  0840               	movf	(sprintf@fval+1)^(0+128),w
  9973  01E4  1283               	bcf	3,5	;RP0=0, select bank0
  9974  01E5  1303               	bcf	3,6	;RP1=0, select bank0
  9975  01E6  00D2               	movwf	___fltol@f1+1
  9976  01E7  1683               	bsf	3,5	;RP0=1, select bank1
  9977  01E8  1303               	bcf	3,6	;RP1=0, select bank1
  9978  01E9  083F               	movf	sprintf@fval^(0+128),w
  9979  01EA  1283               	bcf	3,5	;RP0=0, select bank0
  9980  01EB  1303               	bcf	3,6	;RP1=0, select bank0
  9981  01EC  00D1               	movwf	___fltol@f1
  9982  01ED  120A  158A  2007  120A  118A  	fcall	___fltol
  9983  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  9984  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  9985  01F4  0854               	movf	?___fltol+3,w
  9986  01F5  0453               	iorwf	?___fltol+2,w
  9987  01F6  0452               	iorwf	?___fltol+1,w
  9988  01F7  0451               	iorwf	?___fltol,w
  9989  01F8  1D03               	skipz
  9990  01F9  29FB               	goto	u5391
  9991  01FA  29FC               	goto	u5390
  9992  01FB                     u5391:
  9993  01FB  2A7D               	goto	l3384
  9994  01FC                     u5390:
  9995  01FC                     l3368:
  9996  01FC  1683               	bsf	3,5	;RP0=1, select bank1
  9997  01FD  1303               	bcf	3,6	;RP1=0, select bank1
  9998  01FE  083E               	movf	(sprintf@eexp+1)^(0+128),w
  9999  01FF  3A80               	xorlw	128
 10000  0200  00FF               	movwf	btemp+1
 10001  0201  3080               	movlw	128
 10002  0202  027F               	subwf	btemp+1,w
 10003  0203  1D03               	skipz
 10004  0204  2A07               	goto	u5405
 10005  0205  3002               	movlw	2
 10006  0206  023D               	subwf	sprintf@eexp^(0+128),w
 10007  0207                     u5405:
 10008  0207  1C03               	skipc
 10009  0208  2A0A               	goto	u5401
 10010  0209  2A0B               	goto	u5400
 10011  020A                     u5401:
 10012  020A  2A7D               	goto	l3384
 10013  020B                     u5400:
 10014  020B                     l3370:
 10015                           
 10016                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1146:      if(tmp
      +                          val.integ < 4.294967296){
 10017  020B  1683               	bsf	3,5	;RP0=1, select bank1
 10018  020C  1303               	bcf	3,6	;RP1=0, select bank1
 10019  020D  0838               	movf	(sprintf@tmpval+3)^(0+128),w
 10020  020E  00F3               	movwf	___flge@ff1+3
 10021  020F  0837               	movf	(sprintf@tmpval+2)^(0+128),w
 10022  0210  00F2               	movwf	___flge@ff1+2
 10023  0211  0836               	movf	(sprintf@tmpval+1)^(0+128),w
 10024  0212  00F1               	movwf	___flge@ff1+1
 10025  0213  0835               	movf	sprintf@tmpval^(0+128),w
 10026  0214  00F0               	movwf	___flge@ff1
 10027  0215  3040               	movlw	64
 10028  0216  00F7               	movwf	___flge@ff2+3
 10029  0217  3089               	movlw	137
 10030  0218  00F6               	movwf	___flge@ff2+2
 10031  0219  3070               	movlw	112
 10032  021A  00F5               	movwf	___flge@ff2+1
 10033  021B  305F               	movlw	95
 10034  021C  00F4               	movwf	___flge@ff2
 10035  021D  160A  158A  2499  120A  118A  	fcall	___flge
 10036  0222  1803               	btfsc	3,0
 10037  0223  2A25               	goto	u5411
 10038  0224  2A26               	goto	u5410
 10039  0225                     u5411:
 10040  0225  2A2F               	goto	l3374
 10041  0226                     u5410:
 10042  0226                     l3372:
 10043                           
 10044                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1147:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-1;
 10045  0226  30F7               	movlw	247
 10046  0227  1683               	bsf	3,5	;RP0=1, select bank1
 10047  0228  1303               	bcf	3,6	;RP1=0, select bank1
 10048  0229  07BD               	addwf	sprintf@eexp^(0+128),f
 10049  022A  1803               	skipnc
 10050  022B  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
 10051  022C  30FF               	movlw	255
 10052  022D  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
 10053                           
 10054                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1148:      }else{
 10055  022E  2A37               	goto	l3376
 10056  022F                     l3374:
 10057                           
 10058                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1149:       eexp 
      +                          -= (sizeof dpowers/sizeof dpowers[0])-2;
 10059  022F  30F8               	movlw	248
 10060  0230  1683               	bsf	3,5	;RP0=1, select bank1
 10061  0231  1303               	bcf	3,6	;RP1=0, select bank1
 10062  0232  07BD               	addwf	sprintf@eexp^(0+128),f
 10063  0233  1803               	skipnc
 10064  0234  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
 10065  0235  30FF               	movlw	255
 10066  0236  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
 10067  0237                     l3376:
 10068                           
 10069                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1152:      val = 
      +                          ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_l_(fval,tmpval.integ));
 10070  0237  083D               	movf	sprintf@eexp^(0+128),w
 10071  0238  120A  158A  2140  120A  118A  	fcall	_scale
 10072  023D  1283               	bcf	3,5	;RP0=0, select bank0
 10073  023E  1303               	bcf	3,6	;RP1=0, select bank0
 10074  023F  0841               	movf	?_scale+3,w
 10075  0240  1683               	bsf	3,5	;RP0=1, select bank1
 10076  0241  1303               	bcf	3,6	;RP1=0, select bank1
 10077  0242  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
 10078  0243  1283               	bcf	3,5	;RP0=0, select bank0
 10079  0244  1303               	bcf	3,6	;RP1=0, select bank0
 10080  0245  0840               	movf	?_scale+2,w
 10081  0246  1683               	bsf	3,5	;RP0=1, select bank1
 10082  0247  1303               	bcf	3,6	;RP1=0, select bank1
 10083  0248  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
 10084  0249  1283               	bcf	3,5	;RP0=0, select bank0
 10085  024A  1303               	bcf	3,6	;RP1=0, select bank0
 10086  024B  083F               	movf	?_scale+1,w
 10087  024C  1683               	bsf	3,5	;RP0=1, select bank1
 10088  024D  1303               	bcf	3,6	;RP1=0, select bank1
 10089  024E  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
 10090  024F  1283               	bcf	3,5	;RP0=0, select bank0
 10091  0250  1303               	bcf	3,6	;RP1=0, select bank0
 10092  0251  083E               	movf	?_scale,w
 10093  0252  1683               	bsf	3,5	;RP0=1, select bank1
 10094  0253  1303               	bcf	3,6	;RP1=0, select bank1
 10095  0254  00B5               	movwf	sprintf@tmpval^(0+128)
 10096  0255                     l3378:
 10097  0255  0842               	movf	(sprintf@fval+3)^(0+128),w
 10098  0256  00F3               	movwf	__div_to_l_@f1+3
 10099  0257  0841               	movf	(sprintf@fval+2)^(0+128),w
 10100  0258  00F2               	movwf	__div_to_l_@f1+2
 10101  0259  0840               	movf	(sprintf@fval+1)^(0+128),w
 10102  025A  00F1               	movwf	__div_to_l_@f1+1
 10103  025B  083F               	movf	sprintf@fval^(0+128),w
 10104  025C  00F0               	movwf	__div_to_l_@f1
 10105  025D  0838               	movf	(sprintf@tmpval+3)^(0+128),w
 10106  025E  00F7               	movwf	__div_to_l_@f2+3
 10107  025F  0837               	movf	(sprintf@tmpval+2)^(0+128),w
 10108  0260  00F6               	movwf	__div_to_l_@f2+2
 10109  0261  0836               	movf	(sprintf@tmpval+1)^(0+128),w
 10110  0262  00F5               	movwf	__div_to_l_@f2+1
 10111  0263  0835               	movf	sprintf@tmpval^(0+128),w
 10112  0264  00F4               	movwf	__div_to_l_@f2
 10113  0265  120A  118A  20FC  120A  118A  	fcall	__div_to_l_
 10114  026A  0873               	movf	?__div_to_l_+3,w
 10115  026B  1683               	bsf	3,5	;RP0=1, select bank1
 10116  026C  1303               	bcf	3,6	;RP1=0, select bank1
 10117  026D  00BC               	movwf	(sprintf@val+3)^(0+128)
 10118  026E  0872               	movf	?__div_to_l_+2,w
 10119  026F  00BB               	movwf	(sprintf@val+2)^(0+128)
 10120  0270  0871               	movf	?__div_to_l_+1,w
 10121  0271  00BA               	movwf	(sprintf@val+1)^(0+128)
 10122  0272  0870               	movf	?__div_to_l_,w
 10123  0273  00B9               	movwf	sprintf@val^(0+128)
 10124  0274                     l3382:
 10125                           
 10126                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1155:      fval =
      +                           0.0;
 10127  0274  3000               	movlw	0
 10128  0275  00C2               	movwf	(sprintf@fval+3)^(0+128)
 10129  0276  3000               	movlw	0
 10130  0277  00C1               	movwf	(sprintf@fval+2)^(0+128)
 10131  0278  3000               	movlw	0
 10132  0279  00C0               	movwf	(sprintf@fval+1)^(0+128)
 10133  027A  3000               	movlw	0
 10134  027B  00BF               	movwf	sprintf@fval^(0+128)
 10135                           
 10136                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1156:     } else 
      +                          {
 10137  027C  2B01               	goto	l3390
 10138  027D                     l3384:
 10139                           
 10140                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1157:      val = 
      +                          (unsigned long)fval;
 10141  027D  1683               	bsf	3,5	;RP0=1, select bank1
 10142  027E  1303               	bcf	3,6	;RP1=0, select bank1
 10143  027F  0842               	movf	(sprintf@fval+3)^(0+128),w
 10144  0280  1283               	bcf	3,5	;RP0=0, select bank0
 10145  0281  1303               	bcf	3,6	;RP1=0, select bank0
 10146  0282  00D4               	movwf	___fltol@f1+3
 10147  0283  1683               	bsf	3,5	;RP0=1, select bank1
 10148  0284  1303               	bcf	3,6	;RP1=0, select bank1
 10149  0285  0841               	movf	(sprintf@fval+2)^(0+128),w
 10150  0286  1283               	bcf	3,5	;RP0=0, select bank0
 10151  0287  1303               	bcf	3,6	;RP1=0, select bank0
 10152  0288  00D3               	movwf	___fltol@f1+2
 10153  0289  1683               	bsf	3,5	;RP0=1, select bank1
 10154  028A  1303               	bcf	3,6	;RP1=0, select bank1
 10155  028B  0840               	movf	(sprintf@fval+1)^(0+128),w
 10156  028C  1283               	bcf	3,5	;RP0=0, select bank0
 10157  028D  1303               	bcf	3,6	;RP1=0, select bank0
 10158  028E  00D2               	movwf	___fltol@f1+1
 10159  028F  1683               	bsf	3,5	;RP0=1, select bank1
 10160  0290  1303               	bcf	3,6	;RP1=0, select bank1
 10161  0291  083F               	movf	sprintf@fval^(0+128),w
 10162  0292  1283               	bcf	3,5	;RP0=0, select bank0
 10163  0293  1303               	bcf	3,6	;RP1=0, select bank0
 10164  0294  00D1               	movwf	___fltol@f1
 10165  0295  120A  158A  2007  120A  118A  	fcall	___fltol
 10166  029A  1283               	bcf	3,5	;RP0=0, select bank0
 10167  029B  1303               	bcf	3,6	;RP1=0, select bank0
 10168  029C  0854               	movf	?___fltol+3,w
 10169  029D  1683               	bsf	3,5	;RP0=1, select bank1
 10170  029E  1303               	bcf	3,6	;RP1=0, select bank1
 10171  029F  00BC               	movwf	(sprintf@val+3)^(0+128)
 10172  02A0  1283               	bcf	3,5	;RP0=0, select bank0
 10173  02A1  1303               	bcf	3,6	;RP1=0, select bank0
 10174  02A2  0853               	movf	?___fltol+2,w
 10175  02A3  1683               	bsf	3,5	;RP0=1, select bank1
 10176  02A4  1303               	bcf	3,6	;RP1=0, select bank1
 10177  02A5  00BB               	movwf	(sprintf@val+2)^(0+128)
 10178  02A6  1283               	bcf	3,5	;RP0=0, select bank0
 10179  02A7  1303               	bcf	3,6	;RP1=0, select bank0
 10180  02A8  0852               	movf	?___fltol+1,w
 10181  02A9  1683               	bsf	3,5	;RP0=1, select bank1
 10182  02AA  1303               	bcf	3,6	;RP1=0, select bank1
 10183  02AB  00BA               	movwf	(sprintf@val+1)^(0+128)
 10184  02AC  1283               	bcf	3,5	;RP0=0, select bank0
 10185  02AD  1303               	bcf	3,6	;RP1=0, select bank0
 10186  02AE  0851               	movf	?___fltol,w
 10187  02AF  1683               	bsf	3,5	;RP0=1, select bank1
 10188  02B0  1303               	bcf	3,6	;RP1=0, select bank1
 10189  02B1  00B9               	movwf	sprintf@val^(0+128)
 10190  02B2                     l3386:
 10191                           
 10192                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1158:      fval -
      +                          = (double)val;
 10193  02B2  083C               	movf	(sprintf@val+3)^(0+128),w
 10194  02B3  00F3               	movwf	___xxtofl@val+3
 10195  02B4  083B               	movf	(sprintf@val+2)^(0+128),w
 10196  02B5  00F2               	movwf	___xxtofl@val+2
 10197  02B6  083A               	movf	(sprintf@val+1)^(0+128),w
 10198  02B7  00F1               	movwf	___xxtofl@val+1
 10199  02B8  0839               	movf	sprintf@val^(0+128),w
 10200  02B9  00F0               	movwf	___xxtofl@val
 10201  02BA  3000               	movlw	0
 10202  02BB  160A  158A  253B  120A  118A  	fcall	___xxtofl
 10203  02C0  0873               	movf	?___xxtofl+3,w
 10204  02C1  1283               	bcf	3,5	;RP0=0, select bank0
 10205  02C2  1303               	bcf	3,6	;RP1=0, select bank0
 10206  02C3  00E9               	movwf	___flsub@a+3
 10207  02C4  0872               	movf	?___xxtofl+2,w
 10208  02C5  00E8               	movwf	___flsub@a+2
 10209  02C6  0871               	movf	?___xxtofl+1,w
 10210  02C7  00E7               	movwf	___flsub@a+1
 10211  02C8  0870               	movf	?___xxtofl,w
 10212  02C9  00E6               	movwf	___flsub@a
 10213  02CA  1683               	bsf	3,5	;RP0=1, select bank1
 10214  02CB  1303               	bcf	3,6	;RP1=0, select bank1
 10215  02CC  0842               	movf	(sprintf@fval+3)^(0+128),w
 10216  02CD  1283               	bcf	3,5	;RP0=0, select bank0
 10217  02CE  1303               	bcf	3,6	;RP1=0, select bank0
 10218  02CF  00ED               	movwf	___flsub@b+3
 10219  02D0  1683               	bsf	3,5	;RP0=1, select bank1
 10220  02D1  1303               	bcf	3,6	;RP1=0, select bank1
 10221  02D2  0841               	movf	(sprintf@fval+2)^(0+128),w
 10222  02D3  1283               	bcf	3,5	;RP0=0, select bank0
 10223  02D4  1303               	bcf	3,6	;RP1=0, select bank0
 10224  02D5  00EC               	movwf	___flsub@b+2
 10225  02D6  1683               	bsf	3,5	;RP0=1, select bank1
 10226  02D7  1303               	bcf	3,6	;RP1=0, select bank1
 10227  02D8  0840               	movf	(sprintf@fval+1)^(0+128),w
 10228  02D9  1283               	bcf	3,5	;RP0=0, select bank0
 10229  02DA  1303               	bcf	3,6	;RP1=0, select bank0
 10230  02DB  00EB               	movwf	___flsub@b+1
 10231  02DC  1683               	bsf	3,5	;RP0=1, select bank1
 10232  02DD  1303               	bcf	3,6	;RP1=0, select bank1
 10233  02DE  083F               	movf	sprintf@fval^(0+128),w
 10234  02DF  1283               	bcf	3,5	;RP0=0, select bank0
 10235  02E0  1303               	bcf	3,6	;RP1=0, select bank0
 10236  02E1  00EA               	movwf	___flsub@b
 10237  02E2  160A  158A  216E  120A  118A  	fcall	___flsub
 10238  02E7  1283               	bcf	3,5	;RP0=0, select bank0
 10239  02E8  1303               	bcf	3,6	;RP1=0, select bank0
 10240  02E9  0869               	movf	?___flsub+3,w
 10241  02EA  1683               	bsf	3,5	;RP0=1, select bank1
 10242  02EB  1303               	bcf	3,6	;RP1=0, select bank1
 10243  02EC  00C2               	movwf	(sprintf@fval+3)^(0+128)
 10244  02ED  1283               	bcf	3,5	;RP0=0, select bank0
 10245  02EE  1303               	bcf	3,6	;RP1=0, select bank0
 10246  02EF  0868               	movf	?___flsub+2,w
 10247  02F0  1683               	bsf	3,5	;RP0=1, select bank1
 10248  02F1  1303               	bcf	3,6	;RP1=0, select bank1
 10249  02F2  00C1               	movwf	(sprintf@fval+2)^(0+128)
 10250  02F3  1283               	bcf	3,5	;RP0=0, select bank0
 10251  02F4  1303               	bcf	3,6	;RP1=0, select bank0
 10252  02F5  0867               	movf	?___flsub+1,w
 10253  02F6  1683               	bsf	3,5	;RP0=1, select bank1
 10254  02F7  1303               	bcf	3,6	;RP1=0, select bank1
 10255  02F8  00C0               	movwf	(sprintf@fval+1)^(0+128)
 10256  02F9  1283               	bcf	3,5	;RP0=0, select bank0
 10257  02FA  1303               	bcf	3,6	;RP1=0, select bank0
 10258  02FB  0866               	movf	?___flsub,w
 10259  02FC  1683               	bsf	3,5	;RP0=1, select bank1
 10260  02FD  1303               	bcf	3,6	;RP1=0, select bank1
 10261  02FE  00BF               	movwf	sprintf@fval^(0+128)
 10262  02FF                     l3388:
 10263                           
 10264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1159:      eexp =
      +                           0;
 10265  02FF  01BD               	clrf	sprintf@eexp^(0+128)
 10266  0300  01BE               	clrf	(sprintf@eexp+1)^(0+128)
 10267  0301                     l3390:
 10268                           
 10269                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1162:     for(c =
      +                           1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
 10270  0301  01C5               	clrf	sprintf@c^(0+128)
 10271  0302  0AC5               	incf	sprintf@c^(0+128),f
 10272  0303                     l3396:
 10273                           
 10274                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1163:      if(val
      +                           < dpowers[c])
 10275  0303  0845               	movf	sprintf@c^(0+128),w
 10276  0304  00A7               	movwf	??_sprintf^(0+128)
 10277  0305  3001               	movlw	1
 10278  0306                     u5425:
 10279  0306  1003               	clrc
 10280  0307  0DA7               	rlf	??_sprintf^(0+128),f
 10281  0308  3EFF               	addlw	-1
 10282  0309  1D03               	skipz
 10283  030A  2B06               	goto	u5425
 10284  030B  1003               	clrc
 10285  030C  0D27               	rlf	??_sprintf^(0+128),w
 10286  030D  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10287  030E  0084               	movwf	4
 10288  030F  120A  118A  200D  120A  118A  	fcall	stringdir
 10289  0314  00A8               	movwf	(??_sprintf+1)^(0+128)
 10290  0315  120A  118A  200D  120A  118A  	fcall	stringdir
 10291  031A  00A9               	movwf	((??_sprintf+1)^(0+128)+1)
 10292  031B  120A  118A  200D  120A  118A  	fcall	stringdir
 10293  0320  00AA               	movwf	((??_sprintf+1)^(0+128)+2)
 10294  0321  120A  118A  200D  120A  118A  	fcall	stringdir
 10295  0326  00AB               	movwf	((??_sprintf+1)^(0+128)+3)
 10296  0327  082B               	movf	(??_sprintf+4)^(0+128),w
 10297  0328  023C               	subwf	(sprintf@val+3)^(0+128),w
 10298  0329  1D03               	skipz
 10299  032A  2B35               	goto	u5435
 10300  032B  082A               	movf	(??_sprintf+3)^(0+128),w
 10301  032C  023B               	subwf	(sprintf@val+2)^(0+128),w
 10302  032D  1D03               	skipz
 10303  032E  2B35               	goto	u5435
 10304  032F  0829               	movf	(??_sprintf+2)^(0+128),w
 10305  0330  023A               	subwf	(sprintf@val+1)^(0+128),w
 10306  0331  1D03               	skipz
 10307  0332  2B35               	goto	u5435
 10308  0333  0828               	movf	(??_sprintf+1)^(0+128),w
 10309  0334  0239               	subwf	sprintf@val^(0+128),w
 10310  0335                     u5435:
 10311  0335  1803               	skipnc
 10312  0336  2B38               	goto	u5431
 10313  0337  2B39               	goto	u5430
 10314  0338                     u5431:
 10315  0338  2B3A               	goto	l3400
 10316  0339                     u5430:
 10317  0339  2B44               	goto	l3402
 10318  033A                     l3400:
 10319  033A  3001               	movlw	1
 10320  033B  00A7               	movwf	??_sprintf^(0+128)
 10321  033C  0827               	movf	??_sprintf^(0+128),w
 10322  033D  07C5               	addwf	sprintf@c^(0+128),f
 10323  033E  300A               	movlw	10
 10324  033F  0645               	xorwf	sprintf@c^(0+128),w
 10325  0340  1D03               	btfss	3,2
 10326  0341  2B43               	goto	u5441
 10327  0342  2B44               	goto	u5440
 10328  0343                     u5441:
 10329  0343  2B03               	goto	l3396
 10330  0344                     u5440:
 10331  0344                     l3402:
 10332                           
 10333                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1168:     width -
      +                          = prec + c + eexp;
 10334  0344  0845               	movf	sprintf@c^(0+128),w
 10335  0345  0743               	addwf	sprintf@prec^(0+128),w
 10336  0346  00A7               	movwf	??_sprintf^(0+128)
 10337  0347  0844               	movf	(sprintf@prec+1)^(0+128),w
 10338  0348  1803               	skipnc
 10339  0349  0A44               	incf	(sprintf@prec+1)^(0+128),w
 10340  034A  00A8               	movwf	(??_sprintf^(0+128)+1)
 10341  034B  083D               	movf	sprintf@eexp^(0+128),w
 10342  034C  0727               	addwf	??_sprintf^(0+128),w
 10343  034D  00A9               	movwf	(??_sprintf+2)^(0+128)
 10344  034E  083E               	movf	(sprintf@eexp+1)^(0+128),w
 10345  034F  1803               	skipnc
 10346  0350  0A3E               	incf	(sprintf@eexp+1)^(0+128),w
 10347  0351  0728               	addwf	(??_sprintf+1)^(0+128),w
 10348  0352  00AA               	movwf	(??_sprintf+3)^(0+128)
 10349  0353  0829               	movf	(??_sprintf+2)^(0+128),w
 10350  0354  02B3               	subwf	sprintf@width^(0+128),f
 10351  0355  082A               	movf	(??_sprintf+3)^(0+128),w
 10352  0356  1C03               	skipc
 10353  0357  03B4               	decf	(sprintf@width+1)^(0+128),f
 10354  0358  02B4               	subwf	(sprintf@width+1)^(0+128),f
 10355                           
 10356                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1169:     if(
 10357  0359  0843               	movf	sprintf@prec^(0+128),w
 10358  035A  0444               	iorwf	(sprintf@prec+1)^(0+128),w
 10359  035B  1903               	btfsc	3,2
 10360  035C  2B5E               	goto	u5451
 10361  035D  2B5F               	goto	u5450
 10362  035E                     u5451:
 10363  035E  2B65               	goto	l3406
 10364  035F                     u5450:
 10365  035F                     l3404:
 10366                           
 10367                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1174:      width-
      +                          -;
 10368  035F  30FF               	movlw	255
 10369  0360  07B3               	addwf	sprintf@width^(0+128),f
 10370  0361  1803               	skipnc
 10371  0362  0AB4               	incf	(sprintf@width+1)^(0+128),f
 10372  0363  30FF               	movlw	255
 10373  0364  07B4               	addwf	(sprintf@width+1)^(0+128),f
 10374  0365                     l3406:
 10375                           
 10376                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1175:     if(flag
      +                           & 0x03)
 10377  0365  3003               	movlw	3
 10378  0366  0531               	andwf	sprintf@flag^(0+128),w
 10379  0367  00A7               	movwf	??_sprintf^(0+128)
 10380  0368  3000               	movlw	0
 10381  0369  0532               	andwf	(sprintf@flag+1)^(0+128),w
 10382  036A  00A8               	movwf	(??_sprintf+1)^(0+128)
 10383  036B  0827               	movf	??_sprintf^(0+128),w
 10384  036C  0428               	iorwf	(??_sprintf^(0+128)+1),w
 10385  036D  1903               	btfsc	3,2
 10386  036E  2B70               	goto	u5461
 10387  036F  2B71               	goto	u5460
 10388  0370                     u5461:
 10389  0370  2B8A               	goto	l3416
 10390  0371                     u5460:
 10391  0371                     l3408:
 10392                           
 10393                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1176:      width-
      +                          -;
 10394  0371  30FF               	movlw	255
 10395  0372  07B3               	addwf	sprintf@width^(0+128),f
 10396  0373  1803               	skipnc
 10397  0374  0AB4               	incf	(sprintf@width+1)^(0+128),f
 10398  0375  30FF               	movlw	255
 10399  0376  07B4               	addwf	(sprintf@width+1)^(0+128),f
 10400  0377  2B8A               	goto	l3416
 10401  0378                     l3410:
 10402                           
 10403                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1207:       ((*sp
      +                          ++ = (' ')));
 10404  0378  3020               	movlw	32
 10405  0379  1683               	bsf	3,5	;RP0=1, select bank1
 10406  037A  1303               	bcf	3,6	;RP1=0, select bank1
 10407  037B  00A7               	movwf	??_sprintf^(0+128)
 10408  037C  0820               	movf	sprintf@sp^(0+128),w
 10409  037D  0084               	movwf	4
 10410  037E  1783               	bsf	3,7
 10411  037F  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10412  0380  1383               	bcf	3,7
 10413  0381  0827               	movf	??_sprintf^(0+128),w
 10414  0382  0080               	movwf	0
 10415  0383                     l3412:
 10416  0383  3001               	movlw	1
 10417  0384  07A0               	addwf	sprintf@sp^(0+128),f
 10418  0385  1803               	skipnc
 10419  0386  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 10420  0387  3000               	movlw	0
 10421  0388  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 10422  0389  2B71               	goto	l3408
 10423  038A                     l3416:
 10424                           
 10425                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1206:      while(
      +                          width > 0) {
 10426  038A  0834               	movf	(sprintf@width+1)^(0+128),w
 10427  038B  3A80               	xorlw	128
 10428  038C  00FF               	movwf	btemp+1
 10429  038D  3080               	movlw	128
 10430  038E  027F               	subwf	btemp+1,w
 10431  038F  1D03               	skipz
 10432  0390  2B93               	goto	u5475
 10433  0391  3001               	movlw	1
 10434  0392  0233               	subwf	sprintf@width^(0+128),w
 10435  0393                     u5475:
 10436  0393  1803               	skipnc
 10437  0394  2B96               	goto	u5471
 10438  0395  2B97               	goto	u5470
 10439  0396                     u5471:
 10440  0396  2B78               	goto	l3410
 10441  0397                     u5470:
 10442  0397                     l3418:
 10443                           
 10444                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1214:     if(flag
      +                           & 0x03)
 10445  0397  3003               	movlw	3
 10446  0398  1683               	bsf	3,5	;RP0=1, select bank1
 10447  0399  1303               	bcf	3,6	;RP1=0, select bank1
 10448  039A  0531               	andwf	sprintf@flag^(0+128),w
 10449  039B  00A7               	movwf	??_sprintf^(0+128)
 10450  039C  3000               	movlw	0
 10451  039D  0532               	andwf	(sprintf@flag+1)^(0+128),w
 10452  039E  00A8               	movwf	(??_sprintf+1)^(0+128)
 10453  039F  0827               	movf	??_sprintf^(0+128),w
 10454  03A0  0428               	iorwf	(??_sprintf^(0+128)+1),w
 10455  03A1  1903               	btfsc	3,2
 10456  03A2  2BA4               	goto	u5481
 10457  03A3  2BA5               	goto	u5480
 10458  03A4                     u5481:
 10459  03A4  2C3A               	goto	l3432
 10460  03A5                     u5480:
 10461  03A5                     l3420:
 10462                           
 10463                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1216:      ((*sp+
      +                          + = ('-')));
 10464  03A5  302D               	movlw	45
 10465  03A6  00A7               	movwf	??_sprintf^(0+128)
 10466  03A7  0820               	movf	sprintf@sp^(0+128),w
 10467  03A8  0084               	movwf	4
 10468  03A9  1783               	bsf	3,7
 10469  03AA  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10470  03AB  1383               	bcf	3,7
 10471  03AC  0827               	movf	??_sprintf^(0+128),w
 10472  03AD  0080               	movwf	0
 10473  03AE                     l3422:
 10474  03AE  3001               	movlw	1
 10475  03AF  07A0               	addwf	sprintf@sp^(0+128),f
 10476  03B0  1803               	skipnc
 10477  03B1  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 10478  03B2  3000               	movlw	0
 10479  03B3  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 10480  03B4  2C3A               	goto	l3432
 10481  03B5                     l3424:
 10482                           
 10483                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1226:     {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1227:      tmpval.vd = 
      +                          val/dpowers[c];
 10484  03B5  0845               	movf	sprintf@c^(0+128),w
 10485  03B6  00A7               	movwf	??_sprintf^(0+128)
 10486  03B7  3001               	movlw	1
 10487  03B8                     u5495:
 10488  03B8  1003               	clrc
 10489  03B9  0DA7               	rlf	??_sprintf^(0+128),f
 10490  03BA  3EFF               	addlw	-1
 10491  03BB  1D03               	skipz
 10492  03BC  2BB8               	goto	u5495
 10493  03BD  1003               	clrc
 10494  03BE  0D27               	rlf	??_sprintf^(0+128),w
 10495  03BF  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10496  03C0  0084               	movwf	4
 10497  03C1  120A  118A  200D  120A  118A  	fcall	stringdir
 10498  03C6  00F0               	movwf	___lldiv@divisor
 10499  03C7  120A  118A  200D  120A  118A  	fcall	stringdir
 10500  03CC  00F1               	movwf	___lldiv@divisor+1
 10501  03CD  120A  118A  200D  120A  118A  	fcall	stringdir
 10502  03D2  00F2               	movwf	___lldiv@divisor+2
 10503  03D3  120A  118A  200D  120A  118A  	fcall	stringdir
 10504  03D8  00F3               	movwf	___lldiv@divisor+3
 10505  03D9  083C               	movf	(sprintf@val+3)^(0+128),w
 10506  03DA  00F7               	movwf	___lldiv@dividend+3
 10507  03DB  083B               	movf	(sprintf@val+2)^(0+128),w
 10508  03DC  00F6               	movwf	___lldiv@dividend+2
 10509  03DD  083A               	movf	(sprintf@val+1)^(0+128),w
 10510  03DE  00F5               	movwf	___lldiv@dividend+1
 10511  03DF  0839               	movf	sprintf@val^(0+128),w
 10512  03E0  00F4               	movwf	___lldiv@dividend
 10513  03E1  160A  158A  235F  120A  118A  	fcall	___lldiv
 10514  03E6  0873               	movf	?___lldiv+3,w
 10515  03E7  1683               	bsf	3,5	;RP0=1, select bank1
 10516  03E8  1303               	bcf	3,6	;RP1=0, select bank1
 10517  03E9  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
 10518  03EA  0872               	movf	?___lldiv+2,w
 10519  03EB  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
 10520  03EC  0871               	movf	?___lldiv+1,w
 10521  03ED  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
 10522  03EE  0870               	movf	?___lldiv,w
 10523  03EF  00B5               	movwf	sprintf@tmpval^(0+128)
 10524  03F0                     l3426:
 10525                           
 10526                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1228:      tmpval
      +                          .vd %= 10;
 10527  03F0  3000               	movlw	0
 10528  03F1  1283               	bcf	3,5	;RP0=0, select bank0
 10529  03F2  1303               	bcf	3,6	;RP1=0, select bank0
 10530  03F3  00A3               	movwf	___llmod@divisor+3
 10531  03F4  3000               	movlw	0
 10532  03F5  00A2               	movwf	___llmod@divisor+2
 10533  03F6  3000               	movlw	0
 10534  03F7  00A1               	movwf	___llmod@divisor+1
 10535  03F8  300A               	movlw	10
 10536  03F9  00A0               	movwf	___llmod@divisor
 10537  03FA  1683               	bsf	3,5	;RP0=1, select bank1
 10538  03FB  1303               	bcf	3,6	;RP1=0, select bank1
 10539  03FC  0838               	movf	(sprintf@tmpval+3)^(0+128),w
 10540  03FD  1283               	bcf	3,5	;RP0=0, select bank0
 10541  03FE  1303               	bcf	3,6	;RP1=0, select bank0
 10542  03FF  00A7               	movwf	___llmod@dividend+3
 10543  0400  1683               	bsf	3,5	;RP0=1, select bank1
 10544  0401  1303               	bcf	3,6	;RP1=0, select bank1
 10545  0402  0837               	movf	(sprintf@tmpval+2)^(0+128),w
 10546  0403  1283               	bcf	3,5	;RP0=0, select bank0
 10547  0404  1303               	bcf	3,6	;RP1=0, select bank0
 10548  0405  00A6               	movwf	___llmod@dividend+2
 10549  0406  1683               	bsf	3,5	;RP0=1, select bank1
 10550  0407  1303               	bcf	3,6	;RP1=0, select bank1
 10551  0408  0836               	movf	(sprintf@tmpval+1)^(0+128),w
 10552  0409  1283               	bcf	3,5	;RP0=0, select bank0
 10553  040A  1303               	bcf	3,6	;RP1=0, select bank0
 10554  040B  00A5               	movwf	___llmod@dividend+1
 10555  040C  1683               	bsf	3,5	;RP0=1, select bank1
 10556  040D  1303               	bcf	3,6	;RP1=0, select bank1
 10557  040E  0835               	movf	sprintf@tmpval^(0+128),w
 10558  040F  1283               	bcf	3,5	;RP0=0, select bank0
 10559  0410  1303               	bcf	3,6	;RP1=0, select bank0
 10560  0411  00A4               	movwf	___llmod@dividend
 10561  0412  160A  118A  2001  120A  118A  	fcall	___llmod
 10562  0417  1283               	bcf	3,5	;RP0=0, select bank0
 10563  0418  1303               	bcf	3,6	;RP1=0, select bank0
 10564  0419  0823               	movf	?___llmod+3,w
 10565  041A  1683               	bsf	3,5	;RP0=1, select bank1
 10566  041B  1303               	bcf	3,6	;RP1=0, select bank1
 10567  041C  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
 10568  041D  1283               	bcf	3,5	;RP0=0, select bank0
 10569  041E  1303               	bcf	3,6	;RP1=0, select bank0
 10570  041F  0822               	movf	?___llmod+2,w
 10571  0420  1683               	bsf	3,5	;RP0=1, select bank1
 10572  0421  1303               	bcf	3,6	;RP1=0, select bank1
 10573  0422  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
 10574  0423  1283               	bcf	3,5	;RP0=0, select bank0
 10575  0424  1303               	bcf	3,6	;RP1=0, select bank0
 10576  0425  0821               	movf	?___llmod+1,w
 10577  0426  1683               	bsf	3,5	;RP0=1, select bank1
 10578  0427  1303               	bcf	3,6	;RP1=0, select bank1
 10579  0428  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
 10580  0429  1283               	bcf	3,5	;RP0=0, select bank0
 10581  042A  1303               	bcf	3,6	;RP1=0, select bank0
 10582  042B  0820               	movf	?___llmod,w
 10583  042C  1683               	bsf	3,5	;RP0=1, select bank1
 10584  042D  1303               	bcf	3,6	;RP1=0, select bank1
 10585  042E  00B5               	movwf	sprintf@tmpval^(0+128)
 10586  042F                     l3428:
 10587                           
 10588                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1229:      ((*sp+
      +                          + = ('0' + tmpval.vd)));
 10589  042F  0835               	movf	sprintf@tmpval^(0+128),w
 10590  0430  3E30               	addlw	48
 10591  0431  00A7               	movwf	??_sprintf^(0+128)
 10592  0432  0820               	movf	sprintf@sp^(0+128),w
 10593  0433  0084               	movwf	4
 10594  0434  1783               	bsf	3,7
 10595  0435  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10596  0436  1383               	bcf	3,7
 10597  0437  0827               	movf	??_sprintf^(0+128),w
 10598  0438  0080               	movwf	0
 10599  0439  2BAE               	goto	l3422
 10600  043A                     l3432:
 10601                           
 10602                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1222:    while(c-
      +                          -) {
 10603  043A  3001               	movlw	1
 10604  043B  02C5               	subwf	sprintf@c^(0+128),f
 10605  043C  0A45               	incf	sprintf@c^(0+128),w
 10606  043D  1D03               	btfss	3,2
 10607  043E  2C40               	goto	u5501
 10608  043F  2C41               	goto	u5500
 10609  0440                     u5501:
 10610  0440  2BB5               	goto	l3424
 10611  0441                     u5500:
 10612  0441  2C59               	goto	l3440
 10613  0442                     l3434:
 10614                           
 10615                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1234:     ((*sp++
      +                           = ('0')));
 10616  0442  3030               	movlw	48
 10617  0443  1683               	bsf	3,5	;RP0=1, select bank1
 10618  0444  1303               	bcf	3,6	;RP1=0, select bank1
 10619  0445  00A7               	movwf	??_sprintf^(0+128)
 10620  0446  0820               	movf	sprintf@sp^(0+128),w
 10621  0447  0084               	movwf	4
 10622  0448  1783               	bsf	3,7
 10623  0449  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10624  044A  1383               	bcf	3,7
 10625  044B  0827               	movf	??_sprintf^(0+128),w
 10626  044C  0080               	movwf	0
 10627  044D                     l3436:
 10628  044D  3001               	movlw	1
 10629  044E  07A0               	addwf	sprintf@sp^(0+128),f
 10630  044F  1803               	skipnc
 10631  0450  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 10632  0451  3000               	movlw	0
 10633  0452  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 10634  0453                     l3438:
 10635                           
 10636                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1235:     eexp--;
 10637  0453  30FF               	movlw	255
 10638  0454  07BD               	addwf	sprintf@eexp^(0+128),f
 10639  0455  1803               	skipnc
 10640  0456  0ABE               	incf	(sprintf@eexp+1)^(0+128),f
 10641  0457  30FF               	movlw	255
 10642  0458  07BE               	addwf	(sprintf@eexp+1)^(0+128),f
 10643  0459                     l3440:
 10644                           
 10645                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1233:    while(ee
      +                          xp > 0) {
 10646  0459  083E               	movf	(sprintf@eexp+1)^(0+128),w
 10647  045A  3A80               	xorlw	128
 10648  045B  00FF               	movwf	btemp+1
 10649  045C  3080               	movlw	128
 10650  045D  027F               	subwf	btemp+1,w
 10651  045E  1D03               	skipz
 10652  045F  2C62               	goto	u5515
 10653  0460  3001               	movlw	1
 10654  0461  023D               	subwf	sprintf@eexp^(0+128),w
 10655  0462                     u5515:
 10656  0462  1803               	skipnc
 10657  0463  2C65               	goto	u5511
 10658  0464  2C66               	goto	u5510
 10659  0465                     u5511:
 10660  0465  2C42               	goto	l3434
 10661  0466                     u5510:
 10662  0466                     l3442:
 10663                           
 10664                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1237:    if(prec 
      +                          > (int)((sizeof dpowers/sizeof dpowers[0])-2))
 10665  0466  1683               	bsf	3,5	;RP0=1, select bank1
 10666  0467  1303               	bcf	3,6	;RP1=0, select bank1
 10667  0468  0844               	movf	(sprintf@prec+1)^(0+128),w
 10668  0469  3A80               	xorlw	128
 10669  046A  00FF               	movwf	btemp+1
 10670  046B  3080               	movlw	128
 10671  046C  027F               	subwf	btemp+1,w
 10672  046D  1D03               	skipz
 10673  046E  2C71               	goto	u5525
 10674  046F  3009               	movlw	9
 10675  0470  0243               	subwf	sprintf@prec^(0+128),w
 10676  0471                     u5525:
 10677  0471  1C03               	skipc
 10678  0472  2C74               	goto	u5521
 10679  0473  2C75               	goto	u5520
 10680  0474                     u5521:
 10681  0474  2C7C               	goto	l3446
 10682  0475                     u5520:
 10683  0475                     l3444:
 10684                           
 10685                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1238:     c = (si
      +                          zeof dpowers/sizeof dpowers[0])-2;
 10686  0475  3008               	movlw	8
 10687  0476  1683               	bsf	3,5	;RP0=1, select bank1
 10688  0477  1303               	bcf	3,6	;RP1=0, select bank1
 10689  0478  00A7               	movwf	??_sprintf^(0+128)
 10690  0479  0827               	movf	??_sprintf^(0+128),w
 10691  047A  00C5               	movwf	sprintf@c^(0+128)
 10692  047B  2C82               	goto	l361
 10693  047C                     l3446:
 10694                           
 10695                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1240:     c = (ch
      +                          ar)prec;
 10696  047C  1683               	bsf	3,5	;RP0=1, select bank1
 10697  047D  1303               	bcf	3,6	;RP1=0, select bank1
 10698  047E  0843               	movf	sprintf@prec^(0+128),w
 10699  047F  00A7               	movwf	??_sprintf^(0+128)
 10700  0480  0827               	movf	??_sprintf^(0+128),w
 10701  0481  00C5               	movwf	sprintf@c^(0+128)
 10702  0482                     l361:
 10703                           
 10704                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1241:    prec -= 
      +                          (int)c;
 10705  0482  0845               	movf	sprintf@c^(0+128),w
 10706  0483  00A7               	movwf	??_sprintf^(0+128)
 10707  0484  01A8               	clrf	(??_sprintf^(0+128)+1)
 10708  0485  0827               	movf	??_sprintf^(0+128),w
 10709  0486  02C3               	subwf	sprintf@prec^(0+128),f
 10710  0487  0828               	movf	(??_sprintf+1)^(0+128),w
 10711  0488  1C03               	skipc
 10712  0489  03C4               	decf	(sprintf@prec+1)^(0+128),f
 10713  048A  02C4               	subwf	(sprintf@prec+1)^(0+128),f
 10714  048B                     l3448:
 10715                           
 10716                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1245:    if(c)
 10717  048B  0845               	movf	sprintf@c^(0+128),w
 10718  048C  1903               	btfsc	3,2
 10719  048D  2C8F               	goto	u5531
 10720  048E  2C90               	goto	u5530
 10721  048F                     u5531:
 10722  048F  2C9F               	goto	l3454
 10723  0490                     u5530:
 10724  0490                     l3450:
 10725                           
 10726                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1247:     ((*sp++
      +                           = ('.')));
 10727  0490  302E               	movlw	46
 10728  0491  00A7               	movwf	??_sprintf^(0+128)
 10729  0492  0820               	movf	sprintf@sp^(0+128),w
 10730  0493  0084               	movwf	4
 10731  0494  1783               	bsf	3,7
 10732  0495  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10733  0496  1383               	bcf	3,7
 10734  0497  0827               	movf	??_sprintf^(0+128),w
 10735  0498  0080               	movwf	0
 10736  0499                     l3452:
 10737  0499  3001               	movlw	1
 10738  049A  07A0               	addwf	sprintf@sp^(0+128),f
 10739  049B  1803               	skipnc
 10740  049C  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 10741  049D  3000               	movlw	0
 10742  049E  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 10743  049F                     l3454:
 10744                           
 10745                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10746  049F  0845               	movf	sprintf@c^(0+128),w
 10747  04A0  120A  158A  2140  120A  118A  	fcall	_scale
 10748  04A5  1283               	bcf	3,5	;RP0=0, select bank0
 10749  04A6  1303               	bcf	3,6	;RP1=0, select bank0
 10750  04A7  0841               	movf	?_scale+3,w
 10751  04A8  1683               	bsf	3,5	;RP0=1, select bank1
 10752  04A9  1303               	bcf	3,6	;RP1=0, select bank1
 10753  04AA  00AF               	movwf	(_sprintf$1254+3)^(0+128)
 10754  04AB  1283               	bcf	3,5	;RP0=0, select bank0
 10755  04AC  1303               	bcf	3,6	;RP1=0, select bank0
 10756  04AD  0840               	movf	?_scale+2,w
 10757  04AE  1683               	bsf	3,5	;RP0=1, select bank1
 10758  04AF  1303               	bcf	3,6	;RP1=0, select bank1
 10759  04B0  00AE               	movwf	(_sprintf$1254+2)^(0+128)
 10760  04B1  1283               	bcf	3,5	;RP0=0, select bank0
 10761  04B2  1303               	bcf	3,6	;RP1=0, select bank0
 10762  04B3  083F               	movf	?_scale+1,w
 10763  04B4  1683               	bsf	3,5	;RP0=1, select bank1
 10764  04B5  1303               	bcf	3,6	;RP1=0, select bank1
 10765  04B6  00AD               	movwf	(_sprintf$1254+1)^(0+128)
 10766  04B7  1283               	bcf	3,5	;RP0=0, select bank0
 10767  04B8  1303               	bcf	3,6	;RP1=0, select bank0
 10768  04B9  083E               	movf	?_scale,w
 10769  04BA  1683               	bsf	3,5	;RP0=1, select bank1
 10770  04BB  1303               	bcf	3,6	;RP1=0, select bank1
 10771  04BC  00AC               	movwf	_sprintf$1254^(0+128)
 10772                           
 10773                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1253:    val = (u
      +                          nsigned long)(fval * scale((signed char)c));
 10774  04BD  082F               	movf	(_sprintf$1254+3)^(0+128),w
 10775  04BE  1283               	bcf	3,5	;RP0=0, select bank0
 10776  04BF  1303               	bcf	3,6	;RP1=0, select bank0
 10777  04C0  00AB               	movwf	___flmul@a+3
 10778  04C1  1683               	bsf	3,5	;RP0=1, select bank1
 10779  04C2  1303               	bcf	3,6	;RP1=0, select bank1
 10780  04C3  082E               	movf	(_sprintf$1254+2)^(0+128),w
 10781  04C4  1283               	bcf	3,5	;RP0=0, select bank0
 10782  04C5  1303               	bcf	3,6	;RP1=0, select bank0
 10783  04C6  00AA               	movwf	___flmul@a+2
 10784  04C7  1683               	bsf	3,5	;RP0=1, select bank1
 10785  04C8  1303               	bcf	3,6	;RP1=0, select bank1
 10786  04C9  082D               	movf	(_sprintf$1254+1)^(0+128),w
 10787  04CA  1283               	bcf	3,5	;RP0=0, select bank0
 10788  04CB  1303               	bcf	3,6	;RP1=0, select bank0
 10789  04CC  00A9               	movwf	___flmul@a+1
 10790  04CD  1683               	bsf	3,5	;RP0=1, select bank1
 10791  04CE  1303               	bcf	3,6	;RP1=0, select bank1
 10792  04CF  082C               	movf	_sprintf$1254^(0+128),w
 10793  04D0  1283               	bcf	3,5	;RP0=0, select bank0
 10794  04D1  1303               	bcf	3,6	;RP1=0, select bank0
 10795  04D2  00A8               	movwf	___flmul@a
 10796  04D3  1683               	bsf	3,5	;RP0=1, select bank1
 10797  04D4  1303               	bcf	3,6	;RP1=0, select bank1
 10798  04D5  0842               	movf	(sprintf@fval+3)^(0+128),w
 10799  04D6  1283               	bcf	3,5	;RP0=0, select bank0
 10800  04D7  1303               	bcf	3,6	;RP1=0, select bank0
 10801  04D8  00A7               	movwf	___flmul@b+3
 10802  04D9  1683               	bsf	3,5	;RP0=1, select bank1
 10803  04DA  1303               	bcf	3,6	;RP1=0, select bank1
 10804  04DB  0841               	movf	(sprintf@fval+2)^(0+128),w
 10805  04DC  1283               	bcf	3,5	;RP0=0, select bank0
 10806  04DD  1303               	bcf	3,6	;RP1=0, select bank0
 10807  04DE  00A6               	movwf	___flmul@b+2
 10808  04DF  1683               	bsf	3,5	;RP0=1, select bank1
 10809  04E0  1303               	bcf	3,6	;RP1=0, select bank1
 10810  04E1  0840               	movf	(sprintf@fval+1)^(0+128),w
 10811  04E2  1283               	bcf	3,5	;RP0=0, select bank0
 10812  04E3  1303               	bcf	3,6	;RP1=0, select bank0
 10813  04E4  00A5               	movwf	___flmul@b+1
 10814  04E5  1683               	bsf	3,5	;RP0=1, select bank1
 10815  04E6  1303               	bcf	3,6	;RP1=0, select bank1
 10816  04E7  083F               	movf	sprintf@fval^(0+128),w
 10817  04E8  1283               	bcf	3,5	;RP0=0, select bank0
 10818  04E9  1303               	bcf	3,6	;RP1=0, select bank0
 10819  04EA  00A4               	movwf	___flmul@b
 10820  04EB  120A  158A  249F  120A  118A  	fcall	___flmul
 10821  04F0  1283               	bcf	3,5	;RP0=0, select bank0
 10822  04F1  1303               	bcf	3,6	;RP1=0, select bank0
 10823  04F2  0827               	movf	?___flmul+3,w
 10824  04F3  00D4               	movwf	___fltol@f1+3
 10825  04F4  0826               	movf	?___flmul+2,w
 10826  04F5  00D3               	movwf	___fltol@f1+2
 10827  04F6  0825               	movf	?___flmul+1,w
 10828  04F7  00D2               	movwf	___fltol@f1+1
 10829  04F8  0824               	movf	?___flmul,w
 10830  04F9  00D1               	movwf	___fltol@f1
 10831  04FA  120A  158A  2007  120A  118A  	fcall	___fltol
 10832  04FF  1283               	bcf	3,5	;RP0=0, select bank0
 10833  0500  1303               	bcf	3,6	;RP1=0, select bank0
 10834  0501  0854               	movf	?___fltol+3,w
 10835  0502  1683               	bsf	3,5	;RP0=1, select bank1
 10836  0503  1303               	bcf	3,6	;RP1=0, select bank1
 10837  0504  00BC               	movwf	(sprintf@val+3)^(0+128)
 10838  0505  1283               	bcf	3,5	;RP0=0, select bank0
 10839  0506  1303               	bcf	3,6	;RP1=0, select bank0
 10840  0507  0853               	movf	?___fltol+2,w
 10841  0508  1683               	bsf	3,5	;RP0=1, select bank1
 10842  0509  1303               	bcf	3,6	;RP1=0, select bank1
 10843  050A  00BB               	movwf	(sprintf@val+2)^(0+128)
 10844  050B  1283               	bcf	3,5	;RP0=0, select bank0
 10845  050C  1303               	bcf	3,6	;RP1=0, select bank0
 10846  050D  0852               	movf	?___fltol+1,w
 10847  050E  1683               	bsf	3,5	;RP0=1, select bank1
 10848  050F  1303               	bcf	3,6	;RP1=0, select bank1
 10849  0510  00BA               	movwf	(sprintf@val+1)^(0+128)
 10850  0511  1283               	bcf	3,5	;RP0=0, select bank0
 10851  0512  1303               	bcf	3,6	;RP1=0, select bank0
 10852  0513  0851               	movf	?___fltol,w
 10853  0514  1683               	bsf	3,5	;RP0=1, select bank1
 10854  0515  1303               	bcf	3,6	;RP1=0, select bank1
 10855  0516  00B9               	movwf	sprintf@val^(0+128)
 10856                           
 10857                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 10858  0517  2DFD               	goto	l3466
 10859  0518                     l3456:
 10860                           
 10861                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1255:     tmpval.
      +                          vd = val/dpowers[c];
 10862  0518  0845               	movf	sprintf@c^(0+128),w
 10863  0519  00A7               	movwf	??_sprintf^(0+128)
 10864  051A  3001               	movlw	1
 10865  051B                     u5545:
 10866  051B  1003               	clrc
 10867  051C  0DA7               	rlf	??_sprintf^(0+128),f
 10868  051D  3EFF               	addlw	-1
 10869  051E  1D03               	skipz
 10870  051F  2D1B               	goto	u5545
 10871  0520  1003               	clrc
 10872  0521  0D27               	rlf	??_sprintf^(0+128),w
 10873  0522  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10874  0523  0084               	movwf	4
 10875  0524  120A  118A  200D  120A  118A  	fcall	stringdir
 10876  0529  00F0               	movwf	___lldiv@divisor
 10877  052A  120A  118A  200D  120A  118A  	fcall	stringdir
 10878  052F  00F1               	movwf	___lldiv@divisor+1
 10879  0530  120A  118A  200D  120A  118A  	fcall	stringdir
 10880  0535  00F2               	movwf	___lldiv@divisor+2
 10881  0536  120A  118A  200D  120A  118A  	fcall	stringdir
 10882  053B  00F3               	movwf	___lldiv@divisor+3
 10883  053C  083C               	movf	(sprintf@val+3)^(0+128),w
 10884  053D  00F7               	movwf	___lldiv@dividend+3
 10885  053E  083B               	movf	(sprintf@val+2)^(0+128),w
 10886  053F  00F6               	movwf	___lldiv@dividend+2
 10887  0540  083A               	movf	(sprintf@val+1)^(0+128),w
 10888  0541  00F5               	movwf	___lldiv@dividend+1
 10889  0542  0839               	movf	sprintf@val^(0+128),w
 10890  0543  00F4               	movwf	___lldiv@dividend
 10891  0544  160A  158A  235F  120A  118A  	fcall	___lldiv
 10892  0549  0873               	movf	?___lldiv+3,w
 10893  054A  1683               	bsf	3,5	;RP0=1, select bank1
 10894  054B  1303               	bcf	3,6	;RP1=0, select bank1
 10895  054C  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
 10896  054D  0872               	movf	?___lldiv+2,w
 10897  054E  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
 10898  054F  0871               	movf	?___lldiv+1,w
 10899  0550  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
 10900  0551  0870               	movf	?___lldiv,w
 10901  0552  00B5               	movwf	sprintf@tmpval^(0+128)
 10902  0553                     l3458:
 10903                           
 10904                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1256:     tmpval.
      +                          vd %= 10;
 10905  0553  3000               	movlw	0
 10906  0554  1283               	bcf	3,5	;RP0=0, select bank0
 10907  0555  1303               	bcf	3,6	;RP1=0, select bank0
 10908  0556  00A3               	movwf	___llmod@divisor+3
 10909  0557  3000               	movlw	0
 10910  0558  00A2               	movwf	___llmod@divisor+2
 10911  0559  3000               	movlw	0
 10912  055A  00A1               	movwf	___llmod@divisor+1
 10913  055B  300A               	movlw	10
 10914  055C  00A0               	movwf	___llmod@divisor
 10915  055D  1683               	bsf	3,5	;RP0=1, select bank1
 10916  055E  1303               	bcf	3,6	;RP1=0, select bank1
 10917  055F  0838               	movf	(sprintf@tmpval+3)^(0+128),w
 10918  0560  1283               	bcf	3,5	;RP0=0, select bank0
 10919  0561  1303               	bcf	3,6	;RP1=0, select bank0
 10920  0562  00A7               	movwf	___llmod@dividend+3
 10921  0563  1683               	bsf	3,5	;RP0=1, select bank1
 10922  0564  1303               	bcf	3,6	;RP1=0, select bank1
 10923  0565  0837               	movf	(sprintf@tmpval+2)^(0+128),w
 10924  0566  1283               	bcf	3,5	;RP0=0, select bank0
 10925  0567  1303               	bcf	3,6	;RP1=0, select bank0
 10926  0568  00A6               	movwf	___llmod@dividend+2
 10927  0569  1683               	bsf	3,5	;RP0=1, select bank1
 10928  056A  1303               	bcf	3,6	;RP1=0, select bank1
 10929  056B  0836               	movf	(sprintf@tmpval+1)^(0+128),w
 10930  056C  1283               	bcf	3,5	;RP0=0, select bank0
 10931  056D  1303               	bcf	3,6	;RP1=0, select bank0
 10932  056E  00A5               	movwf	___llmod@dividend+1
 10933  056F  1683               	bsf	3,5	;RP0=1, select bank1
 10934  0570  1303               	bcf	3,6	;RP1=0, select bank1
 10935  0571  0835               	movf	sprintf@tmpval^(0+128),w
 10936  0572  1283               	bcf	3,5	;RP0=0, select bank0
 10937  0573  1303               	bcf	3,6	;RP1=0, select bank0
 10938  0574  00A4               	movwf	___llmod@dividend
 10939  0575  160A  118A  2001  120A  118A  	fcall	___llmod
 10940  057A  1283               	bcf	3,5	;RP0=0, select bank0
 10941  057B  1303               	bcf	3,6	;RP1=0, select bank0
 10942  057C  0823               	movf	?___llmod+3,w
 10943  057D  1683               	bsf	3,5	;RP0=1, select bank1
 10944  057E  1303               	bcf	3,6	;RP1=0, select bank1
 10945  057F  00B8               	movwf	(sprintf@tmpval+3)^(0+128)
 10946  0580  1283               	bcf	3,5	;RP0=0, select bank0
 10947  0581  1303               	bcf	3,6	;RP1=0, select bank0
 10948  0582  0822               	movf	?___llmod+2,w
 10949  0583  1683               	bsf	3,5	;RP0=1, select bank1
 10950  0584  1303               	bcf	3,6	;RP1=0, select bank1
 10951  0585  00B7               	movwf	(sprintf@tmpval+2)^(0+128)
 10952  0586  1283               	bcf	3,5	;RP0=0, select bank0
 10953  0587  1303               	bcf	3,6	;RP1=0, select bank0
 10954  0588  0821               	movf	?___llmod+1,w
 10955  0589  1683               	bsf	3,5	;RP0=1, select bank1
 10956  058A  1303               	bcf	3,6	;RP1=0, select bank1
 10957  058B  00B6               	movwf	(sprintf@tmpval+1)^(0+128)
 10958  058C  1283               	bcf	3,5	;RP0=0, select bank0
 10959  058D  1303               	bcf	3,6	;RP1=0, select bank0
 10960  058E  0820               	movf	?___llmod,w
 10961  058F  1683               	bsf	3,5	;RP0=1, select bank1
 10962  0590  1303               	bcf	3,6	;RP1=0, select bank1
 10963  0591  00B5               	movwf	sprintf@tmpval^(0+128)
 10964  0592                     l3460:
 10965                           
 10966                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1257:     ((*sp++
      +                           = ('0' + tmpval.vd)));
 10967  0592  0835               	movf	sprintf@tmpval^(0+128),w
 10968  0593  3E30               	addlw	48
 10969  0594  00A7               	movwf	??_sprintf^(0+128)
 10970  0595  0820               	movf	sprintf@sp^(0+128),w
 10971  0596  0084               	movwf	4
 10972  0597  1783               	bsf	3,7
 10973  0598  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 10974  0599  1383               	bcf	3,7
 10975  059A  0827               	movf	??_sprintf^(0+128),w
 10976  059B  0080               	movwf	0
 10977  059C                     l3462:
 10978  059C  3001               	movlw	1
 10979  059D  07A0               	addwf	sprintf@sp^(0+128),f
 10980  059E  1803               	skipnc
 10981  059F  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 10982  05A0  3000               	movlw	0
 10983  05A1  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 10984  05A2                     l3464:
 10985                           
 10986                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1258:     val %= 
      +                          dpowers[c];
 10987  05A2  0845               	movf	sprintf@c^(0+128),w
 10988  05A3  00A7               	movwf	??_sprintf^(0+128)
 10989  05A4  3001               	movlw	1
 10990  05A5                     u5555:
 10991  05A5  1003               	clrc
 10992  05A6  0DA7               	rlf	??_sprintf^(0+128),f
 10993  05A7  3EFF               	addlw	-1
 10994  05A8  1D03               	skipz
 10995  05A9  2DA5               	goto	u5555
 10996  05AA  1003               	clrc
 10997  05AB  0D27               	rlf	??_sprintf^(0+128),w
 10998  05AC  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 10999  05AD  0084               	movwf	4
 11000  05AE  120A  118A  200D  120A  118A  	fcall	stringdir
 11001  05B3  1283               	bcf	3,5	;RP0=0, select bank0
 11002  05B4  1303               	bcf	3,6	;RP1=0, select bank0
 11003  05B5  00A0               	movwf	___llmod@divisor
 11004  05B6  120A  118A  200D  120A  118A  	fcall	stringdir
 11005  05BB  00A1               	movwf	___llmod@divisor+1
 11006  05BC  120A  118A  200D  120A  118A  	fcall	stringdir
 11007  05C1  00A2               	movwf	___llmod@divisor+2
 11008  05C2  120A  118A  200D  120A  118A  	fcall	stringdir
 11009  05C7  00A3               	movwf	___llmod@divisor+3
 11010  05C8  1683               	bsf	3,5	;RP0=1, select bank1
 11011  05C9  1303               	bcf	3,6	;RP1=0, select bank1
 11012  05CA  083C               	movf	(sprintf@val+3)^(0+128),w
 11013  05CB  1283               	bcf	3,5	;RP0=0, select bank0
 11014  05CC  1303               	bcf	3,6	;RP1=0, select bank0
 11015  05CD  00A7               	movwf	___llmod@dividend+3
 11016  05CE  1683               	bsf	3,5	;RP0=1, select bank1
 11017  05CF  1303               	bcf	3,6	;RP1=0, select bank1
 11018  05D0  083B               	movf	(sprintf@val+2)^(0+128),w
 11019  05D1  1283               	bcf	3,5	;RP0=0, select bank0
 11020  05D2  1303               	bcf	3,6	;RP1=0, select bank0
 11021  05D3  00A6               	movwf	___llmod@dividend+2
 11022  05D4  1683               	bsf	3,5	;RP0=1, select bank1
 11023  05D5  1303               	bcf	3,6	;RP1=0, select bank1
 11024  05D6  083A               	movf	(sprintf@val+1)^(0+128),w
 11025  05D7  1283               	bcf	3,5	;RP0=0, select bank0
 11026  05D8  1303               	bcf	3,6	;RP1=0, select bank0
 11027  05D9  00A5               	movwf	___llmod@dividend+1
 11028  05DA  1683               	bsf	3,5	;RP0=1, select bank1
 11029  05DB  1303               	bcf	3,6	;RP1=0, select bank1
 11030  05DC  0839               	movf	sprintf@val^(0+128),w
 11031  05DD  1283               	bcf	3,5	;RP0=0, select bank0
 11032  05DE  1303               	bcf	3,6	;RP1=0, select bank0
 11033  05DF  00A4               	movwf	___llmod@dividend
 11034  05E0  160A  118A  2001  120A  118A  	fcall	___llmod
 11035  05E5  1283               	bcf	3,5	;RP0=0, select bank0
 11036  05E6  1303               	bcf	3,6	;RP1=0, select bank0
 11037  05E7  0823               	movf	?___llmod+3,w
 11038  05E8  1683               	bsf	3,5	;RP0=1, select bank1
 11039  05E9  1303               	bcf	3,6	;RP1=0, select bank1
 11040  05EA  00BC               	movwf	(sprintf@val+3)^(0+128)
 11041  05EB  1283               	bcf	3,5	;RP0=0, select bank0
 11042  05EC  1303               	bcf	3,6	;RP1=0, select bank0
 11043  05ED  0822               	movf	?___llmod+2,w
 11044  05EE  1683               	bsf	3,5	;RP0=1, select bank1
 11045  05EF  1303               	bcf	3,6	;RP1=0, select bank1
 11046  05F0  00BB               	movwf	(sprintf@val+2)^(0+128)
 11047  05F1  1283               	bcf	3,5	;RP0=0, select bank0
 11048  05F2  1303               	bcf	3,6	;RP1=0, select bank0
 11049  05F3  0821               	movf	?___llmod+1,w
 11050  05F4  1683               	bsf	3,5	;RP0=1, select bank1
 11051  05F5  1303               	bcf	3,6	;RP1=0, select bank1
 11052  05F6  00BA               	movwf	(sprintf@val+1)^(0+128)
 11053  05F7  1283               	bcf	3,5	;RP0=0, select bank0
 11054  05F8  1303               	bcf	3,6	;RP1=0, select bank0
 11055  05F9  0820               	movf	?___llmod,w
 11056  05FA  1683               	bsf	3,5	;RP0=1, select bank1
 11057  05FB  1303               	bcf	3,6	;RP1=0, select bank1
 11058  05FC  00B9               	movwf	sprintf@val^(0+128)
 11059  05FD                     l3466:
 11060                           
 11061                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1254:    while(c-
      +                          -) {
 11062  05FD  3001               	movlw	1
 11063  05FE  02C5               	subwf	sprintf@c^(0+128),f
 11064  05FF  0A45               	incf	sprintf@c^(0+128),w
 11065  0600  1D03               	btfss	3,2
 11066  0601  2E03               	goto	u5561
 11067  0602  2E04               	goto	u5560
 11068  0603                     u5561:
 11069  0603  2D18               	goto	l3456
 11070  0604                     u5560:
 11071  0604  2E1A               	goto	l3474
 11072  0605                     l3468:
 11073                           
 11074                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1262:     ((*sp++
      +                           = ('0')));
 11075  0605  3030               	movlw	48
 11076  0606  00A7               	movwf	??_sprintf^(0+128)
 11077  0607  0820               	movf	sprintf@sp^(0+128),w
 11078  0608  0084               	movwf	4
 11079  0609  1783               	bsf	3,7
 11080  060A  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 11081  060B  1383               	bcf	3,7
 11082  060C  0827               	movf	??_sprintf^(0+128),w
 11083  060D  0080               	movwf	0
 11084  060E                     l3470:
 11085  060E  3001               	movlw	1
 11086  060F  07A0               	addwf	sprintf@sp^(0+128),f
 11087  0610  1803               	skipnc
 11088  0611  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 11089  0612  3000               	movlw	0
 11090  0613  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 11091  0614                     l3472:
 11092                           
 11093                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1263:     prec--;
 11094  0614  30FF               	movlw	255
 11095  0615  07C3               	addwf	sprintf@prec^(0+128),f
 11096  0616  1803               	skipnc
 11097  0617  0AC4               	incf	(sprintf@prec+1)^(0+128),f
 11098  0618  30FF               	movlw	255
 11099  0619  07C4               	addwf	(sprintf@prec+1)^(0+128),f
 11100  061A                     l3474:
 11101                           
 11102                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1261:    while(pr
      +                          ec) {
 11103  061A  0843               	movf	sprintf@prec^(0+128),w
 11104  061B  0444               	iorwf	(sprintf@prec+1)^(0+128),w
 11105  061C  1D03               	btfss	3,2
 11106  061D  2E1F               	goto	u5571
 11107  061E  2E20               	goto	u5570
 11108  061F                     u5571:
 11109  061F  2E05               	goto	l3468
 11110  0620                     u5570:
 11111  0620  2FC8               	goto	l3554
 11112  0621                     l3476:
 11113                           
 11114                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1279:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1285:     val = (unsigned
      +                           long)(*(int *)__va_arg((*(int **)ap), (int)0));
 11115  0621  0830               	movf	sprintf@ap^(0+128),w
 11116  0622  0084               	movwf	4
 11117  0623  1383               	bcf	3,7	;select IRP bank0
 11118  0624  0800               	movf	0,w
 11119  0625  00A7               	movwf	??_sprintf^(0+128)
 11120  0626  0A84               	incf	4,f
 11121  0627  0800               	movf	0,w
 11122  0628  00A8               	movwf	(??_sprintf^(0+128)+1)
 11123  0629  0827               	movf	??_sprintf^(0+128),w
 11124  062A  00B9               	movwf	sprintf@val^(0+128)
 11125  062B  0828               	movf	(??_sprintf+1)^(0+128),w
 11126  062C  00BA               	movwf	(sprintf@val+1)^(0+128)
 11127  062D  3000               	movlw	0
 11128  062E  1BBA               	btfsc	(sprintf@val+1)^(0+128),7
 11129  062F  30FF               	movlw	255
 11130  0630  00BB               	movwf	(sprintf@val+2)^(0+128)
 11131  0631  00BC               	movwf	(sprintf@val+3)^(0+128)
 11132  0632                     l3478:
 11133  0632  3002               	movlw	2
 11134  0633  00A7               	movwf	??_sprintf^(0+128)
 11135  0634  0827               	movf	??_sprintf^(0+128),w
 11136  0635  07B0               	addwf	sprintf@ap^(0+128),f
 11137  0636                     l3480:
 11138                           
 11139                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1287:    if((long
      +                          )val < 0) {
 11140  0636  1FBC               	btfss	(sprintf@val+3)^(0+128),7
 11141  0637  2E39               	goto	u5581
 11142  0638  2E3A               	goto	u5580
 11143  0639                     u5581:
 11144  0639  2E49               	goto	l3486
 11145  063A                     u5580:
 11146  063A                     l3482:
 11147                           
 11148                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1288:     flag |=
      +                           0x03;
 11149  063A  3003               	movlw	3
 11150  063B  04B1               	iorwf	sprintf@flag^(0+128),f
 11151  063C  3000               	movlw	0
 11152  063D  04B2               	iorwf	(sprintf@flag+1)^(0+128),f
 11153  063E                     l3484:
 11154                           
 11155                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1289:     val = -
      +                          val;
 11156  063E  09B9               	comf	sprintf@val^(0+128),f
 11157  063F  09BA               	comf	(sprintf@val+1)^(0+128),f
 11158  0640  09BB               	comf	(sprintf@val+2)^(0+128),f
 11159  0641  09BC               	comf	(sprintf@val+3)^(0+128),f
 11160  0642  0AB9               	incf	sprintf@val^(0+128),f
 11161  0643  1903               	skipnz
 11162  0644  0ABA               	incf	(sprintf@val+1)^(0+128),f
 11163  0645  1903               	skipnz
 11164  0646  0ABB               	incf	(sprintf@val+2)^(0+128),f
 11165  0647  1903               	skipnz
 11166  0648  0ABC               	incf	(sprintf@val+3)^(0+128),f
 11167  0649                     l3486:
 11168                           
 11169                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1292:   };C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1316:   if(prec == 0 && v
      +                          al == 0)
 11170  0649  0843               	movf	sprintf@prec^(0+128),w
 11171  064A  0444               	iorwf	(sprintf@prec+1)^(0+128),w
 11172  064B  1D03               	btfss	3,2
 11173  064C  2E4E               	goto	u5591
 11174  064D  2E4F               	goto	u5590
 11175  064E                     u5591:
 11176  064E  2E5D               	goto	l3492
 11177  064F                     u5590:
 11178  064F                     l3488:
 11179  064F  083C               	movf	(sprintf@val+3)^(0+128),w
 11180  0650  043B               	iorwf	(sprintf@val+2)^(0+128),w
 11181  0651  043A               	iorwf	(sprintf@val+1)^(0+128),w
 11182  0652  0439               	iorwf	sprintf@val^(0+128),w
 11183  0653  1D03               	skipz
 11184  0654  2E56               	goto	u5601
 11185  0655  2E57               	goto	u5600
 11186  0656                     u5601:
 11187  0656  2E5D               	goto	l3492
 11188  0657                     u5600:
 11189  0657                     l3490:
 11190                           
 11191                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1317:    prec++;
 11192  0657  3001               	movlw	1
 11193  0658  07C3               	addwf	sprintf@prec^(0+128),f
 11194  0659  1803               	skipnc
 11195  065A  0AC4               	incf	(sprintf@prec+1)^(0+128),f
 11196  065B  3000               	movlw	0
 11197  065C  07C4               	addwf	(sprintf@prec+1)^(0+128),f
 11198  065D                     l3492:
 11199                           
 11200                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1331:    for(c = 
      +                          1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
 11201  065D  01C5               	clrf	sprintf@c^(0+128)
 11202  065E  0AC5               	incf	sprintf@c^(0+128),f
 11203  065F                     l3498:
 11204                           
 11205                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1332:     if(val 
      +                          < dpowers[c])
 11206  065F  0845               	movf	sprintf@c^(0+128),w
 11207  0660  00A7               	movwf	??_sprintf^(0+128)
 11208  0661  3001               	movlw	1
 11209  0662                     u5615:
 11210  0662  1003               	clrc
 11211  0663  0DA7               	rlf	??_sprintf^(0+128),f
 11212  0664  3EFF               	addlw	-1
 11213  0665  1D03               	skipz
 11214  0666  2E62               	goto	u5615
 11215  0667  1003               	clrc
 11216  0668  0D27               	rlf	??_sprintf^(0+128),w
 11217  0669  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11218  066A  0084               	movwf	4
 11219  066B  120A  118A  200D  120A  118A  	fcall	stringdir
 11220  0670  00A8               	movwf	(??_sprintf+1)^(0+128)
 11221  0671  120A  118A  200D  120A  118A  	fcall	stringdir
 11222  0676  00A9               	movwf	((??_sprintf+1)^(0+128)+1)
 11223  0677  120A  118A  200D  120A  118A  	fcall	stringdir
 11224  067C  00AA               	movwf	((??_sprintf+1)^(0+128)+2)
 11225  067D  120A  118A  200D  120A  118A  	fcall	stringdir
 11226  0682  00AB               	movwf	((??_sprintf+1)^(0+128)+3)
 11227  0683  082B               	movf	(??_sprintf+4)^(0+128),w
 11228  0684  023C               	subwf	(sprintf@val+3)^(0+128),w
 11229  0685  1D03               	skipz
 11230  0686  2E91               	goto	u5625
 11231  0687  082A               	movf	(??_sprintf+3)^(0+128),w
 11232  0688  023B               	subwf	(sprintf@val+2)^(0+128),w
 11233  0689  1D03               	skipz
 11234  068A  2E91               	goto	u5625
 11235  068B  0829               	movf	(??_sprintf+2)^(0+128),w
 11236  068C  023A               	subwf	(sprintf@val+1)^(0+128),w
 11237  068D  1D03               	skipz
 11238  068E  2E91               	goto	u5625
 11239  068F  0828               	movf	(??_sprintf+1)^(0+128),w
 11240  0690  0239               	subwf	sprintf@val^(0+128),w
 11241  0691                     u5625:
 11242  0691  1803               	skipnc
 11243  0692  2E94               	goto	u5621
 11244  0693  2E95               	goto	u5620
 11245  0694                     u5621:
 11246  0694  2E96               	goto	l3502
 11247  0695                     u5620:
 11248  0695  2EA0               	goto	l3504
 11249  0696                     l3502:
 11250  0696  3001               	movlw	1
 11251  0697  00A7               	movwf	??_sprintf^(0+128)
 11252  0698  0827               	movf	??_sprintf^(0+128),w
 11253  0699  07C5               	addwf	sprintf@c^(0+128),f
 11254  069A  300A               	movlw	10
 11255  069B  0645               	xorwf	sprintf@c^(0+128),w
 11256  069C  1D03               	btfss	3,2
 11257  069D  2E9F               	goto	u5631
 11258  069E  2EA0               	goto	u5630
 11259  069F                     u5631:
 11260  069F  2E5F               	goto	l3498
 11261  06A0                     u5630:
 11262  06A0                     l3504:
 11263                           
 11264                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1365:   if(c < pr
      +                          ec)
 11265  06A0  0844               	movf	(sprintf@prec+1)^(0+128),w
 11266  06A1  3A80               	xorlw	128
 11267  06A2  3C80               	sublw	128
 11268  06A3  1D03               	skipz
 11269  06A4  2EA7               	goto	u5645
 11270  06A5  0843               	movf	sprintf@prec^(0+128),w
 11271  06A6  0245               	subwf	sprintf@c^(0+128),w
 11272  06A7                     u5645:
 11273  06A7  1803               	skipnc
 11274  06A8  2EAA               	goto	u5641
 11275  06A9  2EAB               	goto	u5640
 11276  06AA                     u5641:
 11277  06AA  2EB2               	goto	l3508
 11278  06AB                     u5640:
 11279  06AB                     l3506:
 11280                           
 11281                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1366:    c = (cha
      +                          r)prec;
 11282  06AB  1683               	bsf	3,5	;RP0=1, select bank1
 11283  06AC  1303               	bcf	3,6	;RP1=0, select bank1
 11284  06AD  0843               	movf	sprintf@prec^(0+128),w
 11285  06AE  00A7               	movwf	??_sprintf^(0+128)
 11286  06AF  0827               	movf	??_sprintf^(0+128),w
 11287  06B0  00C5               	movwf	sprintf@c^(0+128)
 11288  06B1  2ECA               	goto	l3512
 11289  06B2                     l3508:
 11290  06B2  1683               	bsf	3,5	;RP0=1, select bank1
 11291  06B3  1303               	bcf	3,6	;RP1=0, select bank1
 11292  06B4  0844               	movf	(sprintf@prec+1)^(0+128),w
 11293  06B5  3A80               	xorlw	128
 11294  06B6  00A7               	movwf	??_sprintf^(0+128)
 11295  06B7  3080               	movlw	128
 11296  06B8  0227               	subwf	??_sprintf^(0+128),w
 11297  06B9  1D03               	skipz
 11298  06BA  2EBD               	goto	u5655
 11299  06BB  0845               	movf	sprintf@c^(0+128),w
 11300  06BC  0243               	subwf	sprintf@prec^(0+128),w
 11301  06BD                     u5655:
 11302  06BD  1803               	skipnc
 11303  06BE  2EC0               	goto	u5651
 11304  06BF  2EC1               	goto	u5650
 11305  06C0                     u5651:
 11306  06C0  2ECA               	goto	l3512
 11307  06C1                     u5650:
 11308  06C1                     l3510:
 11309                           
 11310                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1368:    prec = c
      +                          ;
 11311  06C1  1683               	bsf	3,5	;RP0=1, select bank1
 11312  06C2  1303               	bcf	3,6	;RP1=0, select bank1
 11313  06C3  0845               	movf	sprintf@c^(0+128),w
 11314  06C4  00A7               	movwf	??_sprintf^(0+128)
 11315  06C5  01A8               	clrf	(??_sprintf^(0+128)+1)
 11316  06C6  0827               	movf	??_sprintf^(0+128),w
 11317  06C7  00C3               	movwf	sprintf@prec^(0+128)
 11318  06C8  0828               	movf	(??_sprintf+1)^(0+128),w
 11319  06C9  00C4               	movwf	(sprintf@prec+1)^(0+128)
 11320  06CA                     l3512:
 11321                           
 11322                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1371:   if(width 
      +                          && flag & 0x03)
 11323  06CA  1683               	bsf	3,5	;RP0=1, select bank1
 11324  06CB  1303               	bcf	3,6	;RP1=0, select bank1
 11325  06CC  0833               	movf	sprintf@width^(0+128),w
 11326  06CD  0434               	iorwf	(sprintf@width+1)^(0+128),w
 11327  06CE  1903               	btfsc	3,2
 11328  06CF  2ED1               	goto	u5661
 11329  06D0  2ED2               	goto	u5660
 11330  06D1                     u5661:
 11331  06D1  2EE4               	goto	l3518
 11332  06D2                     u5660:
 11333  06D2                     l3514:
 11334  06D2  3003               	movlw	3
 11335  06D3  0531               	andwf	sprintf@flag^(0+128),w
 11336  06D4  00A7               	movwf	??_sprintf^(0+128)
 11337  06D5  3000               	movlw	0
 11338  06D6  0532               	andwf	(sprintf@flag+1)^(0+128),w
 11339  06D7  00A8               	movwf	(??_sprintf+1)^(0+128)
 11340  06D8  0827               	movf	??_sprintf^(0+128),w
 11341  06D9  0428               	iorwf	(??_sprintf^(0+128)+1),w
 11342  06DA  1903               	btfsc	3,2
 11343  06DB  2EDD               	goto	u5671
 11344  06DC  2EDE               	goto	u5670
 11345  06DD                     u5671:
 11346  06DD  2EE4               	goto	l3518
 11347  06DE                     u5670:
 11348  06DE                     l3516:
 11349                           
 11350                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1372:    width--;
 11351  06DE  30FF               	movlw	255
 11352  06DF  07B3               	addwf	sprintf@width^(0+128),f
 11353  06E0  1803               	skipnc
 11354  06E1  0AB4               	incf	(sprintf@width+1)^(0+128),f
 11355  06E2  30FF               	movlw	255
 11356  06E3  07B4               	addwf	(sprintf@width+1)^(0+128),f
 11357  06E4                     l3518:
 11358                           
 11359                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1374:   if(flag &
      +                           0x4000) {
 11360  06E4  1F32               	btfss	(sprintf@flag+1)^(0+128),6
 11361  06E5  2EE7               	goto	u5681
 11362  06E6  2EE8               	goto	u5680
 11363  06E7                     u5681:
 11364  06E7  2F03               	goto	l3526
 11365  06E8                     u5680:
 11366  06E8                     l3520:
 11367                           
 11368                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1375:    if(width
      +                           > prec)
 11369  06E8  0844               	movf	(sprintf@prec+1)^(0+128),w
 11370  06E9  3A80               	xorlw	128
 11371  06EA  00A7               	movwf	??_sprintf^(0+128)
 11372  06EB  0834               	movf	(sprintf@width+1)^(0+128),w
 11373  06EC  3A80               	xorlw	128
 11374  06ED  0227               	subwf	??_sprintf^(0+128),w
 11375  06EE  1D03               	skipz
 11376  06EF  2EF2               	goto	u5695
 11377  06F0  0833               	movf	sprintf@width^(0+128),w
 11378  06F1  0243               	subwf	sprintf@prec^(0+128),w
 11379  06F2                     u5695:
 11380  06F2  1803               	skipnc
 11381  06F3  2EF5               	goto	u5691
 11382  06F4  2EF6               	goto	u5690
 11383  06F5                     u5691:
 11384  06F5  2EFF               	goto	l3524
 11385  06F6                     u5690:
 11386  06F6                     l3522:
 11387                           
 11388                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1376:     width -
      +                          = prec;
 11389  06F6  1683               	bsf	3,5	;RP0=1, select bank1
 11390  06F7  1303               	bcf	3,6	;RP1=0, select bank1
 11391  06F8  0843               	movf	sprintf@prec^(0+128),w
 11392  06F9  02B3               	subwf	sprintf@width^(0+128),f
 11393  06FA  0844               	movf	(sprintf@prec+1)^(0+128),w
 11394  06FB  1C03               	skipc
 11395  06FC  03B4               	decf	(sprintf@width+1)^(0+128),f
 11396  06FD  02B4               	subwf	(sprintf@width+1)^(0+128),f
 11397  06FE  2F03               	goto	l3526
 11398  06FF                     l3524:
 11399                           
 11400                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1378:     width =
      +                           0;
 11401  06FF  1683               	bsf	3,5	;RP0=1, select bank1
 11402  0700  1303               	bcf	3,6	;RP1=0, select bank1
 11403  0701  01B3               	clrf	sprintf@width^(0+128)
 11404  0702  01B4               	clrf	(sprintf@width+1)^(0+128)
 11405  0703                     l3526:
 11406                           
 11407                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1407:   if(width 
      +                          > c)
 11408  0703  0834               	movf	(sprintf@width+1)^(0+128),w
 11409  0704  3A80               	xorlw	128
 11410  0705  3C80               	sublw	128
 11411  0706  1D03               	skipz
 11412  0707  2F0A               	goto	u5705
 11413  0708  0833               	movf	sprintf@width^(0+128),w
 11414  0709  0245               	subwf	sprintf@c^(0+128),w
 11415  070A                     u5705:
 11416  070A  1803               	skipnc
 11417  070B  2F0D               	goto	u5701
 11418  070C  2F0E               	goto	u5700
 11419  070D                     u5701:
 11420  070D  2F1A               	goto	l3530
 11421  070E                     u5700:
 11422  070E                     l3528:
 11423                           
 11424                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1408:    width -=
      +                           c;
 11425  070E  1683               	bsf	3,5	;RP0=1, select bank1
 11426  070F  1303               	bcf	3,6	;RP1=0, select bank1
 11427  0710  0845               	movf	sprintf@c^(0+128),w
 11428  0711  00A7               	movwf	??_sprintf^(0+128)
 11429  0712  01A8               	clrf	(??_sprintf^(0+128)+1)
 11430  0713  0827               	movf	??_sprintf^(0+128),w
 11431  0714  02B3               	subwf	sprintf@width^(0+128),f
 11432  0715  0828               	movf	(??_sprintf+1)^(0+128),w
 11433  0716  1C03               	skipc
 11434  0717  03B4               	decf	(sprintf@width+1)^(0+128),f
 11435  0718  02B4               	subwf	(sprintf@width+1)^(0+128),f
 11436  0719  2F1E               	goto	l3532
 11437  071A                     l3530:
 11438                           
 11439                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1410:    width = 
      +                          0;
 11440  071A  1683               	bsf	3,5	;RP0=1, select bank1
 11441  071B  1303               	bcf	3,6	;RP1=0, select bank1
 11442  071C  01B3               	clrf	sprintf@width^(0+128)
 11443  071D  01B4               	clrf	(sprintf@width+1)^(0+128)
 11444  071E                     l3532:
 11445                           
 11446                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1448:   {;C:\Prog
      +                          ram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1450:    if(width
 11447  071E  0833               	movf	sprintf@width^(0+128),w
 11448  071F  0434               	iorwf	(sprintf@width+1)^(0+128),w
 11449  0720  1903               	btfsc	3,2
 11450  0721  2F23               	goto	u5711
 11451  0722  2F24               	goto	u5710
 11452  0723                     u5711:
 11453  0723  2F3F               	goto	l3540
 11454  0724                     u5710:
 11455  0724                     l3534:
 11456                           
 11457                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1456:      ((*sp+
      +                          + = (' ')));
 11458  0724  3020               	movlw	32
 11459  0725  00A7               	movwf	??_sprintf^(0+128)
 11460  0726  0820               	movf	sprintf@sp^(0+128),w
 11461  0727  0084               	movwf	4
 11462  0728  1783               	bsf	3,7
 11463  0729  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 11464  072A  1383               	bcf	3,7
 11465  072B  0827               	movf	??_sprintf^(0+128),w
 11466  072C  0080               	movwf	0
 11467  072D                     l3536:
 11468  072D  3001               	movlw	1
 11469  072E  07A0               	addwf	sprintf@sp^(0+128),f
 11470  072F  1803               	skipnc
 11471  0730  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 11472  0731  3000               	movlw	0
 11473  0732  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 11474  0733                     l3538:
 11475  0733  30FF               	movlw	255
 11476  0734  07B3               	addwf	sprintf@width^(0+128),f
 11477  0735  1803               	skipnc
 11478  0736  0AB4               	incf	(sprintf@width+1)^(0+128),f
 11479  0737  30FF               	movlw	255
 11480  0738  07B4               	addwf	(sprintf@width+1)^(0+128),f
 11481  0739  0833               	movf	sprintf@width^(0+128),w
 11482  073A  0434               	iorwf	(sprintf@width+1)^(0+128),w
 11483  073B  1D03               	btfss	3,2
 11484  073C  2F3E               	goto	u5721
 11485  073D  2F3F               	goto	u5720
 11486  073E                     u5721:
 11487  073E  2F24               	goto	l3534
 11488  073F                     u5720:
 11489  073F                     l3540:
 11490                           
 11491                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1464:    if(flag 
      +                          & 0x03)
 11492  073F  3003               	movlw	3
 11493  0740  0531               	andwf	sprintf@flag^(0+128),w
 11494  0741  00A7               	movwf	??_sprintf^(0+128)
 11495  0742  3000               	movlw	0
 11496  0743  0532               	andwf	(sprintf@flag+1)^(0+128),w
 11497  0744  00A8               	movwf	(??_sprintf+1)^(0+128)
 11498  0745  0827               	movf	??_sprintf^(0+128),w
 11499  0746  0428               	iorwf	(??_sprintf^(0+128)+1),w
 11500  0747  1903               	btfsc	3,2
 11501  0748  2F4A               	goto	u5731
 11502  0749  2F4B               	goto	u5730
 11503  074A                     u5731:
 11504  074A  2FBA               	goto	l3552
 11505  074B                     u5730:
 11506  074B                     l3542:
 11507                           
 11508                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1465:     ((*sp++
      +                           = ('-')));
 11509  074B  302D               	movlw	45
 11510  074C  00A7               	movwf	??_sprintf^(0+128)
 11511  074D  0820               	movf	sprintf@sp^(0+128),w
 11512  074E  0084               	movwf	4
 11513  074F  1783               	bsf	3,7
 11514  0750  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 11515  0751  1383               	bcf	3,7
 11516  0752  0827               	movf	??_sprintf^(0+128),w
 11517  0753  0080               	movwf	0
 11518  0754                     l3544:
 11519  0754  3001               	movlw	1
 11520  0755  07A0               	addwf	sprintf@sp^(0+128),f
 11521  0756  1803               	skipnc
 11522  0757  0AA1               	incf	(sprintf@sp+1)^(0+128),f
 11523  0758  3000               	movlw	0
 11524  0759  07A1               	addwf	(sprintf@sp+1)^(0+128),f
 11525  075A  2FBA               	goto	l3552
 11526  075B                     l3546:
 11527                           
 11528                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1504:    {;C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1515:     c = (val / dpo
      +                          wers[(unsigned int)prec]) % 10 + '0';
 11529  075B  3000               	movlw	0
 11530  075C  1283               	bcf	3,5	;RP0=0, select bank0
 11531  075D  1303               	bcf	3,6	;RP1=0, select bank0
 11532  075E  00A3               	movwf	___llmod@divisor+3
 11533  075F  3000               	movlw	0
 11534  0760  00A2               	movwf	___llmod@divisor+2
 11535  0761  3000               	movlw	0
 11536  0762  00A1               	movwf	___llmod@divisor+1
 11537  0763  300A               	movlw	10
 11538  0764  00A0               	movwf	___llmod@divisor
 11539  0765  1683               	bsf	3,5	;RP0=1, select bank1
 11540  0766  1303               	bcf	3,6	;RP1=0, select bank1
 11541  0767  0843               	movf	sprintf@prec^(0+128),w
 11542  0768  00A7               	movwf	??_sprintf^(0+128)
 11543  0769  3001               	movlw	1
 11544  076A                     u5745:
 11545  076A  1003               	clrc
 11546  076B  0DA7               	rlf	??_sprintf^(0+128),f
 11547  076C  3EFF               	addlw	-1
 11548  076D  1D03               	skipz
 11549  076E  2F6A               	goto	u5745
 11550  076F  1003               	clrc
 11551  0770  0D27               	rlf	??_sprintf^(0+128),w
 11552  0771  3E69               	addlw	low ((_dpowers-__stringbase)| (0+32768))
 11553  0772  0084               	movwf	4
 11554  0773  120A  118A  200D  120A  118A  	fcall	stringdir
 11555  0778  00F0               	movwf	___lldiv@divisor
 11556  0779  120A  118A  200D  120A  118A  	fcall	stringdir
 11557  077E  00F1               	movwf	___lldiv@divisor+1
 11558  077F  120A  118A  200D  120A  118A  	fcall	stringdir
 11559  0784  00F2               	movwf	___lldiv@divisor+2
 11560  0785  120A  118A  200D  120A  118A  	fcall	stringdir
 11561  078A  00F3               	movwf	___lldiv@divisor+3
 11562  078B  083C               	movf	(sprintf@val+3)^(0+128),w
 11563  078C  00F7               	movwf	___lldiv@dividend+3
 11564  078D  083B               	movf	(sprintf@val+2)^(0+128),w
 11565  078E  00F6               	movwf	___lldiv@dividend+2
 11566  078F  083A               	movf	(sprintf@val+1)^(0+128),w
 11567  0790  00F5               	movwf	___lldiv@dividend+1
 11568  0791  0839               	movf	sprintf@val^(0+128),w
 11569  0792  00F4               	movwf	___lldiv@dividend
 11570  0793  160A  158A  235F  120A  118A  	fcall	___lldiv
 11571  0798  0873               	movf	?___lldiv+3,w
 11572  0799  1283               	bcf	3,5	;RP0=0, select bank0
 11573  079A  1303               	bcf	3,6	;RP1=0, select bank0
 11574  079B  00A7               	movwf	___llmod@dividend+3
 11575  079C  0872               	movf	?___lldiv+2,w
 11576  079D  00A6               	movwf	___llmod@dividend+2
 11577  079E  0871               	movf	?___lldiv+1,w
 11578  079F  00A5               	movwf	___llmod@dividend+1
 11579  07A0  0870               	movf	?___lldiv,w
 11580  07A1  00A4               	movwf	___llmod@dividend
 11581  07A2  160A  118A  2001  120A  118A  	fcall	___llmod
 11582  07A7  1283               	bcf	3,5	;RP0=0, select bank0
 11583  07A8  1303               	bcf	3,6	;RP1=0, select bank0
 11584  07A9  0820               	movf	?___llmod,w
 11585  07AA  3E30               	addlw	48
 11586  07AB  1683               	bsf	3,5	;RP0=1, select bank1
 11587  07AC  1303               	bcf	3,6	;RP1=0, select bank1
 11588  07AD  00A8               	movwf	(??_sprintf+1)^(0+128)
 11589  07AE  0828               	movf	(??_sprintf+1)^(0+128),w
 11590  07AF  00C5               	movwf	sprintf@c^(0+128)
 11591  07B0                     l3548:
 11592                           
 11593                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1549:    };C:\Pro
      +                          gram Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1550:    ((*sp++ = (c)))
      +                          ;
 11594  07B0  0845               	movf	sprintf@c^(0+128),w
 11595  07B1  00A7               	movwf	??_sprintf^(0+128)
 11596  07B2  0820               	movf	sprintf@sp^(0+128),w
 11597  07B3  0084               	movwf	4
 11598  07B4  1783               	bsf	3,7
 11599  07B5  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 11600  07B6  1383               	bcf	3,7
 11601  07B7  0827               	movf	??_sprintf^(0+128),w
 11602  07B8  0080               	movwf	0
 11603  07B9  2F54               	goto	l3544
 11604  07BA                     l3552:
 11605                           
 11606                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1500:   while(pre
      +                          c--) {
 11607  07BA  30FF               	movlw	255
 11608  07BB  07C3               	addwf	sprintf@prec^(0+128),f
 11609  07BC  1803               	skipnc
 11610  07BD  0AC4               	incf	(sprintf@prec+1)^(0+128),f
 11611  07BE  30FF               	movlw	255
 11612  07BF  07C4               	addwf	(sprintf@prec+1)^(0+128),f
 11613  07C0  0A43               	incf	sprintf@prec^(0+128),w
 11614  07C1  1D03               	skipz
 11615  07C2  2FC7               	goto	u5751
 11616  07C3  0A44               	incf	(sprintf@prec+1)^(0+128),w
 11617  07C4  1D03               	btfss	3,2
 11618  07C5  2FC7               	goto	u5751
 11619  07C6  2FC8               	goto	u5750
 11620  07C7                     u5751:
 11621  07C7  2F5B               	goto	l3546
 11622  07C8                     u5750:
 11623  07C8                     l3554:
 11624                           
 11625                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
 11626  07C8  3001               	movlw	1
 11627  07C9  07A2               	addwf	sprintf@f^(0+128),f
 11628  07CA  30FF               	movlw	-1
 11629  07CB  0722               	addwf	sprintf@f^(0+128),w
 11630  07CC  0084               	movwf	4
 11631  07CD  120A  118A  200D  120A  118A  	fcall	stringdir
 11632  07D2  00A7               	movwf	??_sprintf^(0+128)
 11633  07D3  0827               	movf	??_sprintf^(0+128),w
 11634  07D4  00C5               	movwf	sprintf@c^(0+128)
 11635  07D5  0845               	movf	sprintf@c^(0+128),w
 11636  07D6  1D03               	btfss	3,2
 11637  07D7  2FD9               	goto	u5761
 11638  07D8  2FDC               	goto	u5760
 11639  07D9                     u5761:
 11640  07D9  160A  118A  2D44   	goto	l3270
 11641  07DC                     u5760:
 11642  07DC                     l3556:
 11643                           
 11644                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 1564:  *sp = 0;
 11645  07DC  0820               	movf	sprintf@sp^(0+128),w
 11646  07DD  0084               	movwf	4
 11647  07DE  1783               	bsf	3,7
 11648  07DF  1C21               	btfss	(sprintf@sp+1)^(0+128),0
 11649  07E0  1383               	bcf	3,7
 11650  07E1  0180               	clrf	0
 11651  07E2                     l391:
 11652  07E2  0008               	return
 11653  07E3                     __end_of_sprintf:

Data Sizes:
    Strings     48
    Constant    144
    Data        1
    BSS         78
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     78      80
    BANK1            80     42      79
    BANK3            96      0      40
    BANK2            96      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_7(CODE[7]), STR_6(CODE[3]), STR_5(CODE[7]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> l(BANK3[20]), c(BANK3[20]), s(BANK1[20]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK1[2]), 

    write@entrada	PTR unsigned char  size(2) Largest target is 512
		 -> RAM(DATA[512]), l(BANK3[20]), STR_4(CODE[4]), c(BANK3[20]), 
		 -> STR_3(CODE[4]), s(BANK1[20]), STR_2(CODE[4]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 20
		 -> l(BANK3[20]), c(BANK3[20]), s(BANK1[20]), STR_1(CODE[19]), 


Critical Paths under _main in COMMON

    _main->___xxtofl
    _sprintf->___lldiv
    _sprintf->___xxtofl
    ___awdiv->___awmod
    _fround->___lwdiv
    ___lwdiv->___lwmod
    ___flmul->___lwdiv
    ___flmul->___xxtofl
    ___llmod->___lldiv
    ___flsub->___xxtofl
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    _sprintf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flmul->___awdiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround

Critical Paths under _main in BANK1

    _main->_sprintf

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0   40366
                                             38 BANK1      4     4      0
                          _INIT_UART
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___flmul
                           ___xxtofl
                              _setup
                            _spiInit
                            _spiRead
                            _sprintf
                              _write
 ---------------------------------------------------------------------------------
 (2) _write                                                4     2      2     620
                                              0 COMMON     4     2      2
 ---------------------------------------------------------------------------------
 (1) _sprintf                                             43    36      7   33033
                                              0 BANK1     38    31      7
                            ___awdiv
                            ___fladd
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _scale
 ---------------------------------------------------------------------------------
 (2) _scale                                               19    15      4    7712
                                             30 BANK0     19    15      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4    1364
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (2) _isdigit                                              2     2      0      68
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (2) _fround                                              20    16      4    6175
                                             30 BANK0     20    16      4
                            ___flmul
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              6     2      4     615
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              8     4      4     618
                                              6 COMMON     8     4      4
                            ___lwmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             26    18      8    4697
                                              4 BANK0     26    18      8
                          __Umul8_16
                            ___awdiv (ARG)
                            ___awmod (ARG)
                            ___lwdiv (ARG)
                            ___lwmod (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (4) __Umul8_16                                            9     7      2     799
                                              0 COMMON     9     7      2
 ---------------------------------------------------------------------------------
 (2) __tdiv_to_l_                                         18    10      8     455
                                              0 COMMON    12     4      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) __div_to_l_                                          15     7      8     455
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4     626
                                              0 COMMON    14    10      4
 ---------------------------------------------------------------------------------
 (2) ___wmul                                               6     2      4     548
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___llmod                                             10     2      8     767
                                              0 BANK0     10     2      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     618
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 (2) ___fltol                                             11     7      4     457
                                             49 BANK0     11     7      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8    2485
                                             70 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fladd                                             20    12      8    2288
                                             50 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flneg                                              4     0      4     121
                                              0 COMMON     4     0      4
 ---------------------------------------------------------------------------------
 (2) ___flge                                              12     4      8     790
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (2) ___fleq                                              12     4      8     394
                                              0 COMMON    12     4      8
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     7     5      2     438
                                              3 COMMON     7     5      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       2     2      0      44
                                              1 COMMON     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       4     3      1     482
                                              4 COMMON     4     3      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             2     2      0      66
                                              4 COMMON     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      44
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              3     3      0      44
                                              1 COMMON     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _INIT_UART                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _INIT_UART
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   ___flmul
     __Umul8_16
     ___awdiv (ARG)
       ___awmod (ARG)
     ___awmod (ARG)
     ___lwdiv (ARG)
       ___lwmod (ARG)
     ___lwmod (ARG)
     ___xxtofl (ARG)
   ___xxtofl
   _setup
   _spiInit
   _spiRead
     _spiReceiveWait
   _sprintf
     ___awdiv
       ___awmod (ARG)
     ___fladd
       _fround (ARG)
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
         ___lwdiv
           ___lwmod (ARG)
         ___lwmod
     ___fleq
     ___flge
     ___flmul
       __Umul8_16
       ___awdiv (ARG)
         ___awmod (ARG)
       ___awmod (ARG)
       ___lwdiv (ARG)
         ___lwmod (ARG)
       ___lwmod (ARG)
       ___xxtofl (ARG)
     ___flneg
     ___flsub
       ___fladd
         _fround (ARG)
           ___flmul
             __Umul8_16
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
             ___lwdiv (ARG)
               ___lwmod (ARG)
             ___lwmod (ARG)
             ___xxtofl (ARG)
           ___lwdiv
             ___lwmod (ARG)
           ___lwmod
       ___xxtofl (ARG)
     ___fltol
       ___flmul (ARG)
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       _scale (ARG)
         ___awdiv
           ___awmod (ARG)
         ___awmod
         ___flmul
           __Umul8_16
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
           ___lwdiv (ARG)
             ___lwmod (ARG)
           ___lwmod (ARG)
           ___xxtofl (ARG)
     ___lldiv
     ___llmod
       ___lldiv (ARG)
     ___wmul
     ___xxtofl
     __div_to_l_
     __tdiv_to_l_
     _fround
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
       ___lwdiv
         ___lwmod (ARG)
       ___lwmod
     _isdigit
     _scale
       ___awdiv
         ___awmod (ARG)
       ___awmod
       ___flmul
         __Umul8_16
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
         ___lwdiv (ARG)
           ___lwmod (ARG)
         ___lwmod (ARG)
         ___xxtofl (ARG)
   _write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0      28       9       41.7%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     2A      4F       7       98.8%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     4E      50       5      100.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      D5      12        0.0%
ABS                  0      0      D5       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 20 20:59:07 2021

                        l9 189A                          _c 0190                          _l 01A4  
                        _n 00CA                          _p 00CE                          _s 00D9  
                        _x 00D2                          pc 0002                _SSPSTATbits 0094  
                       l12 192E                         l21 196D                         _CC 00D6  
                       l15 18C3                         l24 1A31                         l33 1A73  
                       l27 1949               ___awdiv@sign 0021                         fsr 0004  
      ___wmul@multiplicand 0072        __Umul8_16@word_mpld 0076                        l111 1074  
                      l106 18E9                        l141 1C54                        l150 1C92  
                      l135 18FE                        l144 1C6E                        l321 1605  
                      l153 1C98                        l138 1C3A                        l147 1C88  
                      l172 190F                        l173 1914                        l190 18AB  
                      l431 1BC4                        l176 0800                        l361 0482  
                      l179 0806                        l612 093F                        l292 1FFF  
                      l605 086D                        l613 08B1                        l701 1AB7  
                      l623 0932                        l711 19F0                        l391 07E2  
                      l608 0882                        l616 0902                        l561 1B5E  
                      l722 1316                        l651 1056                        l395 199E  
                      l299 0C9E                        l548 1C2D                        l581 1AD4  
                      l397 19B6                        l565 01B9                        l582 1AF0  
                      l590 1D3A                        l726 13BD                        l566 011E  
                      l830 0FF3                        l583 1B05                        l743 1488  
                      l735 153A                        l728 1394                        l576 01AC  
                      l824 0F6B                        l753 14CE                        l569 017C  
                      l586 1CB5                        l594 18B6                        l818 0FFF  
                      l747 14AC                        l764 152E                        l756 150C  
                      l589 1D21                        l765 153A                        l837 00E9  
                      l598 0882                        l862 1D5D                        l839 00FB  
                      l768 1991                        l864 1DF4                        l882 18D5  
                      l875 1DBE                        l876 1DCA                        l868 1DA2  
                      _adc 00D8                        _lmm 00EE                        fsr0 0004  
                      indf 0000               ___awmod@sign 0076               ___flmul@aexp 0036  
             ___flmul@bexp 0037               ___flmul@sign 0031               ___flmul@temp 003C  
             ___flmul@prod 0038               ___fltol@exp1 005B                       l3000 0188  
                     l3010 01B1                       l3002 019A                       l3100 0832  
                     l3020 19A5                       l3102 0833                       l3030 1B6F  
                     l3022 19AC                       l3014 1992                       l3200 194B  
                     l3104 083B                       l3040 1B9E                       l3032 1B72  
                     l3024 19B2                       l3016 1994                       l3008 01A1  
                     l2400 1B0B                       l3210 1967                       l3202 1950  
                     l3122 0862                       l3114 0849                       l3106 083D  
                     l3042 1BAC                       l3034 1B7F                       l3130 100B  
                     l3018 1998                       l2410 1B21                       l2402 1B10  
                     l3220 1A15                       l3212 19F1                       l3204 1955  
                     l3060 1B04                       l3052 1AB8                       l2500 12DA  
                     l3124 0872                       l3108 0841                       l3116 085B  
                     l3044 1BAD                       l3036 1B83                       l3028 1B5F  
                     l3140 103F                       l3132 100E                       l2340 00DF  
                     l2420 1B3D                       l2412 1B24                       l2404 1B12  
                     l3300 15D9                       l2350 1896                       l3214 19F7  
                     l3206 195C                       l3222 1A32                       l3230 18D6  
                     l3054 1ACC                       l3070 1CD1                       l2510 12F4  
                     l2502 12E2                       l3150 1972                       l3126 0877  
                     l3046 1BB6                       l3038 1B8C                       l3142 1048  
                     l3134 101B                       l2342 00E3                       l2430 1B5A  
                     l2422 1B43                       l2414 1B2B                       l2406 1B16  
                     l3302 15EC                       l3216 1A00                       l3208 1962  
                     l3224 1A35                       l3240 18E7                       l3232 18D9  
                     l3056 1AE8                       l3080 1D39                       l3072 1CD5  
                     l3064 1C99                       l2600 13FE                       l2520 130B  
                     l2512 12F8                       l2504 12E7                       l3048 1BBC  
                     l3136 101F                       l3144 104E                       l3128 1001  
                     l3160 1D55                       l2344 00F2                       l2336 00D6  
                     l2440 1A7F                       l2360 1BD3                       l2352 1BC5  
                     l2424 1B4A                       l2416 1B2F                       l2408 1B1B  
                     l3400 033A                       l3320 163F                       l3312 1607  
                     l3304 15F0                       l3218 1A0F                       l3226 1A51  
                     l3242 18E8                       l3234 18DB                       l3250 190B  
                     l3058 1B02                       l3074 1CF9                       l3066 1CAD  
                     l2610 1466                       l2602 1407                       l2530 1324  
                     l2522 130C                       l2514 12F9                       l2506 12ED  
                     l3138 1031                       l3170 1D80                       l3162 1D65  
                     l3154 1D3C                       l2346 00F7                       l2338 00D8  
                     l2450 1AA5                       l2442 1A86                       l2434 1A74  
                     l2370 1BE8                       l2362 1BD7                       l2354 1BC8  
                     l2418 1B33                       l2426 1B50                       l3410 0378  
                     l3402 0344                       l3330 1687                       l3322 164D  
                     l3314 1629                       l3306 1601                       l3228 1A57  
                     l3236 18DC                       l3252 190E                       l3244 1900  
                     l3076 1CFD                       l3068 1CC9                       l3084 18AC  
                     l2612 146B                       l2604 140C                       l2540 1338  
                     l2532 1328                       l2516 12FE                       l2524 130E  
                     l2508 12EE                       l3148 196E                       l3092 0807  
                     l3180 1DB4                       l3172 1D87                       l3156 1D41  
                     l2700 0CDC                       l2452 1AA6                       l2444 1A8A  
                     l2436 1A76                       l2460 19B7                       l2380 1C0B  
                     l2372 1BEB                       l2364 1BDC                       l2356 1BCC  
                     l2428 1B55                       l3420 03A5                       l3412 0383  
                     l3404 035F                       l3340 16C8                       l3332 168B  
                     l3324 1651                       l3316 1637                       l3308 1603  
                     l3260 1C40                       l3254 18EA                       l3238 18DD  
                     l3246 1907                       l3078 1D37                       l3086 18B4  
                     l2630 14B3                       l2622 149E                       l2606 1422  
                     l2614 147A                       l2550 134C                       l2542 133C  
                     l2534 132C                       l2526 131C                       l2518 1303  
                     l3094 0814                       l3190 1DE7                       l3182 1DB8  
                     l3174 1D8B                       l3166 1D6E                       l3158 1D45  
                     l2710 0CF1                       l2702 0CDD                       l2454 1AAD  
                     l2446 1A8E                       l2438 1A7C                       l2470 19CF  
                     l2462 19BD                       l2390 1C24                       l2382 1C11  
                     l2374 1BF2                       l2366 1BE0                       l2358 1BD1  
                     l3510 06C1                       l3502 0696                       l3422 03AE  
                     l3406 0365                       l3350 174F                       l3342 16DB  
                     l3334 16A4                       l3326 166A                       l3318 163B  
                     l3270 1544                       l3262 1C5A                       l3256 18FC  
                     l3248 1909                       l3088 18B6                       l2640 14C1  
                     l2632 14B5                       l2624 14A7                       l2616 1490  
                     l2608 1460                       l2552 1350                       l2544 1340  
                     l2536 1330                       l2528 1320                       l2560 1360  
                     l3192 1DEB                       l3184 1DC2                       l3176 1D99  
                     l3168 1D73                       l2800 0FCD                       l2720 0D0C  
                     l2712 0CF9                       l2704 0CE2                       l2448 1A9F  
                     l2456 1AB3                       l2472 19D9                       l2464 19C0  
                     l2392 1C29                       l2384 1C12                       l2376 1BF6  
                     l2368 1BE2                       l3520 06E8                       l3512 06CA  
                     l3504 06A0                       l3440 0459                       l3424 03B5  
                     l3432 043A                       l3408 0371                       l3416 038A  
                     l3360 17A3                       l3352 1768                       l3344 16DF  
                     l3336 16AF                       l3328 1683                       l3280 156E  
                     l3272 154A                       l3264 1C74                       l3600 115B  
                     l2650 14D8                       l2642 14C5                       l2634 14BA  
                     l2626 14AB                       l2618 1495                       l2570 13A3  
                     l2562 1361                       l2554 1354                       l2546 1344  
                     l2538 1334                       l2490 12C5                       l2482 12B3  
                     l3098 081D                       l3194 1DEC                       l3186 1DCC  
                     l3178 1DA9                       l2810 0FEC                       l2802 0FD7  
                     l2730 0D8E                       l2722 0D1C                       l2714 0CFE  
                     l2706 0CE7                       l2474 19DF                       l2466 19C7  
                     l2386 1C19                       l2378 1BFA                       l3530 071A  
                     l3522 06F6                       l3514 06D2                       l3506 06AB  
                     l3450 0490                       l3442 0466                       l3434 0442  
                     l3426 03F0                       l3418 0397                       l3370 020B  
                     l3362 17EA                       l3354 1771                       l3346 16E5  
                     l3338 16B5                       l3282 1572                       l3290 15AE  
                     l3274 1553                       l3266 1C8E                       l3258 1C2E  
                     l3610 11EA                       l3602 1171                       l2820 191F  
                     l2660 1516                       l2652 14E6                       l2644 14CB  
                     l2628 14B0                       l2636 14BC                       l2580 13C1  
                     l2572 13A7                       l2564 1378                       l2556 1358  
                     l2548 1348                       l2492 12CA                       l2484 12BA  
                     l3188 1DE2                       l2812 0FF7                       l2804 0FD9  
                     l2740 0DFC                       l2732 0DAA                       l2724 0D29  
                     l2716 0D03                       l2708 0CEF                       l2476 19E6  
                     l2468 19CB                       l2900 18C6                       l2388 1C1F  
                     l2396 1B06                       l3540 073F                       l3532 071E  
                     l3524 06FF                       l3516 06DE                       l3508 06B2  
                     l3460 0592                       l3452 0499                       l3444 0475  
                     l3436 044D                       l3428 042F                       l3372 0226  
                     l3364 01BA                       l3356 178C                       l3348 1704  
                     l3292 15BC                       l3284 1587                       l3276 155A  
                     l3268 153B                       l3620 120E                       l3612 11F4  
                     l3604 11C0                       l2822 1922                       l3198 18B7  
                     l2830 1939                       l2670 152A                       l2662 151E  
                     l2654 14EA                       l2590 13EA                       l2638 14C0  
                     l2582 13C6                       l2574 13A8                       l2566 1398  
                     l2558 135C                       l2494 12CF                       l2486 12C0  
                     l2910 0883                       l2806 0FE7                       l2750 0E8C  
                     l2742 0E0C                       l2734 0DC6                       l2726 0D46  
                     l2478 19EC                       l2902 18CC                       l2398 1B07  
                     l3542 074B                       l3534 0724                       l3526 0703  
                     l3518 06E4                       l3470 060E                       l3462 059C  
                     l3454 049F                       l3446 047C                       l3438 0453  
                     l3390 0301                       l3382 0274                       l3374 022F  
                     l3366 01D5                       l3358 1794                       l3294 15BD  
                     l3286 159A                       l3278 155E                       l3630 1238  
                     l3622 1218                       l3614 11F7                       l3606 11CA  
                     l2824 192B                       l2816 1916                       l2832 193C  
                     l2672 1535                       l2664 1523                       l2656 1508  
                     l2648 14D3                       l2592 13EE                       l2576 13B1  
                     l2568 13A1                       l2496 12D7                       l2488 12C4  
                     l2912 0896                       l2808 0FEB                       l2760 0F20  
                     l2752 0E9C                       l2744 0E29                       l2736 0DCF  
                     l2728 0D62                       l2680 0CAC                       l2840 1DF8  
                     l2904 18D2                       l3544 0754                       l3552 07BA  
                     l3536 072D                       l3528 070E                       l3480 0636  
                     l3472 0614                       l3464 05A2                       l3456 0518  
                     l3448 048B                       l3376 0237                       l3368 01FC  
                     l3384 027D                       l3296 15C1                       l3288 159E  
                     l3640 125E                       l3632 1243                       l3624 121B  
                     l3616 1201                       l3608 11E1                       l2818 1919  
                     l2834 1941                       l2826 1930                       l2674 1539  
                     l2666 1524                       l2658 1511                       l2594 13F7  
                     l2586 13CF                       l2578 13B5                       l2498 12D8  
                     l2930 08D2                       l2922 08B2                       l2770 0F45  
                     l2762 0F2E                       l2754 0EC9                       l2746 0E42  
                     l2738 0DDF                       l2690 0CC3                       l2682 0CB0  
                     l2850 1F11                       l2842 1DFE                       l2906 18D4  
                     l3546 075B                       l3538 0733                       l3490 0657  
                     l3482 063A                       l3474 061A                       l3458 0553  
                     l3466 05FD                       l3386 02B2                       l3378 0255  
                     l3298 15C4                       l3554 07C8                       l3650 1289  
                     l3642 126D                       l3634 1247                       l3626 122A  
                     l3618 1204                       l3570 1057                       l2836 1944  
                     l2828 1933                       l3564 18A3                       l2668 1528  
                     l2596 13F9                       l2588 13E6                       l2940 08FC  
                     l2932 08DB                       l2924 08B8                       l2916 089F  
                     l2780 0F68                       l2764 0F37                       l2772 0F4B  
                     l2756 0EEF                       l2748 0E5F                       l2692 0CC5  
                     l2684 0CB1                       l2676 0C9F                       l2860 0947  
                     l3548 07B0                       l3492 065D                       l3484 063E  
                     l3468 0605                       l3396 0303                       l3388 02FF  
                     l3476 0621                       l3556 07DC                       l3652 1293  
                     l3644 1278                       l3636 1251                       l3628 1235  
                     l3580 10A0                       l3572 107C                       l2838 0800  
                     l3566 18A8                       l2598 13FD                       l2942 0906  
                     l2950 0920                       l2934 08E9                       l2926 08C7  
                     l2790 0F87                       l2774 0F4F                       l2766 0F3B  
                     l2758 0F17                       l2694 0CCD                       l2686 0CB6  
                     l2678 0CA6                       l2854 1FBC                       l2870 0A38  
                     l2862 0949                       l3486 0649                       l3478 0632  
                     l3654 129D                       l3646 127B                       l3638 125B  
                     l3590 110A                       l3582 10A9                       l3574 1085  
                     l2936 08F3                       l2928 08C9                       l2792 0FA0  
                     l2784 0F70                       l2776 0F50                       l2768 0F3C  
                     l2696 0CD2                       l2688 0CBB                       l2848 1F0B  
                     l2872 0A3F                       l2864 0950                       l2880 0AF4  
                     l3488 064F                       l3656 12A0                       l3648 1286  
                     l3592 1112                       l3584 10B2                       l3576 108E  
                     l2962 00FC                       l2938 08F4                       l2786 0F75  
                     l2794 0FA6                       l2778 0F54                       l2698 0CD8  
                     l2890 0BEA                       l2882 0AFB                       l2858 0943  
                     l3498 065F                       l3594 1129                       l3586 10BB  
                     l3578 1097                       l2980 013A                       l2964 0109  
                     l2956 0927                       l2948 090E                       l2796 0FB3  
                     l2788 0F83                       l2876 0AC7                       l3596 1132  
                     l3588 10C4                       l2990 016D                       l2982 0143  
                     l2974 011F                       l2958 0937                       l2798 0FBE  
                     l2894 0C72                       l3678 161B                       l3598 1151  
                     l2992 0176                       l2984 014C                       l2976 0127  
                     l2968 0112                       l2888 0BE3                       l2994 0180  
                     l2986 015E                       l2978 0138                       l2898 18C5  
                     l2988 016C                       STR_1 00A3                       STR_2 00C4  
                     STR_3 00C8                       STR_4 00CC                       STR_5 00BD  
                     STR_6 00D0                       STR_7 00B6                       u3000 1C1F  
                     u3001 1C1E                       u3010 1C24                       u3011 1C23  
                     u3100 1B55                       u3020 1B0B                       u3101 1B54  
                     u3021 1B0A                       u3110 1A7C                       u3030 1B16  
                     u3111 1A7B                       u3031 1B15                       u4000 0F6F  
                     u3200 19CF                       u3040 1B21                       u4001 0F6E  
                     u3201 19CE                       u3041 1B20                       u4010 0F75  
                     u3130 1A8E                       u3210 19D9                       u4011 0F74  
                     u3131 1A8D                       u3211 19D8                       u3300 1303  
                     u4020 0F87                       u3060 1B33                       u3301 1302  
                     u4021 0F86                       u3125 1A80                       u3061 1B32  
                     u3310 131C                       u4030 0F96                       u3150 1A9F  
                     u3230 19EC                       u3070 1B3D                       u3311 131B  
                     u3151 1A9E                       u3231 19EB                       u3215 19D5  
                     u3071 1B3C                       u3055 1B25                       u3400 13C1  
                     u3320 1320                       u3240 12C4                       u5000 1D45  
                     u4040 0FB3                       u4120 1F11                       u3401 13C0  
                     u3321 131F                       u3241 12C3                       u5001 1D44  
                     u4041 0FB2                       u3145 1A8F                       u3225 19E0  
                     u4121 1F10                       u4105 1E75                       u3410 13C6  
                     u3330 1378                       u3250 12CA                       u5010 1D65  
                     u4050 0FCD                       u3170 1AB3                       u3090 1B50  
                     u4210 0A3F                       u3411 13C5                       u3331 1377  
                     u3251 12C9                       u5011 1D64                       u4051 0FCC  
                     u4035 0F91                       u3171 1AB2                       u3155 1A9B  
                     u4115 1ECA                       u3091 1B4F                       u3075 1B39  
                     u4211 0A3E                       u3500 146B                       u3340 1383  
                     u3260 12CF                       u5100 1DD7                       u4060 0FEB  
                     u3180 19BD                       u3501 146A                       u3421 13D8  
                     u3341 1381                       u3261 12CE                       u4061 0FEA  
                     u4045 0FAF                       u3165 1AA7                       u3181 19BC  
                     u3085 1B44                       u4205 09F7                       u4070 0806  
                     u3510 1490                       u3430 13EA                       u3422 13DF  
                     u3350 1384                       u3270 12ED                       u5110 1DE7  
                     u5030 1D86                       u4071 0805                       u3511 148F  
                     u3431 13E9                       u3423 13E6                       u3335 1374  
                     u3271 12EC                       u5111 1DE6                       u5031 1D85  
                     u4055 0FC9                       u4135 1F2E                       u3600 14D2  
                     u3520 1495                       u3440 13EE                       u3360 1398  
                     u3280 12F8                       u5120 1DEB                       u4400 0902  
                     u4080 1DFE                       u4160 0947                       u5200 1C5A  
                     u3601 14D1                       u3521 1494                       u3441 13ED  
                     u3361 1397                       u3281 12F7                       u5121 1DEA  
                     u5105 1DD2                       u5025 1D78                       u4401 0901  
                     u4145 1F7B                       u4081 1DFD                       u4305 0BFD  
                     u4225 0A52                       u4161 0946                       u5201 1C59  
                     u5130 1950                       u3610 14D8                       u3450 13FD  
                     u3370 13A7                       u3290 12FE                       u5050 1DA8  
                     u4410 0906                       u4330 18CC                       u4250 0AFB  
                     u4170 0950                       u5210 1C74                       u5131 194F  
                     u3611 14D7                       u3451 13FC                       u3371 13A6  
                     u3291 12FD                       u5051 1DA7                       u4411 0905  
                     u3195 19C1                       u4155 1FC7                       u4331 18CB  
                     u4315 0C39                       u4251 0AFA                       u4235 0A8E  
                     u4171 094F                       u5211 1C73                       u5140 1962  
                     u3620 14EA                       u3540 14AB                       u4420 090D  
                     u3700 0CB0                       u4340 18D2                       u5300 163B  
                     u5220 1C8E                       u5141 1961                       u3621 14E9  
                     u3541 14AA                       u5045 1D9A                       u4421 090C  
                     u3701 0CAF                       u4341 18D1                       u4325 0C75  
                     u4245 0ACA                       u5301 163A                       u5221 1C8D  
                     u5150 1A3F                       u3630 14F9                       u3550 14B0  
                     u3470 1422                       u3390 13BD                       u5070 1DB8  
                     u4510 015E                       u4350 0896                       u2910 00F7  
                     u3710 0CB6                       u5310 166A                       u5230 1C98  
                     u3551 14AF                       u3535 14A0                       u3471 1421  
                     u3391 13BC                       u5071 1DB7                       u4511 015D  
                     u4351 0895                       u2911 00F6                       u3711 0CB5  
                     u4095 1E1B                       u5311 1669                       u5231 1C97  
                     u5160 1A61                       u3640 1508                       u3560 14BA  
                     u5080 1DBE                       u4600 01B1                       u4440 091F  
                     u4360 08B0                       u3720 0CBB                       u2920 1BCC  
                     u5400 020B                       u5320 16A4                       u5240 154A  
                     u3641 1507                       u3561 14B9                       u3481 1439  
                     u3473 141E                       u3465 1400                       u3385 13AA  
                     u5081 1DBD                       u5065 1DAD                       u4601 01B0  
                     u4505 0145                       u4441 091E                       u4361 08AF  
                     u2905 00EA                       u3801 0D9C                       u3721 0CBA  
                     u2921 1BCB                       u4265 0B1B                       u4185 0970  
                     u5401 020A                       u5321 16A3                       u5241 1549  
                     u5170 1A73                       u3650 1511                       u3570 14C0  
                     u3490 144D                       u3482 143A                       u4610 1998  
                     u5090 1DC2                       u4530 017C                       u4450 0926  
                     u3802 0DA3                       u3730 0CDC                       u2930 1BD7  
                     u4290 0BEA                       u5410 0226                       u5330 16DF  
                     u5250 156E                       u5171 1A72                       u3651 1510  
                     u3635 14F4                       u3571 14BF                       u3491 144E  
                     u3483 143F                       u4611 1997                       u5091 1DC1  
                     u4531 017B                       u4515 015A                       u4451 0925  
                     u4435 090F                       u3811 0DB8                       u3803 0DAA  
                     u3731 0CDB                       u2931 1BD6                       u4291 0BE9  
                     u4275 0B57                       u4195 09AC                       u5411 0225  
                     u5331 16DE                       u5251 156D                       u5180 1907  
                     u3660 1516                       u3580 14C5                       u3492 1453  
                     u3484 1440                       u4540 0180                       u4380 08E9  
                     u3812 0DBF                       u3740 0CE2                       u2940 1BE8  
                     u5500 0441                       u5340 1768                       u5260 15AE  
                     u5181 1906                       u3661 1515                       u3581 14C4  
                     u3493 1454                       u3485 1445                       u4541 017F  
                     u4525 016F                       u4381 08E8                       u3901 0EE1  
                     u3813 0DC6                       u3741 0CE1                       u2941 1BE7  
                     u4285 0BA2                       u5501 0440                       u5405 0207  
                     u5341 1767                       u5261 15AD                       u3670 1523  
                     u3590 14CB                       u3486 1446                       u4710 1BBC  
                     u4550 0187                       u4470 0937                       u3910 0EFD  
                     u3902 0EE8                       u3750 0CE7                       u5510 0466  
                     u5430 0339                       u5350 178C                       u5270 15BC  
                     u5190 1C40                       u3671 1522                       u3591 14CA  
                     u4711 1BBB                       u4551 0186                       u4471 0936  
                     u4375 08D4                       u3903 0EEF                       u3831 0DEE  
                     u3751 0CE6                       u5511 0465                       u5431 0338  
                     u5351 178B                       u5271 15BB                       u5191 1C3F  
                     u4720 1ACC                       u3680 1528                       u4640 19B2  
                     u4480 0109                       u3832 0DF5                       u3760 0CFE  
                     u2960 1BFA                       u5600 0657                       u5520 0475  
                     u5440 0344                       u5360 17A3                       u5280 1600  
                     u4721 1ACB                       u4801 1D0C                       u3681 1527  
                     u4705 1BAE                       u4641 19B1                       u4625 199F  
                     u4481 0108                       u4465 0929                       u4385 08E5  
                     u3921 0F09                       u3841 0E1B                       u3833 0DFC  
                     u3825 0DC8                       u3761 0CFD                       u2961 1BF9  
                     u5601 0656                       u5521 0474                       u5441 0343  
                     u5425 0306                       u5361 17A2                       u5281 15FF  
                     u4730 1AE8                       u4810 1D37                       u4802 1D0D  
                     u3690 1539                       u4650 1B6F                       u4570 0199  
                     u4490 011D                       u2890 00E3                       u3922 0F10  
                     u3842 0E22                       u3770 0D03                       u5530 0490  
                     u5450 035F                       u5370 01BA                       u5290 1637  
                     u4731 1AE7                       u4811 1D36                       u4803 1D12  
                     u3691 1538                       u4651 1B6E                       u4635 19A6  
                     u4571 0198                       u4491 011C                       u4395 08F5  
                     u2891 00E2                       u3923 0F17                       u3915 0EF8  
                     u3843 0E29                       u3771 0D02                       u2955 1BEC  
                     u5531 048F                       u5515 0462                       u5451 035E  
                     u5435 0335                       u5371 17FA                       u5291 1634  
                     u4740 1B02                       u4804 1D13                       u4820 18B4  
                     u4580 01A0                       u2980 1C0B                       u5700 070E  
                     u5620 0695                       u5460 0371                       u5380 01D5  
                     u4741 1B01                       u4805 1D18                       u4821 18B3  
                     u4581 019F                       u4565 0189                       u3861 0E51  
                     u3781 0D54                       u2981 1C0A                       u5701 070D  
                     u5621 0694                       u5525 0471                       u5461 0370  
                     u5381 01D4                       u5365 179F                       u4806 1D19  
                     u4750 1CAD                       u4910 0872                       u4830 0814  
                     u4670 1B83                       u3950 0F3B                       u3862 0E58  
                     u3782 0D5B                       u5710 0724                       u5630 06A0  
                     u5470 0397                       u5390 01FC                       u4815 1D33  
                     u4751 1CAC                       u4911 0871                       u4831 0813  
                     u4671 1B82                       u3951 0F3A                       u3935 0F19  
                     u3871 0E7E                       u3863 0E5F                       u3855 0E2B  
                     u3791 0D70                       u3783 0D62                       u2975 1BFB  
                     u5711 0723                       u5631 069F                       u5615 0662  
                     u5471 0396                       u5391 01FB                       u5375 17F5  
                     u4760 1CC9                       u4920 0877                       u4840 082B  
                     u3872 0E85                       u3792 0D77                       u5720 073F  
                     u5640 06AB                       u5560 0604                       u5480 03A5  
                     u4745 1AFE                       u4761 1CC8                       u4921 0876  
                     u4905 0864                       u4665 1B74                       u3945 0F30  
                     u3881 0EAB                       u3873 0E8C                       u3793 0D7E  
                     u2985 1C07                       u5721 073E                       u5705 070A  
                     u5641 06AA                       u5625 0691                       u5561 0603  
                     u5545 051B                       u5481 03A4                       u4770 1CD5  
                     u4850 0841                       u4690 1B9E                       u4930 100B  
                     u3970 0F4F                       u3890 0ED5                       u3882 0EB2  
                     u5730 074B                       u5650 06C1                       u5570 0620  
                     u4771 1CD4                       u4851 0840                       u4691 1B9D  
                     u4931 100A                       u4595 01A3                       u3971 0F4E  
                     u3883 0EB9                       u2995 1C13                       u5731 074A  
                     u5651 06C0                       u5571 061F                       u5555 05A5  
                     u5475 0393                       u4860 0848                       u3980 0F54  
                     u5660 06D2                       u5580 063A                       u4781 1CE4  
                     u4861 0847                       u4845 0826                       u4685 1B85  
                     u3981 0F53                       u3965 0F3E                       u5661 06D1  
                     u5645 06A7                       u5581 0639                       u4790 1CFD  
                     u4782 1CE5                       u4950 101F                       u3990 0F68  
                     u5750 07C8                       u5670 06DE                       u5590 064F  
                     u4791 1CFC                       u4783 1CEA                       u4695 1B9A  
                     u4951 101E                       u3991 0F67                       u3895 0ED0  
                     u5751 07C7                       u5671 06DD                       u5655 06BD  
                     u5591 064E                       u5495 03B8                       u5807 1223  
                     u4784 1CEB                       u4880 085A                       u4960 1031  
                     u5760 07DC                       u5680 06E8                       u4785 1CF0  
                     u4881 0859                       u4961 1030                       u4945 1010  
                     u5761 07D9                       u5745 076A                       u5681 06E7  
                     u5817 1230                       u4786 1CF1                       u4890 0861  
                     u5690 06F6                       u5907 1946                       u4891 0860  
                     u4875 084A                       u5691 06F5                       u5827 123E  
                     u4980 104E                       u5917 19FB                       u4981 104D  
                     u4965 102D                       u5837 1257                       u4990 1D41  
                     u5927 1A0A                       u4975 1040                       u4991 1D40  
                     u5695 06F2                       u5847 1266                       u5937 1A17  
                     u5857 1273                       u5777 11F0                       u5947 1926  
                     u5867 1281                       u5787 11FD                       u5877 1299  
                     u5797 1214                       u5887 12A8                       u5897 193E  
                     _TRMT 04C1          ?_Lcd_Write_String 0073                       _main 1057  
                     btemp 007E                       start 0000         ??_Lcd_Write_String 0075  
             _sprintf$1254 00AC            __end_of_Lcd_Cmd 192F         __size_of_INIT_UART 0015  
            ___fltol@sign1 005A            __end_of___fladd 153B                      ?_main 0070  
          __end_of___awdiv 1C2E            __end_of___flneg 18B7            __end_of___awmod 1B5F  
          __end_of___flmul 1000            __end_of___flsub 1992            __end_of___fltol 0883  
                    _ANSEL 0188            __end_of___lldiv 1BC5            ___awdiv@divisor 0077  
          __end_of___llmod 1057            __end_of___lwdiv 1AB8            __end_of___lwmod 19F1  
          ___awdiv@counter 0020                      _SPBRG 0099                      _PORTB 0006  
                    _PORTC 0007                      _PORTD 0008                      _PORTE 0009  
  __size_of_Lcd_Set_Cursor 0024                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TRISE 0089                      _TXREG 0019  
          __end_of_dpowers 00A3                      _count 00ED                      _scale 0940  
          __end_of_isdigit 18D6                      _setup 18D6                      _write 1C2E  
                    pclath 000A            __end_of_spiInit 1915            __end_of_spiRead 18AC  
                    status 0003                      wtemp0 007E            __end_of_sprintf 07E3  
         __end_of_Lcd_Init 1A32           __end_of_Lcd_Port 189B            __initialization 07E3  
             __end_of_main 12B3                     ??_main 00C6         __size_of_Lcd_Clear 000D  
     __size_of__tdiv_to_l_ 00BD          __end_of_INIT_UART 18FF           ___llmod@dividend 0024  
                   ?_scale 003E           ___awdiv@dividend 0079                     ?_setup 0070  
                   ?_write 0070                  ??_Lcd_Cmd 0071    __size_of_Lcd_Write_Char 001B  
                   _TRISC3 043B                     _TRISC5 043D                     _SSPBUF 0013  
                   _SSPCON 0014           __end_of___xxtofl 1DF5           __end_of__powers_ 0047  
                   ___flge 1C99                     ___fleq 1AB8                  ??___fladd 005A  
                   ___wmul 1992                  ??___awdiv 007B                  ??___flneg 0074  
                ??___awmod 0074                  ??___flmul 002C                  ??___flsub 007E  
                ??___fltol 0055                  ??___lldiv 0078                  ??___llmod 0028  
                ??___lwdiv 007A                  ??___lwmod 0074                     _fround 1DF5  
         ___awdiv@quotient 0022            ___awmod@divisor 0070            ___awmod@counter 0075  
                ??_isdigit 0070         __size_of__Umul8_16 0027                  ??_spiInit 0073  
                ??_spiRead 0070                  ??_sprintf 00A7            Lcd_Set_Cursor@a 0076  
          Lcd_Set_Cursor@b 0074                 ___flge@ff1 0070                 ___flge@ff2 0074  
             ___xxtofl@arg 007A               ___xxtofl@exp 0079               ___xxtofl@val 0070  
               ___fleq@ff1 0070                 ___fleq@ff2 0074    __end_of__initialization 07FC  
               ___flneg@f1 0070          __end_of_Lcd_Clear 18C4                 ___fltol@f1 0051  
           __pcstackCOMMON 0070               __pidataBANK0 00D4              __end_of_scale 0C9F  
            __end_of_setup 18EA              __end_of_write 1C99             _Lcd_Set_Cursor 194A  
               __div_to_l_ 00FC                 _banderaADC 006F                  ?_Lcd_Init 0070  
                ?_Lcd_Port 0070            __div_to_l_@exp1 0025            __div_to_l_@cntr 0024  
                  ??_scale 0042            __div_to_l_@quot 0020               sprintf@width 00B3  
                  ??_setup 0070                    ??_write 0072                 __pbssBANK0 006E  
               __pbssBANK1 00CA                 __pbssBANK3 0190              __div_to_l_@f1 0070  
            __div_to_l_@f2 0074          __end_of__Umul8_16 00FC                 __pmaintext 1057  
                  ?___flge 0070                    ?___fleq 0070                    ?___wmul 0070  
  __size_of_spiReceiveWait 0007                    ?_fround 003E  __size_of_Lcd_Write_String 0042  
   __end_of_Lcd_Set_Cursor 196E                  ?___xxtofl 0070                 ??_Lcd_Init 0074  
               ??_Lcd_Port 0070                    _SSPSTAT 0094                 __stringtab 0003  
           _Lcd_Write_Char 192F                    _Lcd_Cmd 1915          __end_of__npowers_ 007B  
               _scale$1253 004C            __size_of___flge 00A2            __size_of___fleq 004E  
                  ___fladd 12B3                    ___awdiv 1BC5                    ___flneg 18AC  
                  ___awmod 1B06                    ___flmul 0C9F                    ___flsub 196E  
                  ___fltol 0807                    ___lldiv 1B5F            __size_of___wmul 0025  
                  ___llmod 1001                    ___lwdiv 1A74                    ___lwmod 19B7  
          __size_of_fround 020B            ?_Lcd_Set_Cursor 0074                    __ptext1 1C2E  
                  __ptext2 153B                    __ptext3 0940                    __ptext4 1B06  
                  __ptext5 1BC5                    __ptext6 18C4                    __ptext7 1DF5  
                  __ptext8 19B7                    __ptext9 1A74                ?__div_to_l_ 0070  
                  _dpowers 007B                    _isdigit 18C4                    _mensaje 006E  
               ??___xxtofl 0074           ___awmod@dividend 0072                    _spiInit 18FF  
                  _spiRead 18A3                    _sprintf 153B                    clrloop0 189C  
   __end_of_Lcd_Write_Char 194A       end_of_initialization 07FC                  _INIT_UART 18EA  
          ___lldiv@divisor 0070               write@entrada 0070            ___lldiv@counter 007D  
                _RCSTAbits 0018                    psplit$0 F0032                  Lcd_Port@a 0070  
           __tdiv_to_l_@f1 0070             __tdiv_to_l_@f2 0074              ??__tdiv_to_l_ 0078  
                _PORTAbits 0005                  _PORTCbits 0007                  _PORTEbits 0009  
              ___fladd@grs 0065              ___xxtofl@sign 0078                  _TRISCbits 0087  
          ?_Lcd_Write_Char 0070          Lcd_Write_String@a 0073          Lcd_Write_String@i 0078  
               ?_INIT_UART 0070                ___flmul@grs 0032                  _TXSTAbits 0098  
      __size_of__div_to_l_ 00BE                  _Lcd_Clear 18B7             _spiReceiveWait 0800  
           __end_of___flge 1D3B             __end_of___fleq 1B06             __end_of___wmul 19B7  
         _Lcd_Write_String 1A32                _BAUDCTLbits 0187          pnum$text2_split_1 0032  
           __end_of_fround 2000        start_initialization 07E3        __end_of__tdiv_to_l_ 0940  
        __size_of_Lcd_Init 0041          __size_of_Lcd_Port 0006            ___llmod@divisor 0020  
          ___llmod@counter 0029     __end_of_spiReceiveWait 0807                 ?_Lcd_Clear 0070  
                 ??___flge 0078                   ??___fleq 0078                   ??___wmul 0074  
                __Umul8_16 00D5                __pdataBANK0 006F            Lcd_Write_Char@a 0072  
                 ??_fround 0042              sprintf@tmpval 00B5                  ___fladd@a 0056  
                ___fladd@b 0052                 fround@prec 0051                  ___flmul@a 0028  
                ___flmul@b 0024                  ___flsub@a 0066                  ___flsub@b 006A  
                ___latbits 0002              __pcstackBANK0 0020              __pcstackBANK1 00A0  
        __size_of___xxtofl 00BA               _isdigit$1058 0070                ??_INIT_UART 0070  
                 ?_Lcd_Cmd 0070                sprintf@flag 00B1                sprintf@eexp 00BD  
              sprintf@fval 00BF                sprintf@prec 00C3           ___lwdiv@dividend 0078  
          ?_spiReceiveWait 0070           ??_Lcd_Set_Cursor 0075                   ?___fladd 0052  
                 ?___awdiv 0077                   ?___flneg 0070                   ?___awmod 0070  
                 ?___flmul 0024                   ?___flsub 0066                   ?___fltol 0051  
                 ?___lldiv 0070                   ?___llmod 0020                  __npowers_ 0047  
               ?__Umul8_16 0070                   ?___lwdiv 0076                   ?___lwmod 0070  
                __pstrings 0003                __tdiv_to_l_ 0883               ??__div_to_l_ 0078  
                 ?_isdigit 0070                   ?_spiInit 0070                   ?_spiRead 0070  
         ___lwdiv@quotient 007B                   ?_sprintf 00A0             __size_of_scale 035F  
           __size_of_setup 0014             __size_of_write 006B       spiInit@sTransmitEdge 0072  
           ___wmul@product 0074                  clear_ram0 189B                   _PIE1bits 008C  
       spiInit@sDataSample 0070                   Lcd_Cmd@a 0073         __end_of__div_to_l_ 01BA  
              ??_Lcd_Clear 0074                __stringbase 0012          ___wmul@multiplier 0070  
         ??_Lcd_Write_Char 0071                   _Lcd_Init 19F1                   _Lcd_Port 1895  
 __end_of_Lcd_Write_String 1A74           __size_of_Lcd_Cmd 001A                ??__Umul8_16 0072  
         __size_of___fladd 0288           __size_of___awdiv 0069           __size_of___flneg 000B  
         __size_of___awmod 0059           __size_of___flmul 0361           __size_of___flsub 0024  
         __size_of___fltol 007C           __size_of___lldiv 0066           __size_of___llmod 0056  
         __size_of___lwdiv 0044           __size_of___lwmod 003A                _fround$1251 004D  
              _fround$1252 0049         __end_of__stringtab 0013                 sprintf@val 00B9  
                 ___xxtofl 1D3B           __size_of_isdigit 0012            ___lwdiv@divisor 0076  
          ___lwdiv@counter 007D                   __ptext10 0C9F                   __ptext11 00D5  
                 __ptext20 12B3                   __ptext12 0883                   __ptext21 18AC  
                 __ptext13 00FC                   __ptext30 194A                   __ptext22 1C99  
                 __ptext14 1D3B                   __ptext31 19F1                   __ptext23 1AB8  
                 __ptext15 1992                   __ptext32 18B7                   __ptext24 18A3  
                 __ptext16 1001                   __ptext33 1915                   __ptext25 0800  
                 __ptext17 1B5F                   __ptext34 1895                   __ptext26 18FF  
                 __ptext18 0807                   __ptext35 18EA                   __ptext27 18D6  
                 __ptext19 196E                   __ptext28 1A32                   __ptext29 192F  
         __size_of_spiInit 0016           __size_of_spiRead 0009                   __powers_ 0013  
                 _esclavo1 00D7           __size_of_sprintf F2A8              __size_of_main 025C  
                pnum$text2 000F               spiInit@sType 0073          spiInit@sClockIdle 0071  
               _INTCONbits 000B                   isdigit@c 0071                   scale@scl 0050  
                sprintf@ap 00B0           __tdiv_to_l_@exp1 0025           __tdiv_to_l_@cntr 0024  
                sprintf@sp 00A0           __tdiv_to_l_@quot 0020           ___lwmod@dividend 0072  
         ___lldiv@dividend 0074           ??_spiReceiveWait 0070                  stringcode 000D  
       Lcd_Set_Cursor@temp 0077               ?__tdiv_to_l_ 0070     __Umul8_16@multiplicand 0070  
                 sprintf@c 00C5                   sprintf@f 00A2           ___lldiv@quotient 0079  
          ___lwmod@divisor 0070            ___lwmod@counter 0075                   stringdir 000D  
                 stringtab 0003              ___fladd@signs 0062               ___fladd@aexp 0063  
             ___fladd@bexp 0064       __Umul8_16@multiplier 0078          __Umul8_16@product 0074  
