

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sat Feb 20 13:08:47 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	intentry,global,class=CODE,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 2.20
    22                           ; Generated 12/02/2020 GMT
    23                           ; 
    24                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F887 Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  008F                     	;# 
   100  0090                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0093                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0095                     	;# 
   108  0096                     	;# 
   109  0097                     	;# 
   110  0098                     	;# 
   111  0099                     	;# 
   112  009A                     	;# 
   113  009B                     	;# 
   114  009C                     	;# 
   115  009D                     	;# 
   116  009E                     	;# 
   117  009F                     	;# 
   118  0105                     	;# 
   119  0107                     	;# 
   120  0108                     	;# 
   121  0109                     	;# 
   122  010C                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  0185                     	;# 
   128  0187                     	;# 
   129  0188                     	;# 
   130  0189                     	;# 
   131  018C                     	;# 
   132  018D                     	;# 
   133  0000                     	;# 
   134  0001                     	;# 
   135  0002                     	;# 
   136  0003                     	;# 
   137  0004                     	;# 
   138  0005                     	;# 
   139  0006                     	;# 
   140  0007                     	;# 
   141  0008                     	;# 
   142  0009                     	;# 
   143  000A                     	;# 
   144  000B                     	;# 
   145  000C                     	;# 
   146  000D                     	;# 
   147  000E                     	;# 
   148  000E                     	;# 
   149  000F                     	;# 
   150  0010                     	;# 
   151  0011                     	;# 
   152  0012                     	;# 
   153  0013                     	;# 
   154  0014                     	;# 
   155  0015                     	;# 
   156  0015                     	;# 
   157  0016                     	;# 
   158  0017                     	;# 
   159  0018                     	;# 
   160  0019                     	;# 
   161  001A                     	;# 
   162  001B                     	;# 
   163  001B                     	;# 
   164  001C                     	;# 
   165  001D                     	;# 
   166  001E                     	;# 
   167  001F                     	;# 
   168  0081                     	;# 
   169  0085                     	;# 
   170  0086                     	;# 
   171  0087                     	;# 
   172  0088                     	;# 
   173  0089                     	;# 
   174  008C                     	;# 
   175  008D                     	;# 
   176  008E                     	;# 
   177  008F                     	;# 
   178  0090                     	;# 
   179  0091                     	;# 
   180  0092                     	;# 
   181  0093                     	;# 
   182  0093                     	;# 
   183  0093                     	;# 
   184  0094                     	;# 
   185  0095                     	;# 
   186  0096                     	;# 
   187  0097                     	;# 
   188  0098                     	;# 
   189  0099                     	;# 
   190  009A                     	;# 
   191  009B                     	;# 
   192  009C                     	;# 
   193  009D                     	;# 
   194  009E                     	;# 
   195  009F                     	;# 
   196  0105                     	;# 
   197  0107                     	;# 
   198  0108                     	;# 
   199  0109                     	;# 
   200  010C                     	;# 
   201  010C                     	;# 
   202  010D                     	;# 
   203  010E                     	;# 
   204  010F                     	;# 
   205  0185                     	;# 
   206  0187                     	;# 
   207  0188                     	;# 
   208  0189                     	;# 
   209  018C                     	;# 
   210  018D                     	;# 
   211  0000                     	;# 
   212  0001                     	;# 
   213  0002                     	;# 
   214  0003                     	;# 
   215  0004                     	;# 
   216  0005                     	;# 
   217  0006                     	;# 
   218  0007                     	;# 
   219  0008                     	;# 
   220  0009                     	;# 
   221  000A                     	;# 
   222  000B                     	;# 
   223  000C                     	;# 
   224  000D                     	;# 
   225  000E                     	;# 
   226  000E                     	;# 
   227  000F                     	;# 
   228  0010                     	;# 
   229  0011                     	;# 
   230  0012                     	;# 
   231  0013                     	;# 
   232  0014                     	;# 
   233  0015                     	;# 
   234  0015                     	;# 
   235  0016                     	;# 
   236  0017                     	;# 
   237  0018                     	;# 
   238  0019                     	;# 
   239  001A                     	;# 
   240  001B                     	;# 
   241  001B                     	;# 
   242  001C                     	;# 
   243  001D                     	;# 
   244  001E                     	;# 
   245  001F                     	;# 
   246  0081                     	;# 
   247  0085                     	;# 
   248  0086                     	;# 
   249  0087                     	;# 
   250  0088                     	;# 
   251  0089                     	;# 
   252  008C                     	;# 
   253  008D                     	;# 
   254  008E                     	;# 
   255  008F                     	;# 
   256  0090                     	;# 
   257  0091                     	;# 
   258  0092                     	;# 
   259  0093                     	;# 
   260  0093                     	;# 
   261  0093                     	;# 
   262  0094                     	;# 
   263  0095                     	;# 
   264  0096                     	;# 
   265  0097                     	;# 
   266  0098                     	;# 
   267  0099                     	;# 
   268  009A                     	;# 
   269  009B                     	;# 
   270  009C                     	;# 
   271  009D                     	;# 
   272  009E                     	;# 
   273  009F                     	;# 
   274  0105                     	;# 
   275  0107                     	;# 
   276  0108                     	;# 
   277  0109                     	;# 
   278  010C                     	;# 
   279  010C                     	;# 
   280  010D                     	;# 
   281  010E                     	;# 
   282  010F                     	;# 
   283  0185                     	;# 
   284  0187                     	;# 
   285  0188                     	;# 
   286  0189                     	;# 
   287  018C                     	;# 
   288  018D                     	;# 
   289  0000                     	;# 
   290  0001                     	;# 
   291  0002                     	;# 
   292  0003                     	;# 
   293  0004                     	;# 
   294  0005                     	;# 
   295  0006                     	;# 
   296  0007                     	;# 
   297  0008                     	;# 
   298  0009                     	;# 
   299  000A                     	;# 
   300  000B                     	;# 
   301  000C                     	;# 
   302  000D                     	;# 
   303  000E                     	;# 
   304  000E                     	;# 
   305  000F                     	;# 
   306  0010                     	;# 
   307  0011                     	;# 
   308  0012                     	;# 
   309  0013                     	;# 
   310  0014                     	;# 
   311  0015                     	;# 
   312  0015                     	;# 
   313  0016                     	;# 
   314  0017                     	;# 
   315  0018                     	;# 
   316  0019                     	;# 
   317  001A                     	;# 
   318  001B                     	;# 
   319  001B                     	;# 
   320  001C                     	;# 
   321  001D                     	;# 
   322  001E                     	;# 
   323  001F                     	;# 
   324  0081                     	;# 
   325  0085                     	;# 
   326  0086                     	;# 
   327  0087                     	;# 
   328  0088                     	;# 
   329  0089                     	;# 
   330  008C                     	;# 
   331  008D                     	;# 
   332  008E                     	;# 
   333  008F                     	;# 
   334  0090                     	;# 
   335  0091                     	;# 
   336  0092                     	;# 
   337  0093                     	;# 
   338  0093                     	;# 
   339  0093                     	;# 
   340  0094                     	;# 
   341  0095                     	;# 
   342  0096                     	;# 
   343  0097                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009A                     	;# 
   347  009B                     	;# 
   348  009C                     	;# 
   349  009D                     	;# 
   350  009E                     	;# 
   351  009F                     	;# 
   352  0105                     	;# 
   353  0107                     	;# 
   354  0108                     	;# 
   355  0109                     	;# 
   356  010C                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  0185                     	;# 
   362  0187                     	;# 
   363  0188                     	;# 
   364  0189                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367                           
   368                           	psect	nvCOMMON
   369  0079                     __pnvCOMMON:
   370  0079                     _banderaADC:
   371  0079                     	ds	1
   372  0013                     _SSPBUF	set	19
   373  0014                     _SSPCON	set	20
   374  001F                     _ADCON0bits	set	31
   375  001F                     _ADCON0	set	31
   376  001E                     _ADRESH	set	30
   377  000C                     _PIR1bits	set	12
   378  000B                     _INTCON	set	11
   379  0005                     _PORTAbits	set	5
   380  0006                     _PORTB	set	6
   381  0008                     _PORTD	set	8
   382  0063                     _SSPIF	set	99
   383  0094                     _SSPSTAT	set	148
   384  008C                     _PIE1bits	set	140
   385  009F                     _ADCON1bits	set	159
   386  0094                     _SSPSTATbits	set	148
   387  0088                     _TRISD	set	136
   388  0086                     _TRISB	set	134
   389  0087                     _TRISC	set	135
   390  0085                     _TRISAbits	set	133
   391  043B                     _TRISC3	set	1083
   392  043D                     _TRISC5	set	1085
   393  0463                     _SSPIE	set	1123
   394  0188                     _ANSEL	set	392
   395                           
   396                           	psect	cinit
   397  000F                     start_initialization:	
   398                           ; #config settings
   399                           
   400  000F                     __initialization:
   401                           
   402                           ; Clear objects allocated to COMMON
   403  000F  01F7               	clrf	__pbssCOMMON& (0+127)
   404  0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   405  0011                     end_of_initialization:	
   406                           ;End of C runtime variable initialization code
   407                           
   408  0011                     __end_of__initialization:
   409  0011  0183               	clrf	3
   410  0012  120A  118A  2885   	ljmp	_main	;jump to C main() function
   411                           
   412                           	psect	bssCOMMON
   413  0077                     __pbssCOMMON:
   414  0077                     _esclavo1:
   415  0077                     	ds	1
   416  0078                     _adc:
   417  0078                     	ds	1
   418                           
   419                           	psect	cstackCOMMON
   420  0070                     __pcstackCOMMON:
   421  0070                     ?_spiRead:
   422  0070                     ??_spiRead:	
   423                           ; 1 bytes @ 0x0
   424                           
   425  0070                     ?_spiWrite:	
   426                           ; 1 bytes @ 0x0
   427                           
   428  0070                     ??_spiWrite:	
   429                           ; 1 bytes @ 0x0
   430                           
   431  0070                     ?_AADC:	
   432                           ; 1 bytes @ 0x0
   433                           
   434  0070                     ?_setup:	
   435                           ; 1 bytes @ 0x0
   436                           
   437  0070                     ?_ISR:	
   438                           ; 1 bytes @ 0x0
   439                           
   440  0070                     ?_main:	
   441                           ; 1 bytes @ 0x0
   442                           
   443  0070                     ?_spiReceiveWait:	
   444                           ; 1 bytes @ 0x0
   445                           
   446  0070                     ??_spiReceiveWait:	
   447                           ; 1 bytes @ 0x0
   448                           
   449  0070                     spiWrite@dat:	
   450                           ; 1 bytes @ 0x0
   451                           
   452                           
   453                           ; 1 bytes @ 0x0
   454  0070                     	ds	1
   455  0071                     ??_ISR:
   456                           
   457                           ; 1 bytes @ 0x1
   458  0071                     	ds	3
   459  0074                     ?_spiInit:
   460  0074                     ??_AADC:	
   461                           ; 1 bytes @ 0x4
   462                           
   463  0074                     ??_setup:	
   464                           ; 1 bytes @ 0x4
   465                           
   466  0074                     spiInit@sDataSample:	
   467                           ; 1 bytes @ 0x4
   468                           
   469                           
   470                           ; 1 bytes @ 0x4
   471  0074                     	ds	1
   472  0075                     AADC@banderaADC:
   473  0075                     spiInit@sClockIdle:	
   474                           ; 1 bytes @ 0x5
   475                           
   476                           
   477                           ; 1 bytes @ 0x5
   478  0075                     	ds	1
   479  0076                     spiInit@sTransmitEdge:
   480                           
   481                           ; 1 bytes @ 0x6
   482  0076                     	ds	1
   483  0077                     ??_spiInit:
   484  0077                     ??_main:	
   485                           ; 1 bytes @ 0x7
   486                           
   487                           
   488                           	psect	cstackBANK0
   489  0020                     __pcstackBANK0:	
   490                           ; 1 bytes @ 0x7
   491                           
   492  0020                     spiInit@sType:
   493                           
   494                           ; 1 bytes @ 0x0
   495  0020                     	ds	1
   496                           
   497                           	psect	maintext
   498  0085                     __pmaintext:	
   499 ;;
   500 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   501 ;;
   502 ;; *************** function _main *****************
   503 ;; Defined at:
   504 ;;		line 86 in file "main.c"
   505 ;; Parameters:    Size  Location     Type
   506 ;;		None
   507 ;; Auto vars:     Size  Location     Type
   508 ;;		None
   509 ;; Return value:  Size  Location     Type
   510 ;;                  1    wreg      void 
   511 ;; Registers used:
   512 ;;		wreg, status,2, status,0, pclath, cstack
   513 ;; Tracked objects:
   514 ;;		On entry : B00/0
   515 ;;		On exit  : 0/0
   516 ;;		Unchanged: 0/0
   517 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   518 ;;      Params:         0       0       0       0       0
   519 ;;      Locals:         0       0       0       0       0
   520 ;;      Temps:          0       0       0       0       0
   521 ;;      Totals:         0       0       0       0       0
   522 ;;Total ram usage:        0 bytes
   523 ;; Hardware stack levels required when called:    4
   524 ;; This function calls:
   525 ;;		_AADC
   526 ;;		_setup
   527 ;;		_spiInit
   528 ;; This function is called by:
   529 ;;		Startup code after reset
   530 ;; This function uses a non-reentrant model
   531 ;;
   532                           
   533                           
   534                           ;psect for function _main
   535  0085                     _main:
   536  0085                     l822:	
   537                           ;incstack = 0
   538                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   539                           
   540                           
   541                           ;main.c: 87:     setup();
   542  0085  120A  118A  20A0  120A  118A  	fcall	_setup
   543  008A                     l824:
   544                           
   545                           ;main.c: 88:     banderaADC = 1;
   546  008A  01F9               	clrf	_banderaADC
   547  008B  0AF9               	incf	_banderaADC,f
   548  008C                     l826:
   549                           
   550                           ;main.c: 89:     esclavo1 = 0;
   551  008C  01F7               	clrf	_esclavo1
   552  008D                     l828:
   553                           
   554                           ;main.c: 90:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_IDLE_LOW, SP
      +                          I_IDLE_2_ACTIVE);
   555  008D  01F4               	clrf	spiInit@sDataSample
   556  008E  01F5               	clrf	spiInit@sClockIdle
   557  008F  01F6               	clrf	spiInit@sTransmitEdge
   558  0090  3024               	movlw	36
   559  0091  120A  118A  2067  120A  118A  	fcall	_spiInit
   560  0096                     l830:
   561                           
   562                           ;main.c: 92:         AADC(banderaADC);
   563  0096  0879               	movf	_banderaADC,w
   564  0097  120A  118A  2046  120A  118A  	fcall	_AADC
   565  009C  2896               	goto	l830
   566  009D  120A  118A  280C   	ljmp	start
   567  00A0                     __end_of_main:
   568                           
   569                           	psect	text1
   570  0067                     __ptext1:	
   571 ;; *************** function _spiInit *****************
   572 ;; Defined at:
   573 ;;		line 13 in file "SPI.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;  sType           1    wreg     enum E1264
   576 ;;  sDataSample     1    4[COMMON] enum E1272
   577 ;;  sClockIdle      1    5[COMMON] enum E1276
   578 ;;  sTransmitEdg    1    6[COMMON] enum E1280
   579 ;; Auto vars:     Size  Location     Type
   580 ;;  sType           1    0[BANK0 ] enum E1264
   581 ;; Return value:  Size  Location     Type
   582 ;;                  1    wreg      void 
   583 ;; Registers used:
   584 ;;		wreg, status,2, status,0
   585 ;; Tracked objects:
   586 ;;		On entry : 0/0
   587 ;;		On exit  : 0/0
   588 ;;		Unchanged: 0/0
   589 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   590 ;;      Params:         3       0       0       0       0
   591 ;;      Locals:         0       1       0       0       0
   592 ;;      Temps:          0       0       0       0       0
   593 ;;      Totals:         3       1       0       0       0
   594 ;;Total ram usage:        4 bytes
   595 ;; Hardware stack levels used:    1
   596 ;; Hardware stack levels required when called:    3
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           
   605                           ;psect for function _spiInit
   606  0067                     _spiInit:
   607                           
   608                           ;incstack = 0
   609                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   610                           ;spiInit@sType stored from wreg
   611  0067  1283               	bcf	3,5	;RP0=0, select bank0
   612  0068  1303               	bcf	3,6	;RP1=0, select bank0
   613  0069  00A0               	movwf	spiInit@sType
   614  006A                     l812:
   615                           
   616                           ;SPI.c: 13: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 14: {;SPI.c: 15:     TRISC5 = 0;
   617  006A  1683               	bsf	3,5	;RP0=1, select bank1
   618  006B  1303               	bcf	3,6	;RP1=0, select bank1
   619  006C  1287               	bcf	7,5	;volatile
   620                           
   621                           ;SPI.c: 16:     if(sType & 0b00000100)
   622  006D  1283               	bcf	3,5	;RP0=0, select bank0
   623  006E  1303               	bcf	3,6	;RP1=0, select bank0
   624  006F  1D20               	btfss	spiInit@sType,2
   625  0070  2872               	goto	u81
   626  0071  2873               	goto	u80
   627  0072                     u81:
   628  0072  2879               	goto	l818
   629  0073                     u80:
   630  0073                     l814:
   631                           
   632                           ;SPI.c: 17:     {;SPI.c: 18:         SSPSTAT = sTransmitEdge;
   633  0073  0876               	movf	spiInit@sTransmitEdge,w
   634  0074  1683               	bsf	3,5	;RP0=1, select bank1
   635  0075  1303               	bcf	3,6	;RP1=0, select bank1
   636  0076  0094               	movwf	20	;volatile
   637  0077                     l816:
   638                           
   639                           ;SPI.c: 19:         TRISC3 = 1;
   640  0077  1587               	bsf	7,3	;volatile
   641                           
   642                           ;SPI.c: 20:     }
   643  0078  287F               	goto	l96
   644  0079                     l818:
   645                           
   646                           ;SPI.c: 22:     {;SPI.c: 23:         SSPSTAT = sDataSample | sTransmitEdge;
   647  0079  0874               	movf	spiInit@sDataSample,w
   648  007A  0476               	iorwf	spiInit@sTransmitEdge,w
   649  007B  1683               	bsf	3,5	;RP0=1, select bank1
   650  007C  1303               	bcf	3,6	;RP1=0, select bank1
   651  007D  0094               	movwf	20	;volatile
   652  007E                     l820:
   653                           
   654                           ;SPI.c: 24:         TRISC3 = 0;
   655  007E  1187               	bcf	7,3	;volatile
   656  007F                     l96:	
   657                           ;SPI.c: 25:     }
   658                           
   659                           
   660                           ;SPI.c: 27:     SSPCON = sType | sClockIdle;
   661  007F  1283               	bcf	3,5	;RP0=0, select bank0
   662  0080  1303               	bcf	3,6	;RP1=0, select bank0
   663  0081  0820               	movf	spiInit@sType,w
   664  0082  0475               	iorwf	spiInit@sClockIdle,w
   665  0083  0094               	movwf	20	;volatile
   666  0084                     l97:
   667  0084  0008               	return
   668  0085                     __end_of_spiInit:
   669                           
   670                           	psect	text2
   671  00A0                     __ptext2:	
   672 ;; *************** function _setup *****************
   673 ;; Defined at:
   674 ;;		line 48 in file "main.c"
   675 ;; Parameters:    Size  Location     Type
   676 ;;		None
   677 ;; Auto vars:     Size  Location     Type
   678 ;;		None
   679 ;; Return value:  Size  Location     Type
   680 ;;                  1    wreg      void 
   681 ;; Registers used:
   682 ;;		wreg, status,2
   683 ;; Tracked objects:
   684 ;;		On entry : 0/0
   685 ;;		On exit  : 0/0
   686 ;;		Unchanged: 0/0
   687 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   688 ;;      Params:         0       0       0       0       0
   689 ;;      Locals:         0       0       0       0       0
   690 ;;      Temps:          0       0       0       0       0
   691 ;;      Totals:         0       0       0       0       0
   692 ;;Total ram usage:        0 bytes
   693 ;; Hardware stack levels used:    1
   694 ;; Hardware stack levels required when called:    3
   695 ;; This function calls:
   696 ;;		Nothing
   697 ;; This function is called by:
   698 ;;		_main
   699 ;; This function uses a non-reentrant model
   700 ;;
   701                           
   702                           
   703                           ;psect for function _setup
   704  00A0                     _setup:
   705  00A0                     l708:	
   706                           ;incstack = 0
   707                           ; Regs used in _setup: [wreg+status,2]
   708                           
   709                           
   710                           ;main.c: 50:     TRISAbits.TRISA5 = 1;
   711  00A0  1683               	bsf	3,5	;RP0=1, select bank1
   712  00A1  1303               	bcf	3,6	;RP1=0, select bank1
   713  00A2  1685               	bsf	5,5	;volatile
   714  00A3                     l710:
   715                           
   716                           ;main.c: 52:     TRISC = 0b00011000;
   717  00A3  3018               	movlw	24
   718  00A4  0087               	movwf	7	;volatile
   719                           
   720                           ;main.c: 53:     TRISB = 0b00000001;
   721  00A5  3001               	movlw	1
   722  00A6  0086               	movwf	6	;volatile
   723  00A7                     l712:
   724                           
   725                           ;main.c: 54:     TRISD = 0b00000000;
   726  00A7  0188               	clrf	8	;volatile
   727  00A8                     l714:
   728                           
   729                           ;main.c: 55:     PORTD = 0;
   730  00A8  1283               	bcf	3,5	;RP0=0, select bank0
   731  00A9  1303               	bcf	3,6	;RP1=0, select bank0
   732  00AA  0188               	clrf	8	;volatile
   733  00AB                     l716:
   734                           
   735                           ;main.c: 56:     PORTB = 0;
   736  00AB  0186               	clrf	6	;volatile
   737  00AC                     l718:
   738                           
   739                           ;main.c: 57:     SSPIF = 0;
   740  00AC  118C               	bcf	12,3	;volatile
   741  00AD                     l720:
   742                           
   743                           ;main.c: 58:     PORTAbits.RA5=1;
   744  00AD  1685               	bsf	5,5	;volatile
   745  00AE                     l722:
   746                           
   747                           ;main.c: 59:     SSPIE = 1;
   748  00AE  1683               	bsf	3,5	;RP0=1, select bank1
   749  00AF  1303               	bcf	3,6	;RP1=0, select bank1
   750  00B0  158C               	bsf	12,3	;volatile
   751  00B1                     l724:
   752                           
   753                           ;main.c: 60:     INTCON = 0b11101000;
   754  00B1  30E8               	movlw	232
   755  00B2  008B               	movwf	11	;volatile
   756  00B3                     l43:
   757  00B3  0008               	return
   758  00B4                     __end_of_setup:
   759                           
   760                           	psect	text3
   761  0046                     __ptext3:	
   762 ;; *************** function _AADC *****************
   763 ;; Defined at:
   764 ;;		line 15 in file "Libreria_ADC.c"
   765 ;; Parameters:    Size  Location     Type
   766 ;;  banderaADC      1    wreg     unsigned char 
   767 ;; Auto vars:     Size  Location     Type
   768 ;;  banderaADC      1    5[COMMON] unsigned char 
   769 ;; Return value:  Size  Location     Type
   770 ;;                  1    wreg      void 
   771 ;; Registers used:
   772 ;;		wreg, status,2, status,0
   773 ;; Tracked objects:
   774 ;;		On entry : 0/0
   775 ;;		On exit  : 0/0
   776 ;;		Unchanged: 0/0
   777 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   778 ;;      Params:         0       0       0       0       0
   779 ;;      Locals:         1       0       0       0       0
   780 ;;      Temps:          1       0       0       0       0
   781 ;;      Totals:         2       0       0       0       0
   782 ;;Total ram usage:        2 bytes
   783 ;; Hardware stack levels used:    1
   784 ;; Hardware stack levels required when called:    3
   785 ;; This function calls:
   786 ;;		Nothing
   787 ;; This function is called by:
   788 ;;		_main
   789 ;; This function uses a non-reentrant model
   790 ;;
   791                           
   792                           
   793                           ;psect for function _AADC
   794  0046                     _AADC:
   795                           
   796                           ;incstack = 0
   797                           ; Regs used in _AADC: [wreg+status,2+status,0]
   798                           ;AADC@banderaADC stored from wreg
   799  0046  00F5               	movwf	AADC@banderaADC
   800  0047                     l744:
   801                           
   802                           ;Libreria_ADC.c: 16:     ADCON1bits.ADFM = 0;
   803  0047  1683               	bsf	3,5	;RP0=1, select bank1
   804  0048  1303               	bcf	3,6	;RP1=0, select bank1
   805  0049  139F               	bcf	31,7	;volatile
   806  004A                     l746:
   807                           
   808                           ;Libreria_ADC.c: 17:     INTCON = 0b11101000;
   809  004A  30E8               	movlw	232
   810  004B  008B               	movwf	11	;volatile
   811                           
   812                           ;Libreria_ADC.c: 19:     ANSEL = 0b00001100;
   813  004C  300C               	movlw	12
   814  004D  1683               	bsf	3,5	;RP0=1, select bank3
   815  004E  1703               	bsf	3,6	;RP1=1, select bank3
   816  004F  0088               	movwf	8	;volatile
   817                           
   818                           ;Libreria_ADC.c: 20:     ADCON0 = 0b01110001;
   819  0050  3071               	movlw	113
   820  0051  1283               	bcf	3,5	;RP0=0, select bank0
   821  0052  1303               	bcf	3,6	;RP1=0, select bank0
   822  0053  009F               	movwf	31	;volatile
   823  0054                     l748:
   824                           
   825                           ;Libreria_ADC.c: 21:     PIE1bits.ADIE = 1;
   826  0054  1683               	bsf	3,5	;RP0=1, select bank1
   827  0055  1303               	bcf	3,6	;RP1=0, select bank1
   828  0056  170C               	bsf	12,6	;volatile
   829  0057                     l750:
   830                           
   831                           ;Libreria_ADC.c: 22:     PIR1bits.ADIF = 0;
   832  0057  1283               	bcf	3,5	;RP0=0, select bank0
   833  0058  1303               	bcf	3,6	;RP1=0, select bank0
   834  0059  130C               	bcf	12,6	;volatile
   835  005A                     l752:
   836                           
   837                           ;Libreria_ADC.c: 23:     if (banderaADC == 1){
   838  005A  0375               	decf	AADC@banderaADC,w
   839  005B  1D03               	btfss	3,2
   840  005C  285E               	goto	u31
   841  005D  285F               	goto	u30
   842  005E                     u31:
   843  005E  2866               	goto	l80
   844  005F                     u30:
   845  005F                     l754:
   846                           
   847                           ;Libreria_ADC.c: 24:         _delay((unsigned long)((20)*(8000000/4000000.0)));
   848  005F  300D               	movlw	13
   849  0060  00F4               	movwf	??_AADC
   850  0061                     u97:
   851  0061  0BF4               	decfsz	??_AADC,f
   852  0062  2861               	goto	u97
   853  0063                     l756:
   854                           
   855                           ;Libreria_ADC.c: 25:         ADCON0bits.GO = 1;
   856  0063  1283               	bcf	3,5	;RP0=0, select bank0
   857  0064  1303               	bcf	3,6	;RP1=0, select bank0
   858  0065  149F               	bsf	31,1	;volatile
   859  0066                     l758:
   860  0066                     l80:
   861  0066  0008               	return
   862  0067                     __end_of_AADC:
   863                           
   864                           	psect	text4
   865  0015                     __ptext4:	
   866 ;; *************** function _ISR *****************
   867 ;; Defined at:
   868 ;;		line 70 in file "main.c"
   869 ;; Parameters:    Size  Location     Type
   870 ;;		None
   871 ;; Auto vars:     Size  Location     Type
   872 ;;		None
   873 ;; Return value:  Size  Location     Type
   874 ;;                  1    wreg      void 
   875 ;; Registers used:
   876 ;;		wreg, status,2, status,0, pclath, cstack
   877 ;; Tracked objects:
   878 ;;		On entry : 0/0
   879 ;;		On exit  : 0/0
   880 ;;		Unchanged: 0/0
   881 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   882 ;;      Params:         0       0       0       0       0
   883 ;;      Locals:         0       0       0       0       0
   884 ;;      Temps:          3       0       0       0       0
   885 ;;      Totals:         3       0       0       0       0
   886 ;;Total ram usage:        3 bytes
   887 ;; Hardware stack levels used:    1
   888 ;; Hardware stack levels required when called:    2
   889 ;; This function calls:
   890 ;;		_spiRead
   891 ;;		_spiWrite
   892 ;; This function is called by:
   893 ;;		Interrupt level 1
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           
   898                           ;psect for function _ISR
   899  0015                     _ISR:
   900  0015                     i1l760:
   901                           
   902                           ;main.c: 72:     if (PIR1bits.ADIF == 1) {
   903  0015  1283               	bcf	3,5	;RP0=0, select bank0
   904  0016  1303               	bcf	3,6	;RP1=0, select bank0
   905  0017  1F0C               	btfss	12,6	;volatile
   906  0018  281A               	goto	u4_21
   907  0019  281B               	goto	u4_20
   908  001A                     u4_21:
   909  001A  2824               	goto	i1l768
   910  001B                     u4_20:
   911  001B                     i1l762:
   912                           
   913                           ;main.c: 73:         banderaADC = 1;
   914  001B  01F9               	clrf	_banderaADC
   915  001C  0AF9               	incf	_banderaADC,f
   916  001D                     i1l764:
   917                           
   918                           ;main.c: 74:         adc = ADRESH;
   919  001D  081E               	movf	30,w	;volatile
   920  001E  00F1               	movwf	??_ISR
   921  001F  0871               	movf	??_ISR,w
   922  0020  00F8               	movwf	_adc
   923                           
   924                           ;main.c: 75:         PORTD = adc;
   925  0021  0878               	movf	_adc,w
   926  0022  0088               	movwf	8	;volatile
   927  0023                     i1l766:
   928                           
   929                           ;main.c: 76:         PIR1bits.ADIF = 0;
   930  0023  130C               	bcf	12,6	;volatile
   931  0024                     i1l768:
   932                           
   933                           ;main.c: 79:     if (PIR1bits.SSPIF == 1 && SSPSTATbits.BF == 1) {
   934  0024  1D8C               	btfss	12,3	;volatile
   935  0025  2827               	goto	u5_21
   936  0026  2828               	goto	u5_20
   937  0027                     u5_21:
   938  0027  283F               	goto	i1l50
   939  0028                     u5_20:
   940  0028                     i1l770:
   941  0028  1683               	bsf	3,5	;RP0=1, select bank1
   942  0029  1303               	bcf	3,6	;RP1=0, select bank1
   943  002A  1C14               	btfss	20,0	;volatile
   944  002B  282D               	goto	u6_21
   945  002C  282E               	goto	u6_20
   946  002D                     u6_21:
   947  002D  283F               	goto	i1l50
   948  002E                     u6_20:
   949  002E                     i1l772:
   950                           
   951                           ;main.c: 80:         esclavo1 = spiRead();
   952  002E  120A  118A  20B4  120A  118A  	fcall	_spiRead
   953  0033  00F1               	movwf	??_ISR
   954  0034  0871               	movf	??_ISR,w
   955  0035  00F7               	movwf	_esclavo1
   956                           
   957                           ;main.c: 81:         spiWrite(adc);
   958  0036  0878               	movf	_adc,w
   959  0037  120A  118A  20C4  120A  118A  	fcall	_spiWrite
   960  003C                     i1l774:
   961                           
   962                           ;main.c: 82:         PIR1bits.SSPIF = 0;
   963  003C  1283               	bcf	3,5	;RP0=0, select bank0
   964  003D  1303               	bcf	3,6	;RP1=0, select bank0
   965  003E  118C               	bcf	12,3	;volatile
   966  003F                     i1l50:
   967  003F  0873               	movf	??_ISR+2,w
   968  0040  008A               	movwf	10
   969  0041  0E72               	swapf	??_ISR+1,w
   970  0042  0083               	movwf	3
   971  0043  0EFE               	swapf	btemp,f
   972  0044  0E7E               	swapf	btemp,w
   973  0045  0009               	retfie
   974  0046                     __end_of_ISR:
   975                           
   976                           	psect	intentry
   977  0004                     __pintentry:	
   978                           ;incstack = 0
   979                           ; Regs used in _ISR: [wreg+status,2+status,0+pclath+cstack]
   980                           
   981  0004                     interrupt_function:
   982  007E                     saved_w	set	btemp
   983  0004  00FE               	movwf	btemp
   984  0005  0E03               	swapf	3,w
   985  0006  00F2               	movwf	??_ISR+1
   986  0007  080A               	movf	10,w
   987  0008  00F3               	movwf	??_ISR+2
   988  0009  120A  118A  2815   	ljmp	_ISR
   989                           
   990                           	psect	text5
   991  00C4                     __ptext5:	
   992 ;; *************** function _spiWrite *****************
   993 ;; Defined at:
   994 ;;		line 35 in file "SPI.c"
   995 ;; Parameters:    Size  Location     Type
   996 ;;  dat             1    wreg     unsigned char 
   997 ;; Auto vars:     Size  Location     Type
   998 ;;  dat             1    0[COMMON] unsigned char 
   999 ;; Return value:  Size  Location     Type
  1000 ;;                  1    wreg      void 
  1001 ;; Registers used:
  1002 ;;		wreg
  1003 ;; Tracked objects:
  1004 ;;		On entry : 0/0
  1005 ;;		On exit  : 0/0
  1006 ;;		Unchanged: 0/0
  1007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1008 ;;      Params:         0       0       0       0       0
  1009 ;;      Locals:         1       0       0       0       0
  1010 ;;      Temps:          0       0       0       0       0
  1011 ;;      Totals:         1       0       0       0       0
  1012 ;;Total ram usage:        1 bytes
  1013 ;; Hardware stack levels used:    1
  1014 ;; This function calls:
  1015 ;;		Nothing
  1016 ;; This function is called by:
  1017 ;;		_ISR
  1018 ;; This function uses a non-reentrant model
  1019 ;;
  1020                           
  1021                           
  1022                           ;psect for function _spiWrite
  1023  00C4                     _spiWrite:
  1024                           
  1025                           ;incstack = 0
  1026                           ; Regs used in _spiWrite: [wreg]
  1027                           ;spiWrite@dat stored from wreg
  1028  00C4  00F0               	movwf	spiWrite@dat
  1029  00C5                     i1l732:
  1030                           
  1031                           ;SPI.c: 35: void spiWrite(char dat);SPI.c: 36: {;SPI.c: 37:     SSPBUF = dat;
  1032  00C5  0870               	movf	spiWrite@dat,w
  1033  00C6  1283               	bcf	3,5	;RP0=0, select bank0
  1034  00C7  1303               	bcf	3,6	;RP1=0, select bank0
  1035  00C8  0093               	movwf	19	;volatile
  1036  00C9                     i1l106:
  1037  00C9  0008               	return
  1038  00CA                     __end_of_spiWrite:
  1039                           
  1040                           	psect	text6
  1041  00B4                     __ptext6:	
  1042 ;; *************** function _spiRead *****************
  1043 ;; Defined at:
  1044 ;;		line 48 in file "SPI.c"
  1045 ;; Parameters:    Size  Location     Type
  1046 ;;		None
  1047 ;; Auto vars:     Size  Location     Type
  1048 ;;		None
  1049 ;; Return value:  Size  Location     Type
  1050 ;;                  1    wreg      unsigned char 
  1051 ;; Registers used:
  1052 ;;		wreg, status,2, status,0, pclath, cstack
  1053 ;; Tracked objects:
  1054 ;;		On entry : 0/0
  1055 ;;		On exit  : 0/0
  1056 ;;		Unchanged: 0/0
  1057 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1058 ;;      Params:         0       0       0       0       0
  1059 ;;      Locals:         0       0       0       0       0
  1060 ;;      Temps:          0       0       0       0       0
  1061 ;;      Totals:         0       0       0       0       0
  1062 ;;Total ram usage:        0 bytes
  1063 ;; Hardware stack levels used:    1
  1064 ;; Hardware stack levels required when called:    1
  1065 ;; This function calls:
  1066 ;;		_spiReceiveWait
  1067 ;; This function is called by:
  1068 ;;		_ISR
  1069 ;; This function uses a non-reentrant model
  1070 ;;
  1071                           
  1072                           
  1073                           ;psect for function _spiRead
  1074  00B4                     _spiRead:
  1075  00B4                     i1l726:	
  1076                           ;incstack = 0
  1077                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1078                           
  1079                           
  1080                           ;SPI.c: 50:     spiReceiveWait();
  1081  00B4  120A  118A  20BD  120A  118A  	fcall	_spiReceiveWait
  1082  00B9                     i1l728:
  1083                           
  1084                           ;SPI.c: 51:     return(SSPBUF);
  1085  00B9  1283               	bcf	3,5	;RP0=0, select bank0
  1086  00BA  1303               	bcf	3,6	;RP1=0, select bank0
  1087  00BB  0813               	movf	19,w	;volatile
  1088  00BC                     i1l114:
  1089  00BC  0008               	return
  1090  00BD                     __end_of_spiRead:
  1091                           
  1092                           	psect	text7
  1093  00BD                     __ptext7:	
  1094 ;; *************** function _spiReceiveWait *****************
  1095 ;; Defined at:
  1096 ;;		line 30 in file "SPI.c"
  1097 ;; Parameters:    Size  Location     Type
  1098 ;;		None
  1099 ;; Auto vars:     Size  Location     Type
  1100 ;;		None
  1101 ;; Return value:  Size  Location     Type
  1102 ;;                  1    wreg      void 
  1103 ;; Registers used:
  1104 ;;		None
  1105 ;; Tracked objects:
  1106 ;;		On entry : 0/0
  1107 ;;		On exit  : 0/0
  1108 ;;		Unchanged: 0/0
  1109 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1110 ;;      Params:         0       0       0       0       0
  1111 ;;      Locals:         0       0       0       0       0
  1112 ;;      Temps:          0       0       0       0       0
  1113 ;;      Totals:         0       0       0       0       0
  1114 ;;Total ram usage:        0 bytes
  1115 ;; Hardware stack levels used:    1
  1116 ;; This function calls:
  1117 ;;		Nothing
  1118 ;; This function is called by:
  1119 ;;		_spiRead
  1120 ;; This function uses a non-reentrant model
  1121 ;;
  1122                           
  1123                           
  1124                           ;psect for function _spiReceiveWait
  1125  00BD                     _spiReceiveWait:
  1126  00BD                     i1l706:	
  1127                           ;incstack = 0
  1128                           ; Regs used in _spiReceiveWait: []
  1129                           
  1130  00BD                     i1l100:	
  1131                           ;SPI.c: 32:     while ( !SSPSTATbits.BF );
  1132                           
  1133  00BD  1683               	bsf	3,5	;RP0=1, select bank1
  1134  00BE  1303               	bcf	3,6	;RP1=0, select bank1
  1135  00BF  1C14               	btfss	20,0	;volatile
  1136  00C0  28C2               	goto	u1_21
  1137  00C1  28C3               	goto	u1_20
  1138  00C2                     u1_21:
  1139  00C2  28BD               	goto	i1l100
  1140  00C3                     u1_20:
  1141  00C3                     i1l103:
  1142  00C3  0008               	return
  1143  00C4                     __end_of_spiReceiveWait:
  1144  007E                     btemp	set	126	;btemp
  1145  007E                     wtemp0	set	126
  1146                           
  1147                           	psect	config
  1148                           
  1149                           ;Config register CONFIG1 @ 0x2007
  1150                           ;	Oscillator Selection bits
  1151                           ;	FOSC = INTRC_CLKOUT, INTOSC oscillator: CLKOUT function on RA6/OSC2/CLKOUT pin, I/O fu
      +                          nction on RA7/OSC1/CLKIN
  1152                           ;	Watchdog Timer Enable bit
  1153                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1154                           ;	Power-up Timer Enable bit
  1155                           ;	PWRTE = OFF, PWRT disabled
  1156                           ;	RE3/MCLR pin function select bit
  1157                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1158                           ;	Code Protection bit
  1159                           ;	CP = OFF, Program memory code protection is disabled
  1160                           ;	Data Code Protection bit
  1161                           ;	CPD = OFF, Data memory code protection is disabled
  1162                           ;	Brown Out Reset Selection bits
  1163                           ;	BOREN = OFF, BOR disabled
  1164                           ;	Internal External Switchover bit
  1165                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1166                           ;	Fail-Safe Clock Monitor Enabled bit
  1167                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1168                           ;	Low Voltage Programming Enable bit
  1169                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1170                           ;	In-Circuit Debugger Mode bit
  1171                           ;	DEBUG = 0x1, unprogrammed default
  1172  2007                     	org	8199
  1173  2007  20D5               	dw	8405
  1174                           
  1175                           ;Config register CONFIG2 @ 0x2008
  1176                           ;	Brown-out Reset Selection bit
  1177                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1178                           ;	Flash Program Memory Self Write Enable bits
  1179                           ;	WRT = OFF, Write protection off
  1180  2008                     	org	8200
  1181  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         2
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      1       1
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_spiInit

Critical Paths under _ISR in COMMON

    _ISR->_spiWrite

Critical Paths under _main in BANK0

    _main->_spiInit

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     471
                               _AADC
                              _setup
                            _spiInit
 ---------------------------------------------------------------------------------
 (1) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _AADC                                                 2     2      0      15
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (3) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (4) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _AADC
   _setup
   _spiInit

 _ISR (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      1       1       5        1.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       B      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sat Feb 20 13:08:47 2021

            _SSPSTATbits 0094                       l43 00B3                       l80 0066  
                     l96 007F                       l97 0084                       u30 005F  
                     u31 005E                       u80 0073                       u81 0072  
                     u97 0061                      l710 00A3                      l720 00AD  
                    l712 00A7                      l722 00AE                      l714 00A8  
                    l724 00B1                      l716 00AB                      l708 00A0  
                    l820 007E                      l812 006A                      l750 0057  
                    l718 00AC                      l814 0073                      l830 0096  
                    l822 0085                      l752 005A                      l744 0047  
                    l816 0077                      l824 008A                      l754 005F  
                    l746 004A                      l818 0079                      l826 008C  
                    l756 0063                      l748 0054                      l828 008D  
                    l758 0066                      _ISR 0015                      _adc 0078  
                   ?_ISR 0070                     _AADC 0046                     i1l50 003F  
         AADC@banderaADC 0075                     u1_20 00C3                     u1_21 00C2  
                   u4_20 001B                     u4_21 001A                     u5_20 0028  
                   u5_21 0027                     u6_20 002E                     u6_21 002D  
                   _main 0085                     btemp 007E                     start 000C  
                  ??_ISR 0071                    ?_AADC 0070                    ?_main 0070  
                  _ANSEL 0188                    i1l100 00BD                    i1l103 00C3  
                  i1l114 00BC                    i1l106 00C9                    i1l706 00BD  
                  i1l732 00C5                    i1l726 00B4                    i1l728 00B9  
                  i1l760 0015                    i1l770 0028                    i1l762 001B  
                  i1l772 002E                    i1l764 001D                    i1l774 003C  
                  i1l766 0023                    i1l768 0024                    _PORTB 0006  
                  _PORTD 0008                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _SSPIE 0463                    _SSPIF 0063  
                  _setup 00A0                    pclath 000A          __end_of_spiInit 0085  
        __end_of_spiRead 00BD                    status 0003                    wtemp0 007E  
           __end_of_AADC 0067          __initialization 000F             __end_of_main 00A0  
                 ??_AADC 0074                   ??_main 0077                   _ADCON0 001F  
                 _ADRESH 001E                   ?_setup 0070                   _INTCON 000B  
                 _TRISC3 043B                   _TRISC5 043D                   _SSPCON 0014  
                 _SSPBUF 0013                   saved_w 007E         __end_of_spiWrite 00CA  
              ??_spiInit 0077                ??_spiRead 0070  __end_of__initialization 0011  
         __pcstackCOMMON 0070            __end_of_setup 00B4               _banderaADC 0079  
                ??_setup 0074               __pnvCOMMON 0079               __pmaintext 0085  
             __pintentry 0004  __size_of_spiReceiveWait 0007                  _SSPSTAT 0094  
              ?_spiWrite 0070                  __ptext1 0067                  __ptext2 00A0  
                __ptext3 0046                  __ptext4 0015                  __ptext5 00C4  
                __ptext6 00B4                  __ptext7 00BD             __size_of_ISR 0031  
                _spiInit 0067                  _spiRead 00B4     end_of_initialization 0011  
             ??_spiWrite 0070                _PORTAbits 0005                _TRISAbits 0085  
            spiWrite@dat 0070           _spiReceiveWait 00BD      start_initialization 000F  
            __end_of_ISR 0046   __end_of_spiReceiveWait 00C4              __pbssCOMMON 0077  
              ___latbits 0002            __pcstackBANK0 0020          ?_spiReceiveWait 0070  
      __size_of_spiWrite 0006                 ?_spiInit 0074                 ?_spiRead 0070  
         __size_of_setup 0014     spiInit@sTransmitEdge 0076        interrupt_function 0004  
               _PIE1bits 008C       spiInit@sDataSample 0074                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F         __size_of_spiInit 001E  
       __size_of_spiRead 0009            __size_of_AADC 0021                 _esclavo1 0077  
          __size_of_main 001B                 _spiWrite 00C4             spiInit@sType 0020  
      spiInit@sClockIdle 0075                 intlevel1 0000         ??_spiReceiveWait 0070  
